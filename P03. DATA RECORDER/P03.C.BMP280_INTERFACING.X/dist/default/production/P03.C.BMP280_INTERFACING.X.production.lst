

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 08 10:55:19 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0006                     _PORTB	set	6
   186  0013                     _SSPBUF	set	19
   187  0014                     _SSPCON	set	20
   188  0039                     _RC1	set	57
   189  0038                     _RC0	set	56
   190  0063                     _SSPIF	set	99
   191  0087                     _TRISCbits	set	135
   192  0086                     _TRISBbits	set	134
   193  0093                     _SSPADD	set	147
   194  04A0                     _BF	set	1184
   195  048B                     _RCEN	set	1163
   196  048E                     _ACKSTAT	set	1166
   197  048C                     _ACKEN	set	1164
   198  048D                     _ACKDT	set	1165
   199  0489                     _RSEN	set	1161
   200  048A                     _PEN	set	1162
   201  0488                     _SEN	set	1160
   202  043C                     _TRISC4	set	1084
   203  043B                     _TRISC3	set	1083
   204                           
   205                           	psect	strings
   206  0003                     __pstrings:
   207  0003                     stringtab:
   208  0003                     __stringtab:
   209  0003                     stringcode:	
   210                           ;	String table - string pointers are 1 byte each
   211                           
   212  0003                     stringdir:
   213  0003  3000               	movlw	high stringdir
   214  0004  008A               	movwf	10
   215  0005  0804               	movf	4,w
   216  0006  0A84               	incf	4,f
   217  0007  0782               	addwf	2,f
   218  0008                     __stringbase:
   219  0008  3400               	retlw	0
   220  0009                     __end_of__stringtab:
   221  0009                     STR_1:
   222  0009  3442               	retlw	66	;'B'
   223  000A  344D               	retlw	77	;'M'
   224  000B  3450               	retlw	80	;'P'
   225  000C  3432               	retlw	50	;'2'
   226  000D  3438               	retlw	56	;'8'
   227  000E  3430               	retlw	48	;'0'
   228  000F  3400               	retlw	0
   229                           
   230                           	psect	cinit
   231  07E9                     start_initialization:	
   232                           ; #config settings
   233                           
   234  07E9                     __initialization:
   235                           
   236                           ; Clear objects allocated to COMMON
   237  07E9  01FB               	clrf	__pbssCOMMON& (0+127)
   238  07EA  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   239                           
   240                           ; Clear objects allocated to BANK0
   241  07EB  1383               	bcf	3,7	;select IRP bank0
   242  07EC  3020               	movlw	low __pbssBANK0
   243  07ED  0084               	movwf	4
   244  07EE  306D               	movlw	low (__pbssBANK0+77)
   245  07EF  120A  118A  2434  120A  118A  	fcall	clear_ram0
   246                           
   247                           ; Clear objects allocated to BANK1
   248  07F4  30A0               	movlw	low __pbssBANK1
   249  07F5  0084               	movwf	4
   250  07F6  30D4               	movlw	low (__pbssBANK1+52)
   251  07F7  120A  118A  2434  120A  118A  	fcall	clear_ram0
   252  07FC                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  07FC                     __end_of__initialization:
   256  07FC  0183               	clrf	3
   257  07FD  120A  118A  2CAA   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  007B                     __pbssCOMMON:
   261  007B                     _AC1:
   262  007B                     	ds	2
   263                           
   264                           	psect	bssBANK0
   265  0020                     __pbssBANK0:
   266  0020                     _B9:
   267  0020                     	ds	4
   268  0024                     _B8:
   269  0024                     	ds	4
   270  0028                     _B6:
   271  0028                     	ds	4
   272  002C                     _B5:
   273  002C                     	ds	4
   274  0030                     _B3:
   275  0030                     	ds	4
   276  0034                     _B2:
   277  0034                     	ds	4
   278  0038                     _B1:
   279  0038                     	ds	4
   280  003C                     _B0:
   281  003C                     	ds	4
   282  0040                     _AF:
   283  0040                     	ds	4
   284  0044                     _AE:
   285  0044                     	ds	4
   286  0048                     _AD:
   287  0048                     	ds	4
   288  004C                     _AC:
   289  004C                     	ds	4
   290  0050                     _AB:
   291  0050                     	ds	4
   292  0054                     _AA:
   293  0054                     	ds	4
   294  0058                     _avv:
   295  0058                     	ds	3
   296  005B                     _AC6:
   297  005B                     	ds	2
   298  005D                     _AC5:
   299  005D                     	ds	2
   300  005F                     _AC4:
   301  005F                     	ds	2
   302  0061                     _oss:
   303  0061                     	ds	2
   304  0063                     _MD:
   305  0063                     	ds	2
   306  0065                     _MC:
   307  0065                     	ds	2
   308  0067                     _MB:
   309  0067                     	ds	2
   310  0069                     _AC3:
   311  0069                     	ds	2
   312  006B                     _AC2:
   313  006B                     	ds	2
   314                           
   315                           	psect	bssBANK1
   316  00A0                     __pbssBANK1:
   317  00A0                     _P:
   318  00A0                     	ds	4
   319  00A4                     _T:
   320  00A4                     	ds	4
   321  00A8                     _X2:
   322  00A8                     	ds	4
   323  00AC                     _X1:
   324  00AC                     	ds	4
   325  00B0                     _UP:
   326  00B0                     	ds	4
   327  00B4                     _UT:
   328  00B4                     	ds	4
   329  00B8                     _B7:
   330  00B8                     	ds	4
   331  00BC                     _B4:
   332  00BC                     	ds	4
   333  00C0                     _BE:
   334  00C0                     	ds	4
   335  00C4                     _BD:
   336  00C4                     	ds	4
   337  00C8                     _BC:
   338  00C8                     	ds	4
   339  00CC                     _BB:
   340  00CC                     	ds	4
   341  00D0                     _BA:
   342  00D0                     	ds	4
   343                           
   344                           	psect	clrtext
   345  0434                     clear_ram0:	
   346                           ;	Called with FSR containing the base address, and
   347                           ;	W with the last address+1
   348                           
   349  0434  0064               	clrwdt	;clear the watchdog before getting into this loop
   350  0435                     clrloop0:
   351  0435  0180               	clrf	0	;clear RAM location pointed to by FSR
   352  0436  0A84               	incf	4,f	;increment pointer
   353  0437  0604               	xorwf	4,w	;XOR with final address
   354  0438  1903               	btfsc	3,2	;have we reached the end yet?
   355  0439  3400               	retlw	0	;all done for this memory range, return
   356  043A  0604               	xorwf	4,w	;XOR again to restore value
   357  043B  2C35               	goto	clrloop0	;do the next byte
   358                           
   359                           	psect	cstackCOMMON
   360  0070                     __pcstackCOMMON:
   361  0070                     ?_waitmssp:
   362  0070                     ??_waitmssp:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_bmp280_getdata:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_print_checkdata:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_i2c_init:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_i2c_init:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_i2c_stop:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_i2c_stop:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_i2c_restart:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ??_i2c_restart:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_i2c_nak:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_i2c_nak:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_i2c_send:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ??_i2c_send:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_i2c_read:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_i2c_read:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_i2c_read_byte:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_LCD_Command:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_LCD_Command:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_LCD_Char:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_LCD_Char:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_LCD_init:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_show:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_main:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     i2c_send@dat:	
   432                           ; 1 bytes @ 0x0
   433                           
   434                           
   435                           ; 1 bytes @ 0x0
   436  0070                     	ds	1
   437  0071                     ??_i2c_read_byte:
   438                           
   439                           ; 1 bytes @ 0x1
   440  0071                     	ds	1
   441  0072                     i2c_read_byte@addr:
   442  0072                     LCD_Command@cmnd:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     LCD_Char@data:	
   446                           ; 1 bytes @ 0x2
   447                           
   448                           
   449                           ; 1 bytes @ 0x2
   450  0072                     	ds	1
   451  0073                     ??_print_checkdata:
   452  0073                     ??_LCD_init:	
   453                           ; 1 bytes @ 0x3
   454                           
   455  0073                     ??_show:	
   456                           ; 1 bytes @ 0x3
   457                           
   458  0073                     i2c_read_byte@rec:	
   459                           ; 1 bytes @ 0x3
   460                           
   461                           
   462                           ; 1 bytes @ 0x3
   463  0073                     	ds	1
   464  0074                     ??_bmp280_getdata:
   465  0074                     show@s:	
   466                           ; 1 bytes @ 0x4
   467                           
   468                           
   469                           ; 1 bytes @ 0x4
   470  0074                     	ds	4
   471  0078                     ??_main:
   472                           
   473                           ; 1 bytes @ 0x8
   474  0078                     	ds	3
   475                           
   476                           	psect	maintext
   477  04AA                     __pmaintext:	
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 26 in file "main_bmp280.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : B00/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0
   499 ;;      Temps:          3       0       0       0       0
   500 ;;      Totals:         3       0       0       0       0
   501 ;;Total ram usage:        3 bytes
   502 ;; Hardware stack levels required when called: 4
   503 ;; This function calls:
   504 ;;		_LCD_init
   505 ;;		_bmp280_getdata
   506 ;;		_i2c_init
   507 ;;		_print_checkdata
   508 ;;		_show
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  04AA                     _main:
   517  04AA                     l1242:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;main_bmp280.c: 28:     LCD_init();
   523  04AA  120A  118A  24D5  120A  118A  	fcall	_LCD_init
   524                           
   525                           ;main_bmp280.c: 29:     i2c_init();
   526  04AF  120A  118A  2475  120A  118A  	fcall	_i2c_init
   527  04B4                     l1244:
   528                           
   529                           ;main_bmp280.c: 31:     show("BMP280");
   530  04B4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   531  04B5  120A  118A  248B  120A  118A  	fcall	_show
   532  04BA                     l1246:
   533                           
   534                           ;main_bmp280.c: 32:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   535  04BA  301A               	movlw	26
   536  04BB  00FA               	movwf	??_main+2
   537  04BC  305E               	movlw	94
   538  04BD  00F9               	movwf	??_main+1
   539  04BE  306E               	movlw	110
   540  04BF  00F8               	movwf	??_main
   541  04C0                     u357:
   542  04C0  0BF8               	decfsz	??_main,f
   543  04C1  2CC0               	goto	u357
   544  04C2  0BF9               	decfsz	??_main+1,f
   545  04C3  2CC0               	goto	u357
   546  04C4  0BFA               	decfsz	??_main+2,f
   547  04C5  2CC0               	goto	u357
   548  04C6  0000               	nop
   549  04C7                     l1248:
   550                           
   551                           ;main_bmp280.c: 34:     {;main_bmp280.c: 35:         bmp280_getdata();
   552  04C7  120A  118A  2632  120A  118A  	fcall	_bmp280_getdata
   553  04CC                     l1250:
   554                           
   555                           ;main_bmp280.c: 36:         print_checkdata();
   556  04CC  120A  118A  25CB  120A  118A  	fcall	_print_checkdata
   557  04D1  2CC7               	goto	l1248
   558  04D2  120A  118A  2800   	ljmp	start
   559  04D5                     __end_of_main:
   560                           
   561                           	psect	text1
   562  048B                     __ptext1:	
   563 ;; *************** function _show *****************
   564 ;; Defined at:
   565 ;;		line 79 in file "./lcd4bit.h"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  s               1    wreg     PTR unsigned char 
   568 ;;		 -> STR_1(7), 
   569 ;; Auto vars:     Size  Location     Type
   570 ;;  s               1    4[COMMON] PTR unsigned char 
   571 ;;		 -> STR_1(7), 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   581 ;;      Params:         0       0       0       0       0
   582 ;;      Locals:         1       0       0       0       0
   583 ;;      Temps:          1       0       0       0       0
   584 ;;      Totals:         2       0       0       0       0
   585 ;;Total ram usage:        2 bytes
   586 ;; Hardware stack levels used: 1
   587 ;; Hardware stack levels required when called: 1
   588 ;; This function calls:
   589 ;;		_LCD_Char
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           
   596                           ;psect for function _show
   597  048B                     _show:
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   601                           ;show@s stored from wreg
   602  048B  00F4               	movwf	show@s
   603  048C                     l1124:
   604                           
   605                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
   606  048C  2C9D               	goto	l1130
   607  048D                     l1126:
   608                           
   609                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
   610  048D  0874               	movf	show@s,w
   611  048E  0084               	movwf	4
   612  048F  120A  118A  2003  120A  118A  	fcall	stringdir
   613  0494  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   614  0499                     l1128:
   615  0499  3001               	movlw	1
   616  049A  00F3               	movwf	??_show
   617  049B  0873               	movf	??_show,w
   618  049C  07F4               	addwf	show@s,f
   619  049D                     l1130:
   620                           
   621                           ;./lcd4bit.h: 81:     while(*s) {
   622  049D  0874               	movf	show@s,w
   623  049E  0084               	movwf	4
   624  049F  120A  118A  2003  120A  118A  	fcall	stringdir
   625  04A4  3A00               	xorlw	0
   626  04A5  1D03               	skipz
   627  04A6  2CA8               	goto	u241
   628  04A7  2CA9               	goto	u240
   629  04A8                     u241:
   630  04A8  2C8D               	goto	l1126
   631  04A9                     u240:
   632  04A9                     l115:
   633  04A9  0008               	return
   634  04AA                     __end_of_show:
   635                           
   636                           	psect	text2
   637  05CB                     __ptext2:	
   638 ;; *************** function _print_checkdata *****************
   639 ;; Defined at:
   640 ;;		line 67 in file "main_bmp280.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   654 ;;      Params:         0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 1
   661 ;; This function calls:
   662 ;;		_LCD_Char
   663 ;;		_LCD_Command
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _print_checkdata
   671  05CB                     _print_checkdata:
   672  05CB                     l1134:	
   673                           ;incstack = 0
   674                           ; Regs used in _print_checkdata: [wreg+status,2+status,0+pclath+cstack]
   675                           
   676                           
   677                           ;main_bmp280.c: 69:     LCD_Command(0xC0);
   678  05CB  30C0               	movlw	192
   679  05CC  120A  118A  250B  120A  118A  	fcall	_LCD_Command
   680                           
   681                           ;main_bmp280.c: 71:     LCD_Char(AA+0x30);
   682  05D1  1283               	bcf	3,5	;RP0=0, select bank0
   683  05D2  1303               	bcf	3,6	;RP1=0, select bank0
   684  05D3  0854               	movf	_AA,w
   685  05D4  3E30               	addlw	48
   686  05D5  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   687                           
   688                           ;main_bmp280.c: 72:     LCD_Char(AB+0x30);
   689  05DA  1283               	bcf	3,5	;RP0=0, select bank0
   690  05DB  1303               	bcf	3,6	;RP1=0, select bank0
   691  05DC  0850               	movf	_AB,w
   692  05DD  3E30               	addlw	48
   693  05DE  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   694                           
   695                           ;main_bmp280.c: 73:     LCD_Char(AC+0x30);
   696  05E3  1283               	bcf	3,5	;RP0=0, select bank0
   697  05E4  1303               	bcf	3,6	;RP1=0, select bank0
   698  05E5  084C               	movf	_AC,w
   699  05E6  3E30               	addlw	48
   700  05E7  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   701                           
   702                           ;main_bmp280.c: 74:     LCD_Char(AD+0x30);
   703  05EC  1283               	bcf	3,5	;RP0=0, select bank0
   704  05ED  1303               	bcf	3,6	;RP1=0, select bank0
   705  05EE  0848               	movf	_AD,w
   706  05EF  3E30               	addlw	48
   707  05F0  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   708                           
   709                           ;main_bmp280.c: 75:     LCD_Char(AE+0x30);
   710  05F5  1283               	bcf	3,5	;RP0=0, select bank0
   711  05F6  1303               	bcf	3,6	;RP1=0, select bank0
   712  05F7  0844               	movf	_AE,w
   713  05F8  3E30               	addlw	48
   714  05F9  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   715                           
   716                           ;main_bmp280.c: 76:     LCD_Char(AF+0x30);
   717  05FE  1283               	bcf	3,5	;RP0=0, select bank0
   718  05FF  1303               	bcf	3,6	;RP1=0, select bank0
   719  0600  0840               	movf	_AF,w
   720  0601  3E30               	addlw	48
   721  0602  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   722                           
   723                           ;main_bmp280.c: 78:     LCD_Command(0x94);
   724  0607  3094               	movlw	148
   725  0608  120A  118A  250B  120A  118A  	fcall	_LCD_Command
   726                           
   727                           ;main_bmp280.c: 79:     LCD_Char(B0+0x30);
   728  060D  1283               	bcf	3,5	;RP0=0, select bank0
   729  060E  1303               	bcf	3,6	;RP1=0, select bank0
   730  060F  083C               	movf	_B0,w
   731  0610  3E30               	addlw	48
   732  0611  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   733                           
   734                           ;main_bmp280.c: 80:     LCD_Char(B1+0x30);
   735  0616  1283               	bcf	3,5	;RP0=0, select bank0
   736  0617  1303               	bcf	3,6	;RP1=0, select bank0
   737  0618  0838               	movf	_B1,w
   738  0619  3E30               	addlw	48
   739  061A  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   740                           
   741                           ;main_bmp280.c: 81:     LCD_Char(B2+0x30);
   742  061F  1283               	bcf	3,5	;RP0=0, select bank0
   743  0620  1303               	bcf	3,6	;RP1=0, select bank0
   744  0621  0834               	movf	_B2,w
   745  0622  3E30               	addlw	48
   746  0623  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   747                           
   748                           ;main_bmp280.c: 82:     LCD_Char(B3+0x30);
   749  0628  1283               	bcf	3,5	;RP0=0, select bank0
   750  0629  1303               	bcf	3,6	;RP1=0, select bank0
   751  062A  0830               	movf	_B3,w
   752  062B  3E30               	addlw	48
   753  062C  120A  118A  258B  120A  118A  	fcall	_LCD_Char
   754  0631                     l216:
   755  0631  0008               	return
   756  0632                     __end_of_print_checkdata:
   757                           
   758                           	psect	text3
   759  058B                     __ptext3:	
   760 ;; *************** function _LCD_Char *****************
   761 ;; Defined at:
   762 ;;		line 27 in file "./lcd4bit.h"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  data            1    wreg     unsigned char 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  data            1    2[COMMON] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, status,2, status,0
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         0       0       0       0       0
   777 ;;      Locals:         1       0       0       0       0
   778 ;;      Temps:          2       0       0       0       0
   779 ;;      Totals:         3       0       0       0       0
   780 ;;Total ram usage:        3 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_show
   786 ;;		_print_checkdata
   787 ;;		_LCD_num
   788 ;;		_show_multidigits
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _LCD_Char
   794  058B                     _LCD_Char:
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
   798                           ;LCD_Char@data stored from wreg
   799  058B  00F2               	movwf	LCD_Char@data
   800  058C                     l1096:
   801                           
   802                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
   803  058C  1283               	bcf	3,5	;RP0=0, select bank0
   804  058D  1303               	bcf	3,6	;RP1=0, select bank0
   805  058E  1407               	bsf	7,0	;volatile
   806  058F                     l1098:
   807                           
   808                           ;./lcd4bit.h: 30:     PORTB = data;
   809  058F  0872               	movf	LCD_Char@data,w
   810  0590  0086               	movwf	6	;volatile
   811  0591                     l1100:
   812                           
   813                           ;./lcd4bit.h: 31:     RC1 = 1;
   814  0591  1487               	bsf	7,1	;volatile
   815                           
   816                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
   817  0592  3041               	movlw	65
   818  0593  00F1               	movwf	??_LCD_Char+1
   819  0594  30EE               	movlw	238
   820  0595  00F0               	movwf	??_LCD_Char
   821  0596                     u367:
   822  0596  0BF0               	decfsz	??_LCD_Char,f
   823  0597  2D96               	goto	u367
   824  0598  0BF1               	decfsz	??_LCD_Char+1,f
   825  0599  2D96               	goto	u367
   826  059A  0000               	nop
   827  059B                     l1102:
   828                           
   829                           ;./lcd4bit.h: 33:     RC1 = 0;
   830  059B  1283               	bcf	3,5	;RP0=0, select bank0
   831  059C  1303               	bcf	3,6	;RP1=0, select bank0
   832  059D  1087               	bcf	7,1	;volatile
   833                           
   834                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
   835  059E  3041               	movlw	65
   836  059F  00F1               	movwf	??_LCD_Char+1
   837  05A0  30EE               	movlw	238
   838  05A1  00F0               	movwf	??_LCD_Char
   839  05A2                     u377:
   840  05A2  0BF0               	decfsz	??_LCD_Char,f
   841  05A3  2DA2               	goto	u377
   842  05A4  0BF1               	decfsz	??_LCD_Char+1,f
   843  05A5  2DA2               	goto	u377
   844  05A6  0000               	nop
   845  05A7                     l1104:
   846                           
   847                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
   848  05A7  0872               	movf	LCD_Char@data,w
   849  05A8  00F0               	movwf	??_LCD_Char
   850  05A9  3003               	movlw	3
   851  05AA                     u235:
   852  05AA  1003               	clrc
   853  05AB  0DF0               	rlf	??_LCD_Char,f
   854  05AC  3EFF               	addlw	-1
   855  05AD  1D03               	skipz
   856  05AE  2DAA               	goto	u235
   857  05AF  1003               	clrc
   858  05B0  0D70               	rlf	??_LCD_Char,w
   859  05B1  1283               	bcf	3,5	;RP0=0, select bank0
   860  05B2  1303               	bcf	3,6	;RP1=0, select bank0
   861  05B3  0086               	movwf	6	;volatile
   862  05B4                     l1106:
   863                           
   864                           ;./lcd4bit.h: 36:     RC1 = 1;
   865  05B4  1487               	bsf	7,1	;volatile
   866  05B5                     l1108:
   867                           
   868                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
   869  05B5  3041               	movlw	65
   870  05B6  00F1               	movwf	??_LCD_Char+1
   871  05B7  30EE               	movlw	238
   872  05B8  00F0               	movwf	??_LCD_Char
   873  05B9                     u387:
   874  05B9  0BF0               	decfsz	??_LCD_Char,f
   875  05BA  2DB9               	goto	u387
   876  05BB  0BF1               	decfsz	??_LCD_Char+1,f
   877  05BC  2DB9               	goto	u387
   878  05BD  0000               	nop
   879  05BE                     l1110:
   880                           
   881                           ;./lcd4bit.h: 38:     RC1 = 0;
   882  05BE  1283               	bcf	3,5	;RP0=0, select bank0
   883  05BF  1303               	bcf	3,6	;RP1=0, select bank0
   884  05C0  1087               	bcf	7,1	;volatile
   885  05C1                     l1112:
   886                           
   887                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
   888  05C1  3041               	movlw	65
   889  05C2  00F1               	movwf	??_LCD_Char+1
   890  05C3  30EE               	movlw	238
   891  05C4  00F0               	movwf	??_LCD_Char
   892  05C5                     u397:
   893  05C5  0BF0               	decfsz	??_LCD_Char,f
   894  05C6  2DC5               	goto	u397
   895  05C7  0BF1               	decfsz	??_LCD_Char+1,f
   896  05C8  2DC5               	goto	u397
   897  05C9  0000               	nop
   898  05CA                     l103:
   899  05CA  0008               	return
   900  05CB                     __end_of_LCD_Char:
   901                           
   902                           	psect	text4
   903  0475                     __ptext4:	
   904 ;; *************** function _i2c_init *****************
   905 ;; Defined at:
   906 ;;		line 15 in file "./p03a_bmp280.h"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _i2c_init
   935  0475                     _i2c_init:
   936  0475                     l890:	
   937                           ;incstack = 0
   938                           ; Regs used in _i2c_init: [wreg]
   939                           
   940                           
   941                           ;./p03a_bmp280.h: 17:     TRISC3=TRISC4=1;
   942  0475  1683               	bsf	3,5	;RP0=1, select bank1
   943  0476  1303               	bcf	3,6	;RP1=0, select bank1
   944  0477  1607               	bsf	7,4	;volatile
   945  0478  1A07               	btfsc	7,4	;volatile
   946  0479  2C7B               	goto	u61
   947  047A  2C7F               	goto	u60
   948  047B                     u61:
   949  047B  1683               	bsf	3,5	;RP0=1, select bank1
   950  047C  1303               	bcf	3,6	;RP1=0, select bank1
   951  047D  1587               	bsf	7,3	;volatile
   952  047E  2C82               	goto	u74
   953  047F                     u60:
   954  047F  1683               	bsf	3,5	;RP0=1, select bank1
   955  0480  1303               	bcf	3,6	;RP1=0, select bank1
   956  0481  1187               	bcf	7,3	;volatile
   957  0482                     u74:
   958  0482                     l892:
   959                           
   960                           ;./p03a_bmp280.h: 18:     SSPCON=0x28;
   961  0482  3028               	movlw	40
   962  0483  1283               	bcf	3,5	;RP0=0, select bank0
   963  0484  1303               	bcf	3,6	;RP1=0, select bank0
   964  0485  0094               	movwf	20	;volatile
   965                           
   966                           ;./p03a_bmp280.h: 19:     SSPADD=((11059200/4)/100)-1;
   967  0486  30FF               	movlw	255
   968  0487  1683               	bsf	3,5	;RP0=1, select bank1
   969  0488  1303               	bcf	3,6	;RP1=0, select bank1
   970  0489  0093               	movwf	19	;volatile
   971  048A                     l51:
   972  048A  0008               	return
   973  048B                     __end_of_i2c_init:
   974                           
   975                           	psect	text5
   976  0632                     __ptext5:	
   977 ;; *************** function _bmp280_getdata *****************
   978 ;; Defined at:
   979 ;;		line 40 in file "main_bmp280.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0, pclath, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0
   995 ;;      Temps:          4       0       0       0       0
   996 ;;      Totals:         4       0       0       0       0
   997 ;;Total ram usage:        4 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 3
  1000 ;; This function calls:
  1001 ;;		_i2c_read_byte
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _bmp280_getdata
  1009  0632                     _bmp280_getdata:
  1010  0632                     l1132:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _bmp280_getdata: [wreg+status,2+status,0+pclath+cstack]
  1013                           
  1014                           
  1015                           ;main_bmp280.c: 42:         AA=(i2c_read_byte(0xAA));
  1016  0632  30AA               	movlw	170
  1017  0633  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1018  0638  00F4               	movwf	??_bmp280_getdata
  1019  0639  01F5               	clrf	??_bmp280_getdata+1
  1020  063A  01F6               	clrf	??_bmp280_getdata+2
  1021  063B  01F7               	clrf	??_bmp280_getdata+3
  1022  063C  0877               	movf	??_bmp280_getdata+3,w
  1023  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1024  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1025  063F  00D7               	movwf	_AA+3
  1026  0640  0876               	movf	??_bmp280_getdata+2,w
  1027  0641  00D6               	movwf	_AA+2
  1028  0642  0875               	movf	??_bmp280_getdata+1,w
  1029  0643  00D5               	movwf	_AA+1
  1030  0644  0874               	movf	??_bmp280_getdata,w
  1031  0645  00D4               	movwf	_AA
  1032                           
  1033                           ;main_bmp280.c: 43:         AB=(i2c_read_byte(0xAB));
  1034  0646  30AB               	movlw	171
  1035  0647  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1036  064C  00F4               	movwf	??_bmp280_getdata
  1037  064D  01F5               	clrf	??_bmp280_getdata+1
  1038  064E  01F6               	clrf	??_bmp280_getdata+2
  1039  064F  01F7               	clrf	??_bmp280_getdata+3
  1040  0650  0877               	movf	??_bmp280_getdata+3,w
  1041  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0653  00D3               	movwf	_AB+3
  1044  0654  0876               	movf	??_bmp280_getdata+2,w
  1045  0655  00D2               	movwf	_AB+2
  1046  0656  0875               	movf	??_bmp280_getdata+1,w
  1047  0657  00D1               	movwf	_AB+1
  1048  0658  0874               	movf	??_bmp280_getdata,w
  1049  0659  00D0               	movwf	_AB
  1050                           
  1051                           ;main_bmp280.c: 44:         AC=(i2c_read_byte(0xAC));
  1052  065A  30AC               	movlw	172
  1053  065B  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1054  0660  00F4               	movwf	??_bmp280_getdata
  1055  0661  01F5               	clrf	??_bmp280_getdata+1
  1056  0662  01F6               	clrf	??_bmp280_getdata+2
  1057  0663  01F7               	clrf	??_bmp280_getdata+3
  1058  0664  0877               	movf	??_bmp280_getdata+3,w
  1059  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0667  00CF               	movwf	_AC+3
  1062  0668  0876               	movf	??_bmp280_getdata+2,w
  1063  0669  00CE               	movwf	_AC+2
  1064  066A  0875               	movf	??_bmp280_getdata+1,w
  1065  066B  00CD               	movwf	_AC+1
  1066  066C  0874               	movf	??_bmp280_getdata,w
  1067  066D  00CC               	movwf	_AC
  1068                           
  1069                           ;main_bmp280.c: 45:         AD=(i2c_read_byte(0xAD));
  1070  066E  30AD               	movlw	173
  1071  066F  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1072  0674  00F4               	movwf	??_bmp280_getdata
  1073  0675  01F5               	clrf	??_bmp280_getdata+1
  1074  0676  01F6               	clrf	??_bmp280_getdata+2
  1075  0677  01F7               	clrf	??_bmp280_getdata+3
  1076  0678  0877               	movf	??_bmp280_getdata+3,w
  1077  0679  1283               	bcf	3,5	;RP0=0, select bank0
  1078  067A  1303               	bcf	3,6	;RP1=0, select bank0
  1079  067B  00CB               	movwf	_AD+3
  1080  067C  0876               	movf	??_bmp280_getdata+2,w
  1081  067D  00CA               	movwf	_AD+2
  1082  067E  0875               	movf	??_bmp280_getdata+1,w
  1083  067F  00C9               	movwf	_AD+1
  1084  0680  0874               	movf	??_bmp280_getdata,w
  1085  0681  00C8               	movwf	_AD
  1086                           
  1087                           ;main_bmp280.c: 46:         AE=(i2c_read_byte(0xAE));
  1088  0682  30AE               	movlw	174
  1089  0683  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1090  0688  00F4               	movwf	??_bmp280_getdata
  1091  0689  01F5               	clrf	??_bmp280_getdata+1
  1092  068A  01F6               	clrf	??_bmp280_getdata+2
  1093  068B  01F7               	clrf	??_bmp280_getdata+3
  1094  068C  0877               	movf	??_bmp280_getdata+3,w
  1095  068D  1283               	bcf	3,5	;RP0=0, select bank0
  1096  068E  1303               	bcf	3,6	;RP1=0, select bank0
  1097  068F  00C7               	movwf	_AE+3
  1098  0690  0876               	movf	??_bmp280_getdata+2,w
  1099  0691  00C6               	movwf	_AE+2
  1100  0692  0875               	movf	??_bmp280_getdata+1,w
  1101  0693  00C5               	movwf	_AE+1
  1102  0694  0874               	movf	??_bmp280_getdata,w
  1103  0695  00C4               	movwf	_AE
  1104                           
  1105                           ;main_bmp280.c: 47:         AF=(i2c_read_byte(0xAF));
  1106  0696  30AF               	movlw	175
  1107  0697  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1108  069C  00F4               	movwf	??_bmp280_getdata
  1109  069D  01F5               	clrf	??_bmp280_getdata+1
  1110  069E  01F6               	clrf	??_bmp280_getdata+2
  1111  069F  01F7               	clrf	??_bmp280_getdata+3
  1112  06A0  0877               	movf	??_bmp280_getdata+3,w
  1113  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1114  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1115  06A3  00C3               	movwf	_AF+3
  1116  06A4  0876               	movf	??_bmp280_getdata+2,w
  1117  06A5  00C2               	movwf	_AF+2
  1118  06A6  0875               	movf	??_bmp280_getdata+1,w
  1119  06A7  00C1               	movwf	_AF+1
  1120  06A8  0874               	movf	??_bmp280_getdata,w
  1121  06A9  00C0               	movwf	_AF
  1122                           
  1123                           ;main_bmp280.c: 49:         B0=(i2c_read_byte(0xB0));
  1124  06AA  30B0               	movlw	176
  1125  06AB  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1126  06B0  00F4               	movwf	??_bmp280_getdata
  1127  06B1  01F5               	clrf	??_bmp280_getdata+1
  1128  06B2  01F6               	clrf	??_bmp280_getdata+2
  1129  06B3  01F7               	clrf	??_bmp280_getdata+3
  1130  06B4  0877               	movf	??_bmp280_getdata+3,w
  1131  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1132  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1133  06B7  00BF               	movwf	_B0+3
  1134  06B8  0876               	movf	??_bmp280_getdata+2,w
  1135  06B9  00BE               	movwf	_B0+2
  1136  06BA  0875               	movf	??_bmp280_getdata+1,w
  1137  06BB  00BD               	movwf	_B0+1
  1138  06BC  0874               	movf	??_bmp280_getdata,w
  1139  06BD  00BC               	movwf	_B0
  1140                           
  1141                           ;main_bmp280.c: 50:         B1=(i2c_read_byte(0xB1));
  1142  06BE  30B1               	movlw	177
  1143  06BF  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1144  06C4  00F4               	movwf	??_bmp280_getdata
  1145  06C5  01F5               	clrf	??_bmp280_getdata+1
  1146  06C6  01F6               	clrf	??_bmp280_getdata+2
  1147  06C7  01F7               	clrf	??_bmp280_getdata+3
  1148  06C8  0877               	movf	??_bmp280_getdata+3,w
  1149  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1150  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1151  06CB  00BB               	movwf	_B1+3
  1152  06CC  0876               	movf	??_bmp280_getdata+2,w
  1153  06CD  00BA               	movwf	_B1+2
  1154  06CE  0875               	movf	??_bmp280_getdata+1,w
  1155  06CF  00B9               	movwf	_B1+1
  1156  06D0  0874               	movf	??_bmp280_getdata,w
  1157  06D1  00B8               	movwf	_B1
  1158                           
  1159                           ;main_bmp280.c: 51:         B2=(i2c_read_byte(0xB2));
  1160  06D2  30B2               	movlw	178
  1161  06D3  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1162  06D8  00F4               	movwf	??_bmp280_getdata
  1163  06D9  01F5               	clrf	??_bmp280_getdata+1
  1164  06DA  01F6               	clrf	??_bmp280_getdata+2
  1165  06DB  01F7               	clrf	??_bmp280_getdata+3
  1166  06DC  0877               	movf	??_bmp280_getdata+3,w
  1167  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1168  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1169  06DF  00B7               	movwf	_B2+3
  1170  06E0  0876               	movf	??_bmp280_getdata+2,w
  1171  06E1  00B6               	movwf	_B2+2
  1172  06E2  0875               	movf	??_bmp280_getdata+1,w
  1173  06E3  00B5               	movwf	_B2+1
  1174  06E4  0874               	movf	??_bmp280_getdata,w
  1175  06E5  00B4               	movwf	_B2
  1176                           
  1177                           ;main_bmp280.c: 52:         B3=(i2c_read_byte(0xB3));
  1178  06E6  30B3               	movlw	179
  1179  06E7  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1180  06EC  00F4               	movwf	??_bmp280_getdata
  1181  06ED  01F5               	clrf	??_bmp280_getdata+1
  1182  06EE  01F6               	clrf	??_bmp280_getdata+2
  1183  06EF  01F7               	clrf	??_bmp280_getdata+3
  1184  06F0  0877               	movf	??_bmp280_getdata+3,w
  1185  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1186  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1187  06F3  00B3               	movwf	_B3+3
  1188  06F4  0876               	movf	??_bmp280_getdata+2,w
  1189  06F5  00B2               	movwf	_B3+2
  1190  06F6  0875               	movf	??_bmp280_getdata+1,w
  1191  06F7  00B1               	movwf	_B3+1
  1192  06F8  0874               	movf	??_bmp280_getdata,w
  1193  06F9  00B0               	movwf	_B3
  1194                           
  1195                           ;main_bmp280.c: 53:         B4=(i2c_read_byte(0xB4));
  1196  06FA  30B4               	movlw	180
  1197  06FB  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1198  0700  00F4               	movwf	??_bmp280_getdata
  1199  0701  01F5               	clrf	??_bmp280_getdata+1
  1200  0702  01F6               	clrf	??_bmp280_getdata+2
  1201  0703  01F7               	clrf	??_bmp280_getdata+3
  1202  0704  0877               	movf	??_bmp280_getdata+3,w
  1203  0705  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0706  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0707  00BF               	movwf	(_B4+3)^(0+128)
  1206  0708  0876               	movf	??_bmp280_getdata+2,w
  1207  0709  00BE               	movwf	(_B4+2)^(0+128)
  1208  070A  0875               	movf	??_bmp280_getdata+1,w
  1209  070B  00BD               	movwf	(_B4+1)^(0+128)
  1210  070C  0874               	movf	??_bmp280_getdata,w
  1211  070D  00BC               	movwf	_B4^(0+128)
  1212                           
  1213                           ;main_bmp280.c: 54:         B5=(i2c_read_byte(0xB5));
  1214  070E  30B5               	movlw	181
  1215  070F  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1216  0714  00F4               	movwf	??_bmp280_getdata
  1217  0715  01F5               	clrf	??_bmp280_getdata+1
  1218  0716  01F6               	clrf	??_bmp280_getdata+2
  1219  0717  01F7               	clrf	??_bmp280_getdata+3
  1220  0718  0877               	movf	??_bmp280_getdata+3,w
  1221  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1222  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1223  071B  00AF               	movwf	_B5+3
  1224  071C  0876               	movf	??_bmp280_getdata+2,w
  1225  071D  00AE               	movwf	_B5+2
  1226  071E  0875               	movf	??_bmp280_getdata+1,w
  1227  071F  00AD               	movwf	_B5+1
  1228  0720  0874               	movf	??_bmp280_getdata,w
  1229  0721  00AC               	movwf	_B5
  1230                           
  1231                           ;main_bmp280.c: 55:         B6=(i2c_read_byte(0xB6));
  1232  0722  30B6               	movlw	182
  1233  0723  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1234  0728  00F4               	movwf	??_bmp280_getdata
  1235  0729  01F5               	clrf	??_bmp280_getdata+1
  1236  072A  01F6               	clrf	??_bmp280_getdata+2
  1237  072B  01F7               	clrf	??_bmp280_getdata+3
  1238  072C  0877               	movf	??_bmp280_getdata+3,w
  1239  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1240  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1241  072F  00AB               	movwf	_B6+3
  1242  0730  0876               	movf	??_bmp280_getdata+2,w
  1243  0731  00AA               	movwf	_B6+2
  1244  0732  0875               	movf	??_bmp280_getdata+1,w
  1245  0733  00A9               	movwf	_B6+1
  1246  0734  0874               	movf	??_bmp280_getdata,w
  1247  0735  00A8               	movwf	_B6
  1248                           
  1249                           ;main_bmp280.c: 56:         B7=(i2c_read_byte(0xB7));
  1250  0736  30B7               	movlw	183
  1251  0737  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1252  073C  00F4               	movwf	??_bmp280_getdata
  1253  073D  01F5               	clrf	??_bmp280_getdata+1
  1254  073E  01F6               	clrf	??_bmp280_getdata+2
  1255  073F  01F7               	clrf	??_bmp280_getdata+3
  1256  0740  0877               	movf	??_bmp280_getdata+3,w
  1257  0741  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0742  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0743  00BB               	movwf	(_B7+3)^(0+128)
  1260  0744  0876               	movf	??_bmp280_getdata+2,w
  1261  0745  00BA               	movwf	(_B7+2)^(0+128)
  1262  0746  0875               	movf	??_bmp280_getdata+1,w
  1263  0747  00B9               	movwf	(_B7+1)^(0+128)
  1264  0748  0874               	movf	??_bmp280_getdata,w
  1265  0749  00B8               	movwf	_B7^(0+128)
  1266                           
  1267                           ;main_bmp280.c: 57:         B8=(i2c_read_byte(0xB8));
  1268  074A  30B8               	movlw	184
  1269  074B  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1270  0750  00F4               	movwf	??_bmp280_getdata
  1271  0751  01F5               	clrf	??_bmp280_getdata+1
  1272  0752  01F6               	clrf	??_bmp280_getdata+2
  1273  0753  01F7               	clrf	??_bmp280_getdata+3
  1274  0754  0877               	movf	??_bmp280_getdata+3,w
  1275  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0757  00A7               	movwf	_B8+3
  1278  0758  0876               	movf	??_bmp280_getdata+2,w
  1279  0759  00A6               	movwf	_B8+2
  1280  075A  0875               	movf	??_bmp280_getdata+1,w
  1281  075B  00A5               	movwf	_B8+1
  1282  075C  0874               	movf	??_bmp280_getdata,w
  1283  075D  00A4               	movwf	_B8
  1284                           
  1285                           ;main_bmp280.c: 58:         B9=(i2c_read_byte(0xB9));
  1286  075E  30B9               	movlw	185
  1287  075F  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1288  0764  00F4               	movwf	??_bmp280_getdata
  1289  0765  01F5               	clrf	??_bmp280_getdata+1
  1290  0766  01F6               	clrf	??_bmp280_getdata+2
  1291  0767  01F7               	clrf	??_bmp280_getdata+3
  1292  0768  0877               	movf	??_bmp280_getdata+3,w
  1293  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1294  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1295  076B  00A3               	movwf	_B9+3
  1296  076C  0876               	movf	??_bmp280_getdata+2,w
  1297  076D  00A2               	movwf	_B9+2
  1298  076E  0875               	movf	??_bmp280_getdata+1,w
  1299  076F  00A1               	movwf	_B9+1
  1300  0770  0874               	movf	??_bmp280_getdata,w
  1301  0771  00A0               	movwf	_B9
  1302                           
  1303                           ;main_bmp280.c: 59:         BA=(i2c_read_byte(0xBA));
  1304  0772  30BA               	movlw	186
  1305  0773  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1306  0778  00F4               	movwf	??_bmp280_getdata
  1307  0779  01F5               	clrf	??_bmp280_getdata+1
  1308  077A  01F6               	clrf	??_bmp280_getdata+2
  1309  077B  01F7               	clrf	??_bmp280_getdata+3
  1310  077C  0877               	movf	??_bmp280_getdata+3,w
  1311  077D  1683               	bsf	3,5	;RP0=1, select bank1
  1312  077E  1303               	bcf	3,6	;RP1=0, select bank1
  1313  077F  00D3               	movwf	(_BA+3)^(0+128)
  1314  0780  0876               	movf	??_bmp280_getdata+2,w
  1315  0781  00D2               	movwf	(_BA+2)^(0+128)
  1316  0782  0875               	movf	??_bmp280_getdata+1,w
  1317  0783  00D1               	movwf	(_BA+1)^(0+128)
  1318  0784  0874               	movf	??_bmp280_getdata,w
  1319  0785  00D0               	movwf	_BA^(0+128)
  1320                           
  1321                           ;main_bmp280.c: 60:         BB=(i2c_read_byte(0xBB));
  1322  0786  30BB               	movlw	187
  1323  0787  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1324  078C  00F4               	movwf	??_bmp280_getdata
  1325  078D  01F5               	clrf	??_bmp280_getdata+1
  1326  078E  01F6               	clrf	??_bmp280_getdata+2
  1327  078F  01F7               	clrf	??_bmp280_getdata+3
  1328  0790  0877               	movf	??_bmp280_getdata+3,w
  1329  0791  1683               	bsf	3,5	;RP0=1, select bank1
  1330  0792  1303               	bcf	3,6	;RP1=0, select bank1
  1331  0793  00CF               	movwf	(_BB+3)^(0+128)
  1332  0794  0876               	movf	??_bmp280_getdata+2,w
  1333  0795  00CE               	movwf	(_BB+2)^(0+128)
  1334  0796  0875               	movf	??_bmp280_getdata+1,w
  1335  0797  00CD               	movwf	(_BB+1)^(0+128)
  1336  0798  0874               	movf	??_bmp280_getdata,w
  1337  0799  00CC               	movwf	_BB^(0+128)
  1338                           
  1339                           ;main_bmp280.c: 61:         BC=(i2c_read_byte(0xBC));
  1340  079A  30BC               	movlw	188
  1341  079B  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1342  07A0  00F4               	movwf	??_bmp280_getdata
  1343  07A1  01F5               	clrf	??_bmp280_getdata+1
  1344  07A2  01F6               	clrf	??_bmp280_getdata+2
  1345  07A3  01F7               	clrf	??_bmp280_getdata+3
  1346  07A4  0877               	movf	??_bmp280_getdata+3,w
  1347  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  1348  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  1349  07A7  00CB               	movwf	(_BC+3)^(0+128)
  1350  07A8  0876               	movf	??_bmp280_getdata+2,w
  1351  07A9  00CA               	movwf	(_BC+2)^(0+128)
  1352  07AA  0875               	movf	??_bmp280_getdata+1,w
  1353  07AB  00C9               	movwf	(_BC+1)^(0+128)
  1354  07AC  0874               	movf	??_bmp280_getdata,w
  1355  07AD  00C8               	movwf	_BC^(0+128)
  1356                           
  1357                           ;main_bmp280.c: 62:         BD=(i2c_read_byte(0xBD));
  1358  07AE  30BD               	movlw	189
  1359  07AF  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1360  07B4  00F4               	movwf	??_bmp280_getdata
  1361  07B5  01F5               	clrf	??_bmp280_getdata+1
  1362  07B6  01F6               	clrf	??_bmp280_getdata+2
  1363  07B7  01F7               	clrf	??_bmp280_getdata+3
  1364  07B8  0877               	movf	??_bmp280_getdata+3,w
  1365  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  1366  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  1367  07BB  00C7               	movwf	(_BD+3)^(0+128)
  1368  07BC  0876               	movf	??_bmp280_getdata+2,w
  1369  07BD  00C6               	movwf	(_BD+2)^(0+128)
  1370  07BE  0875               	movf	??_bmp280_getdata+1,w
  1371  07BF  00C5               	movwf	(_BD+1)^(0+128)
  1372  07C0  0874               	movf	??_bmp280_getdata,w
  1373  07C1  00C4               	movwf	_BD^(0+128)
  1374                           
  1375                           ;main_bmp280.c: 63:         BE=(i2c_read_byte(0xBE));
  1376  07C2  30BE               	movlw	190
  1377  07C3  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1378  07C8  00F4               	movwf	??_bmp280_getdata
  1379  07C9  01F5               	clrf	??_bmp280_getdata+1
  1380  07CA  01F6               	clrf	??_bmp280_getdata+2
  1381  07CB  01F7               	clrf	??_bmp280_getdata+3
  1382  07CC  0877               	movf	??_bmp280_getdata+3,w
  1383  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  1384  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  1385  07CF  00C3               	movwf	(_BE+3)^(0+128)
  1386  07D0  0876               	movf	??_bmp280_getdata+2,w
  1387  07D1  00C2               	movwf	(_BE+2)^(0+128)
  1388  07D2  0875               	movf	??_bmp280_getdata+1,w
  1389  07D3  00C1               	movwf	(_BE+1)^(0+128)
  1390  07D4  0874               	movf	??_bmp280_getdata,w
  1391  07D5  00C0               	movwf	_BE^(0+128)
  1392                           
  1393                           ;main_bmp280.c: 64:         BF=(i2c_read_byte(0xBF));
  1394  07D6  30BF               	movlw	191
  1395  07D7  120A  118A  254B  120A  118A  	fcall	_i2c_read_byte
  1396  07DC  00F4               	movwf	??_bmp280_getdata
  1397  07DD  0C74               	rrf	??_bmp280_getdata,w
  1398  07DE  1803               	btfsc	3,0
  1399  07DF  2FE1               	goto	u251
  1400  07E0  2FE5               	goto	u250
  1401  07E1                     u251:
  1402  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  1403  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  1404  07E3  1414               	bsf	20,0	;volatile
  1405  07E4  2FE8               	goto	u264
  1406  07E5                     u250:
  1407  07E5  1683               	bsf	3,5	;RP0=1, select bank1
  1408  07E6  1303               	bcf	3,6	;RP1=0, select bank1
  1409  07E7  1014               	bcf	20,0	;volatile
  1410  07E8                     u264:
  1411  07E8                     l213:
  1412  07E8  0008               	return
  1413  07E9                     __end_of_bmp280_getdata:
  1414                           
  1415                           	psect	text6
  1416  054B                     __ptext6:	
  1417 ;; *************** function _i2c_read_byte *****************
  1418 ;; Defined at:
  1419 ;;		line 76 in file "./p03a_bmp280.h"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  addr            1    wreg     unsigned char 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  addr            1    2[COMMON] unsigned char 
  1424 ;;  rec             1    3[COMMON] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      unsigned char 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         2       0       0       0       0
  1436 ;;      Temps:          1       0       0       0       0
  1437 ;;      Totals:         3       0       0       0       0
  1438 ;;Total ram usage:        3 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 2
  1441 ;; This function calls:
  1442 ;;		_i2c_nak
  1443 ;;		_i2c_read
  1444 ;;		_i2c_restart
  1445 ;;		_i2c_send
  1446 ;;		_i2c_stop
  1447 ;;		_waitmssp
  1448 ;; This function is called by:
  1449 ;;		_bmp280_getdata
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           
  1454                           ;psect for function _i2c_read_byte
  1455  054B                     _i2c_read_byte:
  1456                           
  1457                           ;incstack = 0
  1458                           ; Regs used in _i2c_read_byte: [wreg+status,2+status,0+pclath+cstack]
  1459                           ;i2c_read_byte@addr stored from wreg
  1460  054B  00F2               	movwf	i2c_read_byte@addr
  1461  054C                     l91:	
  1462                           ;./p03a_bmp280.h: 76: unsigned char i2c_read_byte(unsigned char addr);./p03a_bmp280.h: 7
      +                          7: {;./p03a_bmp280.h: 78:     unsigned char rec;;./p03a_bmp280.h: 79: L: i2c_restart();
  1463                           
  1464  054C                     l1058:
  1465  054C  120A  118A  243C  120A  118A  	fcall	_i2c_restart
  1466  0551                     l1060:
  1467                           
  1468                           ;./p03a_bmp280.h: 80:     SSPBUF=0xEE;
  1469  0551  30EE               	movlw	238
  1470  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0554  0093               	movwf	19	;volatile
  1473  0555                     l1062:
  1474                           
  1475                           ;./p03a_bmp280.h: 81:     waitmssp();
  1476  0555  120A  118A  242C  120A  118A  	fcall	_waitmssp
  1477  055A                     l92:	
  1478                           ;./p03a_bmp280.h: 82:     while(ACKSTAT){goto L;}
  1479                           
  1480  055A  1683               	bsf	3,5	;RP0=1, select bank1
  1481  055B  1303               	bcf	3,6	;RP1=0, select bank1
  1482  055C  1B11               	btfsc	17,6	;volatile
  1483  055D  2D5F               	goto	u211
  1484  055E  2D60               	goto	u210
  1485  055F                     u211:
  1486  055F  2D4C               	goto	l91
  1487  0560                     u210:
  1488  0560                     l1064:
  1489                           
  1490                           ;./p03a_bmp280.h: 83:     i2c_send(addr>>8);
  1491  0560  3000               	movlw	0
  1492  0561  120A  118A  2464  120A  118A  	fcall	_i2c_send
  1493                           
  1494                           ;./p03a_bmp280.h: 84:     i2c_send(addr);
  1495  0566  0872               	movf	i2c_read_byte@addr,w
  1496  0567  120A  118A  2464  120A  118A  	fcall	_i2c_send
  1497  056C                     l1066:
  1498                           
  1499                           ;./p03a_bmp280.h: 85:     i2c_restart();
  1500  056C  120A  118A  243C  120A  118A  	fcall	_i2c_restart
  1501  0571                     l1068:
  1502                           
  1503                           ;./p03a_bmp280.h: 86:     i2c_send(0xEF);
  1504  0571  30EF               	movlw	239
  1505  0572  120A  118A  2464  120A  118A  	fcall	_i2c_send
  1506  0577                     l1070:
  1507                           
  1508                           ;./p03a_bmp280.h: 87:     rec=i2c_read();
  1509  0577  120A  118A  2458  120A  118A  	fcall	_i2c_read
  1510  057C  00F1               	movwf	??_i2c_read_byte
  1511  057D  0871               	movf	??_i2c_read_byte,w
  1512  057E  00F3               	movwf	i2c_read_byte@rec
  1513  057F                     l1072:
  1514                           
  1515                           ;./p03a_bmp280.h: 88:     i2c_nak();
  1516  057F  120A  118A  244E  120A  118A  	fcall	_i2c_nak
  1517  0584                     l1074:
  1518                           
  1519                           ;./p03a_bmp280.h: 89:     i2c_stop();
  1520  0584  120A  118A  2445  120A  118A  	fcall	_i2c_stop
  1521                           
  1522                           ;./p03a_bmp280.h: 90:     return rec;
  1523  0589  0873               	movf	i2c_read_byte@rec,w
  1524  058A                     l95:
  1525  058A  0008               	return
  1526  058B                     __end_of_i2c_read_byte:
  1527                           
  1528                           	psect	text7
  1529  0445                     __ptext7:	
  1530 ;; *************** function _i2c_stop *****************
  1531 ;; Defined at:
  1532 ;;		line 26 in file "./p03a_bmp280.h"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		status,2, status,0, pclath, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0
  1549 ;;      Totals:         0       0       0       0       0
  1550 ;;Total ram usage:        0 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; Hardware stack levels required when called: 1
  1553 ;; This function calls:
  1554 ;;		_waitmssp
  1555 ;; This function is called by:
  1556 ;;		_i2c_read_byte
  1557 ;;		_i2c_send_byte
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _i2c_stop
  1563  0445                     _i2c_stop:
  1564  0445                     l1034:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  1567                           
  1568                           
  1569                           ;./p03a_bmp280.h: 28:     PEN=1;
  1570  0445  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0446  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0447  1511               	bsf	17,2	;volatile
  1573  0448                     l1036:
  1574                           
  1575                           ;./p03a_bmp280.h: 29:     waitmssp();
  1576  0448  120A  118A  242C  120A  118A  	fcall	_waitmssp
  1577  044D                     l57:
  1578  044D  0008               	return
  1579  044E                     __end_of_i2c_stop:
  1580                           
  1581                           	psect	text8
  1582  0464                     __ptext8:	
  1583 ;; *************** function _i2c_send *****************
  1584 ;; Defined at:
  1585 ;;		line 53 in file "./p03a_bmp280.h"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  dat             1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  dat             1    0[COMMON] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         1       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0
  1602 ;;      Totals:         1       0       0       0       0
  1603 ;;Total ram usage:        1 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 1
  1606 ;; This function calls:
  1607 ;;		_waitmssp
  1608 ;; This function is called by:
  1609 ;;		_i2c_read_byte
  1610 ;;		_i2c_send_byte
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _i2c_send
  1616  0464                     _i2c_send:
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _i2c_send: [wreg+status,2+status,0+pclath+cstack]
  1620                           ;i2c_send@dat stored from wreg
  1621  0464  00F0               	movwf	i2c_send@dat
  1622  0465                     l75:	
  1623                           ;./p03a_bmp280.h: 53: void i2c_send(unsigned char dat);./p03a_bmp280.h: 54: {;./p03a_bmp
      +                          280.h: 55: L1: SSPBUF=dat;
  1624                           
  1625  0465                     l1046:
  1626  0465  0870               	movf	i2c_send@dat,w
  1627  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0468  0093               	movwf	19	;volatile
  1630  0469                     l1048:
  1631                           
  1632                           ;./p03a_bmp280.h: 56:     waitmssp();
  1633  0469  120A  118A  242C  120A  118A  	fcall	_waitmssp
  1634  046E                     l76:	
  1635                           ;./p03a_bmp280.h: 57:     while(ACKSTAT){i2c_restart;goto L1;}
  1636                           
  1637  046E  1683               	bsf	3,5	;RP0=1, select bank1
  1638  046F  1303               	bcf	3,6	;RP1=0, select bank1
  1639  0470  1B11               	btfsc	17,6	;volatile
  1640  0471  2C73               	goto	u201
  1641  0472  2C74               	goto	u200
  1642  0473                     u201:
  1643  0473  2C65               	goto	l75
  1644  0474                     u200:
  1645  0474                     l79:
  1646  0474  0008               	return
  1647  0475                     __end_of_i2c_send:
  1648                           
  1649                           	psect	text9
  1650  043C                     __ptext9:	
  1651 ;; *************** function _i2c_restart *****************
  1652 ;; Defined at:
  1653 ;;		line 31 in file "./p03a_bmp280.h"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		status,2, status,0, pclath, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1667 ;;      Params:         0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0
  1670 ;;      Totals:         0       0       0       0       0
  1671 ;;Total ram usage:        0 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 1
  1674 ;; This function calls:
  1675 ;;		_waitmssp
  1676 ;; This function is called by:
  1677 ;;		_i2c_read_byte
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           
  1682                           ;psect for function _i2c_restart
  1683  043C                     _i2c_restart:
  1684  043C                     l1038:	
  1685                           ;incstack = 0
  1686                           ; Regs used in _i2c_restart: [status,2+status,0+pclath+cstack]
  1687                           
  1688                           
  1689                           ;./p03a_bmp280.h: 33:     RSEN=1;
  1690  043C  1683               	bsf	3,5	;RP0=1, select bank1
  1691  043D  1303               	bcf	3,6	;RP1=0, select bank1
  1692  043E  1491               	bsf	17,1	;volatile
  1693  043F                     l1040:
  1694                           
  1695                           ;./p03a_bmp280.h: 34:     waitmssp();
  1696  043F  120A  118A  242C  120A  118A  	fcall	_waitmssp
  1697  0444                     l60:
  1698  0444  0008               	return
  1699  0445                     __end_of_i2c_restart:
  1700                           
  1701                           	psect	text10
  1702  0458                     __ptext10:	
  1703 ;; *************** function _i2c_read *****************
  1704 ;; Defined at:
  1705 ;;		line 70 in file "./p03a_bmp280.h"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      unsigned char 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       0       0       0       0
  1720 ;;      Locals:         0       0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0
  1722 ;;      Totals:         0       0       0       0       0
  1723 ;;Total ram usage:        0 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 1
  1726 ;; This function calls:
  1727 ;;		_waitmssp
  1728 ;; This function is called by:
  1729 ;;		_i2c_read_byte
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function _i2c_read
  1735  0458                     _i2c_read:
  1736  0458                     l1050:	
  1737                           ;incstack = 0
  1738                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1739                           
  1740                           
  1741                           ;./p03a_bmp280.h: 72:     RCEN=1;
  1742  0458  1683               	bsf	3,5	;RP0=1, select bank1
  1743  0459  1303               	bcf	3,6	;RP1=0, select bank1
  1744  045A  1591               	bsf	17,3	;volatile
  1745  045B                     l1052:
  1746                           
  1747                           ;./p03a_bmp280.h: 73:     waitmssp();
  1748  045B  120A  118A  242C  120A  118A  	fcall	_waitmssp
  1749  0460                     l1054:
  1750                           
  1751                           ;./p03a_bmp280.h: 74:     return SSPBUF;
  1752  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0462  0813               	movf	19,w	;volatile
  1755  0463                     l88:
  1756  0463  0008               	return
  1757  0464                     __end_of_i2c_read:
  1758                           
  1759                           	psect	text11
  1760  044E                     __ptext11:	
  1761 ;; *************** function _i2c_nak *****************
  1762 ;; Defined at:
  1763 ;;		line 42 in file "./p03a_bmp280.h"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		status,2, status,0, pclath, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0
  1780 ;;      Totals:         0       0       0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 1
  1784 ;; This function calls:
  1785 ;;		_waitmssp
  1786 ;; This function is called by:
  1787 ;;		_i2c_read_byte
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           
  1792                           ;psect for function _i2c_nak
  1793  044E                     _i2c_nak:
  1794  044E                     l1042:	
  1795                           ;incstack = 0
  1796                           ; Regs used in _i2c_nak: [status,2+status,0+pclath+cstack]
  1797                           
  1798                           
  1799                           ;./p03a_bmp280.h: 44:     ACKDT=1;
  1800  044E  1683               	bsf	3,5	;RP0=1, select bank1
  1801  044F  1303               	bcf	3,6	;RP1=0, select bank1
  1802  0450  1691               	bsf	17,5	;volatile
  1803                           
  1804                           ;./p03a_bmp280.h: 45:     ACKEN=1;
  1805  0451  1611               	bsf	17,4	;volatile
  1806  0452                     l1044:
  1807                           
  1808                           ;./p03a_bmp280.h: 46:     waitmssp();
  1809  0452  120A  118A  242C  120A  118A  	fcall	_waitmssp
  1810  0457                     l66:
  1811  0457  0008               	return
  1812  0458                     __end_of_i2c_nak:
  1813                           
  1814                           	psect	text12
  1815  042C                     __ptext12:	
  1816 ;; *************** function _waitmssp *****************
  1817 ;; Defined at:
  1818 ;;		line 48 in file "./p03a_bmp280.h"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		None
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0
  1835 ;;      Totals:         0       0       0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_i2c_stop
  1842 ;;		_i2c_restart
  1843 ;;		_i2c_nak
  1844 ;;		_i2c_send
  1845 ;;		_i2c_read
  1846 ;;		_i2c_read_byte
  1847 ;;		_i2c_start
  1848 ;;		_i2c_ack
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _waitmssp
  1854  042C                     _waitmssp:
  1855  042C                     l1032:	
  1856                           ;incstack = 0
  1857                           ; Regs used in _waitmssp: []
  1858                           
  1859  042C                     l69:	
  1860                           ;./p03a_bmp280.h: 50:     while(!SSPIF);
  1861                           
  1862  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1863  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1864  042E  1D8C               	btfss	12,3	;volatile
  1865  042F  2C31               	goto	u191
  1866  0430  2C32               	goto	u190
  1867  0431                     u191:
  1868  0431  2C2C               	goto	l69
  1869  0432                     u190:
  1870  0432                     l71:
  1871                           
  1872                           ;./p03a_bmp280.h: 51:     SSPIF=0;
  1873  0432  118C               	bcf	12,3	;volatile
  1874  0433                     l72:
  1875  0433  0008               	return
  1876  0434                     __end_of_waitmssp:
  1877                           
  1878                           	psect	text13
  1879  04D5                     __ptext13:	
  1880 ;; *************** function _LCD_init *****************
  1881 ;; Defined at:
  1882 ;;		line 41 in file "./lcd4bit.h"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          2       0       0       0       0
  1899 ;;      Totals:         2       0       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 1
  1903 ;; This function calls:
  1904 ;;		_LCD_Command
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _LCD_init
  1912  04D5                     _LCD_init:
  1913  04D5                     l1118:	
  1914                           ;incstack = 0
  1915                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1916                           
  1917                           
  1918                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  1919  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  1920  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  1921  04D7  1386               	bcf	6,7	;volatile
  1922                           
  1923                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  1924  04D8  1306               	bcf	6,6	;volatile
  1925                           
  1926                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  1927  04D9  1286               	bcf	6,5	;volatile
  1928                           
  1929                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  1930  04DA  1206               	bcf	6,4	;volatile
  1931                           
  1932                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  1933  04DB  1007               	bcf	7,0	;volatile
  1934                           
  1935                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  1936  04DC  1087               	bcf	7,1	;volatile
  1937  04DD                     l1120:
  1938                           
  1939                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  1940  04DD  3002               	movlw	2
  1941  04DE  120A  118A  250B  120A  118A  	fcall	_LCD_Command
  1942                           
  1943                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  1944  04E3  3028               	movlw	40
  1945  04E4  120A  118A  250B  120A  118A  	fcall	_LCD_Command
  1946                           
  1947                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  1948  04E9  3080               	movlw	128
  1949  04EA  120A  118A  250B  120A  118A  	fcall	_LCD_Command
  1950                           
  1951                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  1952  04EF  300C               	movlw	12
  1953  04F0  120A  118A  250B  120A  118A  	fcall	_LCD_Command
  1954                           
  1955                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  1956  04F5  3006               	movlw	6
  1957  04F6  120A  118A  250B  120A  118A  	fcall	_LCD_Command
  1958                           
  1959                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  1960  04FB  3001               	movlw	1
  1961  04FC  120A  118A  250B  120A  118A  	fcall	_LCD_Command
  1962  0501                     l1122:
  1963                           
  1964                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1965  0501  3041               	movlw	65
  1966  0502  00F4               	movwf	??_LCD_init+1
  1967  0503  30EE               	movlw	238
  1968  0504  00F3               	movwf	??_LCD_init
  1969  0505                     u407:
  1970  0505  0BF3               	decfsz	??_LCD_init,f
  1971  0506  2D05               	goto	u407
  1972  0507  0BF4               	decfsz	??_LCD_init+1,f
  1973  0508  2D05               	goto	u407
  1974  0509  0000               	nop
  1975  050A                     l106:
  1976  050A  0008               	return
  1977  050B                     __end_of_LCD_init:
  1978                           
  1979                           	psect	text14
  1980  050B                     __ptext14:	
  1981 ;; *************** function _LCD_Command *****************
  1982 ;; Defined at:
  1983 ;;		line 13 in file "./lcd4bit.h"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  cmnd            1    wreg     unsigned char 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  cmnd            1    2[COMMON] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1997 ;;      Params:         0       0       0       0       0
  1998 ;;      Locals:         1       0       0       0       0
  1999 ;;      Temps:          2       0       0       0       0
  2000 ;;      Totals:         3       0       0       0       0
  2001 ;;Total ram usage:        3 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_LCD_init
  2007 ;;		_print_checkdata
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function _LCD_Command
  2013  050B                     _LCD_Command:
  2014                           
  2015                           ;incstack = 0
  2016                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2017                           ;LCD_Command@cmnd stored from wreg
  2018  050B  00F2               	movwf	LCD_Command@cmnd
  2019  050C                     l1078:
  2020                           
  2021                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  2022  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2023  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2024  050E  1007               	bcf	7,0	;volatile
  2025  050F                     l1080:
  2026                           
  2027                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  2028  050F  0872               	movf	LCD_Command@cmnd,w
  2029  0510  0086               	movwf	6	;volatile
  2030  0511                     l1082:
  2031                           
  2032                           ;./lcd4bit.h: 17:     RC1 = 1;
  2033  0511  1487               	bsf	7,1	;volatile
  2034                           
  2035                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2036  0512  3041               	movlw	65
  2037  0513  00F1               	movwf	??_LCD_Command+1
  2038  0514  30EE               	movlw	238
  2039  0515  00F0               	movwf	??_LCD_Command
  2040  0516                     u417:
  2041  0516  0BF0               	decfsz	??_LCD_Command,f
  2042  0517  2D16               	goto	u417
  2043  0518  0BF1               	decfsz	??_LCD_Command+1,f
  2044  0519  2D16               	goto	u417
  2045  051A  0000               	nop
  2046  051B                     l1084:
  2047                           
  2048                           ;./lcd4bit.h: 19:     RC1 = 0;
  2049  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2050  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2051  051D  1087               	bcf	7,1	;volatile
  2052                           
  2053                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2054  051E  3041               	movlw	65
  2055  051F  00F1               	movwf	??_LCD_Command+1
  2056  0520  30EE               	movlw	238
  2057  0521  00F0               	movwf	??_LCD_Command
  2058  0522                     u427:
  2059  0522  0BF0               	decfsz	??_LCD_Command,f
  2060  0523  2D22               	goto	u427
  2061  0524  0BF1               	decfsz	??_LCD_Command+1,f
  2062  0525  2D22               	goto	u427
  2063  0526  0000               	nop
  2064  0527                     l1086:
  2065                           
  2066                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  2067  0527  0872               	movf	LCD_Command@cmnd,w
  2068  0528  00F0               	movwf	??_LCD_Command
  2069  0529  3003               	movlw	3
  2070  052A                     u225:
  2071  052A  1003               	clrc
  2072  052B  0DF0               	rlf	??_LCD_Command,f
  2073  052C  3EFF               	addlw	-1
  2074  052D  1D03               	skipz
  2075  052E  2D2A               	goto	u225
  2076  052F  1003               	clrc
  2077  0530  0D70               	rlf	??_LCD_Command,w
  2078  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0533  0086               	movwf	6	;volatile
  2081  0534                     l1088:
  2082                           
  2083                           ;./lcd4bit.h: 22:     RC1 = 1;
  2084  0534  1487               	bsf	7,1	;volatile
  2085  0535                     l1090:
  2086                           
  2087                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2088  0535  3041               	movlw	65
  2089  0536  00F1               	movwf	??_LCD_Command+1
  2090  0537  30EE               	movlw	238
  2091  0538  00F0               	movwf	??_LCD_Command
  2092  0539                     u437:
  2093  0539  0BF0               	decfsz	??_LCD_Command,f
  2094  053A  2D39               	goto	u437
  2095  053B  0BF1               	decfsz	??_LCD_Command+1,f
  2096  053C  2D39               	goto	u437
  2097  053D  0000               	nop
  2098  053E                     l1092:
  2099                           
  2100                           ;./lcd4bit.h: 24:     RC1 = 0;
  2101  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2102  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0540  1087               	bcf	7,1	;volatile
  2104  0541                     l1094:
  2105                           
  2106                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2107  0541  3041               	movlw	65
  2108  0542  00F1               	movwf	??_LCD_Command+1
  2109  0543  30EE               	movlw	238
  2110  0544  00F0               	movwf	??_LCD_Command
  2111  0545                     u447:
  2112  0545  0BF0               	decfsz	??_LCD_Command,f
  2113  0546  2D45               	goto	u447
  2114  0547  0BF1               	decfsz	??_LCD_Command+1,f
  2115  0548  2D45               	goto	u447
  2116  0549  0000               	nop
  2117  054A                     l100:
  2118  054A  0008               	return
  2119  054B                     __end_of_LCD_Command:
  2120  007E                     btemp	set	126	;btemp
  2121  007E                     wtemp0	set	126
  2122                           
  2123                           	psect	idloc
  2124                           
  2125                           ;Config register IDLOC0 @ 0x2000
  2126                           ;	unspecified, using default values
  2127  2000                     	org	8192
  2128  2000  3FFF               	dw	16383
  2129                           
  2130                           ;Config register IDLOC1 @ 0x2001
  2131                           ;	unspecified, using default values
  2132  2001                     	org	8193
  2133  2001  3FFF               	dw	16383
  2134                           
  2135                           ;Config register IDLOC2 @ 0x2002
  2136                           ;	unspecified, using default values
  2137  2002                     	org	8194
  2138  2002  3FFF               	dw	16383
  2139                           
  2140                           ;Config register IDLOC3 @ 0x2003
  2141                           ;	unspecified, using default values
  2142  2003                     	org	8195
  2143  2003  3FFF               	dw	16383
  2144                           
  2145                           	psect	config
  2146                           
  2147                           ;Config register CONFIG @ 0x2007
  2148                           ;	unspecified, using default values
  2149                           ;	Oscillator Selection bits
  2150                           ;	FOSC = 0x3, unprogrammed default
  2151                           ;	Watchdog Timer Enable bit
  2152                           ;	WDTE = 0x1, unprogrammed default
  2153                           ;	Power-up Timer Enable bit
  2154                           ;	PWRTE = 0x1, unprogrammed default
  2155                           ;	Brown-out Reset Enable bit
  2156                           ;	BOREN = 0x1, unprogrammed default
  2157                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2158                           ;	LVP = 0x1, unprogrammed default
  2159                           ;	Data EEPROM Memory Code Protection bit
  2160                           ;	CPD = 0x1, unprogrammed default
  2161                           ;	Flash Program Memory Write Enable bits
  2162                           ;	WRT = 0x3, unprogrammed default
  2163                           ;	In-Circuit Debugger Mode bit
  2164                           ;	DEBUG = 0x1, unprogrammed default
  2165                           ;	Flash Program Memory Code Protection bit
  2166                           ;	CP = 0x1, unprogrammed default
  2167  2007                     	org	8199
  2168  2007  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         131
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0      77
    BANK1            80      0      52
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_bmp280_getdata
    _show->_LCD_Char
    _print_checkdata->_LCD_Char
    _print_checkdata->_LCD_Command
    _bmp280_getdata->_i2c_read_byte
    _i2c_read_byte->_i2c_send
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     321
                                              8 COMMON     3     3      0
                           _LCD_init
                     _bmp280_getdata
                           _i2c_init
                    _print_checkdata
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     122
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _print_checkdata                                      0     0      0      88
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bmp280_getdata                                       4     4      0      67
                                              4 COMMON     4     4      0
                      _i2c_read_byte
 ---------------------------------------------------------------------------------
 (2) _i2c_read_byte                                        3     3      0      67
                                              1 COMMON     3     3      0
                            _i2c_nak
                           _i2c_read
                        _i2c_restart
                           _i2c_send
                           _i2c_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _i2c_send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _i2c_nak                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_Command
   _bmp280_getdata
     _i2c_read_byte
       _i2c_nak
         _waitmssp
       _i2c_read
         _waitmssp
       _i2c_restart
         _waitmssp
       _i2c_send
         _waitmssp
       _i2c_stop
         _waitmssp
       _waitmssp
   _i2c_init
   _print_checkdata
     _LCD_Char
     _LCD_Command
   _show
     _LCD_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      34       7       65.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8E      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 08 10:55:19 2022

                       _P 00A0                         _T 00A4                         pc 0002  
            ?_LCD_Command 0070                        _B0 003C                        _B1 0038  
                      _B2 0034                        _B3 0030                        _B4 00BC  
                      _B5 002C                        _B6 0028                        _B7 00B8  
                      _B8 0024                        _B9 0020                        _AA 0054  
                      _AB 0050                        _BA 00D0                        _AC 004C  
                      _BB 00CC                        _AD 0048                        _BC 00C8  
                      _AE 0044                        _BD 00C4                        _AF 0040  
                      _BE 00C0                        _BF 04A0                        l51 048A  
                      l60 0444                        l71 0432                        l72 0433  
                      l57 044D                        l66 0457                        l75 0465  
                      l91 054C                        l76 046E                        l92 055A  
                      l69 042C                        l79 0474                        l95 058A  
                      l88 0463                        _MB 0067                        _MC 0065  
                      _MD 0063                        _X1 00AC                        _X2 00A8  
                      u60 047F                        u61 047B                        u74 0482  
                      _UP 00B0                        _UT 00B4                        fsr 0004  
                     _AC1 007B                       l100 054A                       _AC2 006B  
                     _AC3 0069                       _AC4 005F                       l103 05CA  
                     _AC5 005D                       _AC6 005B                       l106 050A  
                     l115 04A9                       l213 07E8                       l216 0631  
                     l890 0475                       l892 0482                       _RC0 0038  
                     _RC1 0039                       u200 0474                       u201 0473  
                     u210 0560                       u211 055F                       u240 04A9  
                     u225 052A                       u241 04A8                       u250 07E5  
                     u251 07E1                       u235 05AA                       u190 0432  
                     u407 0505                       u191 0431                       u264 07E8  
                     _PEN 048A                       u417 0516                       u427 0522  
                     u437 0539                       u357 04C0                       u447 0545  
                     u367 0596                       u377 05A2                       u387 05B9  
                     _SEN 0488                       u397 05C5                       _avv 0058  
                     _oss 0061                       fsr0 0004                       indf 0000  
                    l1100 0591                      l1110 05BE                      l1102 059B  
                    l1120 04DD                      l1032 042C                      l1040 043F  
                    l1112 05C1                      l1104 05A7                      l1122 0501  
                    l1042 044E                      l1050 0458                      l1034 0445  
                    l1106 05B4                      l1130 049D                      l1044 0452  
                    l1052 045B                      l1036 0448                      l1060 0551  
                    l1132 0632                      l1108 05B5                      l1124 048C  
                    l1118 04D5                      l1054 0460                      l1038 043C  
                    l1046 0465                      l1070 0577                      l1062 0555  
                    l1134 05CB                      l1126 048D                      l1080 050F  
                    l1048 0469                      l1072 057F                      l1064 0560  
                    l1128 0499                      l1090 0535                      l1082 0511  
                    l1074 0584                      l1066 056C                      l1058 054C  
                    l1250 04CC                      l1242 04AA                      l1092 053E  
                    l1084 051B                      l1068 0571                      l1244 04B4  
                    l1094 0541                      l1086 0527                      l1078 050C  
                    l1246 04BA                      l1088 0534                      l1096 058C  
                    l1248 04C7                      l1098 058F                      STR_1 0009  
                    _RCEN 048B                      _RSEN 0489             _i2c_read_byte 054B  
                    _main 04AA                      _show 048B                      btemp 007E  
                    start 0000             ??_i2c_restart 0070           __end_of_i2c_nak 0458  
        __end_of_LCD_Char 05CB              LCD_Char@data 0072          __end_of_LCD_init 050B  
                   ?_main 0070                     _ACKEN 048C                     _ACKDT 048D  
                   ?_show 0070                     _PORTB 0006                     _SSPIF 0063  
             i2c_send@dat 0070                     pclath 000A            ?_i2c_read_byte 0070  
                   show@s 0074            _bmp280_getdata 0632                     status 0003  
                   wtemp0 007E           __initialization 07E9              __end_of_main 04D5  
            __end_of_show 04AA          __end_of_i2c_init 048B          __end_of_i2c_read 0464  
        __end_of_i2c_send 0475          __end_of_i2c_stop 044E       __end_of_i2c_restart 0445  
                  ??_main 0078                    ??_show 0073    __end_of_bmp280_getdata 07E9  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013                 ??_i2c_nak 0070  
    __size_of_LCD_Command 0040          __end_of_waitmssp 0434           ??_i2c_read_byte 0071  
         ?_bmp280_getdata 0070                 ?_LCD_Char 0070   __end_of__initialization 07FC  
               ?_LCD_init 0070            __pcstackCOMMON 0070               _i2c_restart 043C  
__size_of_print_checkdata 0067                __pbssBANK0 0020                __pbssBANK1 00A0  
               ?_i2c_init 0070                 ?_i2c_read 0070                 ?_i2c_send 0070  
              ??_LCD_Char 0070                 ?_i2c_stop 0070                ??_LCD_init 0073  
              __pmaintext 04AA                   _ACKSTAT 048E                __stringtab 0003  
              ??_i2c_init 0070                ??_i2c_read 0070                ??_i2c_send 0070  
              ??_i2c_stop 0070                   _i2c_nak 044E                 ?_waitmssp 0070  
                 __ptext1 048B                   __ptext2 05CB                   __ptext3 058B  
                 __ptext4 0475                   __ptext5 0632                   __ptext6 054B  
                 __ptext7 0445                   __ptext8 0464                   __ptext9 043C  
                 clrloop0 0435         ??_print_checkdata 0073      end_of_initialization 07FC  
              ??_waitmssp 0070          ??_bmp280_getdata 0074                 _TRISBbits 0086  
               _TRISCbits 0087         __size_of_LCD_Char 0040         __size_of_LCD_init 0036  
            ?_i2c_restart 0070             ??_LCD_Command 0070       start_initialization 07E9  
   __end_of_i2c_read_byte 058B         __size_of_i2c_init 0016         __size_of_i2c_read 000C  
       __size_of_i2c_send 0011         __size_of_i2c_stop 0009       __end_of_LCD_Command 054B  
             __pbssCOMMON 007B                 ___latbits 0002                  ?_i2c_nak 0070  
       __size_of_waitmssp 0008                 __pstrings 0003           _print_checkdata 05CB  
                _LCD_Char 058B                  _LCD_init 04D5                 clear_ram0 0434  
             _LCD_Command 050B      __size_of_i2c_restart 0009               __stringbase 0008  
                _i2c_init 0475                  _i2c_read 0458                  _i2c_send 0464  
                _i2c_stop 0445          __size_of_i2c_nak 000A   __end_of_print_checkdata 0632  
      __end_of__stringtab 0009                  __ptext10 0458                  __ptext11 044E  
                __ptext12 042C                  __ptext13 04D5                  __ptext14 050B  
           __size_of_main 002B             __size_of_show 001F                  _waitmssp 042C  
         LCD_Command@cmnd 0072   __size_of_bmp280_getdata 01B7                 stringcode 0003  
        ?_print_checkdata 0070    __size_of_i2c_read_byte 0040                  stringdir 0003  
                stringtab 0003         i2c_read_byte@addr 0072          i2c_read_byte@rec 0073  
