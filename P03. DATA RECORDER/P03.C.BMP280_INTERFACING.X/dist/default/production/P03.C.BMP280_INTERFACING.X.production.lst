

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 09 17:26:21 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK0
   199  0008                     __pidataBANK0:
   200                           
   201                           ;initializer for _oss
   202  0008  3403               	retlw	3
   203  0009  3400               	retlw	0
   204                           
   205                           	psect	strings
   206  0800                     __pstrings:
   207  0800                     stringtab:
   208  0800                     __stringtab:
   209  0800                     stringcode:	
   210                           ;	String table - string pointers are 1 byte each
   211                           
   212  0800                     stringdir:
   213  0800  3008               	movlw	high stringdir
   214  0801  008A               	movwf	10
   215  0802  0804               	movf	4,w
   216  0803  0A84               	incf	4,f
   217  0804  0782               	addwf	2,f
   218  0805                     __stringbase:
   219  0805  3400               	retlw	0
   220  0806                     __end_of__stringtab:
   221  0806                     exp@coeff:
   222  0806  3400               	retlw	0
   223  0807  3400               	retlw	0
   224  0808  3480               	retlw	128
   225  0809  343F               	retlw	63
   226  080A  3418               	retlw	24
   227  080B  3472               	retlw	114
   228  080C  3431               	retlw	49
   229  080D  343F               	retlw	63
   230  080E  34F0               	retlw	240
   231  080F  34FD               	retlw	253
   232  0810  3475               	retlw	117
   233  0811  343E               	retlw	62
   234  0812  3447               	retlw	71
   235  0813  3458               	retlw	88
   236  0814  3463               	retlw	99
   237  0815  343D               	retlw	61
   238  0816  3458               	retlw	88
   239  0817  3495               	retlw	149
   240  0818  341D               	retlw	29
   241  0819  343C               	retlw	60
   242  081A  3482               	retlw	130
   243  081B  34C4               	retlw	196
   244  081C  34AE               	retlw	174
   245  081D  343A               	retlw	58
   246  081E  34A8               	retlw	168
   247  081F  3478               	retlw	120
   248  0820  3421               	retlw	33
   249  0821  3439               	retlw	57
   250  0822  34EF               	retlw	239
   251  0823  3493               	retlw	147
   252  0824  3480               	retlw	128
   253  0825  3437               	retlw	55
   254  0826  34A0               	retlw	160
   255  0827  3492               	retlw	146
   256  0828  34A7               	retlw	167
   257  0829  3435               	retlw	53
   258  082A  3446               	retlw	70
   259  082B  3456               	retlw	86
   260  082C  3415               	retlw	21
   261  082D  3434               	retlw	52
   262  082E                     __end_ofexp@coeff:
   263  082E                     log@coeff:
   264  082E  3400               	retlw	0
   265  082F  3400               	retlw	0
   266  0830  3400               	retlw	0
   267  0831  3400               	retlw	0
   268  0832  34C4               	retlw	196
   269  0833  34FF               	retlw	255
   270  0834  347F               	retlw	127
   271  0835  343F               	retlw	63
   272  0836  3480               	retlw	128
   273  0837  34EF               	retlw	239
   274  0838  34FF               	retlw	255
   275  0839  34BE               	retlw	190
   276  083A  3490               	retlw	144
   277  083B  34E1               	retlw	225
   278  083C  34A9               	retlw	169
   279  083D  343E               	retlw	62
   280  083E  34EC               	retlw	236
   281  083F  3482               	retlw	130
   282  0840  3476               	retlw	118
   283  0841  34BE               	retlw	190
   284  0842  3482               	retlw	130
   285  0843  34AD               	retlw	173
   286  0844  342B               	retlw	43
   287  0845  343E               	retlw	62
   288  0846  340E               	retlw	14
   289  0847  343C               	retlw	60
   290  0848  34C3               	retlw	195
   291  0849  34BD               	retlw	189
   292  084A  3487               	retlw	135
   293  084B  34D1               	retlw	209
   294  084C  3413               	retlw	19
   295  084D  343D               	retlw	61
   296  084E  3441               	retlw	65
   297  084F  3478               	retlw	120
   298  0850  34D3               	retlw	211
   299  0851  34BB               	retlw	187
   300  0852                     __end_oflog@coeff:
   301  0006                     _PORTB	set	6
   302  0013                     _SSPBUF	set	19
   303  0014                     _SSPCON	set	20
   304  0039                     _RC1	set	57
   305  0038                     _RC0	set	56
   306  0063                     _SSPIF	set	99
   307  0087                     _TRISCbits	set	135
   308  0086                     _TRISBbits	set	134
   309  0093                     _SSPADD	set	147
   310  048B                     _RCEN	set	1163
   311  048E                     _ACKSTAT	set	1166
   312  048C                     _ACKEN	set	1164
   313  048D                     _ACKDT	set	1165
   314  0489                     _RSEN	set	1161
   315  048A                     _PEN	set	1162
   316  0488                     _SEN	set	1160
   317  043C                     _TRISC4	set	1084
   318  043B                     _TRISC3	set	1083
   319  0852                     STR_1:
   320  0852  3442               	retlw	66	;'B'
   321  0853  344D               	retlw	77	;'M'
   322  0854  3450               	retlw	80	;'P'
   323  0855  3432               	retlw	50	;'2'
   324  0856  3438               	retlw	56	;'8'
   325  0857  3430               	retlw	48	;'0'
   326  0858  3400               	retlw	0
   327                           
   328                           	psect	cinit
   329  07DF                     start_initialization:	
   330                           ; #config settings
   331                           
   332  07DF                     __initialization:
   333                           
   334                           ; Initialize objects allocated to BANK0
   335  07DF  120A  118A  2008  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   336  07E4  00ED               	movwf	__pdataBANK0& (0+127)
   337  07E5  120A  118A  2009  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   338  07EA  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   339                           
   340                           ; Clear objects allocated to BANK1
   341  07EB  1383               	bcf	3,7	;select IRP bank0
   342  07EC  30A0               	movlw	low __pbssBANK1
   343  07ED  0084               	movwf	4
   344  07EE  30DB               	movlw	low (__pbssBANK1+59)
   345  07EF  120A  158A  22F3  120A  118A  	fcall	clear_ram0
   346                           
   347                           ; Clear objects allocated to BANK0
   348  07F4  304B               	movlw	low __pbssBANK0
   349  07F5  0084               	movwf	4
   350  07F6  306D               	movlw	low (__pbssBANK0+34)
   351  07F7  120A  158A  22F3  120A  118A  	fcall	clear_ram0
   352  07FC                     end_of_initialization:	
   353                           ;End of C runtime variable initialization code
   354                           
   355  07FC                     __end_of__initialization:
   356  07FC  0183               	clrf	3
   357  07FD  120A  118A  2A39   	ljmp	_main	;jump to C main() function
   358                           
   359                           	psect	bssBANK0
   360  004B                     __pbssBANK0:
   361  004B                     _x2:
   362  004B                     	ds	4
   363  004F                     _x1:
   364  004F                     	ds	4
   365  0053                     _b7:
   366  0053                     	ds	4
   367  0057                     _b6:
   368  0057                     	ds	4
   369  005B                     _errno:
   370  005B                     	ds	2
   371  005D                     _hpa:
   372  005D                     	ds	2
   373  005F                     _altitude:
   374  005F                     	ds	2
   375  0061                     _ac4:
   376  0061                     	ds	2
   377  0063                     _ac3:
   378  0063                     	ds	2
   379  0065                     _ac2:
   380  0065                     	ds	2
   381  0067                     _ac1:
   382  0067                     	ds	2
   383  0069                     _p:
   384  0069                     	ds	4
   385                           
   386                           	psect	dataBANK0
   387  006D                     __pdataBANK0:
   388  006D                     _oss:
   389  006D                     	ds	2
   390                           
   391                           	psect	bssBANK1
   392  00A0                     __pbssBANK1:
   393  00A0                     _x3:
   394  00A0                     	ds	4
   395  00A4                     _up:
   396  00A4                     	ds	4
   397  00A8                     _b4:
   398  00A8                     	ds	4
   399  00AC                     _b5:
   400  00AC                     	ds	4
   401  00B0                     _b3:
   402  00B0                     	ds	4
   403  00B4                     _b2:
   404  00B4                     	ds	4
   405  00B8                     _b1:
   406  00B8                     	ds	4
   407  00BC                     _b0:
   408  00BC                     	ds	4
   409  00C0                     _af:
   410  00C0                     	ds	4
   411  00C4                     _ae:
   412  00C4                     	ds	4
   413  00C8                     _ad:
   414  00C8                     	ds	4
   415  00CC                     _ac:
   416  00CC                     	ds	4
   417  00D0                     _ab:
   418  00D0                     	ds	4
   419  00D4                     _aa:
   420  00D4                     	ds	4
   421  00D8                     _avv:
   422  00D8                     	ds	3
   423                           
   424                           	psect	clrtext
   425  0AF3                     clear_ram0:	
   426                           ;	Called with FSR containing the base address, and
   427                           ;	W with the last address+1
   428                           
   429  0AF3  0064               	clrwdt	;clear the watchdog before getting into this loop
   430  0AF4                     clrloop0:
   431  0AF4  0180               	clrf	0	;clear RAM location pointed to by FSR
   432  0AF5  0A84               	incf	4,f	;increment pointer
   433  0AF6  0604               	xorwf	4,w	;XOR with final address
   434  0AF7  1903               	btfsc	3,2	;have we reached the end yet?
   435  0AF8  3400               	retlw	0	;all done for this memory range, return
   436  0AF9  0604               	xorwf	4,w	;XOR again to restore value
   437  0AFA  2AF4               	goto	clrloop0	;do the next byte
   438                           
   439                           	psect	cstackCOMMON
   440  0070                     __pcstackCOMMON:
   441  0070                     ?_bmp280_waitmssp:
   442  0070                     ??_bmp280_waitmssp:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_bmp280_getdata:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_uncompensated_pressure:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_bmp280_init:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ??_bmp280_init:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_bmp280_start:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ??_bmp280_start:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_bmp280_stop:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ??_bmp280_stop:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_bmp280_restart:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ??_bmp280_restart:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_bmp280_nak:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ??_bmp280_nak:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_bmp280_send:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ??_bmp280_send:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_bmp280_read:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ??_bmp280_read:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_bmp280_read_byte:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_LCD_Command:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_LCD_Command:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_LCD_Char:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ??_LCD_Char:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_LCD_init:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_show:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_main:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?___awdiv:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?___awmod:	
   521                           ; 2 bytes @ 0x0
   522                           
   523  0070                     ?___lwdiv:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0070                     ?___lwmod:	
   527                           ; 2 bytes @ 0x0
   528                           
   529  0070                     ?___lmul:	
   530                           ; 2 bytes @ 0x0
   531                           
   532  0070                     ?___lldiv:	
   533                           ; 4 bytes @ 0x0
   534                           
   535  0070                     bmp280_send@dat:	
   536                           ; 4 bytes @ 0x0
   537                           
   538  0070                     ___awdiv@divisor:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ___awmod@divisor:	
   542                           ; 2 bytes @ 0x0
   543                           
   544  0070                     ___lwdiv@divisor:	
   545                           ; 2 bytes @ 0x0
   546                           
   547  0070                     ___lwmod@divisor:	
   548                           ; 2 bytes @ 0x0
   549                           
   550  0070                     ___lmul@multiplier:	
   551                           ; 2 bytes @ 0x0
   552                           
   553  0070                     ___lldiv@divisor:	
   554                           ; 4 bytes @ 0x0
   555                           
   556                           
   557                           ; 4 bytes @ 0x0
   558  0070                     	ds	1
   559  0071                     ?_bmp280_send_byte:
   560  0071                     ??_bmp280_read_byte:	
   561                           ; 1 bytes @ 0x1
   562                           
   563  0071                     bmp280_send_byte@count:	
   564                           ; 1 bytes @ 0x1
   565                           
   566                           
   567                           ; 1 bytes @ 0x1
   568  0071                     	ds	1
   569  0072                     ??_bmp280_send_byte:
   570  0072                     bmp280_send_byte@addr:	
   571                           ; 1 bytes @ 0x2
   572                           
   573  0072                     bmp280_read_byte@addr:	
   574                           ; 1 bytes @ 0x2
   575                           
   576  0072                     LCD_Command@cmnd:	
   577                           ; 1 bytes @ 0x2
   578                           
   579  0072                     LCD_Char@data:	
   580                           ; 1 bytes @ 0x2
   581                           
   582  0072                     ___awdiv@dividend:	
   583                           ; 1 bytes @ 0x2
   584                           
   585  0072                     ___awmod@dividend:	
   586                           ; 2 bytes @ 0x2
   587                           
   588  0072                     ___lwdiv@dividend:	
   589                           ; 2 bytes @ 0x2
   590                           
   591  0072                     ___lwmod@dividend:	
   592                           ; 2 bytes @ 0x2
   593                           
   594                           
   595                           ; 2 bytes @ 0x2
   596  0072                     	ds	1
   597  0073                     ??_LCD_init:
   598  0073                     ??_show:	
   599                           ; 1 bytes @ 0x3
   600                           
   601  0073                     bmp280_read_byte@rec:	
   602                           ; 1 bytes @ 0x3
   603                           
   604                           
   605                           ; 1 bytes @ 0x3
   606  0073                     	ds	1
   607  0074                     ??_bmp280_getdata:
   608  0074                     ??___awdiv:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0074                     ??___awmod:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0074                     ??___lwdiv:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0074                     ??___lwmod:	
   618                           ; 1 bytes @ 0x4
   619                           
   620  0074                     show@s:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0074                     ___lmul@multiplicand:	
   624                           ; 1 bytes @ 0x4
   625                           
   626  0074                     ___lldiv@dividend:	
   627                           ; 4 bytes @ 0x4
   628                           
   629                           
   630                           ; 4 bytes @ 0x4
   631  0074                     	ds	1
   632  0075                     ___awdiv@counter:
   633  0075                     ___awmod@counter:	
   634                           ; 1 bytes @ 0x5
   635                           
   636  0075                     ___lwmod@counter:	
   637                           ; 1 bytes @ 0x5
   638                           
   639  0075                     ___lwdiv@quotient:	
   640                           ; 1 bytes @ 0x5
   641                           
   642                           
   643                           ; 2 bytes @ 0x5
   644  0075                     	ds	1
   645  0076                     ___awdiv@sign:
   646  0076                     ___awmod@sign:	
   647                           ; 1 bytes @ 0x6
   648                           
   649                           
   650                           ; 1 bytes @ 0x6
   651  0076                     	ds	1
   652  0077                     ___lwdiv@counter:
   653  0077                     ___awdiv@quotient:	
   654                           ; 1 bytes @ 0x7
   655                           
   656                           
   657                           ; 2 bytes @ 0x7
   658  0077                     	ds	1
   659  0078                     ??___lmul:
   660  0078                     ??___lldiv:	
   661                           ; 1 bytes @ 0x8
   662                           
   663                           
   664                           ; 1 bytes @ 0x8
   665  0078                     	ds	1
   666  0079                     ?_show_multidigits:
   667  0079                     show_multidigits@val:	
   668                           ; 1 bytes @ 0x9
   669                           
   670  0079                     ___lmul@product:	
   671                           ; 2 bytes @ 0x9
   672                           
   673  0079                     ___lldiv@quotient:	
   674                           ; 4 bytes @ 0x9
   675                           
   676                           
   677                           ; 4 bytes @ 0x9
   678  0079                     	ds	2
   679  007B                     ??_show_multidigits:
   680                           
   681                           ; 1 bytes @ 0xB
   682  007B                     	ds	2
   683  007D                     ??___aldiv:
   684  007D                     ___lldiv@counter:	
   685                           ; 1 bytes @ 0xD
   686                           
   687                           
   688                           ; 1 bytes @ 0xD
   689  007D                     	ds	1
   690                           
   691                           	psect	cstackBANK0
   692  0020                     __pcstackBANK0:
   693  0020                     ??_uncompensated_pressure:
   694  0020                     ?___aldiv:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0020                     show_multidigits@digit4:	
   698                           ; 4 bytes @ 0x0
   699                           
   700  0020                     ___aldiv@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703                           
   704                           ; 4 bytes @ 0x0
   705  0020                     	ds	2
   706  0022                     show_multidigits@result:
   707                           
   708                           ; 2 bytes @ 0x2
   709  0022                     	ds	2
   710  0024                     show_multidigits@digit3:
   711  0024                     ___aldiv@dividend:	
   712                           ; 2 bytes @ 0x4
   713                           
   714                           
   715                           ; 4 bytes @ 0x4
   716  0024                     	ds	2
   717  0026                     show_multidigits@digit1:
   718                           
   719                           ; 2 bytes @ 0x6
   720  0026                     	ds	2
   721  0028                     ___aldiv@counter:
   722  0028                     show_multidigits@digit2:	
   723                           ; 1 bytes @ 0x8
   724                           
   725                           
   726                           ; 2 bytes @ 0x8
   727  0028                     	ds	1
   728  0029                     ___aldiv@sign:
   729                           
   730                           ; 1 bytes @ 0x9
   731  0029                     	ds	1
   732  002A                     show_multidigits@result1:
   733  002A                     ___aldiv@quotient:	
   734                           ; 2 bytes @ 0xA
   735                           
   736                           
   737                           ; 4 bytes @ 0xA
   738  002A                     	ds	2
   739  002C                     show_multidigits@remainder:
   740                           
   741                           ; 2 bytes @ 0xC
   742  002C                     	ds	1
   743  002D                     uncompensated_pressure@ff6:
   744                           
   745                           ; 4 bytes @ 0xD
   746  002D                     	ds	4
   747  0031                     uncompensated_pressure@ff7:
   748                           
   749                           ; 4 bytes @ 0x11
   750  0031                     	ds	4
   751  0035                     uncompensated_pressure@ff8:
   752                           
   753                           ; 4 bytes @ 0x15
   754  0035                     	ds	4
   755  0039                     ??_main:
   756                           
   757                           ; 1 bytes @ 0x19
   758  0039                     	ds	14
   759  0047                     _main$959:
   760                           
   761                           ; 4 bytes @ 0x27
   762  0047                     	ds	4
   763                           
   764                           	psect	maintext
   765  0239                     __pmaintext:	
   766 ;;
   767 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
   768 ;;
   769 ;; *************** function _main *****************
   770 ;; Defined at:
   771 ;;		line 28 in file "main_bmp280.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : B00/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       4       0       0       0
   787 ;;      Temps:          0      14       0       0       0
   788 ;;      Totals:         0      18       0       0       0
   789 ;;Total ram usage:       18 bytes
   790 ;; Hardware stack levels required when called: 4
   791 ;; This function calls:
   792 ;;		_LCD_Command
   793 ;;		_LCD_init
   794 ;;		___aldiv
   795 ;;		___lldiv
   796 ;;		___lmul
   797 ;;		_bmp280_getdata
   798 ;;		_bmp280_init
   799 ;;		_show
   800 ;;		_show_multidigits
   801 ;;		_uncompensated_pressure
   802 ;; This function is called by:
   803 ;;		Startup code after reset
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           
   808                           ;psect for function _main
   809  0239                     _main:
   810  0239                     l2455:	
   811                           ;incstack = 0
   812                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   813                           
   814                           
   815                           ;main_bmp280.c: 30:     LCD_init();
   816  0239  120A  158A  2390  120A  118A  	fcall	_LCD_init
   817                           
   818                           ;main_bmp280.c: 31:     bmp280_init();
   819  023E  120A  158A  233D  120A  118A  	fcall	_bmp280_init
   820  0243                     l2457:
   821                           
   822                           ;main_bmp280.c: 33:     show("BMP280");
   823  0243  304D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   824  0244  120A  158A  2371  120A  118A  	fcall	_show
   825  0249                     l2459:
   826                           
   827                           ;main_bmp280.c: 34:     _delay((unsigned long)((1000)*(12000000/4000.0)));
   828  0249  3010               	movlw	16
   829  024A  1283               	bcf	3,5	;RP0=0, select bank0
   830  024B  1303               	bcf	3,6	;RP1=0, select bank0
   831  024C  00BB               	movwf	??_main+2
   832  024D  3039               	movlw	57
   833  024E  00BA               	movwf	??_main+1
   834  024F  300D               	movlw	13
   835  0250  00B9               	movwf	??_main
   836  0251                     u3707:
   837  0251  0BB9               	decfsz	??_main,f
   838  0252  2A51               	goto	u3707
   839  0253  0BBA               	decfsz	??_main+1,f
   840  0254  2A51               	goto	u3707
   841  0255  0BBB               	decfsz	??_main+2,f
   842  0256  2A51               	goto	u3707
   843  0257                     l2461:
   844                           
   845                           ;main_bmp280.c: 36:     {;main_bmp280.c: 37:         bmp280_getdata();
   846  0257  120A  158A  266A  120A  118A  	fcall	_bmp280_getdata
   847  025C                     l2463:
   848                           
   849                           ;main_bmp280.c: 38:         uncompensated_pressure();
   850  025C  120A  158A  2733  120A  118A  	fcall	_uncompensated_pressure
   851  0261                     l2465:
   852                           
   853                           ;main_bmp280.c: 40:         ac1 = aa + ab;
   854  0261  1683               	bsf	3,5	;RP0=1, select bank1
   855  0262  1303               	bcf	3,6	;RP1=0, select bank1
   856  0263  0850               	movf	_ab^(0+128),w
   857  0264  0754               	addwf	_aa^(0+128),w
   858  0265  1283               	bcf	3,5	;RP0=0, select bank0
   859  0266  1303               	bcf	3,6	;RP1=0, select bank0
   860  0267  00E7               	movwf	_ac1
   861  0268  1683               	bsf	3,5	;RP0=1, select bank1
   862  0269  1303               	bcf	3,6	;RP1=0, select bank1
   863  026A  0851               	movf	(_ab+1)^(0+128),w
   864  026B  1803               	skipnc
   865  026C  0A51               	incf	(_ab+1)^(0+128),w
   866  026D  0755               	addwf	(_aa+1)^(0+128),w
   867  026E  1283               	bcf	3,5	;RP0=0, select bank0
   868  026F  1303               	bcf	3,6	;RP1=0, select bank0
   869  0270  00E8               	movwf	_ac1+1
   870  0271                     l2467:
   871                           
   872                           ;main_bmp280.c: 41:         ac2 = ac + ad;
   873  0271  1683               	bsf	3,5	;RP0=1, select bank1
   874  0272  1303               	bcf	3,6	;RP1=0, select bank1
   875  0273  0848               	movf	_ad^(0+128),w
   876  0274  074C               	addwf	_ac^(0+128),w
   877  0275  1283               	bcf	3,5	;RP0=0, select bank0
   878  0276  1303               	bcf	3,6	;RP1=0, select bank0
   879  0277  00E5               	movwf	_ac2
   880  0278  1683               	bsf	3,5	;RP0=1, select bank1
   881  0279  1303               	bcf	3,6	;RP1=0, select bank1
   882  027A  0849               	movf	(_ad+1)^(0+128),w
   883  027B  1803               	skipnc
   884  027C  0A49               	incf	(_ad+1)^(0+128),w
   885  027D  074D               	addwf	(_ac+1)^(0+128),w
   886  027E  1283               	bcf	3,5	;RP0=0, select bank0
   887  027F  1303               	bcf	3,6	;RP1=0, select bank0
   888  0280  00E6               	movwf	_ac2+1
   889  0281                     l2469:
   890                           
   891                           ;main_bmp280.c: 42:         ac3 = ae + af;
   892  0281  1683               	bsf	3,5	;RP0=1, select bank1
   893  0282  1303               	bcf	3,6	;RP1=0, select bank1
   894  0283  0840               	movf	_af^(0+128),w
   895  0284  0744               	addwf	_ae^(0+128),w
   896  0285  1283               	bcf	3,5	;RP0=0, select bank0
   897  0286  1303               	bcf	3,6	;RP1=0, select bank0
   898  0287  00E3               	movwf	_ac3
   899  0288  1683               	bsf	3,5	;RP0=1, select bank1
   900  0289  1303               	bcf	3,6	;RP1=0, select bank1
   901  028A  0841               	movf	(_af+1)^(0+128),w
   902  028B  1803               	skipnc
   903  028C  0A41               	incf	(_af+1)^(0+128),w
   904  028D  0745               	addwf	(_ae+1)^(0+128),w
   905  028E  1283               	bcf	3,5	;RP0=0, select bank0
   906  028F  1303               	bcf	3,6	;RP1=0, select bank0
   907  0290  00E4               	movwf	_ac3+1
   908  0291                     l2471:
   909                           
   910                           ;main_bmp280.c: 43:         ac4 = b0 + b1;
   911  0291  1683               	bsf	3,5	;RP0=1, select bank1
   912  0292  1303               	bcf	3,6	;RP1=0, select bank1
   913  0293  0838               	movf	_b1^(0+128),w
   914  0294  073C               	addwf	_b0^(0+128),w
   915  0295  1283               	bcf	3,5	;RP0=0, select bank0
   916  0296  1303               	bcf	3,6	;RP1=0, select bank0
   917  0297  00E1               	movwf	_ac4
   918  0298  1683               	bsf	3,5	;RP0=1, select bank1
   919  0299  1303               	bcf	3,6	;RP1=0, select bank1
   920  029A  0839               	movf	(_b1+1)^(0+128),w
   921  029B  1803               	skipnc
   922  029C  0A39               	incf	(_b1+1)^(0+128),w
   923  029D  073D               	addwf	(_b0+1)^(0+128),w
   924  029E  1283               	bcf	3,5	;RP0=0, select bank0
   925  029F  1303               	bcf	3,6	;RP1=0, select bank0
   926  02A0  00E2               	movwf	_ac4+1
   927  02A1                     l2473:
   928                           
   929                           ;main_bmp280.c: 45:         b6 = b5 - 4000;
   930  02A1  3060               	movlw	96
   931  02A2  00B9               	movwf	??_main
   932  02A3  30F0               	movlw	240
   933  02A4  00BA               	movwf	??_main+1
   934  02A5  30FF               	movlw	255
   935  02A6  00BB               	movwf	??_main+2
   936  02A7  30FF               	movlw	255
   937  02A8  00BC               	movwf	??_main+3
   938  02A9  1683               	bsf	3,5	;RP0=1, select bank1
   939  02AA  1303               	bcf	3,6	;RP1=0, select bank1
   940  02AB  082C               	movf	_b5^(0+128),w
   941  02AC  1283               	bcf	3,5	;RP0=0, select bank0
   942  02AD  1303               	bcf	3,6	;RP1=0, select bank0
   943  02AE  07B9               	addwf	??_main,f
   944  02AF  1683               	bsf	3,5	;RP0=1, select bank1
   945  02B0  1303               	bcf	3,6	;RP1=0, select bank1
   946  02B1  082D               	movf	(_b5+1)^(0+128),w
   947  02B2  1803               	skipnc
   948  02B3  0F2D               	incfsz	(_b5+1)^(0+128),w
   949  02B4  2AB6               	goto	u3180
   950  02B5  2AB9               	goto	u3181
   951  02B6                     u3180:
   952  02B6  1283               	bcf	3,5	;RP0=0, select bank0
   953  02B7  1303               	bcf	3,6	;RP1=0, select bank0
   954  02B8  07BA               	addwf	??_main+1,f
   955  02B9                     u3181:
   956  02B9  1683               	bsf	3,5	;RP0=1, select bank1
   957  02BA  1303               	bcf	3,6	;RP1=0, select bank1
   958  02BB  082E               	movf	(_b5+2)^(0+128),w
   959  02BC  1803               	skipnc
   960  02BD  0F2E               	incfsz	(_b5+2)^(0+128),w
   961  02BE  2AC0               	goto	u3182
   962  02BF  2AC3               	goto	u3183
   963  02C0                     u3182:
   964  02C0  1283               	bcf	3,5	;RP0=0, select bank0
   965  02C1  1303               	bcf	3,6	;RP1=0, select bank0
   966  02C2  07BB               	addwf	??_main+2,f
   967  02C3                     u3183:
   968  02C3  1683               	bsf	3,5	;RP0=1, select bank1
   969  02C4  1303               	bcf	3,6	;RP1=0, select bank1
   970  02C5  082F               	movf	(_b5+3)^(0+128),w
   971  02C6  1803               	skipnc
   972  02C7  0A2F               	incf	(_b5+3)^(0+128),w
   973  02C8  1283               	bcf	3,5	;RP0=0, select bank0
   974  02C9  1303               	bcf	3,6	;RP1=0, select bank0
   975  02CA  07BC               	addwf	??_main+3,f
   976  02CB  083C               	movf	??_main+3,w
   977  02CC  00DA               	movwf	_b6+3
   978  02CD  083B               	movf	??_main+2,w
   979  02CE  00D9               	movwf	_b6+2
   980  02CF  083A               	movf	??_main+1,w
   981  02D0  00D8               	movwf	_b6+1
   982  02D1  0839               	movf	??_main,w
   983  02D2  00D7               	movwf	_b6
   984  02D3                     l2475:
   985                           
   986                           ;main_bmp280.c: 46:         x1 = (b2*(b6*b6/4096))/2048;
   987  02D3  3000               	movlw	0
   988  02D4  00A3               	movwf	___aldiv@divisor+3
   989  02D5  3000               	movlw	0
   990  02D6  00A2               	movwf	___aldiv@divisor+2
   991  02D7  3010               	movlw	16
   992  02D8  00A1               	movwf	___aldiv@divisor+1
   993  02D9  3000               	movlw	0
   994  02DA  00A0               	movwf	___aldiv@divisor
   995  02DB  085A               	movf	_b6+3,w
   996  02DC  00F3               	movwf	___lmul@multiplier+3
   997  02DD  0859               	movf	_b6+2,w
   998  02DE  00F2               	movwf	___lmul@multiplier+2
   999  02DF  0858               	movf	_b6+1,w
  1000  02E0  00F1               	movwf	___lmul@multiplier+1
  1001  02E1  0857               	movf	_b6,w
  1002  02E2  00F0               	movwf	___lmul@multiplier
  1003  02E3  085A               	movf	_b6+3,w
  1004  02E4  00F7               	movwf	___lmul@multiplicand+3
  1005  02E5  0859               	movf	_b6+2,w
  1006  02E6  00F6               	movwf	___lmul@multiplicand+2
  1007  02E7  0858               	movf	_b6+1,w
  1008  02E8  00F5               	movwf	___lmul@multiplicand+1
  1009  02E9  0857               	movf	_b6,w
  1010  02EA  00F4               	movwf	___lmul@multiplicand
  1011  02EB  120A  158A  24FE  120A  118A  	fcall	___lmul
  1012  02F0  0873               	movf	?___lmul+3,w
  1013  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1014  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1015  02F3  00A7               	movwf	___aldiv@dividend+3
  1016  02F4  0872               	movf	?___lmul+2,w
  1017  02F5  00A6               	movwf	___aldiv@dividend+2
  1018  02F6  0871               	movf	?___lmul+1,w
  1019  02F7  00A5               	movwf	___aldiv@dividend+1
  1020  02F8  0870               	movf	?___lmul,w
  1021  02F9  00A4               	movwf	___aldiv@dividend
  1022  02FA  120A  118A  200A  120A  118A  	fcall	___aldiv
  1023  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0301  0823               	movf	?___aldiv+3,w
  1026  0302  00CA               	movwf	_main$959+3
  1027  0303  0822               	movf	?___aldiv+2,w
  1028  0304  00C9               	movwf	_main$959+2
  1029  0305  0821               	movf	?___aldiv+1,w
  1030  0306  00C8               	movwf	_main$959+1
  1031  0307  0820               	movf	?___aldiv,w
  1032  0308  00C7               	movwf	_main$959
  1033  0309                     l2477:
  1034                           
  1035                           ;main_bmp280.c: 46:         x1 = (b2*(b6*b6/4096))/2048;
  1036  0309  3000               	movlw	0
  1037  030A  00A3               	movwf	___aldiv@divisor+3
  1038  030B  3000               	movlw	0
  1039  030C  00A2               	movwf	___aldiv@divisor+2
  1040  030D  3008               	movlw	8
  1041  030E  00A1               	movwf	___aldiv@divisor+1
  1042  030F  3000               	movlw	0
  1043  0310  00A0               	movwf	___aldiv@divisor
  1044  0311  084A               	movf	_main$959+3,w
  1045  0312  00F3               	movwf	___lmul@multiplier+3
  1046  0313  0849               	movf	_main$959+2,w
  1047  0314  00F2               	movwf	___lmul@multiplier+2
  1048  0315  0848               	movf	_main$959+1,w
  1049  0316  00F1               	movwf	___lmul@multiplier+1
  1050  0317  0847               	movf	_main$959,w
  1051  0318  00F0               	movwf	___lmul@multiplier
  1052  0319  1683               	bsf	3,5	;RP0=1, select bank1
  1053  031A  1303               	bcf	3,6	;RP1=0, select bank1
  1054  031B  0837               	movf	(_b2+3)^(0+128),w
  1055  031C  00F7               	movwf	___lmul@multiplicand+3
  1056  031D  0836               	movf	(_b2+2)^(0+128),w
  1057  031E  00F6               	movwf	___lmul@multiplicand+2
  1058  031F  0835               	movf	(_b2+1)^(0+128),w
  1059  0320  00F5               	movwf	___lmul@multiplicand+1
  1060  0321  0834               	movf	_b2^(0+128),w
  1061  0322  00F4               	movwf	___lmul@multiplicand
  1062  0323  120A  158A  24FE  120A  118A  	fcall	___lmul
  1063  0328  0873               	movf	?___lmul+3,w
  1064  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1065  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1066  032B  00A7               	movwf	___aldiv@dividend+3
  1067  032C  0872               	movf	?___lmul+2,w
  1068  032D  00A6               	movwf	___aldiv@dividend+2
  1069  032E  0871               	movf	?___lmul+1,w
  1070  032F  00A5               	movwf	___aldiv@dividend+1
  1071  0330  0870               	movf	?___lmul,w
  1072  0331  00A4               	movwf	___aldiv@dividend
  1073  0332  120A  118A  200A  120A  118A  	fcall	___aldiv
  1074  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0339  0823               	movf	?___aldiv+3,w
  1077  033A  00D2               	movwf	_x1+3
  1078  033B  0822               	movf	?___aldiv+2,w
  1079  033C  00D1               	movwf	_x1+2
  1080  033D  0821               	movf	?___aldiv+1,w
  1081  033E  00D0               	movwf	_x1+1
  1082  033F  0820               	movf	?___aldiv,w
  1083  0340  00CF               	movwf	_x1
  1084  0341                     l2479:
  1085                           
  1086                           ;main_bmp280.c: 47:         x2 = ac2*b6/2048;
  1087  0341  3000               	movlw	0
  1088  0342  00A3               	movwf	___aldiv@divisor+3
  1089  0343  3000               	movlw	0
  1090  0344  00A2               	movwf	___aldiv@divisor+2
  1091  0345  3008               	movlw	8
  1092  0346  00A1               	movwf	___aldiv@divisor+1
  1093  0347  3000               	movlw	0
  1094  0348  00A0               	movwf	___aldiv@divisor
  1095  0349  0865               	movf	_ac2,w
  1096  034A  00F0               	movwf	___lmul@multiplier
  1097  034B  0866               	movf	_ac2+1,w
  1098  034C  00F1               	movwf	___lmul@multiplier+1
  1099  034D  3000               	movlw	0
  1100  034E  1BF1               	btfsc	___lmul@multiplier+1,7
  1101  034F  30FF               	movlw	255
  1102  0350  00F2               	movwf	___lmul@multiplier+2
  1103  0351  00F3               	movwf	___lmul@multiplier+3
  1104  0352  085A               	movf	_b6+3,w
  1105  0353  00F7               	movwf	___lmul@multiplicand+3
  1106  0354  0859               	movf	_b6+2,w
  1107  0355  00F6               	movwf	___lmul@multiplicand+2
  1108  0356  0858               	movf	_b6+1,w
  1109  0357  00F5               	movwf	___lmul@multiplicand+1
  1110  0358  0857               	movf	_b6,w
  1111  0359  00F4               	movwf	___lmul@multiplicand
  1112  035A  120A  158A  24FE  120A  118A  	fcall	___lmul
  1113  035F  0873               	movf	?___lmul+3,w
  1114  0360  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0361  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0362  00A7               	movwf	___aldiv@dividend+3
  1117  0363  0872               	movf	?___lmul+2,w
  1118  0364  00A6               	movwf	___aldiv@dividend+2
  1119  0365  0871               	movf	?___lmul+1,w
  1120  0366  00A5               	movwf	___aldiv@dividend+1
  1121  0367  0870               	movf	?___lmul,w
  1122  0368  00A4               	movwf	___aldiv@dividend
  1123  0369  120A  118A  200A  120A  118A  	fcall	___aldiv
  1124  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1125  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0370  0823               	movf	?___aldiv+3,w
  1127  0371  00CE               	movwf	_x2+3
  1128  0372  0822               	movf	?___aldiv+2,w
  1129  0373  00CD               	movwf	_x2+2
  1130  0374  0821               	movf	?___aldiv+1,w
  1131  0375  00CC               	movwf	_x2+1
  1132  0376  0820               	movf	?___aldiv,w
  1133  0377  00CB               	movwf	_x2
  1134  0378                     l2481:
  1135                           
  1136                           ;main_bmp280.c: 48:         x3 = x1+x2;
  1137  0378  084F               	movf	_x1,w
  1138  0379  074B               	addwf	_x2,w
  1139  037A  00B9               	movwf	??_main
  1140  037B  3000               	movlw	0
  1141  037C  1803               	skipnc
  1142  037D  3001               	movlw	1
  1143  037E  0750               	addwf	_x1+1,w
  1144  037F  01BB               	clrf	??_main+2
  1145  0380  1803               	skipnc
  1146  0381  0ABB               	incf	??_main+2,f
  1147  0382  074C               	addwf	_x2+1,w
  1148  0383  00BA               	movwf	??_main+1
  1149  0384  1803               	skipnc
  1150  0385  0ABB               	incf	??_main+2,f
  1151  0386  0851               	movf	_x1+2,w
  1152  0387  073B               	addwf	??_main+2,w
  1153  0388  01BC               	clrf	??_main+3
  1154  0389  1803               	skipnc
  1155  038A  0ABC               	incf	??_main+3,f
  1156  038B  074D               	addwf	_x2+2,w
  1157  038C  00BB               	movwf	??_main+2
  1158  038D  1803               	skipnc
  1159  038E  0ABC               	incf	??_main+3,f
  1160  038F  0852               	movf	_x1+3,w
  1161  0390  073C               	addwf	??_main+3,w
  1162  0391  074E               	addwf	_x2+3,w
  1163  0392  00BC               	movwf	??_main+3
  1164  0393  083C               	movf	??_main+3,w
  1165  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1166  0395  1303               	bcf	3,6	;RP1=0, select bank1
  1167  0396  00A3               	movwf	(_x3+3)^(0+128)
  1168  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0399  083B               	movf	??_main+2,w
  1171  039A  1683               	bsf	3,5	;RP0=1, select bank1
  1172  039B  1303               	bcf	3,6	;RP1=0, select bank1
  1173  039C  00A2               	movwf	(_x3+2)^(0+128)
  1174  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1175  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1176  039F  083A               	movf	??_main+1,w
  1177  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  1178  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  1179  03A2  00A1               	movwf	(_x3+1)^(0+128)
  1180  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1181  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1182  03A5  0839               	movf	??_main,w
  1183  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  1184  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  1185  03A8  00A0               	movwf	_x3^(0+128)
  1186  03A9                     l2483:
  1187                           
  1188                           ;main_bmp280.c: 49:         b3 = (((ac1*4+x3)<< oss)+ 2)/ 4;
  1189  03A9  3000               	movlw	0
  1190  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1191  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1192  03AC  00A3               	movwf	___aldiv@divisor+3
  1193  03AD  3000               	movlw	0
  1194  03AE  00A2               	movwf	___aldiv@divisor+2
  1195  03AF  3000               	movlw	0
  1196  03B0  00A1               	movwf	___aldiv@divisor+1
  1197  03B1  3004               	movlw	4
  1198  03B2  00A0               	movwf	___aldiv@divisor
  1199  03B3  3002               	movlw	2
  1200  03B4  00B9               	movwf	??_main
  1201  03B5  3000               	movlw	0
  1202  03B6  00BA               	movwf	??_main+1
  1203  03B7  3000               	movlw	0
  1204  03B8  00BB               	movwf	??_main+2
  1205  03B9  3000               	movlw	0
  1206  03BA  00BC               	movwf	??_main+3
  1207  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1208  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  1209  03BD  0820               	movf	_x3^(0+128),w
  1210  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1211  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1212  03C0  00BD               	movwf	??_main+4
  1213  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1214  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1215  03C3  0821               	movf	(_x3+1)^(0+128),w
  1216  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1217  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1218  03C6  00BE               	movwf	??_main+5
  1219  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1220  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  1221  03C9  0822               	movf	(_x3+2)^(0+128),w
  1222  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1223  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1224  03CC  00BF               	movwf	??_main+6
  1225  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  1226  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  1227  03CF  0823               	movf	(_x3+3)^(0+128),w
  1228  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1229  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1230  03D2  00C0               	movwf	??_main+7
  1231  03D3  0868               	movf	_ac1+1,w
  1232  03D4  00C2               	movwf	??_main+9
  1233  03D5  0867               	movf	_ac1,w
  1234  03D6  00C1               	movwf	??_main+8
  1235  03D7  1003               	clrc
  1236  03D8  0DC1               	rlf	??_main+8,f
  1237  03D9  0DC2               	rlf	??_main+9,f
  1238  03DA  1003               	clrc
  1239  03DB  0DC1               	rlf	??_main+8,f
  1240  03DC  0DC2               	rlf	??_main+9,f
  1241  03DD  0841               	movf	??_main+8,w
  1242  03DE  00C3               	movwf	??_main+10
  1243  03DF  0842               	movf	??_main+9,w
  1244  03E0  00C4               	movwf	??_main+11
  1245  03E1  3000               	movlw	0
  1246  03E2  1BC4               	btfsc	??_main+11,7
  1247  03E3  30FF               	movlw	255
  1248  03E4  00C5               	movwf	??_main+12
  1249  03E5  00C6               	movwf	??_main+13
  1250  03E6  0843               	movf	??_main+10,w
  1251  03E7  07BD               	addwf	??_main+4,f
  1252  03E8  0844               	movf	??_main+11,w
  1253  03E9  1803               	skipnc
  1254  03EA  0F44               	incfsz	??_main+11,w
  1255  03EB  2BED               	goto	u3190
  1256  03EC  2BEE               	goto	u3191
  1257  03ED                     u3190:
  1258  03ED  07BE               	addwf	??_main+5,f
  1259  03EE                     u3191:
  1260  03EE  0845               	movf	??_main+12,w
  1261  03EF  1803               	skipnc
  1262  03F0  0F45               	incfsz	??_main+12,w
  1263  03F1  2BF3               	goto	u3192
  1264  03F2  2BF4               	goto	u3193
  1265  03F3                     u3192:
  1266  03F3  07BF               	addwf	??_main+6,f
  1267  03F4                     u3193:
  1268  03F4  0846               	movf	??_main+13,w
  1269  03F5  1803               	skipnc
  1270  03F6  0A46               	incf	??_main+13,w
  1271  03F7  07C0               	addwf	??_main+7,f
  1272  03F8  0A6D               	incf	_oss,w
  1273  03F9  2BFF               	goto	u3200
  1274  03FA                     u3205:
  1275  03FA  1003               	clrc
  1276  03FB  0DBD               	rlf	??_main+4,f
  1277  03FC  0DBE               	rlf	??_main+5,f
  1278  03FD  0DBF               	rlf	??_main+6,f
  1279  03FE  0DC0               	rlf	??_main+7,f
  1280  03FF                     u3200:
  1281  03FF  3EFF               	addlw	-1
  1282  0400  1D03               	skipz
  1283  0401  2BFA               	goto	u3205
  1284  0402  083D               	movf	??_main+4,w
  1285  0403  07B9               	addwf	??_main,f
  1286  0404  083E               	movf	??_main+5,w
  1287  0405  1803               	skipnc
  1288  0406  0F3E               	incfsz	??_main+5,w
  1289  0407  2C09               	goto	u3210
  1290  0408  2C0A               	goto	u3211
  1291  0409                     u3210:
  1292  0409  07BA               	addwf	??_main+1,f
  1293  040A                     u3211:
  1294  040A  083F               	movf	??_main+6,w
  1295  040B  1803               	skipnc
  1296  040C  0F3F               	incfsz	??_main+6,w
  1297  040D  2C0F               	goto	u3212
  1298  040E  2C10               	goto	u3213
  1299  040F                     u3212:
  1300  040F  07BB               	addwf	??_main+2,f
  1301  0410                     u3213:
  1302  0410  0840               	movf	??_main+7,w
  1303  0411  1803               	skipnc
  1304  0412  0A40               	incf	??_main+7,w
  1305  0413  07BC               	addwf	??_main+3,f
  1306  0414  083C               	movf	??_main+3,w
  1307  0415  00A7               	movwf	___aldiv@dividend+3
  1308  0416  083B               	movf	??_main+2,w
  1309  0417  00A6               	movwf	___aldiv@dividend+2
  1310  0418  083A               	movf	??_main+1,w
  1311  0419  00A5               	movwf	___aldiv@dividend+1
  1312  041A  0839               	movf	??_main,w
  1313  041B  00A4               	movwf	___aldiv@dividend
  1314  041C  120A  118A  200A  120A  118A  	fcall	___aldiv
  1315  0421  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0422  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0423  0823               	movf	?___aldiv+3,w
  1318  0424  1683               	bsf	3,5	;RP0=1, select bank1
  1319  0425  1303               	bcf	3,6	;RP1=0, select bank1
  1320  0426  00B3               	movwf	(_b3+3)^(0+128)
  1321  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0429  0822               	movf	?___aldiv+2,w
  1324  042A  1683               	bsf	3,5	;RP0=1, select bank1
  1325  042B  1303               	bcf	3,6	;RP1=0, select bank1
  1326  042C  00B2               	movwf	(_b3+2)^(0+128)
  1327  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1328  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1329  042F  0821               	movf	?___aldiv+1,w
  1330  0430  1683               	bsf	3,5	;RP0=1, select bank1
  1331  0431  1303               	bcf	3,6	;RP1=0, select bank1
  1332  0432  00B1               	movwf	(_b3+1)^(0+128)
  1333  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0435  0820               	movf	?___aldiv,w
  1336  0436  1683               	bsf	3,5	;RP0=1, select bank1
  1337  0437  1303               	bcf	3,6	;RP1=0, select bank1
  1338  0438  00B0               	movwf	_b3^(0+128)
  1339  0439                     l2485:
  1340                           
  1341                           ;main_bmp280.c: 50:         x1 = ac3* b6 / 8192;
  1342  0439  3000               	movlw	0
  1343  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1344  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1345  043C  00A3               	movwf	___aldiv@divisor+3
  1346  043D  3000               	movlw	0
  1347  043E  00A2               	movwf	___aldiv@divisor+2
  1348  043F  3020               	movlw	32
  1349  0440  00A1               	movwf	___aldiv@divisor+1
  1350  0441  3000               	movlw	0
  1351  0442  00A0               	movwf	___aldiv@divisor
  1352  0443  0863               	movf	_ac3,w
  1353  0444  00F0               	movwf	___lmul@multiplier
  1354  0445  0864               	movf	_ac3+1,w
  1355  0446  00F1               	movwf	___lmul@multiplier+1
  1356  0447  3000               	movlw	0
  1357  0448  1BF1               	btfsc	___lmul@multiplier+1,7
  1358  0449  30FF               	movlw	255
  1359  044A  00F2               	movwf	___lmul@multiplier+2
  1360  044B  00F3               	movwf	___lmul@multiplier+3
  1361  044C  085A               	movf	_b6+3,w
  1362  044D  00F7               	movwf	___lmul@multiplicand+3
  1363  044E  0859               	movf	_b6+2,w
  1364  044F  00F6               	movwf	___lmul@multiplicand+2
  1365  0450  0858               	movf	_b6+1,w
  1366  0451  00F5               	movwf	___lmul@multiplicand+1
  1367  0452  0857               	movf	_b6,w
  1368  0453  00F4               	movwf	___lmul@multiplicand
  1369  0454  120A  158A  24FE  120A  118A  	fcall	___lmul
  1370  0459  0873               	movf	?___lmul+3,w
  1371  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1372  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1373  045C  00A7               	movwf	___aldiv@dividend+3
  1374  045D  0872               	movf	?___lmul+2,w
  1375  045E  00A6               	movwf	___aldiv@dividend+2
  1376  045F  0871               	movf	?___lmul+1,w
  1377  0460  00A5               	movwf	___aldiv@dividend+1
  1378  0461  0870               	movf	?___lmul,w
  1379  0462  00A4               	movwf	___aldiv@dividend
  1380  0463  120A  118A  200A  120A  118A  	fcall	___aldiv
  1381  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1383  046A  0823               	movf	?___aldiv+3,w
  1384  046B  00D2               	movwf	_x1+3
  1385  046C  0822               	movf	?___aldiv+2,w
  1386  046D  00D1               	movwf	_x1+2
  1387  046E  0821               	movf	?___aldiv+1,w
  1388  046F  00D0               	movwf	_x1+1
  1389  0470  0820               	movf	?___aldiv,w
  1390  0471  00CF               	movwf	_x1
  1391  0472                     l2487:
  1392                           
  1393                           ;main_bmp280.c: 51:         x2 = (b1 * (b6 *b6 / 4096)) / 65536;
  1394  0472  3000               	movlw	0
  1395  0473  00A3               	movwf	___aldiv@divisor+3
  1396  0474  3000               	movlw	0
  1397  0475  00A2               	movwf	___aldiv@divisor+2
  1398  0476  3010               	movlw	16
  1399  0477  00A1               	movwf	___aldiv@divisor+1
  1400  0478  3000               	movlw	0
  1401  0479  00A0               	movwf	___aldiv@divisor
  1402  047A  085A               	movf	_b6+3,w
  1403  047B  00F3               	movwf	___lmul@multiplier+3
  1404  047C  0859               	movf	_b6+2,w
  1405  047D  00F2               	movwf	___lmul@multiplier+2
  1406  047E  0858               	movf	_b6+1,w
  1407  047F  00F1               	movwf	___lmul@multiplier+1
  1408  0480  0857               	movf	_b6,w
  1409  0481  00F0               	movwf	___lmul@multiplier
  1410  0482  085A               	movf	_b6+3,w
  1411  0483  00F7               	movwf	___lmul@multiplicand+3
  1412  0484  0859               	movf	_b6+2,w
  1413  0485  00F6               	movwf	___lmul@multiplicand+2
  1414  0486  0858               	movf	_b6+1,w
  1415  0487  00F5               	movwf	___lmul@multiplicand+1
  1416  0488  0857               	movf	_b6,w
  1417  0489  00F4               	movwf	___lmul@multiplicand
  1418  048A  120A  158A  24FE  120A  118A  	fcall	___lmul
  1419  048F  0873               	movf	?___lmul+3,w
  1420  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0492  00A7               	movwf	___aldiv@dividend+3
  1423  0493  0872               	movf	?___lmul+2,w
  1424  0494  00A6               	movwf	___aldiv@dividend+2
  1425  0495  0871               	movf	?___lmul+1,w
  1426  0496  00A5               	movwf	___aldiv@dividend+1
  1427  0497  0870               	movf	?___lmul,w
  1428  0498  00A4               	movwf	___aldiv@dividend
  1429  0499  120A  118A  200A  120A  118A  	fcall	___aldiv
  1430  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1431  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1432  04A0  0823               	movf	?___aldiv+3,w
  1433  04A1  00CA               	movwf	_main$959+3
  1434  04A2  0822               	movf	?___aldiv+2,w
  1435  04A3  00C9               	movwf	_main$959+2
  1436  04A4  0821               	movf	?___aldiv+1,w
  1437  04A5  00C8               	movwf	_main$959+1
  1438  04A6  0820               	movf	?___aldiv,w
  1439  04A7  00C7               	movwf	_main$959
  1440  04A8                     l2489:
  1441                           
  1442                           ;main_bmp280.c: 51:         x2 = (b1 * (b6 *b6 / 4096)) / 65536;
  1443  04A8  3000               	movlw	0
  1444  04A9  00A3               	movwf	___aldiv@divisor+3
  1445  04AA  3001               	movlw	1
  1446  04AB  00A2               	movwf	___aldiv@divisor+2
  1447  04AC  3000               	movlw	0
  1448  04AD  00A1               	movwf	___aldiv@divisor+1
  1449  04AE  3000               	movlw	0
  1450  04AF  00A0               	movwf	___aldiv@divisor
  1451  04B0  084A               	movf	_main$959+3,w
  1452  04B1  00F3               	movwf	___lmul@multiplier+3
  1453  04B2  0849               	movf	_main$959+2,w
  1454  04B3  00F2               	movwf	___lmul@multiplier+2
  1455  04B4  0848               	movf	_main$959+1,w
  1456  04B5  00F1               	movwf	___lmul@multiplier+1
  1457  04B6  0847               	movf	_main$959,w
  1458  04B7  00F0               	movwf	___lmul@multiplier
  1459  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  1460  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  1461  04BA  083B               	movf	(_b1+3)^(0+128),w
  1462  04BB  00F7               	movwf	___lmul@multiplicand+3
  1463  04BC  083A               	movf	(_b1+2)^(0+128),w
  1464  04BD  00F6               	movwf	___lmul@multiplicand+2
  1465  04BE  0839               	movf	(_b1+1)^(0+128),w
  1466  04BF  00F5               	movwf	___lmul@multiplicand+1
  1467  04C0  0838               	movf	_b1^(0+128),w
  1468  04C1  00F4               	movwf	___lmul@multiplicand
  1469  04C2  120A  158A  24FE  120A  118A  	fcall	___lmul
  1470  04C7  0873               	movf	?___lmul+3,w
  1471  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  1472  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  1473  04CA  00A7               	movwf	___aldiv@dividend+3
  1474  04CB  0872               	movf	?___lmul+2,w
  1475  04CC  00A6               	movwf	___aldiv@dividend+2
  1476  04CD  0871               	movf	?___lmul+1,w
  1477  04CE  00A5               	movwf	___aldiv@dividend+1
  1478  04CF  0870               	movf	?___lmul,w
  1479  04D0  00A4               	movwf	___aldiv@dividend
  1480  04D1  120A  118A  200A  120A  118A  	fcall	___aldiv
  1481  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1482  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1483  04D8  0823               	movf	?___aldiv+3,w
  1484  04D9  00CE               	movwf	_x2+3
  1485  04DA  0822               	movf	?___aldiv+2,w
  1486  04DB  00CD               	movwf	_x2+2
  1487  04DC  0821               	movf	?___aldiv+1,w
  1488  04DD  00CC               	movwf	_x2+1
  1489  04DE  0820               	movf	?___aldiv,w
  1490  04DF  00CB               	movwf	_x2
  1491  04E0                     l2491:
  1492                           
  1493                           ;main_bmp280.c: 52:         x3 =((x1+x2)+2)/4;
  1494  04E0  3000               	movlw	0
  1495  04E1  00A3               	movwf	___aldiv@divisor+3
  1496  04E2  3000               	movlw	0
  1497  04E3  00A2               	movwf	___aldiv@divisor+2
  1498  04E4  3000               	movlw	0
  1499  04E5  00A1               	movwf	___aldiv@divisor+1
  1500  04E6  3004               	movlw	4
  1501  04E7  00A0               	movwf	___aldiv@divisor
  1502  04E8  3002               	movlw	2
  1503  04E9  00B9               	movwf	??_main
  1504  04EA  3000               	movlw	0
  1505  04EB  00BA               	movwf	??_main+1
  1506  04EC  3000               	movlw	0
  1507  04ED  00BB               	movwf	??_main+2
  1508  04EE  3000               	movlw	0
  1509  04EF  00BC               	movwf	??_main+3
  1510  04F0  084F               	movf	_x1,w
  1511  04F1  074B               	addwf	_x2,w
  1512  04F2  00BD               	movwf	??_main+4
  1513  04F3  3000               	movlw	0
  1514  04F4  1803               	skipnc
  1515  04F5  3001               	movlw	1
  1516  04F6  0750               	addwf	_x1+1,w
  1517  04F7  01BF               	clrf	??_main+6
  1518  04F8  1803               	skipnc
  1519  04F9  0ABF               	incf	??_main+6,f
  1520  04FA  074C               	addwf	_x2+1,w
  1521  04FB  00BE               	movwf	??_main+5
  1522  04FC  1803               	skipnc
  1523  04FD  0ABF               	incf	??_main+6,f
  1524  04FE  0851               	movf	_x1+2,w
  1525  04FF  073F               	addwf	??_main+6,w
  1526  0500  01C0               	clrf	??_main+7
  1527  0501  1803               	skipnc
  1528  0502  0AC0               	incf	??_main+7,f
  1529  0503  074D               	addwf	_x2+2,w
  1530  0504  00BF               	movwf	??_main+6
  1531  0505  1803               	skipnc
  1532  0506  0AC0               	incf	??_main+7,f
  1533  0507  0852               	movf	_x1+3,w
  1534  0508  0740               	addwf	??_main+7,w
  1535  0509  074E               	addwf	_x2+3,w
  1536  050A  00C0               	movwf	??_main+7
  1537  050B  083D               	movf	??_main+4,w
  1538  050C  07B9               	addwf	??_main,f
  1539  050D  083E               	movf	??_main+5,w
  1540  050E  1803               	skipnc
  1541  050F  0F3E               	incfsz	??_main+5,w
  1542  0510  2D12               	goto	u3220
  1543  0511  2D13               	goto	u3221
  1544  0512                     u3220:
  1545  0512  07BA               	addwf	??_main+1,f
  1546  0513                     u3221:
  1547  0513  083F               	movf	??_main+6,w
  1548  0514  1803               	skipnc
  1549  0515  0F3F               	incfsz	??_main+6,w
  1550  0516  2D18               	goto	u3222
  1551  0517  2D19               	goto	u3223
  1552  0518                     u3222:
  1553  0518  07BB               	addwf	??_main+2,f
  1554  0519                     u3223:
  1555  0519  0840               	movf	??_main+7,w
  1556  051A  1803               	skipnc
  1557  051B  0A40               	incf	??_main+7,w
  1558  051C  07BC               	addwf	??_main+3,f
  1559  051D  083C               	movf	??_main+3,w
  1560  051E  00A7               	movwf	___aldiv@dividend+3
  1561  051F  083B               	movf	??_main+2,w
  1562  0520  00A6               	movwf	___aldiv@dividend+2
  1563  0521  083A               	movf	??_main+1,w
  1564  0522  00A5               	movwf	___aldiv@dividend+1
  1565  0523  0839               	movf	??_main,w
  1566  0524  00A4               	movwf	___aldiv@dividend
  1567  0525  120A  118A  200A  120A  118A  	fcall	___aldiv
  1568  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1569  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1570  052C  0823               	movf	?___aldiv+3,w
  1571  052D  1683               	bsf	3,5	;RP0=1, select bank1
  1572  052E  1303               	bcf	3,6	;RP1=0, select bank1
  1573  052F  00A3               	movwf	(_x3+3)^(0+128)
  1574  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0532  0822               	movf	?___aldiv+2,w
  1577  0533  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0534  1303               	bcf	3,6	;RP1=0, select bank1
  1579  0535  00A2               	movwf	(_x3+2)^(0+128)
  1580  0536  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0537  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0538  0821               	movf	?___aldiv+1,w
  1583  0539  1683               	bsf	3,5	;RP0=1, select bank1
  1584  053A  1303               	bcf	3,6	;RP1=0, select bank1
  1585  053B  00A1               	movwf	(_x3+1)^(0+128)
  1586  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1587  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1588  053E  0820               	movf	?___aldiv,w
  1589  053F  1683               	bsf	3,5	;RP0=1, select bank1
  1590  0540  1303               	bcf	3,6	;RP1=0, select bank1
  1591  0541  00A0               	movwf	_x3^(0+128)
  1592  0542                     l2493:
  1593                           
  1594                           ;main_bmp280.c: 53:         b4 = ac4 * (unsigned long) (x3 + 32768)/ 32768;
  1595  0542  3000               	movlw	0
  1596  0543  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0544  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0545  00B9               	movwf	??_main
  1599  0546  3080               	movlw	128
  1600  0547  00BA               	movwf	??_main+1
  1601  0548  3000               	movlw	0
  1602  0549  00BB               	movwf	??_main+2
  1603  054A  3000               	movlw	0
  1604  054B  00BC               	movwf	??_main+3
  1605  054C  1683               	bsf	3,5	;RP0=1, select bank1
  1606  054D  1303               	bcf	3,6	;RP1=0, select bank1
  1607  054E  0820               	movf	_x3^(0+128),w
  1608  054F  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0550  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0551  07B9               	addwf	??_main,f
  1611  0552  1683               	bsf	3,5	;RP0=1, select bank1
  1612  0553  1303               	bcf	3,6	;RP1=0, select bank1
  1613  0554  0821               	movf	(_x3+1)^(0+128),w
  1614  0555  1803               	skipnc
  1615  0556  0F21               	incfsz	(_x3+1)^(0+128),w
  1616  0557  2D59               	goto	u3230
  1617  0558  2D5C               	goto	u3231
  1618  0559                     u3230:
  1619  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1620  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1621  055B  07BA               	addwf	??_main+1,f
  1622  055C                     u3231:
  1623  055C  1683               	bsf	3,5	;RP0=1, select bank1
  1624  055D  1303               	bcf	3,6	;RP1=0, select bank1
  1625  055E  0822               	movf	(_x3+2)^(0+128),w
  1626  055F  1803               	skipnc
  1627  0560  0F22               	incfsz	(_x3+2)^(0+128),w
  1628  0561  2D63               	goto	u3232
  1629  0562  2D66               	goto	u3233
  1630  0563                     u3232:
  1631  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0565  07BB               	addwf	??_main+2,f
  1634  0566                     u3233:
  1635  0566  1683               	bsf	3,5	;RP0=1, select bank1
  1636  0567  1303               	bcf	3,6	;RP1=0, select bank1
  1637  0568  0823               	movf	(_x3+3)^(0+128),w
  1638  0569  1803               	skipnc
  1639  056A  0A23               	incf	(_x3+3)^(0+128),w
  1640  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1641  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1642  056D  07BC               	addwf	??_main+3,f
  1643  056E  083C               	movf	??_main+3,w
  1644  056F  00F3               	movwf	___lmul@multiplier+3
  1645  0570  083B               	movf	??_main+2,w
  1646  0571  00F2               	movwf	___lmul@multiplier+2
  1647  0572  083A               	movf	??_main+1,w
  1648  0573  00F1               	movwf	___lmul@multiplier+1
  1649  0574  0839               	movf	??_main,w
  1650  0575  00F0               	movwf	___lmul@multiplier
  1651  0576  0861               	movf	_ac4,w
  1652  0577  00F4               	movwf	___lmul@multiplicand
  1653  0578  0862               	movf	_ac4+1,w
  1654  0579  00F5               	movwf	___lmul@multiplicand+1
  1655  057A  01F6               	clrf	___lmul@multiplicand+2
  1656  057B  01F7               	clrf	___lmul@multiplicand+3
  1657  057C  120A  158A  24FE  120A  118A  	fcall	___lmul
  1658  0581  0870               	movf	?___lmul,w
  1659  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0584  00BD               	movwf	??_main+4
  1662  0585  0871               	movf	?___lmul+1,w
  1663  0586  00BE               	movwf	??_main+5
  1664  0587  0872               	movf	?___lmul+2,w
  1665  0588  00BF               	movwf	??_main+6
  1666  0589  0873               	movf	?___lmul+3,w
  1667  058A  00C0               	movwf	??_main+7
  1668  058B  300F               	movlw	15
  1669  058C                     u3245:
  1670  058C  1003               	clrc
  1671  058D  0CC0               	rrf	??_main+7,f
  1672  058E  0CBF               	rrf	??_main+6,f
  1673  058F  0CBE               	rrf	??_main+5,f
  1674  0590  0CBD               	rrf	??_main+4,f
  1675  0591                     u3240:
  1676  0591  3EFF               	addlw	-1
  1677  0592  1D03               	skipz
  1678  0593  2D8C               	goto	u3245
  1679  0594  0840               	movf	??_main+7,w
  1680  0595  1683               	bsf	3,5	;RP0=1, select bank1
  1681  0596  1303               	bcf	3,6	;RP1=0, select bank1
  1682  0597  00AB               	movwf	(_b4+3)^(0+128)
  1683  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1685  059A  083F               	movf	??_main+6,w
  1686  059B  1683               	bsf	3,5	;RP0=1, select bank1
  1687  059C  1303               	bcf	3,6	;RP1=0, select bank1
  1688  059D  00AA               	movwf	(_b4+2)^(0+128)
  1689  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1690  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1691  05A0  083E               	movf	??_main+5,w
  1692  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1693  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1694  05A3  00A9               	movwf	(_b4+1)^(0+128)
  1695  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1696  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1697  05A6  083D               	movf	??_main+4,w
  1698  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  1699  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  1700  05A9  00A8               	movwf	_b4^(0+128)
  1701  05AA                     l2495:
  1702                           
  1703                           ;main_bmp280.c: 54:         b7 = ((unsigned long)up - b3) * (50000 >> oss);
  1704  05AA  0824               	movf	_up^(0+128),w
  1705  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1706  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1707  05AD  00B9               	movwf	??_main
  1708  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  1709  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  1710  05B0  0825               	movf	(_up+1)^(0+128),w
  1711  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1712  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1713  05B3  00BA               	movwf	??_main+1
  1714  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  1715  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  1716  05B6  0826               	movf	(_up+2)^(0+128),w
  1717  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1718  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1719  05B9  00BB               	movwf	??_main+2
  1720  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  1721  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  1722  05BC  0827               	movf	(_up+3)^(0+128),w
  1723  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1724  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1725  05BF  00BC               	movwf	??_main+3
  1726  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  1727  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  1728  05C2  0830               	movf	_b3^(0+128),w
  1729  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1730  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1731  05C5  02B9               	subwf	??_main,f
  1732  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  1733  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  1734  05C8  0831               	movf	(_b3+1)^(0+128),w
  1735  05C9  1C03               	skipc
  1736  05CA  0F31               	incfsz	(_b3+1)^(0+128),w
  1737  05CB  2DCD               	goto	u3251
  1738  05CC  2DD0               	goto	u3252
  1739  05CD                     u3251:
  1740  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1741  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1742  05CF  02BA               	subwf	??_main+1,f
  1743  05D0                     u3252:
  1744  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  1745  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  1746  05D2  0832               	movf	(_b3+2)^(0+128),w
  1747  05D3  1C03               	skipc
  1748  05D4  0F32               	incfsz	(_b3+2)^(0+128),w
  1749  05D5  2DD7               	goto	u3253
  1750  05D6  2DDA               	goto	u3254
  1751  05D7                     u3253:
  1752  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1753  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1754  05D9  02BB               	subwf	??_main+2,f
  1755  05DA                     u3254:
  1756  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  1757  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  1758  05DC  0833               	movf	(_b3+3)^(0+128),w
  1759  05DD  1C03               	skipc
  1760  05DE  0F33               	incfsz	(_b3+3)^(0+128),w
  1761  05DF  2DE1               	goto	u3255
  1762  05E0  2DE4               	goto	u3256
  1763  05E1                     u3255:
  1764  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1765  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1766  05E3  02BC               	subwf	??_main+3,f
  1767  05E4                     u3256:
  1768  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  1769  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  1770  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1771  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1772  05E8  083C               	movf	??_main+3,w
  1773  05E9  00F3               	movwf	___lmul@multiplier+3
  1774  05EA  083B               	movf	??_main+2,w
  1775  05EB  00F2               	movwf	___lmul@multiplier+2
  1776  05EC  083A               	movf	??_main+1,w
  1777  05ED  00F1               	movwf	___lmul@multiplier+1
  1778  05EE  0839               	movf	??_main,w
  1779  05EF  00F0               	movwf	___lmul@multiplier
  1780  05F0  0A6D               	incf	_oss,w
  1781  05F1  00BD               	movwf	??_main+4
  1782  05F2  3050               	movlw	80
  1783  05F3  00BE               	movwf	??_main+5
  1784  05F4  30C3               	movlw	195
  1785  05F5  00BF               	movwf	??_main+6
  1786  05F6  3000               	movlw	0
  1787  05F7  00C0               	movwf	??_main+7
  1788  05F8  3000               	movlw	0
  1789  05F9  00C1               	movwf	??_main+8
  1790  05FA  2E00               	goto	u3260
  1791  05FB                     u3265:
  1792  05FB  0D41               	rlf	??_main+8,w
  1793  05FC  0CC1               	rrf	??_main+8,f
  1794  05FD  0CC0               	rrf	??_main+7,f
  1795  05FE  0CBF               	rrf	??_main+6,f
  1796  05FF  0CBE               	rrf	??_main+5,f
  1797  0600                     u3260:
  1798  0600  0BBD               	decfsz	??_main+4,f
  1799  0601  2DFB               	goto	u3265
  1800  0602  0841               	movf	??_main+8,w
  1801  0603  00F7               	movwf	___lmul@multiplicand+3
  1802  0604  0840               	movf	??_main+7,w
  1803  0605  00F6               	movwf	___lmul@multiplicand+2
  1804  0606  083F               	movf	??_main+6,w
  1805  0607  00F5               	movwf	___lmul@multiplicand+1
  1806  0608  083E               	movf	??_main+5,w
  1807  0609  00F4               	movwf	___lmul@multiplicand
  1808  060A  120A  158A  24FE  120A  118A  	fcall	___lmul
  1809  060F  0873               	movf	?___lmul+3,w
  1810  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0612  00D6               	movwf	_b7+3
  1813  0613  0872               	movf	?___lmul+2,w
  1814  0614  00D5               	movwf	_b7+2
  1815  0615  0871               	movf	?___lmul+1,w
  1816  0616  00D4               	movwf	_b7+1
  1817  0617  0870               	movf	?___lmul,w
  1818  0618  00D3               	movwf	_b7
  1819  0619                     l2497:
  1820                           
  1821                           ;main_bmp280.c: 55:         if (b7 < 0x80000000)
  1822  0619  3080               	movlw	128
  1823  061A  0256               	subwf	_b7+3,w
  1824  061B  1D03               	skipz
  1825  061C  2E29               	goto	u3273
  1826  061D  3000               	movlw	0
  1827  061E  0255               	subwf	_b7+2,w
  1828  061F  1D03               	skipz
  1829  0620  2E29               	goto	u3273
  1830  0621  3000               	movlw	0
  1831  0622  0254               	subwf	_b7+1,w
  1832  0623  1D03               	skipz
  1833  0624  2E29               	goto	u3273
  1834  0625  3000               	movlw	0
  1835  0626  0253               	subwf	_b7,w
  1836  0627  1D03               	skipz
  1837  0628  2E29               	goto	u3273
  1838  0629                     u3273:
  1839  0629  1803               	btfsc	3,0
  1840  062A  2E2C               	goto	u3271
  1841  062B  2E2D               	goto	u3270
  1842  062C                     u3271:
  1843  062C  2E52               	goto	l2501
  1844  062D                     u3270:
  1845  062D                     l2499:
  1846                           
  1847                           ;main_bmp280.c: 56:         {;main_bmp280.c: 57:             p = (b7* 2)/ b4;
  1848  062D  1683               	bsf	3,5	;RP0=1, select bank1
  1849  062E  1303               	bcf	3,6	;RP1=0, select bank1
  1850  062F  082B               	movf	(_b4+3)^(0+128),w
  1851  0630  00F3               	movwf	___lldiv@divisor+3
  1852  0631  082A               	movf	(_b4+2)^(0+128),w
  1853  0632  00F2               	movwf	___lldiv@divisor+2
  1854  0633  0829               	movf	(_b4+1)^(0+128),w
  1855  0634  00F1               	movwf	___lldiv@divisor+1
  1856  0635  0828               	movf	_b4^(0+128),w
  1857  0636  00F0               	movwf	___lldiv@divisor
  1858  0637  1003               	clrc
  1859  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1860  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1861  063A  0D53               	rlf	_b7,w
  1862  063B  00F4               	movwf	___lldiv@dividend
  1863  063C  0D54               	rlf	_b7+1,w
  1864  063D  00F5               	movwf	___lldiv@dividend+1
  1865  063E  0D55               	rlf	_b7+2,w
  1866  063F  00F6               	movwf	___lldiv@dividend+2
  1867  0640  0D56               	rlf	_b7+3,w
  1868  0641  00F7               	movwf	___lldiv@dividend+3
  1869  0642  120A  158A  259D  120A  118A  	fcall	___lldiv
  1870  0647  0873               	movf	?___lldiv+3,w
  1871  0648  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0649  1303               	bcf	3,6	;RP1=0, select bank0
  1873  064A  00EC               	movwf	_p+3
  1874  064B  0872               	movf	?___lldiv+2,w
  1875  064C  00EB               	movwf	_p+2
  1876  064D  0871               	movf	?___lldiv+1,w
  1877  064E  00EA               	movwf	_p+1
  1878  064F  0870               	movf	?___lldiv,w
  1879  0650  00E9               	movwf	_p
  1880                           
  1881                           ;main_bmp280.c: 58:         }
  1882  0651  2E76               	goto	l184
  1883  0652                     l2501:
  1884                           
  1885                           ;main_bmp280.c: 60:         {;main_bmp280.c: 61:             p = (b7 / b4)* 2;
  1886  0652  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0653  1303               	bcf	3,6	;RP1=0, select bank1
  1888  0654  082B               	movf	(_b4+3)^(0+128),w
  1889  0655  00F3               	movwf	___lldiv@divisor+3
  1890  0656  082A               	movf	(_b4+2)^(0+128),w
  1891  0657  00F2               	movwf	___lldiv@divisor+2
  1892  0658  0829               	movf	(_b4+1)^(0+128),w
  1893  0659  00F1               	movwf	___lldiv@divisor+1
  1894  065A  0828               	movf	_b4^(0+128),w
  1895  065B  00F0               	movwf	___lldiv@divisor
  1896  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1897  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1898  065E  0856               	movf	_b7+3,w
  1899  065F  00F7               	movwf	___lldiv@dividend+3
  1900  0660  0855               	movf	_b7+2,w
  1901  0661  00F6               	movwf	___lldiv@dividend+2
  1902  0662  0854               	movf	_b7+1,w
  1903  0663  00F5               	movwf	___lldiv@dividend+1
  1904  0664  0853               	movf	_b7,w
  1905  0665  00F4               	movwf	___lldiv@dividend
  1906  0666  120A  158A  259D  120A  118A  	fcall	___lldiv
  1907  066B  1003               	clrc
  1908  066C  0D70               	rlf	?___lldiv,w
  1909  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1910  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1911  066F  00E9               	movwf	_p
  1912  0670  0D71               	rlf	?___lldiv+1,w
  1913  0671  00EA               	movwf	_p+1
  1914  0672  0D72               	rlf	?___lldiv+2,w
  1915  0673  00EB               	movwf	_p+2
  1916  0674  0D73               	rlf	?___lldiv+3,w
  1917  0675  00EC               	movwf	_p+3
  1918  0676                     l184:	
  1919                           ;main_bmp280.c: 62:         }
  1920                           
  1921                           
  1922                           ;main_bmp280.c: 63:         x1 =(p/256)*(p/256);
  1923  0676  3000               	movlw	0
  1924  0677  00A3               	movwf	___aldiv@divisor+3
  1925  0678  3000               	movlw	0
  1926  0679  00A2               	movwf	___aldiv@divisor+2
  1927  067A  3001               	movlw	1
  1928  067B  00A1               	movwf	___aldiv@divisor+1
  1929  067C  3000               	movlw	0
  1930  067D  00A0               	movwf	___aldiv@divisor
  1931  067E  086C               	movf	_p+3,w
  1932  067F  00A7               	movwf	___aldiv@dividend+3
  1933  0680  086B               	movf	_p+2,w
  1934  0681  00A6               	movwf	___aldiv@dividend+2
  1935  0682  086A               	movf	_p+1,w
  1936  0683  00A5               	movwf	___aldiv@dividend+1
  1937  0684  0869               	movf	_p,w
  1938  0685  00A4               	movwf	___aldiv@dividend
  1939  0686  120A  118A  200A  120A  118A  	fcall	___aldiv
  1940  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1941  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1942  068D  0823               	movf	?___aldiv+3,w
  1943  068E  00F3               	movwf	___lmul@multiplier+3
  1944  068F  0822               	movf	?___aldiv+2,w
  1945  0690  00F2               	movwf	___lmul@multiplier+2
  1946  0691  0821               	movf	?___aldiv+1,w
  1947  0692  00F1               	movwf	___lmul@multiplier+1
  1948  0693  0820               	movf	?___aldiv,w
  1949  0694  00F0               	movwf	___lmul@multiplier
  1950  0695  3000               	movlw	0
  1951  0696  00A3               	movwf	___aldiv@divisor+3
  1952  0697  3000               	movlw	0
  1953  0698  00A2               	movwf	___aldiv@divisor+2
  1954  0699  3001               	movlw	1
  1955  069A  00A1               	movwf	___aldiv@divisor+1
  1956  069B  3000               	movlw	0
  1957  069C  00A0               	movwf	___aldiv@divisor
  1958  069D  086C               	movf	_p+3,w
  1959  069E  00A7               	movwf	___aldiv@dividend+3
  1960  069F  086B               	movf	_p+2,w
  1961  06A0  00A6               	movwf	___aldiv@dividend+2
  1962  06A1  086A               	movf	_p+1,w
  1963  06A2  00A5               	movwf	___aldiv@dividend+1
  1964  06A3  0869               	movf	_p,w
  1965  06A4  00A4               	movwf	___aldiv@dividend
  1966  06A5  120A  118A  200A  120A  118A  	fcall	___aldiv
  1967  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1968  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1969  06AC  0823               	movf	?___aldiv+3,w
  1970  06AD  00F7               	movwf	___lmul@multiplicand+3
  1971  06AE  0822               	movf	?___aldiv+2,w
  1972  06AF  00F6               	movwf	___lmul@multiplicand+2
  1973  06B0  0821               	movf	?___aldiv+1,w
  1974  06B1  00F5               	movwf	___lmul@multiplicand+1
  1975  06B2  0820               	movf	?___aldiv,w
  1976  06B3  00F4               	movwf	___lmul@multiplicand
  1977  06B4  120A  158A  24FE  120A  118A  	fcall	___lmul
  1978  06B9  0873               	movf	?___lmul+3,w
  1979  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1980  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1981  06BC  00D2               	movwf	_x1+3
  1982  06BD  0872               	movf	?___lmul+2,w
  1983  06BE  00D1               	movwf	_x1+2
  1984  06BF  0871               	movf	?___lmul+1,w
  1985  06C0  00D0               	movwf	_x1+1
  1986  06C1  0870               	movf	?___lmul,w
  1987  06C2  00CF               	movwf	_x1
  1988                           
  1989                           ;main_bmp280.c: 64:         x1 = (x1 * 3038)/65536;
  1990  06C3  3000               	movlw	0
  1991  06C4  00A3               	movwf	___aldiv@divisor+3
  1992  06C5  3001               	movlw	1
  1993  06C6  00A2               	movwf	___aldiv@divisor+2
  1994  06C7  3000               	movlw	0
  1995  06C8  00A1               	movwf	___aldiv@divisor+1
  1996  06C9  3000               	movlw	0
  1997  06CA  00A0               	movwf	___aldiv@divisor
  1998  06CB  0852               	movf	_x1+3,w
  1999  06CC  00F3               	movwf	___lmul@multiplier+3
  2000  06CD  0851               	movf	_x1+2,w
  2001  06CE  00F2               	movwf	___lmul@multiplier+2
  2002  06CF  0850               	movf	_x1+1,w
  2003  06D0  00F1               	movwf	___lmul@multiplier+1
  2004  06D1  084F               	movf	_x1,w
  2005  06D2  00F0               	movwf	___lmul@multiplier
  2006  06D3  3000               	movlw	0
  2007  06D4  00F7               	movwf	___lmul@multiplicand+3
  2008  06D5  3000               	movlw	0
  2009  06D6  00F6               	movwf	___lmul@multiplicand+2
  2010  06D7  300B               	movlw	11
  2011  06D8  00F5               	movwf	___lmul@multiplicand+1
  2012  06D9  30DE               	movlw	222
  2013  06DA  00F4               	movwf	___lmul@multiplicand
  2014  06DB  120A  158A  24FE  120A  118A  	fcall	___lmul
  2015  06E0  0873               	movf	?___lmul+3,w
  2016  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2017  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2018  06E3  00A7               	movwf	___aldiv@dividend+3
  2019  06E4  0872               	movf	?___lmul+2,w
  2020  06E5  00A6               	movwf	___aldiv@dividend+2
  2021  06E6  0871               	movf	?___lmul+1,w
  2022  06E7  00A5               	movwf	___aldiv@dividend+1
  2023  06E8  0870               	movf	?___lmul,w
  2024  06E9  00A4               	movwf	___aldiv@dividend
  2025  06EA  120A  118A  200A  120A  118A  	fcall	___aldiv
  2026  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  2027  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  2028  06F1  0823               	movf	?___aldiv+3,w
  2029  06F2  00D2               	movwf	_x1+3
  2030  06F3  0822               	movf	?___aldiv+2,w
  2031  06F4  00D1               	movwf	_x1+2
  2032  06F5  0821               	movf	?___aldiv+1,w
  2033  06F6  00D0               	movwf	_x1+1
  2034  06F7  0820               	movf	?___aldiv,w
  2035  06F8  00CF               	movwf	_x1
  2036                           
  2037                           ;main_bmp280.c: 65:         x2 = (-7357 * p) / 65536;
  2038  06F9  3000               	movlw	0
  2039  06FA  00A3               	movwf	___aldiv@divisor+3
  2040  06FB  3001               	movlw	1
  2041  06FC  00A2               	movwf	___aldiv@divisor+2
  2042  06FD  3000               	movlw	0
  2043  06FE  00A1               	movwf	___aldiv@divisor+1
  2044  06FF  3000               	movlw	0
  2045  0700  00A0               	movwf	___aldiv@divisor
  2046  0701  086C               	movf	_p+3,w
  2047  0702  00F3               	movwf	___lmul@multiplier+3
  2048  0703  086B               	movf	_p+2,w
  2049  0704  00F2               	movwf	___lmul@multiplier+2
  2050  0705  086A               	movf	_p+1,w
  2051  0706  00F1               	movwf	___lmul@multiplier+1
  2052  0707  0869               	movf	_p,w
  2053  0708  00F0               	movwf	___lmul@multiplier
  2054  0709  30FF               	movlw	255
  2055  070A  00F7               	movwf	___lmul@multiplicand+3
  2056  070B  30FF               	movlw	255
  2057  070C  00F6               	movwf	___lmul@multiplicand+2
  2058  070D  30E3               	movlw	227
  2059  070E  00F5               	movwf	___lmul@multiplicand+1
  2060  070F  3043               	movlw	67
  2061  0710  00F4               	movwf	___lmul@multiplicand
  2062  0711  120A  158A  24FE  120A  118A  	fcall	___lmul
  2063  0716  0873               	movf	?___lmul+3,w
  2064  0717  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0718  1303               	bcf	3,6	;RP1=0, select bank0
  2066  0719  00A7               	movwf	___aldiv@dividend+3
  2067  071A  0872               	movf	?___lmul+2,w
  2068  071B  00A6               	movwf	___aldiv@dividend+2
  2069  071C  0871               	movf	?___lmul+1,w
  2070  071D  00A5               	movwf	___aldiv@dividend+1
  2071  071E  0870               	movf	?___lmul,w
  2072  071F  00A4               	movwf	___aldiv@dividend
  2073  0720  120A  118A  200A  120A  118A  	fcall	___aldiv
  2074  0725  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0726  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0727  0823               	movf	?___aldiv+3,w
  2077  0728  00CE               	movwf	_x2+3
  2078  0729  0822               	movf	?___aldiv+2,w
  2079  072A  00CD               	movwf	_x2+2
  2080  072B  0821               	movf	?___aldiv+1,w
  2081  072C  00CC               	movwf	_x2+1
  2082  072D  0820               	movf	?___aldiv,w
  2083  072E  00CB               	movwf	_x2
  2084                           
  2085                           ;main_bmp280.c: 66:         p=p+(x1+x2+3791)/16;
  2086  072F  3000               	movlw	0
  2087  0730  00A3               	movwf	___aldiv@divisor+3
  2088  0731  3000               	movlw	0
  2089  0732  00A2               	movwf	___aldiv@divisor+2
  2090  0733  3000               	movlw	0
  2091  0734  00A1               	movwf	___aldiv@divisor+1
  2092  0735  3010               	movlw	16
  2093  0736  00A0               	movwf	___aldiv@divisor
  2094  0737  30CF               	movlw	207
  2095  0738  00B9               	movwf	??_main
  2096  0739  300E               	movlw	14
  2097  073A  00BA               	movwf	??_main+1
  2098  073B  3000               	movlw	0
  2099  073C  00BB               	movwf	??_main+2
  2100  073D  3000               	movlw	0
  2101  073E  00BC               	movwf	??_main+3
  2102  073F  084F               	movf	_x1,w
  2103  0740  074B               	addwf	_x2,w
  2104  0741  00BD               	movwf	??_main+4
  2105  0742  3000               	movlw	0
  2106  0743  1803               	skipnc
  2107  0744  3001               	movlw	1
  2108  0745  0750               	addwf	_x1+1,w
  2109  0746  01BF               	clrf	??_main+6
  2110  0747  1803               	skipnc
  2111  0748  0ABF               	incf	??_main+6,f
  2112  0749  074C               	addwf	_x2+1,w
  2113  074A  00BE               	movwf	??_main+5
  2114  074B  1803               	skipnc
  2115  074C  0ABF               	incf	??_main+6,f
  2116  074D  0851               	movf	_x1+2,w
  2117  074E  073F               	addwf	??_main+6,w
  2118  074F  01C0               	clrf	??_main+7
  2119  0750  1803               	skipnc
  2120  0751  0AC0               	incf	??_main+7,f
  2121  0752  074D               	addwf	_x2+2,w
  2122  0753  00BF               	movwf	??_main+6
  2123  0754  1803               	skipnc
  2124  0755  0AC0               	incf	??_main+7,f
  2125  0756  0852               	movf	_x1+3,w
  2126  0757  0740               	addwf	??_main+7,w
  2127  0758  074E               	addwf	_x2+3,w
  2128  0759  00C0               	movwf	??_main+7
  2129  075A  083D               	movf	??_main+4,w
  2130  075B  07B9               	addwf	??_main,f
  2131  075C  083E               	movf	??_main+5,w
  2132  075D  1803               	skipnc
  2133  075E  0F3E               	incfsz	??_main+5,w
  2134  075F  2F61               	goto	u3280
  2135  0760  2F62               	goto	u3281
  2136  0761                     u3280:
  2137  0761  07BA               	addwf	??_main+1,f
  2138  0762                     u3281:
  2139  0762  083F               	movf	??_main+6,w
  2140  0763  1803               	skipnc
  2141  0764  0F3F               	incfsz	??_main+6,w
  2142  0765  2F67               	goto	u3282
  2143  0766  2F68               	goto	u3283
  2144  0767                     u3282:
  2145  0767  07BB               	addwf	??_main+2,f
  2146  0768                     u3283:
  2147  0768  0840               	movf	??_main+7,w
  2148  0769  1803               	skipnc
  2149  076A  0A40               	incf	??_main+7,w
  2150  076B  07BC               	addwf	??_main+3,f
  2151  076C  083C               	movf	??_main+3,w
  2152  076D  00A7               	movwf	___aldiv@dividend+3
  2153  076E  083B               	movf	??_main+2,w
  2154  076F  00A6               	movwf	___aldiv@dividend+2
  2155  0770  083A               	movf	??_main+1,w
  2156  0771  00A5               	movwf	___aldiv@dividend+1
  2157  0772  0839               	movf	??_main,w
  2158  0773  00A4               	movwf	___aldiv@dividend
  2159  0774  120A  118A  200A  120A  118A  	fcall	___aldiv
  2160  0779  1283               	bcf	3,5	;RP0=0, select bank0
  2161  077A  1303               	bcf	3,6	;RP1=0, select bank0
  2162  077B  0820               	movf	?___aldiv,w
  2163  077C  0769               	addwf	_p,w
  2164  077D  00C1               	movwf	??_main+8
  2165  077E  3000               	movlw	0
  2166  077F  1803               	skipnc
  2167  0780  3001               	movlw	1
  2168  0781  0721               	addwf	?___aldiv+1,w
  2169  0782  01C3               	clrf	??_main+10
  2170  0783  1803               	skipnc
  2171  0784  0AC3               	incf	??_main+10,f
  2172  0785  076A               	addwf	_p+1,w
  2173  0786  00C2               	movwf	??_main+9
  2174  0787  1803               	skipnc
  2175  0788  0AC3               	incf	??_main+10,f
  2176  0789  0822               	movf	?___aldiv+2,w
  2177  078A  0743               	addwf	??_main+10,w
  2178  078B  01C4               	clrf	??_main+11
  2179  078C  1803               	skipnc
  2180  078D  0AC4               	incf	??_main+11,f
  2181  078E  076B               	addwf	_p+2,w
  2182  078F  00C3               	movwf	??_main+10
  2183  0790  1803               	skipnc
  2184  0791  0AC4               	incf	??_main+11,f
  2185  0792  0823               	movf	?___aldiv+3,w
  2186  0793  0744               	addwf	??_main+11,w
  2187  0794  076C               	addwf	_p+3,w
  2188  0795  00C4               	movwf	??_main+11
  2189  0796  0844               	movf	??_main+11,w
  2190  0797  00EC               	movwf	_p+3
  2191  0798  0843               	movf	??_main+10,w
  2192  0799  00EB               	movwf	_p+2
  2193  079A  0842               	movf	??_main+9,w
  2194  079B  00EA               	movwf	_p+1
  2195  079C  0841               	movf	??_main+8,w
  2196  079D  00E9               	movwf	_p
  2197                           
  2198                           ;main_bmp280.c: 67:         hpa = p/100;
  2199  079E  3000               	movlw	0
  2200  079F  00A3               	movwf	___aldiv@divisor+3
  2201  07A0  3000               	movlw	0
  2202  07A1  00A2               	movwf	___aldiv@divisor+2
  2203  07A2  3000               	movlw	0
  2204  07A3  00A1               	movwf	___aldiv@divisor+1
  2205  07A4  3064               	movlw	100
  2206  07A5  00A0               	movwf	___aldiv@divisor
  2207  07A6  086C               	movf	_p+3,w
  2208  07A7  00A7               	movwf	___aldiv@dividend+3
  2209  07A8  086B               	movf	_p+2,w
  2210  07A9  00A6               	movwf	___aldiv@dividend+2
  2211  07AA  086A               	movf	_p+1,w
  2212  07AB  00A5               	movwf	___aldiv@dividend+1
  2213  07AC  0869               	movf	_p,w
  2214  07AD  00A4               	movwf	___aldiv@dividend
  2215  07AE  120A  118A  200A  120A  118A  	fcall	___aldiv
  2216  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  2217  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  2218  07B5  0821               	movf	?___aldiv+1,w
  2219  07B6  00DE               	movwf	_hpa+1
  2220  07B7  0820               	movf	?___aldiv,w
  2221  07B8  00DD               	movwf	_hpa
  2222                           
  2223                           ;main_bmp280.c: 71:         LCD_Command(0xC0);
  2224  07B9  30C0               	movlw	192
  2225  07BA  120A  158A  243A  120A  118A  	fcall	_LCD_Command
  2226                           
  2227                           ;main_bmp280.c: 72:         show_multidigits(hpa);
  2228  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  2229  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  2230  07C1  085E               	movf	_hpa+1,w
  2231  07C2  00FA               	movwf	show_multidigits@val+1
  2232  07C3  085D               	movf	_hpa,w
  2233  07C4  00F9               	movwf	show_multidigits@val
  2234  07C5  120A  118A  20A7  120A  118A  	fcall	_show_multidigits
  2235                           
  2236                           ;main_bmp280.c: 73:         LCD_Command(0x94);
  2237  07CA  3094               	movlw	148
  2238  07CB  120A  158A  243A  120A  118A  	fcall	_LCD_Command
  2239                           
  2240                           ;main_bmp280.c: 74:         show_multidigits(altitude);
  2241  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  2242  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  2243  07D2  0860               	movf	_altitude+1,w
  2244  07D3  00FA               	movwf	show_multidigits@val+1
  2245  07D4  085F               	movf	_altitude,w
  2246  07D5  00F9               	movwf	show_multidigits@val
  2247  07D6  120A  118A  20A7  120A  118A  	fcall	_show_multidigits
  2248  07DB  2A57               	goto	l2461
  2249  07DC  120A  118A  2800   	ljmp	start
  2250  07DF                     __end_of_main:
  2251                           
  2252                           	psect	text1
  2253  0F33                     __ptext1:	
  2254 ;; *************** function _uncompensated_pressure *****************
  2255 ;; Defined at:
  2256 ;;		line 94 in file "main_bmp280.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  ff8             4   21[BANK0 ] long 
  2261 ;;  ff7             4   17[BANK0 ] long 
  2262 ;;  ff6             4   13[BANK0 ] long 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, pclath, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         0       0       0       0       0
  2273 ;;      Locals:         0      12       0       0       0
  2274 ;;      Temps:          0      13       0       0       0
  2275 ;;      Totals:         0      25       0       0       0
  2276 ;;Total ram usage:       25 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 3
  2279 ;; This function calls:
  2280 ;;		_bmp280_read_byte
  2281 ;;		_bmp280_send_byte
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           
  2288                           ;psect for function _uncompensated_pressure
  2289  0F33                     _uncompensated_pressure:
  2290  0F33                     l2121:	
  2291                           ;incstack = 0
  2292                           ; Regs used in _uncompensated_pressure: [wreg+status,2+status,0+pclath+cstack]
  2293                           
  2294                           
  2295                           ;main_bmp280.c: 96:         bmp280_send_byte(0xf4,(0x34+(oss<<6)));
  2296  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0F35  086D               	movf	_oss,w
  2299  0F36  00A0               	movwf	??_uncompensated_pressure
  2300  0F37  3005               	movlw	5
  2301  0F38                     u2485:
  2302  0F38  1003               	clrc
  2303  0F39  0DA0               	rlf	??_uncompensated_pressure,f
  2304  0F3A  3EFF               	addlw	-1
  2305  0F3B  1D03               	skipz
  2306  0F3C  2F38               	goto	u2485
  2307  0F3D  1003               	clrc
  2308  0F3E  0D20               	rlf	??_uncompensated_pressure,w
  2309  0F3F  3E34               	addlw	52
  2310  0F40  00A1               	movwf	??_uncompensated_pressure+1
  2311  0F41  0821               	movf	??_uncompensated_pressure+1,w
  2312  0F42  00F1               	movwf	bmp280_send_byte@count
  2313  0F43  30F4               	movlw	244
  2314  0F44  120A  158A  2353  120A  158A  	fcall	_bmp280_send_byte
  2315  0F49                     l2123:
  2316                           
  2317                           ;main_bmp280.c: 97:         _delay((unsigned long)((25)*(12000000/4000.0)));
  2318  0F49  3062               	movlw	98
  2319  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0F4C  00A1               	movwf	??_uncompensated_pressure+1
  2322  0F4D  3065               	movlw	101
  2323  0F4E  00A0               	movwf	??_uncompensated_pressure
  2324  0F4F                     u3717:
  2325  0F4F  0BA0               	decfsz	??_uncompensated_pressure,f
  2326  0F50  2F4F               	goto	u3717
  2327  0F51  0BA1               	decfsz	??_uncompensated_pressure+1,f
  2328  0F52  2F4F               	goto	u3717
  2329  0F53                     l2125:
  2330                           
  2331                           ;main_bmp280.c: 99:         long ff6=(bmp280_read_byte(0xf6));
  2332  0F53  30F6               	movlw	246
  2333  0F54  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  2334  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0F5B  00A0               	movwf	??_uncompensated_pressure
  2337  0F5C  01A1               	clrf	??_uncompensated_pressure+1
  2338  0F5D  01A2               	clrf	??_uncompensated_pressure+2
  2339  0F5E  01A3               	clrf	??_uncompensated_pressure+3
  2340  0F5F  0823               	movf	??_uncompensated_pressure+3,w
  2341  0F60  00B0               	movwf	uncompensated_pressure@ff6+3
  2342  0F61  0822               	movf	??_uncompensated_pressure+2,w
  2343  0F62  00AF               	movwf	uncompensated_pressure@ff6+2
  2344  0F63  0821               	movf	??_uncompensated_pressure+1,w
  2345  0F64  00AE               	movwf	uncompensated_pressure@ff6+1
  2346  0F65  0820               	movf	??_uncompensated_pressure,w
  2347  0F66  00AD               	movwf	uncompensated_pressure@ff6
  2348  0F67                     l2127:
  2349                           
  2350                           ;main_bmp280.c: 100:         long ff7=(bmp280_read_byte(0xf7));
  2351  0F67  30F7               	movlw	247
  2352  0F68  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  2353  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0F6F  00A0               	movwf	??_uncompensated_pressure
  2356  0F70  01A1               	clrf	??_uncompensated_pressure+1
  2357  0F71  01A2               	clrf	??_uncompensated_pressure+2
  2358  0F72  01A3               	clrf	??_uncompensated_pressure+3
  2359  0F73  0823               	movf	??_uncompensated_pressure+3,w
  2360  0F74  00B4               	movwf	uncompensated_pressure@ff7+3
  2361  0F75  0822               	movf	??_uncompensated_pressure+2,w
  2362  0F76  00B3               	movwf	uncompensated_pressure@ff7+2
  2363  0F77  0821               	movf	??_uncompensated_pressure+1,w
  2364  0F78  00B2               	movwf	uncompensated_pressure@ff7+1
  2365  0F79  0820               	movf	??_uncompensated_pressure,w
  2366  0F7A  00B1               	movwf	uncompensated_pressure@ff7
  2367  0F7B                     l2129:
  2368                           
  2369                           ;main_bmp280.c: 101:         long ff8=(bmp280_read_byte(0xf8));
  2370  0F7B  30F8               	movlw	248
  2371  0F7C  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  2372  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0F83  00A0               	movwf	??_uncompensated_pressure
  2375  0F84  01A1               	clrf	??_uncompensated_pressure+1
  2376  0F85  01A2               	clrf	??_uncompensated_pressure+2
  2377  0F86  01A3               	clrf	??_uncompensated_pressure+3
  2378  0F87  0823               	movf	??_uncompensated_pressure+3,w
  2379  0F88  00B8               	movwf	uncompensated_pressure@ff8+3
  2380  0F89  0822               	movf	??_uncompensated_pressure+2,w
  2381  0F8A  00B7               	movwf	uncompensated_pressure@ff8+2
  2382  0F8B  0821               	movf	??_uncompensated_pressure+1,w
  2383  0F8C  00B6               	movwf	uncompensated_pressure@ff8+1
  2384  0F8D  0820               	movf	??_uncompensated_pressure,w
  2385  0F8E  00B5               	movwf	uncompensated_pressure@ff8
  2386  0F8F                     l2131:
  2387                           
  2388                           ;main_bmp280.c: 102:         up=(((ff6<<16)+(ff7<<8)+ff8)>>(8-oss));
  2389  0F8F  086D               	movf	_oss,w
  2390  0F90  3C08               	sublw	8
  2391  0F91  00A0               	movwf	??_uncompensated_pressure
  2392  0F92  0AA0               	incf	??_uncompensated_pressure,f
  2393  0F93  0835               	movf	uncompensated_pressure@ff8,w
  2394  0F94  00A1               	movwf	??_uncompensated_pressure+1
  2395  0F95  0836               	movf	uncompensated_pressure@ff8+1,w
  2396  0F96  00A2               	movwf	??_uncompensated_pressure+2
  2397  0F97  0837               	movf	uncompensated_pressure@ff8+2,w
  2398  0F98  00A3               	movwf	??_uncompensated_pressure+3
  2399  0F99  0838               	movf	uncompensated_pressure@ff8+3,w
  2400  0F9A  00A4               	movwf	??_uncompensated_pressure+4
  2401  0F9B  0831               	movf	uncompensated_pressure@ff7,w
  2402  0F9C  00A5               	movwf	??_uncompensated_pressure+5
  2403  0F9D  0832               	movf	uncompensated_pressure@ff7+1,w
  2404  0F9E  00A6               	movwf	??_uncompensated_pressure+6
  2405  0F9F  0833               	movf	uncompensated_pressure@ff7+2,w
  2406  0FA0  00A7               	movwf	??_uncompensated_pressure+7
  2407  0FA1  0834               	movf	uncompensated_pressure@ff7+3,w
  2408  0FA2  00A8               	movwf	??_uncompensated_pressure+8
  2409  0FA3  3008               	movlw	8
  2410  0FA4                     u2495:
  2411  0FA4  1003               	clrc
  2412  0FA5  0DA5               	rlf	??_uncompensated_pressure+5,f
  2413  0FA6  0DA6               	rlf	??_uncompensated_pressure+6,f
  2414  0FA7  0DA7               	rlf	??_uncompensated_pressure+7,f
  2415  0FA8  0DA8               	rlf	??_uncompensated_pressure+8,f
  2416  0FA9                     u2490:
  2417  0FA9  3EFF               	addlw	-1
  2418  0FAA  1D03               	skipz
  2419  0FAB  2FA4               	goto	u2495
  2420  0FAC  082D               	movf	uncompensated_pressure@ff6,w
  2421  0FAD  00A9               	movwf	??_uncompensated_pressure+9
  2422  0FAE  082E               	movf	uncompensated_pressure@ff6+1,w
  2423  0FAF  00AA               	movwf	??_uncompensated_pressure+10
  2424  0FB0  082F               	movf	uncompensated_pressure@ff6+2,w
  2425  0FB1  00AB               	movwf	??_uncompensated_pressure+11
  2426  0FB2  0830               	movf	uncompensated_pressure@ff6+3,w
  2427  0FB3  00AC               	movwf	??_uncompensated_pressure+12
  2428  0FB4  3010               	movlw	16
  2429  0FB5                     u2505:
  2430  0FB5  1003               	clrc
  2431  0FB6  0DA9               	rlf	??_uncompensated_pressure+9,f
  2432  0FB7  0DAA               	rlf	??_uncompensated_pressure+10,f
  2433  0FB8  0DAB               	rlf	??_uncompensated_pressure+11,f
  2434  0FB9  0DAC               	rlf	??_uncompensated_pressure+12,f
  2435  0FBA                     u2500:
  2436  0FBA  3EFF               	addlw	-1
  2437  0FBB  1D03               	skipz
  2438  0FBC  2FB5               	goto	u2505
  2439  0FBD  0829               	movf	??_uncompensated_pressure+9,w
  2440  0FBE  07A5               	addwf	??_uncompensated_pressure+5,f
  2441  0FBF  082A               	movf	??_uncompensated_pressure+10,w
  2442  0FC0  1803               	skipnc
  2443  0FC1  0F2A               	incfsz	??_uncompensated_pressure+10,w
  2444  0FC2  2FC4               	goto	u2510
  2445  0FC3  2FC5               	goto	u2511
  2446  0FC4                     u2510:
  2447  0FC4  07A6               	addwf	??_uncompensated_pressure+6,f
  2448  0FC5                     u2511:
  2449  0FC5  082B               	movf	??_uncompensated_pressure+11,w
  2450  0FC6  1803               	skipnc
  2451  0FC7  0F2B               	incfsz	??_uncompensated_pressure+11,w
  2452  0FC8  2FCA               	goto	u2512
  2453  0FC9  2FCB               	goto	u2513
  2454  0FCA                     u2512:
  2455  0FCA  07A7               	addwf	??_uncompensated_pressure+7,f
  2456  0FCB                     u2513:
  2457  0FCB  082C               	movf	??_uncompensated_pressure+12,w
  2458  0FCC  1803               	skipnc
  2459  0FCD  0A2C               	incf	??_uncompensated_pressure+12,w
  2460  0FCE  07A8               	addwf	??_uncompensated_pressure+8,f
  2461  0FCF  0825               	movf	??_uncompensated_pressure+5,w
  2462  0FD0  07A1               	addwf	??_uncompensated_pressure+1,f
  2463  0FD1  0826               	movf	??_uncompensated_pressure+6,w
  2464  0FD2  1803               	skipnc
  2465  0FD3  0F26               	incfsz	??_uncompensated_pressure+6,w
  2466  0FD4  2FD6               	goto	u2520
  2467  0FD5  2FD7               	goto	u2521
  2468  0FD6                     u2520:
  2469  0FD6  07A2               	addwf	??_uncompensated_pressure+2,f
  2470  0FD7                     u2521:
  2471  0FD7  0827               	movf	??_uncompensated_pressure+7,w
  2472  0FD8  1803               	skipnc
  2473  0FD9  0F27               	incfsz	??_uncompensated_pressure+7,w
  2474  0FDA  2FDC               	goto	u2522
  2475  0FDB  2FDD               	goto	u2523
  2476  0FDC                     u2522:
  2477  0FDC  07A3               	addwf	??_uncompensated_pressure+3,f
  2478  0FDD                     u2523:
  2479  0FDD  0828               	movf	??_uncompensated_pressure+8,w
  2480  0FDE  1803               	skipnc
  2481  0FDF  0A28               	incf	??_uncompensated_pressure+8,w
  2482  0FE0  07A4               	addwf	??_uncompensated_pressure+4,f
  2483  0FE1  2FE7               	goto	u2530
  2484  0FE2                     u2535:
  2485  0FE2  0D24               	rlf	??_uncompensated_pressure+4,w
  2486  0FE3  0CA4               	rrf	??_uncompensated_pressure+4,f
  2487  0FE4  0CA3               	rrf	??_uncompensated_pressure+3,f
  2488  0FE5  0CA2               	rrf	??_uncompensated_pressure+2,f
  2489  0FE6  0CA1               	rrf	??_uncompensated_pressure+1,f
  2490  0FE7                     u2530:
  2491  0FE7  0BA0               	decfsz	??_uncompensated_pressure,f
  2492  0FE8  2FE2               	goto	u2535
  2493  0FE9  0824               	movf	??_uncompensated_pressure+4,w
  2494  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2495  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2496  0FEC  00A7               	movwf	(_up+3)^(0+128)
  2497  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0FEF  0823               	movf	??_uncompensated_pressure+3,w
  2500  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  2501  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  2502  0FF2  00A6               	movwf	(_up+2)^(0+128)
  2503  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0FF5  0822               	movf	??_uncompensated_pressure+2,w
  2506  0FF6  1683               	bsf	3,5	;RP0=1, select bank1
  2507  0FF7  1303               	bcf	3,6	;RP1=0, select bank1
  2508  0FF8  00A5               	movwf	(_up+1)^(0+128)
  2509  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0FFB  0821               	movf	??_uncompensated_pressure+1,w
  2512  0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  2513  0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  2514  0FFE  00A4               	movwf	_up^(0+128)
  2515  0FFF                     l193:
  2516  0FFF  0008               	return
  2517  1000                     __end_of_uncompensated_pressure:
  2518                           
  2519                           	psect	text2
  2520  0B53                     __ptext2:	
  2521 ;; *************** function _bmp280_send_byte *****************
  2522 ;; Defined at:
  2523 ;;		line 59 in file "./p03a_bmp280.h"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  addr            1    wreg     unsigned char 
  2526 ;;  count           1    1[COMMON] unsigned char 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  addr            1    2[COMMON] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0, pclath, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2538 ;;      Params:         1       0       0       0       0
  2539 ;;      Locals:         1       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0
  2541 ;;      Totals:         2       0       0       0       0
  2542 ;;Total ram usage:        2 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; Hardware stack levels required when called: 2
  2545 ;; This function calls:
  2546 ;;		_bmp280_send
  2547 ;;		_bmp280_start
  2548 ;;		_bmp280_stop
  2549 ;; This function is called by:
  2550 ;;		_uncompensated_pressure
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _bmp280_send_byte
  2556  0B53                     _bmp280_send_byte:
  2557                           
  2558                           ;incstack = 0
  2559                           ; Regs used in _bmp280_send_byte: [wreg+status,2+status,0+pclath+cstack]
  2560                           ;bmp280_send_byte@addr stored from wreg
  2561  0B53  00F2               	movwf	bmp280_send_byte@addr
  2562  0B54                     l1751:
  2563                           
  2564                           ;./p03a_bmp280.h: 59: void bmp280_send_byte(unsigned char addr,unsigned char count);./p0
      +                          3a_bmp280.h: 60: {;./p03a_bmp280.h: 61:     bmp280_start();
  2565  0B54  120A  158A  230D  120A  158A  	fcall	_bmp280_start
  2566  0B59                     l1753:
  2567                           
  2568                           ;./p03a_bmp280.h: 62:     bmp280_send(0xEE);
  2569  0B59  30EE               	movlw	238
  2570  0B5A  120A  158A  232C  120A  158A  	fcall	_bmp280_send
  2571  0B5F                     l1755:
  2572                           
  2573                           ;./p03a_bmp280.h: 63:     bmp280_send(addr);
  2574  0B5F  0872               	movf	bmp280_send_byte@addr,w
  2575  0B60  120A  158A  232C  120A  158A  	fcall	_bmp280_send
  2576  0B65                     l1757:
  2577                           
  2578                           ;./p03a_bmp280.h: 64:     bmp280_send(count);
  2579  0B65  0871               	movf	bmp280_send_byte@count,w
  2580  0B66  120A  158A  232C  120A  158A  	fcall	_bmp280_send
  2581  0B6B                     l1759:
  2582                           
  2583                           ;./p03a_bmp280.h: 65:     bmp280_stop();
  2584  0B6B  120A  158A  2304  120A  158A  	fcall	_bmp280_stop
  2585  0B70                     l82:
  2586  0B70  0008               	return
  2587  0B71                     __end_of_bmp280_send_byte:
  2588                           
  2589                           	psect	text3
  2590  0B0D                     __ptext3:	
  2591 ;; *************** function _bmp280_start *****************
  2592 ;; Defined at:
  2593 ;;		line 21 in file "./p03a_bmp280.h"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 1
  2614 ;; This function calls:
  2615 ;;		_bmp280_waitmssp
  2616 ;; This function is called by:
  2617 ;;		_bmp280_send_byte
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           
  2622                           ;psect for function _bmp280_start
  2623  0B0D                     _bmp280_start:
  2624  0B0D                     l1377:	
  2625                           ;incstack = 0
  2626                           ; Regs used in _bmp280_start: [status,2+status,0+pclath+cstack]
  2627                           
  2628                           
  2629                           ;./p03a_bmp280.h: 23:     SEN=1;
  2630  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  2631  0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  2632  0B0F  1411               	bsf	17,0	;volatile
  2633  0B10                     l1379:
  2634                           
  2635                           ;./p03a_bmp280.h: 24:     bmp280_waitmssp();
  2636  0B10  120A  158A  22EB  120A  158A  	fcall	_bmp280_waitmssp
  2637  0B15                     l54:
  2638  0B15  0008               	return
  2639  0B16                     __end_of_bmp280_start:
  2640                           
  2641                           	psect	text4
  2642  00A7                     __ptext4:	
  2643 ;; *************** function _show_multidigits *****************
  2644 ;; Defined at:
  2645 ;;		line 93 in file "./lcd4bit.h"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  val             2    9[COMMON] unsigned int 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  remainder       2   12[BANK0 ] int 
  2650 ;;  result1         2   10[BANK0 ] int 
  2651 ;;  digit2          2    8[BANK0 ] int 
  2652 ;;  digit1          2    6[BANK0 ] int 
  2653 ;;  digit3          2    4[BANK0 ] int 
  2654 ;;  result          2    2[BANK0 ] int 
  2655 ;;  digit4          2    0[BANK0 ] int 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0, pclath, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2665 ;;      Params:         2       0       0       0       0
  2666 ;;      Locals:         0      14       0       0       0
  2667 ;;      Temps:          0       0       0       0       0
  2668 ;;      Totals:         2      14       0       0       0
  2669 ;;Total ram usage:       16 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 1
  2672 ;; This function calls:
  2673 ;;		_LCD_Char
  2674 ;;		___awdiv
  2675 ;;		___awmod
  2676 ;;		___lwdiv
  2677 ;;		___lwmod
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           
  2684                           ;psect for function _show_multidigits
  2685  00A7                     _show_multidigits:
  2686  00A7                     l2059:	
  2687                           ;incstack = 0
  2688                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  2689                           
  2690                           
  2691                           ;./lcd4bit.h: 93: void show_multidigits (unsigned int val);./lcd4bit.h: 94: {;./lcd4bit.
      +                          h: 95:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          96:     if (val<=9)
  2692  00A7  3000               	movlw	0
  2693  00A8  027A               	subwf	show_multidigits@val+1,w
  2694  00A9  300A               	movlw	10
  2695  00AA  1903               	skipnz
  2696  00AB  0279               	subwf	show_multidigits@val,w
  2697  00AC  1803               	skipnc
  2698  00AD  28AF               	goto	u2411
  2699  00AE  28B0               	goto	u2410
  2700  00AF                     u2411:
  2701  00AF  28B8               	goto	l2063
  2702  00B0                     u2410:
  2703  00B0                     l2061:
  2704                           
  2705                           ;./lcd4bit.h: 97:     {;./lcd4bit.h: 98:        LCD_Char(val+0x30);
  2706  00B0  0879               	movf	show_multidigits@val,w
  2707  00B1  3E30               	addlw	48
  2708  00B2  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2709                           
  2710                           ;./lcd4bit.h: 99:     }
  2711  00B7  2A38               	goto	l125
  2712  00B8                     l2063:
  2713  00B8  3000               	movlw	0
  2714  00B9  027A               	subwf	show_multidigits@val+1,w
  2715  00BA  300A               	movlw	10
  2716  00BB  1903               	skipnz
  2717  00BC  0279               	subwf	show_multidigits@val,w
  2718  00BD  1C03               	skipc
  2719  00BE  28C0               	goto	u2421
  2720  00BF  28C1               	goto	u2420
  2721  00C0                     u2421:
  2722  00C0  2905               	goto	l2077
  2723  00C1                     u2420:
  2724  00C1                     l2065:
  2725  00C1  3000               	movlw	0
  2726  00C2  027A               	subwf	show_multidigits@val+1,w
  2727  00C3  3064               	movlw	100
  2728  00C4  1903               	skipnz
  2729  00C5  0279               	subwf	show_multidigits@val,w
  2730  00C6  1803               	skipnc
  2731  00C7  28C9               	goto	u2431
  2732  00C8  28CA               	goto	u2430
  2733  00C9                     u2431:
  2734  00C9  2905               	goto	l2077
  2735  00CA                     u2430:
  2736  00CA                     l2067:
  2737                           
  2738                           ;./lcd4bit.h: 101:     {;./lcd4bit.h: 102:         remainder = val % 10;
  2739  00CA  300A               	movlw	10
  2740  00CB  00F0               	movwf	___lwmod@divisor
  2741  00CC  3000               	movlw	0
  2742  00CD  00F1               	movwf	___lwmod@divisor+1
  2743  00CE  087A               	movf	show_multidigits@val+1,w
  2744  00CF  00F3               	movwf	___lwmod@dividend+1
  2745  00D0  0879               	movf	show_multidigits@val,w
  2746  00D1  00F2               	movwf	___lwmod@dividend
  2747  00D2  120A  158A  2400  120A  118A  	fcall	___lwmod
  2748  00D7  0871               	movf	?___lwmod+1,w
  2749  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  2750  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  2751  00DA  00AD               	movwf	show_multidigits@remainder+1
  2752  00DB  0870               	movf	?___lwmod,w
  2753  00DC  00AC               	movwf	show_multidigits@remainder
  2754  00DD                     l2069:
  2755                           
  2756                           ;./lcd4bit.h: 103:         digit1 = remainder;
  2757  00DD  082D               	movf	show_multidigits@remainder+1,w
  2758  00DE  00A7               	movwf	show_multidigits@digit1+1
  2759  00DF  082C               	movf	show_multidigits@remainder,w
  2760  00E0  00A6               	movwf	show_multidigits@digit1
  2761  00E1                     l2071:
  2762                           
  2763                           ;./lcd4bit.h: 104:         digit2 = val/10;
  2764  00E1  300A               	movlw	10
  2765  00E2  00F0               	movwf	___lwdiv@divisor
  2766  00E3  3000               	movlw	0
  2767  00E4  00F1               	movwf	___lwdiv@divisor+1
  2768  00E5  087A               	movf	show_multidigits@val+1,w
  2769  00E6  00F3               	movwf	___lwdiv@dividend+1
  2770  00E7  0879               	movf	show_multidigits@val,w
  2771  00E8  00F2               	movwf	___lwdiv@dividend
  2772  00E9  120A  158A  24BA  120A  118A  	fcall	___lwdiv
  2773  00EE  0871               	movf	?___lwdiv+1,w
  2774  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2775  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2776  00F1  00A9               	movwf	show_multidigits@digit2+1
  2777  00F2  0870               	movf	?___lwdiv,w
  2778  00F3  00A8               	movwf	show_multidigits@digit2
  2779  00F4                     l2073:
  2780                           
  2781                           ;./lcd4bit.h: 105:         LCD_Char(digit2+0x30);
  2782  00F4  0828               	movf	show_multidigits@digit2,w
  2783  00F5  3E30               	addlw	48
  2784  00F6  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2785  00FB                     l2075:
  2786                           
  2787                           ;./lcd4bit.h: 106:         LCD_Char(digit1+0x30);
  2788  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2789  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2790  00FD  0826               	movf	show_multidigits@digit1,w
  2791  00FE  3E30               	addlw	48
  2792  00FF  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2793                           
  2794                           ;./lcd4bit.h: 107:     }
  2795  0104  2A38               	goto	l125
  2796  0105                     l2077:
  2797  0105  3000               	movlw	0
  2798  0106  027A               	subwf	show_multidigits@val+1,w
  2799  0107  3064               	movlw	100
  2800  0108  1903               	skipnz
  2801  0109  0279               	subwf	show_multidigits@val,w
  2802  010A  1C03               	skipc
  2803  010B  290D               	goto	u2441
  2804  010C  290E               	goto	u2440
  2805  010D                     u2441:
  2806  010D  2985               	goto	l2095
  2807  010E                     u2440:
  2808  010E                     l2079:
  2809  010E  3003               	movlw	3
  2810  010F  027A               	subwf	show_multidigits@val+1,w
  2811  0110  30E8               	movlw	232
  2812  0111  1903               	skipnz
  2813  0112  0279               	subwf	show_multidigits@val,w
  2814  0113  1803               	skipnc
  2815  0114  2916               	goto	u2451
  2816  0115  2917               	goto	u2450
  2817  0116                     u2451:
  2818  0116  2985               	goto	l2095
  2819  0117                     u2450:
  2820  0117                     l2081:
  2821                           
  2822                           ;./lcd4bit.h: 109:     {;./lcd4bit.h: 110:         remainder = val % 10;
  2823  0117  300A               	movlw	10
  2824  0118  00F0               	movwf	___lwmod@divisor
  2825  0119  3000               	movlw	0
  2826  011A  00F1               	movwf	___lwmod@divisor+1
  2827  011B  087A               	movf	show_multidigits@val+1,w
  2828  011C  00F3               	movwf	___lwmod@dividend+1
  2829  011D  0879               	movf	show_multidigits@val,w
  2830  011E  00F2               	movwf	___lwmod@dividend
  2831  011F  120A  158A  2400  120A  118A  	fcall	___lwmod
  2832  0124  0871               	movf	?___lwmod+1,w
  2833  0125  1283               	bcf	3,5	;RP0=0, select bank0
  2834  0126  1303               	bcf	3,6	;RP1=0, select bank0
  2835  0127  00AD               	movwf	show_multidigits@remainder+1
  2836  0128  0870               	movf	?___lwmod,w
  2837  0129  00AC               	movwf	show_multidigits@remainder
  2838                           
  2839                           ;./lcd4bit.h: 111:         result1 = val /10;
  2840  012A  300A               	movlw	10
  2841  012B  00F0               	movwf	___lwdiv@divisor
  2842  012C  3000               	movlw	0
  2843  012D  00F1               	movwf	___lwdiv@divisor+1
  2844  012E  087A               	movf	show_multidigits@val+1,w
  2845  012F  00F3               	movwf	___lwdiv@dividend+1
  2846  0130  0879               	movf	show_multidigits@val,w
  2847  0131  00F2               	movwf	___lwdiv@dividend
  2848  0132  120A  158A  24BA  120A  118A  	fcall	___lwdiv
  2849  0137  0871               	movf	?___lwdiv+1,w
  2850  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0139  1303               	bcf	3,6	;RP1=0, select bank0
  2852  013A  00AB               	movwf	show_multidigits@result1+1
  2853  013B  0870               	movf	?___lwdiv,w
  2854  013C  00AA               	movwf	show_multidigits@result1
  2855  013D                     l2083:
  2856                           
  2857                           ;./lcd4bit.h: 112:         digit1 = remainder;
  2858  013D  082D               	movf	show_multidigits@remainder+1,w
  2859  013E  00A7               	movwf	show_multidigits@digit1+1
  2860  013F  082C               	movf	show_multidigits@remainder,w
  2861  0140  00A6               	movwf	show_multidigits@digit1
  2862  0141                     l2085:
  2863                           
  2864                           ;./lcd4bit.h: 113:         remainder = result1%10;
  2865  0141  300A               	movlw	10
  2866  0142  00F0               	movwf	___awmod@divisor
  2867  0143  3000               	movlw	0
  2868  0144  00F1               	movwf	___awmod@divisor+1
  2869  0145  082B               	movf	show_multidigits@result1+1,w
  2870  0146  00F3               	movwf	___awmod@dividend+1
  2871  0147  082A               	movf	show_multidigits@result1,w
  2872  0148  00F2               	movwf	___awmod@dividend
  2873  0149  120A  158A  2544  120A  118A  	fcall	___awmod
  2874  014E  0871               	movf	?___awmod+1,w
  2875  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0151  00AD               	movwf	show_multidigits@remainder+1
  2878  0152  0870               	movf	?___awmod,w
  2879  0153  00AC               	movwf	show_multidigits@remainder
  2880                           
  2881                           ;./lcd4bit.h: 114:         digit2 = remainder;
  2882  0154  082D               	movf	show_multidigits@remainder+1,w
  2883  0155  00A9               	movwf	show_multidigits@digit2+1
  2884  0156  082C               	movf	show_multidigits@remainder,w
  2885  0157  00A8               	movwf	show_multidigits@digit2
  2886  0158                     l2087:
  2887                           
  2888                           ;./lcd4bit.h: 115:         digit3 = result1/10;
  2889  0158  300A               	movlw	10
  2890  0159  00F0               	movwf	___awdiv@divisor
  2891  015A  3000               	movlw	0
  2892  015B  00F1               	movwf	___awdiv@divisor+1
  2893  015C  082B               	movf	show_multidigits@result1+1,w
  2894  015D  00F3               	movwf	___awdiv@dividend+1
  2895  015E  082A               	movf	show_multidigits@result1,w
  2896  015F  00F2               	movwf	___awdiv@dividend
  2897  0160  120A  158A  2603  120A  118A  	fcall	___awdiv
  2898  0165  0871               	movf	?___awdiv+1,w
  2899  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2900  0167  1303               	bcf	3,6	;RP1=0, select bank0
  2901  0168  00A5               	movwf	show_multidigits@digit3+1
  2902  0169  0870               	movf	?___awdiv,w
  2903  016A  00A4               	movwf	show_multidigits@digit3
  2904  016B                     l2089:
  2905                           
  2906                           ;./lcd4bit.h: 116:         LCD_Char(digit3+0x30);
  2907  016B  0824               	movf	show_multidigits@digit3,w
  2908  016C  3E30               	addlw	48
  2909  016D  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2910  0172                     l2091:
  2911                           
  2912                           ;./lcd4bit.h: 117:         LCD_Char(digit2+0x30);
  2913  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0174  0828               	movf	show_multidigits@digit2,w
  2916  0175  3E30               	addlw	48
  2917  0176  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2918  017B                     l2093:
  2919                           
  2920                           ;./lcd4bit.h: 118:         LCD_Char(digit1+0x30);
  2921  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2922  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2923  017D  0826               	movf	show_multidigits@digit1,w
  2924  017E  3E30               	addlw	48
  2925  017F  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2926                           
  2927                           ;./lcd4bit.h: 119:     }
  2928  0184  2A38               	goto	l125
  2929  0185                     l2095:
  2930  0185  3003               	movlw	3
  2931  0186  027A               	subwf	show_multidigits@val+1,w
  2932  0187  30E8               	movlw	232
  2933  0188  1903               	skipnz
  2934  0189  0279               	subwf	show_multidigits@val,w
  2935  018A  1C03               	skipc
  2936  018B  298D               	goto	u2461
  2937  018C  298E               	goto	u2460
  2938  018D                     u2461:
  2939  018D  2A38               	goto	l121
  2940  018E                     u2460:
  2941  018E                     l2097:
  2942  018E  3027               	movlw	39
  2943  018F  027A               	subwf	show_multidigits@val+1,w
  2944  0190  300F               	movlw	15
  2945  0191  1903               	skipnz
  2946  0192  0279               	subwf	show_multidigits@val,w
  2947  0193  1803               	skipnc
  2948  0194  2996               	goto	u2471
  2949  0195  2997               	goto	u2470
  2950  0196                     u2471:
  2951  0196  2A38               	goto	l121
  2952  0197                     u2470:
  2953  0197                     l2099:
  2954                           
  2955                           ;./lcd4bit.h: 121:     {;./lcd4bit.h: 122:         remainder = val % 10;
  2956  0197  300A               	movlw	10
  2957  0198  00F0               	movwf	___lwmod@divisor
  2958  0199  3000               	movlw	0
  2959  019A  00F1               	movwf	___lwmod@divisor+1
  2960  019B  087A               	movf	show_multidigits@val+1,w
  2961  019C  00F3               	movwf	___lwmod@dividend+1
  2962  019D  0879               	movf	show_multidigits@val,w
  2963  019E  00F2               	movwf	___lwmod@dividend
  2964  019F  120A  158A  2400  120A  118A  	fcall	___lwmod
  2965  01A4  0871               	movf	?___lwmod+1,w
  2966  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2967  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2968  01A7  00AD               	movwf	show_multidigits@remainder+1
  2969  01A8  0870               	movf	?___lwmod,w
  2970  01A9  00AC               	movwf	show_multidigits@remainder
  2971                           
  2972                           ;./lcd4bit.h: 123:         result1 = val /10;
  2973  01AA  300A               	movlw	10
  2974  01AB  00F0               	movwf	___lwdiv@divisor
  2975  01AC  3000               	movlw	0
  2976  01AD  00F1               	movwf	___lwdiv@divisor+1
  2977  01AE  087A               	movf	show_multidigits@val+1,w
  2978  01AF  00F3               	movwf	___lwdiv@dividend+1
  2979  01B0  0879               	movf	show_multidigits@val,w
  2980  01B1  00F2               	movwf	___lwdiv@dividend
  2981  01B2  120A  158A  24BA  120A  118A  	fcall	___lwdiv
  2982  01B7  0871               	movf	?___lwdiv+1,w
  2983  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2984  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2985  01BA  00AB               	movwf	show_multidigits@result1+1
  2986  01BB  0870               	movf	?___lwdiv,w
  2987  01BC  00AA               	movwf	show_multidigits@result1
  2988  01BD                     l2101:
  2989                           
  2990                           ;./lcd4bit.h: 124:         digit1 = remainder;
  2991  01BD  082D               	movf	show_multidigits@remainder+1,w
  2992  01BE  00A7               	movwf	show_multidigits@digit1+1
  2993  01BF  082C               	movf	show_multidigits@remainder,w
  2994  01C0  00A6               	movwf	show_multidigits@digit1
  2995  01C1                     l2103:
  2996                           
  2997                           ;./lcd4bit.h: 125:         remainder = result1%10;
  2998  01C1  300A               	movlw	10
  2999  01C2  00F0               	movwf	___awmod@divisor
  3000  01C3  3000               	movlw	0
  3001  01C4  00F1               	movwf	___awmod@divisor+1
  3002  01C5  082B               	movf	show_multidigits@result1+1,w
  3003  01C6  00F3               	movwf	___awmod@dividend+1
  3004  01C7  082A               	movf	show_multidigits@result1,w
  3005  01C8  00F2               	movwf	___awmod@dividend
  3006  01C9  120A  158A  2544  120A  118A  	fcall	___awmod
  3007  01CE  0871               	movf	?___awmod+1,w
  3008  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3009  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3010  01D1  00AD               	movwf	show_multidigits@remainder+1
  3011  01D2  0870               	movf	?___awmod,w
  3012  01D3  00AC               	movwf	show_multidigits@remainder
  3013                           
  3014                           ;./lcd4bit.h: 126:         digit2 = remainder;
  3015  01D4  082D               	movf	show_multidigits@remainder+1,w
  3016  01D5  00A9               	movwf	show_multidigits@digit2+1
  3017  01D6  082C               	movf	show_multidigits@remainder,w
  3018  01D7  00A8               	movwf	show_multidigits@digit2
  3019  01D8                     l2105:
  3020                           
  3021                           ;./lcd4bit.h: 127:         result = result1/10;
  3022  01D8  300A               	movlw	10
  3023  01D9  00F0               	movwf	___awdiv@divisor
  3024  01DA  3000               	movlw	0
  3025  01DB  00F1               	movwf	___awdiv@divisor+1
  3026  01DC  082B               	movf	show_multidigits@result1+1,w
  3027  01DD  00F3               	movwf	___awdiv@dividend+1
  3028  01DE  082A               	movf	show_multidigits@result1,w
  3029  01DF  00F2               	movwf	___awdiv@dividend
  3030  01E0  120A  158A  2603  120A  118A  	fcall	___awdiv
  3031  01E5  0871               	movf	?___awdiv+1,w
  3032  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  3033  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  3034  01E8  00A3               	movwf	show_multidigits@result+1
  3035  01E9  0870               	movf	?___awdiv,w
  3036  01EA  00A2               	movwf	show_multidigits@result
  3037  01EB                     l2107:
  3038                           
  3039                           ;./lcd4bit.h: 128:         remainder = result%10;
  3040  01EB  300A               	movlw	10
  3041  01EC  00F0               	movwf	___awmod@divisor
  3042  01ED  3000               	movlw	0
  3043  01EE  00F1               	movwf	___awmod@divisor+1
  3044  01EF  0823               	movf	show_multidigits@result+1,w
  3045  01F0  00F3               	movwf	___awmod@dividend+1
  3046  01F1  0822               	movf	show_multidigits@result,w
  3047  01F2  00F2               	movwf	___awmod@dividend
  3048  01F3  120A  158A  2544  120A  118A  	fcall	___awmod
  3049  01F8  0871               	movf	?___awmod+1,w
  3050  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3051  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3052  01FB  00AD               	movwf	show_multidigits@remainder+1
  3053  01FC  0870               	movf	?___awmod,w
  3054  01FD  00AC               	movwf	show_multidigits@remainder
  3055                           
  3056                           ;./lcd4bit.h: 129:         digit3=remainder;
  3057  01FE  082D               	movf	show_multidigits@remainder+1,w
  3058  01FF  00A5               	movwf	show_multidigits@digit3+1
  3059  0200  082C               	movf	show_multidigits@remainder,w
  3060  0201  00A4               	movwf	show_multidigits@digit3
  3061  0202                     l2109:
  3062                           
  3063                           ;./lcd4bit.h: 130:         digit4 = result/10;
  3064  0202  300A               	movlw	10
  3065  0203  00F0               	movwf	___awdiv@divisor
  3066  0204  3000               	movlw	0
  3067  0205  00F1               	movwf	___awdiv@divisor+1
  3068  0206  0823               	movf	show_multidigits@result+1,w
  3069  0207  00F3               	movwf	___awdiv@dividend+1
  3070  0208  0822               	movf	show_multidigits@result,w
  3071  0209  00F2               	movwf	___awdiv@dividend
  3072  020A  120A  158A  2603  120A  118A  	fcall	___awdiv
  3073  020F  0871               	movf	?___awdiv+1,w
  3074  0210  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0211  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0212  00A1               	movwf	show_multidigits@digit4+1
  3077  0213  0870               	movf	?___awdiv,w
  3078  0214  00A0               	movwf	show_multidigits@digit4
  3079  0215                     l2111:
  3080                           
  3081                           ;./lcd4bit.h: 131:         LCD_Char(digit4+0x30);
  3082  0215  0820               	movf	show_multidigits@digit4,w
  3083  0216  3E30               	addlw	48
  3084  0217  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  3085  021C                     l2113:
  3086                           
  3087                           ;./lcd4bit.h: 132:         LCD_Char(digit3+0x30);
  3088  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3089  021D  1303               	bcf	3,6	;RP1=0, select bank0
  3090  021E  0824               	movf	show_multidigits@digit3,w
  3091  021F  3E30               	addlw	48
  3092  0220  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  3093  0225                     l2115:
  3094                           
  3095                           ;./lcd4bit.h: 133:         LCD_Char(digit2+0x30);
  3096  0225  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0226  1303               	bcf	3,6	;RP1=0, select bank0
  3098  0227  0828               	movf	show_multidigits@digit2,w
  3099  0228  3E30               	addlw	48
  3100  0229  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  3101  022E                     l2117:
  3102                           
  3103                           ;./lcd4bit.h: 134:         LCD_Char(digit1+0x30);
  3104  022E  1283               	bcf	3,5	;RP0=0, select bank0
  3105  022F  1303               	bcf	3,6	;RP1=0, select bank0
  3106  0230  0826               	movf	show_multidigits@digit1,w
  3107  0231  3E30               	addlw	48
  3108  0232  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  3109  0237  2A38               	goto	l125
  3110  0238                     l121:
  3111  0238                     l125:
  3112  0238  0008               	return
  3113  0239                     __end_of_show_multidigits:
  3114                           
  3115                           	psect	text5
  3116  0C00                     __ptext5:	
  3117 ;; *************** function ___lwmod *****************
  3118 ;; Defined at:
  3119 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  divisor         2    0[COMMON] unsigned int 
  3122 ;;  dividend        2    2[COMMON] unsigned int 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  counter         1    5[COMMON] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  2    0[COMMON] unsigned int 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3134 ;;      Params:         4       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0
  3136 ;;      Temps:          1       0       0       0       0
  3137 ;;      Totals:         6       0       0       0       0
  3138 ;;Total ram usage:        6 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_show_multidigits
  3144 ;;		_LCD_num
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           
  3149                           ;psect for function ___lwmod
  3150  0C00                     ___lwmod:
  3151  0C00                     l1945:	
  3152                           ;incstack = 0
  3153                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3154                           
  3155  0C00  0870               	movf	___lwmod@divisor,w
  3156  0C01  0471               	iorwf	___lwmod@divisor+1,w
  3157  0C02  1903               	btfsc	3,2
  3158  0C03  2C05               	goto	u2141
  3159  0C04  2C06               	goto	u2140
  3160  0C05                     u2141:
  3161  0C05  2C35               	goto	l1963
  3162  0C06                     u2140:
  3163  0C06                     l1947:
  3164  0C06  01F5               	clrf	___lwmod@counter
  3165  0C07  0AF5               	incf	___lwmod@counter,f
  3166  0C08  2C14               	goto	l1953
  3167  0C09                     l1949:
  3168  0C09  3001               	movlw	1
  3169  0C0A                     u2155:
  3170  0C0A  1003               	clrc
  3171  0C0B  0DF0               	rlf	___lwmod@divisor,f
  3172  0C0C  0DF1               	rlf	___lwmod@divisor+1,f
  3173  0C0D  3EFF               	addlw	-1
  3174  0C0E  1D03               	skipz
  3175  0C0F  2C0A               	goto	u2155
  3176  0C10                     l1951:
  3177  0C10  3001               	movlw	1
  3178  0C11  00F4               	movwf	??___lwmod
  3179  0C12  0874               	movf	??___lwmod,w
  3180  0C13  07F5               	addwf	___lwmod@counter,f
  3181  0C14                     l1953:
  3182  0C14  1FF1               	btfss	___lwmod@divisor+1,7
  3183  0C15  2C17               	goto	u2161
  3184  0C16  2C18               	goto	u2160
  3185  0C17                     u2161:
  3186  0C17  2C09               	goto	l1949
  3187  0C18                     u2160:
  3188  0C18                     l1955:
  3189  0C18  0871               	movf	___lwmod@divisor+1,w
  3190  0C19  0273               	subwf	___lwmod@dividend+1,w
  3191  0C1A  1D03               	skipz
  3192  0C1B  2C1E               	goto	u2175
  3193  0C1C  0870               	movf	___lwmod@divisor,w
  3194  0C1D  0272               	subwf	___lwmod@dividend,w
  3195  0C1E                     u2175:
  3196  0C1E  1C03               	skipc
  3197  0C1F  2C21               	goto	u2171
  3198  0C20  2C22               	goto	u2170
  3199  0C21                     u2171:
  3200  0C21  2C28               	goto	l1959
  3201  0C22                     u2170:
  3202  0C22                     l1957:
  3203  0C22  0870               	movf	___lwmod@divisor,w
  3204  0C23  02F2               	subwf	___lwmod@dividend,f
  3205  0C24  0871               	movf	___lwmod@divisor+1,w
  3206  0C25  1C03               	skipc
  3207  0C26  03F3               	decf	___lwmod@dividend+1,f
  3208  0C27  02F3               	subwf	___lwmod@dividend+1,f
  3209  0C28                     l1959:
  3210  0C28  3001               	movlw	1
  3211  0C29                     u2185:
  3212  0C29  1003               	clrc
  3213  0C2A  0CF1               	rrf	___lwmod@divisor+1,f
  3214  0C2B  0CF0               	rrf	___lwmod@divisor,f
  3215  0C2C  3EFF               	addlw	-1
  3216  0C2D  1D03               	skipz
  3217  0C2E  2C29               	goto	u2185
  3218  0C2F                     l1961:
  3219  0C2F  3001               	movlw	1
  3220  0C30  02F5               	subwf	___lwmod@counter,f
  3221  0C31  1D03               	btfss	3,2
  3222  0C32  2C34               	goto	u2191
  3223  0C33  2C35               	goto	u2190
  3224  0C34                     u2191:
  3225  0C34  2C18               	goto	l1955
  3226  0C35                     u2190:
  3227  0C35                     l1963:
  3228  0C35  0873               	movf	___lwmod@dividend+1,w
  3229  0C36  00F1               	movwf	?___lwmod+1
  3230  0C37  0872               	movf	___lwmod@dividend,w
  3231  0C38  00F0               	movwf	?___lwmod
  3232  0C39                     l564:
  3233  0C39  0008               	return
  3234  0C3A                     __end_of___lwmod:
  3235                           
  3236                           	psect	text6
  3237  0CBA                     __ptext6:	
  3238 ;; *************** function ___lwdiv *****************
  3239 ;; Defined at:
  3240 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  divisor         2    0[COMMON] unsigned int 
  3243 ;;  dividend        2    2[COMMON] unsigned int 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  quotient        2    5[COMMON] unsigned int 
  3246 ;;  counter         1    7[COMMON] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  2    0[COMMON] unsigned int 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         4       0       0       0       0
  3257 ;;      Locals:         3       0       0       0       0
  3258 ;;      Temps:          1       0       0       0       0
  3259 ;;      Totals:         8       0       0       0       0
  3260 ;;Total ram usage:        8 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_show_multidigits
  3266 ;;		_LCD_num
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function ___lwdiv
  3272  0CBA                     ___lwdiv:
  3273  0CBA                     l1919:	
  3274                           ;incstack = 0
  3275                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3276                           
  3277  0CBA  01F5               	clrf	___lwdiv@quotient
  3278  0CBB  01F6               	clrf	___lwdiv@quotient+1
  3279  0CBC                     l1921:
  3280  0CBC  0870               	movf	___lwdiv@divisor,w
  3281  0CBD  0471               	iorwf	___lwdiv@divisor+1,w
  3282  0CBE  1903               	btfsc	3,2
  3283  0CBF  2CC1               	goto	u2071
  3284  0CC0  2CC2               	goto	u2070
  3285  0CC1                     u2071:
  3286  0CC1  2CF9               	goto	l1941
  3287  0CC2                     u2070:
  3288  0CC2                     l1923:
  3289  0CC2  01F7               	clrf	___lwdiv@counter
  3290  0CC3  0AF7               	incf	___lwdiv@counter,f
  3291  0CC4  2CD0               	goto	l1929
  3292  0CC5                     l1925:
  3293  0CC5  3001               	movlw	1
  3294  0CC6                     u2085:
  3295  0CC6  1003               	clrc
  3296  0CC7  0DF0               	rlf	___lwdiv@divisor,f
  3297  0CC8  0DF1               	rlf	___lwdiv@divisor+1,f
  3298  0CC9  3EFF               	addlw	-1
  3299  0CCA  1D03               	skipz
  3300  0CCB  2CC6               	goto	u2085
  3301  0CCC                     l1927:
  3302  0CCC  3001               	movlw	1
  3303  0CCD  00F4               	movwf	??___lwdiv
  3304  0CCE  0874               	movf	??___lwdiv,w
  3305  0CCF  07F7               	addwf	___lwdiv@counter,f
  3306  0CD0                     l1929:
  3307  0CD0  1FF1               	btfss	___lwdiv@divisor+1,7
  3308  0CD1  2CD3               	goto	u2091
  3309  0CD2  2CD4               	goto	u2090
  3310  0CD3                     u2091:
  3311  0CD3  2CC5               	goto	l1925
  3312  0CD4                     u2090:
  3313  0CD4                     l1931:
  3314  0CD4  3001               	movlw	1
  3315  0CD5                     u2105:
  3316  0CD5  1003               	clrc
  3317  0CD6  0DF5               	rlf	___lwdiv@quotient,f
  3318  0CD7  0DF6               	rlf	___lwdiv@quotient+1,f
  3319  0CD8  3EFF               	addlw	-1
  3320  0CD9  1D03               	skipz
  3321  0CDA  2CD5               	goto	u2105
  3322  0CDB  0871               	movf	___lwdiv@divisor+1,w
  3323  0CDC  0273               	subwf	___lwdiv@dividend+1,w
  3324  0CDD  1D03               	skipz
  3325  0CDE  2CE1               	goto	u2115
  3326  0CDF  0870               	movf	___lwdiv@divisor,w
  3327  0CE0  0272               	subwf	___lwdiv@dividend,w
  3328  0CE1                     u2115:
  3329  0CE1  1C03               	skipc
  3330  0CE2  2CE4               	goto	u2111
  3331  0CE3  2CE5               	goto	u2110
  3332  0CE4                     u2111:
  3333  0CE4  2CEC               	goto	l1937
  3334  0CE5                     u2110:
  3335  0CE5                     l1933:
  3336  0CE5  0870               	movf	___lwdiv@divisor,w
  3337  0CE6  02F2               	subwf	___lwdiv@dividend,f
  3338  0CE7  0871               	movf	___lwdiv@divisor+1,w
  3339  0CE8  1C03               	skipc
  3340  0CE9  03F3               	decf	___lwdiv@dividend+1,f
  3341  0CEA  02F3               	subwf	___lwdiv@dividend+1,f
  3342  0CEB                     l1935:
  3343  0CEB  1475               	bsf	___lwdiv@quotient,0
  3344  0CEC                     l1937:
  3345  0CEC  3001               	movlw	1
  3346  0CED                     u2125:
  3347  0CED  1003               	clrc
  3348  0CEE  0CF1               	rrf	___lwdiv@divisor+1,f
  3349  0CEF  0CF0               	rrf	___lwdiv@divisor,f
  3350  0CF0  3EFF               	addlw	-1
  3351  0CF1  1D03               	skipz
  3352  0CF2  2CED               	goto	u2125
  3353  0CF3                     l1939:
  3354  0CF3  3001               	movlw	1
  3355  0CF4  02F7               	subwf	___lwdiv@counter,f
  3356  0CF5  1D03               	btfss	3,2
  3357  0CF6  2CF8               	goto	u2131
  3358  0CF7  2CF9               	goto	u2130
  3359  0CF8                     u2131:
  3360  0CF8  2CD4               	goto	l1931
  3361  0CF9                     u2130:
  3362  0CF9                     l1941:
  3363  0CF9  0876               	movf	___lwdiv@quotient+1,w
  3364  0CFA  00F1               	movwf	?___lwdiv+1
  3365  0CFB  0875               	movf	___lwdiv@quotient,w
  3366  0CFC  00F0               	movwf	?___lwdiv
  3367  0CFD                     l554:
  3368  0CFD  0008               	return
  3369  0CFE                     __end_of___lwdiv:
  3370                           
  3371                           	psect	text7
  3372  0D44                     __ptext7:	
  3373 ;; *************** function ___awmod *****************
  3374 ;; Defined at:
  3375 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  divisor         2    0[COMMON] int 
  3378 ;;  dividend        2    2[COMMON] int 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  sign            1    6[COMMON] unsigned char 
  3381 ;;  counter         1    5[COMMON] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2    0[COMMON] int 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3391 ;;      Params:         4       0       0       0       0
  3392 ;;      Locals:         2       0       0       0       0
  3393 ;;      Temps:          1       0       0       0       0
  3394 ;;      Totals:         7       0       0       0       0
  3395 ;;Total ram usage:        7 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_show_multidigits
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function ___awmod
  3406  0D44                     ___awmod:
  3407  0D44                     l1861:	
  3408                           ;incstack = 0
  3409                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3410                           
  3411  0D44  01F6               	clrf	___awmod@sign
  3412  0D45                     l1863:
  3413  0D45  1FF3               	btfss	___awmod@dividend+1,7
  3414  0D46  2D48               	goto	u1911
  3415  0D47  2D49               	goto	u1910
  3416  0D48                     u1911:
  3417  0D48  2D50               	goto	l1869
  3418  0D49                     u1910:
  3419  0D49                     l1865:
  3420  0D49  09F2               	comf	___awmod@dividend,f
  3421  0D4A  09F3               	comf	___awmod@dividend+1,f
  3422  0D4B  0AF2               	incf	___awmod@dividend,f
  3423  0D4C  1903               	skipnz
  3424  0D4D  0AF3               	incf	___awmod@dividend+1,f
  3425  0D4E                     l1867:
  3426  0D4E  01F6               	clrf	___awmod@sign
  3427  0D4F  0AF6               	incf	___awmod@sign,f
  3428  0D50                     l1869:
  3429  0D50  1FF1               	btfss	___awmod@divisor+1,7
  3430  0D51  2D53               	goto	u1921
  3431  0D52  2D54               	goto	u1920
  3432  0D53                     u1921:
  3433  0D53  2D59               	goto	l1873
  3434  0D54                     u1920:
  3435  0D54                     l1871:
  3436  0D54  09F0               	comf	___awmod@divisor,f
  3437  0D55  09F1               	comf	___awmod@divisor+1,f
  3438  0D56  0AF0               	incf	___awmod@divisor,f
  3439  0D57  1903               	skipnz
  3440  0D58  0AF1               	incf	___awmod@divisor+1,f
  3441  0D59                     l1873:
  3442  0D59  0870               	movf	___awmod@divisor,w
  3443  0D5A  0471               	iorwf	___awmod@divisor+1,w
  3444  0D5B  1903               	btfsc	3,2
  3445  0D5C  2D5E               	goto	u1931
  3446  0D5D  2D5F               	goto	u1930
  3447  0D5E                     u1931:
  3448  0D5E  2D8E               	goto	l1891
  3449  0D5F                     u1930:
  3450  0D5F                     l1875:
  3451  0D5F  01F5               	clrf	___awmod@counter
  3452  0D60  0AF5               	incf	___awmod@counter,f
  3453  0D61  2D6D               	goto	l1881
  3454  0D62                     l1877:
  3455  0D62  3001               	movlw	1
  3456  0D63                     u1945:
  3457  0D63  1003               	clrc
  3458  0D64  0DF0               	rlf	___awmod@divisor,f
  3459  0D65  0DF1               	rlf	___awmod@divisor+1,f
  3460  0D66  3EFF               	addlw	-1
  3461  0D67  1D03               	skipz
  3462  0D68  2D63               	goto	u1945
  3463  0D69                     l1879:
  3464  0D69  3001               	movlw	1
  3465  0D6A  00F4               	movwf	??___awmod
  3466  0D6B  0874               	movf	??___awmod,w
  3467  0D6C  07F5               	addwf	___awmod@counter,f
  3468  0D6D                     l1881:
  3469  0D6D  1FF1               	btfss	___awmod@divisor+1,7
  3470  0D6E  2D70               	goto	u1951
  3471  0D6F  2D71               	goto	u1950
  3472  0D70                     u1951:
  3473  0D70  2D62               	goto	l1877
  3474  0D71                     u1950:
  3475  0D71                     l1883:
  3476  0D71  0871               	movf	___awmod@divisor+1,w
  3477  0D72  0273               	subwf	___awmod@dividend+1,w
  3478  0D73  1D03               	skipz
  3479  0D74  2D77               	goto	u1965
  3480  0D75  0870               	movf	___awmod@divisor,w
  3481  0D76  0272               	subwf	___awmod@dividend,w
  3482  0D77                     u1965:
  3483  0D77  1C03               	skipc
  3484  0D78  2D7A               	goto	u1961
  3485  0D79  2D7B               	goto	u1960
  3486  0D7A                     u1961:
  3487  0D7A  2D81               	goto	l1887
  3488  0D7B                     u1960:
  3489  0D7B                     l1885:
  3490  0D7B  0870               	movf	___awmod@divisor,w
  3491  0D7C  02F2               	subwf	___awmod@dividend,f
  3492  0D7D  0871               	movf	___awmod@divisor+1,w
  3493  0D7E  1C03               	skipc
  3494  0D7F  03F3               	decf	___awmod@dividend+1,f
  3495  0D80  02F3               	subwf	___awmod@dividend+1,f
  3496  0D81                     l1887:
  3497  0D81  3001               	movlw	1
  3498  0D82                     u1975:
  3499  0D82  1003               	clrc
  3500  0D83  0CF1               	rrf	___awmod@divisor+1,f
  3501  0D84  0CF0               	rrf	___awmod@divisor,f
  3502  0D85  3EFF               	addlw	-1
  3503  0D86  1D03               	skipz
  3504  0D87  2D82               	goto	u1975
  3505  0D88                     l1889:
  3506  0D88  3001               	movlw	1
  3507  0D89  02F5               	subwf	___awmod@counter,f
  3508  0D8A  1D03               	btfss	3,2
  3509  0D8B  2D8D               	goto	u1981
  3510  0D8C  2D8E               	goto	u1980
  3511  0D8D                     u1981:
  3512  0D8D  2D71               	goto	l1883
  3513  0D8E                     u1980:
  3514  0D8E                     l1891:
  3515  0D8E  0876               	movf	___awmod@sign,w
  3516  0D8F  1903               	btfsc	3,2
  3517  0D90  2D92               	goto	u1991
  3518  0D91  2D93               	goto	u1990
  3519  0D92                     u1991:
  3520  0D92  2D98               	goto	l1895
  3521  0D93                     u1990:
  3522  0D93                     l1893:
  3523  0D93  09F2               	comf	___awmod@dividend,f
  3524  0D94  09F3               	comf	___awmod@dividend+1,f
  3525  0D95  0AF2               	incf	___awmod@dividend,f
  3526  0D96  1903               	skipnz
  3527  0D97  0AF3               	incf	___awmod@dividend+1,f
  3528  0D98                     l1895:
  3529  0D98  0873               	movf	___awmod@dividend+1,w
  3530  0D99  00F1               	movwf	?___awmod+1
  3531  0D9A  0872               	movf	___awmod@dividend,w
  3532  0D9B  00F0               	movwf	?___awmod
  3533  0D9C                     l448:
  3534  0D9C  0008               	return
  3535  0D9D                     __end_of___awmod:
  3536                           
  3537                           	psect	text8
  3538  0E03                     __ptext8:	
  3539 ;; *************** function ___awdiv *****************
  3540 ;; Defined at:
  3541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  divisor         2    0[COMMON] int 
  3544 ;;  dividend        2    2[COMMON] int 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  quotient        2    7[COMMON] int 
  3547 ;;  sign            1    6[COMMON] unsigned char 
  3548 ;;  counter         1    5[COMMON] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  2    0[COMMON] int 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         4       0       0       0       0
  3559 ;;      Locals:         4       0       0       0       0
  3560 ;;      Temps:          1       0       0       0       0
  3561 ;;      Totals:         9       0       0       0       0
  3562 ;;Total ram usage:        9 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_show_multidigits
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function ___awdiv
  3573  0E03                     ___awdiv:
  3574  0E03                     l1817:	
  3575                           ;incstack = 0
  3576                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3577                           
  3578  0E03  01F6               	clrf	___awdiv@sign
  3579  0E04                     l1819:
  3580  0E04  1FF1               	btfss	___awdiv@divisor+1,7
  3581  0E05  2E07               	goto	u1811
  3582  0E06  2E08               	goto	u1810
  3583  0E07                     u1811:
  3584  0E07  2E0F               	goto	l1825
  3585  0E08                     u1810:
  3586  0E08                     l1821:
  3587  0E08  09F0               	comf	___awdiv@divisor,f
  3588  0E09  09F1               	comf	___awdiv@divisor+1,f
  3589  0E0A  0AF0               	incf	___awdiv@divisor,f
  3590  0E0B  1903               	skipnz
  3591  0E0C  0AF1               	incf	___awdiv@divisor+1,f
  3592  0E0D                     l1823:
  3593  0E0D  01F6               	clrf	___awdiv@sign
  3594  0E0E  0AF6               	incf	___awdiv@sign,f
  3595  0E0F                     l1825:
  3596  0E0F  1FF3               	btfss	___awdiv@dividend+1,7
  3597  0E10  2E12               	goto	u1821
  3598  0E11  2E13               	goto	u1820
  3599  0E12                     u1821:
  3600  0E12  2E1C               	goto	l1831
  3601  0E13                     u1820:
  3602  0E13                     l1827:
  3603  0E13  09F2               	comf	___awdiv@dividend,f
  3604  0E14  09F3               	comf	___awdiv@dividend+1,f
  3605  0E15  0AF2               	incf	___awdiv@dividend,f
  3606  0E16  1903               	skipnz
  3607  0E17  0AF3               	incf	___awdiv@dividend+1,f
  3608  0E18                     l1829:
  3609  0E18  3001               	movlw	1
  3610  0E19  00F4               	movwf	??___awdiv
  3611  0E1A  0874               	movf	??___awdiv,w
  3612  0E1B  06F6               	xorwf	___awdiv@sign,f
  3613  0E1C                     l1831:
  3614  0E1C  01F7               	clrf	___awdiv@quotient
  3615  0E1D  01F8               	clrf	___awdiv@quotient+1
  3616  0E1E                     l1833:
  3617  0E1E  0870               	movf	___awdiv@divisor,w
  3618  0E1F  0471               	iorwf	___awdiv@divisor+1,w
  3619  0E20  1903               	btfsc	3,2
  3620  0E21  2E23               	goto	u1831
  3621  0E22  2E24               	goto	u1830
  3622  0E23                     u1831:
  3623  0E23  2E5B               	goto	l1853
  3624  0E24                     u1830:
  3625  0E24                     l1835:
  3626  0E24  01F5               	clrf	___awdiv@counter
  3627  0E25  0AF5               	incf	___awdiv@counter,f
  3628  0E26  2E32               	goto	l1841
  3629  0E27                     l1837:
  3630  0E27  3001               	movlw	1
  3631  0E28                     u1845:
  3632  0E28  1003               	clrc
  3633  0E29  0DF0               	rlf	___awdiv@divisor,f
  3634  0E2A  0DF1               	rlf	___awdiv@divisor+1,f
  3635  0E2B  3EFF               	addlw	-1
  3636  0E2C  1D03               	skipz
  3637  0E2D  2E28               	goto	u1845
  3638  0E2E                     l1839:
  3639  0E2E  3001               	movlw	1
  3640  0E2F  00F4               	movwf	??___awdiv
  3641  0E30  0874               	movf	??___awdiv,w
  3642  0E31  07F5               	addwf	___awdiv@counter,f
  3643  0E32                     l1841:
  3644  0E32  1FF1               	btfss	___awdiv@divisor+1,7
  3645  0E33  2E35               	goto	u1851
  3646  0E34  2E36               	goto	u1850
  3647  0E35                     u1851:
  3648  0E35  2E27               	goto	l1837
  3649  0E36                     u1850:
  3650  0E36                     l1843:
  3651  0E36  3001               	movlw	1
  3652  0E37                     u1865:
  3653  0E37  1003               	clrc
  3654  0E38  0DF7               	rlf	___awdiv@quotient,f
  3655  0E39  0DF8               	rlf	___awdiv@quotient+1,f
  3656  0E3A  3EFF               	addlw	-1
  3657  0E3B  1D03               	skipz
  3658  0E3C  2E37               	goto	u1865
  3659  0E3D  0871               	movf	___awdiv@divisor+1,w
  3660  0E3E  0273               	subwf	___awdiv@dividend+1,w
  3661  0E3F  1D03               	skipz
  3662  0E40  2E43               	goto	u1875
  3663  0E41  0870               	movf	___awdiv@divisor,w
  3664  0E42  0272               	subwf	___awdiv@dividend,w
  3665  0E43                     u1875:
  3666  0E43  1C03               	skipc
  3667  0E44  2E46               	goto	u1871
  3668  0E45  2E47               	goto	u1870
  3669  0E46                     u1871:
  3670  0E46  2E4E               	goto	l1849
  3671  0E47                     u1870:
  3672  0E47                     l1845:
  3673  0E47  0870               	movf	___awdiv@divisor,w
  3674  0E48  02F2               	subwf	___awdiv@dividend,f
  3675  0E49  0871               	movf	___awdiv@divisor+1,w
  3676  0E4A  1C03               	skipc
  3677  0E4B  03F3               	decf	___awdiv@dividend+1,f
  3678  0E4C  02F3               	subwf	___awdiv@dividend+1,f
  3679  0E4D                     l1847:
  3680  0E4D  1477               	bsf	___awdiv@quotient,0
  3681  0E4E                     l1849:
  3682  0E4E  3001               	movlw	1
  3683  0E4F                     u1885:
  3684  0E4F  1003               	clrc
  3685  0E50  0CF1               	rrf	___awdiv@divisor+1,f
  3686  0E51  0CF0               	rrf	___awdiv@divisor,f
  3687  0E52  3EFF               	addlw	-1
  3688  0E53  1D03               	skipz
  3689  0E54  2E4F               	goto	u1885
  3690  0E55                     l1851:
  3691  0E55  3001               	movlw	1
  3692  0E56  02F5               	subwf	___awdiv@counter,f
  3693  0E57  1D03               	btfss	3,2
  3694  0E58  2E5A               	goto	u1891
  3695  0E59  2E5B               	goto	u1890
  3696  0E5A                     u1891:
  3697  0E5A  2E36               	goto	l1843
  3698  0E5B                     u1890:
  3699  0E5B                     l1853:
  3700  0E5B  0876               	movf	___awdiv@sign,w
  3701  0E5C  1903               	btfsc	3,2
  3702  0E5D  2E5F               	goto	u1901
  3703  0E5E  2E60               	goto	u1900
  3704  0E5F                     u1901:
  3705  0E5F  2E65               	goto	l1857
  3706  0E60                     u1900:
  3707  0E60                     l1855:
  3708  0E60  09F7               	comf	___awdiv@quotient,f
  3709  0E61  09F8               	comf	___awdiv@quotient+1,f
  3710  0E62  0AF7               	incf	___awdiv@quotient,f
  3711  0E63  1903               	skipnz
  3712  0E64  0AF8               	incf	___awdiv@quotient+1,f
  3713  0E65                     l1857:
  3714  0E65  0878               	movf	___awdiv@quotient+1,w
  3715  0E66  00F1               	movwf	?___awdiv+1
  3716  0E67  0877               	movf	___awdiv@quotient,w
  3717  0E68  00F0               	movwf	?___awdiv
  3718  0E69                     l435:
  3719  0E69  0008               	return
  3720  0E6A                     __end_of___awdiv:
  3721                           
  3722                           	psect	text9
  3723  0B71                     __ptext9:	
  3724 ;; *************** function _show *****************
  3725 ;; Defined at:
  3726 ;;		line 79 in file "./lcd4bit.h"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  s               1    wreg     PTR unsigned char 
  3729 ;;		 -> STR_1(7), 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  s               1    4[COMMON] PTR unsigned char 
  3732 ;;		 -> STR_1(7), 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       0       0       0       0
  3743 ;;      Locals:         1       0       0       0       0
  3744 ;;      Temps:          1       0       0       0       0
  3745 ;;      Totals:         2       0       0       0       0
  3746 ;;Total ram usage:        2 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 1
  3749 ;; This function calls:
  3750 ;;		_LCD_Char
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _show
  3758  0B71                     _show:
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3762                           ;show@s stored from wreg
  3763  0B71  00F4               	movwf	show@s
  3764  0B72                     l2051:
  3765                           
  3766                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
  3767  0B72  2B83               	goto	l2057
  3768  0B73                     l2053:
  3769                           
  3770                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
  3771  0B73  0874               	movf	show@s,w
  3772  0B74  0084               	movwf	4
  3773  0B75  120A  158A  2000  120A  158A  	fcall	stringdir
  3774  0B7A  120A  158A  247A  120A  158A  	fcall	_LCD_Char
  3775  0B7F                     l2055:
  3776  0B7F  3001               	movlw	1
  3777  0B80  00F3               	movwf	??_show
  3778  0B81  0873               	movf	??_show,w
  3779  0B82  07F4               	addwf	show@s,f
  3780  0B83                     l2057:
  3781                           
  3782                           ;./lcd4bit.h: 81:     while(*s) {
  3783  0B83  0874               	movf	show@s,w
  3784  0B84  0084               	movwf	4
  3785  0B85  120A  158A  2000  120A  158A  	fcall	stringdir
  3786  0B8A  3A00               	xorlw	0
  3787  0B8B  1D03               	skipz
  3788  0B8C  2B8E               	goto	u2401
  3789  0B8D  2B8F               	goto	u2400
  3790  0B8E                     u2401:
  3791  0B8E  2B73               	goto	l2053
  3792  0B8F                     u2400:
  3793  0B8F                     l112:
  3794  0B8F  0008               	return
  3795  0B90                     __end_of_show:
  3796                           
  3797                           	psect	text10
  3798  0C7A                     __ptext10:	
  3799 ;; *************** function _LCD_Char *****************
  3800 ;; Defined at:
  3801 ;;		line 27 in file "./lcd4bit.h"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  data            1    wreg     unsigned char 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  data            1    2[COMMON] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3815 ;;      Params:         0       0       0       0       0
  3816 ;;      Locals:         1       0       0       0       0
  3817 ;;      Temps:          2       0       0       0       0
  3818 ;;      Totals:         3       0       0       0       0
  3819 ;;Total ram usage:        3 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_show
  3825 ;;		_show_multidigits
  3826 ;;		_LCD_num
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           
  3831                           ;psect for function _LCD_Char
  3832  0C7A                     _LCD_Char:
  3833                           
  3834                           ;incstack = 0
  3835                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3836                           ;LCD_Char@data stored from wreg
  3837  0C7A  00F2               	movwf	LCD_Char@data
  3838  0C7B                     l1799:
  3839                           
  3840                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  3841  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3842  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3843  0C7D  1407               	bsf	7,0	;volatile
  3844  0C7E                     l1801:
  3845                           
  3846                           ;./lcd4bit.h: 30:     PORTB = data;
  3847  0C7E  0872               	movf	LCD_Char@data,w
  3848  0C7F  0086               	movwf	6	;volatile
  3849  0C80                     l1803:
  3850                           
  3851                           ;./lcd4bit.h: 31:     RC1 = 1;
  3852  0C80  1487               	bsf	7,1	;volatile
  3853                           
  3854                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3855  0C81  3041               	movlw	65
  3856  0C82  00F1               	movwf	??_LCD_Char+1
  3857  0C83  30EE               	movlw	238
  3858  0C84  00F0               	movwf	??_LCD_Char
  3859  0C85                     u3727:
  3860  0C85  0BF0               	decfsz	??_LCD_Char,f
  3861  0C86  2C85               	goto	u3727
  3862  0C87  0BF1               	decfsz	??_LCD_Char+1,f
  3863  0C88  2C85               	goto	u3727
  3864  0C89  0000               	nop
  3865  0C8A                     l1805:
  3866                           
  3867                           ;./lcd4bit.h: 33:     RC1 = 0;
  3868  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  3870  0C8C  1087               	bcf	7,1	;volatile
  3871                           
  3872                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3873  0C8D  3041               	movlw	65
  3874  0C8E  00F1               	movwf	??_LCD_Char+1
  3875  0C8F  30EE               	movlw	238
  3876  0C90  00F0               	movwf	??_LCD_Char
  3877  0C91                     u3737:
  3878  0C91  0BF0               	decfsz	??_LCD_Char,f
  3879  0C92  2C91               	goto	u3737
  3880  0C93  0BF1               	decfsz	??_LCD_Char+1,f
  3881  0C94  2C91               	goto	u3737
  3882  0C95  0000               	nop
  3883  0C96                     l1807:
  3884                           
  3885                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  3886  0C96  0872               	movf	LCD_Char@data,w
  3887  0C97  00F0               	movwf	??_LCD_Char
  3888  0C98  3003               	movlw	3
  3889  0C99                     u1805:
  3890  0C99  1003               	clrc
  3891  0C9A  0DF0               	rlf	??_LCD_Char,f
  3892  0C9B  3EFF               	addlw	-1
  3893  0C9C  1D03               	skipz
  3894  0C9D  2C99               	goto	u1805
  3895  0C9E  1003               	clrc
  3896  0C9F  0D70               	rlf	??_LCD_Char,w
  3897  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0CA2  0086               	movwf	6	;volatile
  3900  0CA3                     l1809:
  3901                           
  3902                           ;./lcd4bit.h: 36:     RC1 = 1;
  3903  0CA3  1487               	bsf	7,1	;volatile
  3904  0CA4                     l1811:
  3905                           
  3906                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3907  0CA4  3041               	movlw	65
  3908  0CA5  00F1               	movwf	??_LCD_Char+1
  3909  0CA6  30EE               	movlw	238
  3910  0CA7  00F0               	movwf	??_LCD_Char
  3911  0CA8                     u3747:
  3912  0CA8  0BF0               	decfsz	??_LCD_Char,f
  3913  0CA9  2CA8               	goto	u3747
  3914  0CAA  0BF1               	decfsz	??_LCD_Char+1,f
  3915  0CAB  2CA8               	goto	u3747
  3916  0CAC  0000               	nop
  3917  0CAD                     l1813:
  3918                           
  3919                           ;./lcd4bit.h: 38:     RC1 = 0;
  3920  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  3921  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  3922  0CAF  1087               	bcf	7,1	;volatile
  3923  0CB0                     l1815:
  3924                           
  3925                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3926  0CB0  3041               	movlw	65
  3927  0CB1  00F1               	movwf	??_LCD_Char+1
  3928  0CB2  30EE               	movlw	238
  3929  0CB3  00F0               	movwf	??_LCD_Char
  3930  0CB4                     u3757:
  3931  0CB4  0BF0               	decfsz	??_LCD_Char,f
  3932  0CB5  2CB4               	goto	u3757
  3933  0CB6  0BF1               	decfsz	??_LCD_Char+1,f
  3934  0CB7  2CB4               	goto	u3757
  3935  0CB8  0000               	nop
  3936  0CB9                     l100:
  3937  0CB9  0008               	return
  3938  0CBA                     __end_of_LCD_Char:
  3939                           
  3940                           	psect	text11
  3941  0B3D                     __ptext11:	
  3942 ;; *************** function _bmp280_init *****************
  3943 ;; Defined at:
  3944 ;;		line 15 in file "./p03a_bmp280.h"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0
  3961 ;;      Totals:         0       0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used: 1
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_main
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           
  3972                           ;psect for function _bmp280_init
  3973  0B3D                     _bmp280_init:
  3974  0B3D                     l2041:	
  3975                           ;incstack = 0
  3976                           ; Regs used in _bmp280_init: [wreg]
  3977                           
  3978                           
  3979                           ;./p03a_bmp280.h: 17:     TRISC3=TRISC4=1;
  3980  0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  3981  0B3E  1303               	bcf	3,6	;RP1=0, select bank1
  3982  0B3F  1607               	bsf	7,4	;volatile
  3983  0B40  1A07               	btfsc	7,4	;volatile
  3984  0B41  2B43               	goto	u2381
  3985  0B42  2B47               	goto	u2380
  3986  0B43                     u2381:
  3987  0B43  1683               	bsf	3,5	;RP0=1, select bank1
  3988  0B44  1303               	bcf	3,6	;RP1=0, select bank1
  3989  0B45  1587               	bsf	7,3	;volatile
  3990  0B46  2B4A               	goto	u2394
  3991  0B47                     u2380:
  3992  0B47  1683               	bsf	3,5	;RP0=1, select bank1
  3993  0B48  1303               	bcf	3,6	;RP1=0, select bank1
  3994  0B49  1187               	bcf	7,3	;volatile
  3995  0B4A                     u2394:
  3996  0B4A                     l2043:
  3997                           
  3998                           ;./p03a_bmp280.h: 18:     SSPCON=0x28;
  3999  0B4A  3028               	movlw	40
  4000  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0B4D  0094               	movwf	20	;volatile
  4003                           
  4004                           ;./p03a_bmp280.h: 19:     SSPADD=((11059200/4)/100)-1;
  4005  0B4E  30FF               	movlw	255
  4006  0B4F  1683               	bsf	3,5	;RP0=1, select bank1
  4007  0B50  1303               	bcf	3,6	;RP1=0, select bank1
  4008  0B51  0093               	movwf	19	;volatile
  4009  0B52                     l51:
  4010  0B52  0008               	return
  4011  0B53                     __end_of_bmp280_init:
  4012                           
  4013                           	psect	text12
  4014  0E6A                     __ptext12:	
  4015 ;; *************** function _bmp280_getdata *****************
  4016 ;; Defined at:
  4017 ;;		line 79 in file "main_bmp280.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;		None
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       0       0       0       0
  4032 ;;      Locals:         0       0       0       0       0
  4033 ;;      Temps:          4       0       0       0       0
  4034 ;;      Totals:         4       0       0       0       0
  4035 ;;Total ram usage:        4 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; Hardware stack levels required when called: 3
  4038 ;; This function calls:
  4039 ;;		_bmp280_read_byte
  4040 ;; This function is called by:
  4041 ;;		_main
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _bmp280_getdata
  4047  0E6A                     _bmp280_getdata:
  4048  0E6A                     l2119:	
  4049                           ;incstack = 0
  4050                           ; Regs used in _bmp280_getdata: [wreg+status,2+status,0+pclath+cstack]
  4051                           
  4052                           
  4053                           ;main_bmp280.c: 81:         aa=(bmp280_read_byte(0xAA));
  4054  0E6A  30AA               	movlw	170
  4055  0E6B  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4056  0E70  00F4               	movwf	??_bmp280_getdata
  4057  0E71  01F5               	clrf	??_bmp280_getdata+1
  4058  0E72  01F6               	clrf	??_bmp280_getdata+2
  4059  0E73  01F7               	clrf	??_bmp280_getdata+3
  4060  0E74  0877               	movf	??_bmp280_getdata+3,w
  4061  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  4062  0E76  1303               	bcf	3,6	;RP1=0, select bank1
  4063  0E77  00D7               	movwf	(_aa+3)^(0+128)
  4064  0E78  0876               	movf	??_bmp280_getdata+2,w
  4065  0E79  00D6               	movwf	(_aa+2)^(0+128)
  4066  0E7A  0875               	movf	??_bmp280_getdata+1,w
  4067  0E7B  00D5               	movwf	(_aa+1)^(0+128)
  4068  0E7C  0874               	movf	??_bmp280_getdata,w
  4069  0E7D  00D4               	movwf	_aa^(0+128)
  4070                           
  4071                           ;main_bmp280.c: 82:         ab=(bmp280_read_byte(0xAB));
  4072  0E7E  30AB               	movlw	171
  4073  0E7F  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4074  0E84  00F4               	movwf	??_bmp280_getdata
  4075  0E85  01F5               	clrf	??_bmp280_getdata+1
  4076  0E86  01F6               	clrf	??_bmp280_getdata+2
  4077  0E87  01F7               	clrf	??_bmp280_getdata+3
  4078  0E88  0877               	movf	??_bmp280_getdata+3,w
  4079  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  4080  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  4081  0E8B  00D3               	movwf	(_ab+3)^(0+128)
  4082  0E8C  0876               	movf	??_bmp280_getdata+2,w
  4083  0E8D  00D2               	movwf	(_ab+2)^(0+128)
  4084  0E8E  0875               	movf	??_bmp280_getdata+1,w
  4085  0E8F  00D1               	movwf	(_ab+1)^(0+128)
  4086  0E90  0874               	movf	??_bmp280_getdata,w
  4087  0E91  00D0               	movwf	_ab^(0+128)
  4088                           
  4089                           ;main_bmp280.c: 83:         ac=(bmp280_read_byte(0xAC));
  4090  0E92  30AC               	movlw	172
  4091  0E93  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4092  0E98  00F4               	movwf	??_bmp280_getdata
  4093  0E99  01F5               	clrf	??_bmp280_getdata+1
  4094  0E9A  01F6               	clrf	??_bmp280_getdata+2
  4095  0E9B  01F7               	clrf	??_bmp280_getdata+3
  4096  0E9C  0877               	movf	??_bmp280_getdata+3,w
  4097  0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  4098  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  4099  0E9F  00CF               	movwf	(_ac+3)^(0+128)
  4100  0EA0  0876               	movf	??_bmp280_getdata+2,w
  4101  0EA1  00CE               	movwf	(_ac+2)^(0+128)
  4102  0EA2  0875               	movf	??_bmp280_getdata+1,w
  4103  0EA3  00CD               	movwf	(_ac+1)^(0+128)
  4104  0EA4  0874               	movf	??_bmp280_getdata,w
  4105  0EA5  00CC               	movwf	_ac^(0+128)
  4106                           
  4107                           ;main_bmp280.c: 84:         ad=(bmp280_read_byte(0xAD));
  4108  0EA6  30AD               	movlw	173
  4109  0EA7  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4110  0EAC  00F4               	movwf	??_bmp280_getdata
  4111  0EAD  01F5               	clrf	??_bmp280_getdata+1
  4112  0EAE  01F6               	clrf	??_bmp280_getdata+2
  4113  0EAF  01F7               	clrf	??_bmp280_getdata+3
  4114  0EB0  0877               	movf	??_bmp280_getdata+3,w
  4115  0EB1  1683               	bsf	3,5	;RP0=1, select bank1
  4116  0EB2  1303               	bcf	3,6	;RP1=0, select bank1
  4117  0EB3  00CB               	movwf	(_ad+3)^(0+128)
  4118  0EB4  0876               	movf	??_bmp280_getdata+2,w
  4119  0EB5  00CA               	movwf	(_ad+2)^(0+128)
  4120  0EB6  0875               	movf	??_bmp280_getdata+1,w
  4121  0EB7  00C9               	movwf	(_ad+1)^(0+128)
  4122  0EB8  0874               	movf	??_bmp280_getdata,w
  4123  0EB9  00C8               	movwf	_ad^(0+128)
  4124                           
  4125                           ;main_bmp280.c: 85:         ae=(bmp280_read_byte(0xAE));
  4126  0EBA  30AE               	movlw	174
  4127  0EBB  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4128  0EC0  00F4               	movwf	??_bmp280_getdata
  4129  0EC1  01F5               	clrf	??_bmp280_getdata+1
  4130  0EC2  01F6               	clrf	??_bmp280_getdata+2
  4131  0EC3  01F7               	clrf	??_bmp280_getdata+3
  4132  0EC4  0877               	movf	??_bmp280_getdata+3,w
  4133  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  4134  0EC6  1303               	bcf	3,6	;RP1=0, select bank1
  4135  0EC7  00C7               	movwf	(_ae+3)^(0+128)
  4136  0EC8  0876               	movf	??_bmp280_getdata+2,w
  4137  0EC9  00C6               	movwf	(_ae+2)^(0+128)
  4138  0ECA  0875               	movf	??_bmp280_getdata+1,w
  4139  0ECB  00C5               	movwf	(_ae+1)^(0+128)
  4140  0ECC  0874               	movf	??_bmp280_getdata,w
  4141  0ECD  00C4               	movwf	_ae^(0+128)
  4142                           
  4143                           ;main_bmp280.c: 86:         af=(bmp280_read_byte(0xAF));
  4144  0ECE  30AF               	movlw	175
  4145  0ECF  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4146  0ED4  00F4               	movwf	??_bmp280_getdata
  4147  0ED5  01F5               	clrf	??_bmp280_getdata+1
  4148  0ED6  01F6               	clrf	??_bmp280_getdata+2
  4149  0ED7  01F7               	clrf	??_bmp280_getdata+3
  4150  0ED8  0877               	movf	??_bmp280_getdata+3,w
  4151  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  4152  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  4153  0EDB  00C3               	movwf	(_af+3)^(0+128)
  4154  0EDC  0876               	movf	??_bmp280_getdata+2,w
  4155  0EDD  00C2               	movwf	(_af+2)^(0+128)
  4156  0EDE  0875               	movf	??_bmp280_getdata+1,w
  4157  0EDF  00C1               	movwf	(_af+1)^(0+128)
  4158  0EE0  0874               	movf	??_bmp280_getdata,w
  4159  0EE1  00C0               	movwf	_af^(0+128)
  4160                           
  4161                           ;main_bmp280.c: 88:         b0=(bmp280_read_byte(0xB0));
  4162  0EE2  30B0               	movlw	176
  4163  0EE3  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4164  0EE8  00F4               	movwf	??_bmp280_getdata
  4165  0EE9  01F5               	clrf	??_bmp280_getdata+1
  4166  0EEA  01F6               	clrf	??_bmp280_getdata+2
  4167  0EEB  01F7               	clrf	??_bmp280_getdata+3
  4168  0EEC  0877               	movf	??_bmp280_getdata+3,w
  4169  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  4170  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  4171  0EEF  00BF               	movwf	(_b0+3)^(0+128)
  4172  0EF0  0876               	movf	??_bmp280_getdata+2,w
  4173  0EF1  00BE               	movwf	(_b0+2)^(0+128)
  4174  0EF2  0875               	movf	??_bmp280_getdata+1,w
  4175  0EF3  00BD               	movwf	(_b0+1)^(0+128)
  4176  0EF4  0874               	movf	??_bmp280_getdata,w
  4177  0EF5  00BC               	movwf	_b0^(0+128)
  4178                           
  4179                           ;main_bmp280.c: 89:         b1=(bmp280_read_byte(0xB1));
  4180  0EF6  30B1               	movlw	177
  4181  0EF7  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4182  0EFC  00F4               	movwf	??_bmp280_getdata
  4183  0EFD  01F5               	clrf	??_bmp280_getdata+1
  4184  0EFE  01F6               	clrf	??_bmp280_getdata+2
  4185  0EFF  01F7               	clrf	??_bmp280_getdata+3
  4186  0F00  0877               	movf	??_bmp280_getdata+3,w
  4187  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  4188  0F02  1303               	bcf	3,6	;RP1=0, select bank1
  4189  0F03  00BB               	movwf	(_b1+3)^(0+128)
  4190  0F04  0876               	movf	??_bmp280_getdata+2,w
  4191  0F05  00BA               	movwf	(_b1+2)^(0+128)
  4192  0F06  0875               	movf	??_bmp280_getdata+1,w
  4193  0F07  00B9               	movwf	(_b1+1)^(0+128)
  4194  0F08  0874               	movf	??_bmp280_getdata,w
  4195  0F09  00B8               	movwf	_b1^(0+128)
  4196                           
  4197                           ;main_bmp280.c: 90:         b2=(bmp280_read_byte(0xB2));
  4198  0F0A  30B2               	movlw	178
  4199  0F0B  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4200  0F10  00F4               	movwf	??_bmp280_getdata
  4201  0F11  01F5               	clrf	??_bmp280_getdata+1
  4202  0F12  01F6               	clrf	??_bmp280_getdata+2
  4203  0F13  01F7               	clrf	??_bmp280_getdata+3
  4204  0F14  0877               	movf	??_bmp280_getdata+3,w
  4205  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  4206  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  4207  0F17  00B7               	movwf	(_b2+3)^(0+128)
  4208  0F18  0876               	movf	??_bmp280_getdata+2,w
  4209  0F19  00B6               	movwf	(_b2+2)^(0+128)
  4210  0F1A  0875               	movf	??_bmp280_getdata+1,w
  4211  0F1B  00B5               	movwf	(_b2+1)^(0+128)
  4212  0F1C  0874               	movf	??_bmp280_getdata,w
  4213  0F1D  00B4               	movwf	_b2^(0+128)
  4214                           
  4215                           ;main_bmp280.c: 91:         b5=(bmp280_read_byte(0xB5));
  4216  0F1E  30B5               	movlw	181
  4217  0F1F  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4218  0F24  00F4               	movwf	??_bmp280_getdata
  4219  0F25  01F5               	clrf	??_bmp280_getdata+1
  4220  0F26  01F6               	clrf	??_bmp280_getdata+2
  4221  0F27  01F7               	clrf	??_bmp280_getdata+3
  4222  0F28  0877               	movf	??_bmp280_getdata+3,w
  4223  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  4224  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  4225  0F2B  00AF               	movwf	(_b5+3)^(0+128)
  4226  0F2C  0876               	movf	??_bmp280_getdata+2,w
  4227  0F2D  00AE               	movwf	(_b5+2)^(0+128)
  4228  0F2E  0875               	movf	??_bmp280_getdata+1,w
  4229  0F2F  00AD               	movwf	(_b5+1)^(0+128)
  4230  0F30  0874               	movf	??_bmp280_getdata,w
  4231  0F31  00AC               	movwf	_b5^(0+128)
  4232  0F32                     l190:
  4233  0F32  0008               	return
  4234  0F33                     __end_of_bmp280_getdata:
  4235                           
  4236                           	psect	text13
  4237  0BC6                     __ptext13:	
  4238 ;; *************** function _bmp280_read_byte *****************
  4239 ;; Defined at:
  4240 ;;		line 73 in file "./p03a_bmp280.h"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  addr            1    wreg     unsigned char 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  addr            1    2[COMMON] unsigned char 
  4245 ;;  rec             1    3[COMMON] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      unsigned char 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0, pclath, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4255 ;;      Params:         0       0       0       0       0
  4256 ;;      Locals:         2       0       0       0       0
  4257 ;;      Temps:          1       0       0       0       0
  4258 ;;      Totals:         3       0       0       0       0
  4259 ;;Total ram usage:        3 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 2
  4262 ;; This function calls:
  4263 ;;		_bmp280_nak
  4264 ;;		_bmp280_read
  4265 ;;		_bmp280_restart
  4266 ;;		_bmp280_send
  4267 ;;		_bmp280_stop
  4268 ;;		_bmp280_waitmssp
  4269 ;; This function is called by:
  4270 ;;		_bmp280_getdata
  4271 ;;		_uncompensated_pressure
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           
  4276                           ;psect for function _bmp280_read_byte
  4277  0BC6                     _bmp280_read_byte:
  4278                           
  4279                           ;incstack = 0
  4280                           ; Regs used in _bmp280_read_byte: [wreg+status,2+status,0+pclath+cstack]
  4281                           ;bmp280_read_byte@addr stored from wreg
  4282  0BC6  00F2               	movwf	bmp280_read_byte@addr
  4283  0BC7                     l88:	
  4284                           ;./p03a_bmp280.h: 73: unsigned char bmp280_read_byte(unsigned char addr);./p03a_bmp280.h
      +                          : 74: {;./p03a_bmp280.h: 75:     unsigned char rec;;./p03a_bmp280.h: 76: L: bmp280_resta
      +                          rt();
  4285                           
  4286  0BC7                     l1761:
  4287  0BC7  120A  158A  22FB  120A  158A  	fcall	_bmp280_restart
  4288  0BCC                     l1763:
  4289                           
  4290                           ;./p03a_bmp280.h: 77:     SSPBUF=0xEE;
  4291  0BCC  30EE               	movlw	238
  4292  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  4293  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  4294  0BCF  0093               	movwf	19	;volatile
  4295  0BD0                     l1765:
  4296                           
  4297                           ;./p03a_bmp280.h: 78:     bmp280_waitmssp();
  4298  0BD0  120A  158A  22EB  120A  158A  	fcall	_bmp280_waitmssp
  4299  0BD5                     l89:	
  4300                           ;./p03a_bmp280.h: 79:     while(ACKSTAT){goto L;}
  4301                           
  4302  0BD5  1683               	bsf	3,5	;RP0=1, select bank1
  4303  0BD6  1303               	bcf	3,6	;RP1=0, select bank1
  4304  0BD7  1B11               	btfsc	17,6	;volatile
  4305  0BD8  2BDA               	goto	u1781
  4306  0BD9  2BDB               	goto	u1780
  4307  0BDA                     u1781:
  4308  0BDA  2BC7               	goto	l88
  4309  0BDB                     u1780:
  4310  0BDB                     l1767:
  4311                           
  4312                           ;./p03a_bmp280.h: 80:     bmp280_send(addr);
  4313  0BDB  0872               	movf	bmp280_read_byte@addr,w
  4314  0BDC  120A  158A  232C  120A  158A  	fcall	_bmp280_send
  4315  0BE1                     l1769:
  4316                           
  4317                           ;./p03a_bmp280.h: 81:     bmp280_restart();
  4318  0BE1  120A  158A  22FB  120A  158A  	fcall	_bmp280_restart
  4319  0BE6                     l1771:
  4320                           
  4321                           ;./p03a_bmp280.h: 82:     bmp280_send(0xEF);
  4322  0BE6  30EF               	movlw	239
  4323  0BE7  120A  158A  232C  120A  158A  	fcall	_bmp280_send
  4324  0BEC                     l1773:
  4325                           
  4326                           ;./p03a_bmp280.h: 83:     rec=bmp280_read();
  4327  0BEC  120A  158A  2320  120A  158A  	fcall	_bmp280_read
  4328  0BF1  00F1               	movwf	??_bmp280_read_byte
  4329  0BF2  0871               	movf	??_bmp280_read_byte,w
  4330  0BF3  00F3               	movwf	bmp280_read_byte@rec
  4331  0BF4                     l1775:
  4332                           
  4333                           ;./p03a_bmp280.h: 84:     bmp280_nak();
  4334  0BF4  120A  158A  2316  120A  158A  	fcall	_bmp280_nak
  4335  0BF9                     l1777:
  4336                           
  4337                           ;./p03a_bmp280.h: 85:     bmp280_stop();
  4338  0BF9  120A  158A  2304  120A  158A  	fcall	_bmp280_stop
  4339                           
  4340                           ;./p03a_bmp280.h: 86:     return rec;
  4341  0BFE  0873               	movf	bmp280_read_byte@rec,w
  4342  0BFF                     l92:
  4343  0BFF  0008               	return
  4344  0C00                     __end_of_bmp280_read_byte:
  4345                           
  4346                           	psect	text14
  4347  0B04                     __ptext14:	
  4348 ;; *************** function _bmp280_stop *****************
  4349 ;; Defined at:
  4350 ;;		line 26 in file "./p03a_bmp280.h"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		status,2, status,0, pclath, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0
  4367 ;;      Totals:         0       0       0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; Hardware stack levels required when called: 1
  4371 ;; This function calls:
  4372 ;;		_bmp280_waitmssp
  4373 ;; This function is called by:
  4374 ;;		_bmp280_send_byte
  4375 ;;		_bmp280_read_byte
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function _bmp280_stop
  4381  0B04                     _bmp280_stop:
  4382  0B04                     l1381:	
  4383                           ;incstack = 0
  4384                           ; Regs used in _bmp280_stop: [status,2+status,0+pclath+cstack]
  4385                           
  4386                           
  4387                           ;./p03a_bmp280.h: 28:     PEN=1;
  4388  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  4389  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  4390  0B06  1511               	bsf	17,2	;volatile
  4391  0B07                     l1383:
  4392                           
  4393                           ;./p03a_bmp280.h: 29:     bmp280_waitmssp();
  4394  0B07  120A  158A  22EB  120A  158A  	fcall	_bmp280_waitmssp
  4395  0B0C                     l57:
  4396  0B0C  0008               	return
  4397  0B0D                     __end_of_bmp280_stop:
  4398                           
  4399                           	psect	text15
  4400  0B2C                     __ptext15:	
  4401 ;; *************** function _bmp280_send *****************
  4402 ;; Defined at:
  4403 ;;		line 53 in file "./p03a_bmp280.h"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  dat             1    wreg     unsigned char 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  dat             1    0[COMMON] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, pclath, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4417 ;;      Params:         0       0       0       0       0
  4418 ;;      Locals:         1       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0
  4420 ;;      Totals:         1       0       0       0       0
  4421 ;;Total ram usage:        1 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 1
  4424 ;; This function calls:
  4425 ;;		_bmp280_waitmssp
  4426 ;; This function is called by:
  4427 ;;		_bmp280_send_byte
  4428 ;;		_bmp280_read_byte
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           
  4433                           ;psect for function _bmp280_send
  4434  0B2C                     _bmp280_send:
  4435                           
  4436                           ;incstack = 0
  4437                           ; Regs used in _bmp280_send: [wreg+status,2+status,0+pclath+cstack]
  4438                           ;bmp280_send@dat stored from wreg
  4439  0B2C  00F0               	movwf	bmp280_send@dat
  4440  0B2D                     l75:	
  4441                           ;./p03a_bmp280.h: 53: void bmp280_send(unsigned char dat);./p03a_bmp280.h: 54: {;./p03a_
      +                          bmp280.h: 55: L1: SSPBUF=dat;
  4442                           
  4443  0B2D                     l1393:
  4444  0B2D  0870               	movf	bmp280_send@dat,w
  4445  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  4446  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  4447  0B30  0093               	movwf	19	;volatile
  4448  0B31                     l1395:
  4449                           
  4450                           ;./p03a_bmp280.h: 56:     bmp280_waitmssp();
  4451  0B31  120A  158A  22EB  120A  158A  	fcall	_bmp280_waitmssp
  4452  0B36                     l76:	
  4453                           ;./p03a_bmp280.h: 57:     while(ACKSTAT){bmp280_restart;goto L1;}
  4454                           
  4455  0B36  1683               	bsf	3,5	;RP0=1, select bank1
  4456  0B37  1303               	bcf	3,6	;RP1=0, select bank1
  4457  0B38  1B11               	btfsc	17,6	;volatile
  4458  0B39  2B3B               	goto	u911
  4459  0B3A  2B3C               	goto	u910
  4460  0B3B                     u911:
  4461  0B3B  2B2D               	goto	l75
  4462  0B3C                     u910:
  4463  0B3C                     l79:
  4464  0B3C  0008               	return
  4465  0B3D                     __end_of_bmp280_send:
  4466                           
  4467                           	psect	text16
  4468  0AFB                     __ptext16:	
  4469 ;; *************** function _bmp280_restart *****************
  4470 ;; Defined at:
  4471 ;;		line 31 in file "./p03a_bmp280.h"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		status,2, status,0, pclath, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4485 ;;      Params:         0       0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0
  4488 ;;      Totals:         0       0       0       0       0
  4489 ;;Total ram usage:        0 bytes
  4490 ;; Hardware stack levels used: 1
  4491 ;; Hardware stack levels required when called: 1
  4492 ;; This function calls:
  4493 ;;		_bmp280_waitmssp
  4494 ;; This function is called by:
  4495 ;;		_bmp280_read_byte
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function _bmp280_restart
  4501  0AFB                     _bmp280_restart:
  4502  0AFB                     l1385:	
  4503                           ;incstack = 0
  4504                           ; Regs used in _bmp280_restart: [status,2+status,0+pclath+cstack]
  4505                           
  4506                           
  4507                           ;./p03a_bmp280.h: 33:     RSEN=1;
  4508  0AFB  1683               	bsf	3,5	;RP0=1, select bank1
  4509  0AFC  1303               	bcf	3,6	;RP1=0, select bank1
  4510  0AFD  1491               	bsf	17,1	;volatile
  4511  0AFE                     l1387:
  4512                           
  4513                           ;./p03a_bmp280.h: 34:     bmp280_waitmssp();
  4514  0AFE  120A  158A  22EB  120A  158A  	fcall	_bmp280_waitmssp
  4515  0B03                     l60:
  4516  0B03  0008               	return
  4517  0B04                     __end_of_bmp280_restart:
  4518                           
  4519                           	psect	text17
  4520  0B20                     __ptext17:	
  4521 ;; *************** function _bmp280_read *****************
  4522 ;; Defined at:
  4523 ;;		line 67 in file "./p03a_bmp280.h"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      unsigned char 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4537 ;;      Params:         0       0       0       0       0
  4538 ;;      Locals:         0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0
  4540 ;;      Totals:         0       0       0       0       0
  4541 ;;Total ram usage:        0 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 1
  4544 ;; This function calls:
  4545 ;;		_bmp280_waitmssp
  4546 ;; This function is called by:
  4547 ;;		_bmp280_read_byte
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function _bmp280_read
  4553  0B20                     _bmp280_read:
  4554  0B20                     l1397:	
  4555                           ;incstack = 0
  4556                           ; Regs used in _bmp280_read: [wreg+status,2+status,0+pclath+cstack]
  4557                           
  4558                           
  4559                           ;./p03a_bmp280.h: 69:     RCEN=1;
  4560  0B20  1683               	bsf	3,5	;RP0=1, select bank1
  4561  0B21  1303               	bcf	3,6	;RP1=0, select bank1
  4562  0B22  1591               	bsf	17,3	;volatile
  4563  0B23                     l1399:
  4564                           
  4565                           ;./p03a_bmp280.h: 70:     bmp280_waitmssp();
  4566  0B23  120A  158A  22EB  120A  158A  	fcall	_bmp280_waitmssp
  4567  0B28                     l1401:
  4568                           
  4569                           ;./p03a_bmp280.h: 71:     return SSPBUF;
  4570  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  4571  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  4572  0B2A  0813               	movf	19,w	;volatile
  4573  0B2B                     l85:
  4574  0B2B  0008               	return
  4575  0B2C                     __end_of_bmp280_read:
  4576                           
  4577                           	psect	text18
  4578  0B16                     __ptext18:	
  4579 ;; *************** function _bmp280_nak *****************
  4580 ;; Defined at:
  4581 ;;		line 42 in file "./p03a_bmp280.h"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;		None
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		status,2, status,0, pclath, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4595 ;;      Params:         0       0       0       0       0
  4596 ;;      Locals:         0       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0
  4598 ;;      Totals:         0       0       0       0       0
  4599 ;;Total ram usage:        0 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; Hardware stack levels required when called: 1
  4602 ;; This function calls:
  4603 ;;		_bmp280_waitmssp
  4604 ;; This function is called by:
  4605 ;;		_bmp280_read_byte
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function _bmp280_nak
  4611  0B16                     _bmp280_nak:
  4612  0B16                     l1389:	
  4613                           ;incstack = 0
  4614                           ; Regs used in _bmp280_nak: [status,2+status,0+pclath+cstack]
  4615                           
  4616                           
  4617                           ;./p03a_bmp280.h: 44:     ACKDT=1;
  4618  0B16  1683               	bsf	3,5	;RP0=1, select bank1
  4619  0B17  1303               	bcf	3,6	;RP1=0, select bank1
  4620  0B18  1691               	bsf	17,5	;volatile
  4621                           
  4622                           ;./p03a_bmp280.h: 45:     ACKEN=1;
  4623  0B19  1611               	bsf	17,4	;volatile
  4624  0B1A                     l1391:
  4625                           
  4626                           ;./p03a_bmp280.h: 46:     bmp280_waitmssp();
  4627  0B1A  120A  158A  22EB  120A  158A  	fcall	_bmp280_waitmssp
  4628  0B1F                     l66:
  4629  0B1F  0008               	return
  4630  0B20                     __end_of_bmp280_nak:
  4631                           
  4632                           	psect	text19
  4633  0AEB                     __ptext19:	
  4634 ;; *************** function _bmp280_waitmssp *****************
  4635 ;; Defined at:
  4636 ;;		line 48 in file "./p03a_bmp280.h"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		None
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0
  4653 ;;      Totals:         0       0       0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_bmp280_start
  4660 ;;		_bmp280_stop
  4661 ;;		_bmp280_restart
  4662 ;;		_bmp280_nak
  4663 ;;		_bmp280_send
  4664 ;;		_bmp280_read
  4665 ;;		_bmp280_read_byte
  4666 ;;		_bmp280_ack
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           
  4671                           ;psect for function _bmp280_waitmssp
  4672  0AEB                     _bmp280_waitmssp:
  4673  0AEB                     l1361:	
  4674                           ;incstack = 0
  4675                           ; Regs used in _bmp280_waitmssp: []
  4676                           
  4677  0AEB                     l69:	
  4678                           ;./p03a_bmp280.h: 50:     while(!SSPIF);
  4679                           
  4680  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  4681  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
  4682  0AED  1D8C               	btfss	12,3	;volatile
  4683  0AEE  2AF0               	goto	u871
  4684  0AEF  2AF1               	goto	u870
  4685  0AF0                     u871:
  4686  0AF0  2AEB               	goto	l69
  4687  0AF1                     u870:
  4688  0AF1                     l71:
  4689                           
  4690                           ;./p03a_bmp280.h: 51:     SSPIF=0;
  4691  0AF1  118C               	bcf	12,3	;volatile
  4692  0AF2                     l72:
  4693  0AF2  0008               	return
  4694  0AF3                     __end_of_bmp280_waitmssp:
  4695                           
  4696                           	psect	text20
  4697  0CFE                     __ptext20:	
  4698 ;; *************** function ___lmul *****************
  4699 ;; Defined at:
  4700 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  multiplier      4    0[COMMON] unsigned long 
  4703 ;;  multiplicand    4    4[COMMON] unsigned long 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  product         4    9[COMMON] unsigned long 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  4    0[COMMON] unsigned long 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         8       0       0       0       0
  4716 ;;      Locals:         4       0       0       0       0
  4717 ;;      Temps:          1       0       0       0       0
  4718 ;;      Totals:        13       0       0       0       0
  4719 ;;Total ram usage:       13 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_main
  4725 ;;		_LCD_num
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function ___lmul
  4731  0CFE                     ___lmul:
  4732  0CFE                     l2133:	
  4733                           ;incstack = 0
  4734                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4735                           
  4736  0CFE  3000               	movlw	0
  4737  0CFF  00FC               	movwf	___lmul@product+3
  4738  0D00  3000               	movlw	0
  4739  0D01  00FB               	movwf	___lmul@product+2
  4740  0D02  3000               	movlw	0
  4741  0D03  00FA               	movwf	___lmul@product+1
  4742  0D04  3000               	movlw	0
  4743  0D05  00F9               	movwf	___lmul@product
  4744  0D06                     l2135:
  4745  0D06  1C70               	btfss	___lmul@multiplier,0
  4746  0D07  2D09               	goto	u2541
  4747  0D08  2D0A               	goto	u2540
  4748  0D09                     u2541:
  4749  0D09  2D21               	goto	l2139
  4750  0D0A                     u2540:
  4751  0D0A                     l2137:
  4752  0D0A  0874               	movf	___lmul@multiplicand,w
  4753  0D0B  07F9               	addwf	___lmul@product,f
  4754  0D0C  0875               	movf	___lmul@multiplicand+1,w
  4755  0D0D  1103               	clrz
  4756  0D0E  1803               	skipnc
  4757  0D0F  3E01               	addlw	1
  4758  0D10  1903               	skipnz
  4759  0D11  2D13               	goto	u2551
  4760  0D12  07FA               	addwf	___lmul@product+1,f
  4761  0D13                     u2551:
  4762  0D13  0876               	movf	___lmul@multiplicand+2,w
  4763  0D14  1103               	clrz
  4764  0D15  1803               	skipnc
  4765  0D16  3E01               	addlw	1
  4766  0D17  1903               	skipnz
  4767  0D18  2D1A               	goto	u2552
  4768  0D19  07FB               	addwf	___lmul@product+2,f
  4769  0D1A                     u2552:
  4770  0D1A  0877               	movf	___lmul@multiplicand+3,w
  4771  0D1B  1103               	clrz
  4772  0D1C  1803               	skipnc
  4773  0D1D  3E01               	addlw	1
  4774  0D1E  1903               	skipnz
  4775  0D1F  2D21               	goto	u2553
  4776  0D20  07FC               	addwf	___lmul@product+3,f
  4777  0D21                     u2553:
  4778  0D21                     l2139:
  4779  0D21  3001               	movlw	1
  4780  0D22  00F8               	movwf	??___lmul
  4781  0D23                     u2565:
  4782  0D23  1003               	clrc
  4783  0D24  0DF4               	rlf	___lmul@multiplicand,f
  4784  0D25  0DF5               	rlf	___lmul@multiplicand+1,f
  4785  0D26  0DF6               	rlf	___lmul@multiplicand+2,f
  4786  0D27  0DF7               	rlf	___lmul@multiplicand+3,f
  4787  0D28  0BF8               	decfsz	??___lmul,f
  4788  0D29  2D23               	goto	u2565
  4789  0D2A                     l2141:
  4790  0D2A  3001               	movlw	1
  4791  0D2B                     u2575:
  4792  0D2B  1003               	clrc
  4793  0D2C  0CF3               	rrf	___lmul@multiplier+3,f
  4794  0D2D  0CF2               	rrf	___lmul@multiplier+2,f
  4795  0D2E  0CF1               	rrf	___lmul@multiplier+1,f
  4796  0D2F  0CF0               	rrf	___lmul@multiplier,f
  4797  0D30  3EFF               	addlw	-1
  4798  0D31  1D03               	skipz
  4799  0D32  2D2B               	goto	u2575
  4800  0D33  0873               	movf	___lmul@multiplier+3,w
  4801  0D34  0472               	iorwf	___lmul@multiplier+2,w
  4802  0D35  0471               	iorwf	___lmul@multiplier+1,w
  4803  0D36  0470               	iorwf	___lmul@multiplier,w
  4804  0D37  1D03               	skipz
  4805  0D38  2D3A               	goto	u2581
  4806  0D39  2D3B               	goto	u2580
  4807  0D3A                     u2581:
  4808  0D3A  2D06               	goto	l2135
  4809  0D3B                     u2580:
  4810  0D3B                     l2143:
  4811  0D3B  087C               	movf	___lmul@product+3,w
  4812  0D3C  00F3               	movwf	?___lmul+3
  4813  0D3D  087B               	movf	___lmul@product+2,w
  4814  0D3E  00F2               	movwf	?___lmul+2
  4815  0D3F  087A               	movf	___lmul@product+1,w
  4816  0D40  00F1               	movwf	?___lmul+1
  4817  0D41  0879               	movf	___lmul@product,w
  4818  0D42  00F0               	movwf	?___lmul
  4819  0D43                     l296:
  4820  0D43  0008               	return
  4821  0D44                     __end_of___lmul:
  4822                           
  4823                           	psect	text21
  4824  0D9D                     __ptext21:	
  4825 ;; *************** function ___lldiv *****************
  4826 ;; Defined at:
  4827 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  divisor         4    0[COMMON] unsigned long 
  4830 ;;  dividend        4    4[COMMON] unsigned long 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  quotient        4    9[COMMON] unsigned long 
  4833 ;;  counter         1   13[COMMON] unsigned char 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  4    0[COMMON] unsigned long 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4843 ;;      Params:         8       0       0       0       0
  4844 ;;      Locals:         5       0       0       0       0
  4845 ;;      Temps:          1       0       0       0       0
  4846 ;;      Totals:        14       0       0       0       0
  4847 ;;Total ram usage:       14 bytes
  4848 ;; Hardware stack levels used: 1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function ___lldiv
  4858  0D9D                     ___lldiv:
  4859  0D9D                     l2147:	
  4860                           ;incstack = 0
  4861                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4862                           
  4863  0D9D  3000               	movlw	0
  4864  0D9E  00FC               	movwf	___lldiv@quotient+3
  4865  0D9F  3000               	movlw	0
  4866  0DA0  00FB               	movwf	___lldiv@quotient+2
  4867  0DA1  3000               	movlw	0
  4868  0DA2  00FA               	movwf	___lldiv@quotient+1
  4869  0DA3  3000               	movlw	0
  4870  0DA4  00F9               	movwf	___lldiv@quotient
  4871  0DA5  0873               	movf	___lldiv@divisor+3,w
  4872  0DA6  0472               	iorwf	___lldiv@divisor+2,w
  4873  0DA7  0471               	iorwf	___lldiv@divisor+1,w
  4874  0DA8  0470               	iorwf	___lldiv@divisor,w
  4875  0DA9  1903               	skipnz
  4876  0DAA  2DAC               	goto	u2591
  4877  0DAB  2DAD               	goto	u2590
  4878  0DAC                     u2591:
  4879  0DAC  2DFA               	goto	l2167
  4880  0DAD                     u2590:
  4881  0DAD                     l2149:
  4882  0DAD  01FD               	clrf	___lldiv@counter
  4883  0DAE  0AFD               	incf	___lldiv@counter,f
  4884  0DAF  2DBD               	goto	l2153
  4885  0DB0                     l2151:
  4886  0DB0  3001               	movlw	1
  4887  0DB1  00F8               	movwf	??___lldiv
  4888  0DB2                     u2605:
  4889  0DB2  1003               	clrc
  4890  0DB3  0DF0               	rlf	___lldiv@divisor,f
  4891  0DB4  0DF1               	rlf	___lldiv@divisor+1,f
  4892  0DB5  0DF2               	rlf	___lldiv@divisor+2,f
  4893  0DB6  0DF3               	rlf	___lldiv@divisor+3,f
  4894  0DB7  0BF8               	decfsz	??___lldiv,f
  4895  0DB8  2DB2               	goto	u2605
  4896  0DB9  3001               	movlw	1
  4897  0DBA  00F8               	movwf	??___lldiv
  4898  0DBB  0878               	movf	??___lldiv,w
  4899  0DBC  07FD               	addwf	___lldiv@counter,f
  4900  0DBD                     l2153:
  4901  0DBD  1FF3               	btfss	___lldiv@divisor+3,7
  4902  0DBE  2DC0               	goto	u2611
  4903  0DBF  2DC1               	goto	u2610
  4904  0DC0                     u2611:
  4905  0DC0  2DB0               	goto	l2151
  4906  0DC1                     u2610:
  4907  0DC1                     l2155:
  4908  0DC1  3001               	movlw	1
  4909  0DC2  00F8               	movwf	??___lldiv
  4910  0DC3                     u2625:
  4911  0DC3  1003               	clrc
  4912  0DC4  0DF9               	rlf	___lldiv@quotient,f
  4913  0DC5  0DFA               	rlf	___lldiv@quotient+1,f
  4914  0DC6  0DFB               	rlf	___lldiv@quotient+2,f
  4915  0DC7  0DFC               	rlf	___lldiv@quotient+3,f
  4916  0DC8  0BF8               	decfsz	??___lldiv,f
  4917  0DC9  2DC3               	goto	u2625
  4918  0DCA                     l2157:
  4919  0DCA  0873               	movf	___lldiv@divisor+3,w
  4920  0DCB  0277               	subwf	___lldiv@dividend+3,w
  4921  0DCC  1D03               	skipz
  4922  0DCD  2DD8               	goto	u2635
  4923  0DCE  0872               	movf	___lldiv@divisor+2,w
  4924  0DCF  0276               	subwf	___lldiv@dividend+2,w
  4925  0DD0  1D03               	skipz
  4926  0DD1  2DD8               	goto	u2635
  4927  0DD2  0871               	movf	___lldiv@divisor+1,w
  4928  0DD3  0275               	subwf	___lldiv@dividend+1,w
  4929  0DD4  1D03               	skipz
  4930  0DD5  2DD8               	goto	u2635
  4931  0DD6  0870               	movf	___lldiv@divisor,w
  4932  0DD7  0274               	subwf	___lldiv@dividend,w
  4933  0DD8                     u2635:
  4934  0DD8  1C03               	skipc
  4935  0DD9  2DDB               	goto	u2631
  4936  0DDA  2DDC               	goto	u2630
  4937  0DDB                     u2631:
  4938  0DDB  2DEB               	goto	l2163
  4939  0DDC                     u2630:
  4940  0DDC                     l2159:
  4941  0DDC  0870               	movf	___lldiv@divisor,w
  4942  0DDD  02F4               	subwf	___lldiv@dividend,f
  4943  0DDE  0871               	movf	___lldiv@divisor+1,w
  4944  0DDF  1C03               	skipc
  4945  0DE0  0F71               	incfsz	___lldiv@divisor+1,w
  4946  0DE1  02F5               	subwf	___lldiv@dividend+1,f
  4947  0DE2  0872               	movf	___lldiv@divisor+2,w
  4948  0DE3  1C03               	skipc
  4949  0DE4  0F72               	incfsz	___lldiv@divisor+2,w
  4950  0DE5  02F6               	subwf	___lldiv@dividend+2,f
  4951  0DE6  0873               	movf	___lldiv@divisor+3,w
  4952  0DE7  1C03               	skipc
  4953  0DE8  0F73               	incfsz	___lldiv@divisor+3,w
  4954  0DE9  02F7               	subwf	___lldiv@dividend+3,f
  4955  0DEA                     l2161:
  4956  0DEA  1479               	bsf	___lldiv@quotient,0
  4957  0DEB                     l2163:
  4958  0DEB  3001               	movlw	1
  4959  0DEC                     u2645:
  4960  0DEC  1003               	clrc
  4961  0DED  0CF3               	rrf	___lldiv@divisor+3,f
  4962  0DEE  0CF2               	rrf	___lldiv@divisor+2,f
  4963  0DEF  0CF1               	rrf	___lldiv@divisor+1,f
  4964  0DF0  0CF0               	rrf	___lldiv@divisor,f
  4965  0DF1  3EFF               	addlw	-1
  4966  0DF2  1D03               	skipz
  4967  0DF3  2DEC               	goto	u2645
  4968  0DF4                     l2165:
  4969  0DF4  3001               	movlw	1
  4970  0DF5  02FD               	subwf	___lldiv@counter,f
  4971  0DF6  1D03               	btfss	3,2
  4972  0DF7  2DF9               	goto	u2651
  4973  0DF8  2DFA               	goto	u2650
  4974  0DF9                     u2651:
  4975  0DF9  2DC1               	goto	l2155
  4976  0DFA                     u2650:
  4977  0DFA                     l2167:
  4978  0DFA  087C               	movf	___lldiv@quotient+3,w
  4979  0DFB  00F3               	movwf	?___lldiv+3
  4980  0DFC  087B               	movf	___lldiv@quotient+2,w
  4981  0DFD  00F2               	movwf	?___lldiv+2
  4982  0DFE  087A               	movf	___lldiv@quotient+1,w
  4983  0DFF  00F1               	movwf	?___lldiv+1
  4984  0E00  0879               	movf	___lldiv@quotient,w
  4985  0E01  00F0               	movwf	?___lldiv
  4986  0E02                     l318:
  4987  0E02  0008               	return
  4988  0E03                     __end_of___lldiv:
  4989                           
  4990                           	psect	text22
  4991  000A                     __ptext22:	
  4992 ;; *************** function ___aldiv *****************
  4993 ;; Defined at:
  4994 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  divisor         4    0[BANK0 ] long 
  4997 ;;  dividend        4    4[BANK0 ] long 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  quotient        4   10[BANK0 ] long 
  5000 ;;  sign            1    9[BANK0 ] unsigned char 
  5001 ;;  counter         1    8[BANK0 ] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  4    0[BANK0 ] long 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         0       8       0       0       0
  5012 ;;      Locals:         0       6       0       0       0
  5013 ;;      Temps:          1       0       0       0       0
  5014 ;;      Totals:         1      14       0       0       0
  5015 ;;Total ram usage:       15 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_main
  5021 ;;		_LCD_num
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           
  5026                           ;psect for function ___aldiv
  5027  000A                     ___aldiv:
  5028  000A                     l2171:	
  5029                           ;incstack = 0
  5030                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5031                           
  5032  000A  1283               	bcf	3,5	;RP0=0, select bank0
  5033  000B  1303               	bcf	3,6	;RP1=0, select bank0
  5034  000C  01A9               	clrf	___aldiv@sign
  5035  000D                     l2173:
  5036  000D  1FA3               	btfss	___aldiv@divisor+3,7
  5037  000E  2810               	goto	u2661
  5038  000F  2811               	goto	u2660
  5039  0010                     u2661:
  5040  0010  281E               	goto	l347
  5041  0011                     u2660:
  5042  0011                     l2175:
  5043  0011  09A0               	comf	___aldiv@divisor,f
  5044  0012  09A1               	comf	___aldiv@divisor+1,f
  5045  0013  09A2               	comf	___aldiv@divisor+2,f
  5046  0014  09A3               	comf	___aldiv@divisor+3,f
  5047  0015  0AA0               	incf	___aldiv@divisor,f
  5048  0016  1903               	skipnz
  5049  0017  0AA1               	incf	___aldiv@divisor+1,f
  5050  0018  1903               	skipnz
  5051  0019  0AA2               	incf	___aldiv@divisor+2,f
  5052  001A  1903               	skipnz
  5053  001B  0AA3               	incf	___aldiv@divisor+3,f
  5054  001C  01A9               	clrf	___aldiv@sign
  5055  001D  0AA9               	incf	___aldiv@sign,f
  5056  001E                     l347:
  5057  001E  1FA7               	btfss	___aldiv@dividend+3,7
  5058  001F  2821               	goto	u2671
  5059  0020  2822               	goto	u2670
  5060  0021                     u2671:
  5061  0021  2831               	goto	l2181
  5062  0022                     u2670:
  5063  0022                     l2177:
  5064  0022  09A4               	comf	___aldiv@dividend,f
  5065  0023  09A5               	comf	___aldiv@dividend+1,f
  5066  0024  09A6               	comf	___aldiv@dividend+2,f
  5067  0025  09A7               	comf	___aldiv@dividend+3,f
  5068  0026  0AA4               	incf	___aldiv@dividend,f
  5069  0027  1903               	skipnz
  5070  0028  0AA5               	incf	___aldiv@dividend+1,f
  5071  0029  1903               	skipnz
  5072  002A  0AA6               	incf	___aldiv@dividend+2,f
  5073  002B  1903               	skipnz
  5074  002C  0AA7               	incf	___aldiv@dividend+3,f
  5075  002D                     l2179:
  5076  002D  3001               	movlw	1
  5077  002E  00FD               	movwf	??___aldiv
  5078  002F  087D               	movf	??___aldiv,w
  5079  0030  06A9               	xorwf	___aldiv@sign,f
  5080  0031                     l2181:
  5081  0031  3000               	movlw	0
  5082  0032  00AD               	movwf	___aldiv@quotient+3
  5083  0033  3000               	movlw	0
  5084  0034  00AC               	movwf	___aldiv@quotient+2
  5085  0035  3000               	movlw	0
  5086  0036  00AB               	movwf	___aldiv@quotient+1
  5087  0037  3000               	movlw	0
  5088  0038  00AA               	movwf	___aldiv@quotient
  5089  0039                     l2183:
  5090  0039  0823               	movf	___aldiv@divisor+3,w
  5091  003A  0422               	iorwf	___aldiv@divisor+2,w
  5092  003B  0421               	iorwf	___aldiv@divisor+1,w
  5093  003C  0420               	iorwf	___aldiv@divisor,w
  5094  003D  1903               	skipnz
  5095  003E  2840               	goto	u2681
  5096  003F  2841               	goto	u2680
  5097  0040                     u2681:
  5098  0040  288E               	goto	l2203
  5099  0041                     u2680:
  5100  0041                     l2185:
  5101  0041  01A8               	clrf	___aldiv@counter
  5102  0042  0AA8               	incf	___aldiv@counter,f
  5103  0043  2851               	goto	l2189
  5104  0044                     l2187:
  5105  0044  3001               	movlw	1
  5106  0045  00FD               	movwf	??___aldiv
  5107  0046                     u2695:
  5108  0046  1003               	clrc
  5109  0047  0DA0               	rlf	___aldiv@divisor,f
  5110  0048  0DA1               	rlf	___aldiv@divisor+1,f
  5111  0049  0DA2               	rlf	___aldiv@divisor+2,f
  5112  004A  0DA3               	rlf	___aldiv@divisor+3,f
  5113  004B  0BFD               	decfsz	??___aldiv,f
  5114  004C  2846               	goto	u2695
  5115  004D  3001               	movlw	1
  5116  004E  00FD               	movwf	??___aldiv
  5117  004F  087D               	movf	??___aldiv,w
  5118  0050  07A8               	addwf	___aldiv@counter,f
  5119  0051                     l2189:
  5120  0051  1FA3               	btfss	___aldiv@divisor+3,7
  5121  0052  2854               	goto	u2701
  5122  0053  2855               	goto	u2700
  5123  0054                     u2701:
  5124  0054  2844               	goto	l2187
  5125  0055                     u2700:
  5126  0055                     l2191:
  5127  0055  3001               	movlw	1
  5128  0056  00FD               	movwf	??___aldiv
  5129  0057                     u2715:
  5130  0057  1003               	clrc
  5131  0058  0DAA               	rlf	___aldiv@quotient,f
  5132  0059  0DAB               	rlf	___aldiv@quotient+1,f
  5133  005A  0DAC               	rlf	___aldiv@quotient+2,f
  5134  005B  0DAD               	rlf	___aldiv@quotient+3,f
  5135  005C  0BFD               	decfsz	??___aldiv,f
  5136  005D  2857               	goto	u2715
  5137  005E                     l2193:
  5138  005E  0823               	movf	___aldiv@divisor+3,w
  5139  005F  0227               	subwf	___aldiv@dividend+3,w
  5140  0060  1D03               	skipz
  5141  0061  286C               	goto	u2725
  5142  0062  0822               	movf	___aldiv@divisor+2,w
  5143  0063  0226               	subwf	___aldiv@dividend+2,w
  5144  0064  1D03               	skipz
  5145  0065  286C               	goto	u2725
  5146  0066  0821               	movf	___aldiv@divisor+1,w
  5147  0067  0225               	subwf	___aldiv@dividend+1,w
  5148  0068  1D03               	skipz
  5149  0069  286C               	goto	u2725
  5150  006A  0820               	movf	___aldiv@divisor,w
  5151  006B  0224               	subwf	___aldiv@dividend,w
  5152  006C                     u2725:
  5153  006C  1C03               	skipc
  5154  006D  286F               	goto	u2721
  5155  006E  2870               	goto	u2720
  5156  006F                     u2721:
  5157  006F  287F               	goto	l2199
  5158  0070                     u2720:
  5159  0070                     l2195:
  5160  0070  0820               	movf	___aldiv@divisor,w
  5161  0071  02A4               	subwf	___aldiv@dividend,f
  5162  0072  0821               	movf	___aldiv@divisor+1,w
  5163  0073  1C03               	skipc
  5164  0074  0F21               	incfsz	___aldiv@divisor+1,w
  5165  0075  02A5               	subwf	___aldiv@dividend+1,f
  5166  0076  0822               	movf	___aldiv@divisor+2,w
  5167  0077  1C03               	skipc
  5168  0078  0F22               	incfsz	___aldiv@divisor+2,w
  5169  0079  02A6               	subwf	___aldiv@dividend+2,f
  5170  007A  0823               	movf	___aldiv@divisor+3,w
  5171  007B  1C03               	skipc
  5172  007C  0F23               	incfsz	___aldiv@divisor+3,w
  5173  007D  02A7               	subwf	___aldiv@dividend+3,f
  5174  007E                     l2197:
  5175  007E  142A               	bsf	___aldiv@quotient,0
  5176  007F                     l2199:
  5177  007F  3001               	movlw	1
  5178  0080                     u2735:
  5179  0080  1003               	clrc
  5180  0081  0CA3               	rrf	___aldiv@divisor+3,f
  5181  0082  0CA2               	rrf	___aldiv@divisor+2,f
  5182  0083  0CA1               	rrf	___aldiv@divisor+1,f
  5183  0084  0CA0               	rrf	___aldiv@divisor,f
  5184  0085  3EFF               	addlw	-1
  5185  0086  1D03               	skipz
  5186  0087  2880               	goto	u2735
  5187  0088                     l2201:
  5188  0088  3001               	movlw	1
  5189  0089  02A8               	subwf	___aldiv@counter,f
  5190  008A  1D03               	btfss	3,2
  5191  008B  288D               	goto	u2741
  5192  008C  288E               	goto	u2740
  5193  008D                     u2741:
  5194  008D  2855               	goto	l2191
  5195  008E                     u2740:
  5196  008E                     l2203:
  5197  008E  0829               	movf	___aldiv@sign,w
  5198  008F  1903               	btfsc	3,2
  5199  0090  2892               	goto	u2751
  5200  0091  2893               	goto	u2750
  5201  0092                     u2751:
  5202  0092  289E               	goto	l2207
  5203  0093                     u2750:
  5204  0093                     l2205:
  5205  0093  09AA               	comf	___aldiv@quotient,f
  5206  0094  09AB               	comf	___aldiv@quotient+1,f
  5207  0095  09AC               	comf	___aldiv@quotient+2,f
  5208  0096  09AD               	comf	___aldiv@quotient+3,f
  5209  0097  0AAA               	incf	___aldiv@quotient,f
  5210  0098  1903               	skipnz
  5211  0099  0AAB               	incf	___aldiv@quotient+1,f
  5212  009A  1903               	skipnz
  5213  009B  0AAC               	incf	___aldiv@quotient+2,f
  5214  009C  1903               	skipnz
  5215  009D  0AAD               	incf	___aldiv@quotient+3,f
  5216  009E                     l2207:
  5217  009E  082D               	movf	___aldiv@quotient+3,w
  5218  009F  00A3               	movwf	?___aldiv+3
  5219  00A0  082C               	movf	___aldiv@quotient+2,w
  5220  00A1  00A2               	movwf	?___aldiv+2
  5221  00A2  082B               	movf	___aldiv@quotient+1,w
  5222  00A3  00A1               	movwf	?___aldiv+1
  5223  00A4  082A               	movf	___aldiv@quotient,w
  5224  00A5  00A0               	movwf	?___aldiv
  5225  00A6                     l357:
  5226  00A6  0008               	return
  5227  00A7                     __end_of___aldiv:
  5228                           
  5229                           	psect	text23
  5230  0B90                     __ptext23:	
  5231 ;; *************** function _LCD_init *****************
  5232 ;; Defined at:
  5233 ;;		line 41 in file "./lcd4bit.h"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0, pclath, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5247 ;;      Params:         0       0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0
  5249 ;;      Temps:          2       0       0       0       0
  5250 ;;      Totals:         2       0       0       0       0
  5251 ;;Total ram usage:        2 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; Hardware stack levels required when called: 1
  5254 ;; This function calls:
  5255 ;;		_LCD_Command
  5256 ;; This function is called by:
  5257 ;;		_main
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           
  5262                           ;psect for function _LCD_init
  5263  0B90                     _LCD_init:
  5264  0B90                     l2045:	
  5265                           ;incstack = 0
  5266                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  5267                           
  5268                           
  5269                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  5270  0B90  1683               	bsf	3,5	;RP0=1, select bank1
  5271  0B91  1303               	bcf	3,6	;RP1=0, select bank1
  5272  0B92  1386               	bcf	6,7	;volatile
  5273                           
  5274                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  5275  0B93  1306               	bcf	6,6	;volatile
  5276                           
  5277                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  5278  0B94  1286               	bcf	6,5	;volatile
  5279                           
  5280                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  5281  0B95  1206               	bcf	6,4	;volatile
  5282                           
  5283                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  5284  0B96  1007               	bcf	7,0	;volatile
  5285                           
  5286                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  5287  0B97  1087               	bcf	7,1	;volatile
  5288  0B98                     l2047:
  5289                           
  5290                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  5291  0B98  3002               	movlw	2
  5292  0B99  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5293                           
  5294                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  5295  0B9E  3028               	movlw	40
  5296  0B9F  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5297                           
  5298                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  5299  0BA4  3080               	movlw	128
  5300  0BA5  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5301                           
  5302                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  5303  0BAA  300C               	movlw	12
  5304  0BAB  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5305                           
  5306                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  5307  0BB0  3006               	movlw	6
  5308  0BB1  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5309                           
  5310                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  5311  0BB6  3001               	movlw	1
  5312  0BB7  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5313  0BBC                     l2049:
  5314                           
  5315                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5316  0BBC  3041               	movlw	65
  5317  0BBD  00F4               	movwf	??_LCD_init+1
  5318  0BBE  30EE               	movlw	238
  5319  0BBF  00F3               	movwf	??_LCD_init
  5320  0BC0                     u3767:
  5321  0BC0  0BF3               	decfsz	??_LCD_init,f
  5322  0BC1  2BC0               	goto	u3767
  5323  0BC2  0BF4               	decfsz	??_LCD_init+1,f
  5324  0BC3  2BC0               	goto	u3767
  5325  0BC4  0000               	nop
  5326  0BC5                     l103:
  5327  0BC5  0008               	return
  5328  0BC6                     __end_of_LCD_init:
  5329                           
  5330                           	psect	text24
  5331  0C3A                     __ptext24:	
  5332 ;; *************** function _LCD_Command *****************
  5333 ;; Defined at:
  5334 ;;		line 13 in file "./lcd4bit.h"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  cmnd            1    wreg     unsigned char 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  cmnd            1    2[COMMON] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5348 ;;      Params:         0       0       0       0       0
  5349 ;;      Locals:         1       0       0       0       0
  5350 ;;      Temps:          2       0       0       0       0
  5351 ;;      Totals:         3       0       0       0       0
  5352 ;;Total ram usage:        3 bytes
  5353 ;; Hardware stack levels used: 1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_LCD_init
  5358 ;;		_main
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           
  5363                           ;psect for function _LCD_Command
  5364  0C3A                     _LCD_Command:
  5365                           
  5366                           ;incstack = 0
  5367                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  5368                           ;LCD_Command@cmnd stored from wreg
  5369  0C3A  00F2               	movwf	LCD_Command@cmnd
  5370  0C3B                     l1781:
  5371                           
  5372                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  5373  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  5374  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  5375  0C3D  1007               	bcf	7,0	;volatile
  5376  0C3E                     l1783:
  5377                           
  5378                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  5379  0C3E  0872               	movf	LCD_Command@cmnd,w
  5380  0C3F  0086               	movwf	6	;volatile
  5381  0C40                     l1785:
  5382                           
  5383                           ;./lcd4bit.h: 17:     RC1 = 1;
  5384  0C40  1487               	bsf	7,1	;volatile
  5385                           
  5386                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5387  0C41  3041               	movlw	65
  5388  0C42  00F1               	movwf	??_LCD_Command+1
  5389  0C43  30EE               	movlw	238
  5390  0C44  00F0               	movwf	??_LCD_Command
  5391  0C45                     u3777:
  5392  0C45  0BF0               	decfsz	??_LCD_Command,f
  5393  0C46  2C45               	goto	u3777
  5394  0C47  0BF1               	decfsz	??_LCD_Command+1,f
  5395  0C48  2C45               	goto	u3777
  5396  0C49  0000               	nop
  5397  0C4A                     l1787:
  5398                           
  5399                           ;./lcd4bit.h: 19:     RC1 = 0;
  5400  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  5401  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  5402  0C4C  1087               	bcf	7,1	;volatile
  5403                           
  5404                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5405  0C4D  3041               	movlw	65
  5406  0C4E  00F1               	movwf	??_LCD_Command+1
  5407  0C4F  30EE               	movlw	238
  5408  0C50  00F0               	movwf	??_LCD_Command
  5409  0C51                     u3787:
  5410  0C51  0BF0               	decfsz	??_LCD_Command,f
  5411  0C52  2C51               	goto	u3787
  5412  0C53  0BF1               	decfsz	??_LCD_Command+1,f
  5413  0C54  2C51               	goto	u3787
  5414  0C55  0000               	nop
  5415  0C56                     l1789:
  5416                           
  5417                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  5418  0C56  0872               	movf	LCD_Command@cmnd,w
  5419  0C57  00F0               	movwf	??_LCD_Command
  5420  0C58  3003               	movlw	3
  5421  0C59                     u1795:
  5422  0C59  1003               	clrc
  5423  0C5A  0DF0               	rlf	??_LCD_Command,f
  5424  0C5B  3EFF               	addlw	-1
  5425  0C5C  1D03               	skipz
  5426  0C5D  2C59               	goto	u1795
  5427  0C5E  1003               	clrc
  5428  0C5F  0D70               	rlf	??_LCD_Command,w
  5429  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  5430  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  5431  0C62  0086               	movwf	6	;volatile
  5432  0C63                     l1791:
  5433                           
  5434                           ;./lcd4bit.h: 22:     RC1 = 1;
  5435  0C63  1487               	bsf	7,1	;volatile
  5436  0C64                     l1793:
  5437                           
  5438                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5439  0C64  3041               	movlw	65
  5440  0C65  00F1               	movwf	??_LCD_Command+1
  5441  0C66  30EE               	movlw	238
  5442  0C67  00F0               	movwf	??_LCD_Command
  5443  0C68                     u3797:
  5444  0C68  0BF0               	decfsz	??_LCD_Command,f
  5445  0C69  2C68               	goto	u3797
  5446  0C6A  0BF1               	decfsz	??_LCD_Command+1,f
  5447  0C6B  2C68               	goto	u3797
  5448  0C6C  0000               	nop
  5449  0C6D                     l1795:
  5450                           
  5451                           ;./lcd4bit.h: 24:     RC1 = 0;
  5452  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0C6F  1087               	bcf	7,1	;volatile
  5455  0C70                     l1797:
  5456                           
  5457                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5458  0C70  3041               	movlw	65
  5459  0C71  00F1               	movwf	??_LCD_Command+1
  5460  0C72  30EE               	movlw	238
  5461  0C73  00F0               	movwf	??_LCD_Command
  5462  0C74                     u3807:
  5463  0C74  0BF0               	decfsz	??_LCD_Command,f
  5464  0C75  2C74               	goto	u3807
  5465  0C76  0BF1               	decfsz	??_LCD_Command+1,f
  5466  0C77  2C74               	goto	u3807
  5467  0C78  0000               	nop
  5468  0C79                     l97:
  5469  0C79  0008               	return
  5470  0C7A                     __end_of_LCD_Command:
  5471  007E                     btemp	set	126	;btemp
  5472  007E                     wtemp0	set	126
  5473                           
  5474                           	psect	idloc
  5475                           
  5476                           ;Config register IDLOC0 @ 0x2000
  5477                           ;	unspecified, using default values
  5478  2000                     	org	8192
  5479  2000  3FFF               	dw	16383
  5480                           
  5481                           ;Config register IDLOC1 @ 0x2001
  5482                           ;	unspecified, using default values
  5483  2001                     	org	8193
  5484  2001  3FFF               	dw	16383
  5485                           
  5486                           ;Config register IDLOC2 @ 0x2002
  5487                           ;	unspecified, using default values
  5488  2002                     	org	8194
  5489  2002  3FFF               	dw	16383
  5490                           
  5491                           ;Config register IDLOC3 @ 0x2003
  5492                           ;	unspecified, using default values
  5493  2003                     	org	8195
  5494  2003  3FFF               	dw	16383
  5495                           
  5496                           	psect	config
  5497                           
  5498                           ;Config register CONFIG @ 0x2007
  5499                           ;	unspecified, using default values
  5500                           ;	Oscillator Selection bits
  5501                           ;	FOSC = 0x3, unprogrammed default
  5502                           ;	Watchdog Timer Enable bit
  5503                           ;	WDTE = 0x1, unprogrammed default
  5504                           ;	Power-up Timer Enable bit
  5505                           ;	PWRTE = 0x1, unprogrammed default
  5506                           ;	Brown-out Reset Enable bit
  5507                           ;	BOREN = 0x1, unprogrammed default
  5508                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5509                           ;	LVP = 0x1, unprogrammed default
  5510                           ;	Data EEPROM Memory Code Protection bit
  5511                           ;	CPD = 0x1, unprogrammed default
  5512                           ;	Flash Program Memory Write Enable bits
  5513                           ;	WRT = 0x3, unprogrammed default
  5514                           ;	In-Circuit Debugger Mode bit
  5515                           ;	DEBUG = 0x1, unprogrammed default
  5516                           ;	Flash Program Memory Code Protection bit
  5517                           ;	CP = 0x1, unprogrammed default
  5518  2007                     	org	8199
  5519  2007  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    76
    Data        2
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      79
    BANK1            80      0      59
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->___aldiv
    _main->___lldiv
    _uncompensated_pressure->_bmp280_read_byte
    _bmp280_send_byte->_bmp280_send
    _show_multidigits->___awdiv
    _show->_LCD_Char
    _bmp280_getdata->_bmp280_read_byte
    _bmp280_read_byte->_bmp280_send
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_uncompensated_pressure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    9896
                                             25 BANK0     18    18      0
                        _LCD_Command
                           _LCD_init
                            ___aldiv
                            ___lldiv
                             ___lmul
                     _bmp280_getdata
                        _bmp280_init
                               _show
                   _show_multidigits
             _uncompensated_pressure
 ---------------------------------------------------------------------------------
 (1) _uncompensated_pressure                              25    25      0     278
                                              0 BANK0     25    25      0
                   _bmp280_read_byte
                   _bmp280_send_byte
 ---------------------------------------------------------------------------------
 (2) _bmp280_send_byte                                     2     1      1     142
                                              1 COMMON     2     1      1
                        _bmp280_send
                       _bmp280_start
                        _bmp280_stop
 ---------------------------------------------------------------------------------
 (3) _bmp280_start                                         0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (1) _show_multidigits                                    16    14      2    4333
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     919
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     922
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     122
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bmp280_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bmp280_getdata                                       4     4      0      67
                                              4 COMMON     4     4      0
                   _bmp280_read_byte
 ---------------------------------------------------------------------------------
 (2) _bmp280_read_byte                                     3     3      0      67
                                              1 COMMON     3     3      0
                         _bmp280_nak
                        _bmp280_read
                     _bmp280_restart
                        _bmp280_send
                        _bmp280_stop
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_stop                                          0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_send                                          1     1      0      22
                                              0 COMMON     1     1      0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_restart                                       0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_read                                          0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_nak                                           0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (4) _bmp280_waitmssp                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8    1916
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8    2580
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Command
   _LCD_init
     _LCD_Command
   ___aldiv
     ___lmul (ARG)
   ___lldiv
   ___lmul
   _bmp280_getdata
     _bmp280_read_byte
       _bmp280_nak
         _bmp280_waitmssp
       _bmp280_read
         _bmp280_waitmssp
       _bmp280_restart
         _bmp280_waitmssp
       _bmp280_send
         _bmp280_waitmssp
       _bmp280_stop
         _bmp280_waitmssp
       _bmp280_waitmssp
   _bmp280_init
   _show
     _LCD_Char
   _show_multidigits
     _LCD_Char
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _uncompensated_pressure
     _bmp280_read_byte
     _bmp280_send_byte
       _bmp280_send
       _bmp280_start
         _bmp280_waitmssp
       _bmp280_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3B       7       73.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2B      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      98      12        0.0%
ABS                  0      0      98       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 09 17:26:21 2022

                              _p 0069                                pc 0002               ??_bmp280_read_byte 0071  
                   ?_LCD_Command 0070                               l51 0B52                               l60 0B03  
                             l54 0B15                               l71 0AF1                               l72 0AF2  
                             l57 0B0C                               l66 0B1F                               l82 0B70  
                             l75 0B2D                               l76 0B36                               l92 0BFF  
                             l69 0AEB                               l85 0B2B                               l79 0B3C  
                             l88 0BC7                               l97 0C79                               l89 0BD5  
                             _b0 00BC                               _b1 00B8                               _b2 00B4  
                             _b3 00B0                               _b4 00A8                               _b5 00AC  
                             _b6 0057                               _b7 0053                     ___awdiv@sign 0076  
                             _x1 004F                               _x2 004B                               _aa 00D4  
                             _x3 00A0                               _ab 00D0                               _ac 00CC  
                             _ad 00C8                               _ae 00C4                               _af 00C0  
                             _up 00A4                               fsr 0004             bmp280_send_byte@addr 0072  
       ??_uncompensated_pressure 0020                ?_bmp280_send_byte 0071                              l100 0CB9  
                            l103 0BC5                              l112 0B8F                              l121 0238  
              ??_bmp280_waitmssp 0070                              l125 0238                              l318 0E02  
                            l190 0F32                              l184 0676                              l193 0FFF  
                            l347 001E                              l435 0E69                              l357 00A6  
                            l296 0D43                              l448 0D9C                              l554 0CFD  
                            l564 0C39                              _RC0 0038                              _RC1 0039  
                            _PEN 048A                              _SEN 0488                              u910 0B3C  
                            u911 0B3B                              u870 0AF1                              u871 0AF0  
                            _ac1 0067                              _ac2 0065                              _ac3 0063  
                            _ac4 0061               ??_bmp280_send_byte 0072                              _hpa 005D  
                            _avv 00D8                              _oss 006D                              fsr0 0004  
                            indf 0000                     ___awmod@sign 0076                     _bmp280_start 0B0D  
         show_multidigits@digit1 0026            bmp280_send_byte@count 0071           show_multidigits@digit2 0028  
         show_multidigits@digit3 0024           show_multidigits@digit4 0020                             l2101 01BD  
                           l2111 0215                             l2103 01C1                             l2201 0088  
                           l1401 0B28                             l2041 0B3D                             l2113 021C  
                           l2105 01D8                             l2121 0F33                             l2203 008E  
                           l2043 0B4A                             l2051 0B72                             l2115 0225  
                           l2107 01EB                             l2131 0F8F                             l2123 0F49  
                           l2045 0B90                             l2205 0093                             l2141 0D2A  
                           l2133 0CFE                             l2053 0B73                             l2117 022E  
                           l2109 0202                             l2061 00B0                             l2125 0F53  
                           l2047 0B98                             l2207 009E                             l2151 0DB0  
                           l2143 0D3B                             l2135 0D06                             l2119 0E6A  
                           l2055 0B7F                             l2071 00E1                             l2063 00B8  
                           l2127 0F67                             l2049 0BBC                             l2161 0DEA  
                           l2153 0DBD                             l2137 0D0A                             l1361 0AEB  
                           l2057 0B83                             l2081 0117                             l2073 00F4  
                           l2065 00C1                             l2129 0F7B                             l2171 000A  
                           l2163 0DEB                             l2155 0DC1                             l2147 0D9D  
                           l2139 0D21                             l2091 0172                             l2083 013D  
                           l2075 00FB                             l2067 00CA                             l2059 00A7  
                           l2181 0031                             l2173 000D                             l2165 0DF4  
                           l2157 0DCA                             l2149 0DAD                             l1381 0B04  
                           l2093 017B                             l2085 0141                             l2069 00DD  
                           l2077 0105                             l2501 0652                             l2191 0055  
                           l2183 0039                             l2175 0011                             l2159 0DDC  
                           l2167 0DFA                             l1391 0B1A                             l1383 0B07  
                           l2087 0158                             l2079 010E                             l2095 0185  
                           l2193 005E                             l2185 0041                             l2177 0022  
                           l1385 0AFB                             l1393 0B2D                             l1801 0C7E  
                           l2097 018E                             l2089 016B                             l1377 0B0D  
                           l2195 0070                             l2187 0044                             l2179 002D  
                           l1387 0AFE                             l1395 0B31                             l1811 0CA4  
                           l1803 0C80                             l2099 0197                             l1379 0B10  
                           l2197 007E                             l2189 0051                             l1389 0B16  
                           l1397 0B20                             l1813 0CAD                             l1805 0C8A  
                           l1821 0E08                             l2461 0257                             l2199 007F  
                           l1399 0B23                             l1815 0CB0                             l1807 0C96  
                           l1831 0E1C                             l1823 0E0D                             l1751 0B54  
                           l2471 0291                             l2463 025C                             l2455 0239  
                           l1761 0BC7                             l1809 0CA3                             l1841 0E32  
                           l1833 0E1E                             l1825 0E0F                             l1817 0E03  
                           l1921 0CBC                             l1753 0B59                             l2481 0378  
                           l2473 02A1                             l2465 0261                             l2457 0243  
                           l1771 0BE6                             l1763 0BCC                             l1851 0E55  
                           l1843 0E36                             l1835 0E24                             l1827 0E13  
                           l1819 0E04                             l1931 0CD4                             l1923 0CC2  
                           l1755 0B5F                             l2491 04E0                             l2483 03A9  
                           l2475 02D3                             l2467 0271                             l2459 0249  
                           l1781 0C3B                             l1773 0BEC                             l1765 0BD0  
                           l1845 0E47                             l1837 0E27                             l1853 0E5B  
                           l1829 0E18                             l1861 0D44                             l1933 0CE5  
                           l1925 0CC5                             l1941 0CF9                             l1757 0B65  
                           l2493 0542                             l2485 0439                             l2477 0309  
                           l2469 0281                             l1791 0C63                             l1783 0C3E  
                           l1775 0BF4                             l1767 0BDB                             l1855 0E60  
                           l1847 0E4D                             l1839 0E2E                             l1871 0D54  
                           l1863 0D45                             l1935 0CEB                             l1927 0CCC  
                           l1919 0CBA                             l1951 0C10                             l1759 0B6B  
                           l2495 05AA                             l2487 0472                             l2479 0341  
                           l1793 0C64                             l1785 0C40                             l1777 0BF9  
                           l1769 0BE1                             l1857 0E65                             l1849 0E4E  
                           l1881 0D6D                             l1873 0D59                             l1865 0D49  
                           l1937 0CEC                             l1929 0CD0                             l1961 0C2F  
                           l1953 0C14                             l1945 0C00                             l2497 0619  
                           l2489 04A8                             l1795 0C6D                             l1787 0C4A  
                           l1883 0D71                             l1875 0D5F                             l1891 0D8E  
                           l1867 0D4E                             l1939 0CF3                             l1955 0C18  
                           l1947 0C06                             l1963 0C35                             l2499 062D  
                           l1797 0C70                             l1789 0C56                             l1893 0D93  
                           l1885 0D7B                             l1877 0D62                             l1869 0D50  
                           l1957 0C22                             l1949 0C09                             l1799 0C7B  
                           l1895 0D98                             l1887 0D81                             l1879 0D69  
                           l1959 0C28                             l1889 0D88                             STR_1 0852  
                           u2110 0CE5                             u2111 0CE4                             u2105 0CD5  
                           u2130 0CF9                             u2131 0CF8                             u2115 0CE1  
                           u2140 0C06                             u2125 0CED                             u2141 0C05  
                           u2070 0CC2                             u2071 0CC1                             u2400 0B8F  
                           u2160 0C18                             u3200 03FF                             u2401 0B8E  
                           u2161 0C17                             u2090 0CD4                             u2170 0C22  
                           u2410 00B0                             u3210 0409                             u2091 0CD3  
                           u2171 0C21                             u2155 0C0A                             u2411 00AF  
                           u3211 040A                             u2420 00C1                             u2500 0FBA  
                           u3220 0512                             u3212 040F                             u2085 0CC6  
                           u2421 00C0                             u3221 0513                             u3213 0410  
                           u3205 03FA                             u2190 0C35                             u2430 00CA  
                           u2510 0FC4                             u3230 0559                             u3222 0518  
                           u2191 0C34                             u2175 0C1E                             u2431 00C9  
                           u2511 0FC5                             u3231 055C                             u3223 0519  
                           u2440 010E                             u2520 0FD6                             u2512 0FCA  
                           u3240 0591                             u3232 0563                             u2185 0C29  
                           u2441 010D                             u2521 0FD7                             u2513 0FCB  
                           u2505 0FB5                             u3233 0566                             u2610 0DC1  
                           u1810 0E08                             u2450 0117                             u2530 0FE7  
                           u2522 0FDC                             u2611 0DC0                             u1811 0E07  
                           u2451 0116                             u2523 0FDD                             u3251 05CD  
                           u2700 0055                             u2540 0D0A                             u2380 0B47  
                           u1900 0E60                             u1820 0E13                             u2460 018E  
                           u3260 0600                             u3252 05D0                             u3180 02B6  
                           u2701 0054                             u2605 0DB2                             u2541 0D09  
                           u2381 0B43                             u1805 0C99                             u1901 0E5F  
                           u1821 0E12                             u2461 018D                             u3253 05D7  
                           u3245 058C                             u3181 02B9                             u2630 0DDC  
                           u1830 0E24                             u1910 0D49                             u2470 0197  
                           u3270 062D                             u3254 05DA                             u3190 03ED  
                           u3182 02C0                             u2631 0DDB                             u2551 0D13  
                           u1831 0E23                             u1911 0D48                             u2471 0196  
                           u2535 0FE2                             u3271 062C                             u3255 05E1  
                           u3191 03EE                             u3183 02C3                             u2720 0070  
                           u2552 0D1A                             u1920 0D54                             u3280 0761  
                           u3256 05E4                             u3192 03F3                             u2721 006F  
                           u2625 0DC3                             u2553 0D21                             u1921 0D53  
                           u3281 0762                             u3273 0629                             u3265 05FB  
                           u3193 03F4                             u2650 0DFA                             u2394 0B4A  
                           u1850 0E36                             u1930 0D5F                             u2490 0FA9  
                           u3282 0767                             u2715 0057                             u2651 0DF9  
                           u2635 0DD8                             u1851 0E35                             u1931 0D5E  
                           u3283 0768                             u2740 008E                             u2660 0011  
                           u2580 0D3B                             u1780 0BDB                             u2741 008D  
                           u2725 006C                             u2661 0010                             u2645 0DEC  
                           u2581 0D3A                             u2565 0D23                             u1781 0BDA  
                           u1845 0E28                             u2485 0F38                             u2750 0093  
                           u2670 0022                             u2590 0DAD                             u1870 0E47  
                           u1950 0D71                             u2751 0092                             u2735 0080  
                           u2671 0021                             u2591 0DAC                             u2575 0D2B  
                           u1871 0E46                             u1951 0D70                             u2495 0FA4  
                           u2680 0041                             u1960 0D7B                             u2681 0040  
                           u1865 0E37                             u1961 0D7A                             u1945 0D63  
                           u1890 0E5B                             u1795 0C59                             u1891 0E5A  
                           u1875 0E43                             u3707 0251                             u1980 0D8E  
                           u1885 0E4F                             u1981 0D8D                             u1965 0D77  
                           u3717 0F4F                             u1990 0D93                             u3807 0C74  
                           u2695 0046                             u3727 0C85                             u1991 0D92  
                           u1975 0D82                             u3737 0C91                             u3747 0CA8  
                           _RCEN 048B                             u3757 0CB4                             u3767 0BC0  
                           u3777 0C45                             u3787 0C51                             u3797 0C68  
         show_multidigits@result 0022                             _RSEN 0489                             _main 0239  
                           _show 0B71                             btemp 007E                             start 0000  
               __end_of_LCD_Char 0CBA                     LCD_Char@data 0072                 __end_of_LCD_init 0BC6  
                __end_of___aldiv 00A7                            ?_main 0070                            _ACKEN 048C  
                          _ACKDT 048D                  __end_of___awdiv 0E6A                  __end_of___awmod 0D9D  
                          ?_show 0070                  __end_of___lldiv 0E03                  ___awdiv@divisor 0070  
                __end_of___lwdiv 0CFE                  __end_of___lwmod 0C3A                  ___awdiv@counter 0075  
        show_multidigits@result1 002A                            _PORTB 0006                            _SSPIF 0063  
            ___lmul@multiplicand 0074                            _errno 005B                            pclath 000A  
                          show@s 0074                   _bmp280_getdata 0E6A                            status 0003  
                          wtemp0 007E                   _bmp280_restart 0AFB                  __initialization 07DF  
                   __end_of_main 07DF                     __end_of_show 0B90                           ??_main 0039  
__size_of_uncompensated_pressure 00CD                           ??_show 0073                 ___awdiv@dividend 0072  
         __end_of_bmp280_getdata 0F33                           _SSPADD 0093                           _TRISC3 043B  
                         _TRISC4 043C                           _SSPCON 0014                           _SSPBUF 0013  
         __end_of_bmp280_restart 0B04                           ___lmul 0CFE                        ??___aldiv 007D  
                      ??___awdiv 0074                        ??___awmod 0074                        ??___lldiv 0078  
                      ??___lwdiv 0074                        ??___lwmod 0074                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075             __size_of_LCD_Command 0040  
            bmp280_read_byte@rec 0073                  ?_bmp280_getdata 0070        __size_of_show_multidigits 0192  
               __end_ofexp@coeff 082E                 __end_oflog@coeff 0852           _uncompensated_pressure 0F33  
                      ?_LCD_Char 0070          __end_of__initialization 07FC                        ?_LCD_init 0070  
                ?_bmp280_restart 0070                       _bmp280_nak 0B16                  _bmp280_waitmssp 0AEB  
                 __pcstackCOMMON 0070                     __pidataBANK0 0008        __size_of_bmp280_read_byte 003A  
                     __pbssBANK0 004B                       __pbssBANK1 00A0                    ??_bmp280_init 0070  
                  ??_bmp280_read 0070                    ??_bmp280_send 0070                    ??_bmp280_stop 0070  
      __size_of_bmp280_send_byte 001E                       ??_LCD_Char 0070                       ??_LCD_init 0073  
                     __pmaintext 0239                          ?___lmul 0070                          _ACKSTAT 048E  
                 ___lmul@product 0079                       __stringtab 0800              show_multidigits@val 0079  
        __end_of_bmp280_waitmssp 0AF3                      ?_bmp280_nak 0070              __end_of_bmp280_init 0B53  
            __end_of_bmp280_read 0B2C              __end_of_bmp280_send 0B3D              __end_of_bmp280_stop 0B0D  
                        ___aldiv 000A                          ___awdiv 0E03                  __size_of___lmul 0046  
                        ___awmod 0D44                          ___lldiv 0D9D                          ___lwdiv 0CBA  
                        ___lwmod 0C00                          __ptext1 0F33                          __ptext2 0B53  
                        __ptext3 0B0D                          __ptext4 00A7                          __ptext5 0C00  
                        __ptext6 0CBA                          __ptext7 0D44                          __ptext8 0E03  
                        __ptext9 0B71                 ___awmod@dividend 0072                 ___aldiv@dividend 0024  
                        clrloop0 0AF4             bmp280_read_byte@addr 0072             end_of_initialization 07FC  
               _show_multidigits 00A7                  ___lldiv@divisor 0070                  ___lldiv@counter 007D  
               ___aldiv@quotient 002A              __size_of_bmp280_nak 000A                 ??_bmp280_getdata 0074  
               _bmp280_read_byte 0BC6                        _TRISBbits 0086                        _TRISCbits 0087  
        ?_uncompensated_pressure 0070                 ??_bmp280_restart 0070                 _bmp280_send_byte 0B53  
                    _bmp280_init 0B3D                      _bmp280_read 0B20                      _bmp280_send 0B2C  
                    _bmp280_stop 0B04                 ?_bmp280_waitmssp 0070                __size_of_LCD_Char 0040  
              __size_of_LCD_init 0036                    ??_LCD_Command 0070                   __end_of___lmul 0D44  
            start_initialization 07DF                    ?_bmp280_start 0070   __end_of_uncompensated_pressure 1000  
                       ??___lmul 0078                      __pdataBANK0 006D              __end_of_LCD_Command 0C7A  
                 ??_bmp280_start 0070                        ___latbits 0002                    __pcstackBANK0 0020  
                   ??_bmp280_nak 0070                 ___lwdiv@dividend 0072                         ?___aldiv 0020  
                       ?___awdiv 0070                         ?___awmod 0070                         ?___lldiv 0070  
                       ?___lwdiv 0070                         ?___lwmod 0070         __end_of_show_multidigits 0239  
                      __pstrings 0800               __end_of_bmp280_nak 0B20                 ___lwdiv@quotient 0075  
                ___aldiv@divisor 0020                         _LCD_Char 0C7A                  ___aldiv@counter 0028  
                       _LCD_init 0B90                        clear_ram0 0AF3         __end_of_bmp280_read_byte 0C00  
                    _LCD_Command 0C3A         __end_of_bmp280_send_byte 0B71                      __stringbase 0805  
              ___lmul@multiplier 0070                     ?_bmp280_init 0070                     ?_bmp280_read 0070  
                   ?_bmp280_send 0070                     ?_bmp280_stop 0070                   bmp280_send@dat 0070  
           __end_of_bmp280_start 0B16                 __size_of___aldiv 009D                 __size_of___awdiv 0067  
               __size_of___awmod 0059                 __size_of___lldiv 0066                 __size_of___lwdiv 0044  
               __size_of___lwmod 003A               __end_of__stringtab 0806                         _main$959 0047  
                ___lwdiv@divisor 0070                  ___lwdiv@counter 0077                         __ptext10 0C7A  
                       __ptext11 0B3D                         __ptext20 0CFE                         __ptext12 0E6A  
                       __ptext21 0D9D                         __ptext13 0BC6                         __ptext22 000A  
                       __ptext14 0B04                         __ptext23 0B90                         __ptext15 0B2C  
                       __ptext24 0C3A                         __ptext16 0AFB                         __ptext17 0B20  
                       __ptext18 0B16                         __ptext19 0AEB                         _altitude 005F  
      uncompensated_pressure@ff6 002D        uncompensated_pressure@ff7 0031        uncompensated_pressure@ff8 0035  
                  __size_of_main 05A6                    __size_of_show 001F         __size_of_bmp280_waitmssp 0008  
                       exp@coeff 0806                         log@coeff 082E                  LCD_Command@cmnd 0072  
               ___lwmod@dividend 0072                 ___lldiv@dividend 0074          __size_of_bmp280_getdata 00C9  
                      stringcode 0800          __size_of_bmp280_restart 0009        show_multidigits@remainder 002C  
              ?_show_multidigits 0079               ??_show_multidigits 007B                 ___lldiv@quotient 0079  
                ___lwmod@divisor 0070                  ___lwmod@counter 0075                         stringdir 0800  
                       stringtab 0800                     ___aldiv@sign 0029            __size_of_bmp280_start 0009  
           __size_of_bmp280_init 0016             __size_of_bmp280_read 000C             __size_of_bmp280_send 0011  
           __size_of_bmp280_stop 0009                ?_bmp280_read_byte 0070  
