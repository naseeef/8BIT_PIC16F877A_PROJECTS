

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 08 17:06:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.40
    42                           ; Generated 17/11/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196                           
   197                           	psect	idataBANK0
   198  012C                     __pidataBANK0:
   199                           
   200                           ;initializer for _oss
   201  012C  3403               	retlw	3
   202  012D  3400               	retlw	0
   203  0006                     _PORTB	set	6
   204  0013                     _SSPBUF	set	19
   205  0014                     _SSPCON	set	20
   206  0039                     _RC1	set	57
   207  0038                     _RC0	set	56
   208  0063                     _SSPIF	set	99
   209  0087                     _TRISCbits	set	135
   210  0086                     _TRISBbits	set	134
   211  0093                     _SSPADD	set	147
   212  048B                     _RCEN	set	1163
   213  048E                     _ACKSTAT	set	1166
   214  048C                     _ACKEN	set	1164
   215  048D                     _ACKDT	set	1165
   216  0489                     _RSEN	set	1161
   217  048A                     _PEN	set	1162
   218  0488                     _SEN	set	1160
   219  043C                     _TRISC4	set	1084
   220  043B                     _TRISC3	set	1083
   221                           
   222                           	psect	strings
   223  0003                     __pstrings:
   224  0003                     stringtab:
   225  0003                     __stringtab:
   226  0003                     stringcode:	
   227                           ;	String table - string pointers are 1 byte each
   228                           
   229  0003                     stringdir:
   230  0003  3000               	movlw	high stringdir
   231  0004  008A               	movwf	10
   232  0005  0804               	movf	4,w
   233  0006  0A84               	incf	4,f
   234  0007  0782               	addwf	2,f
   235  0008                     __stringbase:
   236  0008  3400               	retlw	0
   237  0009                     __end_of__stringtab:
   238  0009                     STR_1:
   239  0009  3442               	retlw	66	;'B'
   240  000A  344D               	retlw	77	;'M'
   241  000B  3450               	retlw	80	;'P'
   242  000C  3432               	retlw	50	;'2'
   243  000D  3438               	retlw	56	;'8'
   244  000E  3430               	retlw	48	;'0'
   245  000F  3400               	retlw	0
   246                           
   247                           	psect	cinit
   248  07D4                     start_initialization:	
   249                           ; #config settings
   250                           
   251  07D4                     __initialization:
   252                           
   253                           ; Initialize objects allocated to BANK0
   254  07D4  120A  118A  212C  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   255  07D9  00EE               	movwf	__pdataBANK0& (0+127)
   256  07DA  120A  118A  212D  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   257  07DF  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   258                           
   259                           ; Clear objects allocated to BANK3
   260  07E0  1783               	bsf	3,7	;select IRP bank2
   261  07E1  3090               	movlw	low __pbssBANK3
   262  07E2  0084               	movwf	4
   263  07E3  30A4               	movlw	low (__pbssBANK3+20)
   264  07E4  120A  118A  2136  120A  118A  	fcall	clear_ram0
   265                           
   266                           ; Clear objects allocated to BANK1
   267  07E9  1383               	bcf	3,7	;select IRP bank0
   268  07EA  30A0               	movlw	low __pbssBANK1
   269  07EB  0084               	movwf	4
   270  07EC  30F0               	movlw	low (__pbssBANK1+80)
   271  07ED  120A  118A  2136  120A  118A  	fcall	clear_ram0
   272                           
   273                           ; Clear objects allocated to BANK0
   274  07F2  304F               	movlw	low __pbssBANK0
   275  07F3  0084               	movwf	4
   276  07F4  306E               	movlw	low (__pbssBANK0+31)
   277  07F5  120A  118A  2136  120A  118A  	fcall	clear_ram0
   278                           
   279                           ; Clear objects allocated to COMMON
   280  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   281  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   282  07FC                     end_of_initialization:	
   283                           ;End of C runtime variable initialization code
   284                           
   285  07FC                     __end_of__initialization:
   286  07FC  0183               	clrf	3
   287  07FD  120A  118A  2D23   	ljmp	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMMON
   290  007B                     __pbssCOMMON:
   291  007B                     _ac1:
   292  007B                     	ds	2
   293                           
   294                           	psect	bssBANK0
   295  004F                     __pbssBANK0:
   296  004F                     _up:
   297  004F                     	ds	4
   298  0053                     _ab:
   299  0053                     	ds	4
   300  0057                     _aa:
   301  0057                     	ds	4
   302  005B                     _avv:
   303  005B                     	ds	3
   304  005E                     _ac6:
   305  005E                     	ds	2
   306  0060                     _ac5:
   307  0060                     	ds	2
   308  0062                     _ac4:
   309  0062                     	ds	2
   310  0064                     _md:
   311  0064                     	ds	2
   312  0066                     _mc:
   313  0066                     	ds	2
   314  0068                     _mb:
   315  0068                     	ds	2
   316  006A                     _ac3:
   317  006A                     	ds	2
   318  006C                     _ac2:
   319  006C                     	ds	2
   320                           
   321                           	psect	dataBANK0
   322  006E                     __pdataBANK0:
   323  006E                     _oss:
   324  006E                     	ds	2
   325                           
   326                           	psect	bssBANK1
   327  00A0                     __pbssBANK1:
   328  00A0                     _b7:
   329  00A0                     	ds	4
   330  00A4                     _b4:
   331  00A4                     	ds	4
   332  00A8                     _bf:
   333  00A8                     	ds	4
   334  00AC                     _be:
   335  00AC                     	ds	4
   336  00B0                     _bd:
   337  00B0                     	ds	4
   338  00B4                     _bc:
   339  00B4                     	ds	4
   340  00B8                     _bb:
   341  00B8                     	ds	4
   342  00BC                     _ba:
   343  00BC                     	ds	4
   344  00C0                     _b9:
   345  00C0                     	ds	4
   346  00C4                     _b8:
   347  00C4                     	ds	4
   348  00C8                     _b6:
   349  00C8                     	ds	4
   350  00CC                     _b5:
   351  00CC                     	ds	4
   352  00D0                     _b3:
   353  00D0                     	ds	4
   354  00D4                     _b2:
   355  00D4                     	ds	4
   356  00D8                     _b1:
   357  00D8                     	ds	4
   358  00DC                     _b0:
   359  00DC                     	ds	4
   360  00E0                     _af:
   361  00E0                     	ds	4
   362  00E4                     _ae:
   363  00E4                     	ds	4
   364  00E8                     _ad:
   365  00E8                     	ds	4
   366  00EC                     _ac:
   367  00EC                     	ds	4
   368                           
   369                           	psect	bssBANK3
   370  0190                     __pbssBANK3:
   371  0190                     _t:
   372  0190                     	ds	4
   373  0194                     _p:
   374  0194                     	ds	4
   375  0198                     _x2:
   376  0198                     	ds	4
   377  019C                     _x1:
   378  019C                     	ds	4
   379  01A0                     _ut:
   380  01A0                     	ds	4
   381                           
   382                           	psect	clrtext
   383  0136                     clear_ram0:	
   384                           ;	Called with FSR containing the base address, and
   385                           ;	W with the last address+1
   386                           
   387  0136  0064               	clrwdt	;clear the watchdog before getting into this loop
   388  0137                     clrloop0:
   389  0137  0180               	clrf	0	;clear RAM location pointed to by FSR
   390  0138  0A84               	incf	4,f	;increment pointer
   391  0139  0604               	xorwf	4,w	;XOR with final address
   392  013A  1903               	btfsc	3,2	;have we reached the end yet?
   393  013B  3400               	retlw	0	;all done for this memory range, return
   394  013C  0604               	xorwf	4,w	;XOR again to restore value
   395  013D  2937               	goto	clrloop0	;do the next byte
   396                           
   397                           	psect	cstackCOMMON
   398  0070                     __pcstackCOMMON:
   399  0070                     ?_waitmssp:
   400  0070                     ??_waitmssp:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_i2c_init:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_i2c_init:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_i2c_start:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ??_i2c_start:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_i2c_stop:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_i2c_stop:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_i2c_restart:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_i2c_restart:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_i2c_nak:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_i2c_nak:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_i2c_send:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ??_i2c_send:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_i2c_read:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ??_i2c_read:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_i2c_read_byte:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_LCD_Command:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ??_LCD_Command:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_LCD_Char:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ??_LCD_Char:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_LCD_init:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_show:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_main:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?___awdiv:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?___awmod:	
   473                           ; 2 bytes @ 0x0
   474                           
   475  0070                     ?___lwdiv:	
   476                           ; 2 bytes @ 0x0
   477                           
   478  0070                     ?___lwmod:	
   479                           ; 2 bytes @ 0x0
   480                           
   481  0070                     ?___aldiv:	
   482                           ; 2 bytes @ 0x0
   483                           
   484  0070                     ?___almod:	
   485                           ; 4 bytes @ 0x0
   486                           
   487  0070                     i2c_send@dat:	
   488                           ; 4 bytes @ 0x0
   489                           
   490  0070                     ___awdiv@divisor:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ___awmod@divisor:	
   494                           ; 2 bytes @ 0x0
   495                           
   496  0070                     ___lwdiv@divisor:	
   497                           ; 2 bytes @ 0x0
   498                           
   499  0070                     ___lwmod@divisor:	
   500                           ; 2 bytes @ 0x0
   501                           
   502  0070                     ___aldiv@divisor:	
   503                           ; 2 bytes @ 0x0
   504                           
   505  0070                     ___almod@divisor:	
   506                           ; 4 bytes @ 0x0
   507                           
   508                           
   509                           ; 4 bytes @ 0x0
   510  0070                     	ds	1
   511  0071                     ?_i2c_send_byte:
   512  0071                     ??_i2c_read_byte:	
   513                           ; 1 bytes @ 0x1
   514                           
   515  0071                     i2c_send_byte@count:	
   516                           ; 1 bytes @ 0x1
   517                           
   518                           
   519                           ; 1 bytes @ 0x1
   520  0071                     	ds	1
   521  0072                     ??_i2c_send_byte:
   522  0072                     i2c_send_byte@addr:	
   523                           ; 1 bytes @ 0x2
   524                           
   525  0072                     i2c_read_byte@addr:	
   526                           ; 1 bytes @ 0x2
   527                           
   528  0072                     LCD_Command@cmnd:	
   529                           ; 1 bytes @ 0x2
   530                           
   531  0072                     LCD_Char@data:	
   532                           ; 1 bytes @ 0x2
   533                           
   534  0072                     ___awdiv@dividend:	
   535                           ; 1 bytes @ 0x2
   536                           
   537  0072                     ___awmod@dividend:	
   538                           ; 2 bytes @ 0x2
   539                           
   540  0072                     ___lwdiv@dividend:	
   541                           ; 2 bytes @ 0x2
   542                           
   543  0072                     ___lwmod@dividend:	
   544                           ; 2 bytes @ 0x2
   545                           
   546                           
   547                           ; 2 bytes @ 0x2
   548  0072                     	ds	1
   549  0073                     ??_LCD_init:
   550  0073                     ??_show:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     i2c_read_byte@rec:	
   554                           ; 1 bytes @ 0x3
   555                           
   556                           
   557                           ; 1 bytes @ 0x3
   558  0073                     	ds	1
   559  0074                     ??___awdiv:
   560  0074                     ??___awmod:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0074                     ??___lwdiv:	
   564                           ; 1 bytes @ 0x4
   565                           
   566  0074                     ??___lwmod:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0074                     show@s:	
   570                           ; 1 bytes @ 0x4
   571                           
   572  0074                     ___aldiv@dividend:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0074                     ___almod@dividend:	
   576                           ; 4 bytes @ 0x4
   577                           
   578                           
   579                           ; 4 bytes @ 0x4
   580  0074                     	ds	1
   581  0075                     ___awdiv@counter:
   582  0075                     ___awmod@counter:	
   583                           ; 1 bytes @ 0x5
   584                           
   585  0075                     ___lwmod@counter:	
   586                           ; 1 bytes @ 0x5
   587                           
   588  0075                     ___lwdiv@quotient:	
   589                           ; 1 bytes @ 0x5
   590                           
   591                           
   592                           ; 2 bytes @ 0x5
   593  0075                     	ds	1
   594  0076                     ___awdiv@sign:
   595  0076                     ___awmod@sign:	
   596                           ; 1 bytes @ 0x6
   597                           
   598                           
   599                           ; 1 bytes @ 0x6
   600  0076                     	ds	1
   601  0077                     ___lwdiv@counter:
   602  0077                     ___awdiv@quotient:	
   603                           ; 1 bytes @ 0x7
   604                           
   605                           
   606                           ; 2 bytes @ 0x7
   607  0077                     	ds	1
   608  0078                     ??___aldiv:
   609  0078                     ??___almod:	
   610                           ; 1 bytes @ 0x8
   611                           
   612                           
   613                           ; 1 bytes @ 0x8
   614  0078                     	ds	1
   615  0079                     ___almod@counter:
   616                           
   617                           ; 1 bytes @ 0x9
   618  0079                     	ds	1
   619  007A                     ___almod@sign:
   620                           
   621                           ; 1 bytes @ 0xA
   622  007A                     	ds	1
   623  007B                     ??_show_multidigits:
   624                           
   625                           	psect	cstackBANK0
   626  0020                     __pcstackBANK0:	
   627                           ; 1 bytes @ 0xB
   628                           
   629  0020                     ___aldiv@counter:
   630                           
   631                           ; 1 bytes @ 0x0
   632  0020                     	ds	1
   633  0021                     ___aldiv@sign:
   634                           
   635                           ; 1 bytes @ 0x1
   636  0021                     	ds	1
   637  0022                     ___aldiv@quotient:
   638                           
   639                           ; 4 bytes @ 0x2
   640  0022                     	ds	4
   641  0026                     ?_show_multidigits:
   642  0026                     show_multidigits@val:	
   643                           ; 1 bytes @ 0x6
   644                           
   645                           
   646                           ; 2 bytes @ 0x6
   647  0026                     	ds	2
   648  0028                     show_multidigits@digit4:
   649                           
   650                           ; 2 bytes @ 0x8
   651  0028                     	ds	2
   652  002A                     show_multidigits@result:
   653                           
   654                           ; 2 bytes @ 0xA
   655  002A                     	ds	2
   656  002C                     show_multidigits@digit3:
   657                           
   658                           ; 2 bytes @ 0xC
   659  002C                     	ds	2
   660  002E                     show_multidigits@digit1:
   661                           
   662                           ; 2 bytes @ 0xE
   663  002E                     	ds	2
   664  0030                     show_multidigits@digit2:
   665                           
   666                           ; 2 bytes @ 0x10
   667  0030                     	ds	2
   668  0032                     show_multidigits@result1:
   669                           
   670                           ; 2 bytes @ 0x12
   671  0032                     	ds	2
   672  0034                     show_multidigits@remainder:
   673                           
   674                           ; 2 bytes @ 0x14
   675  0034                     	ds	2
   676  0036                     ??_main:
   677                           
   678                           ; 1 bytes @ 0x16
   679  0036                     	ds	13
   680  0043                     main@ff6:
   681                           
   682                           ; 4 bytes @ 0x23
   683  0043                     	ds	4
   684  0047                     main@ff7:
   685                           
   686                           ; 4 bytes @ 0x27
   687  0047                     	ds	4
   688  004B                     main@ff8:
   689                           
   690                           ; 4 bytes @ 0x2B
   691  004B                     	ds	4
   692                           
   693                           	psect	maintext
   694  0523                     __pmaintext:	
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 13, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 24 in file "main_bmp280.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  ff8             4   43[BANK0 ] long 
   705 ;;  ff7             4   39[BANK0 ] long 
   706 ;;  ff6             4   35[BANK0 ] long 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : B00/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   716 ;;      Params:         0       0       0       0       0
   717 ;;      Locals:         0      12       0       0       0
   718 ;;      Temps:          0      13       0       0       0
   719 ;;      Totals:         0      25       0       0       0
   720 ;;Total ram usage:       25 bytes
   721 ;; Hardware stack levels required when called: 3
   722 ;; This function calls:
   723 ;;		_LCD_Command
   724 ;;		_LCD_init
   725 ;;		___aldiv
   726 ;;		___almod
   727 ;;		_i2c_init
   728 ;;		_i2c_read_byte
   729 ;;		_i2c_send_byte
   730 ;;		_show
   731 ;;		_show_multidigits
   732 ;; This function is called by:
   733 ;;		Startup code after reset
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           
   738                           ;psect for function _main
   739  0523                     _main:
   740  0523                     l1649:	
   741                           ;incstack = 0
   742                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   743                           
   744                           
   745                           ;main_bmp280.c: 26:     LCD_init();
   746  0523  120A  118A  21D3  120A  118A  	fcall	_LCD_init
   747                           
   748                           ;main_bmp280.c: 27:     i2c_init();
   749  0528  120A  118A  2180  120A  118A  	fcall	_i2c_init
   750  052D                     l1651:
   751                           
   752                           ;main_bmp280.c: 29:     show("BMP280");
   753  052D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   754  052E  120A  118A  21B4  120A  118A  	fcall	_show
   755  0533                     l1653:
   756                           
   757                           ;main_bmp280.c: 30:     _delay((unsigned long)((1000)*(12000000/4000.0)));
   758  0533  3010               	movlw	16
   759  0534  1283               	bcf	3,5	;RP0=0, select bank0
   760  0535  1303               	bcf	3,6	;RP1=0, select bank0
   761  0536  00B8               	movwf	??_main+2
   762  0537  3039               	movlw	57
   763  0538  00B7               	movwf	??_main+1
   764  0539  300D               	movlw	13
   765  053A  00B6               	movwf	??_main
   766  053B                     u1437:
   767  053B  0BB6               	decfsz	??_main,f
   768  053C  2D3B               	goto	u1437
   769  053D  0BB7               	decfsz	??_main+1,f
   770  053E  2D3B               	goto	u1437
   771  053F  0BB8               	decfsz	??_main+2,f
   772  0540  2D3B               	goto	u1437
   773  0541                     l1655:
   774                           
   775                           ;main_bmp280.c: 32:     {;main_bmp280.c: 37:         i2c_send_byte(0xf4,(0x34+(oss<<6)))
      +                          ;
   776  0541  30F4               	movlw	244
   777  0542  1283               	bcf	3,5	;RP0=0, select bank0
   778  0543  1303               	bcf	3,6	;RP1=0, select bank0
   779  0544  00B6               	movwf	??_main
   780  0545  0836               	movf	??_main,w
   781  0546  00F1               	movwf	i2c_send_byte@count
   782  0547  30F4               	movlw	244
   783  0548  120A  118A  2196  120A  118A  	fcall	_i2c_send_byte
   784  054D                     l1657:
   785                           
   786                           ;main_bmp280.c: 38:         _delay((unsigned long)((25)*(12000000/4000.0)));
   787  054D  3062               	movlw	98
   788  054E  1283               	bcf	3,5	;RP0=0, select bank0
   789  054F  1303               	bcf	3,6	;RP1=0, select bank0
   790  0550  00B7               	movwf	??_main+1
   791  0551  3065               	movlw	101
   792  0552  00B6               	movwf	??_main
   793  0553                     u1447:
   794  0553  0BB6               	decfsz	??_main,f
   795  0554  2D53               	goto	u1447
   796  0555  0BB7               	decfsz	??_main+1,f
   797  0556  2D53               	goto	u1447
   798  0557                     l1659:
   799                           
   800                           ;main_bmp280.c: 40:         long ff6=(i2c_read_byte(0xf6));
   801  0557  30F6               	movlw	246
   802  0558  120A  118A  2209  120A  118A  	fcall	_i2c_read_byte
   803  055D  1283               	bcf	3,5	;RP0=0, select bank0
   804  055E  1303               	bcf	3,6	;RP1=0, select bank0
   805  055F  00B6               	movwf	??_main
   806  0560  01B7               	clrf	??_main+1
   807  0561  01B8               	clrf	??_main+2
   808  0562  01B9               	clrf	??_main+3
   809  0563  0839               	movf	??_main+3,w
   810  0564  00C6               	movwf	main@ff6+3
   811  0565  0838               	movf	??_main+2,w
   812  0566  00C5               	movwf	main@ff6+2
   813  0567  0837               	movf	??_main+1,w
   814  0568  00C4               	movwf	main@ff6+1
   815  0569  0836               	movf	??_main,w
   816  056A  00C3               	movwf	main@ff6
   817  056B                     l1661:
   818                           
   819                           ;main_bmp280.c: 41:         long ff7=(i2c_read_byte(0xf7));
   820  056B  30F7               	movlw	247
   821  056C  120A  118A  2209  120A  118A  	fcall	_i2c_read_byte
   822  0571  1283               	bcf	3,5	;RP0=0, select bank0
   823  0572  1303               	bcf	3,6	;RP1=0, select bank0
   824  0573  00B6               	movwf	??_main
   825  0574  01B7               	clrf	??_main+1
   826  0575  01B8               	clrf	??_main+2
   827  0576  01B9               	clrf	??_main+3
   828  0577  0839               	movf	??_main+3,w
   829  0578  00CA               	movwf	main@ff7+3
   830  0579  0838               	movf	??_main+2,w
   831  057A  00C9               	movwf	main@ff7+2
   832  057B  0837               	movf	??_main+1,w
   833  057C  00C8               	movwf	main@ff7+1
   834  057D  0836               	movf	??_main,w
   835  057E  00C7               	movwf	main@ff7
   836  057F                     l1663:
   837                           
   838                           ;main_bmp280.c: 42:         long ff8=(i2c_read_byte(0xf8));
   839  057F  30F8               	movlw	248
   840  0580  120A  118A  2209  120A  118A  	fcall	_i2c_read_byte
   841  0585  1283               	bcf	3,5	;RP0=0, select bank0
   842  0586  1303               	bcf	3,6	;RP1=0, select bank0
   843  0587  00B6               	movwf	??_main
   844  0588  01B7               	clrf	??_main+1
   845  0589  01B8               	clrf	??_main+2
   846  058A  01B9               	clrf	??_main+3
   847  058B  0839               	movf	??_main+3,w
   848  058C  00CE               	movwf	main@ff8+3
   849  058D  0838               	movf	??_main+2,w
   850  058E  00CD               	movwf	main@ff8+2
   851  058F  0837               	movf	??_main+1,w
   852  0590  00CC               	movwf	main@ff8+1
   853  0591  0836               	movf	??_main,w
   854  0592  00CB               	movwf	main@ff8
   855  0593                     l1665:
   856                           
   857                           ;main_bmp280.c: 43:         up=(((ff6<<16)+(ff7<<8)+ff8)>>(8-oss));
   858  0593  084B               	movf	main@ff8,w
   859  0594  00B6               	movwf	??_main
   860  0595  084C               	movf	main@ff8+1,w
   861  0596  00B7               	movwf	??_main+1
   862  0597  084D               	movf	main@ff8+2,w
   863  0598  00B8               	movwf	??_main+2
   864  0599  084E               	movf	main@ff8+3,w
   865  059A  00B9               	movwf	??_main+3
   866  059B  0847               	movf	main@ff7,w
   867  059C  00BA               	movwf	??_main+4
   868  059D  0848               	movf	main@ff7+1,w
   869  059E  00BB               	movwf	??_main+5
   870  059F  0849               	movf	main@ff7+2,w
   871  05A0  00BC               	movwf	??_main+6
   872  05A1  084A               	movf	main@ff7+3,w
   873  05A2  00BD               	movwf	??_main+7
   874  05A3  3008               	movlw	8
   875  05A4                     u1385:
   876  05A4  1003               	clrc
   877  05A5  0DBA               	rlf	??_main+4,f
   878  05A6  0DBB               	rlf	??_main+5,f
   879  05A7  0DBC               	rlf	??_main+6,f
   880  05A8  0DBD               	rlf	??_main+7,f
   881  05A9                     u1380:
   882  05A9  3EFF               	addlw	-1
   883  05AA  1D03               	skipz
   884  05AB  2DA4               	goto	u1385
   885  05AC  0843               	movf	main@ff6,w
   886  05AD  00BE               	movwf	??_main+8
   887  05AE  0844               	movf	main@ff6+1,w
   888  05AF  00BF               	movwf	??_main+9
   889  05B0  0845               	movf	main@ff6+2,w
   890  05B1  00C0               	movwf	??_main+10
   891  05B2  0846               	movf	main@ff6+3,w
   892  05B3  00C1               	movwf	??_main+11
   893  05B4  3010               	movlw	16
   894  05B5                     u1395:
   895  05B5  1003               	clrc
   896  05B6  0DBE               	rlf	??_main+8,f
   897  05B7  0DBF               	rlf	??_main+9,f
   898  05B8  0DC0               	rlf	??_main+10,f
   899  05B9  0DC1               	rlf	??_main+11,f
   900  05BA                     u1390:
   901  05BA  3EFF               	addlw	-1
   902  05BB  1D03               	skipz
   903  05BC  2DB5               	goto	u1395
   904  05BD  083E               	movf	??_main+8,w
   905  05BE  07BA               	addwf	??_main+4,f
   906  05BF  083F               	movf	??_main+9,w
   907  05C0  1803               	skipnc
   908  05C1  0F3F               	incfsz	??_main+9,w
   909  05C2  2DC4               	goto	u1400
   910  05C3  2DC5               	goto	u1401
   911  05C4                     u1400:
   912  05C4  07BB               	addwf	??_main+5,f
   913  05C5                     u1401:
   914  05C5  0840               	movf	??_main+10,w
   915  05C6  1803               	skipnc
   916  05C7  0F40               	incfsz	??_main+10,w
   917  05C8  2DCA               	goto	u1402
   918  05C9  2DCB               	goto	u1403
   919  05CA                     u1402:
   920  05CA  07BC               	addwf	??_main+6,f
   921  05CB                     u1403:
   922  05CB  0841               	movf	??_main+11,w
   923  05CC  1803               	skipnc
   924  05CD  0A41               	incf	??_main+11,w
   925  05CE  07BD               	addwf	??_main+7,f
   926  05CF  083A               	movf	??_main+4,w
   927  05D0  07B6               	addwf	??_main,f
   928  05D1  083B               	movf	??_main+5,w
   929  05D2  1803               	skipnc
   930  05D3  0F3B               	incfsz	??_main+5,w
   931  05D4  2DD6               	goto	u1410
   932  05D5  2DD7               	goto	u1411
   933  05D6                     u1410:
   934  05D6  07B7               	addwf	??_main+1,f
   935  05D7                     u1411:
   936  05D7  083C               	movf	??_main+6,w
   937  05D8  1803               	skipnc
   938  05D9  0F3C               	incfsz	??_main+6,w
   939  05DA  2DDC               	goto	u1412
   940  05DB  2DDD               	goto	u1413
   941  05DC                     u1412:
   942  05DC  07B8               	addwf	??_main+2,f
   943  05DD                     u1413:
   944  05DD  083D               	movf	??_main+7,w
   945  05DE  1803               	skipnc
   946  05DF  0A3D               	incf	??_main+7,w
   947  05E0  07B9               	addwf	??_main+3,f
   948  05E1  3005               	movlw	5
   949  05E2  00C2               	movwf	??_main+12
   950  05E3                     u1425:
   951  05E3  0D39               	rlf	??_main+3,w
   952  05E4  0CB9               	rrf	??_main+3,f
   953  05E5  0CB8               	rrf	??_main+2,f
   954  05E6  0CB7               	rrf	??_main+1,f
   955  05E7  0CB6               	rrf	??_main,f
   956  05E8                     u1420:
   957  05E8  0BC2               	decfsz	??_main+12,f
   958  05E9  2DE3               	goto	u1425
   959  05EA  0839               	movf	??_main+3,w
   960  05EB  00D2               	movwf	_up+3
   961  05EC  0838               	movf	??_main+2,w
   962  05ED  00D1               	movwf	_up+2
   963  05EE  0837               	movf	??_main+1,w
   964  05EF  00D0               	movwf	_up+1
   965  05F0  0836               	movf	??_main,w
   966  05F1  00CF               	movwf	_up
   967  05F2                     l1667:
   968                           
   969                           ;main_bmp280.c: 45:         LCD_Command(0xC0);
   970  05F2  30C0               	movlw	192
   971  05F3  120A  118A  227D  120A  118A  	fcall	_LCD_Command
   972  05F8                     l1669:
   973                           
   974                           ;main_bmp280.c: 48:         show_multidigits((up/100));
   975  05F8  3000               	movlw	0
   976  05F9  00F3               	movwf	___aldiv@divisor+3
   977  05FA  3000               	movlw	0
   978  05FB  00F2               	movwf	___aldiv@divisor+2
   979  05FC  3000               	movlw	0
   980  05FD  00F1               	movwf	___aldiv@divisor+1
   981  05FE  3064               	movlw	100
   982  05FF  00F0               	movwf	___aldiv@divisor
   983  0600  1283               	bcf	3,5	;RP0=0, select bank0
   984  0601  1303               	bcf	3,6	;RP1=0, select bank0
   985  0602  0852               	movf	_up+3,w
   986  0603  00F7               	movwf	___aldiv@dividend+3
   987  0604  0851               	movf	_up+2,w
   988  0605  00F6               	movwf	___aldiv@dividend+2
   989  0606  0850               	movf	_up+1,w
   990  0607  00F5               	movwf	___aldiv@dividend+1
   991  0608  084F               	movf	_up,w
   992  0609  00F4               	movwf	___aldiv@dividend
   993  060A  120A  118A  2486  120A  118A  	fcall	___aldiv
   994  060F  0871               	movf	?___aldiv+1,w
   995  0610  1283               	bcf	3,5	;RP0=0, select bank0
   996  0611  1303               	bcf	3,6	;RP1=0, select bank0
   997  0612  00A7               	movwf	show_multidigits@val+1
   998  0613  0870               	movf	?___aldiv,w
   999  0614  00A6               	movwf	show_multidigits@val
  1000  0615  120A  118A  2640  120A  118A  	fcall	_show_multidigits
  1001  061A                     l1671:
  1002                           
  1003                           ;main_bmp280.c: 49:         show_multidigits((up%100));
  1004  061A  3000               	movlw	0
  1005  061B  00F3               	movwf	___almod@divisor+3
  1006  061C  3000               	movlw	0
  1007  061D  00F2               	movwf	___almod@divisor+2
  1008  061E  3000               	movlw	0
  1009  061F  00F1               	movwf	___almod@divisor+1
  1010  0620  3064               	movlw	100
  1011  0621  00F0               	movwf	___almod@divisor
  1012  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0624  0852               	movf	_up+3,w
  1015  0625  00F7               	movwf	___almod@dividend+3
  1016  0626  0851               	movf	_up+2,w
  1017  0627  00F6               	movwf	___almod@dividend+2
  1018  0628  0850               	movf	_up+1,w
  1019  0629  00F5               	movwf	___almod@dividend+1
  1020  062A  084F               	movf	_up,w
  1021  062B  00F4               	movwf	___almod@dividend
  1022  062C  120A  118A  2401  120A  118A  	fcall	___almod
  1023  0631  0871               	movf	?___almod+1,w
  1024  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0634  00A7               	movwf	show_multidigits@val+1
  1027  0635  0870               	movf	?___almod,w
  1028  0636  00A6               	movwf	show_multidigits@val
  1029  0637  120A  118A  2640  120A  118A  	fcall	_show_multidigits
  1030  063C  2D33               	goto	l1653
  1031  063D  120A  118A  2800   	ljmp	start
  1032  0640                     __end_of_main:
  1033                           
  1034                           	psect	text1
  1035  0640                     __ptext1:	
  1036 ;; *************** function _show_multidigits *****************
  1037 ;; Defined at:
  1038 ;;		line 93 in file "./lcd4bit.h"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  val             2    6[BANK0 ] unsigned int 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  remainder       2   20[BANK0 ] int 
  1043 ;;  result1         2   18[BANK0 ] int 
  1044 ;;  digit2          2   16[BANK0 ] int 
  1045 ;;  digit1          2   14[BANK0 ] int 
  1046 ;;  digit3          2   12[BANK0 ] int 
  1047 ;;  result          2   10[BANK0 ] int 
  1048 ;;  digit4          2    8[BANK0 ] int 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       2       0       0       0
  1059 ;;      Locals:         0      14       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         0      16       0       0       0
  1062 ;;Total ram usage:       16 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 1
  1065 ;; This function calls:
  1066 ;;		_LCD_Char
  1067 ;;		___awdiv
  1068 ;;		___awmod
  1069 ;;		___lwdiv
  1070 ;;		___lwmod
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _show_multidigits
  1078  0640                     _show_multidigits:
  1079  0640                     l1483:	
  1080                           ;incstack = 0
  1081                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  1082                           
  1083                           
  1084                           ;./lcd4bit.h: 93: void show_multidigits (unsigned int val);./lcd4bit.h: 94: {;./lcd4bit.
      +                          h: 95:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          96:     if (val<=9)
  1085  0640  3000               	movlw	0
  1086  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0643  0227               	subwf	show_multidigits@val+1,w
  1089  0644  300A               	movlw	10
  1090  0645  1903               	skipnz
  1091  0646  0226               	subwf	show_multidigits@val,w
  1092  0647  1803               	skipnc
  1093  0648  2E4A               	goto	u1121
  1094  0649  2E4B               	goto	u1120
  1095  064A                     u1121:
  1096  064A  2E53               	goto	l1487
  1097  064B                     u1120:
  1098  064B                     l1485:
  1099                           
  1100                           ;./lcd4bit.h: 97:     {;./lcd4bit.h: 98:        LCD_Char(val+0x30);
  1101  064B  0826               	movf	show_multidigits@val,w
  1102  064C  3E30               	addlw	48
  1103  064D  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1104                           
  1105                           ;./lcd4bit.h: 99:     }
  1106  0652  2FD3               	goto	l119
  1107  0653                     l1487:
  1108  0653  3000               	movlw	0
  1109  0654  0227               	subwf	show_multidigits@val+1,w
  1110  0655  300A               	movlw	10
  1111  0656  1903               	skipnz
  1112  0657  0226               	subwf	show_multidigits@val,w
  1113  0658  1C03               	skipc
  1114  0659  2E5B               	goto	u1131
  1115  065A  2E5C               	goto	u1130
  1116  065B                     u1131:
  1117  065B  2EA0               	goto	l1501
  1118  065C                     u1130:
  1119  065C                     l1489:
  1120  065C  3000               	movlw	0
  1121  065D  0227               	subwf	show_multidigits@val+1,w
  1122  065E  3064               	movlw	100
  1123  065F  1903               	skipnz
  1124  0660  0226               	subwf	show_multidigits@val,w
  1125  0661  1803               	skipnc
  1126  0662  2E64               	goto	u1141
  1127  0663  2E65               	goto	u1140
  1128  0664                     u1141:
  1129  0664  2EA0               	goto	l1501
  1130  0665                     u1140:
  1131  0665                     l1491:
  1132                           
  1133                           ;./lcd4bit.h: 101:     {;./lcd4bit.h: 102:         remainder = val % 10;
  1134  0665  300A               	movlw	10
  1135  0666  00F0               	movwf	___lwmod@divisor
  1136  0667  3000               	movlw	0
  1137  0668  00F1               	movwf	___lwmod@divisor+1
  1138  0669  0827               	movf	show_multidigits@val+1,w
  1139  066A  00F3               	movwf	___lwmod@dividend+1
  1140  066B  0826               	movf	show_multidigits@val,w
  1141  066C  00F2               	movwf	___lwmod@dividend
  1142  066D  120A  118A  2243  120A  118A  	fcall	___lwmod
  1143  0672  0871               	movf	?___lwmod+1,w
  1144  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0675  00B5               	movwf	show_multidigits@remainder+1
  1147  0676  0870               	movf	?___lwmod,w
  1148  0677  00B4               	movwf	show_multidigits@remainder
  1149  0678                     l1493:
  1150                           
  1151                           ;./lcd4bit.h: 103:         digit1 = remainder;
  1152  0678  0835               	movf	show_multidigits@remainder+1,w
  1153  0679  00AF               	movwf	show_multidigits@digit1+1
  1154  067A  0834               	movf	show_multidigits@remainder,w
  1155  067B  00AE               	movwf	show_multidigits@digit1
  1156  067C                     l1495:
  1157                           
  1158                           ;./lcd4bit.h: 104:         digit2 = val/10;
  1159  067C  300A               	movlw	10
  1160  067D  00F0               	movwf	___lwdiv@divisor
  1161  067E  3000               	movlw	0
  1162  067F  00F1               	movwf	___lwdiv@divisor+1
  1163  0680  0827               	movf	show_multidigits@val+1,w
  1164  0681  00F3               	movwf	___lwdiv@dividend+1
  1165  0682  0826               	movf	show_multidigits@val,w
  1166  0683  00F2               	movwf	___lwdiv@dividend
  1167  0684  120A  118A  22FD  120A  118A  	fcall	___lwdiv
  1168  0689  0871               	movf	?___lwdiv+1,w
  1169  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1170  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1171  068C  00B1               	movwf	show_multidigits@digit2+1
  1172  068D  0870               	movf	?___lwdiv,w
  1173  068E  00B0               	movwf	show_multidigits@digit2
  1174  068F                     l1497:
  1175                           
  1176                           ;./lcd4bit.h: 105:         LCD_Char(digit2+0x30);
  1177  068F  0830               	movf	show_multidigits@digit2,w
  1178  0690  3E30               	addlw	48
  1179  0691  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1180  0696                     l1499:
  1181                           
  1182                           ;./lcd4bit.h: 106:         LCD_Char(digit1+0x30);
  1183  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0698  082E               	movf	show_multidigits@digit1,w
  1186  0699  3E30               	addlw	48
  1187  069A  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1188                           
  1189                           ;./lcd4bit.h: 107:     }
  1190  069F  2FD3               	goto	l119
  1191  06A0                     l1501:
  1192  06A0  3000               	movlw	0
  1193  06A1  0227               	subwf	show_multidigits@val+1,w
  1194  06A2  3064               	movlw	100
  1195  06A3  1903               	skipnz
  1196  06A4  0226               	subwf	show_multidigits@val,w
  1197  06A5  1C03               	skipc
  1198  06A6  2EA8               	goto	u1151
  1199  06A7  2EA9               	goto	u1150
  1200  06A8                     u1151:
  1201  06A8  2F20               	goto	l1519
  1202  06A9                     u1150:
  1203  06A9                     l1503:
  1204  06A9  3003               	movlw	3
  1205  06AA  0227               	subwf	show_multidigits@val+1,w
  1206  06AB  30E8               	movlw	232
  1207  06AC  1903               	skipnz
  1208  06AD  0226               	subwf	show_multidigits@val,w
  1209  06AE  1803               	skipnc
  1210  06AF  2EB1               	goto	u1161
  1211  06B0  2EB2               	goto	u1160
  1212  06B1                     u1161:
  1213  06B1  2F20               	goto	l1519
  1214  06B2                     u1160:
  1215  06B2                     l1505:
  1216                           
  1217                           ;./lcd4bit.h: 109:     {;./lcd4bit.h: 110:         remainder = val % 10;
  1218  06B2  300A               	movlw	10
  1219  06B3  00F0               	movwf	___lwmod@divisor
  1220  06B4  3000               	movlw	0
  1221  06B5  00F1               	movwf	___lwmod@divisor+1
  1222  06B6  0827               	movf	show_multidigits@val+1,w
  1223  06B7  00F3               	movwf	___lwmod@dividend+1
  1224  06B8  0826               	movf	show_multidigits@val,w
  1225  06B9  00F2               	movwf	___lwmod@dividend
  1226  06BA  120A  118A  2243  120A  118A  	fcall	___lwmod
  1227  06BF  0871               	movf	?___lwmod+1,w
  1228  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1229  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1230  06C2  00B5               	movwf	show_multidigits@remainder+1
  1231  06C3  0870               	movf	?___lwmod,w
  1232  06C4  00B4               	movwf	show_multidigits@remainder
  1233                           
  1234                           ;./lcd4bit.h: 111:         result1 = val /10;
  1235  06C5  300A               	movlw	10
  1236  06C6  00F0               	movwf	___lwdiv@divisor
  1237  06C7  3000               	movlw	0
  1238  06C8  00F1               	movwf	___lwdiv@divisor+1
  1239  06C9  0827               	movf	show_multidigits@val+1,w
  1240  06CA  00F3               	movwf	___lwdiv@dividend+1
  1241  06CB  0826               	movf	show_multidigits@val,w
  1242  06CC  00F2               	movwf	___lwdiv@dividend
  1243  06CD  120A  118A  22FD  120A  118A  	fcall	___lwdiv
  1244  06D2  0871               	movf	?___lwdiv+1,w
  1245  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1246  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1247  06D5  00B3               	movwf	show_multidigits@result1+1
  1248  06D6  0870               	movf	?___lwdiv,w
  1249  06D7  00B2               	movwf	show_multidigits@result1
  1250  06D8                     l1507:
  1251                           
  1252                           ;./lcd4bit.h: 112:         digit1 = remainder;
  1253  06D8  0835               	movf	show_multidigits@remainder+1,w
  1254  06D9  00AF               	movwf	show_multidigits@digit1+1
  1255  06DA  0834               	movf	show_multidigits@remainder,w
  1256  06DB  00AE               	movwf	show_multidigits@digit1
  1257  06DC                     l1509:
  1258                           
  1259                           ;./lcd4bit.h: 113:         remainder = result1%10;
  1260  06DC  300A               	movlw	10
  1261  06DD  00F0               	movwf	___awmod@divisor
  1262  06DE  3000               	movlw	0
  1263  06DF  00F1               	movwf	___awmod@divisor+1
  1264  06E0  0833               	movf	show_multidigits@result1+1,w
  1265  06E1  00F3               	movwf	___awmod@dividend+1
  1266  06E2  0832               	movf	show_multidigits@result1,w
  1267  06E3  00F2               	movwf	___awmod@dividend
  1268  06E4  120A  118A  2341  120A  118A  	fcall	___awmod
  1269  06E9  0871               	movf	?___awmod+1,w
  1270  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1271  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1272  06EC  00B5               	movwf	show_multidigits@remainder+1
  1273  06ED  0870               	movf	?___awmod,w
  1274  06EE  00B4               	movwf	show_multidigits@remainder
  1275                           
  1276                           ;./lcd4bit.h: 114:         digit2 = remainder;
  1277  06EF  0835               	movf	show_multidigits@remainder+1,w
  1278  06F0  00B1               	movwf	show_multidigits@digit2+1
  1279  06F1  0834               	movf	show_multidigits@remainder,w
  1280  06F2  00B0               	movwf	show_multidigits@digit2
  1281  06F3                     l1511:
  1282                           
  1283                           ;./lcd4bit.h: 115:         digit3 = result1/10;
  1284  06F3  300A               	movlw	10
  1285  06F4  00F0               	movwf	___awdiv@divisor
  1286  06F5  3000               	movlw	0
  1287  06F6  00F1               	movwf	___awdiv@divisor+1
  1288  06F7  0833               	movf	show_multidigits@result1+1,w
  1289  06F8  00F3               	movwf	___awdiv@dividend+1
  1290  06F9  0832               	movf	show_multidigits@result1,w
  1291  06FA  00F2               	movwf	___awdiv@dividend
  1292  06FB  120A  118A  239A  120A  118A  	fcall	___awdiv
  1293  0700  0871               	movf	?___awdiv+1,w
  1294  0701  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0702  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0703  00AD               	movwf	show_multidigits@digit3+1
  1297  0704  0870               	movf	?___awdiv,w
  1298  0705  00AC               	movwf	show_multidigits@digit3
  1299  0706                     l1513:
  1300                           
  1301                           ;./lcd4bit.h: 116:         LCD_Char(digit3+0x30);
  1302  0706  082C               	movf	show_multidigits@digit3,w
  1303  0707  3E30               	addlw	48
  1304  0708  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1305  070D                     l1515:
  1306                           
  1307                           ;./lcd4bit.h: 117:         LCD_Char(digit2+0x30);
  1308  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1309  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1310  070F  0830               	movf	show_multidigits@digit2,w
  1311  0710  3E30               	addlw	48
  1312  0711  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1313  0716                     l1517:
  1314                           
  1315                           ;./lcd4bit.h: 118:         LCD_Char(digit1+0x30);
  1316  0716  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0717  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0718  082E               	movf	show_multidigits@digit1,w
  1319  0719  3E30               	addlw	48
  1320  071A  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1321                           
  1322                           ;./lcd4bit.h: 119:     }
  1323  071F  2FD3               	goto	l119
  1324  0720                     l1519:
  1325  0720  3003               	movlw	3
  1326  0721  0227               	subwf	show_multidigits@val+1,w
  1327  0722  30E8               	movlw	232
  1328  0723  1903               	skipnz
  1329  0724  0226               	subwf	show_multidigits@val,w
  1330  0725  1C03               	skipc
  1331  0726  2F28               	goto	u1171
  1332  0727  2F29               	goto	u1170
  1333  0728                     u1171:
  1334  0728  2FD3               	goto	l115
  1335  0729                     u1170:
  1336  0729                     l1521:
  1337  0729  3027               	movlw	39
  1338  072A  0227               	subwf	show_multidigits@val+1,w
  1339  072B  300F               	movlw	15
  1340  072C  1903               	skipnz
  1341  072D  0226               	subwf	show_multidigits@val,w
  1342  072E  1803               	skipnc
  1343  072F  2F31               	goto	u1181
  1344  0730  2F32               	goto	u1180
  1345  0731                     u1181:
  1346  0731  2FD3               	goto	l115
  1347  0732                     u1180:
  1348  0732                     l1523:
  1349                           
  1350                           ;./lcd4bit.h: 121:     {;./lcd4bit.h: 122:         remainder = val % 10;
  1351  0732  300A               	movlw	10
  1352  0733  00F0               	movwf	___lwmod@divisor
  1353  0734  3000               	movlw	0
  1354  0735  00F1               	movwf	___lwmod@divisor+1
  1355  0736  0827               	movf	show_multidigits@val+1,w
  1356  0737  00F3               	movwf	___lwmod@dividend+1
  1357  0738  0826               	movf	show_multidigits@val,w
  1358  0739  00F2               	movwf	___lwmod@dividend
  1359  073A  120A  118A  2243  120A  118A  	fcall	___lwmod
  1360  073F  0871               	movf	?___lwmod+1,w
  1361  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0742  00B5               	movwf	show_multidigits@remainder+1
  1364  0743  0870               	movf	?___lwmod,w
  1365  0744  00B4               	movwf	show_multidigits@remainder
  1366                           
  1367                           ;./lcd4bit.h: 123:         result1 = val /10;
  1368  0745  300A               	movlw	10
  1369  0746  00F0               	movwf	___lwdiv@divisor
  1370  0747  3000               	movlw	0
  1371  0748  00F1               	movwf	___lwdiv@divisor+1
  1372  0749  0827               	movf	show_multidigits@val+1,w
  1373  074A  00F3               	movwf	___lwdiv@dividend+1
  1374  074B  0826               	movf	show_multidigits@val,w
  1375  074C  00F2               	movwf	___lwdiv@dividend
  1376  074D  120A  118A  22FD  120A  118A  	fcall	___lwdiv
  1377  0752  0871               	movf	?___lwdiv+1,w
  1378  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0755  00B3               	movwf	show_multidigits@result1+1
  1381  0756  0870               	movf	?___lwdiv,w
  1382  0757  00B2               	movwf	show_multidigits@result1
  1383  0758                     l1525:
  1384                           
  1385                           ;./lcd4bit.h: 124:         digit1 = remainder;
  1386  0758  0835               	movf	show_multidigits@remainder+1,w
  1387  0759  00AF               	movwf	show_multidigits@digit1+1
  1388  075A  0834               	movf	show_multidigits@remainder,w
  1389  075B  00AE               	movwf	show_multidigits@digit1
  1390  075C                     l1527:
  1391                           
  1392                           ;./lcd4bit.h: 125:         remainder = result1%10;
  1393  075C  300A               	movlw	10
  1394  075D  00F0               	movwf	___awmod@divisor
  1395  075E  3000               	movlw	0
  1396  075F  00F1               	movwf	___awmod@divisor+1
  1397  0760  0833               	movf	show_multidigits@result1+1,w
  1398  0761  00F3               	movwf	___awmod@dividend+1
  1399  0762  0832               	movf	show_multidigits@result1,w
  1400  0763  00F2               	movwf	___awmod@dividend
  1401  0764  120A  118A  2341  120A  118A  	fcall	___awmod
  1402  0769  0871               	movf	?___awmod+1,w
  1403  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1404  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1405  076C  00B5               	movwf	show_multidigits@remainder+1
  1406  076D  0870               	movf	?___awmod,w
  1407  076E  00B4               	movwf	show_multidigits@remainder
  1408                           
  1409                           ;./lcd4bit.h: 126:         digit2 = remainder;
  1410  076F  0835               	movf	show_multidigits@remainder+1,w
  1411  0770  00B1               	movwf	show_multidigits@digit2+1
  1412  0771  0834               	movf	show_multidigits@remainder,w
  1413  0772  00B0               	movwf	show_multidigits@digit2
  1414  0773                     l1529:
  1415                           
  1416                           ;./lcd4bit.h: 127:         result = result1/10;
  1417  0773  300A               	movlw	10
  1418  0774  00F0               	movwf	___awdiv@divisor
  1419  0775  3000               	movlw	0
  1420  0776  00F1               	movwf	___awdiv@divisor+1
  1421  0777  0833               	movf	show_multidigits@result1+1,w
  1422  0778  00F3               	movwf	___awdiv@dividend+1
  1423  0779  0832               	movf	show_multidigits@result1,w
  1424  077A  00F2               	movwf	___awdiv@dividend
  1425  077B  120A  118A  239A  120A  118A  	fcall	___awdiv
  1426  0780  0871               	movf	?___awdiv+1,w
  1427  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0783  00AB               	movwf	show_multidigits@result+1
  1430  0784  0870               	movf	?___awdiv,w
  1431  0785  00AA               	movwf	show_multidigits@result
  1432  0786                     l1531:
  1433                           
  1434                           ;./lcd4bit.h: 128:         remainder = result%10;
  1435  0786  300A               	movlw	10
  1436  0787  00F0               	movwf	___awmod@divisor
  1437  0788  3000               	movlw	0
  1438  0789  00F1               	movwf	___awmod@divisor+1
  1439  078A  082B               	movf	show_multidigits@result+1,w
  1440  078B  00F3               	movwf	___awmod@dividend+1
  1441  078C  082A               	movf	show_multidigits@result,w
  1442  078D  00F2               	movwf	___awmod@dividend
  1443  078E  120A  118A  2341  120A  118A  	fcall	___awmod
  1444  0793  0871               	movf	?___awmod+1,w
  1445  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0796  00B5               	movwf	show_multidigits@remainder+1
  1448  0797  0870               	movf	?___awmod,w
  1449  0798  00B4               	movwf	show_multidigits@remainder
  1450                           
  1451                           ;./lcd4bit.h: 129:         digit3=remainder;
  1452  0799  0835               	movf	show_multidigits@remainder+1,w
  1453  079A  00AD               	movwf	show_multidigits@digit3+1
  1454  079B  0834               	movf	show_multidigits@remainder,w
  1455  079C  00AC               	movwf	show_multidigits@digit3
  1456  079D                     l1533:
  1457                           
  1458                           ;./lcd4bit.h: 130:         digit4 = result/10;
  1459  079D  300A               	movlw	10
  1460  079E  00F0               	movwf	___awdiv@divisor
  1461  079F  3000               	movlw	0
  1462  07A0  00F1               	movwf	___awdiv@divisor+1
  1463  07A1  082B               	movf	show_multidigits@result+1,w
  1464  07A2  00F3               	movwf	___awdiv@dividend+1
  1465  07A3  082A               	movf	show_multidigits@result,w
  1466  07A4  00F2               	movwf	___awdiv@dividend
  1467  07A5  120A  118A  239A  120A  118A  	fcall	___awdiv
  1468  07AA  0871               	movf	?___awdiv+1,w
  1469  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1470  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1471  07AD  00A9               	movwf	show_multidigits@digit4+1
  1472  07AE  0870               	movf	?___awdiv,w
  1473  07AF  00A8               	movwf	show_multidigits@digit4
  1474  07B0                     l1535:
  1475                           
  1476                           ;./lcd4bit.h: 131:         LCD_Char(digit4+0x30);
  1477  07B0  0828               	movf	show_multidigits@digit4,w
  1478  07B1  3E30               	addlw	48
  1479  07B2  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1480  07B7                     l1537:
  1481                           
  1482                           ;./lcd4bit.h: 132:         LCD_Char(digit3+0x30);
  1483  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1484  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1485  07B9  082C               	movf	show_multidigits@digit3,w
  1486  07BA  3E30               	addlw	48
  1487  07BB  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1488  07C0                     l1539:
  1489                           
  1490                           ;./lcd4bit.h: 133:         LCD_Char(digit2+0x30);
  1491  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1492  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1493  07C2  0830               	movf	show_multidigits@digit2,w
  1494  07C3  3E30               	addlw	48
  1495  07C4  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1496  07C9                     l1541:
  1497                           
  1498                           ;./lcd4bit.h: 134:         LCD_Char(digit1+0x30);
  1499  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1500  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1501  07CB  082E               	movf	show_multidigits@digit1,w
  1502  07CC  3E30               	addlw	48
  1503  07CD  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  1504  07D2  2FD3               	goto	l119
  1505  07D3                     l115:
  1506  07D3                     l119:
  1507  07D3  0008               	return
  1508  07D4                     __end_of_show_multidigits:
  1509                           
  1510                           	psect	text2
  1511  0243                     __ptext2:	
  1512 ;; *************** function ___lwmod *****************
  1513 ;; Defined at:
  1514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  divisor         2    0[COMMON] unsigned int 
  1517 ;;  dividend        2    2[COMMON] unsigned int 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  counter         1    5[COMMON] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2    0[COMMON] unsigned int 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         4       0       0       0       0
  1530 ;;      Locals:         1       0       0       0       0
  1531 ;;      Temps:          1       0       0       0       0
  1532 ;;      Totals:         6       0       0       0       0
  1533 ;;Total ram usage:        6 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_show_multidigits
  1539 ;;		_LCD_num
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function ___lwmod
  1545  0243                     ___lwmod:
  1546  0243                     l1413:	
  1547                           ;incstack = 0
  1548                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1549                           
  1550  0243  0870               	movf	___lwmod@divisor,w
  1551  0244  0471               	iorwf	___lwmod@divisor+1,w
  1552  0245  1903               	btfsc	3,2
  1553  0246  2A48               	goto	u1021
  1554  0247  2A49               	goto	u1020
  1555  0248                     u1021:
  1556  0248  2A78               	goto	l1431
  1557  0249                     u1020:
  1558  0249                     l1415:
  1559  0249  01F5               	clrf	___lwmod@counter
  1560  024A  0AF5               	incf	___lwmod@counter,f
  1561  024B  2A57               	goto	l1421
  1562  024C                     l1417:
  1563  024C  3001               	movlw	1
  1564  024D                     u1035:
  1565  024D  1003               	clrc
  1566  024E  0DF0               	rlf	___lwmod@divisor,f
  1567  024F  0DF1               	rlf	___lwmod@divisor+1,f
  1568  0250  3EFF               	addlw	-1
  1569  0251  1D03               	skipz
  1570  0252  2A4D               	goto	u1035
  1571  0253                     l1419:
  1572  0253  3001               	movlw	1
  1573  0254  00F4               	movwf	??___lwmod
  1574  0255  0874               	movf	??___lwmod,w
  1575  0256  07F5               	addwf	___lwmod@counter,f
  1576  0257                     l1421:
  1577  0257  1FF1               	btfss	___lwmod@divisor+1,7
  1578  0258  2A5A               	goto	u1041
  1579  0259  2A5B               	goto	u1040
  1580  025A                     u1041:
  1581  025A  2A4C               	goto	l1417
  1582  025B                     u1040:
  1583  025B                     l1423:
  1584  025B  0871               	movf	___lwmod@divisor+1,w
  1585  025C  0273               	subwf	___lwmod@dividend+1,w
  1586  025D  1D03               	skipz
  1587  025E  2A61               	goto	u1055
  1588  025F  0870               	movf	___lwmod@divisor,w
  1589  0260  0272               	subwf	___lwmod@dividend,w
  1590  0261                     u1055:
  1591  0261  1C03               	skipc
  1592  0262  2A64               	goto	u1051
  1593  0263  2A65               	goto	u1050
  1594  0264                     u1051:
  1595  0264  2A6B               	goto	l1427
  1596  0265                     u1050:
  1597  0265                     l1425:
  1598  0265  0870               	movf	___lwmod@divisor,w
  1599  0266  02F2               	subwf	___lwmod@dividend,f
  1600  0267  0871               	movf	___lwmod@divisor+1,w
  1601  0268  1C03               	skipc
  1602  0269  03F3               	decf	___lwmod@dividend+1,f
  1603  026A  02F3               	subwf	___lwmod@dividend+1,f
  1604  026B                     l1427:
  1605  026B  3001               	movlw	1
  1606  026C                     u1065:
  1607  026C  1003               	clrc
  1608  026D  0CF1               	rrf	___lwmod@divisor+1,f
  1609  026E  0CF0               	rrf	___lwmod@divisor,f
  1610  026F  3EFF               	addlw	-1
  1611  0270  1D03               	skipz
  1612  0271  2A6C               	goto	u1065
  1613  0272                     l1429:
  1614  0272  3001               	movlw	1
  1615  0273  02F5               	subwf	___lwmod@counter,f
  1616  0274  1D03               	btfss	3,2
  1617  0275  2A77               	goto	u1071
  1618  0276  2A78               	goto	u1070
  1619  0277                     u1071:
  1620  0277  2A5B               	goto	l1423
  1621  0278                     u1070:
  1622  0278                     l1431:
  1623  0278  0873               	movf	___lwmod@dividend+1,w
  1624  0279  00F1               	movwf	?___lwmod+1
  1625  027A  0872               	movf	___lwmod@dividend,w
  1626  027B  00F0               	movwf	?___lwmod
  1627  027C                     l577:
  1628  027C  0008               	return
  1629  027D                     __end_of___lwmod:
  1630                           
  1631                           	psect	text3
  1632  02FD                     __ptext3:	
  1633 ;; *************** function ___lwdiv *****************
  1634 ;; Defined at:
  1635 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  divisor         2    0[COMMON] unsigned int 
  1638 ;;  dividend        2    2[COMMON] unsigned int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  quotient        2    5[COMMON] unsigned int 
  1641 ;;  counter         1    7[COMMON] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2    0[COMMON] unsigned int 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         4       0       0       0       0
  1652 ;;      Locals:         3       0       0       0       0
  1653 ;;      Temps:          1       0       0       0       0
  1654 ;;      Totals:         8       0       0       0       0
  1655 ;;Total ram usage:        8 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_show_multidigits
  1661 ;;		_LCD_num
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           
  1666                           ;psect for function ___lwdiv
  1667  02FD                     ___lwdiv:
  1668  02FD                     l1387:	
  1669                           ;incstack = 0
  1670                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1671                           
  1672  02FD  01F5               	clrf	___lwdiv@quotient
  1673  02FE  01F6               	clrf	___lwdiv@quotient+1
  1674  02FF                     l1389:
  1675  02FF  0870               	movf	___lwdiv@divisor,w
  1676  0300  0471               	iorwf	___lwdiv@divisor+1,w
  1677  0301  1903               	btfsc	3,2
  1678  0302  2B04               	goto	u951
  1679  0303  2B05               	goto	u950
  1680  0304                     u951:
  1681  0304  2B3C               	goto	l1409
  1682  0305                     u950:
  1683  0305                     l1391:
  1684  0305  01F7               	clrf	___lwdiv@counter
  1685  0306  0AF7               	incf	___lwdiv@counter,f
  1686  0307  2B13               	goto	l1397
  1687  0308                     l1393:
  1688  0308  3001               	movlw	1
  1689  0309                     u965:
  1690  0309  1003               	clrc
  1691  030A  0DF0               	rlf	___lwdiv@divisor,f
  1692  030B  0DF1               	rlf	___lwdiv@divisor+1,f
  1693  030C  3EFF               	addlw	-1
  1694  030D  1D03               	skipz
  1695  030E  2B09               	goto	u965
  1696  030F                     l1395:
  1697  030F  3001               	movlw	1
  1698  0310  00F4               	movwf	??___lwdiv
  1699  0311  0874               	movf	??___lwdiv,w
  1700  0312  07F7               	addwf	___lwdiv@counter,f
  1701  0313                     l1397:
  1702  0313  1FF1               	btfss	___lwdiv@divisor+1,7
  1703  0314  2B16               	goto	u971
  1704  0315  2B17               	goto	u970
  1705  0316                     u971:
  1706  0316  2B08               	goto	l1393
  1707  0317                     u970:
  1708  0317                     l1399:
  1709  0317  3001               	movlw	1
  1710  0318                     u985:
  1711  0318  1003               	clrc
  1712  0319  0DF5               	rlf	___lwdiv@quotient,f
  1713  031A  0DF6               	rlf	___lwdiv@quotient+1,f
  1714  031B  3EFF               	addlw	-1
  1715  031C  1D03               	skipz
  1716  031D  2B18               	goto	u985
  1717  031E  0871               	movf	___lwdiv@divisor+1,w
  1718  031F  0273               	subwf	___lwdiv@dividend+1,w
  1719  0320  1D03               	skipz
  1720  0321  2B24               	goto	u995
  1721  0322  0870               	movf	___lwdiv@divisor,w
  1722  0323  0272               	subwf	___lwdiv@dividend,w
  1723  0324                     u995:
  1724  0324  1C03               	skipc
  1725  0325  2B27               	goto	u991
  1726  0326  2B28               	goto	u990
  1727  0327                     u991:
  1728  0327  2B2F               	goto	l1405
  1729  0328                     u990:
  1730  0328                     l1401:
  1731  0328  0870               	movf	___lwdiv@divisor,w
  1732  0329  02F2               	subwf	___lwdiv@dividend,f
  1733  032A  0871               	movf	___lwdiv@divisor+1,w
  1734  032B  1C03               	skipc
  1735  032C  03F3               	decf	___lwdiv@dividend+1,f
  1736  032D  02F3               	subwf	___lwdiv@dividend+1,f
  1737  032E                     l1403:
  1738  032E  1475               	bsf	___lwdiv@quotient,0
  1739  032F                     l1405:
  1740  032F  3001               	movlw	1
  1741  0330                     u1005:
  1742  0330  1003               	clrc
  1743  0331  0CF1               	rrf	___lwdiv@divisor+1,f
  1744  0332  0CF0               	rrf	___lwdiv@divisor,f
  1745  0333  3EFF               	addlw	-1
  1746  0334  1D03               	skipz
  1747  0335  2B30               	goto	u1005
  1748  0336                     l1407:
  1749  0336  3001               	movlw	1
  1750  0337  02F7               	subwf	___lwdiv@counter,f
  1751  0338  1D03               	btfss	3,2
  1752  0339  2B3B               	goto	u1011
  1753  033A  2B3C               	goto	u1010
  1754  033B                     u1011:
  1755  033B  2B17               	goto	l1399
  1756  033C                     u1010:
  1757  033C                     l1409:
  1758  033C  0876               	movf	___lwdiv@quotient+1,w
  1759  033D  00F1               	movwf	?___lwdiv+1
  1760  033E  0875               	movf	___lwdiv@quotient,w
  1761  033F  00F0               	movwf	?___lwdiv
  1762  0340                     l567:
  1763  0340  0008               	return
  1764  0341                     __end_of___lwdiv:
  1765                           
  1766                           	psect	text4
  1767  0341                     __ptext4:	
  1768 ;; *************** function ___awmod *****************
  1769 ;; Defined at:
  1770 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  divisor         2    0[COMMON] int 
  1773 ;;  dividend        2    2[COMMON] int 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  sign            1    6[COMMON] unsigned char 
  1776 ;;  counter         1    5[COMMON] unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  2    0[COMMON] int 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         4       0       0       0       0
  1787 ;;      Locals:         2       0       0       0       0
  1788 ;;      Temps:          1       0       0       0       0
  1789 ;;      Totals:         7       0       0       0       0
  1790 ;;Total ram usage:        7 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_show_multidigits
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function ___awmod
  1801  0341                     ___awmod:
  1802  0341                     l1349:	
  1803                           ;incstack = 0
  1804                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1805                           
  1806  0341  01F6               	clrf	___awmod@sign
  1807  0342                     l1351:
  1808  0342  1FF3               	btfss	___awmod@dividend+1,7
  1809  0343  2B45               	goto	u861
  1810  0344  2B46               	goto	u860
  1811  0345                     u861:
  1812  0345  2B4D               	goto	l1357
  1813  0346                     u860:
  1814  0346                     l1353:
  1815  0346  09F2               	comf	___awmod@dividend,f
  1816  0347  09F3               	comf	___awmod@dividend+1,f
  1817  0348  0AF2               	incf	___awmod@dividend,f
  1818  0349  1903               	skipnz
  1819  034A  0AF3               	incf	___awmod@dividend+1,f
  1820  034B                     l1355:
  1821  034B  01F6               	clrf	___awmod@sign
  1822  034C  0AF6               	incf	___awmod@sign,f
  1823  034D                     l1357:
  1824  034D  1FF1               	btfss	___awmod@divisor+1,7
  1825  034E  2B50               	goto	u871
  1826  034F  2B51               	goto	u870
  1827  0350                     u871:
  1828  0350  2B56               	goto	l1361
  1829  0351                     u870:
  1830  0351                     l1359:
  1831  0351  09F0               	comf	___awmod@divisor,f
  1832  0352  09F1               	comf	___awmod@divisor+1,f
  1833  0353  0AF0               	incf	___awmod@divisor,f
  1834  0354  1903               	skipnz
  1835  0355  0AF1               	incf	___awmod@divisor+1,f
  1836  0356                     l1361:
  1837  0356  0870               	movf	___awmod@divisor,w
  1838  0357  0471               	iorwf	___awmod@divisor+1,w
  1839  0358  1903               	btfsc	3,2
  1840  0359  2B5B               	goto	u881
  1841  035A  2B5C               	goto	u880
  1842  035B                     u881:
  1843  035B  2B8B               	goto	l1379
  1844  035C                     u880:
  1845  035C                     l1363:
  1846  035C  01F5               	clrf	___awmod@counter
  1847  035D  0AF5               	incf	___awmod@counter,f
  1848  035E  2B6A               	goto	l1369
  1849  035F                     l1365:
  1850  035F  3001               	movlw	1
  1851  0360                     u895:
  1852  0360  1003               	clrc
  1853  0361  0DF0               	rlf	___awmod@divisor,f
  1854  0362  0DF1               	rlf	___awmod@divisor+1,f
  1855  0363  3EFF               	addlw	-1
  1856  0364  1D03               	skipz
  1857  0365  2B60               	goto	u895
  1858  0366                     l1367:
  1859  0366  3001               	movlw	1
  1860  0367  00F4               	movwf	??___awmod
  1861  0368  0874               	movf	??___awmod,w
  1862  0369  07F5               	addwf	___awmod@counter,f
  1863  036A                     l1369:
  1864  036A  1FF1               	btfss	___awmod@divisor+1,7
  1865  036B  2B6D               	goto	u901
  1866  036C  2B6E               	goto	u900
  1867  036D                     u901:
  1868  036D  2B5F               	goto	l1365
  1869  036E                     u900:
  1870  036E                     l1371:
  1871  036E  0871               	movf	___awmod@divisor+1,w
  1872  036F  0273               	subwf	___awmod@dividend+1,w
  1873  0370  1D03               	skipz
  1874  0371  2B74               	goto	u915
  1875  0372  0870               	movf	___awmod@divisor,w
  1876  0373  0272               	subwf	___awmod@dividend,w
  1877  0374                     u915:
  1878  0374  1C03               	skipc
  1879  0375  2B77               	goto	u911
  1880  0376  2B78               	goto	u910
  1881  0377                     u911:
  1882  0377  2B7E               	goto	l1375
  1883  0378                     u910:
  1884  0378                     l1373:
  1885  0378  0870               	movf	___awmod@divisor,w
  1886  0379  02F2               	subwf	___awmod@dividend,f
  1887  037A  0871               	movf	___awmod@divisor+1,w
  1888  037B  1C03               	skipc
  1889  037C  03F3               	decf	___awmod@dividend+1,f
  1890  037D  02F3               	subwf	___awmod@dividend+1,f
  1891  037E                     l1375:
  1892  037E  3001               	movlw	1
  1893  037F                     u925:
  1894  037F  1003               	clrc
  1895  0380  0CF1               	rrf	___awmod@divisor+1,f
  1896  0381  0CF0               	rrf	___awmod@divisor,f
  1897  0382  3EFF               	addlw	-1
  1898  0383  1D03               	skipz
  1899  0384  2B7F               	goto	u925
  1900  0385                     l1377:
  1901  0385  3001               	movlw	1
  1902  0386  02F5               	subwf	___awmod@counter,f
  1903  0387  1D03               	btfss	3,2
  1904  0388  2B8A               	goto	u931
  1905  0389  2B8B               	goto	u930
  1906  038A                     u931:
  1907  038A  2B6E               	goto	l1371
  1908  038B                     u930:
  1909  038B                     l1379:
  1910  038B  0876               	movf	___awmod@sign,w
  1911  038C  1903               	btfsc	3,2
  1912  038D  2B8F               	goto	u941
  1913  038E  2B90               	goto	u940
  1914  038F                     u941:
  1915  038F  2B95               	goto	l1383
  1916  0390                     u940:
  1917  0390                     l1381:
  1918  0390  09F2               	comf	___awmod@dividend,f
  1919  0391  09F3               	comf	___awmod@dividend+1,f
  1920  0392  0AF2               	incf	___awmod@dividend,f
  1921  0393  1903               	skipnz
  1922  0394  0AF3               	incf	___awmod@dividend+1,f
  1923  0395                     l1383:
  1924  0395  0873               	movf	___awmod@dividend+1,w
  1925  0396  00F1               	movwf	?___awmod+1
  1926  0397  0872               	movf	___awmod@dividend,w
  1927  0398  00F0               	movwf	?___awmod
  1928  0399                     l461:
  1929  0399  0008               	return
  1930  039A                     __end_of___awmod:
  1931                           
  1932                           	psect	text5
  1933  039A                     __ptext5:	
  1934 ;; *************** function ___awdiv *****************
  1935 ;; Defined at:
  1936 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  divisor         2    0[COMMON] int 
  1939 ;;  dividend        2    2[COMMON] int 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  quotient        2    7[COMMON] int 
  1942 ;;  sign            1    6[COMMON] unsigned char 
  1943 ;;  counter         1    5[COMMON] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2    0[COMMON] int 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         4       0       0       0       0
  1954 ;;      Locals:         4       0       0       0       0
  1955 ;;      Temps:          1       0       0       0       0
  1956 ;;      Totals:         9       0       0       0       0
  1957 ;;Total ram usage:        9 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_show_multidigits
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function ___awdiv
  1968  039A                     ___awdiv:
  1969  039A                     l1305:	
  1970                           ;incstack = 0
  1971                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1972                           
  1973  039A  01F6               	clrf	___awdiv@sign
  1974  039B                     l1307:
  1975  039B  1FF1               	btfss	___awdiv@divisor+1,7
  1976  039C  2B9E               	goto	u761
  1977  039D  2B9F               	goto	u760
  1978  039E                     u761:
  1979  039E  2BA6               	goto	l1313
  1980  039F                     u760:
  1981  039F                     l1309:
  1982  039F  09F0               	comf	___awdiv@divisor,f
  1983  03A0  09F1               	comf	___awdiv@divisor+1,f
  1984  03A1  0AF0               	incf	___awdiv@divisor,f
  1985  03A2  1903               	skipnz
  1986  03A3  0AF1               	incf	___awdiv@divisor+1,f
  1987  03A4                     l1311:
  1988  03A4  01F6               	clrf	___awdiv@sign
  1989  03A5  0AF6               	incf	___awdiv@sign,f
  1990  03A6                     l1313:
  1991  03A6  1FF3               	btfss	___awdiv@dividend+1,7
  1992  03A7  2BA9               	goto	u771
  1993  03A8  2BAA               	goto	u770
  1994  03A9                     u771:
  1995  03A9  2BB3               	goto	l1319
  1996  03AA                     u770:
  1997  03AA                     l1315:
  1998  03AA  09F2               	comf	___awdiv@dividend,f
  1999  03AB  09F3               	comf	___awdiv@dividend+1,f
  2000  03AC  0AF2               	incf	___awdiv@dividend,f
  2001  03AD  1903               	skipnz
  2002  03AE  0AF3               	incf	___awdiv@dividend+1,f
  2003  03AF                     l1317:
  2004  03AF  3001               	movlw	1
  2005  03B0  00F4               	movwf	??___awdiv
  2006  03B1  0874               	movf	??___awdiv,w
  2007  03B2  06F6               	xorwf	___awdiv@sign,f
  2008  03B3                     l1319:
  2009  03B3  01F7               	clrf	___awdiv@quotient
  2010  03B4  01F8               	clrf	___awdiv@quotient+1
  2011  03B5                     l1321:
  2012  03B5  0870               	movf	___awdiv@divisor,w
  2013  03B6  0471               	iorwf	___awdiv@divisor+1,w
  2014  03B7  1903               	btfsc	3,2
  2015  03B8  2BBA               	goto	u781
  2016  03B9  2BBB               	goto	u780
  2017  03BA                     u781:
  2018  03BA  2BF2               	goto	l1341
  2019  03BB                     u780:
  2020  03BB                     l1323:
  2021  03BB  01F5               	clrf	___awdiv@counter
  2022  03BC  0AF5               	incf	___awdiv@counter,f
  2023  03BD  2BC9               	goto	l1329
  2024  03BE                     l1325:
  2025  03BE  3001               	movlw	1
  2026  03BF                     u795:
  2027  03BF  1003               	clrc
  2028  03C0  0DF0               	rlf	___awdiv@divisor,f
  2029  03C1  0DF1               	rlf	___awdiv@divisor+1,f
  2030  03C2  3EFF               	addlw	-1
  2031  03C3  1D03               	skipz
  2032  03C4  2BBF               	goto	u795
  2033  03C5                     l1327:
  2034  03C5  3001               	movlw	1
  2035  03C6  00F4               	movwf	??___awdiv
  2036  03C7  0874               	movf	??___awdiv,w
  2037  03C8  07F5               	addwf	___awdiv@counter,f
  2038  03C9                     l1329:
  2039  03C9  1FF1               	btfss	___awdiv@divisor+1,7
  2040  03CA  2BCC               	goto	u801
  2041  03CB  2BCD               	goto	u800
  2042  03CC                     u801:
  2043  03CC  2BBE               	goto	l1325
  2044  03CD                     u800:
  2045  03CD                     l1331:
  2046  03CD  3001               	movlw	1
  2047  03CE                     u815:
  2048  03CE  1003               	clrc
  2049  03CF  0DF7               	rlf	___awdiv@quotient,f
  2050  03D0  0DF8               	rlf	___awdiv@quotient+1,f
  2051  03D1  3EFF               	addlw	-1
  2052  03D2  1D03               	skipz
  2053  03D3  2BCE               	goto	u815
  2054  03D4  0871               	movf	___awdiv@divisor+1,w
  2055  03D5  0273               	subwf	___awdiv@dividend+1,w
  2056  03D6  1D03               	skipz
  2057  03D7  2BDA               	goto	u825
  2058  03D8  0870               	movf	___awdiv@divisor,w
  2059  03D9  0272               	subwf	___awdiv@dividend,w
  2060  03DA                     u825:
  2061  03DA  1C03               	skipc
  2062  03DB  2BDD               	goto	u821
  2063  03DC  2BDE               	goto	u820
  2064  03DD                     u821:
  2065  03DD  2BE5               	goto	l1337
  2066  03DE                     u820:
  2067  03DE                     l1333:
  2068  03DE  0870               	movf	___awdiv@divisor,w
  2069  03DF  02F2               	subwf	___awdiv@dividend,f
  2070  03E0  0871               	movf	___awdiv@divisor+1,w
  2071  03E1  1C03               	skipc
  2072  03E2  03F3               	decf	___awdiv@dividend+1,f
  2073  03E3  02F3               	subwf	___awdiv@dividend+1,f
  2074  03E4                     l1335:
  2075  03E4  1477               	bsf	___awdiv@quotient,0
  2076  03E5                     l1337:
  2077  03E5  3001               	movlw	1
  2078  03E6                     u835:
  2079  03E6  1003               	clrc
  2080  03E7  0CF1               	rrf	___awdiv@divisor+1,f
  2081  03E8  0CF0               	rrf	___awdiv@divisor,f
  2082  03E9  3EFF               	addlw	-1
  2083  03EA  1D03               	skipz
  2084  03EB  2BE6               	goto	u835
  2085  03EC                     l1339:
  2086  03EC  3001               	movlw	1
  2087  03ED  02F5               	subwf	___awdiv@counter,f
  2088  03EE  1D03               	btfss	3,2
  2089  03EF  2BF1               	goto	u841
  2090  03F0  2BF2               	goto	u840
  2091  03F1                     u841:
  2092  03F1  2BCD               	goto	l1331
  2093  03F2                     u840:
  2094  03F2                     l1341:
  2095  03F2  0876               	movf	___awdiv@sign,w
  2096  03F3  1903               	btfsc	3,2
  2097  03F4  2BF6               	goto	u851
  2098  03F5  2BF7               	goto	u850
  2099  03F6                     u851:
  2100  03F6  2BFC               	goto	l1345
  2101  03F7                     u850:
  2102  03F7                     l1343:
  2103  03F7  09F7               	comf	___awdiv@quotient,f
  2104  03F8  09F8               	comf	___awdiv@quotient+1,f
  2105  03F9  0AF7               	incf	___awdiv@quotient,f
  2106  03FA  1903               	skipnz
  2107  03FB  0AF8               	incf	___awdiv@quotient+1,f
  2108  03FC                     l1345:
  2109  03FC  0878               	movf	___awdiv@quotient+1,w
  2110  03FD  00F1               	movwf	?___awdiv+1
  2111  03FE  0877               	movf	___awdiv@quotient,w
  2112  03FF  00F0               	movwf	?___awdiv
  2113  0400                     l448:
  2114  0400  0008               	return
  2115  0401                     __end_of___awdiv:
  2116                           
  2117                           	psect	text6
  2118  01B4                     __ptext6:	
  2119 ;; *************** function _show *****************
  2120 ;; Defined at:
  2121 ;;		line 79 in file "./lcd4bit.h"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  s               1    wreg     PTR unsigned char 
  2124 ;;		 -> STR_1(7), 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  s               1    4[COMMON] PTR unsigned char 
  2127 ;;		 -> STR_1(7), 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         0       0       0       0       0
  2138 ;;      Locals:         1       0       0       0       0
  2139 ;;      Temps:          1       0       0       0       0
  2140 ;;      Totals:         2       0       0       0       0
  2141 ;;Total ram usage:        2 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 1
  2144 ;; This function calls:
  2145 ;;		_LCD_Char
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function _show
  2153  01B4                     _show:
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2157                           ;show@s stored from wreg
  2158  01B4  00F4               	movwf	show@s
  2159  01B5                     l1475:
  2160                           
  2161                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
  2162  01B5  29C6               	goto	l1481
  2163  01B6                     l1477:
  2164                           
  2165                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
  2166  01B6  0874               	movf	show@s,w
  2167  01B7  0084               	movwf	4
  2168  01B8  120A  118A  2003  120A  118A  	fcall	stringdir
  2169  01BD  120A  118A  22BD  120A  118A  	fcall	_LCD_Char
  2170  01C2                     l1479:
  2171  01C2  3001               	movlw	1
  2172  01C3  00F3               	movwf	??_show
  2173  01C4  0873               	movf	??_show,w
  2174  01C5  07F4               	addwf	show@s,f
  2175  01C6                     l1481:
  2176                           
  2177                           ;./lcd4bit.h: 81:     while(*s) {
  2178  01C6  0874               	movf	show@s,w
  2179  01C7  0084               	movwf	4
  2180  01C8  120A  118A  2003  120A  118A  	fcall	stringdir
  2181  01CD  3A00               	xorlw	0
  2182  01CE  1D03               	skipz
  2183  01CF  29D1               	goto	u1111
  2184  01D0  29D2               	goto	u1110
  2185  01D1                     u1111:
  2186  01D1  29B6               	goto	l1477
  2187  01D2                     u1110:
  2188  01D2                     l106:
  2189  01D2  0008               	return
  2190  01D3                     __end_of_show:
  2191                           
  2192                           	psect	text7
  2193  02BD                     __ptext7:	
  2194 ;; *************** function _LCD_Char *****************
  2195 ;; Defined at:
  2196 ;;		line 27 in file "./lcd4bit.h"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  data            1    wreg     unsigned char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  data            1    2[COMMON] unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       0       0       0       0
  2211 ;;      Locals:         1       0       0       0       0
  2212 ;;      Temps:          2       0       0       0       0
  2213 ;;      Totals:         3       0       0       0       0
  2214 ;;Total ram usage:        3 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_show
  2220 ;;		_show_multidigits
  2221 ;;		_LCD_num
  2222 ;;		_print_checkdata
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _LCD_Char
  2228  02BD                     _LCD_Char:
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  2232                           ;LCD_Char@data stored from wreg
  2233  02BD  00F2               	movwf	LCD_Char@data
  2234  02BE                     l1287:
  2235                           
  2236                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  2237  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2238  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2239  02C0  1407               	bsf	7,0	;volatile
  2240  02C1                     l1289:
  2241                           
  2242                           ;./lcd4bit.h: 30:     PORTB = data;
  2243  02C1  0872               	movf	LCD_Char@data,w
  2244  02C2  0086               	movwf	6	;volatile
  2245  02C3                     l1291:
  2246                           
  2247                           ;./lcd4bit.h: 31:     RC1 = 1;
  2248  02C3  1487               	bsf	7,1	;volatile
  2249                           
  2250                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2251  02C4  3041               	movlw	65
  2252  02C5  00F1               	movwf	??_LCD_Char+1
  2253  02C6  30EE               	movlw	238
  2254  02C7  00F0               	movwf	??_LCD_Char
  2255  02C8                     u1457:
  2256  02C8  0BF0               	decfsz	??_LCD_Char,f
  2257  02C9  2AC8               	goto	u1457
  2258  02CA  0BF1               	decfsz	??_LCD_Char+1,f
  2259  02CB  2AC8               	goto	u1457
  2260  02CC  0000               	nop
  2261  02CD                     l1293:
  2262                           
  2263                           ;./lcd4bit.h: 33:     RC1 = 0;
  2264  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2265  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2266  02CF  1087               	bcf	7,1	;volatile
  2267                           
  2268                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2269  02D0  3041               	movlw	65
  2270  02D1  00F1               	movwf	??_LCD_Char+1
  2271  02D2  30EE               	movlw	238
  2272  02D3  00F0               	movwf	??_LCD_Char
  2273  02D4                     u1467:
  2274  02D4  0BF0               	decfsz	??_LCD_Char,f
  2275  02D5  2AD4               	goto	u1467
  2276  02D6  0BF1               	decfsz	??_LCD_Char+1,f
  2277  02D7  2AD4               	goto	u1467
  2278  02D8  0000               	nop
  2279  02D9                     l1295:
  2280                           
  2281                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  2282  02D9  0872               	movf	LCD_Char@data,w
  2283  02DA  00F0               	movwf	??_LCD_Char
  2284  02DB  3003               	movlw	3
  2285  02DC                     u755:
  2286  02DC  1003               	clrc
  2287  02DD  0DF0               	rlf	??_LCD_Char,f
  2288  02DE  3EFF               	addlw	-1
  2289  02DF  1D03               	skipz
  2290  02E0  2ADC               	goto	u755
  2291  02E1  1003               	clrc
  2292  02E2  0D70               	rlf	??_LCD_Char,w
  2293  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2294  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2295  02E5  0086               	movwf	6	;volatile
  2296  02E6                     l1297:
  2297                           
  2298                           ;./lcd4bit.h: 36:     RC1 = 1;
  2299  02E6  1487               	bsf	7,1	;volatile
  2300  02E7                     l1299:
  2301                           
  2302                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2303  02E7  3041               	movlw	65
  2304  02E8  00F1               	movwf	??_LCD_Char+1
  2305  02E9  30EE               	movlw	238
  2306  02EA  00F0               	movwf	??_LCD_Char
  2307  02EB                     u1477:
  2308  02EB  0BF0               	decfsz	??_LCD_Char,f
  2309  02EC  2AEB               	goto	u1477
  2310  02ED  0BF1               	decfsz	??_LCD_Char+1,f
  2311  02EE  2AEB               	goto	u1477
  2312  02EF  0000               	nop
  2313  02F0                     l1301:
  2314                           
  2315                           ;./lcd4bit.h: 38:     RC1 = 0;
  2316  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2317  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2318  02F2  1087               	bcf	7,1	;volatile
  2319  02F3                     l1303:
  2320                           
  2321                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2322  02F3  3041               	movlw	65
  2323  02F4  00F1               	movwf	??_LCD_Char+1
  2324  02F5  30EE               	movlw	238
  2325  02F6  00F0               	movwf	??_LCD_Char
  2326  02F7                     u1487:
  2327  02F7  0BF0               	decfsz	??_LCD_Char,f
  2328  02F8  2AF7               	goto	u1487
  2329  02F9  0BF1               	decfsz	??_LCD_Char+1,f
  2330  02FA  2AF7               	goto	u1487
  2331  02FB  0000               	nop
  2332  02FC                     l94:
  2333  02FC  0008               	return
  2334  02FD                     __end_of_LCD_Char:
  2335                           
  2336                           	psect	text8
  2337  0196                     __ptext8:	
  2338 ;; *************** function _i2c_send_byte *****************
  2339 ;; Defined at:
  2340 ;;		line 59 in file "./p03a_bmp280.h"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  addr            1    wreg     unsigned char 
  2343 ;;  count           1    1[COMMON] unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  addr            1    2[COMMON] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, pclath, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2355 ;;      Params:         1       0       0       0       0
  2356 ;;      Locals:         1       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0
  2358 ;;      Totals:         2       0       0       0       0
  2359 ;;Total ram usage:        2 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 2
  2362 ;; This function calls:
  2363 ;;		_i2c_send
  2364 ;;		_i2c_start
  2365 ;;		_i2c_stop
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _i2c_send_byte
  2373  0196                     _i2c_send_byte:
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _i2c_send_byte: [wreg+status,2+status,0+pclath+cstack]
  2377                           ;i2c_send_byte@addr stored from wreg
  2378  0196  00F2               	movwf	i2c_send_byte@addr
  2379  0197                     l1439:
  2380                           
  2381                           ;./p03a_bmp280.h: 59: void i2c_send_byte(unsigned char addr,unsigned char count);./p03a_
      +                          bmp280.h: 60: {;./p03a_bmp280.h: 61:     i2c_start();
  2382  0197  120A  118A  2150  120A  118A  	fcall	_i2c_start
  2383  019C                     l1441:
  2384                           
  2385                           ;./p03a_bmp280.h: 62:     i2c_send(0xEE);
  2386  019C  30EE               	movlw	238
  2387  019D  120A  118A  216F  120A  118A  	fcall	_i2c_send
  2388  01A2                     l1443:
  2389                           
  2390                           ;./p03a_bmp280.h: 63:     i2c_send(addr);
  2391  01A2  0872               	movf	i2c_send_byte@addr,w
  2392  01A3  120A  118A  216F  120A  118A  	fcall	_i2c_send
  2393  01A8                     l1445:
  2394                           
  2395                           ;./p03a_bmp280.h: 64:     i2c_send(count);
  2396  01A8  0871               	movf	i2c_send_byte@count,w
  2397  01A9  120A  118A  216F  120A  118A  	fcall	_i2c_send
  2398  01AE                     l1447:
  2399                           
  2400                           ;./p03a_bmp280.h: 65:     i2c_stop();
  2401  01AE  120A  118A  2147  120A  118A  	fcall	_i2c_stop
  2402  01B3                     l76:
  2403  01B3  0008               	return
  2404  01B4                     __end_of_i2c_send_byte:
  2405                           
  2406                           	psect	text9
  2407  0150                     __ptext9:	
  2408 ;; *************** function _i2c_start *****************
  2409 ;; Defined at:
  2410 ;;		line 21 in file "./p03a_bmp280.h"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		status,2, status,0, pclath, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2424 ;;      Params:         0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 1
  2431 ;; This function calls:
  2432 ;;		_waitmssp
  2433 ;; This function is called by:
  2434 ;;		_i2c_send_byte
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           
  2439                           ;psect for function _i2c_start
  2440  0150                     _i2c_start:
  2441  0150                     l1241:	
  2442                           ;incstack = 0
  2443                           ; Regs used in _i2c_start: [status,2+status,0+pclath+cstack]
  2444                           
  2445                           
  2446                           ;./p03a_bmp280.h: 23:     SEN=1;
  2447  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0151  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0152  1411               	bsf	17,0	;volatile
  2450  0153                     l1243:
  2451                           
  2452                           ;./p03a_bmp280.h: 24:     waitmssp();
  2453  0153  120A  118A  212E  120A  118A  	fcall	_waitmssp
  2454  0158                     l48:
  2455  0158  0008               	return
  2456  0159                     __end_of_i2c_start:
  2457                           
  2458                           	psect	text10
  2459  0209                     __ptext10:	
  2460 ;; *************** function _i2c_read_byte *****************
  2461 ;; Defined at:
  2462 ;;		line 73 in file "./p03a_bmp280.h"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  addr            1    wreg     unsigned char 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  addr            1    2[COMMON] unsigned char 
  2467 ;;  rec             1    3[COMMON] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      unsigned char 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, pclath, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       0       0       0       0
  2478 ;;      Locals:         2       0       0       0       0
  2479 ;;      Temps:          1       0       0       0       0
  2480 ;;      Totals:         3       0       0       0       0
  2481 ;;Total ram usage:        3 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 2
  2484 ;; This function calls:
  2485 ;;		_i2c_nak
  2486 ;;		_i2c_read
  2487 ;;		_i2c_restart
  2488 ;;		_i2c_send
  2489 ;;		_i2c_stop
  2490 ;;		_waitmssp
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;;		_bmp280_getdata
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           
  2498                           ;psect for function _i2c_read_byte
  2499  0209                     _i2c_read_byte:
  2500                           
  2501                           ;incstack = 0
  2502                           ; Regs used in _i2c_read_byte: [wreg+status,2+status,0+pclath+cstack]
  2503                           ;i2c_read_byte@addr stored from wreg
  2504  0209  00F2               	movwf	i2c_read_byte@addr
  2505  020A                     l82:	
  2506                           ;./p03a_bmp280.h: 73: unsigned char i2c_read_byte(unsigned char addr);./p03a_bmp280.h: 7
      +                          4: {;./p03a_bmp280.h: 75:     unsigned char rec;;./p03a_bmp280.h: 76: L: i2c_restart();
  2507                           
  2508  020A                     l1449:
  2509  020A  120A  118A  213E  120A  118A  	fcall	_i2c_restart
  2510  020F                     l1451:
  2511                           
  2512                           ;./p03a_bmp280.h: 77:     SSPBUF=0xEE;
  2513  020F  30EE               	movlw	238
  2514  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0212  0093               	movwf	19	;volatile
  2517  0213                     l1453:
  2518                           
  2519                           ;./p03a_bmp280.h: 78:     waitmssp();
  2520  0213  120A  118A  212E  120A  118A  	fcall	_waitmssp
  2521  0218                     l83:	
  2522                           ;./p03a_bmp280.h: 79:     while(ACKSTAT){goto L;}
  2523                           
  2524  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2525  0219  1303               	bcf	3,6	;RP1=0, select bank1
  2526  021A  1B11               	btfsc	17,6	;volatile
  2527  021B  2A1D               	goto	u1101
  2528  021C  2A1E               	goto	u1100
  2529  021D                     u1101:
  2530  021D  2A0A               	goto	l82
  2531  021E                     u1100:
  2532  021E                     l1455:
  2533                           
  2534                           ;./p03a_bmp280.h: 80:     i2c_send(addr);
  2535  021E  0872               	movf	i2c_read_byte@addr,w
  2536  021F  120A  118A  216F  120A  118A  	fcall	_i2c_send
  2537  0224                     l1457:
  2538                           
  2539                           ;./p03a_bmp280.h: 81:     i2c_restart();
  2540  0224  120A  118A  213E  120A  118A  	fcall	_i2c_restart
  2541  0229                     l1459:
  2542                           
  2543                           ;./p03a_bmp280.h: 82:     i2c_send(0xEF);
  2544  0229  30EF               	movlw	239
  2545  022A  120A  118A  216F  120A  118A  	fcall	_i2c_send
  2546  022F                     l1461:
  2547                           
  2548                           ;./p03a_bmp280.h: 83:     rec=i2c_read();
  2549  022F  120A  118A  2163  120A  118A  	fcall	_i2c_read
  2550  0234  00F1               	movwf	??_i2c_read_byte
  2551  0235  0871               	movf	??_i2c_read_byte,w
  2552  0236  00F3               	movwf	i2c_read_byte@rec
  2553  0237                     l1463:
  2554                           
  2555                           ;./p03a_bmp280.h: 84:     i2c_nak();
  2556  0237  120A  118A  2159  120A  118A  	fcall	_i2c_nak
  2557  023C                     l1465:
  2558                           
  2559                           ;./p03a_bmp280.h: 85:     i2c_stop();
  2560  023C  120A  118A  2147  120A  118A  	fcall	_i2c_stop
  2561                           
  2562                           ;./p03a_bmp280.h: 86:     return rec;
  2563  0241  0873               	movf	i2c_read_byte@rec,w
  2564  0242                     l86:
  2565  0242  0008               	return
  2566  0243                     __end_of_i2c_read_byte:
  2567                           
  2568                           	psect	text11
  2569  0147                     __ptext11:	
  2570 ;; *************** function _i2c_stop *****************
  2571 ;; Defined at:
  2572 ;;		line 26 in file "./p03a_bmp280.h"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		status,2, status,0, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0
  2589 ;;      Totals:         0       0       0       0       0
  2590 ;;Total ram usage:        0 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 1
  2593 ;; This function calls:
  2594 ;;		_waitmssp
  2595 ;; This function is called by:
  2596 ;;		_i2c_send_byte
  2597 ;;		_i2c_read_byte
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _i2c_stop
  2603  0147                     _i2c_stop:
  2604  0147                     l1245:	
  2605                           ;incstack = 0
  2606                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  2607                           
  2608                           
  2609                           ;./p03a_bmp280.h: 28:     PEN=1;
  2610  0147  1683               	bsf	3,5	;RP0=1, select bank1
  2611  0148  1303               	bcf	3,6	;RP1=0, select bank1
  2612  0149  1511               	bsf	17,2	;volatile
  2613  014A                     l1247:
  2614                           
  2615                           ;./p03a_bmp280.h: 29:     waitmssp();
  2616  014A  120A  118A  212E  120A  118A  	fcall	_waitmssp
  2617  014F                     l51:
  2618  014F  0008               	return
  2619  0150                     __end_of_i2c_stop:
  2620                           
  2621                           	psect	text12
  2622  016F                     __ptext12:	
  2623 ;; *************** function _i2c_send *****************
  2624 ;; Defined at:
  2625 ;;		line 53 in file "./p03a_bmp280.h"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  dat             1    wreg     unsigned char 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  dat             1    0[COMMON] unsigned char 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0, pclath, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2639 ;;      Params:         0       0       0       0       0
  2640 ;;      Locals:         1       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0
  2642 ;;      Totals:         1       0       0       0       0
  2643 ;;Total ram usage:        1 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; Hardware stack levels required when called: 1
  2646 ;; This function calls:
  2647 ;;		_waitmssp
  2648 ;; This function is called by:
  2649 ;;		_i2c_send_byte
  2650 ;;		_i2c_read_byte
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _i2c_send
  2656  016F                     _i2c_send:
  2657                           
  2658                           ;incstack = 0
  2659                           ; Regs used in _i2c_send: [wreg+status,2+status,0+pclath+cstack]
  2660                           ;i2c_send@dat stored from wreg
  2661  016F  00F0               	movwf	i2c_send@dat
  2662  0170                     l69:	
  2663                           ;./p03a_bmp280.h: 53: void i2c_send(unsigned char dat);./p03a_bmp280.h: 54: {;./p03a_bmp
      +                          280.h: 55: L1: SSPBUF=dat;
  2664                           
  2665  0170                     l1257:
  2666  0170  0870               	movf	i2c_send@dat,w
  2667  0171  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0172  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0173  0093               	movwf	19	;volatile
  2670  0174                     l1259:
  2671                           
  2672                           ;./p03a_bmp280.h: 56:     waitmssp();
  2673  0174  120A  118A  212E  120A  118A  	fcall	_waitmssp
  2674  0179                     l70:	
  2675                           ;./p03a_bmp280.h: 57:     while(ACKSTAT){i2c_restart;goto L1;}
  2676                           
  2677  0179  1683               	bsf	3,5	;RP0=1, select bank1
  2678  017A  1303               	bcf	3,6	;RP1=0, select bank1
  2679  017B  1B11               	btfsc	17,6	;volatile
  2680  017C  297E               	goto	u731
  2681  017D  297F               	goto	u730
  2682  017E                     u731:
  2683  017E  2970               	goto	l69
  2684  017F                     u730:
  2685  017F                     l73:
  2686  017F  0008               	return
  2687  0180                     __end_of_i2c_send:
  2688                           
  2689                           	psect	text13
  2690  013E                     __ptext13:	
  2691 ;; *************** function _i2c_restart *****************
  2692 ;; Defined at:
  2693 ;;		line 31 in file "./p03a_bmp280.h"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		status,2, status,0, pclath, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2707 ;;      Params:         0       0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0
  2710 ;;      Totals:         0       0       0       0       0
  2711 ;;Total ram usage:        0 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 1
  2714 ;; This function calls:
  2715 ;;		_waitmssp
  2716 ;; This function is called by:
  2717 ;;		_i2c_read_byte
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _i2c_restart
  2723  013E                     _i2c_restart:
  2724  013E                     l1249:	
  2725                           ;incstack = 0
  2726                           ; Regs used in _i2c_restart: [status,2+status,0+pclath+cstack]
  2727                           
  2728                           
  2729                           ;./p03a_bmp280.h: 33:     RSEN=1;
  2730  013E  1683               	bsf	3,5	;RP0=1, select bank1
  2731  013F  1303               	bcf	3,6	;RP1=0, select bank1
  2732  0140  1491               	bsf	17,1	;volatile
  2733  0141                     l1251:
  2734                           
  2735                           ;./p03a_bmp280.h: 34:     waitmssp();
  2736  0141  120A  118A  212E  120A  118A  	fcall	_waitmssp
  2737  0146                     l54:
  2738  0146  0008               	return
  2739  0147                     __end_of_i2c_restart:
  2740                           
  2741                           	psect	text14
  2742  0163                     __ptext14:	
  2743 ;; *************** function _i2c_read *****************
  2744 ;; Defined at:
  2745 ;;		line 67 in file "./p03a_bmp280.h"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      unsigned char 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, pclath, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2759 ;;      Params:         0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0
  2762 ;;      Totals:         0       0       0       0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 1
  2766 ;; This function calls:
  2767 ;;		_waitmssp
  2768 ;; This function is called by:
  2769 ;;		_i2c_read_byte
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _i2c_read
  2775  0163                     _i2c_read:
  2776  0163                     l1261:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  2779                           
  2780                           
  2781                           ;./p03a_bmp280.h: 69:     RCEN=1;
  2782  0163  1683               	bsf	3,5	;RP0=1, select bank1
  2783  0164  1303               	bcf	3,6	;RP1=0, select bank1
  2784  0165  1591               	bsf	17,3	;volatile
  2785  0166                     l1263:
  2786                           
  2787                           ;./p03a_bmp280.h: 70:     waitmssp();
  2788  0166  120A  118A  212E  120A  118A  	fcall	_waitmssp
  2789  016B                     l1265:
  2790                           
  2791                           ;./p03a_bmp280.h: 71:     return SSPBUF;
  2792  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2793  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2794  016D  0813               	movf	19,w	;volatile
  2795  016E                     l79:
  2796  016E  0008               	return
  2797  016F                     __end_of_i2c_read:
  2798                           
  2799                           	psect	text15
  2800  0159                     __ptext15:	
  2801 ;; *************** function _i2c_nak *****************
  2802 ;; Defined at:
  2803 ;;		line 42 in file "./p03a_bmp280.h"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		status,2, status,0, pclath, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2817 ;;      Params:         0       0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0
  2820 ;;      Totals:         0       0       0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 1
  2824 ;; This function calls:
  2825 ;;		_waitmssp
  2826 ;; This function is called by:
  2827 ;;		_i2c_read_byte
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _i2c_nak
  2833  0159                     _i2c_nak:
  2834  0159                     l1253:	
  2835                           ;incstack = 0
  2836                           ; Regs used in _i2c_nak: [status,2+status,0+pclath+cstack]
  2837                           
  2838                           
  2839                           ;./p03a_bmp280.h: 44:     ACKDT=1;
  2840  0159  1683               	bsf	3,5	;RP0=1, select bank1
  2841  015A  1303               	bcf	3,6	;RP1=0, select bank1
  2842  015B  1691               	bsf	17,5	;volatile
  2843                           
  2844                           ;./p03a_bmp280.h: 45:     ACKEN=1;
  2845  015C  1611               	bsf	17,4	;volatile
  2846  015D                     l1255:
  2847                           
  2848                           ;./p03a_bmp280.h: 46:     waitmssp();
  2849  015D  120A  118A  212E  120A  118A  	fcall	_waitmssp
  2850  0162                     l60:
  2851  0162  0008               	return
  2852  0163                     __end_of_i2c_nak:
  2853                           
  2854                           	psect	text16
  2855  012E                     __ptext16:	
  2856 ;; *************** function _waitmssp *****************
  2857 ;; Defined at:
  2858 ;;		line 48 in file "./p03a_bmp280.h"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		None
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0
  2875 ;;      Totals:         0       0       0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_i2c_start
  2882 ;;		_i2c_stop
  2883 ;;		_i2c_restart
  2884 ;;		_i2c_nak
  2885 ;;		_i2c_send
  2886 ;;		_i2c_read
  2887 ;;		_i2c_read_byte
  2888 ;;		_i2c_ack
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _waitmssp
  2894  012E                     _waitmssp:
  2895  012E                     l1239:	
  2896                           ;incstack = 0
  2897                           ; Regs used in _waitmssp: []
  2898                           
  2899  012E                     l63:	
  2900                           ;./p03a_bmp280.h: 50:     while(!SSPIF);
  2901                           
  2902  012E  1283               	bcf	3,5	;RP0=0, select bank0
  2903  012F  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0130  1D8C               	btfss	12,3	;volatile
  2905  0131  2933               	goto	u721
  2906  0132  2934               	goto	u720
  2907  0133                     u721:
  2908  0133  292E               	goto	l63
  2909  0134                     u720:
  2910  0134                     l65:
  2911                           
  2912                           ;./p03a_bmp280.h: 51:     SSPIF=0;
  2913  0134  118C               	bcf	12,3	;volatile
  2914  0135                     l66:
  2915  0135  0008               	return
  2916  0136                     __end_of_waitmssp:
  2917                           
  2918                           	psect	text17
  2919  0180                     __ptext17:	
  2920 ;; *************** function _i2c_init *****************
  2921 ;; Defined at:
  2922 ;;		line 15 in file "./p03a_bmp280.h"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _i2c_init
  2951  0180                     _i2c_init:
  2952  0180                     l1435:	
  2953                           ;incstack = 0
  2954                           ; Regs used in _i2c_init: [wreg]
  2955                           
  2956                           
  2957                           ;./p03a_bmp280.h: 17:     TRISC3=TRISC4=1;
  2958  0180  1683               	bsf	3,5	;RP0=1, select bank1
  2959  0181  1303               	bcf	3,6	;RP1=0, select bank1
  2960  0182  1607               	bsf	7,4	;volatile
  2961  0183  1A07               	btfsc	7,4	;volatile
  2962  0184  2986               	goto	u1081
  2963  0185  298A               	goto	u1080
  2964  0186                     u1081:
  2965  0186  1683               	bsf	3,5	;RP0=1, select bank1
  2966  0187  1303               	bcf	3,6	;RP1=0, select bank1
  2967  0188  1587               	bsf	7,3	;volatile
  2968  0189  298D               	goto	u1094
  2969  018A                     u1080:
  2970  018A  1683               	bsf	3,5	;RP0=1, select bank1
  2971  018B  1303               	bcf	3,6	;RP1=0, select bank1
  2972  018C  1187               	bcf	7,3	;volatile
  2973  018D                     u1094:
  2974  018D                     l1437:
  2975                           
  2976                           ;./p03a_bmp280.h: 18:     SSPCON=0x28;
  2977  018D  3028               	movlw	40
  2978  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2979  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2980  0190  0094               	movwf	20	;volatile
  2981                           
  2982                           ;./p03a_bmp280.h: 19:     SSPADD=((11059200/4)/100)-1;
  2983  0191  30FF               	movlw	255
  2984  0192  1683               	bsf	3,5	;RP0=1, select bank1
  2985  0193  1303               	bcf	3,6	;RP1=0, select bank1
  2986  0194  0093               	movwf	19	;volatile
  2987  0195                     l45:
  2988  0195  0008               	return
  2989  0196                     __end_of_i2c_init:
  2990                           
  2991                           	psect	text18
  2992  0401                     __ptext18:	
  2993 ;; *************** function ___almod *****************
  2994 ;; Defined at:
  2995 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\almod.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  divisor         4    0[COMMON] long 
  2998 ;;  dividend        4    4[COMMON] long 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  sign            1   10[COMMON] unsigned char 
  3001 ;;  counter         1    9[COMMON] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  4    0[COMMON] long 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         8       0       0       0       0
  3012 ;;      Locals:         2       0       0       0       0
  3013 ;;      Temps:          1       0       0       0       0
  3014 ;;      Totals:        11       0       0       0       0
  3015 ;;Total ram usage:       11 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function ___almod
  3026  0401                     ___almod:
  3027  0401                     l1583:	
  3028                           ;incstack = 0
  3029                           ; Regs used in ___almod: [wreg+status,2+status,0]
  3030                           
  3031  0401  01FA               	clrf	___almod@sign
  3032  0402                     l1585:
  3033  0402  1FF7               	btfss	___almod@dividend+3,7
  3034  0403  2C05               	goto	u1291
  3035  0404  2C06               	goto	u1290
  3036  0405                     u1291:
  3037  0405  2C13               	goto	l373
  3038  0406                     u1290:
  3039  0406                     l1587:
  3040  0406  09F4               	comf	___almod@dividend,f
  3041  0407  09F5               	comf	___almod@dividend+1,f
  3042  0408  09F6               	comf	___almod@dividend+2,f
  3043  0409  09F7               	comf	___almod@dividend+3,f
  3044  040A  0AF4               	incf	___almod@dividend,f
  3045  040B  1903               	skipnz
  3046  040C  0AF5               	incf	___almod@dividend+1,f
  3047  040D  1903               	skipnz
  3048  040E  0AF6               	incf	___almod@dividend+2,f
  3049  040F  1903               	skipnz
  3050  0410  0AF7               	incf	___almod@dividend+3,f
  3051  0411  01FA               	clrf	___almod@sign
  3052  0412  0AFA               	incf	___almod@sign,f
  3053  0413                     l373:
  3054  0413  1FF3               	btfss	___almod@divisor+3,7
  3055  0414  2C16               	goto	u1301
  3056  0415  2C17               	goto	u1300
  3057  0416                     u1301:
  3058  0416  2C22               	goto	l1591
  3059  0417                     u1300:
  3060  0417                     l1589:
  3061  0417  09F0               	comf	___almod@divisor,f
  3062  0418  09F1               	comf	___almod@divisor+1,f
  3063  0419  09F2               	comf	___almod@divisor+2,f
  3064  041A  09F3               	comf	___almod@divisor+3,f
  3065  041B  0AF0               	incf	___almod@divisor,f
  3066  041C  1903               	skipnz
  3067  041D  0AF1               	incf	___almod@divisor+1,f
  3068  041E  1903               	skipnz
  3069  041F  0AF2               	incf	___almod@divisor+2,f
  3070  0420  1903               	skipnz
  3071  0421  0AF3               	incf	___almod@divisor+3,f
  3072  0422                     l1591:
  3073  0422  0873               	movf	___almod@divisor+3,w
  3074  0423  0472               	iorwf	___almod@divisor+2,w
  3075  0424  0471               	iorwf	___almod@divisor+1,w
  3076  0425  0470               	iorwf	___almod@divisor,w
  3077  0426  1903               	skipnz
  3078  0427  2C29               	goto	u1311
  3079  0428  2C2A               	goto	u1310
  3080  0429                     u1311:
  3081  0429  2C6D               	goto	l1607
  3082  042A                     u1310:
  3083  042A                     l1593:
  3084  042A  01F9               	clrf	___almod@counter
  3085  042B  0AF9               	incf	___almod@counter,f
  3086  042C  2C3A               	goto	l1597
  3087  042D                     l1595:
  3088  042D  3001               	movlw	1
  3089  042E  00F8               	movwf	??___almod
  3090  042F                     u1325:
  3091  042F  1003               	clrc
  3092  0430  0DF0               	rlf	___almod@divisor,f
  3093  0431  0DF1               	rlf	___almod@divisor+1,f
  3094  0432  0DF2               	rlf	___almod@divisor+2,f
  3095  0433  0DF3               	rlf	___almod@divisor+3,f
  3096  0434  0BF8               	decfsz	??___almod,f
  3097  0435  2C2F               	goto	u1325
  3098  0436  3001               	movlw	1
  3099  0437  00F8               	movwf	??___almod
  3100  0438  0878               	movf	??___almod,w
  3101  0439  07F9               	addwf	___almod@counter,f
  3102  043A                     l1597:
  3103  043A  1FF3               	btfss	___almod@divisor+3,7
  3104  043B  2C3D               	goto	u1331
  3105  043C  2C3E               	goto	u1330
  3106  043D                     u1331:
  3107  043D  2C2D               	goto	l1595
  3108  043E                     u1330:
  3109  043E                     l1599:
  3110  043E  0873               	movf	___almod@divisor+3,w
  3111  043F  0277               	subwf	___almod@dividend+3,w
  3112  0440  1D03               	skipz
  3113  0441  2C4C               	goto	u1345
  3114  0442  0872               	movf	___almod@divisor+2,w
  3115  0443  0276               	subwf	___almod@dividend+2,w
  3116  0444  1D03               	skipz
  3117  0445  2C4C               	goto	u1345
  3118  0446  0871               	movf	___almod@divisor+1,w
  3119  0447  0275               	subwf	___almod@dividend+1,w
  3120  0448  1D03               	skipz
  3121  0449  2C4C               	goto	u1345
  3122  044A  0870               	movf	___almod@divisor,w
  3123  044B  0274               	subwf	___almod@dividend,w
  3124  044C                     u1345:
  3125  044C  1C03               	skipc
  3126  044D  2C4F               	goto	u1341
  3127  044E  2C50               	goto	u1340
  3128  044F                     u1341:
  3129  044F  2C5E               	goto	l1603
  3130  0450                     u1340:
  3131  0450                     l1601:
  3132  0450  0870               	movf	___almod@divisor,w
  3133  0451  02F4               	subwf	___almod@dividend,f
  3134  0452  0871               	movf	___almod@divisor+1,w
  3135  0453  1C03               	skipc
  3136  0454  0F71               	incfsz	___almod@divisor+1,w
  3137  0455  02F5               	subwf	___almod@dividend+1,f
  3138  0456  0872               	movf	___almod@divisor+2,w
  3139  0457  1C03               	skipc
  3140  0458  0F72               	incfsz	___almod@divisor+2,w
  3141  0459  02F6               	subwf	___almod@dividend+2,f
  3142  045A  0873               	movf	___almod@divisor+3,w
  3143  045B  1C03               	skipc
  3144  045C  0F73               	incfsz	___almod@divisor+3,w
  3145  045D  02F7               	subwf	___almod@dividend+3,f
  3146  045E                     l1603:
  3147  045E  3001               	movlw	1
  3148  045F                     u1355:
  3149  045F  1003               	clrc
  3150  0460  0CF3               	rrf	___almod@divisor+3,f
  3151  0461  0CF2               	rrf	___almod@divisor+2,f
  3152  0462  0CF1               	rrf	___almod@divisor+1,f
  3153  0463  0CF0               	rrf	___almod@divisor,f
  3154  0464  3EFF               	addlw	-1
  3155  0465  1D03               	skipz
  3156  0466  2C5F               	goto	u1355
  3157  0467                     l1605:
  3158  0467  3001               	movlw	1
  3159  0468  02F9               	subwf	___almod@counter,f
  3160  0469  1D03               	btfss	3,2
  3161  046A  2C6C               	goto	u1361
  3162  046B  2C6D               	goto	u1360
  3163  046C                     u1361:
  3164  046C  2C3E               	goto	l1599
  3165  046D                     u1360:
  3166  046D                     l1607:
  3167  046D  087A               	movf	___almod@sign,w
  3168  046E  1903               	btfsc	3,2
  3169  046F  2C71               	goto	u1371
  3170  0470  2C72               	goto	u1370
  3171  0471                     u1371:
  3172  0471  2C7D               	goto	l1611
  3173  0472                     u1370:
  3174  0472                     l1609:
  3175  0472  09F4               	comf	___almod@dividend,f
  3176  0473  09F5               	comf	___almod@dividend+1,f
  3177  0474  09F6               	comf	___almod@dividend+2,f
  3178  0475  09F7               	comf	___almod@dividend+3,f
  3179  0476  0AF4               	incf	___almod@dividend,f
  3180  0477  1903               	skipnz
  3181  0478  0AF5               	incf	___almod@dividend+1,f
  3182  0479  1903               	skipnz
  3183  047A  0AF6               	incf	___almod@dividend+2,f
  3184  047B  1903               	skipnz
  3185  047C  0AF7               	incf	___almod@dividend+3,f
  3186  047D                     l1611:
  3187  047D  0877               	movf	___almod@dividend+3,w
  3188  047E  00F3               	movwf	?___almod+3
  3189  047F  0876               	movf	___almod@dividend+2,w
  3190  0480  00F2               	movwf	?___almod+2
  3191  0481  0875               	movf	___almod@dividend+1,w
  3192  0482  00F1               	movwf	?___almod+1
  3193  0483  0874               	movf	___almod@dividend,w
  3194  0484  00F0               	movwf	?___almod
  3195  0485                     l383:
  3196  0485  0008               	return
  3197  0486                     __end_of___almod:
  3198                           
  3199                           	psect	text19
  3200  0486                     __ptext19:	
  3201 ;; *************** function ___aldiv *****************
  3202 ;; Defined at:
  3203 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  divisor         4    0[COMMON] long 
  3206 ;;  dividend        4    4[COMMON] long 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  quotient        4    2[BANK0 ] long 
  3209 ;;  sign            1    1[BANK0 ] unsigned char 
  3210 ;;  counter         1    0[BANK0 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  4    0[COMMON] long 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3220 ;;      Params:         8       0       0       0       0
  3221 ;;      Locals:         0       6       0       0       0
  3222 ;;      Temps:          1       0       0       0       0
  3223 ;;      Totals:         9       6       0       0       0
  3224 ;;Total ram usage:       15 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;;		_LCD_num
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function ___aldiv
  3236  0486                     ___aldiv:
  3237  0486                     l1543:	
  3238                           ;incstack = 0
  3239                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3240                           
  3241  0486  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0487  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0488  01A1               	clrf	___aldiv@sign
  3244  0489                     l1545:
  3245  0489  1FF3               	btfss	___aldiv@divisor+3,7
  3246  048A  2C8C               	goto	u1191
  3247  048B  2C8D               	goto	u1190
  3248  048C                     u1191:
  3249  048C  2C9A               	goto	l360
  3250  048D                     u1190:
  3251  048D                     l1547:
  3252  048D  09F0               	comf	___aldiv@divisor,f
  3253  048E  09F1               	comf	___aldiv@divisor+1,f
  3254  048F  09F2               	comf	___aldiv@divisor+2,f
  3255  0490  09F3               	comf	___aldiv@divisor+3,f
  3256  0491  0AF0               	incf	___aldiv@divisor,f
  3257  0492  1903               	skipnz
  3258  0493  0AF1               	incf	___aldiv@divisor+1,f
  3259  0494  1903               	skipnz
  3260  0495  0AF2               	incf	___aldiv@divisor+2,f
  3261  0496  1903               	skipnz
  3262  0497  0AF3               	incf	___aldiv@divisor+3,f
  3263  0498  01A1               	clrf	___aldiv@sign
  3264  0499  0AA1               	incf	___aldiv@sign,f
  3265  049A                     l360:
  3266  049A  1FF7               	btfss	___aldiv@dividend+3,7
  3267  049B  2C9D               	goto	u1201
  3268  049C  2C9E               	goto	u1200
  3269  049D                     u1201:
  3270  049D  2CAD               	goto	l1553
  3271  049E                     u1200:
  3272  049E                     l1549:
  3273  049E  09F4               	comf	___aldiv@dividend,f
  3274  049F  09F5               	comf	___aldiv@dividend+1,f
  3275  04A0  09F6               	comf	___aldiv@dividend+2,f
  3276  04A1  09F7               	comf	___aldiv@dividend+3,f
  3277  04A2  0AF4               	incf	___aldiv@dividend,f
  3278  04A3  1903               	skipnz
  3279  04A4  0AF5               	incf	___aldiv@dividend+1,f
  3280  04A5  1903               	skipnz
  3281  04A6  0AF6               	incf	___aldiv@dividend+2,f
  3282  04A7  1903               	skipnz
  3283  04A8  0AF7               	incf	___aldiv@dividend+3,f
  3284  04A9                     l1551:
  3285  04A9  3001               	movlw	1
  3286  04AA  00F8               	movwf	??___aldiv
  3287  04AB  0878               	movf	??___aldiv,w
  3288  04AC  06A1               	xorwf	___aldiv@sign,f
  3289  04AD                     l1553:
  3290  04AD  3000               	movlw	0
  3291  04AE  00A5               	movwf	___aldiv@quotient+3
  3292  04AF  3000               	movlw	0
  3293  04B0  00A4               	movwf	___aldiv@quotient+2
  3294  04B1  3000               	movlw	0
  3295  04B2  00A3               	movwf	___aldiv@quotient+1
  3296  04B3  3000               	movlw	0
  3297  04B4  00A2               	movwf	___aldiv@quotient
  3298  04B5                     l1555:
  3299  04B5  0873               	movf	___aldiv@divisor+3,w
  3300  04B6  0472               	iorwf	___aldiv@divisor+2,w
  3301  04B7  0471               	iorwf	___aldiv@divisor+1,w
  3302  04B8  0470               	iorwf	___aldiv@divisor,w
  3303  04B9  1903               	skipnz
  3304  04BA  2CBC               	goto	u1211
  3305  04BB  2CBD               	goto	u1210
  3306  04BC                     u1211:
  3307  04BC  2D0A               	goto	l1575
  3308  04BD                     u1210:
  3309  04BD                     l1557:
  3310  04BD  01A0               	clrf	___aldiv@counter
  3311  04BE  0AA0               	incf	___aldiv@counter,f
  3312  04BF  2CCD               	goto	l1561
  3313  04C0                     l1559:
  3314  04C0  3001               	movlw	1
  3315  04C1  00F8               	movwf	??___aldiv
  3316  04C2                     u1225:
  3317  04C2  1003               	clrc
  3318  04C3  0DF0               	rlf	___aldiv@divisor,f
  3319  04C4  0DF1               	rlf	___aldiv@divisor+1,f
  3320  04C5  0DF2               	rlf	___aldiv@divisor+2,f
  3321  04C6  0DF3               	rlf	___aldiv@divisor+3,f
  3322  04C7  0BF8               	decfsz	??___aldiv,f
  3323  04C8  2CC2               	goto	u1225
  3324  04C9  3001               	movlw	1
  3325  04CA  00F8               	movwf	??___aldiv
  3326  04CB  0878               	movf	??___aldiv,w
  3327  04CC  07A0               	addwf	___aldiv@counter,f
  3328  04CD                     l1561:
  3329  04CD  1FF3               	btfss	___aldiv@divisor+3,7
  3330  04CE  2CD0               	goto	u1231
  3331  04CF  2CD1               	goto	u1230
  3332  04D0                     u1231:
  3333  04D0  2CC0               	goto	l1559
  3334  04D1                     u1230:
  3335  04D1                     l1563:
  3336  04D1  3001               	movlw	1
  3337  04D2  00F8               	movwf	??___aldiv
  3338  04D3                     u1245:
  3339  04D3  1003               	clrc
  3340  04D4  0DA2               	rlf	___aldiv@quotient,f
  3341  04D5  0DA3               	rlf	___aldiv@quotient+1,f
  3342  04D6  0DA4               	rlf	___aldiv@quotient+2,f
  3343  04D7  0DA5               	rlf	___aldiv@quotient+3,f
  3344  04D8  0BF8               	decfsz	??___aldiv,f
  3345  04D9  2CD3               	goto	u1245
  3346  04DA                     l1565:
  3347  04DA  0873               	movf	___aldiv@divisor+3,w
  3348  04DB  0277               	subwf	___aldiv@dividend+3,w
  3349  04DC  1D03               	skipz
  3350  04DD  2CE8               	goto	u1255
  3351  04DE  0872               	movf	___aldiv@divisor+2,w
  3352  04DF  0276               	subwf	___aldiv@dividend+2,w
  3353  04E0  1D03               	skipz
  3354  04E1  2CE8               	goto	u1255
  3355  04E2  0871               	movf	___aldiv@divisor+1,w
  3356  04E3  0275               	subwf	___aldiv@dividend+1,w
  3357  04E4  1D03               	skipz
  3358  04E5  2CE8               	goto	u1255
  3359  04E6  0870               	movf	___aldiv@divisor,w
  3360  04E7  0274               	subwf	___aldiv@dividend,w
  3361  04E8                     u1255:
  3362  04E8  1C03               	skipc
  3363  04E9  2CEB               	goto	u1251
  3364  04EA  2CEC               	goto	u1250
  3365  04EB                     u1251:
  3366  04EB  2CFB               	goto	l1571
  3367  04EC                     u1250:
  3368  04EC                     l1567:
  3369  04EC  0870               	movf	___aldiv@divisor,w
  3370  04ED  02F4               	subwf	___aldiv@dividend,f
  3371  04EE  0871               	movf	___aldiv@divisor+1,w
  3372  04EF  1C03               	skipc
  3373  04F0  0F71               	incfsz	___aldiv@divisor+1,w
  3374  04F1  02F5               	subwf	___aldiv@dividend+1,f
  3375  04F2  0872               	movf	___aldiv@divisor+2,w
  3376  04F3  1C03               	skipc
  3377  04F4  0F72               	incfsz	___aldiv@divisor+2,w
  3378  04F5  02F6               	subwf	___aldiv@dividend+2,f
  3379  04F6  0873               	movf	___aldiv@divisor+3,w
  3380  04F7  1C03               	skipc
  3381  04F8  0F73               	incfsz	___aldiv@divisor+3,w
  3382  04F9  02F7               	subwf	___aldiv@dividend+3,f
  3383  04FA                     l1569:
  3384  04FA  1422               	bsf	___aldiv@quotient,0
  3385  04FB                     l1571:
  3386  04FB  3001               	movlw	1
  3387  04FC                     u1265:
  3388  04FC  1003               	clrc
  3389  04FD  0CF3               	rrf	___aldiv@divisor+3,f
  3390  04FE  0CF2               	rrf	___aldiv@divisor+2,f
  3391  04FF  0CF1               	rrf	___aldiv@divisor+1,f
  3392  0500  0CF0               	rrf	___aldiv@divisor,f
  3393  0501  3EFF               	addlw	-1
  3394  0502  1D03               	skipz
  3395  0503  2CFC               	goto	u1265
  3396  0504                     l1573:
  3397  0504  3001               	movlw	1
  3398  0505  02A0               	subwf	___aldiv@counter,f
  3399  0506  1D03               	btfss	3,2
  3400  0507  2D09               	goto	u1271
  3401  0508  2D0A               	goto	u1270
  3402  0509                     u1271:
  3403  0509  2CD1               	goto	l1563
  3404  050A                     u1270:
  3405  050A                     l1575:
  3406  050A  0821               	movf	___aldiv@sign,w
  3407  050B  1903               	btfsc	3,2
  3408  050C  2D0E               	goto	u1281
  3409  050D  2D0F               	goto	u1280
  3410  050E                     u1281:
  3411  050E  2D1A               	goto	l1579
  3412  050F                     u1280:
  3413  050F                     l1577:
  3414  050F  09A2               	comf	___aldiv@quotient,f
  3415  0510  09A3               	comf	___aldiv@quotient+1,f
  3416  0511  09A4               	comf	___aldiv@quotient+2,f
  3417  0512  09A5               	comf	___aldiv@quotient+3,f
  3418  0513  0AA2               	incf	___aldiv@quotient,f
  3419  0514  1903               	skipnz
  3420  0515  0AA3               	incf	___aldiv@quotient+1,f
  3421  0516  1903               	skipnz
  3422  0517  0AA4               	incf	___aldiv@quotient+2,f
  3423  0518  1903               	skipnz
  3424  0519  0AA5               	incf	___aldiv@quotient+3,f
  3425  051A                     l1579:
  3426  051A  0825               	movf	___aldiv@quotient+3,w
  3427  051B  00F3               	movwf	?___aldiv+3
  3428  051C  0824               	movf	___aldiv@quotient+2,w
  3429  051D  00F2               	movwf	?___aldiv+2
  3430  051E  0823               	movf	___aldiv@quotient+1,w
  3431  051F  00F1               	movwf	?___aldiv+1
  3432  0520  0822               	movf	___aldiv@quotient,w
  3433  0521  00F0               	movwf	?___aldiv
  3434  0522                     l370:
  3435  0522  0008               	return
  3436  0523                     __end_of___aldiv:
  3437                           
  3438                           	psect	text20
  3439  01D3                     __ptext20:	
  3440 ;; *************** function _LCD_init *****************
  3441 ;; Defined at:
  3442 ;;		line 41 in file "./lcd4bit.h"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0
  3458 ;;      Temps:          2       0       0       0       0
  3459 ;;      Totals:         2       0       0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 1
  3463 ;; This function calls:
  3464 ;;		_LCD_Command
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _LCD_init
  3472  01D3                     _LCD_init:
  3473  01D3                     l1469:	
  3474                           ;incstack = 0
  3475                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3476                           
  3477                           
  3478                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  3479  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  3480  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  3481  01D5  1386               	bcf	6,7	;volatile
  3482                           
  3483                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  3484  01D6  1306               	bcf	6,6	;volatile
  3485                           
  3486                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  3487  01D7  1286               	bcf	6,5	;volatile
  3488                           
  3489                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  3490  01D8  1206               	bcf	6,4	;volatile
  3491                           
  3492                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  3493  01D9  1007               	bcf	7,0	;volatile
  3494                           
  3495                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  3496  01DA  1087               	bcf	7,1	;volatile
  3497  01DB                     l1471:
  3498                           
  3499                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  3500  01DB  3002               	movlw	2
  3501  01DC  120A  118A  227D  120A  118A  	fcall	_LCD_Command
  3502                           
  3503                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  3504  01E1  3028               	movlw	40
  3505  01E2  120A  118A  227D  120A  118A  	fcall	_LCD_Command
  3506                           
  3507                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  3508  01E7  3080               	movlw	128
  3509  01E8  120A  118A  227D  120A  118A  	fcall	_LCD_Command
  3510                           
  3511                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  3512  01ED  300C               	movlw	12
  3513  01EE  120A  118A  227D  120A  118A  	fcall	_LCD_Command
  3514                           
  3515                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  3516  01F3  3006               	movlw	6
  3517  01F4  120A  118A  227D  120A  118A  	fcall	_LCD_Command
  3518                           
  3519                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  3520  01F9  3001               	movlw	1
  3521  01FA  120A  118A  227D  120A  118A  	fcall	_LCD_Command
  3522  01FF                     l1473:
  3523                           
  3524                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3525  01FF  3041               	movlw	65
  3526  0200  00F4               	movwf	??_LCD_init+1
  3527  0201  30EE               	movlw	238
  3528  0202  00F3               	movwf	??_LCD_init
  3529  0203                     u1497:
  3530  0203  0BF3               	decfsz	??_LCD_init,f
  3531  0204  2A03               	goto	u1497
  3532  0205  0BF4               	decfsz	??_LCD_init+1,f
  3533  0206  2A03               	goto	u1497
  3534  0207  0000               	nop
  3535  0208                     l97:
  3536  0208  0008               	return
  3537  0209                     __end_of_LCD_init:
  3538                           
  3539                           	psect	text21
  3540  027D                     __ptext21:	
  3541 ;; *************** function _LCD_Command *****************
  3542 ;; Defined at:
  3543 ;;		line 13 in file "./lcd4bit.h"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  cmnd            1    wreg     unsigned char 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  cmnd            1    2[COMMON] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3557 ;;      Params:         0       0       0       0       0
  3558 ;;      Locals:         1       0       0       0       0
  3559 ;;      Temps:          2       0       0       0       0
  3560 ;;      Totals:         3       0       0       0       0
  3561 ;;Total ram usage:        3 bytes
  3562 ;; Hardware stack levels used: 1
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_LCD_init
  3567 ;;		_main
  3568 ;;		_print_checkdata
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _LCD_Command
  3574  027D                     _LCD_Command:
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  3578                           ;LCD_Command@cmnd stored from wreg
  3579  027D  00F2               	movwf	LCD_Command@cmnd
  3580  027E                     l1269:
  3581                           
  3582                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  3583  027E  1283               	bcf	3,5	;RP0=0, select bank0
  3584  027F  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0280  1007               	bcf	7,0	;volatile
  3586  0281                     l1271:
  3587                           
  3588                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  3589  0281  0872               	movf	LCD_Command@cmnd,w
  3590  0282  0086               	movwf	6	;volatile
  3591  0283                     l1273:
  3592                           
  3593                           ;./lcd4bit.h: 17:     RC1 = 1;
  3594  0283  1487               	bsf	7,1	;volatile
  3595                           
  3596                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3597  0284  3041               	movlw	65
  3598  0285  00F1               	movwf	??_LCD_Command+1
  3599  0286  30EE               	movlw	238
  3600  0287  00F0               	movwf	??_LCD_Command
  3601  0288                     u1507:
  3602  0288  0BF0               	decfsz	??_LCD_Command,f
  3603  0289  2A88               	goto	u1507
  3604  028A  0BF1               	decfsz	??_LCD_Command+1,f
  3605  028B  2A88               	goto	u1507
  3606  028C  0000               	nop
  3607  028D                     l1275:
  3608                           
  3609                           ;./lcd4bit.h: 19:     RC1 = 0;
  3610  028D  1283               	bcf	3,5	;RP0=0, select bank0
  3611  028E  1303               	bcf	3,6	;RP1=0, select bank0
  3612  028F  1087               	bcf	7,1	;volatile
  3613                           
  3614                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3615  0290  3041               	movlw	65
  3616  0291  00F1               	movwf	??_LCD_Command+1
  3617  0292  30EE               	movlw	238
  3618  0293  00F0               	movwf	??_LCD_Command
  3619  0294                     u1517:
  3620  0294  0BF0               	decfsz	??_LCD_Command,f
  3621  0295  2A94               	goto	u1517
  3622  0296  0BF1               	decfsz	??_LCD_Command+1,f
  3623  0297  2A94               	goto	u1517
  3624  0298  0000               	nop
  3625  0299                     l1277:
  3626                           
  3627                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  3628  0299  0872               	movf	LCD_Command@cmnd,w
  3629  029A  00F0               	movwf	??_LCD_Command
  3630  029B  3003               	movlw	3
  3631  029C                     u745:
  3632  029C  1003               	clrc
  3633  029D  0DF0               	rlf	??_LCD_Command,f
  3634  029E  3EFF               	addlw	-1
  3635  029F  1D03               	skipz
  3636  02A0  2A9C               	goto	u745
  3637  02A1  1003               	clrc
  3638  02A2  0D70               	rlf	??_LCD_Command,w
  3639  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  3640  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  3641  02A5  0086               	movwf	6	;volatile
  3642  02A6                     l1279:
  3643                           
  3644                           ;./lcd4bit.h: 22:     RC1 = 1;
  3645  02A6  1487               	bsf	7,1	;volatile
  3646  02A7                     l1281:
  3647                           
  3648                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3649  02A7  3041               	movlw	65
  3650  02A8  00F1               	movwf	??_LCD_Command+1
  3651  02A9  30EE               	movlw	238
  3652  02AA  00F0               	movwf	??_LCD_Command
  3653  02AB                     u1527:
  3654  02AB  0BF0               	decfsz	??_LCD_Command,f
  3655  02AC  2AAB               	goto	u1527
  3656  02AD  0BF1               	decfsz	??_LCD_Command+1,f
  3657  02AE  2AAB               	goto	u1527
  3658  02AF  0000               	nop
  3659  02B0                     l1283:
  3660                           
  3661                           ;./lcd4bit.h: 24:     RC1 = 0;
  3662  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3663  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3664  02B2  1087               	bcf	7,1	;volatile
  3665  02B3                     l1285:
  3666                           
  3667                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3668  02B3  3041               	movlw	65
  3669  02B4  00F1               	movwf	??_LCD_Command+1
  3670  02B5  30EE               	movlw	238
  3671  02B6  00F0               	movwf	??_LCD_Command
  3672  02B7                     u1537:
  3673  02B7  0BF0               	decfsz	??_LCD_Command,f
  3674  02B8  2AB7               	goto	u1537
  3675  02B9  0BF1               	decfsz	??_LCD_Command+1,f
  3676  02BA  2AB7               	goto	u1537
  3677  02BB  0000               	nop
  3678  02BC                     l91:
  3679  02BC  0008               	return
  3680  02BD                     __end_of_LCD_Command:
  3681  007E                     btemp	set	126	;btemp
  3682  007E                     wtemp0	set	126
  3683                           
  3684                           	psect	idloc
  3685                           
  3686                           ;Config register IDLOC0 @ 0x2000
  3687                           ;	unspecified, using default values
  3688  2000                     	org	8192
  3689  2000  3FFF               	dw	16383
  3690                           
  3691                           ;Config register IDLOC1 @ 0x2001
  3692                           ;	unspecified, using default values
  3693  2001                     	org	8193
  3694  2001  3FFF               	dw	16383
  3695                           
  3696                           ;Config register IDLOC2 @ 0x2002
  3697                           ;	unspecified, using default values
  3698  2002                     	org	8194
  3699  2002  3FFF               	dw	16383
  3700                           
  3701                           ;Config register IDLOC3 @ 0x2003
  3702                           ;	unspecified, using default values
  3703  2003                     	org	8195
  3704  2003  3FFF               	dw	16383
  3705                           
  3706                           	psect	config
  3707                           
  3708                           ;Config register CONFIG @ 0x2007
  3709                           ;	unspecified, using default values
  3710                           ;	Oscillator Selection bits
  3711                           ;	FOSC = 0x3, unprogrammed default
  3712                           ;	Watchdog Timer Enable bit
  3713                           ;	WDTE = 0x1, unprogrammed default
  3714                           ;	Power-up Timer Enable bit
  3715                           ;	PWRTE = 0x1, unprogrammed default
  3716                           ;	Brown-out Reset Enable bit
  3717                           ;	BOREN = 0x1, unprogrammed default
  3718                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3719                           ;	LVP = 0x1, unprogrammed default
  3720                           ;	Data EEPROM Memory Code Protection bit
  3721                           ;	CPD = 0x1, unprogrammed default
  3722                           ;	Flash Program Memory Write Enable bits
  3723                           ;	WRT = 0x3, unprogrammed default
  3724                           ;	In-Circuit Debugger Mode bit
  3725                           ;	DEBUG = 0x1, unprogrammed default
  3726                           ;	Flash Program Memory Code Protection bit
  3727                           ;	CP = 0x1, unprogrammed default
  3728  2007                     	org	8199
  3729  2007  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        2
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     47      80
    BANK1            80      0      80
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->___almod
    _show_multidigits->___almod
    _show->_LCD_Char
    _i2c_send_byte->_i2c_send
    _i2c_read_byte->_i2c_send
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_show_multidigits
    _show_multidigits->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    5873
                                             22 BANK0     25    25      0
                        _LCD_Command
                           _LCD_init
                            ___aldiv
                            ___almod
                           _i2c_init
                      _i2c_read_byte
                      _i2c_send_byte
                               _show
                   _show_multidigits
 ---------------------------------------------------------------------------------
 (1) _show_multidigits                                    16    14      2    4333
                                              6 BANK0     16    14      2
                           _LCD_Char
                            ___aldiv (ARG)
                            ___almod (ARG)
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     919
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     922
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     122
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_send_byte                                        2     1      1     142
                                              1 COMMON     2     1      1
                           _i2c_send
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (1) _i2c_read_byte                                        3     3      0      67
                                              1 COMMON     3     3      0
                            _i2c_nak
                           _i2c_read
                        _i2c_restart
                           _i2c_send
                           _i2c_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_nak                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___almod                                             11     3      8     448
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Command
   _LCD_init
     _LCD_Command
   ___aldiv
   ___almod
   _i2c_init
   _i2c_read_byte
     _i2c_nak
       _waitmssp
     _i2c_read
       _waitmssp
     _i2c_restart
       _waitmssp
     _i2c_send
       _waitmssp
     _i2c_stop
       _waitmssp
     _waitmssp
   _i2c_send_byte
     _i2c_send
     _i2c_start
       _waitmssp
     _i2c_stop
   _show
     _LCD_Char
   _show_multidigits
     _LCD_Char
     ___aldiv (ARG)
     ___almod (ARG)
     ___awdiv (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      14       9       20.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C1      12        0.0%
ABS                  0      0      C1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 08 17:06:02 2022

                        _p 0194                          _t 0190                          pc 0002  
             ?_LCD_Command 0070                         l51 014F                         l60 0162  
                       l45 0195                         l54 0146                         l70 0179  
                       l63 012E                         l48 0158                         l65 0134  
                       l73 017F                         l66 0135                         l82 020A  
                       l91 02BC                         l83 0218                         l76 01B3  
                       l69 0170                         l86 0242                         l94 02FC  
                       l79 016E                         l97 0208                         _b0 00DC  
                       _b1 00D8                         _b2 00D4                         _b3 00D0  
                       _b4 00A4                         _b5 00CC                         _b6 00C8  
                       _b7 00A0                         _b8 00C4                         _b9 00C0  
             ___awdiv@sign 0076                         _x1 019C                         _x2 0198  
                       _aa 0057                         _ab 0053                         _ac 00EC  
                       _ba 00BC                         _ad 00E8                         _bb 00B8  
                       _ae 00E4                         _bc 00B4                         _af 00E0  
                       _bd 00B0                         _be 00AC                         _bf 00A8  
                       _mb 0068                         _mc 0066                         _md 0064  
                       _up 004F                         _ut 01A0                         fsr 0004  
                      l106 01D2                        l115 07D3                        l119 07D3  
                      l360 049A                        l370 0522                        l373 0413  
                      l461 0399                        l383 0485                        l448 0400  
                      l567 0340                        l577 027C                        _RC0 0038  
                      _RC1 0039                        _PEN 048A                        u720 0134  
                      u800 03CD                        u721 0133                        u801 03CC  
                      u730 017F                        u731 017E                        u820 03DE  
                      u900 036E                        _SEN 0488                        u821 03DD  
                      u901 036D                        u910 0378                        u815 03CE  
                      u911 0377                        u840 03F2                        u760 039F  
                      u745 029C                        u841 03F1                        u825 03DA  
                      u761 039E                        u850 03F7                        u770 03AA  
                      u930 038B                        u755 02DC                        u851 03F6  
                      u835 03E6                        u771 03A9                        u931 038A  
                      u915 0374                        u780 03BB                        u940 0390  
                      u860 0346                        u781 03BA                        u941 038F  
                      u925 037F                        u861 0345                        u870 0351  
                      u950 0305                        u871 0350                        u951 0304  
                      u880 035C                        u881 035B                        u970 0317  
                      u795 03BF                        u971 0316                        u965 0309  
                      u990 0328                        u895 0360                        u991 0327  
                      u985 0318                        u995 0324                        _ac1 007B  
                      _ac2 006C                        _ac3 006A                        _ac4 0062  
                      _ac5 0060                        _ac6 005E                        _avv 005B  
                      _oss 006E                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076     show_multidigits@digit1 002E     show_multidigits@digit2 0030  
   show_multidigits@digit3 002C     show_multidigits@digit4 0028                       l1301 02F0  
                     l1303 02F3                       l1311 03A4                       l1241 0150  
                     l1321 03B5                       l1313 03A6                       l1305 039A  
                     l1401 0328                       l1251 0141                       l1243 0153  
                     l1331 03CD                       l1323 03BB                       l1315 03AA  
                     l1307 039B                       l1403 032E                       l1253 0159  
                     l1261 0163                       l1245 0147                       l1333 03DE  
                     l1325 03BE                       l1341 03F2                       l1317 03AF  
                     l1309 039F                       l1405 032F                       l1421 0257  
                     l1413 0243                       l1501 06A0                       l1271 0281  
                     l1239 012E                       l1255 015D                       l1263 0166  
                     l1247 014A                       l1343 03F7                       l1335 03E4  
                     l1327 03C5                       l1319 03B3                       l1351 0342  
                     l1407 0336                       l1423 025B                       l1415 0249  
                     l1431 0278                       l1511 06F3                       l1503 06A9  
                     l1281 02A7                       l1273 0283                       l1601 0450  
                     l1265 016B                       l1249 013E                       l1257 0170  
                     l1441 019C                       l1345 03FC                       l1337 03E5  
                     l1329 03C9                       l1361 0356                       l1353 0346  
                     l1409 033C                       l1425 0265                       l1417 024C  
                     l1521 0729                       l1513 0706                       l1505 06B2  
                     l1283 02B0                       l1275 028D                       l1611 047D  
                     l1603 045E                       l1435 0180                       l1259 0174  
                     l1451 020F                       l1443 01A2                       l1291 02C3  
                     l1339 03EC                       l1371 036E                       l1363 035C  
                     l1355 034B                       l1427 026B                       l1419 0253  
                     l1531 0786                       l1523 0732                       l1515 070D  
                     l1507 06D8                       l1285 02B3                       l1277 0299  
                     l1269 027E                       l1605 0467                       l1437 018D  
                     l1461 022F                       l1453 0213                       l1445 01A8  
                     l1293 02CD                       l1381 0390                       l1373 0378  
                     l1365 035F                       l1357 034D                       l1349 0341  
                     l1429 0272                       l1541 07C9                       l1533 079D  
                     l1525 0758                       l1517 0716                       l1509 06DC  
                     l1279 02A6                       l1471 01DB                       l1551 04A9  
                     l1543 0486                       l1607 046D                       l1463 0237  
                     l1455 021E                       l1447 01AE                       l1439 0197  
                     l1295 02D9                       l1287 02BE                       l1383 0395  
                     l1375 037E                       l1367 0366                       l1359 0351  
                     l1391 0305                       l1535 07B0                       l1527 075C  
                     l1519 0720                       l1473 01FF                       l1561 04CD  
                     l1553 04AD                       l1545 0489                       l1609 0472  
                     l1465 023C                       l1457 0224                       l1449 020A  
                     l1297 02E6                       l1289 02C1                       l1481 01C6  
                     l1377 0385                       l1369 036A                       l1393 0308  
                     l1537 07B7                       l1529 0773                       l1571 04FB  
                     l1563 04D1                       l1555 04B5                       l1547 048D  
                     l1459 0229                       l1299 02E7                       l1475 01B5  
                     l1379 038B                       l1395 030F                       l1387 02FD  
                     l1539 07C0                       l1491 0665                       l1483 0640  
                     l1651 052D                       l1469 01D3                       l1573 0504  
                     l1565 04DA                       l1557 04BD                       l1549 049E  
                     l1477 01B6                       l1397 0313                       l1389 02FF  
                     l1493 0678                       l1485 064B                       l1661 056B  
                     l1653 0533                       l1567 04EC                       l1559 04C0  
                     l1575 050A                       l1591 0422                       l1583 0401  
                     l1479 01C2                       l1399 0317                       l1495 067C  
                     l1487 0653                       l1671 061A                       l1663 057F  
                     l1655 0541                       l1577 050F                       l1569 04FA  
                     l1593 042A                       l1585 0402                       l1497 068F  
                     l1489 065C                       l1665 0593                       l1657 054D  
                     l1649 0523                       l1579 051A                       l1595 042D  
                     l1587 0406                       l1499 0696                       l1667 05F2  
                     l1659 0557                       l1597 043A                       l1589 0417  
                     l1669 05F8                       l1599 043E                       STR_1 0009  
                     u1010 033C                       u1011 033B                       u1100 021E  
                     u1020 0249                       u1101 021D                       u1005 0330  
                     u1021 0248                       u1110 01D2                       u1111 01D1  
                     u1200 049E                       u1040 025B                       u1120 064B  
                     u1201 049D                       u1041 025A                       u1121 064A  
                     u1210 04BD                       u1050 0265                       u1130 065C  
                     u1211 04BC                       u1051 0264                       u1035 024D  
                     u1131 065B                       u1300 0417                       u1140 0665  
                     u1301 0416                       u1141 0664                       u1230 04D1  
                     u1310 042A                       u1070 0278                       u1150 06A9  
                     u1231 04D0                       u1311 0429                       u1071 0277  
                     u1055 0261                       u1151 06A8                       u1080 018A  
                     u1160 06B2                       u1400 05C4                       u1225 04C2  
                     u1081 0186                       u1065 026C                       u1161 06B1  
                     u1401 05C5                       u1250 04EC                       u1330 043E  
                     u1170 0729                       u1410 05D6                       u1402 05CA  
                     u1251 04EB                       u1331 043D                       u1171 0728  
                     u1411 05D7                       u1403 05CB                       u1340 0450  
                     u1180 0732                       u1420 05E8                       u1412 05DC  
                     u1245 04D3                       u1341 044F                       u1325 042F  
                     u1181 0731                       u1413 05DD                       u1270 050A  
                     u1190 048D                       u1094 018D                       u1271 0509  
                     u1255 04E8                       u1191 048C                       u1280 050F  
                     u1360 046D                       u1281 050E                       u1265 04FC  
                     u1361 046C                       u1345 044C                       u1425 05E3  
                     u1370 0472                       u1290 0406                       u1507 0288  
                     u1371 0471                       u1355 045F                       u1291 0405  
                     u1380 05A9                       u1517 0294                       u1437 053B  
                     u1390 05BA                       u1527 02AB                       u1447 0553  
                     u1537 02B7                       u1457 02C8                       u1385 05A4  
                     u1467 02D4                       u1395 05B5                       u1477 02EB  
                     u1487 02F7                       u1497 0203                       _RCEN 048B  
   show_multidigits@result 002A                       _RSEN 0489              _i2c_read_byte 0209  
                     _main 0523                       _show 01B4                       btemp 007E  
                     start 0000              ??_i2c_restart 0070              _i2c_send_byte 0196  
          __end_of_i2c_nak 0163           __end_of_LCD_Char 02FD               LCD_Char@data 0072  
         __end_of_LCD_init 0209            __end_of___aldiv 0523            __end_of___almod 0486  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
          __end_of___awdiv 0401            __end_of___awmod 039A                      ?_show 0070  
          ___awdiv@divisor 0070            __end_of___lwdiv 0341            __end_of___lwmod 027D  
          ___awdiv@counter 0075    show_multidigits@result1 0032                      _PORTB 0006  
                    _SSPIF 0063                i2c_send@dat 0070         i2c_send_byte@count 0071  
                    pclath 000A             ?_i2c_read_byte 0070                      show@s 0074  
                    status 0003                      wtemp0 007E             ?_i2c_send_byte 0071  
          __initialization 07D4               __end_of_main 0640               __end_of_show 01D3  
         __end_of_i2c_init 0196           __end_of_i2c_read 016F           __end_of_i2c_send 0180  
         __end_of_i2c_stop 0150        __end_of_i2c_restart 0147                     ??_main 0036  
                   ??_show 0073           ___awdiv@dividend 0072                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013         __size_of_i2c_start 0009                  ??_i2c_nak 0070  
                ??___aldiv 0078                  ??___almod 0078                  ??___awdiv 0074  
                ??___awmod 0074                  ??___lwdiv 0074                  ??___lwmod 0074  
         ___awdiv@quotient 0077            ___awmod@divisor 0070            ___awmod@counter 0075  
     __size_of_LCD_Command 0040           __end_of_waitmssp 0136            ??_i2c_read_byte 0071  
__size_of_show_multidigits 0194                  ?_LCD_Char 0070    __end_of__initialization 07FC  
                ?_LCD_init 0070            ??_i2c_send_byte 0072             __pcstackCOMMON 0070  
              _i2c_restart 013E               __pidataBANK0 012C          __end_of_i2c_start 0159  
               __pbssBANK0 004F                 __pbssBANK1 00A0                 __pbssBANK3 0190  
                ?_i2c_init 0070                  ?_i2c_read 0070                  ?_i2c_send 0070  
               ??_LCD_Char 0070                  ?_i2c_stop 0070                 ??_LCD_init 0073  
               __pmaintext 0523                    _ACKSTAT 048E                 __stringtab 0003  
      show_multidigits@val 0026                 ??_i2c_init 0070                 ??_i2c_read 0070  
               ??_i2c_send 0070                 ??_i2c_stop 0070                    _i2c_nak 0159  
                ?_waitmssp 0070                    ___aldiv 0486                    ___almod 0401  
                  ___awdiv 039A                    ___awmod 0341                    ___lwdiv 02FD  
                  ___lwmod 0243                    __ptext1 0640                    __ptext2 0243  
                  __ptext3 02FD                    __ptext4 0341                    __ptext5 039A  
                  __ptext6 01B4                    __ptext7 02BD                    __ptext8 0196  
                  __ptext9 0150           ___awmod@dividend 0072           ___aldiv@dividend 0074  
                  main@ff6 0043                    main@ff7 0047                    main@ff8 004B  
                  clrloop0 0137       end_of_initialization 07FC           _show_multidigits 0640  
         ___aldiv@quotient 0022                 ??_waitmssp 0070                  _TRISBbits 0086  
                _TRISCbits 0087          __size_of_LCD_Char 0040          __size_of_LCD_init 0036  
             ?_i2c_restart 0070              ??_LCD_Command 0070          i2c_send_byte@addr 0072  
      start_initialization 07D4                  _i2c_start 0150      __end_of_i2c_read_byte 0243  
        __size_of_i2c_init 0016          __size_of_i2c_read 000C          __size_of_i2c_send 0011  
        __size_of_i2c_stop 0009      __end_of_i2c_send_byte 01B4                __pdataBANK0 006E  
      __end_of_LCD_Command 02BD                __pbssCOMMON 007B                  ___latbits 0002  
            __pcstackBANK0 0020                 ?_i2c_start 0070                   ?_i2c_nak 0070  
         ___lwdiv@dividend 0072                   ?___aldiv 0070                   ?___almod 0070  
                 ?___awdiv 0070                   ?___awmod 0070                   ?___lwdiv 0070  
                 ?___lwmod 0070   __end_of_show_multidigits 07D4          __size_of_waitmssp 0008  
         ___almod@dividend 0074                  __pstrings 0003           ___lwdiv@quotient 0075  
          ___aldiv@divisor 0070                   _LCD_Char 02BD            ___aldiv@counter 0020  
                 _LCD_init 01D3                  clear_ram0 0136                _LCD_Command 027D  
     __size_of_i2c_restart 0009                __stringbase 0008                ??_i2c_start 0070  
                 _i2c_init 0180                   _i2c_read 0163                   _i2c_send 016F  
                 _i2c_stop 0147           __size_of_i2c_nak 000A           __size_of___aldiv 009D  
         __size_of___almod 0085           __size_of___awdiv 0067           __size_of___awmod 0059  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0009  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 0209  
                 __ptext11 0147                   __ptext20 01D3                   __ptext12 016F  
                 __ptext21 027D                   __ptext13 013E                   __ptext14 0163  
                 __ptext15 0159                   __ptext16 012E                   __ptext17 0180  
                 __ptext18 0401                   __ptext19 0486            ___almod@divisor 0070  
          ___almod@counter 0079              __size_of_main 011D              __size_of_show 001F  
                 _waitmssp 012E            LCD_Command@cmnd 0072           ___lwmod@dividend 0072  
                stringcode 0003  show_multidigits@remainder 0034          ?_show_multidigits 0026  
   __size_of_i2c_read_byte 003A         ??_show_multidigits 007B            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 0003                   stringtab 0003  
             ___aldiv@sign 0021     __size_of_i2c_send_byte 001E          i2c_read_byte@addr 0072  
             ___almod@sign 007A           i2c_read_byte@rec 0073  
