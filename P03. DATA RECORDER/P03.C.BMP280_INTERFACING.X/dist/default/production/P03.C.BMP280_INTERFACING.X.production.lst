

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 08 20:01:05 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197                           
   198                           	psect	idataBANK0
   199  0005                     __pidataBANK0:
   200                           
   201                           ;initializer for _oss
   202  0005  3403               	retlw	3
   203  0006  3400               	retlw	0
   204  0006                     _PORTB	set	6
   205  0013                     _SSPBUF	set	19
   206  0014                     _SSPCON	set	20
   207  0039                     _RC1	set	57
   208  0038                     _RC0	set	56
   209  0063                     _SSPIF	set	99
   210  0087                     _TRISCbits	set	135
   211  0086                     _TRISBbits	set	134
   212  0093                     _SSPADD	set	147
   213  048B                     _RCEN	set	1163
   214  048E                     _ACKSTAT	set	1166
   215  048C                     _ACKEN	set	1164
   216  048D                     _ACKDT	set	1165
   217  0489                     _RSEN	set	1161
   218  048A                     _PEN	set	1162
   219  0488                     _SEN	set	1160
   220  043C                     _TRISC4	set	1084
   221  043B                     _TRISC3	set	1083
   222                           
   223                           	psect	strings
   224  0800                     __pstrings:
   225  0800                     stringtab:
   226  0800                     __stringtab:
   227  0800                     stringcode:	
   228                           ;	String table - string pointers are 1 byte each
   229                           
   230  0800                     stringdir:
   231  0800  3008               	movlw	high stringdir
   232  0801  008A               	movwf	10
   233  0802  0804               	movf	4,w
   234  0803  0A84               	incf	4,f
   235  0804  0782               	addwf	2,f
   236  0805                     __stringbase:
   237  0805  3400               	retlw	0
   238  0806                     __end_of__stringtab:
   239  0806                     STR_1:
   240  0806  3442               	retlw	66	;'B'
   241  0807  344D               	retlw	77	;'M'
   242  0808  3450               	retlw	80	;'P'
   243  0809  3432               	retlw	50	;'2'
   244  080A  3438               	retlw	56	;'8'
   245  080B  3430               	retlw	48	;'0'
   246  080C  3400               	retlw	0
   247                           
   248                           	psect	cinit
   249  07DF                     start_initialization:	
   250                           ; #config settings
   251                           
   252  07DF                     __initialization:
   253                           
   254                           ; Initialize objects allocated to BANK0
   255  07DF  120A  118A  2005  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   256  07E4  00ED               	movwf	__pdataBANK0& (0+127)
   257  07E5  120A  118A  2006  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   258  07EA  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   259                           
   260                           ; Clear objects allocated to BANK1
   261  07EB  1383               	bcf	3,7	;select IRP bank0
   262  07EC  30A0               	movlw	low __pbssBANK1
   263  07ED  0084               	movwf	4
   264  07EE  30D7               	movlw	low (__pbssBANK1+55)
   265  07EF  120A  158A  2309  120A  118A  	fcall	clear_ram0
   266                           
   267                           ; Clear objects allocated to BANK0
   268  07F4  304D               	movlw	low __pbssBANK0
   269  07F5  0084               	movwf	4
   270  07F6  306D               	movlw	low (__pbssBANK0+32)
   271  07F7  120A  158A  2309  120A  118A  	fcall	clear_ram0
   272  07FC                     end_of_initialization:	
   273                           ;End of C runtime variable initialization code
   274                           
   275  07FC                     __end_of__initialization:
   276  07FC  0183               	clrf	3
   277  07FD  120A  118A  2A4C   	ljmp	_main	;jump to C main() function
   278                           
   279                           	psect	bssBANK0
   280  004D                     __pbssBANK0:
   281  004D                     _x2:
   282  004D                     	ds	4
   283  0051                     _x1:
   284  0051                     	ds	4
   285  0055                     _b7:
   286  0055                     	ds	4
   287  0059                     _b6:
   288  0059                     	ds	4
   289  005D                     _b1:
   290  005D                     	ds	4
   291  0061                     _ac4:
   292  0061                     	ds	2
   293  0063                     _ac3:
   294  0063                     	ds	2
   295  0065                     _ac2:
   296  0065                     	ds	2
   297  0067                     _ac1:
   298  0067                     	ds	2
   299  0069                     _p:
   300  0069                     	ds	4
   301                           
   302                           	psect	dataBANK0
   303  006D                     __pdataBANK0:
   304  006D                     _oss:
   305  006D                     	ds	2
   306                           
   307                           	psect	bssBANK1
   308  00A0                     __pbssBANK1:
   309  00A0                     _x3:
   310  00A0                     	ds	4
   311  00A4                     _up:
   312  00A4                     	ds	4
   313  00A8                     _b4:
   314  00A8                     	ds	4
   315  00AC                     _b5:
   316  00AC                     	ds	4
   317  00B0                     _b3:
   318  00B0                     	ds	4
   319  00B4                     _b2:
   320  00B4                     	ds	4
   321  00B8                     _b0:
   322  00B8                     	ds	4
   323  00BC                     _af:
   324  00BC                     	ds	4
   325  00C0                     _ae:
   326  00C0                     	ds	4
   327  00C4                     _ad:
   328  00C4                     	ds	4
   329  00C8                     _ac:
   330  00C8                     	ds	4
   331  00CC                     _ab:
   332  00CC                     	ds	4
   333  00D0                     _aa:
   334  00D0                     	ds	4
   335  00D4                     _avv:
   336  00D4                     	ds	3
   337                           
   338                           	psect	clrtext
   339  0B09                     clear_ram0:	
   340                           ;	Called with FSR containing the base address, and
   341                           ;	W with the last address+1
   342                           
   343  0B09  0064               	clrwdt	;clear the watchdog before getting into this loop
   344  0B0A                     clrloop0:
   345  0B0A  0180               	clrf	0	;clear RAM location pointed to by FSR
   346  0B0B  0A84               	incf	4,f	;increment pointer
   347  0B0C  0604               	xorwf	4,w	;XOR with final address
   348  0B0D  1903               	btfsc	3,2	;have we reached the end yet?
   349  0B0E  3400               	retlw	0	;all done for this memory range, return
   350  0B0F  0604               	xorwf	4,w	;XOR again to restore value
   351  0B10  2B0A               	goto	clrloop0	;do the next byte
   352                           
   353                           	psect	cstackCOMMON
   354  0070                     __pcstackCOMMON:
   355  0070                     ?_waitmssp:
   356  0070                     ??_waitmssp:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_bmp280_getdata:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_uncompensated_pressure:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_bmp280_init:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ??_bmp280_init:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_bmp280_start:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_bmp280_start:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_bmp280_stop:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_bmp280_stop:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_bmp280_restart:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ??_bmp280_restart:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_bmp280_nak:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_bmp280_nak:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_bmp280_send:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ??_bmp280_send:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_bmp280_read:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_bmp280_read:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_bmp280_read_byte:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_LCD_Command:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_LCD_Command:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_LCD_Char:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_LCD_Char:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_LCD_init:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_show:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_main:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?___awdiv:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?___awmod:	
   435                           ; 2 bytes @ 0x0
   436                           
   437  0070                     ?___lwdiv:	
   438                           ; 2 bytes @ 0x0
   439                           
   440  0070                     ?___lwmod:	
   441                           ; 2 bytes @ 0x0
   442                           
   443  0070                     ?___lmul:	
   444                           ; 2 bytes @ 0x0
   445                           
   446  0070                     ?___lldiv:	
   447                           ; 4 bytes @ 0x0
   448                           
   449  0070                     bmp280_send@dat:	
   450                           ; 4 bytes @ 0x0
   451                           
   452  0070                     ___awdiv@divisor:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ___awmod@divisor:	
   456                           ; 2 bytes @ 0x0
   457                           
   458  0070                     ___lwdiv@divisor:	
   459                           ; 2 bytes @ 0x0
   460                           
   461  0070                     ___lwmod@divisor:	
   462                           ; 2 bytes @ 0x0
   463                           
   464  0070                     ___lmul@multiplier:	
   465                           ; 2 bytes @ 0x0
   466                           
   467  0070                     ___lldiv@divisor:	
   468                           ; 4 bytes @ 0x0
   469                           
   470                           
   471                           ; 4 bytes @ 0x0
   472  0070                     	ds	1
   473  0071                     ?_bmp280_send_byte:
   474  0071                     ??_bmp280_read_byte:	
   475                           ; 1 bytes @ 0x1
   476                           
   477  0071                     bmp280_send_byte@count:	
   478                           ; 1 bytes @ 0x1
   479                           
   480                           
   481                           ; 1 bytes @ 0x1
   482  0071                     	ds	1
   483  0072                     ??_bmp280_send_byte:
   484  0072                     bmp280_send_byte@addr:	
   485                           ; 1 bytes @ 0x2
   486                           
   487  0072                     bmp280_read_byte@addr:	
   488                           ; 1 bytes @ 0x2
   489                           
   490  0072                     LCD_Command@cmnd:	
   491                           ; 1 bytes @ 0x2
   492                           
   493  0072                     LCD_Char@data:	
   494                           ; 1 bytes @ 0x2
   495                           
   496  0072                     ___awdiv@dividend:	
   497                           ; 1 bytes @ 0x2
   498                           
   499  0072                     ___awmod@dividend:	
   500                           ; 2 bytes @ 0x2
   501                           
   502  0072                     ___lwdiv@dividend:	
   503                           ; 2 bytes @ 0x2
   504                           
   505  0072                     ___lwmod@dividend:	
   506                           ; 2 bytes @ 0x2
   507                           
   508                           
   509                           ; 2 bytes @ 0x2
   510  0072                     	ds	1
   511  0073                     ??_LCD_init:
   512  0073                     ??_show:	
   513                           ; 1 bytes @ 0x3
   514                           
   515  0073                     bmp280_read_byte@rec:	
   516                           ; 1 bytes @ 0x3
   517                           
   518                           
   519                           ; 1 bytes @ 0x3
   520  0073                     	ds	1
   521  0074                     ??_bmp280_getdata:
   522  0074                     ??___awdiv:	
   523                           ; 1 bytes @ 0x4
   524                           
   525  0074                     ??___awmod:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0074                     ??___lwdiv:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  0074                     ??___lwmod:	
   532                           ; 1 bytes @ 0x4
   533                           
   534  0074                     show@s:	
   535                           ; 1 bytes @ 0x4
   536                           
   537  0074                     ___lmul@multiplicand:	
   538                           ; 1 bytes @ 0x4
   539                           
   540  0074                     ___lldiv@dividend:	
   541                           ; 4 bytes @ 0x4
   542                           
   543                           
   544                           ; 4 bytes @ 0x4
   545  0074                     	ds	1
   546  0075                     ___awdiv@counter:
   547  0075                     ___awmod@counter:	
   548                           ; 1 bytes @ 0x5
   549                           
   550  0075                     ___lwmod@counter:	
   551                           ; 1 bytes @ 0x5
   552                           
   553  0075                     ___lwdiv@quotient:	
   554                           ; 1 bytes @ 0x5
   555                           
   556                           
   557                           ; 2 bytes @ 0x5
   558  0075                     	ds	1
   559  0076                     ___awdiv@sign:
   560  0076                     ___awmod@sign:	
   561                           ; 1 bytes @ 0x6
   562                           
   563                           
   564                           ; 1 bytes @ 0x6
   565  0076                     	ds	1
   566  0077                     ___lwdiv@counter:
   567  0077                     ___awdiv@quotient:	
   568                           ; 1 bytes @ 0x7
   569                           
   570                           
   571                           ; 2 bytes @ 0x7
   572  0077                     	ds	1
   573  0078                     ??___lmul:
   574  0078                     ??___lldiv:	
   575                           ; 1 bytes @ 0x8
   576                           
   577                           
   578                           ; 1 bytes @ 0x8
   579  0078                     	ds	1
   580  0079                     ?_show_multidigits:
   581  0079                     show_multidigits@val:	
   582                           ; 1 bytes @ 0x9
   583                           
   584  0079                     ___lmul@product:	
   585                           ; 2 bytes @ 0x9
   586                           
   587  0079                     ___lldiv@quotient:	
   588                           ; 4 bytes @ 0x9
   589                           
   590                           
   591                           ; 4 bytes @ 0x9
   592  0079                     	ds	2
   593  007B                     ??_show_multidigits:
   594                           
   595                           ; 1 bytes @ 0xB
   596  007B                     	ds	2
   597  007D                     ??___aldiv:
   598  007D                     ___lldiv@counter:	
   599                           ; 1 bytes @ 0xD
   600                           
   601                           
   602                           ; 1 bytes @ 0xD
   603  007D                     	ds	1
   604                           
   605                           	psect	cstackBANK0
   606  0020                     __pcstackBANK0:
   607  0020                     ??_uncompensated_pressure:
   608  0020                     ?___aldiv:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0020                     show_multidigits@digit4:	
   612                           ; 4 bytes @ 0x0
   613                           
   614  0020                     ___aldiv@divisor:	
   615                           ; 2 bytes @ 0x0
   616                           
   617                           
   618                           ; 4 bytes @ 0x0
   619  0020                     	ds	2
   620  0022                     show_multidigits@result:
   621                           
   622                           ; 2 bytes @ 0x2
   623  0022                     	ds	2
   624  0024                     show_multidigits@digit3:
   625  0024                     ___aldiv@dividend:	
   626                           ; 2 bytes @ 0x4
   627                           
   628                           
   629                           ; 4 bytes @ 0x4
   630  0024                     	ds	2
   631  0026                     show_multidigits@digit1:
   632                           
   633                           ; 2 bytes @ 0x6
   634  0026                     	ds	2
   635  0028                     ___aldiv@counter:
   636  0028                     show_multidigits@digit2:	
   637                           ; 1 bytes @ 0x8
   638                           
   639                           
   640                           ; 2 bytes @ 0x8
   641  0028                     	ds	1
   642  0029                     ___aldiv@sign:
   643                           
   644                           ; 1 bytes @ 0x9
   645  0029                     	ds	1
   646  002A                     show_multidigits@result1:
   647  002A                     ___aldiv@quotient:	
   648                           ; 2 bytes @ 0xA
   649                           
   650                           
   651                           ; 4 bytes @ 0xA
   652  002A                     	ds	2
   653  002C                     show_multidigits@remainder:
   654                           
   655                           ; 2 bytes @ 0xC
   656  002C                     	ds	1
   657  002D                     uncompensated_pressure@ff6:
   658                           
   659                           ; 4 bytes @ 0xD
   660  002D                     	ds	4
   661  0031                     uncompensated_pressure@ff7:
   662                           
   663                           ; 4 bytes @ 0x11
   664  0031                     	ds	4
   665  0035                     uncompensated_pressure@ff8:
   666                           
   667                           ; 4 bytes @ 0x15
   668  0035                     	ds	4
   669  0039                     ??_main:
   670                           
   671                           ; 1 bytes @ 0x19
   672  0039                     	ds	14
   673  0047                     main@hpa:
   674                           
   675                           ; 2 bytes @ 0x27
   676  0047                     	ds	2
   677  0049                     _main$851:
   678                           
   679                           ; 4 bytes @ 0x29
   680  0049                     	ds	4
   681                           
   682                           	psect	maintext
   683  024C                     __pmaintext:	
   684 ;;
   685 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
   686 ;;
   687 ;; *************** function _main *****************
   688 ;; Defined at:
   689 ;;		line 25 in file "main_bmp280.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  hpa             2   39[BANK0 ] unsigned int 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : B00/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         0       6       0       0       0
   705 ;;      Temps:          0      14       0       0       0
   706 ;;      Totals:         0      20       0       0       0
   707 ;;Total ram usage:       20 bytes
   708 ;; Hardware stack levels required when called: 4
   709 ;; This function calls:
   710 ;;		_LCD_Command
   711 ;;		_LCD_init
   712 ;;		___aldiv
   713 ;;		___lldiv
   714 ;;		___lmul
   715 ;;		_bmp280_getdata
   716 ;;		_bmp280_init
   717 ;;		_show
   718 ;;		_show_multidigits
   719 ;;		_uncompensated_pressure
   720 ;; This function is called by:
   721 ;;		Startup code after reset
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _main
   727  024C                     _main:
   728  024C                     l1679:	
   729                           ;incstack = 0
   730                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   731                           
   732                           
   733                           ;main_bmp280.c: 27:     LCD_init();
   734  024C  120A  158A  2390  120A  118A  	fcall	_LCD_init
   735                           
   736                           ;main_bmp280.c: 28:     bmp280_init();
   737  0251  120A  118A  2007  120A  118A  	fcall	_bmp280_init
   738  0256                     l1681:
   739                           
   740                           ;main_bmp280.c: 30:     show("BMP280");
   741  0256  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   742  0257  120A  158A  2371  120A  118A  	fcall	_show
   743  025C                     l1683:
   744                           
   745                           ;main_bmp280.c: 31:     _delay((unsigned long)((1000)*(12000000/4000.0)));
   746  025C  3010               	movlw	16
   747  025D  1283               	bcf	3,5	;RP0=0, select bank0
   748  025E  1303               	bcf	3,6	;RP1=0, select bank0
   749  025F  00BB               	movwf	??_main+2
   750  0260  3039               	movlw	57
   751  0261  00BA               	movwf	??_main+1
   752  0262  300D               	movlw	13
   753  0263  00B9               	movwf	??_main
   754  0264                     u1737:
   755  0264  0BB9               	decfsz	??_main,f
   756  0265  2A64               	goto	u1737
   757  0266  0BBA               	decfsz	??_main+1,f
   758  0267  2A64               	goto	u1737
   759  0268  0BBB               	decfsz	??_main+2,f
   760  0269  2A64               	goto	u1737
   761  026A                     l1685:
   762                           
   763                           ;main_bmp280.c: 33:     {;main_bmp280.c: 34:         bmp280_getdata();
   764  026A  120A  158A  266A  120A  118A  	fcall	_bmp280_getdata
   765  026F                     l1687:
   766                           
   767                           ;main_bmp280.c: 35:         uncompensated_pressure();
   768  026F  120A  158A  2733  120A  118A  	fcall	_uncompensated_pressure
   769  0274                     l1689:
   770                           
   771                           ;main_bmp280.c: 37:         ac1 = aa + ab;
   772  0274  1683               	bsf	3,5	;RP0=1, select bank1
   773  0275  1303               	bcf	3,6	;RP1=0, select bank1
   774  0276  084C               	movf	_ab^(0+128),w
   775  0277  0750               	addwf	_aa^(0+128),w
   776  0278  1283               	bcf	3,5	;RP0=0, select bank0
   777  0279  1303               	bcf	3,6	;RP1=0, select bank0
   778  027A  00E7               	movwf	_ac1
   779  027B  1683               	bsf	3,5	;RP0=1, select bank1
   780  027C  1303               	bcf	3,6	;RP1=0, select bank1
   781  027D  084D               	movf	(_ab+1)^(0+128),w
   782  027E  1803               	skipnc
   783  027F  0A4D               	incf	(_ab+1)^(0+128),w
   784  0280  0751               	addwf	(_aa+1)^(0+128),w
   785  0281  1283               	bcf	3,5	;RP0=0, select bank0
   786  0282  1303               	bcf	3,6	;RP1=0, select bank0
   787  0283  00E8               	movwf	_ac1+1
   788  0284                     l1691:
   789                           
   790                           ;main_bmp280.c: 38:         ac2 = ac + ad;
   791  0284  1683               	bsf	3,5	;RP0=1, select bank1
   792  0285  1303               	bcf	3,6	;RP1=0, select bank1
   793  0286  0844               	movf	_ad^(0+128),w
   794  0287  0748               	addwf	_ac^(0+128),w
   795  0288  1283               	bcf	3,5	;RP0=0, select bank0
   796  0289  1303               	bcf	3,6	;RP1=0, select bank0
   797  028A  00E5               	movwf	_ac2
   798  028B  1683               	bsf	3,5	;RP0=1, select bank1
   799  028C  1303               	bcf	3,6	;RP1=0, select bank1
   800  028D  0845               	movf	(_ad+1)^(0+128),w
   801  028E  1803               	skipnc
   802  028F  0A45               	incf	(_ad+1)^(0+128),w
   803  0290  0749               	addwf	(_ac+1)^(0+128),w
   804  0291  1283               	bcf	3,5	;RP0=0, select bank0
   805  0292  1303               	bcf	3,6	;RP1=0, select bank0
   806  0293  00E6               	movwf	_ac2+1
   807  0294                     l1693:
   808                           
   809                           ;main_bmp280.c: 39:         ac3 = ae + af;
   810  0294  1683               	bsf	3,5	;RP0=1, select bank1
   811  0295  1303               	bcf	3,6	;RP1=0, select bank1
   812  0296  083C               	movf	_af^(0+128),w
   813  0297  0740               	addwf	_ae^(0+128),w
   814  0298  1283               	bcf	3,5	;RP0=0, select bank0
   815  0299  1303               	bcf	3,6	;RP1=0, select bank0
   816  029A  00E3               	movwf	_ac3
   817  029B  1683               	bsf	3,5	;RP0=1, select bank1
   818  029C  1303               	bcf	3,6	;RP1=0, select bank1
   819  029D  083D               	movf	(_af+1)^(0+128),w
   820  029E  1803               	skipnc
   821  029F  0A3D               	incf	(_af+1)^(0+128),w
   822  02A0  0741               	addwf	(_ae+1)^(0+128),w
   823  02A1  1283               	bcf	3,5	;RP0=0, select bank0
   824  02A2  1303               	bcf	3,6	;RP1=0, select bank0
   825  02A3  00E4               	movwf	_ac3+1
   826  02A4                     l1695:
   827                           
   828                           ;main_bmp280.c: 40:         ac4 = b0 + b1;
   829  02A4  085D               	movf	_b1,w
   830  02A5  1683               	bsf	3,5	;RP0=1, select bank1
   831  02A6  1303               	bcf	3,6	;RP1=0, select bank1
   832  02A7  0738               	addwf	_b0^(0+128),w
   833  02A8  1283               	bcf	3,5	;RP0=0, select bank0
   834  02A9  1303               	bcf	3,6	;RP1=0, select bank0
   835  02AA  00E1               	movwf	_ac4
   836  02AB  085E               	movf	_b1+1,w
   837  02AC  1803               	skipnc
   838  02AD  0A5E               	incf	_b1+1,w
   839  02AE  1683               	bsf	3,5	;RP0=1, select bank1
   840  02AF  1303               	bcf	3,6	;RP1=0, select bank1
   841  02B0  0739               	addwf	(_b0+1)^(0+128),w
   842  02B1  1283               	bcf	3,5	;RP0=0, select bank0
   843  02B2  1303               	bcf	3,6	;RP1=0, select bank0
   844  02B3  00E2               	movwf	_ac4+1
   845  02B4                     l1697:
   846                           
   847                           ;main_bmp280.c: 42:         b6 = b5 - 4000;
   848  02B4  3060               	movlw	96
   849  02B5  00B9               	movwf	??_main
   850  02B6  30F0               	movlw	240
   851  02B7  00BA               	movwf	??_main+1
   852  02B8  30FF               	movlw	255
   853  02B9  00BB               	movwf	??_main+2
   854  02BA  30FF               	movlw	255
   855  02BB  00BC               	movwf	??_main+3
   856  02BC  1683               	bsf	3,5	;RP0=1, select bank1
   857  02BD  1303               	bcf	3,6	;RP1=0, select bank1
   858  02BE  082C               	movf	_b5^(0+128),w
   859  02BF  1283               	bcf	3,5	;RP0=0, select bank0
   860  02C0  1303               	bcf	3,6	;RP1=0, select bank0
   861  02C1  07B9               	addwf	??_main,f
   862  02C2  1683               	bsf	3,5	;RP0=1, select bank1
   863  02C3  1303               	bcf	3,6	;RP1=0, select bank1
   864  02C4  082D               	movf	(_b5+1)^(0+128),w
   865  02C5  1803               	skipnc
   866  02C6  0F2D               	incfsz	(_b5+1)^(0+128),w
   867  02C7  2AC9               	goto	u1620
   868  02C8  2ACC               	goto	u1621
   869  02C9                     u1620:
   870  02C9  1283               	bcf	3,5	;RP0=0, select bank0
   871  02CA  1303               	bcf	3,6	;RP1=0, select bank0
   872  02CB  07BA               	addwf	??_main+1,f
   873  02CC                     u1621:
   874  02CC  1683               	bsf	3,5	;RP0=1, select bank1
   875  02CD  1303               	bcf	3,6	;RP1=0, select bank1
   876  02CE  082E               	movf	(_b5+2)^(0+128),w
   877  02CF  1803               	skipnc
   878  02D0  0F2E               	incfsz	(_b5+2)^(0+128),w
   879  02D1  2AD3               	goto	u1622
   880  02D2  2AD6               	goto	u1623
   881  02D3                     u1622:
   882  02D3  1283               	bcf	3,5	;RP0=0, select bank0
   883  02D4  1303               	bcf	3,6	;RP1=0, select bank0
   884  02D5  07BB               	addwf	??_main+2,f
   885  02D6                     u1623:
   886  02D6  1683               	bsf	3,5	;RP0=1, select bank1
   887  02D7  1303               	bcf	3,6	;RP1=0, select bank1
   888  02D8  082F               	movf	(_b5+3)^(0+128),w
   889  02D9  1803               	skipnc
   890  02DA  0A2F               	incf	(_b5+3)^(0+128),w
   891  02DB  1283               	bcf	3,5	;RP0=0, select bank0
   892  02DC  1303               	bcf	3,6	;RP1=0, select bank0
   893  02DD  07BC               	addwf	??_main+3,f
   894  02DE  083C               	movf	??_main+3,w
   895  02DF  00DC               	movwf	_b6+3
   896  02E0  083B               	movf	??_main+2,w
   897  02E1  00DB               	movwf	_b6+2
   898  02E2  083A               	movf	??_main+1,w
   899  02E3  00DA               	movwf	_b6+1
   900  02E4  0839               	movf	??_main,w
   901  02E5  00D9               	movwf	_b6
   902  02E6                     l1699:
   903                           
   904                           ;main_bmp280.c: 43:         x1 = (b2*(b6*b6/4096))/2048;
   905  02E6  3000               	movlw	0
   906  02E7  00A3               	movwf	___aldiv@divisor+3
   907  02E8  3000               	movlw	0
   908  02E9  00A2               	movwf	___aldiv@divisor+2
   909  02EA  3010               	movlw	16
   910  02EB  00A1               	movwf	___aldiv@divisor+1
   911  02EC  3000               	movlw	0
   912  02ED  00A0               	movwf	___aldiv@divisor
   913  02EE  085C               	movf	_b6+3,w
   914  02EF  00F3               	movwf	___lmul@multiplier+3
   915  02F0  085B               	movf	_b6+2,w
   916  02F1  00F2               	movwf	___lmul@multiplier+2
   917  02F2  085A               	movf	_b6+1,w
   918  02F3  00F1               	movwf	___lmul@multiplier+1
   919  02F4  0859               	movf	_b6,w
   920  02F5  00F0               	movwf	___lmul@multiplier
   921  02F6  085C               	movf	_b6+3,w
   922  02F7  00F7               	movwf	___lmul@multiplicand+3
   923  02F8  085B               	movf	_b6+2,w
   924  02F9  00F6               	movwf	___lmul@multiplicand+2
   925  02FA  085A               	movf	_b6+1,w
   926  02FB  00F5               	movwf	___lmul@multiplicand+1
   927  02FC  0859               	movf	_b6,w
   928  02FD  00F4               	movwf	___lmul@multiplicand
   929  02FE  120A  158A  24FE  120A  118A  	fcall	___lmul
   930  0303  0873               	movf	?___lmul+3,w
   931  0304  1283               	bcf	3,5	;RP0=0, select bank0
   932  0305  1303               	bcf	3,6	;RP1=0, select bank0
   933  0306  00A7               	movwf	___aldiv@dividend+3
   934  0307  0872               	movf	?___lmul+2,w
   935  0308  00A6               	movwf	___aldiv@dividend+2
   936  0309  0871               	movf	?___lmul+1,w
   937  030A  00A5               	movwf	___aldiv@dividend+1
   938  030B  0870               	movf	?___lmul,w
   939  030C  00A4               	movwf	___aldiv@dividend
   940  030D  120A  118A  201D  120A  118A  	fcall	___aldiv
   941  0312  1283               	bcf	3,5	;RP0=0, select bank0
   942  0313  1303               	bcf	3,6	;RP1=0, select bank0
   943  0314  0823               	movf	?___aldiv+3,w
   944  0315  00CC               	movwf	_main$851+3
   945  0316  0822               	movf	?___aldiv+2,w
   946  0317  00CB               	movwf	_main$851+2
   947  0318  0821               	movf	?___aldiv+1,w
   948  0319  00CA               	movwf	_main$851+1
   949  031A  0820               	movf	?___aldiv,w
   950  031B  00C9               	movwf	_main$851
   951  031C                     l1701:
   952                           
   953                           ;main_bmp280.c: 43:         x1 = (b2*(b6*b6/4096))/2048;
   954  031C  3000               	movlw	0
   955  031D  00A3               	movwf	___aldiv@divisor+3
   956  031E  3000               	movlw	0
   957  031F  00A2               	movwf	___aldiv@divisor+2
   958  0320  3008               	movlw	8
   959  0321  00A1               	movwf	___aldiv@divisor+1
   960  0322  3000               	movlw	0
   961  0323  00A0               	movwf	___aldiv@divisor
   962  0324  084C               	movf	_main$851+3,w
   963  0325  00F3               	movwf	___lmul@multiplier+3
   964  0326  084B               	movf	_main$851+2,w
   965  0327  00F2               	movwf	___lmul@multiplier+2
   966  0328  084A               	movf	_main$851+1,w
   967  0329  00F1               	movwf	___lmul@multiplier+1
   968  032A  0849               	movf	_main$851,w
   969  032B  00F0               	movwf	___lmul@multiplier
   970  032C  1683               	bsf	3,5	;RP0=1, select bank1
   971  032D  1303               	bcf	3,6	;RP1=0, select bank1
   972  032E  0837               	movf	(_b2+3)^(0+128),w
   973  032F  00F7               	movwf	___lmul@multiplicand+3
   974  0330  0836               	movf	(_b2+2)^(0+128),w
   975  0331  00F6               	movwf	___lmul@multiplicand+2
   976  0332  0835               	movf	(_b2+1)^(0+128),w
   977  0333  00F5               	movwf	___lmul@multiplicand+1
   978  0334  0834               	movf	_b2^(0+128),w
   979  0335  00F4               	movwf	___lmul@multiplicand
   980  0336  120A  158A  24FE  120A  118A  	fcall	___lmul
   981  033B  0873               	movf	?___lmul+3,w
   982  033C  1283               	bcf	3,5	;RP0=0, select bank0
   983  033D  1303               	bcf	3,6	;RP1=0, select bank0
   984  033E  00A7               	movwf	___aldiv@dividend+3
   985  033F  0872               	movf	?___lmul+2,w
   986  0340  00A6               	movwf	___aldiv@dividend+2
   987  0341  0871               	movf	?___lmul+1,w
   988  0342  00A5               	movwf	___aldiv@dividend+1
   989  0343  0870               	movf	?___lmul,w
   990  0344  00A4               	movwf	___aldiv@dividend
   991  0345  120A  118A  201D  120A  118A  	fcall	___aldiv
   992  034A  1283               	bcf	3,5	;RP0=0, select bank0
   993  034B  1303               	bcf	3,6	;RP1=0, select bank0
   994  034C  0823               	movf	?___aldiv+3,w
   995  034D  00D4               	movwf	_x1+3
   996  034E  0822               	movf	?___aldiv+2,w
   997  034F  00D3               	movwf	_x1+2
   998  0350  0821               	movf	?___aldiv+1,w
   999  0351  00D2               	movwf	_x1+1
  1000  0352  0820               	movf	?___aldiv,w
  1001  0353  00D1               	movwf	_x1
  1002  0354                     l1703:
  1003                           
  1004                           ;main_bmp280.c: 44:         x2 = ac2*b6/2048;
  1005  0354  3000               	movlw	0
  1006  0355  00A3               	movwf	___aldiv@divisor+3
  1007  0356  3000               	movlw	0
  1008  0357  00A2               	movwf	___aldiv@divisor+2
  1009  0358  3008               	movlw	8
  1010  0359  00A1               	movwf	___aldiv@divisor+1
  1011  035A  3000               	movlw	0
  1012  035B  00A0               	movwf	___aldiv@divisor
  1013  035C  0865               	movf	_ac2,w
  1014  035D  00F0               	movwf	___lmul@multiplier
  1015  035E  0866               	movf	_ac2+1,w
  1016  035F  00F1               	movwf	___lmul@multiplier+1
  1017  0360  3000               	movlw	0
  1018  0361  1BF1               	btfsc	___lmul@multiplier+1,7
  1019  0362  30FF               	movlw	255
  1020  0363  00F2               	movwf	___lmul@multiplier+2
  1021  0364  00F3               	movwf	___lmul@multiplier+3
  1022  0365  085C               	movf	_b6+3,w
  1023  0366  00F7               	movwf	___lmul@multiplicand+3
  1024  0367  085B               	movf	_b6+2,w
  1025  0368  00F6               	movwf	___lmul@multiplicand+2
  1026  0369  085A               	movf	_b6+1,w
  1027  036A  00F5               	movwf	___lmul@multiplicand+1
  1028  036B  0859               	movf	_b6,w
  1029  036C  00F4               	movwf	___lmul@multiplicand
  1030  036D  120A  158A  24FE  120A  118A  	fcall	___lmul
  1031  0372  0873               	movf	?___lmul+3,w
  1032  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0375  00A7               	movwf	___aldiv@dividend+3
  1035  0376  0872               	movf	?___lmul+2,w
  1036  0377  00A6               	movwf	___aldiv@dividend+2
  1037  0378  0871               	movf	?___lmul+1,w
  1038  0379  00A5               	movwf	___aldiv@dividend+1
  1039  037A  0870               	movf	?___lmul,w
  1040  037B  00A4               	movwf	___aldiv@dividend
  1041  037C  120A  118A  201D  120A  118A  	fcall	___aldiv
  1042  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0383  0823               	movf	?___aldiv+3,w
  1045  0384  00D0               	movwf	_x2+3
  1046  0385  0822               	movf	?___aldiv+2,w
  1047  0386  00CF               	movwf	_x2+2
  1048  0387  0821               	movf	?___aldiv+1,w
  1049  0388  00CE               	movwf	_x2+1
  1050  0389  0820               	movf	?___aldiv,w
  1051  038A  00CD               	movwf	_x2
  1052  038B                     l1705:
  1053                           
  1054                           ;main_bmp280.c: 45:         x3 = x1+x2;
  1055  038B  0851               	movf	_x1,w
  1056  038C  074D               	addwf	_x2,w
  1057  038D  00B9               	movwf	??_main
  1058  038E  3000               	movlw	0
  1059  038F  1803               	skipnc
  1060  0390  3001               	movlw	1
  1061  0391  0752               	addwf	_x1+1,w
  1062  0392  01BB               	clrf	??_main+2
  1063  0393  1803               	skipnc
  1064  0394  0ABB               	incf	??_main+2,f
  1065  0395  074E               	addwf	_x2+1,w
  1066  0396  00BA               	movwf	??_main+1
  1067  0397  1803               	skipnc
  1068  0398  0ABB               	incf	??_main+2,f
  1069  0399  0853               	movf	_x1+2,w
  1070  039A  073B               	addwf	??_main+2,w
  1071  039B  01BC               	clrf	??_main+3
  1072  039C  1803               	skipnc
  1073  039D  0ABC               	incf	??_main+3,f
  1074  039E  074F               	addwf	_x2+2,w
  1075  039F  00BB               	movwf	??_main+2
  1076  03A0  1803               	skipnc
  1077  03A1  0ABC               	incf	??_main+3,f
  1078  03A2  0854               	movf	_x1+3,w
  1079  03A3  073C               	addwf	??_main+3,w
  1080  03A4  0750               	addwf	_x2+3,w
  1081  03A5  00BC               	movwf	??_main+3
  1082  03A6  083C               	movf	??_main+3,w
  1083  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  1084  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  1085  03A9  00A3               	movwf	(_x3+3)^(0+128)
  1086  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1087  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1088  03AC  083B               	movf	??_main+2,w
  1089  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  1090  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  1091  03AF  00A2               	movwf	(_x3+2)^(0+128)
  1092  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1093  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1094  03B2  083A               	movf	??_main+1,w
  1095  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  1096  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  1097  03B5  00A1               	movwf	(_x3+1)^(0+128)
  1098  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1099  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1100  03B8  0839               	movf	??_main,w
  1101  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  1102  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  1103  03BB  00A0               	movwf	_x3^(0+128)
  1104  03BC                     l1707:
  1105                           
  1106                           ;main_bmp280.c: 46:         b3 = (((ac1*4+x3)<< oss)+ 2)/ 4;
  1107  03BC  3000               	movlw	0
  1108  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1109  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1110  03BF  00A3               	movwf	___aldiv@divisor+3
  1111  03C0  3000               	movlw	0
  1112  03C1  00A2               	movwf	___aldiv@divisor+2
  1113  03C2  3000               	movlw	0
  1114  03C3  00A1               	movwf	___aldiv@divisor+1
  1115  03C4  3004               	movlw	4
  1116  03C5  00A0               	movwf	___aldiv@divisor
  1117  03C6  3002               	movlw	2
  1118  03C7  00B9               	movwf	??_main
  1119  03C8  3000               	movlw	0
  1120  03C9  00BA               	movwf	??_main+1
  1121  03CA  3000               	movlw	0
  1122  03CB  00BB               	movwf	??_main+2
  1123  03CC  3000               	movlw	0
  1124  03CD  00BC               	movwf	??_main+3
  1125  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  1126  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  1127  03D0  0820               	movf	_x3^(0+128),w
  1128  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1129  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1130  03D3  00BD               	movwf	??_main+4
  1131  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  1132  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  1133  03D6  0821               	movf	(_x3+1)^(0+128),w
  1134  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1135  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1136  03D9  00BE               	movwf	??_main+5
  1137  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  1138  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  1139  03DC  0822               	movf	(_x3+2)^(0+128),w
  1140  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1141  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1142  03DF  00BF               	movwf	??_main+6
  1143  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  1144  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  1145  03E2  0823               	movf	(_x3+3)^(0+128),w
  1146  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1147  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1148  03E5  00C0               	movwf	??_main+7
  1149  03E6  0868               	movf	_ac1+1,w
  1150  03E7  00C2               	movwf	??_main+9
  1151  03E8  0867               	movf	_ac1,w
  1152  03E9  00C1               	movwf	??_main+8
  1153  03EA  1003               	clrc
  1154  03EB  0DC1               	rlf	??_main+8,f
  1155  03EC  0DC2               	rlf	??_main+9,f
  1156  03ED  1003               	clrc
  1157  03EE  0DC1               	rlf	??_main+8,f
  1158  03EF  0DC2               	rlf	??_main+9,f
  1159  03F0  0841               	movf	??_main+8,w
  1160  03F1  00C3               	movwf	??_main+10
  1161  03F2  0842               	movf	??_main+9,w
  1162  03F3  00C4               	movwf	??_main+11
  1163  03F4  3000               	movlw	0
  1164  03F5  1BC4               	btfsc	??_main+11,7
  1165  03F6  30FF               	movlw	255
  1166  03F7  00C5               	movwf	??_main+12
  1167  03F8  00C6               	movwf	??_main+13
  1168  03F9  0843               	movf	??_main+10,w
  1169  03FA  07BD               	addwf	??_main+4,f
  1170  03FB  0844               	movf	??_main+11,w
  1171  03FC  1803               	skipnc
  1172  03FD  0F44               	incfsz	??_main+11,w
  1173  03FE  2C00               	goto	u1630
  1174  03FF  2C01               	goto	u1631
  1175  0400                     u1630:
  1176  0400  07BE               	addwf	??_main+5,f
  1177  0401                     u1631:
  1178  0401  0845               	movf	??_main+12,w
  1179  0402  1803               	skipnc
  1180  0403  0F45               	incfsz	??_main+12,w
  1181  0404  2C06               	goto	u1632
  1182  0405  2C07               	goto	u1633
  1183  0406                     u1632:
  1184  0406  07BF               	addwf	??_main+6,f
  1185  0407                     u1633:
  1186  0407  0846               	movf	??_main+13,w
  1187  0408  1803               	skipnc
  1188  0409  0A46               	incf	??_main+13,w
  1189  040A  07C0               	addwf	??_main+7,f
  1190  040B  0A6D               	incf	_oss,w
  1191  040C  2C12               	goto	u1640
  1192  040D                     u1645:
  1193  040D  1003               	clrc
  1194  040E  0DBD               	rlf	??_main+4,f
  1195  040F  0DBE               	rlf	??_main+5,f
  1196  0410  0DBF               	rlf	??_main+6,f
  1197  0411  0DC0               	rlf	??_main+7,f
  1198  0412                     u1640:
  1199  0412  3EFF               	addlw	-1
  1200  0413  1D03               	skipz
  1201  0414  2C0D               	goto	u1645
  1202  0415  083D               	movf	??_main+4,w
  1203  0416  07B9               	addwf	??_main,f
  1204  0417  083E               	movf	??_main+5,w
  1205  0418  1803               	skipnc
  1206  0419  0F3E               	incfsz	??_main+5,w
  1207  041A  2C1C               	goto	u1650
  1208  041B  2C1D               	goto	u1651
  1209  041C                     u1650:
  1210  041C  07BA               	addwf	??_main+1,f
  1211  041D                     u1651:
  1212  041D  083F               	movf	??_main+6,w
  1213  041E  1803               	skipnc
  1214  041F  0F3F               	incfsz	??_main+6,w
  1215  0420  2C22               	goto	u1652
  1216  0421  2C23               	goto	u1653
  1217  0422                     u1652:
  1218  0422  07BB               	addwf	??_main+2,f
  1219  0423                     u1653:
  1220  0423  0840               	movf	??_main+7,w
  1221  0424  1803               	skipnc
  1222  0425  0A40               	incf	??_main+7,w
  1223  0426  07BC               	addwf	??_main+3,f
  1224  0427  083C               	movf	??_main+3,w
  1225  0428  00A7               	movwf	___aldiv@dividend+3
  1226  0429  083B               	movf	??_main+2,w
  1227  042A  00A6               	movwf	___aldiv@dividend+2
  1228  042B  083A               	movf	??_main+1,w
  1229  042C  00A5               	movwf	___aldiv@dividend+1
  1230  042D  0839               	movf	??_main,w
  1231  042E  00A4               	movwf	___aldiv@dividend
  1232  042F  120A  118A  201D  120A  118A  	fcall	___aldiv
  1233  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0436  0823               	movf	?___aldiv+3,w
  1236  0437  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0438  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0439  00B3               	movwf	(_b3+3)^(0+128)
  1239  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1240  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1241  043C  0822               	movf	?___aldiv+2,w
  1242  043D  1683               	bsf	3,5	;RP0=1, select bank1
  1243  043E  1303               	bcf	3,6	;RP1=0, select bank1
  1244  043F  00B2               	movwf	(_b3+2)^(0+128)
  1245  0440  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0441  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0442  0821               	movf	?___aldiv+1,w
  1248  0443  1683               	bsf	3,5	;RP0=1, select bank1
  1249  0444  1303               	bcf	3,6	;RP1=0, select bank1
  1250  0445  00B1               	movwf	(_b3+1)^(0+128)
  1251  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0448  0820               	movf	?___aldiv,w
  1254  0449  1683               	bsf	3,5	;RP0=1, select bank1
  1255  044A  1303               	bcf	3,6	;RP1=0, select bank1
  1256  044B  00B0               	movwf	_b3^(0+128)
  1257  044C                     l1709:
  1258                           
  1259                           ;main_bmp280.c: 47:         x1 = ac3* b6 / 8192;
  1260  044C  3000               	movlw	0
  1261  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1262  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1263  044F  00A3               	movwf	___aldiv@divisor+3
  1264  0450  3000               	movlw	0
  1265  0451  00A2               	movwf	___aldiv@divisor+2
  1266  0452  3020               	movlw	32
  1267  0453  00A1               	movwf	___aldiv@divisor+1
  1268  0454  3000               	movlw	0
  1269  0455  00A0               	movwf	___aldiv@divisor
  1270  0456  0863               	movf	_ac3,w
  1271  0457  00F0               	movwf	___lmul@multiplier
  1272  0458  0864               	movf	_ac3+1,w
  1273  0459  00F1               	movwf	___lmul@multiplier+1
  1274  045A  3000               	movlw	0
  1275  045B  1BF1               	btfsc	___lmul@multiplier+1,7
  1276  045C  30FF               	movlw	255
  1277  045D  00F2               	movwf	___lmul@multiplier+2
  1278  045E  00F3               	movwf	___lmul@multiplier+3
  1279  045F  085C               	movf	_b6+3,w
  1280  0460  00F7               	movwf	___lmul@multiplicand+3
  1281  0461  085B               	movf	_b6+2,w
  1282  0462  00F6               	movwf	___lmul@multiplicand+2
  1283  0463  085A               	movf	_b6+1,w
  1284  0464  00F5               	movwf	___lmul@multiplicand+1
  1285  0465  0859               	movf	_b6,w
  1286  0466  00F4               	movwf	___lmul@multiplicand
  1287  0467  120A  158A  24FE  120A  118A  	fcall	___lmul
  1288  046C  0873               	movf	?___lmul+3,w
  1289  046D  1283               	bcf	3,5	;RP0=0, select bank0
  1290  046E  1303               	bcf	3,6	;RP1=0, select bank0
  1291  046F  00A7               	movwf	___aldiv@dividend+3
  1292  0470  0872               	movf	?___lmul+2,w
  1293  0471  00A6               	movwf	___aldiv@dividend+2
  1294  0472  0871               	movf	?___lmul+1,w
  1295  0473  00A5               	movwf	___aldiv@dividend+1
  1296  0474  0870               	movf	?___lmul,w
  1297  0475  00A4               	movwf	___aldiv@dividend
  1298  0476  120A  118A  201D  120A  118A  	fcall	___aldiv
  1299  047B  1283               	bcf	3,5	;RP0=0, select bank0
  1300  047C  1303               	bcf	3,6	;RP1=0, select bank0
  1301  047D  0823               	movf	?___aldiv+3,w
  1302  047E  00D4               	movwf	_x1+3
  1303  047F  0822               	movf	?___aldiv+2,w
  1304  0480  00D3               	movwf	_x1+2
  1305  0481  0821               	movf	?___aldiv+1,w
  1306  0482  00D2               	movwf	_x1+1
  1307  0483  0820               	movf	?___aldiv,w
  1308  0484  00D1               	movwf	_x1
  1309  0485                     l1711:
  1310                           
  1311                           ;main_bmp280.c: 48:         x2 = (b1 * (b6 *b6 / 4096)) / 65536;
  1312  0485  3000               	movlw	0
  1313  0486  00A3               	movwf	___aldiv@divisor+3
  1314  0487  3000               	movlw	0
  1315  0488  00A2               	movwf	___aldiv@divisor+2
  1316  0489  3010               	movlw	16
  1317  048A  00A1               	movwf	___aldiv@divisor+1
  1318  048B  3000               	movlw	0
  1319  048C  00A0               	movwf	___aldiv@divisor
  1320  048D  085C               	movf	_b6+3,w
  1321  048E  00F3               	movwf	___lmul@multiplier+3
  1322  048F  085B               	movf	_b6+2,w
  1323  0490  00F2               	movwf	___lmul@multiplier+2
  1324  0491  085A               	movf	_b6+1,w
  1325  0492  00F1               	movwf	___lmul@multiplier+1
  1326  0493  0859               	movf	_b6,w
  1327  0494  00F0               	movwf	___lmul@multiplier
  1328  0495  085C               	movf	_b6+3,w
  1329  0496  00F7               	movwf	___lmul@multiplicand+3
  1330  0497  085B               	movf	_b6+2,w
  1331  0498  00F6               	movwf	___lmul@multiplicand+2
  1332  0499  085A               	movf	_b6+1,w
  1333  049A  00F5               	movwf	___lmul@multiplicand+1
  1334  049B  0859               	movf	_b6,w
  1335  049C  00F4               	movwf	___lmul@multiplicand
  1336  049D  120A  158A  24FE  120A  118A  	fcall	___lmul
  1337  04A2  0873               	movf	?___lmul+3,w
  1338  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1339  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1340  04A5  00A7               	movwf	___aldiv@dividend+3
  1341  04A6  0872               	movf	?___lmul+2,w
  1342  04A7  00A6               	movwf	___aldiv@dividend+2
  1343  04A8  0871               	movf	?___lmul+1,w
  1344  04A9  00A5               	movwf	___aldiv@dividend+1
  1345  04AA  0870               	movf	?___lmul,w
  1346  04AB  00A4               	movwf	___aldiv@dividend
  1347  04AC  120A  118A  201D  120A  118A  	fcall	___aldiv
  1348  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1349  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1350  04B3  0823               	movf	?___aldiv+3,w
  1351  04B4  00CC               	movwf	_main$851+3
  1352  04B5  0822               	movf	?___aldiv+2,w
  1353  04B6  00CB               	movwf	_main$851+2
  1354  04B7  0821               	movf	?___aldiv+1,w
  1355  04B8  00CA               	movwf	_main$851+1
  1356  04B9  0820               	movf	?___aldiv,w
  1357  04BA  00C9               	movwf	_main$851
  1358  04BB                     l1713:
  1359                           
  1360                           ;main_bmp280.c: 48:         x2 = (b1 * (b6 *b6 / 4096)) / 65536;
  1361  04BB  3000               	movlw	0
  1362  04BC  00A3               	movwf	___aldiv@divisor+3
  1363  04BD  3001               	movlw	1
  1364  04BE  00A2               	movwf	___aldiv@divisor+2
  1365  04BF  3000               	movlw	0
  1366  04C0  00A1               	movwf	___aldiv@divisor+1
  1367  04C1  3000               	movlw	0
  1368  04C2  00A0               	movwf	___aldiv@divisor
  1369  04C3  084C               	movf	_main$851+3,w
  1370  04C4  00F3               	movwf	___lmul@multiplier+3
  1371  04C5  084B               	movf	_main$851+2,w
  1372  04C6  00F2               	movwf	___lmul@multiplier+2
  1373  04C7  084A               	movf	_main$851+1,w
  1374  04C8  00F1               	movwf	___lmul@multiplier+1
  1375  04C9  0849               	movf	_main$851,w
  1376  04CA  00F0               	movwf	___lmul@multiplier
  1377  04CB  0860               	movf	_b1+3,w
  1378  04CC  00F7               	movwf	___lmul@multiplicand+3
  1379  04CD  085F               	movf	_b1+2,w
  1380  04CE  00F6               	movwf	___lmul@multiplicand+2
  1381  04CF  085E               	movf	_b1+1,w
  1382  04D0  00F5               	movwf	___lmul@multiplicand+1
  1383  04D1  085D               	movf	_b1,w
  1384  04D2  00F4               	movwf	___lmul@multiplicand
  1385  04D3  120A  158A  24FE  120A  118A  	fcall	___lmul
  1386  04D8  0873               	movf	?___lmul+3,w
  1387  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1388  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1389  04DB  00A7               	movwf	___aldiv@dividend+3
  1390  04DC  0872               	movf	?___lmul+2,w
  1391  04DD  00A6               	movwf	___aldiv@dividend+2
  1392  04DE  0871               	movf	?___lmul+1,w
  1393  04DF  00A5               	movwf	___aldiv@dividend+1
  1394  04E0  0870               	movf	?___lmul,w
  1395  04E1  00A4               	movwf	___aldiv@dividend
  1396  04E2  120A  118A  201D  120A  118A  	fcall	___aldiv
  1397  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1398  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1399  04E9  0823               	movf	?___aldiv+3,w
  1400  04EA  00D0               	movwf	_x2+3
  1401  04EB  0822               	movf	?___aldiv+2,w
  1402  04EC  00CF               	movwf	_x2+2
  1403  04ED  0821               	movf	?___aldiv+1,w
  1404  04EE  00CE               	movwf	_x2+1
  1405  04EF  0820               	movf	?___aldiv,w
  1406  04F0  00CD               	movwf	_x2
  1407  04F1                     l1715:
  1408                           
  1409                           ;main_bmp280.c: 49:         x3 =((x1+x2)+2)/4;
  1410  04F1  3000               	movlw	0
  1411  04F2  00A3               	movwf	___aldiv@divisor+3
  1412  04F3  3000               	movlw	0
  1413  04F4  00A2               	movwf	___aldiv@divisor+2
  1414  04F5  3000               	movlw	0
  1415  04F6  00A1               	movwf	___aldiv@divisor+1
  1416  04F7  3004               	movlw	4
  1417  04F8  00A0               	movwf	___aldiv@divisor
  1418  04F9  3002               	movlw	2
  1419  04FA  00B9               	movwf	??_main
  1420  04FB  3000               	movlw	0
  1421  04FC  00BA               	movwf	??_main+1
  1422  04FD  3000               	movlw	0
  1423  04FE  00BB               	movwf	??_main+2
  1424  04FF  3000               	movlw	0
  1425  0500  00BC               	movwf	??_main+3
  1426  0501  0851               	movf	_x1,w
  1427  0502  074D               	addwf	_x2,w
  1428  0503  00BD               	movwf	??_main+4
  1429  0504  3000               	movlw	0
  1430  0505  1803               	skipnc
  1431  0506  3001               	movlw	1
  1432  0507  0752               	addwf	_x1+1,w
  1433  0508  01BF               	clrf	??_main+6
  1434  0509  1803               	skipnc
  1435  050A  0ABF               	incf	??_main+6,f
  1436  050B  074E               	addwf	_x2+1,w
  1437  050C  00BE               	movwf	??_main+5
  1438  050D  1803               	skipnc
  1439  050E  0ABF               	incf	??_main+6,f
  1440  050F  0853               	movf	_x1+2,w
  1441  0510  073F               	addwf	??_main+6,w
  1442  0511  01C0               	clrf	??_main+7
  1443  0512  1803               	skipnc
  1444  0513  0AC0               	incf	??_main+7,f
  1445  0514  074F               	addwf	_x2+2,w
  1446  0515  00BF               	movwf	??_main+6
  1447  0516  1803               	skipnc
  1448  0517  0AC0               	incf	??_main+7,f
  1449  0518  0854               	movf	_x1+3,w
  1450  0519  0740               	addwf	??_main+7,w
  1451  051A  0750               	addwf	_x2+3,w
  1452  051B  00C0               	movwf	??_main+7
  1453  051C  083D               	movf	??_main+4,w
  1454  051D  07B9               	addwf	??_main,f
  1455  051E  083E               	movf	??_main+5,w
  1456  051F  1803               	skipnc
  1457  0520  0F3E               	incfsz	??_main+5,w
  1458  0521  2D23               	goto	u1660
  1459  0522  2D24               	goto	u1661
  1460  0523                     u1660:
  1461  0523  07BA               	addwf	??_main+1,f
  1462  0524                     u1661:
  1463  0524  083F               	movf	??_main+6,w
  1464  0525  1803               	skipnc
  1465  0526  0F3F               	incfsz	??_main+6,w
  1466  0527  2D29               	goto	u1662
  1467  0528  2D2A               	goto	u1663
  1468  0529                     u1662:
  1469  0529  07BB               	addwf	??_main+2,f
  1470  052A                     u1663:
  1471  052A  0840               	movf	??_main+7,w
  1472  052B  1803               	skipnc
  1473  052C  0A40               	incf	??_main+7,w
  1474  052D  07BC               	addwf	??_main+3,f
  1475  052E  083C               	movf	??_main+3,w
  1476  052F  00A7               	movwf	___aldiv@dividend+3
  1477  0530  083B               	movf	??_main+2,w
  1478  0531  00A6               	movwf	___aldiv@dividend+2
  1479  0532  083A               	movf	??_main+1,w
  1480  0533  00A5               	movwf	___aldiv@dividend+1
  1481  0534  0839               	movf	??_main,w
  1482  0535  00A4               	movwf	___aldiv@dividend
  1483  0536  120A  118A  201D  120A  118A  	fcall	___aldiv
  1484  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1485  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1486  053D  0823               	movf	?___aldiv+3,w
  1487  053E  1683               	bsf	3,5	;RP0=1, select bank1
  1488  053F  1303               	bcf	3,6	;RP1=0, select bank1
  1489  0540  00A3               	movwf	(_x3+3)^(0+128)
  1490  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0543  0822               	movf	?___aldiv+2,w
  1493  0544  1683               	bsf	3,5	;RP0=1, select bank1
  1494  0545  1303               	bcf	3,6	;RP1=0, select bank1
  1495  0546  00A2               	movwf	(_x3+2)^(0+128)
  1496  0547  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0548  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0549  0821               	movf	?___aldiv+1,w
  1499  054A  1683               	bsf	3,5	;RP0=1, select bank1
  1500  054B  1303               	bcf	3,6	;RP1=0, select bank1
  1501  054C  00A1               	movwf	(_x3+1)^(0+128)
  1502  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1503  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1504  054F  0820               	movf	?___aldiv,w
  1505  0550  1683               	bsf	3,5	;RP0=1, select bank1
  1506  0551  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0552  00A0               	movwf	_x3^(0+128)
  1508  0553                     l1717:
  1509                           
  1510                           ;main_bmp280.c: 50:         b4 = ac4 * (unsigned long) (x3 + 32768)/ 32768;
  1511  0553  3000               	movlw	0
  1512  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1513  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0556  00B9               	movwf	??_main
  1515  0557  3080               	movlw	128
  1516  0558  00BA               	movwf	??_main+1
  1517  0559  3000               	movlw	0
  1518  055A  00BB               	movwf	??_main+2
  1519  055B  3000               	movlw	0
  1520  055C  00BC               	movwf	??_main+3
  1521  055D  1683               	bsf	3,5	;RP0=1, select bank1
  1522  055E  1303               	bcf	3,6	;RP1=0, select bank1
  1523  055F  0820               	movf	_x3^(0+128),w
  1524  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0562  07B9               	addwf	??_main,f
  1527  0563  1683               	bsf	3,5	;RP0=1, select bank1
  1528  0564  1303               	bcf	3,6	;RP1=0, select bank1
  1529  0565  0821               	movf	(_x3+1)^(0+128),w
  1530  0566  1803               	skipnc
  1531  0567  0F21               	incfsz	(_x3+1)^(0+128),w
  1532  0568  2D6A               	goto	u1670
  1533  0569  2D6D               	goto	u1671
  1534  056A                     u1670:
  1535  056A  1283               	bcf	3,5	;RP0=0, select bank0
  1536  056B  1303               	bcf	3,6	;RP1=0, select bank0
  1537  056C  07BA               	addwf	??_main+1,f
  1538  056D                     u1671:
  1539  056D  1683               	bsf	3,5	;RP0=1, select bank1
  1540  056E  1303               	bcf	3,6	;RP1=0, select bank1
  1541  056F  0822               	movf	(_x3+2)^(0+128),w
  1542  0570  1803               	skipnc
  1543  0571  0F22               	incfsz	(_x3+2)^(0+128),w
  1544  0572  2D74               	goto	u1672
  1545  0573  2D77               	goto	u1673
  1546  0574                     u1672:
  1547  0574  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0575  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0576  07BB               	addwf	??_main+2,f
  1550  0577                     u1673:
  1551  0577  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0578  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0579  0823               	movf	(_x3+3)^(0+128),w
  1554  057A  1803               	skipnc
  1555  057B  0A23               	incf	(_x3+3)^(0+128),w
  1556  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1557  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1558  057E  07BC               	addwf	??_main+3,f
  1559  057F  083C               	movf	??_main+3,w
  1560  0580  00F3               	movwf	___lmul@multiplier+3
  1561  0581  083B               	movf	??_main+2,w
  1562  0582  00F2               	movwf	___lmul@multiplier+2
  1563  0583  083A               	movf	??_main+1,w
  1564  0584  00F1               	movwf	___lmul@multiplier+1
  1565  0585  0839               	movf	??_main,w
  1566  0586  00F0               	movwf	___lmul@multiplier
  1567  0587  0861               	movf	_ac4,w
  1568  0588  00F4               	movwf	___lmul@multiplicand
  1569  0589  0862               	movf	_ac4+1,w
  1570  058A  00F5               	movwf	___lmul@multiplicand+1
  1571  058B  01F6               	clrf	___lmul@multiplicand+2
  1572  058C  01F7               	clrf	___lmul@multiplicand+3
  1573  058D  120A  158A  24FE  120A  118A  	fcall	___lmul
  1574  0592  0870               	movf	?___lmul,w
  1575  0593  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0594  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0595  00BD               	movwf	??_main+4
  1578  0596  0871               	movf	?___lmul+1,w
  1579  0597  00BE               	movwf	??_main+5
  1580  0598  0872               	movf	?___lmul+2,w
  1581  0599  00BF               	movwf	??_main+6
  1582  059A  0873               	movf	?___lmul+3,w
  1583  059B  00C0               	movwf	??_main+7
  1584  059C  300F               	movlw	15
  1585  059D                     u1685:
  1586  059D  1003               	clrc
  1587  059E  0CC0               	rrf	??_main+7,f
  1588  059F  0CBF               	rrf	??_main+6,f
  1589  05A0  0CBE               	rrf	??_main+5,f
  1590  05A1  0CBD               	rrf	??_main+4,f
  1591  05A2                     u1680:
  1592  05A2  3EFF               	addlw	-1
  1593  05A3  1D03               	skipz
  1594  05A4  2D9D               	goto	u1685
  1595  05A5  0840               	movf	??_main+7,w
  1596  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  1597  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  1598  05A8  00AB               	movwf	(_b4+3)^(0+128)
  1599  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1600  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1601  05AB  083F               	movf	??_main+6,w
  1602  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  1603  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  1604  05AE  00AA               	movwf	(_b4+2)^(0+128)
  1605  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1606  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1607  05B1  083E               	movf	??_main+5,w
  1608  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  1609  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  1610  05B4  00A9               	movwf	(_b4+1)^(0+128)
  1611  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1612  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1613  05B7  083D               	movf	??_main+4,w
  1614  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  1615  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  1616  05BA  00A8               	movwf	_b4^(0+128)
  1617  05BB                     l1719:
  1618                           
  1619                           ;main_bmp280.c: 51:         b7 = ((unsigned long)up - b3) * (50000 >> oss);
  1620  05BB  0824               	movf	_up^(0+128),w
  1621  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1622  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1623  05BE  00B9               	movwf	??_main
  1624  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  1625  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  1626  05C1  0825               	movf	(_up+1)^(0+128),w
  1627  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1628  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1629  05C4  00BA               	movwf	??_main+1
  1630  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  1631  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  1632  05C7  0826               	movf	(_up+2)^(0+128),w
  1633  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1634  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1635  05CA  00BB               	movwf	??_main+2
  1636  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  1637  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  1638  05CD  0827               	movf	(_up+3)^(0+128),w
  1639  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1640  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1641  05D0  00BC               	movwf	??_main+3
  1642  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  1643  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  1644  05D3  0830               	movf	_b3^(0+128),w
  1645  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1646  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1647  05D6  02B9               	subwf	??_main,f
  1648  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  1649  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  1650  05D9  0831               	movf	(_b3+1)^(0+128),w
  1651  05DA  1C03               	skipc
  1652  05DB  0F31               	incfsz	(_b3+1)^(0+128),w
  1653  05DC  2DDE               	goto	u1691
  1654  05DD  2DE1               	goto	u1692
  1655  05DE                     u1691:
  1656  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1657  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1658  05E0  02BA               	subwf	??_main+1,f
  1659  05E1                     u1692:
  1660  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  1661  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  1662  05E3  0832               	movf	(_b3+2)^(0+128),w
  1663  05E4  1C03               	skipc
  1664  05E5  0F32               	incfsz	(_b3+2)^(0+128),w
  1665  05E6  2DE8               	goto	u1693
  1666  05E7  2DEB               	goto	u1694
  1667  05E8                     u1693:
  1668  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1669  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1670  05EA  02BB               	subwf	??_main+2,f
  1671  05EB                     u1694:
  1672  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  1673  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  1674  05ED  0833               	movf	(_b3+3)^(0+128),w
  1675  05EE  1C03               	skipc
  1676  05EF  0F33               	incfsz	(_b3+3)^(0+128),w
  1677  05F0  2DF2               	goto	u1695
  1678  05F1  2DF5               	goto	u1696
  1679  05F2                     u1695:
  1680  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1681  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1682  05F4  02BC               	subwf	??_main+3,f
  1683  05F5                     u1696:
  1684  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  1685  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  1686  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1687  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1688  05F9  083C               	movf	??_main+3,w
  1689  05FA  00F3               	movwf	___lmul@multiplier+3
  1690  05FB  083B               	movf	??_main+2,w
  1691  05FC  00F2               	movwf	___lmul@multiplier+2
  1692  05FD  083A               	movf	??_main+1,w
  1693  05FE  00F1               	movwf	___lmul@multiplier+1
  1694  05FF  0839               	movf	??_main,w
  1695  0600  00F0               	movwf	___lmul@multiplier
  1696  0601  0A6D               	incf	_oss,w
  1697  0602  00BD               	movwf	??_main+4
  1698  0603  3050               	movlw	80
  1699  0604  00BE               	movwf	??_main+5
  1700  0605  30C3               	movlw	195
  1701  0606  00BF               	movwf	??_main+6
  1702  0607  3000               	movlw	0
  1703  0608  00C0               	movwf	??_main+7
  1704  0609  3000               	movlw	0
  1705  060A  00C1               	movwf	??_main+8
  1706  060B  2E11               	goto	u1700
  1707  060C                     u1705:
  1708  060C  0D41               	rlf	??_main+8,w
  1709  060D  0CC1               	rrf	??_main+8,f
  1710  060E  0CC0               	rrf	??_main+7,f
  1711  060F  0CBF               	rrf	??_main+6,f
  1712  0610  0CBE               	rrf	??_main+5,f
  1713  0611                     u1700:
  1714  0611  0BBD               	decfsz	??_main+4,f
  1715  0612  2E0C               	goto	u1705
  1716  0613  0841               	movf	??_main+8,w
  1717  0614  00F7               	movwf	___lmul@multiplicand+3
  1718  0615  0840               	movf	??_main+7,w
  1719  0616  00F6               	movwf	___lmul@multiplicand+2
  1720  0617  083F               	movf	??_main+6,w
  1721  0618  00F5               	movwf	___lmul@multiplicand+1
  1722  0619  083E               	movf	??_main+5,w
  1723  061A  00F4               	movwf	___lmul@multiplicand
  1724  061B  120A  158A  24FE  120A  118A  	fcall	___lmul
  1725  0620  0873               	movf	?___lmul+3,w
  1726  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0623  00D8               	movwf	_b7+3
  1729  0624  0872               	movf	?___lmul+2,w
  1730  0625  00D7               	movwf	_b7+2
  1731  0626  0871               	movf	?___lmul+1,w
  1732  0627  00D6               	movwf	_b7+1
  1733  0628  0870               	movf	?___lmul,w
  1734  0629  00D5               	movwf	_b7
  1735  062A                     l1721:
  1736                           
  1737                           ;main_bmp280.c: 52:         if (b7 < 0x80000000)
  1738  062A  3080               	movlw	128
  1739  062B  0258               	subwf	_b7+3,w
  1740  062C  1D03               	skipz
  1741  062D  2E3A               	goto	u1713
  1742  062E  3000               	movlw	0
  1743  062F  0257               	subwf	_b7+2,w
  1744  0630  1D03               	skipz
  1745  0631  2E3A               	goto	u1713
  1746  0632  3000               	movlw	0
  1747  0633  0256               	subwf	_b7+1,w
  1748  0634  1D03               	skipz
  1749  0635  2E3A               	goto	u1713
  1750  0636  3000               	movlw	0
  1751  0637  0255               	subwf	_b7,w
  1752  0638  1D03               	skipz
  1753  0639  2E3A               	goto	u1713
  1754  063A                     u1713:
  1755  063A  1803               	btfsc	3,0
  1756  063B  2E3D               	goto	u1711
  1757  063C  2E3E               	goto	u1710
  1758  063D                     u1711:
  1759  063D  2E63               	goto	l1725
  1760  063E                     u1710:
  1761  063E                     l1723:
  1762                           
  1763                           ;main_bmp280.c: 53:         {;main_bmp280.c: 54:             p = (b7* 2)/ b4;
  1764  063E  1683               	bsf	3,5	;RP0=1, select bank1
  1765  063F  1303               	bcf	3,6	;RP1=0, select bank1
  1766  0640  082B               	movf	(_b4+3)^(0+128),w
  1767  0641  00F3               	movwf	___lldiv@divisor+3
  1768  0642  082A               	movf	(_b4+2)^(0+128),w
  1769  0643  00F2               	movwf	___lldiv@divisor+2
  1770  0644  0829               	movf	(_b4+1)^(0+128),w
  1771  0645  00F1               	movwf	___lldiv@divisor+1
  1772  0646  0828               	movf	_b4^(0+128),w
  1773  0647  00F0               	movwf	___lldiv@divisor
  1774  0648  1003               	clrc
  1775  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1776  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1777  064B  0D55               	rlf	_b7,w
  1778  064C  00F4               	movwf	___lldiv@dividend
  1779  064D  0D56               	rlf	_b7+1,w
  1780  064E  00F5               	movwf	___lldiv@dividend+1
  1781  064F  0D57               	rlf	_b7+2,w
  1782  0650  00F6               	movwf	___lldiv@dividend+2
  1783  0651  0D58               	rlf	_b7+3,w
  1784  0652  00F7               	movwf	___lldiv@dividend+3
  1785  0653  120A  158A  259D  120A  118A  	fcall	___lldiv
  1786  0658  0873               	movf	?___lldiv+3,w
  1787  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1788  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1789  065B  00EC               	movwf	_p+3
  1790  065C  0872               	movf	?___lldiv+2,w
  1791  065D  00EB               	movwf	_p+2
  1792  065E  0871               	movf	?___lldiv+1,w
  1793  065F  00EA               	movwf	_p+1
  1794  0660  0870               	movf	?___lldiv,w
  1795  0661  00E9               	movwf	_p
  1796                           
  1797                           ;main_bmp280.c: 55:         }
  1798  0662  2E87               	goto	l178
  1799  0663                     l1725:
  1800                           
  1801                           ;main_bmp280.c: 57:         {;main_bmp280.c: 58:             p = (b7 / b4)* 2;
  1802  0663  1683               	bsf	3,5	;RP0=1, select bank1
  1803  0664  1303               	bcf	3,6	;RP1=0, select bank1
  1804  0665  082B               	movf	(_b4+3)^(0+128),w
  1805  0666  00F3               	movwf	___lldiv@divisor+3
  1806  0667  082A               	movf	(_b4+2)^(0+128),w
  1807  0668  00F2               	movwf	___lldiv@divisor+2
  1808  0669  0829               	movf	(_b4+1)^(0+128),w
  1809  066A  00F1               	movwf	___lldiv@divisor+1
  1810  066B  0828               	movf	_b4^(0+128),w
  1811  066C  00F0               	movwf	___lldiv@divisor
  1812  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1813  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1814  066F  0858               	movf	_b7+3,w
  1815  0670  00F7               	movwf	___lldiv@dividend+3
  1816  0671  0857               	movf	_b7+2,w
  1817  0672  00F6               	movwf	___lldiv@dividend+2
  1818  0673  0856               	movf	_b7+1,w
  1819  0674  00F5               	movwf	___lldiv@dividend+1
  1820  0675  0855               	movf	_b7,w
  1821  0676  00F4               	movwf	___lldiv@dividend
  1822  0677  120A  158A  259D  120A  118A  	fcall	___lldiv
  1823  067C  1003               	clrc
  1824  067D  0D70               	rlf	?___lldiv,w
  1825  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1826  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1827  0680  00E9               	movwf	_p
  1828  0681  0D71               	rlf	?___lldiv+1,w
  1829  0682  00EA               	movwf	_p+1
  1830  0683  0D72               	rlf	?___lldiv+2,w
  1831  0684  00EB               	movwf	_p+2
  1832  0685  0D73               	rlf	?___lldiv+3,w
  1833  0686  00EC               	movwf	_p+3
  1834  0687                     l178:	
  1835                           ;main_bmp280.c: 59:         }
  1836                           
  1837                           
  1838                           ;main_bmp280.c: 60:         x1 =(p/256)*(p/256);
  1839  0687  3000               	movlw	0
  1840  0688  00A3               	movwf	___aldiv@divisor+3
  1841  0689  3000               	movlw	0
  1842  068A  00A2               	movwf	___aldiv@divisor+2
  1843  068B  3001               	movlw	1
  1844  068C  00A1               	movwf	___aldiv@divisor+1
  1845  068D  3000               	movlw	0
  1846  068E  00A0               	movwf	___aldiv@divisor
  1847  068F  086C               	movf	_p+3,w
  1848  0690  00A7               	movwf	___aldiv@dividend+3
  1849  0691  086B               	movf	_p+2,w
  1850  0692  00A6               	movwf	___aldiv@dividend+2
  1851  0693  086A               	movf	_p+1,w
  1852  0694  00A5               	movwf	___aldiv@dividend+1
  1853  0695  0869               	movf	_p,w
  1854  0696  00A4               	movwf	___aldiv@dividend
  1855  0697  120A  118A  201D  120A  118A  	fcall	___aldiv
  1856  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1857  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1858  069E  0823               	movf	?___aldiv+3,w
  1859  069F  00F3               	movwf	___lmul@multiplier+3
  1860  06A0  0822               	movf	?___aldiv+2,w
  1861  06A1  00F2               	movwf	___lmul@multiplier+2
  1862  06A2  0821               	movf	?___aldiv+1,w
  1863  06A3  00F1               	movwf	___lmul@multiplier+1
  1864  06A4  0820               	movf	?___aldiv,w
  1865  06A5  00F0               	movwf	___lmul@multiplier
  1866  06A6  3000               	movlw	0
  1867  06A7  00A3               	movwf	___aldiv@divisor+3
  1868  06A8  3000               	movlw	0
  1869  06A9  00A2               	movwf	___aldiv@divisor+2
  1870  06AA  3001               	movlw	1
  1871  06AB  00A1               	movwf	___aldiv@divisor+1
  1872  06AC  3000               	movlw	0
  1873  06AD  00A0               	movwf	___aldiv@divisor
  1874  06AE  086C               	movf	_p+3,w
  1875  06AF  00A7               	movwf	___aldiv@dividend+3
  1876  06B0  086B               	movf	_p+2,w
  1877  06B1  00A6               	movwf	___aldiv@dividend+2
  1878  06B2  086A               	movf	_p+1,w
  1879  06B3  00A5               	movwf	___aldiv@dividend+1
  1880  06B4  0869               	movf	_p,w
  1881  06B5  00A4               	movwf	___aldiv@dividend
  1882  06B6  120A  118A  201D  120A  118A  	fcall	___aldiv
  1883  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1884  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1885  06BD  0823               	movf	?___aldiv+3,w
  1886  06BE  00F7               	movwf	___lmul@multiplicand+3
  1887  06BF  0822               	movf	?___aldiv+2,w
  1888  06C0  00F6               	movwf	___lmul@multiplicand+2
  1889  06C1  0821               	movf	?___aldiv+1,w
  1890  06C2  00F5               	movwf	___lmul@multiplicand+1
  1891  06C3  0820               	movf	?___aldiv,w
  1892  06C4  00F4               	movwf	___lmul@multiplicand
  1893  06C5  120A  158A  24FE  120A  118A  	fcall	___lmul
  1894  06CA  0873               	movf	?___lmul+3,w
  1895  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1896  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1897  06CD  00D4               	movwf	_x1+3
  1898  06CE  0872               	movf	?___lmul+2,w
  1899  06CF  00D3               	movwf	_x1+2
  1900  06D0  0871               	movf	?___lmul+1,w
  1901  06D1  00D2               	movwf	_x1+1
  1902  06D2  0870               	movf	?___lmul,w
  1903  06D3  00D1               	movwf	_x1
  1904                           
  1905                           ;main_bmp280.c: 61:         x1 = (x1 * 3038)/65536;
  1906  06D4  3000               	movlw	0
  1907  06D5  00A3               	movwf	___aldiv@divisor+3
  1908  06D6  3001               	movlw	1
  1909  06D7  00A2               	movwf	___aldiv@divisor+2
  1910  06D8  3000               	movlw	0
  1911  06D9  00A1               	movwf	___aldiv@divisor+1
  1912  06DA  3000               	movlw	0
  1913  06DB  00A0               	movwf	___aldiv@divisor
  1914  06DC  0854               	movf	_x1+3,w
  1915  06DD  00F3               	movwf	___lmul@multiplier+3
  1916  06DE  0853               	movf	_x1+2,w
  1917  06DF  00F2               	movwf	___lmul@multiplier+2
  1918  06E0  0852               	movf	_x1+1,w
  1919  06E1  00F1               	movwf	___lmul@multiplier+1
  1920  06E2  0851               	movf	_x1,w
  1921  06E3  00F0               	movwf	___lmul@multiplier
  1922  06E4  3000               	movlw	0
  1923  06E5  00F7               	movwf	___lmul@multiplicand+3
  1924  06E6  3000               	movlw	0
  1925  06E7  00F6               	movwf	___lmul@multiplicand+2
  1926  06E8  300B               	movlw	11
  1927  06E9  00F5               	movwf	___lmul@multiplicand+1
  1928  06EA  30DE               	movlw	222
  1929  06EB  00F4               	movwf	___lmul@multiplicand
  1930  06EC  120A  158A  24FE  120A  118A  	fcall	___lmul
  1931  06F1  0873               	movf	?___lmul+3,w
  1932  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1933  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1934  06F4  00A7               	movwf	___aldiv@dividend+3
  1935  06F5  0872               	movf	?___lmul+2,w
  1936  06F6  00A6               	movwf	___aldiv@dividend+2
  1937  06F7  0871               	movf	?___lmul+1,w
  1938  06F8  00A5               	movwf	___aldiv@dividend+1
  1939  06F9  0870               	movf	?___lmul,w
  1940  06FA  00A4               	movwf	___aldiv@dividend
  1941  06FB  120A  118A  201D  120A  118A  	fcall	___aldiv
  1942  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0702  0823               	movf	?___aldiv+3,w
  1945  0703  00D4               	movwf	_x1+3
  1946  0704  0822               	movf	?___aldiv+2,w
  1947  0705  00D3               	movwf	_x1+2
  1948  0706  0821               	movf	?___aldiv+1,w
  1949  0707  00D2               	movwf	_x1+1
  1950  0708  0820               	movf	?___aldiv,w
  1951  0709  00D1               	movwf	_x1
  1952                           
  1953                           ;main_bmp280.c: 62:         x2 = (-7357 * p) / 65536;
  1954  070A  3000               	movlw	0
  1955  070B  00A3               	movwf	___aldiv@divisor+3
  1956  070C  3001               	movlw	1
  1957  070D  00A2               	movwf	___aldiv@divisor+2
  1958  070E  3000               	movlw	0
  1959  070F  00A1               	movwf	___aldiv@divisor+1
  1960  0710  3000               	movlw	0
  1961  0711  00A0               	movwf	___aldiv@divisor
  1962  0712  086C               	movf	_p+3,w
  1963  0713  00F3               	movwf	___lmul@multiplier+3
  1964  0714  086B               	movf	_p+2,w
  1965  0715  00F2               	movwf	___lmul@multiplier+2
  1966  0716  086A               	movf	_p+1,w
  1967  0717  00F1               	movwf	___lmul@multiplier+1
  1968  0718  0869               	movf	_p,w
  1969  0719  00F0               	movwf	___lmul@multiplier
  1970  071A  30FF               	movlw	255
  1971  071B  00F7               	movwf	___lmul@multiplicand+3
  1972  071C  30FF               	movlw	255
  1973  071D  00F6               	movwf	___lmul@multiplicand+2
  1974  071E  30E3               	movlw	227
  1975  071F  00F5               	movwf	___lmul@multiplicand+1
  1976  0720  3043               	movlw	67
  1977  0721  00F4               	movwf	___lmul@multiplicand
  1978  0722  120A  158A  24FE  120A  118A  	fcall	___lmul
  1979  0727  0873               	movf	?___lmul+3,w
  1980  0728  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0729  1303               	bcf	3,6	;RP1=0, select bank0
  1982  072A  00A7               	movwf	___aldiv@dividend+3
  1983  072B  0872               	movf	?___lmul+2,w
  1984  072C  00A6               	movwf	___aldiv@dividend+2
  1985  072D  0871               	movf	?___lmul+1,w
  1986  072E  00A5               	movwf	___aldiv@dividend+1
  1987  072F  0870               	movf	?___lmul,w
  1988  0730  00A4               	movwf	___aldiv@dividend
  1989  0731  120A  118A  201D  120A  118A  	fcall	___aldiv
  1990  0736  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0737  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0738  0823               	movf	?___aldiv+3,w
  1993  0739  00D0               	movwf	_x2+3
  1994  073A  0822               	movf	?___aldiv+2,w
  1995  073B  00CF               	movwf	_x2+2
  1996  073C  0821               	movf	?___aldiv+1,w
  1997  073D  00CE               	movwf	_x2+1
  1998  073E  0820               	movf	?___aldiv,w
  1999  073F  00CD               	movwf	_x2
  2000                           
  2001                           ;main_bmp280.c: 63:         p=p+(x1+x2+3791)/16;
  2002  0740  3000               	movlw	0
  2003  0741  00A3               	movwf	___aldiv@divisor+3
  2004  0742  3000               	movlw	0
  2005  0743  00A2               	movwf	___aldiv@divisor+2
  2006  0744  3000               	movlw	0
  2007  0745  00A1               	movwf	___aldiv@divisor+1
  2008  0746  3010               	movlw	16
  2009  0747  00A0               	movwf	___aldiv@divisor
  2010  0748  30CF               	movlw	207
  2011  0749  00B9               	movwf	??_main
  2012  074A  300E               	movlw	14
  2013  074B  00BA               	movwf	??_main+1
  2014  074C  3000               	movlw	0
  2015  074D  00BB               	movwf	??_main+2
  2016  074E  3000               	movlw	0
  2017  074F  00BC               	movwf	??_main+3
  2018  0750  0851               	movf	_x1,w
  2019  0751  074D               	addwf	_x2,w
  2020  0752  00BD               	movwf	??_main+4
  2021  0753  3000               	movlw	0
  2022  0754  1803               	skipnc
  2023  0755  3001               	movlw	1
  2024  0756  0752               	addwf	_x1+1,w
  2025  0757  01BF               	clrf	??_main+6
  2026  0758  1803               	skipnc
  2027  0759  0ABF               	incf	??_main+6,f
  2028  075A  074E               	addwf	_x2+1,w
  2029  075B  00BE               	movwf	??_main+5
  2030  075C  1803               	skipnc
  2031  075D  0ABF               	incf	??_main+6,f
  2032  075E  0853               	movf	_x1+2,w
  2033  075F  073F               	addwf	??_main+6,w
  2034  0760  01C0               	clrf	??_main+7
  2035  0761  1803               	skipnc
  2036  0762  0AC0               	incf	??_main+7,f
  2037  0763  074F               	addwf	_x2+2,w
  2038  0764  00BF               	movwf	??_main+6
  2039  0765  1803               	skipnc
  2040  0766  0AC0               	incf	??_main+7,f
  2041  0767  0854               	movf	_x1+3,w
  2042  0768  0740               	addwf	??_main+7,w
  2043  0769  0750               	addwf	_x2+3,w
  2044  076A  00C0               	movwf	??_main+7
  2045  076B  083D               	movf	??_main+4,w
  2046  076C  07B9               	addwf	??_main,f
  2047  076D  083E               	movf	??_main+5,w
  2048  076E  1803               	skipnc
  2049  076F  0F3E               	incfsz	??_main+5,w
  2050  0770  2F72               	goto	u1720
  2051  0771  2F73               	goto	u1721
  2052  0772                     u1720:
  2053  0772  07BA               	addwf	??_main+1,f
  2054  0773                     u1721:
  2055  0773  083F               	movf	??_main+6,w
  2056  0774  1803               	skipnc
  2057  0775  0F3F               	incfsz	??_main+6,w
  2058  0776  2F78               	goto	u1722
  2059  0777  2F79               	goto	u1723
  2060  0778                     u1722:
  2061  0778  07BB               	addwf	??_main+2,f
  2062  0779                     u1723:
  2063  0779  0840               	movf	??_main+7,w
  2064  077A  1803               	skipnc
  2065  077B  0A40               	incf	??_main+7,w
  2066  077C  07BC               	addwf	??_main+3,f
  2067  077D  083C               	movf	??_main+3,w
  2068  077E  00A7               	movwf	___aldiv@dividend+3
  2069  077F  083B               	movf	??_main+2,w
  2070  0780  00A6               	movwf	___aldiv@dividend+2
  2071  0781  083A               	movf	??_main+1,w
  2072  0782  00A5               	movwf	___aldiv@dividend+1
  2073  0783  0839               	movf	??_main,w
  2074  0784  00A4               	movwf	___aldiv@dividend
  2075  0785  120A  118A  201D  120A  118A  	fcall	___aldiv
  2076  078A  1283               	bcf	3,5	;RP0=0, select bank0
  2077  078B  1303               	bcf	3,6	;RP1=0, select bank0
  2078  078C  0820               	movf	?___aldiv,w
  2079  078D  0769               	addwf	_p,w
  2080  078E  00C1               	movwf	??_main+8
  2081  078F  3000               	movlw	0
  2082  0790  1803               	skipnc
  2083  0791  3001               	movlw	1
  2084  0792  0721               	addwf	?___aldiv+1,w
  2085  0793  01C3               	clrf	??_main+10
  2086  0794  1803               	skipnc
  2087  0795  0AC3               	incf	??_main+10,f
  2088  0796  076A               	addwf	_p+1,w
  2089  0797  00C2               	movwf	??_main+9
  2090  0798  1803               	skipnc
  2091  0799  0AC3               	incf	??_main+10,f
  2092  079A  0822               	movf	?___aldiv+2,w
  2093  079B  0743               	addwf	??_main+10,w
  2094  079C  01C4               	clrf	??_main+11
  2095  079D  1803               	skipnc
  2096  079E  0AC4               	incf	??_main+11,f
  2097  079F  076B               	addwf	_p+2,w
  2098  07A0  00C3               	movwf	??_main+10
  2099  07A1  1803               	skipnc
  2100  07A2  0AC4               	incf	??_main+11,f
  2101  07A3  0823               	movf	?___aldiv+3,w
  2102  07A4  0744               	addwf	??_main+11,w
  2103  07A5  076C               	addwf	_p+3,w
  2104  07A6  00C4               	movwf	??_main+11
  2105  07A7  0844               	movf	??_main+11,w
  2106  07A8  00EC               	movwf	_p+3
  2107  07A9  0843               	movf	??_main+10,w
  2108  07AA  00EB               	movwf	_p+2
  2109  07AB  0842               	movf	??_main+9,w
  2110  07AC  00EA               	movwf	_p+1
  2111  07AD  0841               	movf	??_main+8,w
  2112  07AE  00E9               	movwf	_p
  2113                           
  2114                           ;main_bmp280.c: 64:         unsigned int hpa = p/1000;
  2115  07AF  3000               	movlw	0
  2116  07B0  00A3               	movwf	___aldiv@divisor+3
  2117  07B1  3000               	movlw	0
  2118  07B2  00A2               	movwf	___aldiv@divisor+2
  2119  07B3  3003               	movlw	3
  2120  07B4  00A1               	movwf	___aldiv@divisor+1
  2121  07B5  30E8               	movlw	232
  2122  07B6  00A0               	movwf	___aldiv@divisor
  2123  07B7  086C               	movf	_p+3,w
  2124  07B8  00A7               	movwf	___aldiv@dividend+3
  2125  07B9  086B               	movf	_p+2,w
  2126  07BA  00A6               	movwf	___aldiv@dividend+2
  2127  07BB  086A               	movf	_p+1,w
  2128  07BC  00A5               	movwf	___aldiv@dividend+1
  2129  07BD  0869               	movf	_p,w
  2130  07BE  00A4               	movwf	___aldiv@dividend
  2131  07BF  120A  118A  201D  120A  118A  	fcall	___aldiv
  2132  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  2133  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  2134  07C6  0821               	movf	?___aldiv+1,w
  2135  07C7  00C8               	movwf	main@hpa+1
  2136  07C8  0820               	movf	?___aldiv,w
  2137  07C9  00C7               	movwf	main@hpa
  2138                           
  2139                           ;main_bmp280.c: 66:          LCD_Command(0xC0);
  2140  07CA  30C0               	movlw	192
  2141  07CB  120A  158A  243A  120A  118A  	fcall	_LCD_Command
  2142                           
  2143                           ;main_bmp280.c: 67:          show_multidigits(hpa);
  2144  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  2145  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  2146  07D2  0848               	movf	main@hpa+1,w
  2147  07D3  00FA               	movwf	show_multidigits@val+1
  2148  07D4  0847               	movf	main@hpa,w
  2149  07D5  00F9               	movwf	show_multidigits@val
  2150  07D6  120A  118A  20BA  120A  118A  	fcall	_show_multidigits
  2151  07DB  2A6A               	goto	l1685
  2152  07DC  120A  118A  2800   	ljmp	start
  2153  07DF                     __end_of_main:
  2154                           
  2155                           	psect	text1
  2156  0F33                     __ptext1:	
  2157 ;; *************** function _uncompensated_pressure *****************
  2158 ;; Defined at:
  2159 ;;		line 87 in file "main_bmp280.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  ff8             4   21[BANK0 ] long 
  2164 ;;  ff7             4   17[BANK0 ] long 
  2165 ;;  ff6             4   13[BANK0 ] long 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2175 ;;      Params:         0       0       0       0       0
  2176 ;;      Locals:         0      12       0       0       0
  2177 ;;      Temps:          0      13       0       0       0
  2178 ;;      Totals:         0      25       0       0       0
  2179 ;;Total ram usage:       25 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; Hardware stack levels required when called: 3
  2182 ;; This function calls:
  2183 ;;		_bmp280_read_byte
  2184 ;;		_bmp280_send_byte
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function _uncompensated_pressure
  2192  0F33                     _uncompensated_pressure:
  2193  0F33                     l1559:	
  2194                           ;incstack = 0
  2195                           ; Regs used in _uncompensated_pressure: [wreg+status,2+status,0+pclath+cstack]
  2196                           
  2197                           
  2198                           ;main_bmp280.c: 89:         bmp280_send_byte(0xf4,(0x34+(oss<<6)));
  2199  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0F35  086D               	movf	_oss,w
  2202  0F36  00A0               	movwf	??_uncompensated_pressure
  2203  0F37  3005               	movlw	5
  2204  0F38                     u1345:
  2205  0F38  1003               	clrc
  2206  0F39  0DA0               	rlf	??_uncompensated_pressure,f
  2207  0F3A  3EFF               	addlw	-1
  2208  0F3B  1D03               	skipz
  2209  0F3C  2F38               	goto	u1345
  2210  0F3D  1003               	clrc
  2211  0F3E  0D20               	rlf	??_uncompensated_pressure,w
  2212  0F3F  3E34               	addlw	52
  2213  0F40  00A1               	movwf	??_uncompensated_pressure+1
  2214  0F41  0821               	movf	??_uncompensated_pressure+1,w
  2215  0F42  00F1               	movwf	bmp280_send_byte@count
  2216  0F43  30F4               	movlw	244
  2217  0F44  120A  158A  2353  120A  158A  	fcall	_bmp280_send_byte
  2218  0F49                     l1561:
  2219                           
  2220                           ;main_bmp280.c: 90:         _delay((unsigned long)((25)*(12000000/4000.0)));
  2221  0F49  3062               	movlw	98
  2222  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0F4C  00A1               	movwf	??_uncompensated_pressure+1
  2225  0F4D  3065               	movlw	101
  2226  0F4E  00A0               	movwf	??_uncompensated_pressure
  2227  0F4F                     u1747:
  2228  0F4F  0BA0               	decfsz	??_uncompensated_pressure,f
  2229  0F50  2F4F               	goto	u1747
  2230  0F51  0BA1               	decfsz	??_uncompensated_pressure+1,f
  2231  0F52  2F4F               	goto	u1747
  2232  0F53                     l1563:
  2233                           
  2234                           ;main_bmp280.c: 92:         long ff6=(bmp280_read_byte(0xf6));
  2235  0F53  30F6               	movlw	246
  2236  0F54  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  2237  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0F5B  00A0               	movwf	??_uncompensated_pressure
  2240  0F5C  01A1               	clrf	??_uncompensated_pressure+1
  2241  0F5D  01A2               	clrf	??_uncompensated_pressure+2
  2242  0F5E  01A3               	clrf	??_uncompensated_pressure+3
  2243  0F5F  0823               	movf	??_uncompensated_pressure+3,w
  2244  0F60  00B0               	movwf	uncompensated_pressure@ff6+3
  2245  0F61  0822               	movf	??_uncompensated_pressure+2,w
  2246  0F62  00AF               	movwf	uncompensated_pressure@ff6+2
  2247  0F63  0821               	movf	??_uncompensated_pressure+1,w
  2248  0F64  00AE               	movwf	uncompensated_pressure@ff6+1
  2249  0F65  0820               	movf	??_uncompensated_pressure,w
  2250  0F66  00AD               	movwf	uncompensated_pressure@ff6
  2251  0F67                     l1565:
  2252                           
  2253                           ;main_bmp280.c: 93:         long ff7=(bmp280_read_byte(0xf7));
  2254  0F67  30F7               	movlw	247
  2255  0F68  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  2256  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0F6F  00A0               	movwf	??_uncompensated_pressure
  2259  0F70  01A1               	clrf	??_uncompensated_pressure+1
  2260  0F71  01A2               	clrf	??_uncompensated_pressure+2
  2261  0F72  01A3               	clrf	??_uncompensated_pressure+3
  2262  0F73  0823               	movf	??_uncompensated_pressure+3,w
  2263  0F74  00B4               	movwf	uncompensated_pressure@ff7+3
  2264  0F75  0822               	movf	??_uncompensated_pressure+2,w
  2265  0F76  00B3               	movwf	uncompensated_pressure@ff7+2
  2266  0F77  0821               	movf	??_uncompensated_pressure+1,w
  2267  0F78  00B2               	movwf	uncompensated_pressure@ff7+1
  2268  0F79  0820               	movf	??_uncompensated_pressure,w
  2269  0F7A  00B1               	movwf	uncompensated_pressure@ff7
  2270  0F7B                     l1567:
  2271                           
  2272                           ;main_bmp280.c: 94:         long ff8=(bmp280_read_byte(0xf8));
  2273  0F7B  30F8               	movlw	248
  2274  0F7C  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  2275  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0F83  00A0               	movwf	??_uncompensated_pressure
  2278  0F84  01A1               	clrf	??_uncompensated_pressure+1
  2279  0F85  01A2               	clrf	??_uncompensated_pressure+2
  2280  0F86  01A3               	clrf	??_uncompensated_pressure+3
  2281  0F87  0823               	movf	??_uncompensated_pressure+3,w
  2282  0F88  00B8               	movwf	uncompensated_pressure@ff8+3
  2283  0F89  0822               	movf	??_uncompensated_pressure+2,w
  2284  0F8A  00B7               	movwf	uncompensated_pressure@ff8+2
  2285  0F8B  0821               	movf	??_uncompensated_pressure+1,w
  2286  0F8C  00B6               	movwf	uncompensated_pressure@ff8+1
  2287  0F8D  0820               	movf	??_uncompensated_pressure,w
  2288  0F8E  00B5               	movwf	uncompensated_pressure@ff8
  2289  0F8F                     l1569:
  2290                           
  2291                           ;main_bmp280.c: 95:         up=(((ff6<<16)+(ff7<<8)+ff8)>>(8-oss));
  2292  0F8F  086D               	movf	_oss,w
  2293  0F90  3C08               	sublw	8
  2294  0F91  00A0               	movwf	??_uncompensated_pressure
  2295  0F92  0AA0               	incf	??_uncompensated_pressure,f
  2296  0F93  0835               	movf	uncompensated_pressure@ff8,w
  2297  0F94  00A1               	movwf	??_uncompensated_pressure+1
  2298  0F95  0836               	movf	uncompensated_pressure@ff8+1,w
  2299  0F96  00A2               	movwf	??_uncompensated_pressure+2
  2300  0F97  0837               	movf	uncompensated_pressure@ff8+2,w
  2301  0F98  00A3               	movwf	??_uncompensated_pressure+3
  2302  0F99  0838               	movf	uncompensated_pressure@ff8+3,w
  2303  0F9A  00A4               	movwf	??_uncompensated_pressure+4
  2304  0F9B  0831               	movf	uncompensated_pressure@ff7,w
  2305  0F9C  00A5               	movwf	??_uncompensated_pressure+5
  2306  0F9D  0832               	movf	uncompensated_pressure@ff7+1,w
  2307  0F9E  00A6               	movwf	??_uncompensated_pressure+6
  2308  0F9F  0833               	movf	uncompensated_pressure@ff7+2,w
  2309  0FA0  00A7               	movwf	??_uncompensated_pressure+7
  2310  0FA1  0834               	movf	uncompensated_pressure@ff7+3,w
  2311  0FA2  00A8               	movwf	??_uncompensated_pressure+8
  2312  0FA3  3008               	movlw	8
  2313  0FA4                     u1355:
  2314  0FA4  1003               	clrc
  2315  0FA5  0DA5               	rlf	??_uncompensated_pressure+5,f
  2316  0FA6  0DA6               	rlf	??_uncompensated_pressure+6,f
  2317  0FA7  0DA7               	rlf	??_uncompensated_pressure+7,f
  2318  0FA8  0DA8               	rlf	??_uncompensated_pressure+8,f
  2319  0FA9                     u1350:
  2320  0FA9  3EFF               	addlw	-1
  2321  0FAA  1D03               	skipz
  2322  0FAB  2FA4               	goto	u1355
  2323  0FAC  082D               	movf	uncompensated_pressure@ff6,w
  2324  0FAD  00A9               	movwf	??_uncompensated_pressure+9
  2325  0FAE  082E               	movf	uncompensated_pressure@ff6+1,w
  2326  0FAF  00AA               	movwf	??_uncompensated_pressure+10
  2327  0FB0  082F               	movf	uncompensated_pressure@ff6+2,w
  2328  0FB1  00AB               	movwf	??_uncompensated_pressure+11
  2329  0FB2  0830               	movf	uncompensated_pressure@ff6+3,w
  2330  0FB3  00AC               	movwf	??_uncompensated_pressure+12
  2331  0FB4  3010               	movlw	16
  2332  0FB5                     u1365:
  2333  0FB5  1003               	clrc
  2334  0FB6  0DA9               	rlf	??_uncompensated_pressure+9,f
  2335  0FB7  0DAA               	rlf	??_uncompensated_pressure+10,f
  2336  0FB8  0DAB               	rlf	??_uncompensated_pressure+11,f
  2337  0FB9  0DAC               	rlf	??_uncompensated_pressure+12,f
  2338  0FBA                     u1360:
  2339  0FBA  3EFF               	addlw	-1
  2340  0FBB  1D03               	skipz
  2341  0FBC  2FB5               	goto	u1365
  2342  0FBD  0829               	movf	??_uncompensated_pressure+9,w
  2343  0FBE  07A5               	addwf	??_uncompensated_pressure+5,f
  2344  0FBF  082A               	movf	??_uncompensated_pressure+10,w
  2345  0FC0  1803               	skipnc
  2346  0FC1  0F2A               	incfsz	??_uncompensated_pressure+10,w
  2347  0FC2  2FC4               	goto	u1370
  2348  0FC3  2FC5               	goto	u1371
  2349  0FC4                     u1370:
  2350  0FC4  07A6               	addwf	??_uncompensated_pressure+6,f
  2351  0FC5                     u1371:
  2352  0FC5  082B               	movf	??_uncompensated_pressure+11,w
  2353  0FC6  1803               	skipnc
  2354  0FC7  0F2B               	incfsz	??_uncompensated_pressure+11,w
  2355  0FC8  2FCA               	goto	u1372
  2356  0FC9  2FCB               	goto	u1373
  2357  0FCA                     u1372:
  2358  0FCA  07A7               	addwf	??_uncompensated_pressure+7,f
  2359  0FCB                     u1373:
  2360  0FCB  082C               	movf	??_uncompensated_pressure+12,w
  2361  0FCC  1803               	skipnc
  2362  0FCD  0A2C               	incf	??_uncompensated_pressure+12,w
  2363  0FCE  07A8               	addwf	??_uncompensated_pressure+8,f
  2364  0FCF  0825               	movf	??_uncompensated_pressure+5,w
  2365  0FD0  07A1               	addwf	??_uncompensated_pressure+1,f
  2366  0FD1  0826               	movf	??_uncompensated_pressure+6,w
  2367  0FD2  1803               	skipnc
  2368  0FD3  0F26               	incfsz	??_uncompensated_pressure+6,w
  2369  0FD4  2FD6               	goto	u1380
  2370  0FD5  2FD7               	goto	u1381
  2371  0FD6                     u1380:
  2372  0FD6  07A2               	addwf	??_uncompensated_pressure+2,f
  2373  0FD7                     u1381:
  2374  0FD7  0827               	movf	??_uncompensated_pressure+7,w
  2375  0FD8  1803               	skipnc
  2376  0FD9  0F27               	incfsz	??_uncompensated_pressure+7,w
  2377  0FDA  2FDC               	goto	u1382
  2378  0FDB  2FDD               	goto	u1383
  2379  0FDC                     u1382:
  2380  0FDC  07A3               	addwf	??_uncompensated_pressure+3,f
  2381  0FDD                     u1383:
  2382  0FDD  0828               	movf	??_uncompensated_pressure+8,w
  2383  0FDE  1803               	skipnc
  2384  0FDF  0A28               	incf	??_uncompensated_pressure+8,w
  2385  0FE0  07A4               	addwf	??_uncompensated_pressure+4,f
  2386  0FE1  2FE7               	goto	u1390
  2387  0FE2                     u1395:
  2388  0FE2  0D24               	rlf	??_uncompensated_pressure+4,w
  2389  0FE3  0CA4               	rrf	??_uncompensated_pressure+4,f
  2390  0FE4  0CA3               	rrf	??_uncompensated_pressure+3,f
  2391  0FE5  0CA2               	rrf	??_uncompensated_pressure+2,f
  2392  0FE6  0CA1               	rrf	??_uncompensated_pressure+1,f
  2393  0FE7                     u1390:
  2394  0FE7  0BA0               	decfsz	??_uncompensated_pressure,f
  2395  0FE8  2FE2               	goto	u1395
  2396  0FE9  0824               	movf	??_uncompensated_pressure+4,w
  2397  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2398  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2399  0FEC  00A7               	movwf	(_up+3)^(0+128)
  2400  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  2402  0FEF  0823               	movf	??_uncompensated_pressure+3,w
  2403  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  2404  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  2405  0FF2  00A6               	movwf	(_up+2)^(0+128)
  2406  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0FF5  0822               	movf	??_uncompensated_pressure+2,w
  2409  0FF6  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0FF7  1303               	bcf	3,6	;RP1=0, select bank1
  2411  0FF8  00A5               	movwf	(_up+1)^(0+128)
  2412  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0FFB  0821               	movf	??_uncompensated_pressure+1,w
  2415  0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  2416  0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  2417  0FFE  00A4               	movwf	_up^(0+128)
  2418  0FFF                     l187:
  2419  0FFF  0008               	return
  2420  1000                     __end_of_uncompensated_pressure:
  2421                           
  2422                           	psect	text2
  2423  0B53                     __ptext2:	
  2424 ;; *************** function _bmp280_send_byte *****************
  2425 ;; Defined at:
  2426 ;;		line 59 in file "./p03a_bmp280.h"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  addr            1    wreg     unsigned char 
  2429 ;;  count           1    1[COMMON] unsigned char 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  addr            1    2[COMMON] unsigned char 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, pclath, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2441 ;;      Params:         1       0       0       0       0
  2442 ;;      Locals:         1       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0
  2444 ;;      Totals:         2       0       0       0       0
  2445 ;;Total ram usage:        2 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; Hardware stack levels required when called: 2
  2448 ;; This function calls:
  2449 ;;		_bmp280_send
  2450 ;;		_bmp280_start
  2451 ;;		_bmp280_stop
  2452 ;; This function is called by:
  2453 ;;		_uncompensated_pressure
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function _bmp280_send_byte
  2459  0B53                     _bmp280_send_byte:
  2460                           
  2461                           ;incstack = 0
  2462                           ; Regs used in _bmp280_send_byte: [wreg+status,2+status,0+pclath+cstack]
  2463                           ;bmp280_send_byte@addr stored from wreg
  2464  0B53  00F2               	movwf	bmp280_send_byte@addr
  2465  0B54                     l1283:
  2466                           
  2467                           ;./p03a_bmp280.h: 59: void bmp280_send_byte(unsigned char addr,unsigned char count);./p0
      +                          3a_bmp280.h: 60: {;./p03a_bmp280.h: 61:     bmp280_start();
  2468  0B54  120A  158A  2323  120A  158A  	fcall	_bmp280_start
  2469  0B59                     l1285:
  2470                           
  2471                           ;./p03a_bmp280.h: 62:     bmp280_send(0xEE);
  2472  0B59  30EE               	movlw	238
  2473  0B5A  120A  158A  2342  120A  158A  	fcall	_bmp280_send
  2474  0B5F                     l1287:
  2475                           
  2476                           ;./p03a_bmp280.h: 63:     bmp280_send(addr);
  2477  0B5F  0872               	movf	bmp280_send_byte@addr,w
  2478  0B60  120A  158A  2342  120A  158A  	fcall	_bmp280_send
  2479  0B65                     l1289:
  2480                           
  2481                           ;./p03a_bmp280.h: 64:     bmp280_send(count);
  2482  0B65  0871               	movf	bmp280_send_byte@count,w
  2483  0B66  120A  158A  2342  120A  158A  	fcall	_bmp280_send
  2484  0B6B                     l1291:
  2485                           
  2486                           ;./p03a_bmp280.h: 65:     bmp280_stop();
  2487  0B6B  120A  158A  231A  120A  158A  	fcall	_bmp280_stop
  2488  0B70                     l80:
  2489  0B70  0008               	return
  2490  0B71                     __end_of_bmp280_send_byte:
  2491                           
  2492                           	psect	text3
  2493  0B23                     __ptext3:	
  2494 ;; *************** function _bmp280_start *****************
  2495 ;; Defined at:
  2496 ;;		line 21 in file "./p03a_bmp280.h"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 1
  2517 ;; This function calls:
  2518 ;;		_waitmssp
  2519 ;; This function is called by:
  2520 ;;		_bmp280_send_byte
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _bmp280_start
  2526  0B23                     _bmp280_start:
  2527  0B23                     l1255:	
  2528                           ;incstack = 0
  2529                           ; Regs used in _bmp280_start: [status,2+status,0+pclath+cstack]
  2530                           
  2531                           
  2532                           ;./p03a_bmp280.h: 23:     SEN=1;
  2533  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  2534  0B24  1303               	bcf	3,6	;RP1=0, select bank1
  2535  0B25  1411               	bsf	17,0	;volatile
  2536  0B26                     l1257:
  2537                           
  2538                           ;./p03a_bmp280.h: 24:     waitmssp();
  2539  0B26  120A  158A  2301  120A  158A  	fcall	_waitmssp
  2540  0B2B                     l52:
  2541  0B2B  0008               	return
  2542  0B2C                     __end_of_bmp280_start:
  2543                           
  2544                           	psect	text4
  2545  00BA                     __ptext4:	
  2546 ;; *************** function _show_multidigits *****************
  2547 ;; Defined at:
  2548 ;;		line 93 in file "./lcd4bit.h"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  val             2    9[COMMON] unsigned int 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  remainder       2   12[BANK0 ] int 
  2553 ;;  result1         2   10[BANK0 ] int 
  2554 ;;  digit2          2    8[BANK0 ] int 
  2555 ;;  digit1          2    6[BANK0 ] int 
  2556 ;;  digit3          2    4[BANK0 ] int 
  2557 ;;  result          2    2[BANK0 ] int 
  2558 ;;  digit4          2    0[BANK0 ] int 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, pclath, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2568 ;;      Params:         2       0       0       0       0
  2569 ;;      Locals:         0      14       0       0       0
  2570 ;;      Temps:          0       0       0       0       0
  2571 ;;      Totals:         2      14       0       0       0
  2572 ;;Total ram usage:       16 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 1
  2575 ;; This function calls:
  2576 ;;		_LCD_Char
  2577 ;;		___awdiv
  2578 ;;		___awmod
  2579 ;;		___lwdiv
  2580 ;;		___lwmod
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _show_multidigits
  2588  00BA                     _show_multidigits:
  2589  00BA                     l1497:	
  2590                           ;incstack = 0
  2591                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  2592                           
  2593                           
  2594                           ;./lcd4bit.h: 93: void show_multidigits (unsigned int val);./lcd4bit.h: 94: {;./lcd4bit.
      +                          h: 95:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          96:     if (val<=9)
  2595  00BA  3000               	movlw	0
  2596  00BB  027A               	subwf	show_multidigits@val+1,w
  2597  00BC  300A               	movlw	10
  2598  00BD  1903               	skipnz
  2599  00BE  0279               	subwf	show_multidigits@val,w
  2600  00BF  1803               	skipnc
  2601  00C0  28C2               	goto	u1271
  2602  00C1  28C3               	goto	u1270
  2603  00C2                     u1271:
  2604  00C2  28CB               	goto	l1501
  2605  00C3                     u1270:
  2606  00C3                     l1499:
  2607                           
  2608                           ;./lcd4bit.h: 97:     {;./lcd4bit.h: 98:        LCD_Char(val+0x30);
  2609  00C3  0879               	movf	show_multidigits@val,w
  2610  00C4  3E30               	addlw	48
  2611  00C5  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2612                           
  2613                           ;./lcd4bit.h: 99:     }
  2614  00CA  2A4B               	goto	l123
  2615  00CB                     l1501:
  2616  00CB  3000               	movlw	0
  2617  00CC  027A               	subwf	show_multidigits@val+1,w
  2618  00CD  300A               	movlw	10
  2619  00CE  1903               	skipnz
  2620  00CF  0279               	subwf	show_multidigits@val,w
  2621  00D0  1C03               	skipc
  2622  00D1  28D3               	goto	u1281
  2623  00D2  28D4               	goto	u1280
  2624  00D3                     u1281:
  2625  00D3  2918               	goto	l1515
  2626  00D4                     u1280:
  2627  00D4                     l1503:
  2628  00D4  3000               	movlw	0
  2629  00D5  027A               	subwf	show_multidigits@val+1,w
  2630  00D6  3064               	movlw	100
  2631  00D7  1903               	skipnz
  2632  00D8  0279               	subwf	show_multidigits@val,w
  2633  00D9  1803               	skipnc
  2634  00DA  28DC               	goto	u1291
  2635  00DB  28DD               	goto	u1290
  2636  00DC                     u1291:
  2637  00DC  2918               	goto	l1515
  2638  00DD                     u1290:
  2639  00DD                     l1505:
  2640                           
  2641                           ;./lcd4bit.h: 101:     {;./lcd4bit.h: 102:         remainder = val % 10;
  2642  00DD  300A               	movlw	10
  2643  00DE  00F0               	movwf	___lwmod@divisor
  2644  00DF  3000               	movlw	0
  2645  00E0  00F1               	movwf	___lwmod@divisor+1
  2646  00E1  087A               	movf	show_multidigits@val+1,w
  2647  00E2  00F3               	movwf	___lwmod@dividend+1
  2648  00E3  0879               	movf	show_multidigits@val,w
  2649  00E4  00F2               	movwf	___lwmod@dividend
  2650  00E5  120A  158A  2400  120A  118A  	fcall	___lwmod
  2651  00EA  0871               	movf	?___lwmod+1,w
  2652  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  2653  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  2654  00ED  00AD               	movwf	show_multidigits@remainder+1
  2655  00EE  0870               	movf	?___lwmod,w
  2656  00EF  00AC               	movwf	show_multidigits@remainder
  2657  00F0                     l1507:
  2658                           
  2659                           ;./lcd4bit.h: 103:         digit1 = remainder;
  2660  00F0  082D               	movf	show_multidigits@remainder+1,w
  2661  00F1  00A7               	movwf	show_multidigits@digit1+1
  2662  00F2  082C               	movf	show_multidigits@remainder,w
  2663  00F3  00A6               	movwf	show_multidigits@digit1
  2664  00F4                     l1509:
  2665                           
  2666                           ;./lcd4bit.h: 104:         digit2 = val/10;
  2667  00F4  300A               	movlw	10
  2668  00F5  00F0               	movwf	___lwdiv@divisor
  2669  00F6  3000               	movlw	0
  2670  00F7  00F1               	movwf	___lwdiv@divisor+1
  2671  00F8  087A               	movf	show_multidigits@val+1,w
  2672  00F9  00F3               	movwf	___lwdiv@dividend+1
  2673  00FA  0879               	movf	show_multidigits@val,w
  2674  00FB  00F2               	movwf	___lwdiv@dividend
  2675  00FC  120A  158A  24BA  120A  118A  	fcall	___lwdiv
  2676  0101  0871               	movf	?___lwdiv+1,w
  2677  0102  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0103  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0104  00A9               	movwf	show_multidigits@digit2+1
  2680  0105  0870               	movf	?___lwdiv,w
  2681  0106  00A8               	movwf	show_multidigits@digit2
  2682  0107                     l1511:
  2683                           
  2684                           ;./lcd4bit.h: 105:         LCD_Char(digit2+0x30);
  2685  0107  0828               	movf	show_multidigits@digit2,w
  2686  0108  3E30               	addlw	48
  2687  0109  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2688  010E                     l1513:
  2689                           
  2690                           ;./lcd4bit.h: 106:         LCD_Char(digit1+0x30);
  2691  010E  1283               	bcf	3,5	;RP0=0, select bank0
  2692  010F  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0110  0826               	movf	show_multidigits@digit1,w
  2694  0111  3E30               	addlw	48
  2695  0112  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2696                           
  2697                           ;./lcd4bit.h: 107:     }
  2698  0117  2A4B               	goto	l123
  2699  0118                     l1515:
  2700  0118  3000               	movlw	0
  2701  0119  027A               	subwf	show_multidigits@val+1,w
  2702  011A  3064               	movlw	100
  2703  011B  1903               	skipnz
  2704  011C  0279               	subwf	show_multidigits@val,w
  2705  011D  1C03               	skipc
  2706  011E  2920               	goto	u1301
  2707  011F  2921               	goto	u1300
  2708  0120                     u1301:
  2709  0120  2998               	goto	l1533
  2710  0121                     u1300:
  2711  0121                     l1517:
  2712  0121  3003               	movlw	3
  2713  0122  027A               	subwf	show_multidigits@val+1,w
  2714  0123  30E8               	movlw	232
  2715  0124  1903               	skipnz
  2716  0125  0279               	subwf	show_multidigits@val,w
  2717  0126  1803               	skipnc
  2718  0127  2929               	goto	u1311
  2719  0128  292A               	goto	u1310
  2720  0129                     u1311:
  2721  0129  2998               	goto	l1533
  2722  012A                     u1310:
  2723  012A                     l1519:
  2724                           
  2725                           ;./lcd4bit.h: 109:     {;./lcd4bit.h: 110:         remainder = val % 10;
  2726  012A  300A               	movlw	10
  2727  012B  00F0               	movwf	___lwmod@divisor
  2728  012C  3000               	movlw	0
  2729  012D  00F1               	movwf	___lwmod@divisor+1
  2730  012E  087A               	movf	show_multidigits@val+1,w
  2731  012F  00F3               	movwf	___lwmod@dividend+1
  2732  0130  0879               	movf	show_multidigits@val,w
  2733  0131  00F2               	movwf	___lwmod@dividend
  2734  0132  120A  158A  2400  120A  118A  	fcall	___lwmod
  2735  0137  0871               	movf	?___lwmod+1,w
  2736  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0139  1303               	bcf	3,6	;RP1=0, select bank0
  2738  013A  00AD               	movwf	show_multidigits@remainder+1
  2739  013B  0870               	movf	?___lwmod,w
  2740  013C  00AC               	movwf	show_multidigits@remainder
  2741                           
  2742                           ;./lcd4bit.h: 111:         result1 = val /10;
  2743  013D  300A               	movlw	10
  2744  013E  00F0               	movwf	___lwdiv@divisor
  2745  013F  3000               	movlw	0
  2746  0140  00F1               	movwf	___lwdiv@divisor+1
  2747  0141  087A               	movf	show_multidigits@val+1,w
  2748  0142  00F3               	movwf	___lwdiv@dividend+1
  2749  0143  0879               	movf	show_multidigits@val,w
  2750  0144  00F2               	movwf	___lwdiv@dividend
  2751  0145  120A  158A  24BA  120A  118A  	fcall	___lwdiv
  2752  014A  0871               	movf	?___lwdiv+1,w
  2753  014B  1283               	bcf	3,5	;RP0=0, select bank0
  2754  014C  1303               	bcf	3,6	;RP1=0, select bank0
  2755  014D  00AB               	movwf	show_multidigits@result1+1
  2756  014E  0870               	movf	?___lwdiv,w
  2757  014F  00AA               	movwf	show_multidigits@result1
  2758  0150                     l1521:
  2759                           
  2760                           ;./lcd4bit.h: 112:         digit1 = remainder;
  2761  0150  082D               	movf	show_multidigits@remainder+1,w
  2762  0151  00A7               	movwf	show_multidigits@digit1+1
  2763  0152  082C               	movf	show_multidigits@remainder,w
  2764  0153  00A6               	movwf	show_multidigits@digit1
  2765  0154                     l1523:
  2766                           
  2767                           ;./lcd4bit.h: 113:         remainder = result1%10;
  2768  0154  300A               	movlw	10
  2769  0155  00F0               	movwf	___awmod@divisor
  2770  0156  3000               	movlw	0
  2771  0157  00F1               	movwf	___awmod@divisor+1
  2772  0158  082B               	movf	show_multidigits@result1+1,w
  2773  0159  00F3               	movwf	___awmod@dividend+1
  2774  015A  082A               	movf	show_multidigits@result1,w
  2775  015B  00F2               	movwf	___awmod@dividend
  2776  015C  120A  158A  2544  120A  118A  	fcall	___awmod
  2777  0161  0871               	movf	?___awmod+1,w
  2778  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0163  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0164  00AD               	movwf	show_multidigits@remainder+1
  2781  0165  0870               	movf	?___awmod,w
  2782  0166  00AC               	movwf	show_multidigits@remainder
  2783                           
  2784                           ;./lcd4bit.h: 114:         digit2 = remainder;
  2785  0167  082D               	movf	show_multidigits@remainder+1,w
  2786  0168  00A9               	movwf	show_multidigits@digit2+1
  2787  0169  082C               	movf	show_multidigits@remainder,w
  2788  016A  00A8               	movwf	show_multidigits@digit2
  2789  016B                     l1525:
  2790                           
  2791                           ;./lcd4bit.h: 115:         digit3 = result1/10;
  2792  016B  300A               	movlw	10
  2793  016C  00F0               	movwf	___awdiv@divisor
  2794  016D  3000               	movlw	0
  2795  016E  00F1               	movwf	___awdiv@divisor+1
  2796  016F  082B               	movf	show_multidigits@result1+1,w
  2797  0170  00F3               	movwf	___awdiv@dividend+1
  2798  0171  082A               	movf	show_multidigits@result1,w
  2799  0172  00F2               	movwf	___awdiv@dividend
  2800  0173  120A  158A  2603  120A  118A  	fcall	___awdiv
  2801  0178  0871               	movf	?___awdiv+1,w
  2802  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2803  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2804  017B  00A5               	movwf	show_multidigits@digit3+1
  2805  017C  0870               	movf	?___awdiv,w
  2806  017D  00A4               	movwf	show_multidigits@digit3
  2807  017E                     l1527:
  2808                           
  2809                           ;./lcd4bit.h: 116:         LCD_Char(digit3+0x30);
  2810  017E  0824               	movf	show_multidigits@digit3,w
  2811  017F  3E30               	addlw	48
  2812  0180  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2813  0185                     l1529:
  2814                           
  2815                           ;./lcd4bit.h: 117:         LCD_Char(digit2+0x30);
  2816  0185  1283               	bcf	3,5	;RP0=0, select bank0
  2817  0186  1303               	bcf	3,6	;RP1=0, select bank0
  2818  0187  0828               	movf	show_multidigits@digit2,w
  2819  0188  3E30               	addlw	48
  2820  0189  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2821  018E                     l1531:
  2822                           
  2823                           ;./lcd4bit.h: 118:         LCD_Char(digit1+0x30);
  2824  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2825  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0190  0826               	movf	show_multidigits@digit1,w
  2827  0191  3E30               	addlw	48
  2828  0192  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2829                           
  2830                           ;./lcd4bit.h: 119:     }
  2831  0197  2A4B               	goto	l123
  2832  0198                     l1533:
  2833  0198  3003               	movlw	3
  2834  0199  027A               	subwf	show_multidigits@val+1,w
  2835  019A  30E8               	movlw	232
  2836  019B  1903               	skipnz
  2837  019C  0279               	subwf	show_multidigits@val,w
  2838  019D  1C03               	skipc
  2839  019E  29A0               	goto	u1321
  2840  019F  29A1               	goto	u1320
  2841  01A0                     u1321:
  2842  01A0  2A4B               	goto	l119
  2843  01A1                     u1320:
  2844  01A1                     l1535:
  2845  01A1  3027               	movlw	39
  2846  01A2  027A               	subwf	show_multidigits@val+1,w
  2847  01A3  300F               	movlw	15
  2848  01A4  1903               	skipnz
  2849  01A5  0279               	subwf	show_multidigits@val,w
  2850  01A6  1803               	skipnc
  2851  01A7  29A9               	goto	u1331
  2852  01A8  29AA               	goto	u1330
  2853  01A9                     u1331:
  2854  01A9  2A4B               	goto	l119
  2855  01AA                     u1330:
  2856  01AA                     l1537:
  2857                           
  2858                           ;./lcd4bit.h: 121:     {;./lcd4bit.h: 122:         remainder = val % 10;
  2859  01AA  300A               	movlw	10
  2860  01AB  00F0               	movwf	___lwmod@divisor
  2861  01AC  3000               	movlw	0
  2862  01AD  00F1               	movwf	___lwmod@divisor+1
  2863  01AE  087A               	movf	show_multidigits@val+1,w
  2864  01AF  00F3               	movwf	___lwmod@dividend+1
  2865  01B0  0879               	movf	show_multidigits@val,w
  2866  01B1  00F2               	movwf	___lwmod@dividend
  2867  01B2  120A  158A  2400  120A  118A  	fcall	___lwmod
  2868  01B7  0871               	movf	?___lwmod+1,w
  2869  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2870  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2871  01BA  00AD               	movwf	show_multidigits@remainder+1
  2872  01BB  0870               	movf	?___lwmod,w
  2873  01BC  00AC               	movwf	show_multidigits@remainder
  2874                           
  2875                           ;./lcd4bit.h: 123:         result1 = val /10;
  2876  01BD  300A               	movlw	10
  2877  01BE  00F0               	movwf	___lwdiv@divisor
  2878  01BF  3000               	movlw	0
  2879  01C0  00F1               	movwf	___lwdiv@divisor+1
  2880  01C1  087A               	movf	show_multidigits@val+1,w
  2881  01C2  00F3               	movwf	___lwdiv@dividend+1
  2882  01C3  0879               	movf	show_multidigits@val,w
  2883  01C4  00F2               	movwf	___lwdiv@dividend
  2884  01C5  120A  158A  24BA  120A  118A  	fcall	___lwdiv
  2885  01CA  0871               	movf	?___lwdiv+1,w
  2886  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2887  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2888  01CD  00AB               	movwf	show_multidigits@result1+1
  2889  01CE  0870               	movf	?___lwdiv,w
  2890  01CF  00AA               	movwf	show_multidigits@result1
  2891  01D0                     l1539:
  2892                           
  2893                           ;./lcd4bit.h: 124:         digit1 = remainder;
  2894  01D0  082D               	movf	show_multidigits@remainder+1,w
  2895  01D1  00A7               	movwf	show_multidigits@digit1+1
  2896  01D2  082C               	movf	show_multidigits@remainder,w
  2897  01D3  00A6               	movwf	show_multidigits@digit1
  2898  01D4                     l1541:
  2899                           
  2900                           ;./lcd4bit.h: 125:         remainder = result1%10;
  2901  01D4  300A               	movlw	10
  2902  01D5  00F0               	movwf	___awmod@divisor
  2903  01D6  3000               	movlw	0
  2904  01D7  00F1               	movwf	___awmod@divisor+1
  2905  01D8  082B               	movf	show_multidigits@result1+1,w
  2906  01D9  00F3               	movwf	___awmod@dividend+1
  2907  01DA  082A               	movf	show_multidigits@result1,w
  2908  01DB  00F2               	movwf	___awmod@dividend
  2909  01DC  120A  158A  2544  120A  118A  	fcall	___awmod
  2910  01E1  0871               	movf	?___awmod+1,w
  2911  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2912  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2913  01E4  00AD               	movwf	show_multidigits@remainder+1
  2914  01E5  0870               	movf	?___awmod,w
  2915  01E6  00AC               	movwf	show_multidigits@remainder
  2916                           
  2917                           ;./lcd4bit.h: 126:         digit2 = remainder;
  2918  01E7  082D               	movf	show_multidigits@remainder+1,w
  2919  01E8  00A9               	movwf	show_multidigits@digit2+1
  2920  01E9  082C               	movf	show_multidigits@remainder,w
  2921  01EA  00A8               	movwf	show_multidigits@digit2
  2922  01EB                     l1543:
  2923                           
  2924                           ;./lcd4bit.h: 127:         result = result1/10;
  2925  01EB  300A               	movlw	10
  2926  01EC  00F0               	movwf	___awdiv@divisor
  2927  01ED  3000               	movlw	0
  2928  01EE  00F1               	movwf	___awdiv@divisor+1
  2929  01EF  082B               	movf	show_multidigits@result1+1,w
  2930  01F0  00F3               	movwf	___awdiv@dividend+1
  2931  01F1  082A               	movf	show_multidigits@result1,w
  2932  01F2  00F2               	movwf	___awdiv@dividend
  2933  01F3  120A  158A  2603  120A  118A  	fcall	___awdiv
  2934  01F8  0871               	movf	?___awdiv+1,w
  2935  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2936  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2937  01FB  00A3               	movwf	show_multidigits@result+1
  2938  01FC  0870               	movf	?___awdiv,w
  2939  01FD  00A2               	movwf	show_multidigits@result
  2940  01FE                     l1545:
  2941                           
  2942                           ;./lcd4bit.h: 128:         remainder = result%10;
  2943  01FE  300A               	movlw	10
  2944  01FF  00F0               	movwf	___awmod@divisor
  2945  0200  3000               	movlw	0
  2946  0201  00F1               	movwf	___awmod@divisor+1
  2947  0202  0823               	movf	show_multidigits@result+1,w
  2948  0203  00F3               	movwf	___awmod@dividend+1
  2949  0204  0822               	movf	show_multidigits@result,w
  2950  0205  00F2               	movwf	___awmod@dividend
  2951  0206  120A  158A  2544  120A  118A  	fcall	___awmod
  2952  020B  0871               	movf	?___awmod+1,w
  2953  020C  1283               	bcf	3,5	;RP0=0, select bank0
  2954  020D  1303               	bcf	3,6	;RP1=0, select bank0
  2955  020E  00AD               	movwf	show_multidigits@remainder+1
  2956  020F  0870               	movf	?___awmod,w
  2957  0210  00AC               	movwf	show_multidigits@remainder
  2958                           
  2959                           ;./lcd4bit.h: 129:         digit3=remainder;
  2960  0211  082D               	movf	show_multidigits@remainder+1,w
  2961  0212  00A5               	movwf	show_multidigits@digit3+1
  2962  0213  082C               	movf	show_multidigits@remainder,w
  2963  0214  00A4               	movwf	show_multidigits@digit3
  2964  0215                     l1547:
  2965                           
  2966                           ;./lcd4bit.h: 130:         digit4 = result/10;
  2967  0215  300A               	movlw	10
  2968  0216  00F0               	movwf	___awdiv@divisor
  2969  0217  3000               	movlw	0
  2970  0218  00F1               	movwf	___awdiv@divisor+1
  2971  0219  0823               	movf	show_multidigits@result+1,w
  2972  021A  00F3               	movwf	___awdiv@dividend+1
  2973  021B  0822               	movf	show_multidigits@result,w
  2974  021C  00F2               	movwf	___awdiv@dividend
  2975  021D  120A  158A  2603  120A  118A  	fcall	___awdiv
  2976  0222  0871               	movf	?___awdiv+1,w
  2977  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0225  00A1               	movwf	show_multidigits@digit4+1
  2980  0226  0870               	movf	?___awdiv,w
  2981  0227  00A0               	movwf	show_multidigits@digit4
  2982  0228                     l1549:
  2983                           
  2984                           ;./lcd4bit.h: 131:         LCD_Char(digit4+0x30);
  2985  0228  0820               	movf	show_multidigits@digit4,w
  2986  0229  3E30               	addlw	48
  2987  022A  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2988  022F                     l1551:
  2989                           
  2990                           ;./lcd4bit.h: 132:         LCD_Char(digit3+0x30);
  2991  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0231  0824               	movf	show_multidigits@digit3,w
  2994  0232  3E30               	addlw	48
  2995  0233  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  2996  0238                     l1553:
  2997                           
  2998                           ;./lcd4bit.h: 133:         LCD_Char(digit2+0x30);
  2999  0238  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0239  1303               	bcf	3,6	;RP1=0, select bank0
  3001  023A  0828               	movf	show_multidigits@digit2,w
  3002  023B  3E30               	addlw	48
  3003  023C  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  3004  0241                     l1555:
  3005                           
  3006                           ;./lcd4bit.h: 134:         LCD_Char(digit1+0x30);
  3007  0241  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0242  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0243  0826               	movf	show_multidigits@digit1,w
  3010  0244  3E30               	addlw	48
  3011  0245  120A  158A  247A  120A  118A  	fcall	_LCD_Char
  3012  024A  2A4B               	goto	l123
  3013  024B                     l119:
  3014  024B                     l123:
  3015  024B  0008               	return
  3016  024C                     __end_of_show_multidigits:
  3017                           
  3018                           	psect	text5
  3019  0C00                     __ptext5:	
  3020 ;; *************** function ___lwmod *****************
  3021 ;; Defined at:
  3022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  divisor         2    0[COMMON] unsigned int 
  3025 ;;  dividend        2    2[COMMON] unsigned int 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  counter         1    5[COMMON] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  2    0[COMMON] unsigned int 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3037 ;;      Params:         4       0       0       0       0
  3038 ;;      Locals:         1       0       0       0       0
  3039 ;;      Temps:          1       0       0       0       0
  3040 ;;      Totals:         6       0       0       0       0
  3041 ;;Total ram usage:        6 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_show_multidigits
  3047 ;;		_LCD_num
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function ___lwmod
  3053  0C00                     ___lwmod:
  3054  0C00                     l1457:	
  3055                           ;incstack = 0
  3056                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3057                           
  3058  0C00  0870               	movf	___lwmod@divisor,w
  3059  0C01  0471               	iorwf	___lwmod@divisor+1,w
  3060  0C02  1903               	btfsc	3,2
  3061  0C03  2C05               	goto	u1181
  3062  0C04  2C06               	goto	u1180
  3063  0C05                     u1181:
  3064  0C05  2C35               	goto	l1475
  3065  0C06                     u1180:
  3066  0C06                     l1459:
  3067  0C06  01F5               	clrf	___lwmod@counter
  3068  0C07  0AF5               	incf	___lwmod@counter,f
  3069  0C08  2C14               	goto	l1465
  3070  0C09                     l1461:
  3071  0C09  3001               	movlw	1
  3072  0C0A                     u1195:
  3073  0C0A  1003               	clrc
  3074  0C0B  0DF0               	rlf	___lwmod@divisor,f
  3075  0C0C  0DF1               	rlf	___lwmod@divisor+1,f
  3076  0C0D  3EFF               	addlw	-1
  3077  0C0E  1D03               	skipz
  3078  0C0F  2C0A               	goto	u1195
  3079  0C10                     l1463:
  3080  0C10  3001               	movlw	1
  3081  0C11  00F4               	movwf	??___lwmod
  3082  0C12  0874               	movf	??___lwmod,w
  3083  0C13  07F5               	addwf	___lwmod@counter,f
  3084  0C14                     l1465:
  3085  0C14  1FF1               	btfss	___lwmod@divisor+1,7
  3086  0C15  2C17               	goto	u1201
  3087  0C16  2C18               	goto	u1200
  3088  0C17                     u1201:
  3089  0C17  2C09               	goto	l1461
  3090  0C18                     u1200:
  3091  0C18                     l1467:
  3092  0C18  0871               	movf	___lwmod@divisor+1,w
  3093  0C19  0273               	subwf	___lwmod@dividend+1,w
  3094  0C1A  1D03               	skipz
  3095  0C1B  2C1E               	goto	u1215
  3096  0C1C  0870               	movf	___lwmod@divisor,w
  3097  0C1D  0272               	subwf	___lwmod@dividend,w
  3098  0C1E                     u1215:
  3099  0C1E  1C03               	skipc
  3100  0C1F  2C21               	goto	u1211
  3101  0C20  2C22               	goto	u1210
  3102  0C21                     u1211:
  3103  0C21  2C28               	goto	l1471
  3104  0C22                     u1210:
  3105  0C22                     l1469:
  3106  0C22  0870               	movf	___lwmod@divisor,w
  3107  0C23  02F2               	subwf	___lwmod@dividend,f
  3108  0C24  0871               	movf	___lwmod@divisor+1,w
  3109  0C25  1C03               	skipc
  3110  0C26  03F3               	decf	___lwmod@dividend+1,f
  3111  0C27  02F3               	subwf	___lwmod@dividend+1,f
  3112  0C28                     l1471:
  3113  0C28  3001               	movlw	1
  3114  0C29                     u1225:
  3115  0C29  1003               	clrc
  3116  0C2A  0CF1               	rrf	___lwmod@divisor+1,f
  3117  0C2B  0CF0               	rrf	___lwmod@divisor,f
  3118  0C2C  3EFF               	addlw	-1
  3119  0C2D  1D03               	skipz
  3120  0C2E  2C29               	goto	u1225
  3121  0C2F                     l1473:
  3122  0C2F  3001               	movlw	1
  3123  0C30  02F5               	subwf	___lwmod@counter,f
  3124  0C31  1D03               	btfss	3,2
  3125  0C32  2C34               	goto	u1231
  3126  0C33  2C35               	goto	u1230
  3127  0C34                     u1231:
  3128  0C34  2C18               	goto	l1467
  3129  0C35                     u1230:
  3130  0C35                     l1475:
  3131  0C35  0873               	movf	___lwmod@dividend+1,w
  3132  0C36  00F1               	movwf	?___lwmod+1
  3133  0C37  0872               	movf	___lwmod@dividend,w
  3134  0C38  00F0               	movwf	?___lwmod
  3135  0C39                     l555:
  3136  0C39  0008               	return
  3137  0C3A                     __end_of___lwmod:
  3138                           
  3139                           	psect	text6
  3140  0CBA                     __ptext6:	
  3141 ;; *************** function ___lwdiv *****************
  3142 ;; Defined at:
  3143 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  divisor         2    0[COMMON] unsigned int 
  3146 ;;  dividend        2    2[COMMON] unsigned int 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  quotient        2    5[COMMON] unsigned int 
  3149 ;;  counter         1    7[COMMON] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  2    0[COMMON] unsigned int 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3159 ;;      Params:         4       0       0       0       0
  3160 ;;      Locals:         3       0       0       0       0
  3161 ;;      Temps:          1       0       0       0       0
  3162 ;;      Totals:         8       0       0       0       0
  3163 ;;Total ram usage:        8 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_show_multidigits
  3169 ;;		_LCD_num
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function ___lwdiv
  3175  0CBA                     ___lwdiv:
  3176  0CBA                     l1431:	
  3177                           ;incstack = 0
  3178                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3179                           
  3180  0CBA  01F5               	clrf	___lwdiv@quotient
  3181  0CBB  01F6               	clrf	___lwdiv@quotient+1
  3182  0CBC                     l1433:
  3183  0CBC  0870               	movf	___lwdiv@divisor,w
  3184  0CBD  0471               	iorwf	___lwdiv@divisor+1,w
  3185  0CBE  1903               	btfsc	3,2
  3186  0CBF  2CC1               	goto	u1111
  3187  0CC0  2CC2               	goto	u1110
  3188  0CC1                     u1111:
  3189  0CC1  2CF9               	goto	l1453
  3190  0CC2                     u1110:
  3191  0CC2                     l1435:
  3192  0CC2  01F7               	clrf	___lwdiv@counter
  3193  0CC3  0AF7               	incf	___lwdiv@counter,f
  3194  0CC4  2CD0               	goto	l1441
  3195  0CC5                     l1437:
  3196  0CC5  3001               	movlw	1
  3197  0CC6                     u1125:
  3198  0CC6  1003               	clrc
  3199  0CC7  0DF0               	rlf	___lwdiv@divisor,f
  3200  0CC8  0DF1               	rlf	___lwdiv@divisor+1,f
  3201  0CC9  3EFF               	addlw	-1
  3202  0CCA  1D03               	skipz
  3203  0CCB  2CC6               	goto	u1125
  3204  0CCC                     l1439:
  3205  0CCC  3001               	movlw	1
  3206  0CCD  00F4               	movwf	??___lwdiv
  3207  0CCE  0874               	movf	??___lwdiv,w
  3208  0CCF  07F7               	addwf	___lwdiv@counter,f
  3209  0CD0                     l1441:
  3210  0CD0  1FF1               	btfss	___lwdiv@divisor+1,7
  3211  0CD1  2CD3               	goto	u1131
  3212  0CD2  2CD4               	goto	u1130
  3213  0CD3                     u1131:
  3214  0CD3  2CC5               	goto	l1437
  3215  0CD4                     u1130:
  3216  0CD4                     l1443:
  3217  0CD4  3001               	movlw	1
  3218  0CD5                     u1145:
  3219  0CD5  1003               	clrc
  3220  0CD6  0DF5               	rlf	___lwdiv@quotient,f
  3221  0CD7  0DF6               	rlf	___lwdiv@quotient+1,f
  3222  0CD8  3EFF               	addlw	-1
  3223  0CD9  1D03               	skipz
  3224  0CDA  2CD5               	goto	u1145
  3225  0CDB  0871               	movf	___lwdiv@divisor+1,w
  3226  0CDC  0273               	subwf	___lwdiv@dividend+1,w
  3227  0CDD  1D03               	skipz
  3228  0CDE  2CE1               	goto	u1155
  3229  0CDF  0870               	movf	___lwdiv@divisor,w
  3230  0CE0  0272               	subwf	___lwdiv@dividend,w
  3231  0CE1                     u1155:
  3232  0CE1  1C03               	skipc
  3233  0CE2  2CE4               	goto	u1151
  3234  0CE3  2CE5               	goto	u1150
  3235  0CE4                     u1151:
  3236  0CE4  2CEC               	goto	l1449
  3237  0CE5                     u1150:
  3238  0CE5                     l1445:
  3239  0CE5  0870               	movf	___lwdiv@divisor,w
  3240  0CE6  02F2               	subwf	___lwdiv@dividend,f
  3241  0CE7  0871               	movf	___lwdiv@divisor+1,w
  3242  0CE8  1C03               	skipc
  3243  0CE9  03F3               	decf	___lwdiv@dividend+1,f
  3244  0CEA  02F3               	subwf	___lwdiv@dividend+1,f
  3245  0CEB                     l1447:
  3246  0CEB  1475               	bsf	___lwdiv@quotient,0
  3247  0CEC                     l1449:
  3248  0CEC  3001               	movlw	1
  3249  0CED                     u1165:
  3250  0CED  1003               	clrc
  3251  0CEE  0CF1               	rrf	___lwdiv@divisor+1,f
  3252  0CEF  0CF0               	rrf	___lwdiv@divisor,f
  3253  0CF0  3EFF               	addlw	-1
  3254  0CF1  1D03               	skipz
  3255  0CF2  2CED               	goto	u1165
  3256  0CF3                     l1451:
  3257  0CF3  3001               	movlw	1
  3258  0CF4  02F7               	subwf	___lwdiv@counter,f
  3259  0CF5  1D03               	btfss	3,2
  3260  0CF6  2CF8               	goto	u1171
  3261  0CF7  2CF9               	goto	u1170
  3262  0CF8                     u1171:
  3263  0CF8  2CD4               	goto	l1443
  3264  0CF9                     u1170:
  3265  0CF9                     l1453:
  3266  0CF9  0876               	movf	___lwdiv@quotient+1,w
  3267  0CFA  00F1               	movwf	?___lwdiv+1
  3268  0CFB  0875               	movf	___lwdiv@quotient,w
  3269  0CFC  00F0               	movwf	?___lwdiv
  3270  0CFD                     l545:
  3271  0CFD  0008               	return
  3272  0CFE                     __end_of___lwdiv:
  3273                           
  3274                           	psect	text7
  3275  0D44                     __ptext7:	
  3276 ;; *************** function ___awmod *****************
  3277 ;; Defined at:
  3278 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  divisor         2    0[COMMON] int 
  3281 ;;  dividend        2    2[COMMON] int 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  sign            1    6[COMMON] unsigned char 
  3284 ;;  counter         1    5[COMMON] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2    0[COMMON] int 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         4       0       0       0       0
  3295 ;;      Locals:         2       0       0       0       0
  3296 ;;      Temps:          1       0       0       0       0
  3297 ;;      Totals:         7       0       0       0       0
  3298 ;;Total ram usage:        7 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_show_multidigits
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function ___awmod
  3309  0D44                     ___awmod:
  3310  0D44                     l1393:	
  3311                           ;incstack = 0
  3312                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3313                           
  3314  0D44  01F6               	clrf	___awmod@sign
  3315  0D45                     l1395:
  3316  0D45  1FF3               	btfss	___awmod@dividend+1,7
  3317  0D46  2D48               	goto	u1021
  3318  0D47  2D49               	goto	u1020
  3319  0D48                     u1021:
  3320  0D48  2D50               	goto	l1401
  3321  0D49                     u1020:
  3322  0D49                     l1397:
  3323  0D49  09F2               	comf	___awmod@dividend,f
  3324  0D4A  09F3               	comf	___awmod@dividend+1,f
  3325  0D4B  0AF2               	incf	___awmod@dividend,f
  3326  0D4C  1903               	skipnz
  3327  0D4D  0AF3               	incf	___awmod@dividend+1,f
  3328  0D4E                     l1399:
  3329  0D4E  01F6               	clrf	___awmod@sign
  3330  0D4F  0AF6               	incf	___awmod@sign,f
  3331  0D50                     l1401:
  3332  0D50  1FF1               	btfss	___awmod@divisor+1,7
  3333  0D51  2D53               	goto	u1031
  3334  0D52  2D54               	goto	u1030
  3335  0D53                     u1031:
  3336  0D53  2D59               	goto	l1405
  3337  0D54                     u1030:
  3338  0D54                     l1403:
  3339  0D54  09F0               	comf	___awmod@divisor,f
  3340  0D55  09F1               	comf	___awmod@divisor+1,f
  3341  0D56  0AF0               	incf	___awmod@divisor,f
  3342  0D57  1903               	skipnz
  3343  0D58  0AF1               	incf	___awmod@divisor+1,f
  3344  0D59                     l1405:
  3345  0D59  0870               	movf	___awmod@divisor,w
  3346  0D5A  0471               	iorwf	___awmod@divisor+1,w
  3347  0D5B  1903               	btfsc	3,2
  3348  0D5C  2D5E               	goto	u1041
  3349  0D5D  2D5F               	goto	u1040
  3350  0D5E                     u1041:
  3351  0D5E  2D8E               	goto	l1423
  3352  0D5F                     u1040:
  3353  0D5F                     l1407:
  3354  0D5F  01F5               	clrf	___awmod@counter
  3355  0D60  0AF5               	incf	___awmod@counter,f
  3356  0D61  2D6D               	goto	l1413
  3357  0D62                     l1409:
  3358  0D62  3001               	movlw	1
  3359  0D63                     u1055:
  3360  0D63  1003               	clrc
  3361  0D64  0DF0               	rlf	___awmod@divisor,f
  3362  0D65  0DF1               	rlf	___awmod@divisor+1,f
  3363  0D66  3EFF               	addlw	-1
  3364  0D67  1D03               	skipz
  3365  0D68  2D63               	goto	u1055
  3366  0D69                     l1411:
  3367  0D69  3001               	movlw	1
  3368  0D6A  00F4               	movwf	??___awmod
  3369  0D6B  0874               	movf	??___awmod,w
  3370  0D6C  07F5               	addwf	___awmod@counter,f
  3371  0D6D                     l1413:
  3372  0D6D  1FF1               	btfss	___awmod@divisor+1,7
  3373  0D6E  2D70               	goto	u1061
  3374  0D6F  2D71               	goto	u1060
  3375  0D70                     u1061:
  3376  0D70  2D62               	goto	l1409
  3377  0D71                     u1060:
  3378  0D71                     l1415:
  3379  0D71  0871               	movf	___awmod@divisor+1,w
  3380  0D72  0273               	subwf	___awmod@dividend+1,w
  3381  0D73  1D03               	skipz
  3382  0D74  2D77               	goto	u1075
  3383  0D75  0870               	movf	___awmod@divisor,w
  3384  0D76  0272               	subwf	___awmod@dividend,w
  3385  0D77                     u1075:
  3386  0D77  1C03               	skipc
  3387  0D78  2D7A               	goto	u1071
  3388  0D79  2D7B               	goto	u1070
  3389  0D7A                     u1071:
  3390  0D7A  2D81               	goto	l1419
  3391  0D7B                     u1070:
  3392  0D7B                     l1417:
  3393  0D7B  0870               	movf	___awmod@divisor,w
  3394  0D7C  02F2               	subwf	___awmod@dividend,f
  3395  0D7D  0871               	movf	___awmod@divisor+1,w
  3396  0D7E  1C03               	skipc
  3397  0D7F  03F3               	decf	___awmod@dividend+1,f
  3398  0D80  02F3               	subwf	___awmod@dividend+1,f
  3399  0D81                     l1419:
  3400  0D81  3001               	movlw	1
  3401  0D82                     u1085:
  3402  0D82  1003               	clrc
  3403  0D83  0CF1               	rrf	___awmod@divisor+1,f
  3404  0D84  0CF0               	rrf	___awmod@divisor,f
  3405  0D85  3EFF               	addlw	-1
  3406  0D86  1D03               	skipz
  3407  0D87  2D82               	goto	u1085
  3408  0D88                     l1421:
  3409  0D88  3001               	movlw	1
  3410  0D89  02F5               	subwf	___awmod@counter,f
  3411  0D8A  1D03               	btfss	3,2
  3412  0D8B  2D8D               	goto	u1091
  3413  0D8C  2D8E               	goto	u1090
  3414  0D8D                     u1091:
  3415  0D8D  2D71               	goto	l1415
  3416  0D8E                     u1090:
  3417  0D8E                     l1423:
  3418  0D8E  0876               	movf	___awmod@sign,w
  3419  0D8F  1903               	btfsc	3,2
  3420  0D90  2D92               	goto	u1101
  3421  0D91  2D93               	goto	u1100
  3422  0D92                     u1101:
  3423  0D92  2D98               	goto	l1427
  3424  0D93                     u1100:
  3425  0D93                     l1425:
  3426  0D93  09F2               	comf	___awmod@dividend,f
  3427  0D94  09F3               	comf	___awmod@dividend+1,f
  3428  0D95  0AF2               	incf	___awmod@dividend,f
  3429  0D96  1903               	skipnz
  3430  0D97  0AF3               	incf	___awmod@dividend+1,f
  3431  0D98                     l1427:
  3432  0D98  0873               	movf	___awmod@dividend+1,w
  3433  0D99  00F1               	movwf	?___awmod+1
  3434  0D9A  0872               	movf	___awmod@dividend,w
  3435  0D9B  00F0               	movwf	?___awmod
  3436  0D9C                     l439:
  3437  0D9C  0008               	return
  3438  0D9D                     __end_of___awmod:
  3439                           
  3440                           	psect	text8
  3441  0E03                     __ptext8:	
  3442 ;; *************** function ___awdiv *****************
  3443 ;; Defined at:
  3444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  divisor         2    0[COMMON] int 
  3447 ;;  dividend        2    2[COMMON] int 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  quotient        2    7[COMMON] int 
  3450 ;;  sign            1    6[COMMON] unsigned char 
  3451 ;;  counter         1    5[COMMON] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  2    0[COMMON] int 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         4       0       0       0       0
  3462 ;;      Locals:         4       0       0       0       0
  3463 ;;      Temps:          1       0       0       0       0
  3464 ;;      Totals:         9       0       0       0       0
  3465 ;;Total ram usage:        9 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_show_multidigits
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           
  3475                           ;psect for function ___awdiv
  3476  0E03                     ___awdiv:
  3477  0E03                     l1349:	
  3478                           ;incstack = 0
  3479                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3480                           
  3481  0E03  01F6               	clrf	___awdiv@sign
  3482  0E04                     l1351:
  3483  0E04  1FF1               	btfss	___awdiv@divisor+1,7
  3484  0E05  2E07               	goto	u921
  3485  0E06  2E08               	goto	u920
  3486  0E07                     u921:
  3487  0E07  2E0F               	goto	l1357
  3488  0E08                     u920:
  3489  0E08                     l1353:
  3490  0E08  09F0               	comf	___awdiv@divisor,f
  3491  0E09  09F1               	comf	___awdiv@divisor+1,f
  3492  0E0A  0AF0               	incf	___awdiv@divisor,f
  3493  0E0B  1903               	skipnz
  3494  0E0C  0AF1               	incf	___awdiv@divisor+1,f
  3495  0E0D                     l1355:
  3496  0E0D  01F6               	clrf	___awdiv@sign
  3497  0E0E  0AF6               	incf	___awdiv@sign,f
  3498  0E0F                     l1357:
  3499  0E0F  1FF3               	btfss	___awdiv@dividend+1,7
  3500  0E10  2E12               	goto	u931
  3501  0E11  2E13               	goto	u930
  3502  0E12                     u931:
  3503  0E12  2E1C               	goto	l1363
  3504  0E13                     u930:
  3505  0E13                     l1359:
  3506  0E13  09F2               	comf	___awdiv@dividend,f
  3507  0E14  09F3               	comf	___awdiv@dividend+1,f
  3508  0E15  0AF2               	incf	___awdiv@dividend,f
  3509  0E16  1903               	skipnz
  3510  0E17  0AF3               	incf	___awdiv@dividend+1,f
  3511  0E18                     l1361:
  3512  0E18  3001               	movlw	1
  3513  0E19  00F4               	movwf	??___awdiv
  3514  0E1A  0874               	movf	??___awdiv,w
  3515  0E1B  06F6               	xorwf	___awdiv@sign,f
  3516  0E1C                     l1363:
  3517  0E1C  01F7               	clrf	___awdiv@quotient
  3518  0E1D  01F8               	clrf	___awdiv@quotient+1
  3519  0E1E                     l1365:
  3520  0E1E  0870               	movf	___awdiv@divisor,w
  3521  0E1F  0471               	iorwf	___awdiv@divisor+1,w
  3522  0E20  1903               	btfsc	3,2
  3523  0E21  2E23               	goto	u941
  3524  0E22  2E24               	goto	u940
  3525  0E23                     u941:
  3526  0E23  2E5B               	goto	l1385
  3527  0E24                     u940:
  3528  0E24                     l1367:
  3529  0E24  01F5               	clrf	___awdiv@counter
  3530  0E25  0AF5               	incf	___awdiv@counter,f
  3531  0E26  2E32               	goto	l1373
  3532  0E27                     l1369:
  3533  0E27  3001               	movlw	1
  3534  0E28                     u955:
  3535  0E28  1003               	clrc
  3536  0E29  0DF0               	rlf	___awdiv@divisor,f
  3537  0E2A  0DF1               	rlf	___awdiv@divisor+1,f
  3538  0E2B  3EFF               	addlw	-1
  3539  0E2C  1D03               	skipz
  3540  0E2D  2E28               	goto	u955
  3541  0E2E                     l1371:
  3542  0E2E  3001               	movlw	1
  3543  0E2F  00F4               	movwf	??___awdiv
  3544  0E30  0874               	movf	??___awdiv,w
  3545  0E31  07F5               	addwf	___awdiv@counter,f
  3546  0E32                     l1373:
  3547  0E32  1FF1               	btfss	___awdiv@divisor+1,7
  3548  0E33  2E35               	goto	u961
  3549  0E34  2E36               	goto	u960
  3550  0E35                     u961:
  3551  0E35  2E27               	goto	l1369
  3552  0E36                     u960:
  3553  0E36                     l1375:
  3554  0E36  3001               	movlw	1
  3555  0E37                     u975:
  3556  0E37  1003               	clrc
  3557  0E38  0DF7               	rlf	___awdiv@quotient,f
  3558  0E39  0DF8               	rlf	___awdiv@quotient+1,f
  3559  0E3A  3EFF               	addlw	-1
  3560  0E3B  1D03               	skipz
  3561  0E3C  2E37               	goto	u975
  3562  0E3D  0871               	movf	___awdiv@divisor+1,w
  3563  0E3E  0273               	subwf	___awdiv@dividend+1,w
  3564  0E3F  1D03               	skipz
  3565  0E40  2E43               	goto	u985
  3566  0E41  0870               	movf	___awdiv@divisor,w
  3567  0E42  0272               	subwf	___awdiv@dividend,w
  3568  0E43                     u985:
  3569  0E43  1C03               	skipc
  3570  0E44  2E46               	goto	u981
  3571  0E45  2E47               	goto	u980
  3572  0E46                     u981:
  3573  0E46  2E4E               	goto	l1381
  3574  0E47                     u980:
  3575  0E47                     l1377:
  3576  0E47  0870               	movf	___awdiv@divisor,w
  3577  0E48  02F2               	subwf	___awdiv@dividend,f
  3578  0E49  0871               	movf	___awdiv@divisor+1,w
  3579  0E4A  1C03               	skipc
  3580  0E4B  03F3               	decf	___awdiv@dividend+1,f
  3581  0E4C  02F3               	subwf	___awdiv@dividend+1,f
  3582  0E4D                     l1379:
  3583  0E4D  1477               	bsf	___awdiv@quotient,0
  3584  0E4E                     l1381:
  3585  0E4E  3001               	movlw	1
  3586  0E4F                     u995:
  3587  0E4F  1003               	clrc
  3588  0E50  0CF1               	rrf	___awdiv@divisor+1,f
  3589  0E51  0CF0               	rrf	___awdiv@divisor,f
  3590  0E52  3EFF               	addlw	-1
  3591  0E53  1D03               	skipz
  3592  0E54  2E4F               	goto	u995
  3593  0E55                     l1383:
  3594  0E55  3001               	movlw	1
  3595  0E56  02F5               	subwf	___awdiv@counter,f
  3596  0E57  1D03               	btfss	3,2
  3597  0E58  2E5A               	goto	u1001
  3598  0E59  2E5B               	goto	u1000
  3599  0E5A                     u1001:
  3600  0E5A  2E36               	goto	l1375
  3601  0E5B                     u1000:
  3602  0E5B                     l1385:
  3603  0E5B  0876               	movf	___awdiv@sign,w
  3604  0E5C  1903               	btfsc	3,2
  3605  0E5D  2E5F               	goto	u1011
  3606  0E5E  2E60               	goto	u1010
  3607  0E5F                     u1011:
  3608  0E5F  2E65               	goto	l1389
  3609  0E60                     u1010:
  3610  0E60                     l1387:
  3611  0E60  09F7               	comf	___awdiv@quotient,f
  3612  0E61  09F8               	comf	___awdiv@quotient+1,f
  3613  0E62  0AF7               	incf	___awdiv@quotient,f
  3614  0E63  1903               	skipnz
  3615  0E64  0AF8               	incf	___awdiv@quotient+1,f
  3616  0E65                     l1389:
  3617  0E65  0878               	movf	___awdiv@quotient+1,w
  3618  0E66  00F1               	movwf	?___awdiv+1
  3619  0E67  0877               	movf	___awdiv@quotient,w
  3620  0E68  00F0               	movwf	?___awdiv
  3621  0E69                     l426:
  3622  0E69  0008               	return
  3623  0E6A                     __end_of___awdiv:
  3624                           
  3625                           	psect	text9
  3626  0B71                     __ptext9:	
  3627 ;; *************** function _show *****************
  3628 ;; Defined at:
  3629 ;;		line 79 in file "./lcd4bit.h"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  s               1    wreg     PTR unsigned char 
  3632 ;;		 -> STR_1(7), 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  s               1    4[COMMON] PTR unsigned char 
  3635 ;;		 -> STR_1(7), 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3645 ;;      Params:         0       0       0       0       0
  3646 ;;      Locals:         1       0       0       0       0
  3647 ;;      Temps:          1       0       0       0       0
  3648 ;;      Totals:         2       0       0       0       0
  3649 ;;Total ram usage:        2 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 1
  3652 ;; This function calls:
  3653 ;;		_LCD_Char
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _show
  3661  0B71                     _show:
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3665                           ;show@s stored from wreg
  3666  0B71  00F4               	movwf	show@s
  3667  0B72                     l1489:
  3668                           
  3669                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
  3670  0B72  2B83               	goto	l1495
  3671  0B73                     l1491:
  3672                           
  3673                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
  3674  0B73  0874               	movf	show@s,w
  3675  0B74  0084               	movwf	4
  3676  0B75  120A  158A  2000  120A  158A  	fcall	stringdir
  3677  0B7A  120A  158A  247A  120A  158A  	fcall	_LCD_Char
  3678  0B7F                     l1493:
  3679  0B7F  3001               	movlw	1
  3680  0B80  00F3               	movwf	??_show
  3681  0B81  0873               	movf	??_show,w
  3682  0B82  07F4               	addwf	show@s,f
  3683  0B83                     l1495:
  3684                           
  3685                           ;./lcd4bit.h: 81:     while(*s) {
  3686  0B83  0874               	movf	show@s,w
  3687  0B84  0084               	movwf	4
  3688  0B85  120A  158A  2000  120A  158A  	fcall	stringdir
  3689  0B8A  3A00               	xorlw	0
  3690  0B8B  1D03               	skipz
  3691  0B8C  2B8E               	goto	u1261
  3692  0B8D  2B8F               	goto	u1260
  3693  0B8E                     u1261:
  3694  0B8E  2B73               	goto	l1491
  3695  0B8F                     u1260:
  3696  0B8F                     l110:
  3697  0B8F  0008               	return
  3698  0B90                     __end_of_show:
  3699                           
  3700                           	psect	text10
  3701  0C7A                     __ptext10:	
  3702 ;; *************** function _LCD_Char *****************
  3703 ;; Defined at:
  3704 ;;		line 27 in file "./lcd4bit.h"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  data            1    wreg     unsigned char 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  data            1    2[COMMON] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3718 ;;      Params:         0       0       0       0       0
  3719 ;;      Locals:         1       0       0       0       0
  3720 ;;      Temps:          2       0       0       0       0
  3721 ;;      Totals:         3       0       0       0       0
  3722 ;;Total ram usage:        3 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_show
  3728 ;;		_show_multidigits
  3729 ;;		_LCD_num
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _LCD_Char
  3735  0C7A                     _LCD_Char:
  3736                           
  3737                           ;incstack = 0
  3738                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3739                           ;LCD_Char@data stored from wreg
  3740  0C7A  00F2               	movwf	LCD_Char@data
  3741  0C7B                     l1331:
  3742                           
  3743                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  3744  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0C7D  1407               	bsf	7,0	;volatile
  3747  0C7E                     l1333:
  3748                           
  3749                           ;./lcd4bit.h: 30:     PORTB = data;
  3750  0C7E  0872               	movf	LCD_Char@data,w
  3751  0C7F  0086               	movwf	6	;volatile
  3752  0C80                     l1335:
  3753                           
  3754                           ;./lcd4bit.h: 31:     RC1 = 1;
  3755  0C80  1487               	bsf	7,1	;volatile
  3756                           
  3757                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3758  0C81  3041               	movlw	65
  3759  0C82  00F1               	movwf	??_LCD_Char+1
  3760  0C83  30EE               	movlw	238
  3761  0C84  00F0               	movwf	??_LCD_Char
  3762  0C85                     u1757:
  3763  0C85  0BF0               	decfsz	??_LCD_Char,f
  3764  0C86  2C85               	goto	u1757
  3765  0C87  0BF1               	decfsz	??_LCD_Char+1,f
  3766  0C88  2C85               	goto	u1757
  3767  0C89  0000               	nop
  3768  0C8A                     l1337:
  3769                           
  3770                           ;./lcd4bit.h: 33:     RC1 = 0;
  3771  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  3772  0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  3773  0C8C  1087               	bcf	7,1	;volatile
  3774                           
  3775                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3776  0C8D  3041               	movlw	65
  3777  0C8E  00F1               	movwf	??_LCD_Char+1
  3778  0C8F  30EE               	movlw	238
  3779  0C90  00F0               	movwf	??_LCD_Char
  3780  0C91                     u1767:
  3781  0C91  0BF0               	decfsz	??_LCD_Char,f
  3782  0C92  2C91               	goto	u1767
  3783  0C93  0BF1               	decfsz	??_LCD_Char+1,f
  3784  0C94  2C91               	goto	u1767
  3785  0C95  0000               	nop
  3786  0C96                     l1339:
  3787                           
  3788                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  3789  0C96  0872               	movf	LCD_Char@data,w
  3790  0C97  00F0               	movwf	??_LCD_Char
  3791  0C98  3003               	movlw	3
  3792  0C99                     u915:
  3793  0C99  1003               	clrc
  3794  0C9A  0DF0               	rlf	??_LCD_Char,f
  3795  0C9B  3EFF               	addlw	-1
  3796  0C9C  1D03               	skipz
  3797  0C9D  2C99               	goto	u915
  3798  0C9E  1003               	clrc
  3799  0C9F  0D70               	rlf	??_LCD_Char,w
  3800  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  3801  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  3802  0CA2  0086               	movwf	6	;volatile
  3803  0CA3                     l1341:
  3804                           
  3805                           ;./lcd4bit.h: 36:     RC1 = 1;
  3806  0CA3  1487               	bsf	7,1	;volatile
  3807  0CA4                     l1343:
  3808                           
  3809                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3810  0CA4  3041               	movlw	65
  3811  0CA5  00F1               	movwf	??_LCD_Char+1
  3812  0CA6  30EE               	movlw	238
  3813  0CA7  00F0               	movwf	??_LCD_Char
  3814  0CA8                     u1777:
  3815  0CA8  0BF0               	decfsz	??_LCD_Char,f
  3816  0CA9  2CA8               	goto	u1777
  3817  0CAA  0BF1               	decfsz	??_LCD_Char+1,f
  3818  0CAB  2CA8               	goto	u1777
  3819  0CAC  0000               	nop
  3820  0CAD                     l1345:
  3821                           
  3822                           ;./lcd4bit.h: 38:     RC1 = 0;
  3823  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  3825  0CAF  1087               	bcf	7,1	;volatile
  3826  0CB0                     l1347:
  3827                           
  3828                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3829  0CB0  3041               	movlw	65
  3830  0CB1  00F1               	movwf	??_LCD_Char+1
  3831  0CB2  30EE               	movlw	238
  3832  0CB3  00F0               	movwf	??_LCD_Char
  3833  0CB4                     u1787:
  3834  0CB4  0BF0               	decfsz	??_LCD_Char,f
  3835  0CB5  2CB4               	goto	u1787
  3836  0CB6  0BF1               	decfsz	??_LCD_Char+1,f
  3837  0CB7  2CB4               	goto	u1787
  3838  0CB8  0000               	nop
  3839  0CB9                     l98:
  3840  0CB9  0008               	return
  3841  0CBA                     __end_of_LCD_Char:
  3842                           
  3843                           	psect	text11
  3844  0007                     __ptext11:	
  3845 ;; *************** function _bmp280_init *****************
  3846 ;; Defined at:
  3847 ;;		line 15 in file "./p03a_bmp280.h"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0
  3864 ;;      Totals:         0       0       0       0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _bmp280_init
  3876  0007                     _bmp280_init:
  3877  0007                     l1479:	
  3878                           ;incstack = 0
  3879                           ; Regs used in _bmp280_init: [wreg]
  3880                           
  3881                           
  3882                           ;./p03a_bmp280.h: 17:     TRISC3=TRISC4=1;
  3883  0007  1683               	bsf	3,5	;RP0=1, select bank1
  3884  0008  1303               	bcf	3,6	;RP1=0, select bank1
  3885  0009  1607               	bsf	7,4	;volatile
  3886  000A  1A07               	btfsc	7,4	;volatile
  3887  000B  280D               	goto	u1241
  3888  000C  2811               	goto	u1240
  3889  000D                     u1241:
  3890  000D  1683               	bsf	3,5	;RP0=1, select bank1
  3891  000E  1303               	bcf	3,6	;RP1=0, select bank1
  3892  000F  1587               	bsf	7,3	;volatile
  3893  0010  2814               	goto	u1254
  3894  0011                     u1240:
  3895  0011  1683               	bsf	3,5	;RP0=1, select bank1
  3896  0012  1303               	bcf	3,6	;RP1=0, select bank1
  3897  0013  1187               	bcf	7,3	;volatile
  3898  0014                     u1254:
  3899  0014                     l1481:
  3900                           
  3901                           ;./p03a_bmp280.h: 18:     SSPCON=0x28;
  3902  0014  3028               	movlw	40
  3903  0015  1283               	bcf	3,5	;RP0=0, select bank0
  3904  0016  1303               	bcf	3,6	;RP1=0, select bank0
  3905  0017  0094               	movwf	20	;volatile
  3906                           
  3907                           ;./p03a_bmp280.h: 19:     SSPADD=((11059200/4)/100)-1;
  3908  0018  30FF               	movlw	255
  3909  0019  1683               	bsf	3,5	;RP0=1, select bank1
  3910  001A  1303               	bcf	3,6	;RP1=0, select bank1
  3911  001B  0093               	movwf	19	;volatile
  3912  001C                     l49:
  3913  001C  0008               	return
  3914  001D                     __end_of_bmp280_init:
  3915                           
  3916                           	psect	text12
  3917  0E6A                     __ptext12:	
  3918 ;; *************** function _bmp280_getdata *****************
  3919 ;; Defined at:
  3920 ;;		line 72 in file "main_bmp280.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0, pclath, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0
  3936 ;;      Temps:          4       0       0       0       0
  3937 ;;      Totals:         4       0       0       0       0
  3938 ;;Total ram usage:        4 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; Hardware stack levels required when called: 3
  3941 ;; This function calls:
  3942 ;;		_bmp280_read_byte
  3943 ;; This function is called by:
  3944 ;;		_main
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function _bmp280_getdata
  3950  0E6A                     _bmp280_getdata:
  3951  0E6A                     l1557:	
  3952                           ;incstack = 0
  3953                           ; Regs used in _bmp280_getdata: [wreg+status,2+status,0+pclath+cstack]
  3954                           
  3955                           
  3956                           ;main_bmp280.c: 74:         aa=(bmp280_read_byte(0xAA));
  3957  0E6A  30AA               	movlw	170
  3958  0E6B  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  3959  0E70  00F4               	movwf	??_bmp280_getdata
  3960  0E71  01F5               	clrf	??_bmp280_getdata+1
  3961  0E72  01F6               	clrf	??_bmp280_getdata+2
  3962  0E73  01F7               	clrf	??_bmp280_getdata+3
  3963  0E74  0877               	movf	??_bmp280_getdata+3,w
  3964  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  3965  0E76  1303               	bcf	3,6	;RP1=0, select bank1
  3966  0E77  00D3               	movwf	(_aa+3)^(0+128)
  3967  0E78  0876               	movf	??_bmp280_getdata+2,w
  3968  0E79  00D2               	movwf	(_aa+2)^(0+128)
  3969  0E7A  0875               	movf	??_bmp280_getdata+1,w
  3970  0E7B  00D1               	movwf	(_aa+1)^(0+128)
  3971  0E7C  0874               	movf	??_bmp280_getdata,w
  3972  0E7D  00D0               	movwf	_aa^(0+128)
  3973                           
  3974                           ;main_bmp280.c: 75:         ab=(bmp280_read_byte(0xAB));
  3975  0E7E  30AB               	movlw	171
  3976  0E7F  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  3977  0E84  00F4               	movwf	??_bmp280_getdata
  3978  0E85  01F5               	clrf	??_bmp280_getdata+1
  3979  0E86  01F6               	clrf	??_bmp280_getdata+2
  3980  0E87  01F7               	clrf	??_bmp280_getdata+3
  3981  0E88  0877               	movf	??_bmp280_getdata+3,w
  3982  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3983  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  3984  0E8B  00CF               	movwf	(_ab+3)^(0+128)
  3985  0E8C  0876               	movf	??_bmp280_getdata+2,w
  3986  0E8D  00CE               	movwf	(_ab+2)^(0+128)
  3987  0E8E  0875               	movf	??_bmp280_getdata+1,w
  3988  0E8F  00CD               	movwf	(_ab+1)^(0+128)
  3989  0E90  0874               	movf	??_bmp280_getdata,w
  3990  0E91  00CC               	movwf	_ab^(0+128)
  3991                           
  3992                           ;main_bmp280.c: 76:         ac=(bmp280_read_byte(0xAC));
  3993  0E92  30AC               	movlw	172
  3994  0E93  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  3995  0E98  00F4               	movwf	??_bmp280_getdata
  3996  0E99  01F5               	clrf	??_bmp280_getdata+1
  3997  0E9A  01F6               	clrf	??_bmp280_getdata+2
  3998  0E9B  01F7               	clrf	??_bmp280_getdata+3
  3999  0E9C  0877               	movf	??_bmp280_getdata+3,w
  4000  0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  4001  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  4002  0E9F  00CB               	movwf	(_ac+3)^(0+128)
  4003  0EA0  0876               	movf	??_bmp280_getdata+2,w
  4004  0EA1  00CA               	movwf	(_ac+2)^(0+128)
  4005  0EA2  0875               	movf	??_bmp280_getdata+1,w
  4006  0EA3  00C9               	movwf	(_ac+1)^(0+128)
  4007  0EA4  0874               	movf	??_bmp280_getdata,w
  4008  0EA5  00C8               	movwf	_ac^(0+128)
  4009                           
  4010                           ;main_bmp280.c: 77:         ad=(bmp280_read_byte(0xAD));
  4011  0EA6  30AD               	movlw	173
  4012  0EA7  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4013  0EAC  00F4               	movwf	??_bmp280_getdata
  4014  0EAD  01F5               	clrf	??_bmp280_getdata+1
  4015  0EAE  01F6               	clrf	??_bmp280_getdata+2
  4016  0EAF  01F7               	clrf	??_bmp280_getdata+3
  4017  0EB0  0877               	movf	??_bmp280_getdata+3,w
  4018  0EB1  1683               	bsf	3,5	;RP0=1, select bank1
  4019  0EB2  1303               	bcf	3,6	;RP1=0, select bank1
  4020  0EB3  00C7               	movwf	(_ad+3)^(0+128)
  4021  0EB4  0876               	movf	??_bmp280_getdata+2,w
  4022  0EB5  00C6               	movwf	(_ad+2)^(0+128)
  4023  0EB6  0875               	movf	??_bmp280_getdata+1,w
  4024  0EB7  00C5               	movwf	(_ad+1)^(0+128)
  4025  0EB8  0874               	movf	??_bmp280_getdata,w
  4026  0EB9  00C4               	movwf	_ad^(0+128)
  4027                           
  4028                           ;main_bmp280.c: 78:         ae=(bmp280_read_byte(0xAE));
  4029  0EBA  30AE               	movlw	174
  4030  0EBB  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4031  0EC0  00F4               	movwf	??_bmp280_getdata
  4032  0EC1  01F5               	clrf	??_bmp280_getdata+1
  4033  0EC2  01F6               	clrf	??_bmp280_getdata+2
  4034  0EC3  01F7               	clrf	??_bmp280_getdata+3
  4035  0EC4  0877               	movf	??_bmp280_getdata+3,w
  4036  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  4037  0EC6  1303               	bcf	3,6	;RP1=0, select bank1
  4038  0EC7  00C3               	movwf	(_ae+3)^(0+128)
  4039  0EC8  0876               	movf	??_bmp280_getdata+2,w
  4040  0EC9  00C2               	movwf	(_ae+2)^(0+128)
  4041  0ECA  0875               	movf	??_bmp280_getdata+1,w
  4042  0ECB  00C1               	movwf	(_ae+1)^(0+128)
  4043  0ECC  0874               	movf	??_bmp280_getdata,w
  4044  0ECD  00C0               	movwf	_ae^(0+128)
  4045                           
  4046                           ;main_bmp280.c: 79:         af=(bmp280_read_byte(0xAF));
  4047  0ECE  30AF               	movlw	175
  4048  0ECF  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4049  0ED4  00F4               	movwf	??_bmp280_getdata
  4050  0ED5  01F5               	clrf	??_bmp280_getdata+1
  4051  0ED6  01F6               	clrf	??_bmp280_getdata+2
  4052  0ED7  01F7               	clrf	??_bmp280_getdata+3
  4053  0ED8  0877               	movf	??_bmp280_getdata+3,w
  4054  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  4055  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  4056  0EDB  00BF               	movwf	(_af+3)^(0+128)
  4057  0EDC  0876               	movf	??_bmp280_getdata+2,w
  4058  0EDD  00BE               	movwf	(_af+2)^(0+128)
  4059  0EDE  0875               	movf	??_bmp280_getdata+1,w
  4060  0EDF  00BD               	movwf	(_af+1)^(0+128)
  4061  0EE0  0874               	movf	??_bmp280_getdata,w
  4062  0EE1  00BC               	movwf	_af^(0+128)
  4063                           
  4064                           ;main_bmp280.c: 81:         b0=(bmp280_read_byte(0xB0));
  4065  0EE2  30B0               	movlw	176
  4066  0EE3  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4067  0EE8  00F4               	movwf	??_bmp280_getdata
  4068  0EE9  01F5               	clrf	??_bmp280_getdata+1
  4069  0EEA  01F6               	clrf	??_bmp280_getdata+2
  4070  0EEB  01F7               	clrf	??_bmp280_getdata+3
  4071  0EEC  0877               	movf	??_bmp280_getdata+3,w
  4072  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  4073  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  4074  0EEF  00BB               	movwf	(_b0+3)^(0+128)
  4075  0EF0  0876               	movf	??_bmp280_getdata+2,w
  4076  0EF1  00BA               	movwf	(_b0+2)^(0+128)
  4077  0EF2  0875               	movf	??_bmp280_getdata+1,w
  4078  0EF3  00B9               	movwf	(_b0+1)^(0+128)
  4079  0EF4  0874               	movf	??_bmp280_getdata,w
  4080  0EF5  00B8               	movwf	_b0^(0+128)
  4081                           
  4082                           ;main_bmp280.c: 82:         b1=(bmp280_read_byte(0xB1));
  4083  0EF6  30B1               	movlw	177
  4084  0EF7  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4085  0EFC  00F4               	movwf	??_bmp280_getdata
  4086  0EFD  01F5               	clrf	??_bmp280_getdata+1
  4087  0EFE  01F6               	clrf	??_bmp280_getdata+2
  4088  0EFF  01F7               	clrf	??_bmp280_getdata+3
  4089  0F00  0877               	movf	??_bmp280_getdata+3,w
  4090  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0F03  00E0               	movwf	_b1+3
  4093  0F04  0876               	movf	??_bmp280_getdata+2,w
  4094  0F05  00DF               	movwf	_b1+2
  4095  0F06  0875               	movf	??_bmp280_getdata+1,w
  4096  0F07  00DE               	movwf	_b1+1
  4097  0F08  0874               	movf	??_bmp280_getdata,w
  4098  0F09  00DD               	movwf	_b1
  4099                           
  4100                           ;main_bmp280.c: 83:         b2=(bmp280_read_byte(0xB2));
  4101  0F0A  30B2               	movlw	178
  4102  0F0B  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4103  0F10  00F4               	movwf	??_bmp280_getdata
  4104  0F11  01F5               	clrf	??_bmp280_getdata+1
  4105  0F12  01F6               	clrf	??_bmp280_getdata+2
  4106  0F13  01F7               	clrf	??_bmp280_getdata+3
  4107  0F14  0877               	movf	??_bmp280_getdata+3,w
  4108  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  4109  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  4110  0F17  00B7               	movwf	(_b2+3)^(0+128)
  4111  0F18  0876               	movf	??_bmp280_getdata+2,w
  4112  0F19  00B6               	movwf	(_b2+2)^(0+128)
  4113  0F1A  0875               	movf	??_bmp280_getdata+1,w
  4114  0F1B  00B5               	movwf	(_b2+1)^(0+128)
  4115  0F1C  0874               	movf	??_bmp280_getdata,w
  4116  0F1D  00B4               	movwf	_b2^(0+128)
  4117                           
  4118                           ;main_bmp280.c: 84:         b5=(bmp280_read_byte(0xB5));
  4119  0F1E  30B5               	movlw	181
  4120  0F1F  120A  158A  23C6  120A  158A  	fcall	_bmp280_read_byte
  4121  0F24  00F4               	movwf	??_bmp280_getdata
  4122  0F25  01F5               	clrf	??_bmp280_getdata+1
  4123  0F26  01F6               	clrf	??_bmp280_getdata+2
  4124  0F27  01F7               	clrf	??_bmp280_getdata+3
  4125  0F28  0877               	movf	??_bmp280_getdata+3,w
  4126  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  4127  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  4128  0F2B  00AF               	movwf	(_b5+3)^(0+128)
  4129  0F2C  0876               	movf	??_bmp280_getdata+2,w
  4130  0F2D  00AE               	movwf	(_b5+2)^(0+128)
  4131  0F2E  0875               	movf	??_bmp280_getdata+1,w
  4132  0F2F  00AD               	movwf	(_b5+1)^(0+128)
  4133  0F30  0874               	movf	??_bmp280_getdata,w
  4134  0F31  00AC               	movwf	_b5^(0+128)
  4135  0F32                     l184:
  4136  0F32  0008               	return
  4137  0F33                     __end_of_bmp280_getdata:
  4138                           
  4139                           	psect	text13
  4140  0BC6                     __ptext13:	
  4141 ;; *************** function _bmp280_read_byte *****************
  4142 ;; Defined at:
  4143 ;;		line 73 in file "./p03a_bmp280.h"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  addr            1    wreg     unsigned char 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  addr            1    2[COMMON] unsigned char 
  4148 ;;  rec             1    3[COMMON] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      unsigned char 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4158 ;;      Params:         0       0       0       0       0
  4159 ;;      Locals:         2       0       0       0       0
  4160 ;;      Temps:          1       0       0       0       0
  4161 ;;      Totals:         3       0       0       0       0
  4162 ;;Total ram usage:        3 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; Hardware stack levels required when called: 2
  4165 ;; This function calls:
  4166 ;;		_bmp280_nak
  4167 ;;		_bmp280_read
  4168 ;;		_bmp280_restart
  4169 ;;		_bmp280_send
  4170 ;;		_bmp280_stop
  4171 ;;		_waitmssp
  4172 ;; This function is called by:
  4173 ;;		_bmp280_getdata
  4174 ;;		_uncompensated_pressure
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function _bmp280_read_byte
  4180  0BC6                     _bmp280_read_byte:
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in _bmp280_read_byte: [wreg+status,2+status,0+pclath+cstack]
  4184                           ;bmp280_read_byte@addr stored from wreg
  4185  0BC6  00F2               	movwf	bmp280_read_byte@addr
  4186  0BC7                     l86:	
  4187                           ;./p03a_bmp280.h: 73: unsigned char bmp280_read_byte(unsigned char addr);./p03a_bmp280.h
      +                          : 74: {;./p03a_bmp280.h: 75:     unsigned char rec;;./p03a_bmp280.h: 76: L: bmp280_resta
      +                          rt();
  4188                           
  4189  0BC7                     l1293:
  4190  0BC7  120A  158A  2311  120A  158A  	fcall	_bmp280_restart
  4191  0BCC                     l1295:
  4192                           
  4193                           ;./p03a_bmp280.h: 77:     SSPBUF=0xEE;
  4194  0BCC  30EE               	movlw	238
  4195  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  4196  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  4197  0BCF  0093               	movwf	19	;volatile
  4198  0BD0                     l1297:
  4199                           
  4200                           ;./p03a_bmp280.h: 78:     waitmssp();
  4201  0BD0  120A  158A  2301  120A  158A  	fcall	_waitmssp
  4202  0BD5                     l87:	
  4203                           ;./p03a_bmp280.h: 79:     while(ACKSTAT){goto L;}
  4204                           
  4205  0BD5  1683               	bsf	3,5	;RP0=1, select bank1
  4206  0BD6  1303               	bcf	3,6	;RP1=0, select bank1
  4207  0BD7  1B11               	btfsc	17,6	;volatile
  4208  0BD8  2BDA               	goto	u891
  4209  0BD9  2BDB               	goto	u890
  4210  0BDA                     u891:
  4211  0BDA  2BC7               	goto	l86
  4212  0BDB                     u890:
  4213  0BDB                     l1299:
  4214                           
  4215                           ;./p03a_bmp280.h: 80:     bmp280_send(addr);
  4216  0BDB  0872               	movf	bmp280_read_byte@addr,w
  4217  0BDC  120A  158A  2342  120A  158A  	fcall	_bmp280_send
  4218  0BE1                     l1301:
  4219                           
  4220                           ;./p03a_bmp280.h: 81:     bmp280_restart();
  4221  0BE1  120A  158A  2311  120A  158A  	fcall	_bmp280_restart
  4222  0BE6                     l1303:
  4223                           
  4224                           ;./p03a_bmp280.h: 82:     bmp280_send(0xEF);
  4225  0BE6  30EF               	movlw	239
  4226  0BE7  120A  158A  2342  120A  158A  	fcall	_bmp280_send
  4227  0BEC                     l1305:
  4228                           
  4229                           ;./p03a_bmp280.h: 83:     rec=bmp280_read();
  4230  0BEC  120A  158A  2336  120A  158A  	fcall	_bmp280_read
  4231  0BF1  00F1               	movwf	??_bmp280_read_byte
  4232  0BF2  0871               	movf	??_bmp280_read_byte,w
  4233  0BF3  00F3               	movwf	bmp280_read_byte@rec
  4234  0BF4                     l1307:
  4235                           
  4236                           ;./p03a_bmp280.h: 84:     bmp280_nak();
  4237  0BF4  120A  158A  232C  120A  158A  	fcall	_bmp280_nak
  4238  0BF9                     l1309:
  4239                           
  4240                           ;./p03a_bmp280.h: 85:     bmp280_stop();
  4241  0BF9  120A  158A  231A  120A  158A  	fcall	_bmp280_stop
  4242                           
  4243                           ;./p03a_bmp280.h: 86:     return rec;
  4244  0BFE  0873               	movf	bmp280_read_byte@rec,w
  4245  0BFF                     l90:
  4246  0BFF  0008               	return
  4247  0C00                     __end_of_bmp280_read_byte:
  4248                           
  4249                           	psect	text14
  4250  0B1A                     __ptext14:	
  4251 ;; *************** function _bmp280_stop *****************
  4252 ;; Defined at:
  4253 ;;		line 26 in file "./p03a_bmp280.h"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		status,2, status,0, pclath, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4267 ;;      Params:         0       0       0       0       0
  4268 ;;      Locals:         0       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0
  4270 ;;      Totals:         0       0       0       0       0
  4271 ;;Total ram usage:        0 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; Hardware stack levels required when called: 1
  4274 ;; This function calls:
  4275 ;;		_waitmssp
  4276 ;; This function is called by:
  4277 ;;		_bmp280_send_byte
  4278 ;;		_bmp280_read_byte
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _bmp280_stop
  4284  0B1A                     _bmp280_stop:
  4285  0B1A                     l1259:	
  4286                           ;incstack = 0
  4287                           ; Regs used in _bmp280_stop: [status,2+status,0+pclath+cstack]
  4288                           
  4289                           
  4290                           ;./p03a_bmp280.h: 28:     PEN=1;
  4291  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  4292  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  4293  0B1C  1511               	bsf	17,2	;volatile
  4294  0B1D                     l1261:
  4295                           
  4296                           ;./p03a_bmp280.h: 29:     waitmssp();
  4297  0B1D  120A  158A  2301  120A  158A  	fcall	_waitmssp
  4298  0B22                     l55:
  4299  0B22  0008               	return
  4300  0B23                     __end_of_bmp280_stop:
  4301                           
  4302                           	psect	text15
  4303  0B42                     __ptext15:	
  4304 ;; *************** function _bmp280_send *****************
  4305 ;; Defined at:
  4306 ;;		line 53 in file "./p03a_bmp280.h"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  dat             1    wreg     unsigned char 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  dat             1    0[COMMON] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0, pclath, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4320 ;;      Params:         0       0       0       0       0
  4321 ;;      Locals:         1       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0
  4323 ;;      Totals:         1       0       0       0       0
  4324 ;;Total ram usage:        1 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 1
  4327 ;; This function calls:
  4328 ;;		_waitmssp
  4329 ;; This function is called by:
  4330 ;;		_bmp280_send_byte
  4331 ;;		_bmp280_read_byte
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           
  4336                           ;psect for function _bmp280_send
  4337  0B42                     _bmp280_send:
  4338                           
  4339                           ;incstack = 0
  4340                           ; Regs used in _bmp280_send: [wreg+status,2+status,0+pclath+cstack]
  4341                           ;bmp280_send@dat stored from wreg
  4342  0B42  00F0               	movwf	bmp280_send@dat
  4343  0B43                     l73:	
  4344                           ;./p03a_bmp280.h: 53: void bmp280_send(unsigned char dat);./p03a_bmp280.h: 54: {;./p03a_
      +                          bmp280.h: 55: L1: SSPBUF=dat;
  4345                           
  4346  0B43                     l1271:
  4347  0B43  0870               	movf	bmp280_send@dat,w
  4348  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  4349  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  4350  0B46  0093               	movwf	19	;volatile
  4351  0B47                     l1273:
  4352                           
  4353                           ;./p03a_bmp280.h: 56:     waitmssp();
  4354  0B47  120A  158A  2301  120A  158A  	fcall	_waitmssp
  4355  0B4C                     l74:	
  4356                           ;./p03a_bmp280.h: 57:     while(ACKSTAT){bmp280_restart;goto L1;}
  4357                           
  4358  0B4C  1683               	bsf	3,5	;RP0=1, select bank1
  4359  0B4D  1303               	bcf	3,6	;RP1=0, select bank1
  4360  0B4E  1B11               	btfsc	17,6	;volatile
  4361  0B4F  2B51               	goto	u881
  4362  0B50  2B52               	goto	u880
  4363  0B51                     u881:
  4364  0B51  2B43               	goto	l73
  4365  0B52                     u880:
  4366  0B52                     l77:
  4367  0B52  0008               	return
  4368  0B53                     __end_of_bmp280_send:
  4369                           
  4370                           	psect	text16
  4371  0B11                     __ptext16:	
  4372 ;; *************** function _bmp280_restart *****************
  4373 ;; Defined at:
  4374 ;;		line 31 in file "./p03a_bmp280.h"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		status,2, status,0, pclath, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4388 ;;      Params:         0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 1
  4395 ;; This function calls:
  4396 ;;		_waitmssp
  4397 ;; This function is called by:
  4398 ;;		_bmp280_read_byte
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           
  4403                           ;psect for function _bmp280_restart
  4404  0B11                     _bmp280_restart:
  4405  0B11                     l1263:	
  4406                           ;incstack = 0
  4407                           ; Regs used in _bmp280_restart: [status,2+status,0+pclath+cstack]
  4408                           
  4409                           
  4410                           ;./p03a_bmp280.h: 33:     RSEN=1;
  4411  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  4412  0B12  1303               	bcf	3,6	;RP1=0, select bank1
  4413  0B13  1491               	bsf	17,1	;volatile
  4414  0B14                     l1265:
  4415                           
  4416                           ;./p03a_bmp280.h: 34:     waitmssp();
  4417  0B14  120A  158A  2301  120A  158A  	fcall	_waitmssp
  4418  0B19                     l58:
  4419  0B19  0008               	return
  4420  0B1A                     __end_of_bmp280_restart:
  4421                           
  4422                           	psect	text17
  4423  0B36                     __ptext17:	
  4424 ;; *************** function _bmp280_read *****************
  4425 ;; Defined at:
  4426 ;;		line 67 in file "./p03a_bmp280.h"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      unsigned char 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, pclath, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4440 ;;      Params:         0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0
  4443 ;;      Totals:         0       0       0       0       0
  4444 ;;Total ram usage:        0 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 1
  4447 ;; This function calls:
  4448 ;;		_waitmssp
  4449 ;; This function is called by:
  4450 ;;		_bmp280_read_byte
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           
  4455                           ;psect for function _bmp280_read
  4456  0B36                     _bmp280_read:
  4457  0B36                     l1275:	
  4458                           ;incstack = 0
  4459                           ; Regs used in _bmp280_read: [wreg+status,2+status,0+pclath+cstack]
  4460                           
  4461                           
  4462                           ;./p03a_bmp280.h: 69:     RCEN=1;
  4463  0B36  1683               	bsf	3,5	;RP0=1, select bank1
  4464  0B37  1303               	bcf	3,6	;RP1=0, select bank1
  4465  0B38  1591               	bsf	17,3	;volatile
  4466  0B39                     l1277:
  4467                           
  4468                           ;./p03a_bmp280.h: 70:     waitmssp();
  4469  0B39  120A  158A  2301  120A  158A  	fcall	_waitmssp
  4470  0B3E                     l1279:
  4471                           
  4472                           ;./p03a_bmp280.h: 71:     return SSPBUF;
  4473  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  4474  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  4475  0B40  0813               	movf	19,w	;volatile
  4476  0B41                     l83:
  4477  0B41  0008               	return
  4478  0B42                     __end_of_bmp280_read:
  4479                           
  4480                           	psect	text18
  4481  0B2C                     __ptext18:	
  4482 ;; *************** function _bmp280_nak *****************
  4483 ;; Defined at:
  4484 ;;		line 42 in file "./p03a_bmp280.h"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		status,2, status,0, pclath, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4498 ;;      Params:         0       0       0       0       0
  4499 ;;      Locals:         0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0
  4501 ;;      Totals:         0       0       0       0       0
  4502 ;;Total ram usage:        0 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 1
  4505 ;; This function calls:
  4506 ;;		_waitmssp
  4507 ;; This function is called by:
  4508 ;;		_bmp280_read_byte
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           
  4513                           ;psect for function _bmp280_nak
  4514  0B2C                     _bmp280_nak:
  4515  0B2C                     l1267:	
  4516                           ;incstack = 0
  4517                           ; Regs used in _bmp280_nak: [status,2+status,0+pclath+cstack]
  4518                           
  4519                           
  4520                           ;./p03a_bmp280.h: 44:     ACKDT=1;
  4521  0B2C  1683               	bsf	3,5	;RP0=1, select bank1
  4522  0B2D  1303               	bcf	3,6	;RP1=0, select bank1
  4523  0B2E  1691               	bsf	17,5	;volatile
  4524                           
  4525                           ;./p03a_bmp280.h: 45:     ACKEN=1;
  4526  0B2F  1611               	bsf	17,4	;volatile
  4527  0B30                     l1269:
  4528                           
  4529                           ;./p03a_bmp280.h: 46:     waitmssp();
  4530  0B30  120A  158A  2301  120A  158A  	fcall	_waitmssp
  4531  0B35                     l64:
  4532  0B35  0008               	return
  4533  0B36                     __end_of_bmp280_nak:
  4534                           
  4535                           	psect	text19
  4536  0B01                     __ptext19:	
  4537 ;; *************** function _waitmssp *****************
  4538 ;; Defined at:
  4539 ;;		line 48 in file "./p03a_bmp280.h"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		None
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4553 ;;      Params:         0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_bmp280_start
  4563 ;;		_bmp280_stop
  4564 ;;		_bmp280_restart
  4565 ;;		_bmp280_nak
  4566 ;;		_bmp280_send
  4567 ;;		_bmp280_read
  4568 ;;		_bmp280_read_byte
  4569 ;;		_bmp280_ack
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           
  4574                           ;psect for function _waitmssp
  4575  0B01                     _waitmssp:
  4576  0B01                     l1253:	
  4577                           ;incstack = 0
  4578                           ; Regs used in _waitmssp: []
  4579                           
  4580  0B01                     l67:	
  4581                           ;./p03a_bmp280.h: 50:     while(!SSPIF);
  4582                           
  4583  0B01  1283               	bcf	3,5	;RP0=0, select bank0
  4584  0B02  1303               	bcf	3,6	;RP1=0, select bank0
  4585  0B03  1D8C               	btfss	12,3	;volatile
  4586  0B04  2B06               	goto	u871
  4587  0B05  2B07               	goto	u870
  4588  0B06                     u871:
  4589  0B06  2B01               	goto	l67
  4590  0B07                     u870:
  4591  0B07                     l69:
  4592                           
  4593                           ;./p03a_bmp280.h: 51:     SSPIF=0;
  4594  0B07  118C               	bcf	12,3	;volatile
  4595  0B08                     l70:
  4596  0B08  0008               	return
  4597  0B09                     __end_of_waitmssp:
  4598                           
  4599                           	psect	text20
  4600  0CFE                     __ptext20:	
  4601 ;; *************** function ___lmul *****************
  4602 ;; Defined at:
  4603 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  multiplier      4    0[COMMON] unsigned long 
  4606 ;;  multiplicand    4    4[COMMON] unsigned long 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  product         4    9[COMMON] unsigned long 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  4    0[COMMON] unsigned long 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4618 ;;      Params:         8       0       0       0       0
  4619 ;;      Locals:         4       0       0       0       0
  4620 ;;      Temps:          1       0       0       0       0
  4621 ;;      Totals:        13       0       0       0       0
  4622 ;;Total ram usage:       13 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_main
  4628 ;;		_LCD_num
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           
  4633                           ;psect for function ___lmul
  4634  0CFE                     ___lmul:
  4635  0CFE                     l1571:	
  4636                           ;incstack = 0
  4637                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4638                           
  4639  0CFE  3000               	movlw	0
  4640  0CFF  00FC               	movwf	___lmul@product+3
  4641  0D00  3000               	movlw	0
  4642  0D01  00FB               	movwf	___lmul@product+2
  4643  0D02  3000               	movlw	0
  4644  0D03  00FA               	movwf	___lmul@product+1
  4645  0D04  3000               	movlw	0
  4646  0D05  00F9               	movwf	___lmul@product
  4647  0D06                     l1573:
  4648  0D06  1C70               	btfss	___lmul@multiplier,0
  4649  0D07  2D09               	goto	u1401
  4650  0D08  2D0A               	goto	u1400
  4651  0D09                     u1401:
  4652  0D09  2D21               	goto	l1577
  4653  0D0A                     u1400:
  4654  0D0A                     l1575:
  4655  0D0A  0874               	movf	___lmul@multiplicand,w
  4656  0D0B  07F9               	addwf	___lmul@product,f
  4657  0D0C  0875               	movf	___lmul@multiplicand+1,w
  4658  0D0D  1103               	clrz
  4659  0D0E  1803               	skipnc
  4660  0D0F  3E01               	addlw	1
  4661  0D10  1903               	skipnz
  4662  0D11  2D13               	goto	u1411
  4663  0D12  07FA               	addwf	___lmul@product+1,f
  4664  0D13                     u1411:
  4665  0D13  0876               	movf	___lmul@multiplicand+2,w
  4666  0D14  1103               	clrz
  4667  0D15  1803               	skipnc
  4668  0D16  3E01               	addlw	1
  4669  0D17  1903               	skipnz
  4670  0D18  2D1A               	goto	u1412
  4671  0D19  07FB               	addwf	___lmul@product+2,f
  4672  0D1A                     u1412:
  4673  0D1A  0877               	movf	___lmul@multiplicand+3,w
  4674  0D1B  1103               	clrz
  4675  0D1C  1803               	skipnc
  4676  0D1D  3E01               	addlw	1
  4677  0D1E  1903               	skipnz
  4678  0D1F  2D21               	goto	u1413
  4679  0D20  07FC               	addwf	___lmul@product+3,f
  4680  0D21                     u1413:
  4681  0D21                     l1577:
  4682  0D21  3001               	movlw	1
  4683  0D22  00F8               	movwf	??___lmul
  4684  0D23                     u1425:
  4685  0D23  1003               	clrc
  4686  0D24  0DF4               	rlf	___lmul@multiplicand,f
  4687  0D25  0DF5               	rlf	___lmul@multiplicand+1,f
  4688  0D26  0DF6               	rlf	___lmul@multiplicand+2,f
  4689  0D27  0DF7               	rlf	___lmul@multiplicand+3,f
  4690  0D28  0BF8               	decfsz	??___lmul,f
  4691  0D29  2D23               	goto	u1425
  4692  0D2A                     l1579:
  4693  0D2A  3001               	movlw	1
  4694  0D2B                     u1435:
  4695  0D2B  1003               	clrc
  4696  0D2C  0CF3               	rrf	___lmul@multiplier+3,f
  4697  0D2D  0CF2               	rrf	___lmul@multiplier+2,f
  4698  0D2E  0CF1               	rrf	___lmul@multiplier+1,f
  4699  0D2F  0CF0               	rrf	___lmul@multiplier,f
  4700  0D30  3EFF               	addlw	-1
  4701  0D31  1D03               	skipz
  4702  0D32  2D2B               	goto	u1435
  4703  0D33  0873               	movf	___lmul@multiplier+3,w
  4704  0D34  0472               	iorwf	___lmul@multiplier+2,w
  4705  0D35  0471               	iorwf	___lmul@multiplier+1,w
  4706  0D36  0470               	iorwf	___lmul@multiplier,w
  4707  0D37  1D03               	skipz
  4708  0D38  2D3A               	goto	u1441
  4709  0D39  2D3B               	goto	u1440
  4710  0D3A                     u1441:
  4711  0D3A  2D06               	goto	l1573
  4712  0D3B                     u1440:
  4713  0D3B                     l1581:
  4714  0D3B  087C               	movf	___lmul@product+3,w
  4715  0D3C  00F3               	movwf	?___lmul+3
  4716  0D3D  087B               	movf	___lmul@product+2,w
  4717  0D3E  00F2               	movwf	?___lmul+2
  4718  0D3F  087A               	movf	___lmul@product+1,w
  4719  0D40  00F1               	movwf	?___lmul+1
  4720  0D41  0879               	movf	___lmul@product,w
  4721  0D42  00F0               	movwf	?___lmul
  4722  0D43                     l287:
  4723  0D43  0008               	return
  4724  0D44                     __end_of___lmul:
  4725                           
  4726                           	psect	text21
  4727  0D9D                     __ptext21:	
  4728 ;; *************** function ___lldiv *****************
  4729 ;; Defined at:
  4730 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  divisor         4    0[COMMON] unsigned long 
  4733 ;;  dividend        4    4[COMMON] unsigned long 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  quotient        4    9[COMMON] unsigned long 
  4736 ;;  counter         1   13[COMMON] unsigned char 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  4    0[COMMON] unsigned long 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4746 ;;      Params:         8       0       0       0       0
  4747 ;;      Locals:         5       0       0       0       0
  4748 ;;      Temps:          1       0       0       0       0
  4749 ;;      Totals:        14       0       0       0       0
  4750 ;;Total ram usage:       14 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_main
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           
  4760                           ;psect for function ___lldiv
  4761  0D9D                     ___lldiv:
  4762  0D9D                     l1585:	
  4763                           ;incstack = 0
  4764                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4765                           
  4766  0D9D  3000               	movlw	0
  4767  0D9E  00FC               	movwf	___lldiv@quotient+3
  4768  0D9F  3000               	movlw	0
  4769  0DA0  00FB               	movwf	___lldiv@quotient+2
  4770  0DA1  3000               	movlw	0
  4771  0DA2  00FA               	movwf	___lldiv@quotient+1
  4772  0DA3  3000               	movlw	0
  4773  0DA4  00F9               	movwf	___lldiv@quotient
  4774  0DA5  0873               	movf	___lldiv@divisor+3,w
  4775  0DA6  0472               	iorwf	___lldiv@divisor+2,w
  4776  0DA7  0471               	iorwf	___lldiv@divisor+1,w
  4777  0DA8  0470               	iorwf	___lldiv@divisor,w
  4778  0DA9  1903               	skipnz
  4779  0DAA  2DAC               	goto	u1451
  4780  0DAB  2DAD               	goto	u1450
  4781  0DAC                     u1451:
  4782  0DAC  2DFA               	goto	l1605
  4783  0DAD                     u1450:
  4784  0DAD                     l1587:
  4785  0DAD  01FD               	clrf	___lldiv@counter
  4786  0DAE  0AFD               	incf	___lldiv@counter,f
  4787  0DAF  2DBD               	goto	l1591
  4788  0DB0                     l1589:
  4789  0DB0  3001               	movlw	1
  4790  0DB1  00F8               	movwf	??___lldiv
  4791  0DB2                     u1465:
  4792  0DB2  1003               	clrc
  4793  0DB3  0DF0               	rlf	___lldiv@divisor,f
  4794  0DB4  0DF1               	rlf	___lldiv@divisor+1,f
  4795  0DB5  0DF2               	rlf	___lldiv@divisor+2,f
  4796  0DB6  0DF3               	rlf	___lldiv@divisor+3,f
  4797  0DB7  0BF8               	decfsz	??___lldiv,f
  4798  0DB8  2DB2               	goto	u1465
  4799  0DB9  3001               	movlw	1
  4800  0DBA  00F8               	movwf	??___lldiv
  4801  0DBB  0878               	movf	??___lldiv,w
  4802  0DBC  07FD               	addwf	___lldiv@counter,f
  4803  0DBD                     l1591:
  4804  0DBD  1FF3               	btfss	___lldiv@divisor+3,7
  4805  0DBE  2DC0               	goto	u1471
  4806  0DBF  2DC1               	goto	u1470
  4807  0DC0                     u1471:
  4808  0DC0  2DB0               	goto	l1589
  4809  0DC1                     u1470:
  4810  0DC1                     l1593:
  4811  0DC1  3001               	movlw	1
  4812  0DC2  00F8               	movwf	??___lldiv
  4813  0DC3                     u1485:
  4814  0DC3  1003               	clrc
  4815  0DC4  0DF9               	rlf	___lldiv@quotient,f
  4816  0DC5  0DFA               	rlf	___lldiv@quotient+1,f
  4817  0DC6  0DFB               	rlf	___lldiv@quotient+2,f
  4818  0DC7  0DFC               	rlf	___lldiv@quotient+3,f
  4819  0DC8  0BF8               	decfsz	??___lldiv,f
  4820  0DC9  2DC3               	goto	u1485
  4821  0DCA                     l1595:
  4822  0DCA  0873               	movf	___lldiv@divisor+3,w
  4823  0DCB  0277               	subwf	___lldiv@dividend+3,w
  4824  0DCC  1D03               	skipz
  4825  0DCD  2DD8               	goto	u1495
  4826  0DCE  0872               	movf	___lldiv@divisor+2,w
  4827  0DCF  0276               	subwf	___lldiv@dividend+2,w
  4828  0DD0  1D03               	skipz
  4829  0DD1  2DD8               	goto	u1495
  4830  0DD2  0871               	movf	___lldiv@divisor+1,w
  4831  0DD3  0275               	subwf	___lldiv@dividend+1,w
  4832  0DD4  1D03               	skipz
  4833  0DD5  2DD8               	goto	u1495
  4834  0DD6  0870               	movf	___lldiv@divisor,w
  4835  0DD7  0274               	subwf	___lldiv@dividend,w
  4836  0DD8                     u1495:
  4837  0DD8  1C03               	skipc
  4838  0DD9  2DDB               	goto	u1491
  4839  0DDA  2DDC               	goto	u1490
  4840  0DDB                     u1491:
  4841  0DDB  2DEB               	goto	l1601
  4842  0DDC                     u1490:
  4843  0DDC                     l1597:
  4844  0DDC  0870               	movf	___lldiv@divisor,w
  4845  0DDD  02F4               	subwf	___lldiv@dividend,f
  4846  0DDE  0871               	movf	___lldiv@divisor+1,w
  4847  0DDF  1C03               	skipc
  4848  0DE0  0F71               	incfsz	___lldiv@divisor+1,w
  4849  0DE1  02F5               	subwf	___lldiv@dividend+1,f
  4850  0DE2  0872               	movf	___lldiv@divisor+2,w
  4851  0DE3  1C03               	skipc
  4852  0DE4  0F72               	incfsz	___lldiv@divisor+2,w
  4853  0DE5  02F6               	subwf	___lldiv@dividend+2,f
  4854  0DE6  0873               	movf	___lldiv@divisor+3,w
  4855  0DE7  1C03               	skipc
  4856  0DE8  0F73               	incfsz	___lldiv@divisor+3,w
  4857  0DE9  02F7               	subwf	___lldiv@dividend+3,f
  4858  0DEA                     l1599:
  4859  0DEA  1479               	bsf	___lldiv@quotient,0
  4860  0DEB                     l1601:
  4861  0DEB  3001               	movlw	1
  4862  0DEC                     u1505:
  4863  0DEC  1003               	clrc
  4864  0DED  0CF3               	rrf	___lldiv@divisor+3,f
  4865  0DEE  0CF2               	rrf	___lldiv@divisor+2,f
  4866  0DEF  0CF1               	rrf	___lldiv@divisor+1,f
  4867  0DF0  0CF0               	rrf	___lldiv@divisor,f
  4868  0DF1  3EFF               	addlw	-1
  4869  0DF2  1D03               	skipz
  4870  0DF3  2DEC               	goto	u1505
  4871  0DF4                     l1603:
  4872  0DF4  3001               	movlw	1
  4873  0DF5  02FD               	subwf	___lldiv@counter,f
  4874  0DF6  1D03               	btfss	3,2
  4875  0DF7  2DF9               	goto	u1511
  4876  0DF8  2DFA               	goto	u1510
  4877  0DF9                     u1511:
  4878  0DF9  2DC1               	goto	l1593
  4879  0DFA                     u1510:
  4880  0DFA                     l1605:
  4881  0DFA  087C               	movf	___lldiv@quotient+3,w
  4882  0DFB  00F3               	movwf	?___lldiv+3
  4883  0DFC  087B               	movf	___lldiv@quotient+2,w
  4884  0DFD  00F2               	movwf	?___lldiv+2
  4885  0DFE  087A               	movf	___lldiv@quotient+1,w
  4886  0DFF  00F1               	movwf	?___lldiv+1
  4887  0E00  0879               	movf	___lldiv@quotient,w
  4888  0E01  00F0               	movwf	?___lldiv
  4889  0E02                     l309:
  4890  0E02  0008               	return
  4891  0E03                     __end_of___lldiv:
  4892                           
  4893                           	psect	text22
  4894  001D                     __ptext22:	
  4895 ;; *************** function ___aldiv *****************
  4896 ;; Defined at:
  4897 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  divisor         4    0[BANK0 ] long 
  4900 ;;  dividend        4    4[BANK0 ] long 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  quotient        4   10[BANK0 ] long 
  4903 ;;  sign            1    9[BANK0 ] unsigned char 
  4904 ;;  counter         1    8[BANK0 ] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  4    0[BANK0 ] long 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       8       0       0       0
  4915 ;;      Locals:         0       6       0       0       0
  4916 ;;      Temps:          1       0       0       0       0
  4917 ;;      Totals:         1      14       0       0       0
  4918 ;;Total ram usage:       15 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_main
  4924 ;;		_LCD_num
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function ___aldiv
  4930  001D                     ___aldiv:
  4931  001D                     l1609:	
  4932                           ;incstack = 0
  4933                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4934                           
  4935  001D  1283               	bcf	3,5	;RP0=0, select bank0
  4936  001E  1303               	bcf	3,6	;RP1=0, select bank0
  4937  001F  01A9               	clrf	___aldiv@sign
  4938  0020                     l1611:
  4939  0020  1FA3               	btfss	___aldiv@divisor+3,7
  4940  0021  2823               	goto	u1521
  4941  0022  2824               	goto	u1520
  4942  0023                     u1521:
  4943  0023  2831               	goto	l338
  4944  0024                     u1520:
  4945  0024                     l1613:
  4946  0024  09A0               	comf	___aldiv@divisor,f
  4947  0025  09A1               	comf	___aldiv@divisor+1,f
  4948  0026  09A2               	comf	___aldiv@divisor+2,f
  4949  0027  09A3               	comf	___aldiv@divisor+3,f
  4950  0028  0AA0               	incf	___aldiv@divisor,f
  4951  0029  1903               	skipnz
  4952  002A  0AA1               	incf	___aldiv@divisor+1,f
  4953  002B  1903               	skipnz
  4954  002C  0AA2               	incf	___aldiv@divisor+2,f
  4955  002D  1903               	skipnz
  4956  002E  0AA3               	incf	___aldiv@divisor+3,f
  4957  002F  01A9               	clrf	___aldiv@sign
  4958  0030  0AA9               	incf	___aldiv@sign,f
  4959  0031                     l338:
  4960  0031  1FA7               	btfss	___aldiv@dividend+3,7
  4961  0032  2834               	goto	u1531
  4962  0033  2835               	goto	u1530
  4963  0034                     u1531:
  4964  0034  2844               	goto	l1619
  4965  0035                     u1530:
  4966  0035                     l1615:
  4967  0035  09A4               	comf	___aldiv@dividend,f
  4968  0036  09A5               	comf	___aldiv@dividend+1,f
  4969  0037  09A6               	comf	___aldiv@dividend+2,f
  4970  0038  09A7               	comf	___aldiv@dividend+3,f
  4971  0039  0AA4               	incf	___aldiv@dividend,f
  4972  003A  1903               	skipnz
  4973  003B  0AA5               	incf	___aldiv@dividend+1,f
  4974  003C  1903               	skipnz
  4975  003D  0AA6               	incf	___aldiv@dividend+2,f
  4976  003E  1903               	skipnz
  4977  003F  0AA7               	incf	___aldiv@dividend+3,f
  4978  0040                     l1617:
  4979  0040  3001               	movlw	1
  4980  0041  00FD               	movwf	??___aldiv
  4981  0042  087D               	movf	??___aldiv,w
  4982  0043  06A9               	xorwf	___aldiv@sign,f
  4983  0044                     l1619:
  4984  0044  3000               	movlw	0
  4985  0045  00AD               	movwf	___aldiv@quotient+3
  4986  0046  3000               	movlw	0
  4987  0047  00AC               	movwf	___aldiv@quotient+2
  4988  0048  3000               	movlw	0
  4989  0049  00AB               	movwf	___aldiv@quotient+1
  4990  004A  3000               	movlw	0
  4991  004B  00AA               	movwf	___aldiv@quotient
  4992  004C                     l1621:
  4993  004C  0823               	movf	___aldiv@divisor+3,w
  4994  004D  0422               	iorwf	___aldiv@divisor+2,w
  4995  004E  0421               	iorwf	___aldiv@divisor+1,w
  4996  004F  0420               	iorwf	___aldiv@divisor,w
  4997  0050  1903               	skipnz
  4998  0051  2853               	goto	u1541
  4999  0052  2854               	goto	u1540
  5000  0053                     u1541:
  5001  0053  28A1               	goto	l1641
  5002  0054                     u1540:
  5003  0054                     l1623:
  5004  0054  01A8               	clrf	___aldiv@counter
  5005  0055  0AA8               	incf	___aldiv@counter,f
  5006  0056  2864               	goto	l1627
  5007  0057                     l1625:
  5008  0057  3001               	movlw	1
  5009  0058  00FD               	movwf	??___aldiv
  5010  0059                     u1555:
  5011  0059  1003               	clrc
  5012  005A  0DA0               	rlf	___aldiv@divisor,f
  5013  005B  0DA1               	rlf	___aldiv@divisor+1,f
  5014  005C  0DA2               	rlf	___aldiv@divisor+2,f
  5015  005D  0DA3               	rlf	___aldiv@divisor+3,f
  5016  005E  0BFD               	decfsz	??___aldiv,f
  5017  005F  2859               	goto	u1555
  5018  0060  3001               	movlw	1
  5019  0061  00FD               	movwf	??___aldiv
  5020  0062  087D               	movf	??___aldiv,w
  5021  0063  07A8               	addwf	___aldiv@counter,f
  5022  0064                     l1627:
  5023  0064  1FA3               	btfss	___aldiv@divisor+3,7
  5024  0065  2867               	goto	u1561
  5025  0066  2868               	goto	u1560
  5026  0067                     u1561:
  5027  0067  2857               	goto	l1625
  5028  0068                     u1560:
  5029  0068                     l1629:
  5030  0068  3001               	movlw	1
  5031  0069  00FD               	movwf	??___aldiv
  5032  006A                     u1575:
  5033  006A  1003               	clrc
  5034  006B  0DAA               	rlf	___aldiv@quotient,f
  5035  006C  0DAB               	rlf	___aldiv@quotient+1,f
  5036  006D  0DAC               	rlf	___aldiv@quotient+2,f
  5037  006E  0DAD               	rlf	___aldiv@quotient+3,f
  5038  006F  0BFD               	decfsz	??___aldiv,f
  5039  0070  286A               	goto	u1575
  5040  0071                     l1631:
  5041  0071  0823               	movf	___aldiv@divisor+3,w
  5042  0072  0227               	subwf	___aldiv@dividend+3,w
  5043  0073  1D03               	skipz
  5044  0074  287F               	goto	u1585
  5045  0075  0822               	movf	___aldiv@divisor+2,w
  5046  0076  0226               	subwf	___aldiv@dividend+2,w
  5047  0077  1D03               	skipz
  5048  0078  287F               	goto	u1585
  5049  0079  0821               	movf	___aldiv@divisor+1,w
  5050  007A  0225               	subwf	___aldiv@dividend+1,w
  5051  007B  1D03               	skipz
  5052  007C  287F               	goto	u1585
  5053  007D  0820               	movf	___aldiv@divisor,w
  5054  007E  0224               	subwf	___aldiv@dividend,w
  5055  007F                     u1585:
  5056  007F  1C03               	skipc
  5057  0080  2882               	goto	u1581
  5058  0081  2883               	goto	u1580
  5059  0082                     u1581:
  5060  0082  2892               	goto	l1637
  5061  0083                     u1580:
  5062  0083                     l1633:
  5063  0083  0820               	movf	___aldiv@divisor,w
  5064  0084  02A4               	subwf	___aldiv@dividend,f
  5065  0085  0821               	movf	___aldiv@divisor+1,w
  5066  0086  1C03               	skipc
  5067  0087  0F21               	incfsz	___aldiv@divisor+1,w
  5068  0088  02A5               	subwf	___aldiv@dividend+1,f
  5069  0089  0822               	movf	___aldiv@divisor+2,w
  5070  008A  1C03               	skipc
  5071  008B  0F22               	incfsz	___aldiv@divisor+2,w
  5072  008C  02A6               	subwf	___aldiv@dividend+2,f
  5073  008D  0823               	movf	___aldiv@divisor+3,w
  5074  008E  1C03               	skipc
  5075  008F  0F23               	incfsz	___aldiv@divisor+3,w
  5076  0090  02A7               	subwf	___aldiv@dividend+3,f
  5077  0091                     l1635:
  5078  0091  142A               	bsf	___aldiv@quotient,0
  5079  0092                     l1637:
  5080  0092  3001               	movlw	1
  5081  0093                     u1595:
  5082  0093  1003               	clrc
  5083  0094  0CA3               	rrf	___aldiv@divisor+3,f
  5084  0095  0CA2               	rrf	___aldiv@divisor+2,f
  5085  0096  0CA1               	rrf	___aldiv@divisor+1,f
  5086  0097  0CA0               	rrf	___aldiv@divisor,f
  5087  0098  3EFF               	addlw	-1
  5088  0099  1D03               	skipz
  5089  009A  2893               	goto	u1595
  5090  009B                     l1639:
  5091  009B  3001               	movlw	1
  5092  009C  02A8               	subwf	___aldiv@counter,f
  5093  009D  1D03               	btfss	3,2
  5094  009E  28A0               	goto	u1601
  5095  009F  28A1               	goto	u1600
  5096  00A0                     u1601:
  5097  00A0  2868               	goto	l1629
  5098  00A1                     u1600:
  5099  00A1                     l1641:
  5100  00A1  0829               	movf	___aldiv@sign,w
  5101  00A2  1903               	btfsc	3,2
  5102  00A3  28A5               	goto	u1611
  5103  00A4  28A6               	goto	u1610
  5104  00A5                     u1611:
  5105  00A5  28B1               	goto	l1645
  5106  00A6                     u1610:
  5107  00A6                     l1643:
  5108  00A6  09AA               	comf	___aldiv@quotient,f
  5109  00A7  09AB               	comf	___aldiv@quotient+1,f
  5110  00A8  09AC               	comf	___aldiv@quotient+2,f
  5111  00A9  09AD               	comf	___aldiv@quotient+3,f
  5112  00AA  0AAA               	incf	___aldiv@quotient,f
  5113  00AB  1903               	skipnz
  5114  00AC  0AAB               	incf	___aldiv@quotient+1,f
  5115  00AD  1903               	skipnz
  5116  00AE  0AAC               	incf	___aldiv@quotient+2,f
  5117  00AF  1903               	skipnz
  5118  00B0  0AAD               	incf	___aldiv@quotient+3,f
  5119  00B1                     l1645:
  5120  00B1  082D               	movf	___aldiv@quotient+3,w
  5121  00B2  00A3               	movwf	?___aldiv+3
  5122  00B3  082C               	movf	___aldiv@quotient+2,w
  5123  00B4  00A2               	movwf	?___aldiv+2
  5124  00B5  082B               	movf	___aldiv@quotient+1,w
  5125  00B6  00A1               	movwf	?___aldiv+1
  5126  00B7  082A               	movf	___aldiv@quotient,w
  5127  00B8  00A0               	movwf	?___aldiv
  5128  00B9                     l348:
  5129  00B9  0008               	return
  5130  00BA                     __end_of___aldiv:
  5131                           
  5132                           	psect	text23
  5133  0B90                     __ptext23:	
  5134 ;; *************** function _LCD_init *****************
  5135 ;; Defined at:
  5136 ;;		line 41 in file "./lcd4bit.h"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0, pclath, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5150 ;;      Params:         0       0       0       0       0
  5151 ;;      Locals:         0       0       0       0       0
  5152 ;;      Temps:          2       0       0       0       0
  5153 ;;      Totals:         2       0       0       0       0
  5154 ;;Total ram usage:        2 bytes
  5155 ;; Hardware stack levels used: 1
  5156 ;; Hardware stack levels required when called: 1
  5157 ;; This function calls:
  5158 ;;		_LCD_Command
  5159 ;; This function is called by:
  5160 ;;		_main
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function _LCD_init
  5166  0B90                     _LCD_init:
  5167  0B90                     l1483:	
  5168                           ;incstack = 0
  5169                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  5170                           
  5171                           
  5172                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  5173  0B90  1683               	bsf	3,5	;RP0=1, select bank1
  5174  0B91  1303               	bcf	3,6	;RP1=0, select bank1
  5175  0B92  1386               	bcf	6,7	;volatile
  5176                           
  5177                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  5178  0B93  1306               	bcf	6,6	;volatile
  5179                           
  5180                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  5181  0B94  1286               	bcf	6,5	;volatile
  5182                           
  5183                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  5184  0B95  1206               	bcf	6,4	;volatile
  5185                           
  5186                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  5187  0B96  1007               	bcf	7,0	;volatile
  5188                           
  5189                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  5190  0B97  1087               	bcf	7,1	;volatile
  5191  0B98                     l1485:
  5192                           
  5193                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  5194  0B98  3002               	movlw	2
  5195  0B99  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5196                           
  5197                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  5198  0B9E  3028               	movlw	40
  5199  0B9F  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5200                           
  5201                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  5202  0BA4  3080               	movlw	128
  5203  0BA5  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5204                           
  5205                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  5206  0BAA  300C               	movlw	12
  5207  0BAB  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5208                           
  5209                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  5210  0BB0  3006               	movlw	6
  5211  0BB1  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5212                           
  5213                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  5214  0BB6  3001               	movlw	1
  5215  0BB7  120A  158A  243A  120A  158A  	fcall	_LCD_Command
  5216  0BBC                     l1487:
  5217                           
  5218                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5219  0BBC  3041               	movlw	65
  5220  0BBD  00F4               	movwf	??_LCD_init+1
  5221  0BBE  30EE               	movlw	238
  5222  0BBF  00F3               	movwf	??_LCD_init
  5223  0BC0                     u1797:
  5224  0BC0  0BF3               	decfsz	??_LCD_init,f
  5225  0BC1  2BC0               	goto	u1797
  5226  0BC2  0BF4               	decfsz	??_LCD_init+1,f
  5227  0BC3  2BC0               	goto	u1797
  5228  0BC4  0000               	nop
  5229  0BC5                     l101:
  5230  0BC5  0008               	return
  5231  0BC6                     __end_of_LCD_init:
  5232                           
  5233                           	psect	text24
  5234  0C3A                     __ptext24:	
  5235 ;; *************** function _LCD_Command *****************
  5236 ;; Defined at:
  5237 ;;		line 13 in file "./lcd4bit.h"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  cmnd            1    wreg     unsigned char 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  cmnd            1    2[COMMON] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5251 ;;      Params:         0       0       0       0       0
  5252 ;;      Locals:         1       0       0       0       0
  5253 ;;      Temps:          2       0       0       0       0
  5254 ;;      Totals:         3       0       0       0       0
  5255 ;;Total ram usage:        3 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_LCD_init
  5261 ;;		_main
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           
  5266                           ;psect for function _LCD_Command
  5267  0C3A                     _LCD_Command:
  5268                           
  5269                           ;incstack = 0
  5270                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  5271                           ;LCD_Command@cmnd stored from wreg
  5272  0C3A  00F2               	movwf	LCD_Command@cmnd
  5273  0C3B                     l1313:
  5274                           
  5275                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  5276  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  5277  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  5278  0C3D  1007               	bcf	7,0	;volatile
  5279  0C3E                     l1315:
  5280                           
  5281                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  5282  0C3E  0872               	movf	LCD_Command@cmnd,w
  5283  0C3F  0086               	movwf	6	;volatile
  5284  0C40                     l1317:
  5285                           
  5286                           ;./lcd4bit.h: 17:     RC1 = 1;
  5287  0C40  1487               	bsf	7,1	;volatile
  5288                           
  5289                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5290  0C41  3041               	movlw	65
  5291  0C42  00F1               	movwf	??_LCD_Command+1
  5292  0C43  30EE               	movlw	238
  5293  0C44  00F0               	movwf	??_LCD_Command
  5294  0C45                     u1807:
  5295  0C45  0BF0               	decfsz	??_LCD_Command,f
  5296  0C46  2C45               	goto	u1807
  5297  0C47  0BF1               	decfsz	??_LCD_Command+1,f
  5298  0C48  2C45               	goto	u1807
  5299  0C49  0000               	nop
  5300  0C4A                     l1319:
  5301                           
  5302                           ;./lcd4bit.h: 19:     RC1 = 0;
  5303  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  5304  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  5305  0C4C  1087               	bcf	7,1	;volatile
  5306                           
  5307                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5308  0C4D  3041               	movlw	65
  5309  0C4E  00F1               	movwf	??_LCD_Command+1
  5310  0C4F  30EE               	movlw	238
  5311  0C50  00F0               	movwf	??_LCD_Command
  5312  0C51                     u1817:
  5313  0C51  0BF0               	decfsz	??_LCD_Command,f
  5314  0C52  2C51               	goto	u1817
  5315  0C53  0BF1               	decfsz	??_LCD_Command+1,f
  5316  0C54  2C51               	goto	u1817
  5317  0C55  0000               	nop
  5318  0C56                     l1321:
  5319                           
  5320                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  5321  0C56  0872               	movf	LCD_Command@cmnd,w
  5322  0C57  00F0               	movwf	??_LCD_Command
  5323  0C58  3003               	movlw	3
  5324  0C59                     u905:
  5325  0C59  1003               	clrc
  5326  0C5A  0DF0               	rlf	??_LCD_Command,f
  5327  0C5B  3EFF               	addlw	-1
  5328  0C5C  1D03               	skipz
  5329  0C5D  2C59               	goto	u905
  5330  0C5E  1003               	clrc
  5331  0C5F  0D70               	rlf	??_LCD_Command,w
  5332  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  5333  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  5334  0C62  0086               	movwf	6	;volatile
  5335  0C63                     l1323:
  5336                           
  5337                           ;./lcd4bit.h: 22:     RC1 = 1;
  5338  0C63  1487               	bsf	7,1	;volatile
  5339  0C64                     l1325:
  5340                           
  5341                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5342  0C64  3041               	movlw	65
  5343  0C65  00F1               	movwf	??_LCD_Command+1
  5344  0C66  30EE               	movlw	238
  5345  0C67  00F0               	movwf	??_LCD_Command
  5346  0C68                     u1827:
  5347  0C68  0BF0               	decfsz	??_LCD_Command,f
  5348  0C69  2C68               	goto	u1827
  5349  0C6A  0BF1               	decfsz	??_LCD_Command+1,f
  5350  0C6B  2C68               	goto	u1827
  5351  0C6C  0000               	nop
  5352  0C6D                     l1327:
  5353                           
  5354                           ;./lcd4bit.h: 24:     RC1 = 0;
  5355  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  5356  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  5357  0C6F  1087               	bcf	7,1	;volatile
  5358  0C70                     l1329:
  5359                           
  5360                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5361  0C70  3041               	movlw	65
  5362  0C71  00F1               	movwf	??_LCD_Command+1
  5363  0C72  30EE               	movlw	238
  5364  0C73  00F0               	movwf	??_LCD_Command
  5365  0C74                     u1837:
  5366  0C74  0BF0               	decfsz	??_LCD_Command,f
  5367  0C75  2C74               	goto	u1837
  5368  0C76  0BF1               	decfsz	??_LCD_Command+1,f
  5369  0C77  2C74               	goto	u1837
  5370  0C78  0000               	nop
  5371  0C79                     l95:
  5372  0C79  0008               	return
  5373  0C7A                     __end_of_LCD_Command:
  5374  007E                     btemp	set	126	;btemp
  5375  007E                     wtemp0	set	126
  5376                           
  5377                           	psect	idloc
  5378                           
  5379                           ;Config register IDLOC0 @ 0x2000
  5380                           ;	unspecified, using default values
  5381  2000                     	org	8192
  5382  2000  3FFF               	dw	16383
  5383                           
  5384                           ;Config register IDLOC1 @ 0x2001
  5385                           ;	unspecified, using default values
  5386  2001                     	org	8193
  5387  2001  3FFF               	dw	16383
  5388                           
  5389                           ;Config register IDLOC2 @ 0x2002
  5390                           ;	unspecified, using default values
  5391  2002                     	org	8194
  5392  2002  3FFF               	dw	16383
  5393                           
  5394                           ;Config register IDLOC3 @ 0x2003
  5395                           ;	unspecified, using default values
  5396  2003                     	org	8195
  5397  2003  3FFF               	dw	16383
  5398                           
  5399                           	psect	config
  5400                           
  5401                           ;Config register CONFIG @ 0x2007
  5402                           ;	unspecified, using default values
  5403                           ;	Oscillator Selection bits
  5404                           ;	FOSC = 0x3, unprogrammed default
  5405                           ;	Watchdog Timer Enable bit
  5406                           ;	WDTE = 0x1, unprogrammed default
  5407                           ;	Power-up Timer Enable bit
  5408                           ;	PWRTE = 0x1, unprogrammed default
  5409                           ;	Brown-out Reset Enable bit
  5410                           ;	BOREN = 0x1, unprogrammed default
  5411                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5412                           ;	LVP = 0x1, unprogrammed default
  5413                           ;	Data EEPROM Memory Code Protection bit
  5414                           ;	CPD = 0x1, unprogrammed default
  5415                           ;	Flash Program Memory Write Enable bits
  5416                           ;	WRT = 0x3, unprogrammed default
  5417                           ;	In-Circuit Debugger Mode bit
  5418                           ;	DEBUG = 0x1, unprogrammed default
  5419                           ;	Flash Program Memory Code Protection bit
  5420                           ;	CP = 0x1, unprogrammed default
  5421  2007                     	org	8199
  5422  2007  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        2
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      79
    BANK1            80      0      55
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->___aldiv
    _main->___lldiv
    _uncompensated_pressure->_bmp280_read_byte
    _bmp280_send_byte->_bmp280_send
    _show_multidigits->___awdiv
    _show->_LCD_Char
    _bmp280_getdata->_bmp280_read_byte
    _bmp280_read_byte->_bmp280_send
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_uncompensated_pressure

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    9843
                                             25 BANK0     20    20      0
                        _LCD_Command
                           _LCD_init
                            ___aldiv
                            ___lldiv
                             ___lmul
                     _bmp280_getdata
                        _bmp280_init
                               _show
                   _show_multidigits
             _uncompensated_pressure
 ---------------------------------------------------------------------------------
 (1) _uncompensated_pressure                              25    25      0     278
                                              0 BANK0     25    25      0
                   _bmp280_read_byte
                   _bmp280_send_byte
 ---------------------------------------------------------------------------------
 (2) _bmp280_send_byte                                     2     1      1     142
                                              1 COMMON     2     1      1
                        _bmp280_send
                       _bmp280_start
                        _bmp280_stop
 ---------------------------------------------------------------------------------
 (3) _bmp280_start                                         0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (1) _show_multidigits                                    16    14      2    4257
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     919
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     922
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     122
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bmp280_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bmp280_getdata                                       4     4      0      67
                                              4 COMMON     4     4      0
                   _bmp280_read_byte
 ---------------------------------------------------------------------------------
 (2) _bmp280_read_byte                                     3     3      0      67
                                              1 COMMON     3     3      0
                         _bmp280_nak
                        _bmp280_read
                     _bmp280_restart
                        _bmp280_send
                        _bmp280_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_stop                                          0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_send                                          1     1      0      22
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_restart                                       0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_read                                          0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_nak                                           0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (4) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8    1916
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8    2580
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Command
   _LCD_init
     _LCD_Command
   ___aldiv
     ___lmul (ARG)
   ___lldiv
   ___lmul
   _bmp280_getdata
     _bmp280_read_byte
       _bmp280_nak
         _waitmssp
       _bmp280_read
         _waitmssp
       _bmp280_restart
         _waitmssp
       _bmp280_send
         _waitmssp
       _bmp280_stop
         _waitmssp
       _waitmssp
   _bmp280_init
   _show
     _LCD_Char
   _show_multidigits
     _LCD_Char
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _uncompensated_pressure
     _bmp280_read_byte
     _bmp280_send_byte
       _bmp280_send
       _bmp280_start
         _waitmssp
       _bmp280_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      37       7       68.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2D      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      94      12        0.0%
ABS                  0      0      94       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 08 20:01:05 2022

                              _p 0069                                pc 0002               ??_bmp280_read_byte 0071  
                   ?_LCD_Command 0070                               l52 0B2B                               l70 0B08  
                             l55 0B22                               l64 0B35                               l80 0B70  
                             l73 0B43                               l49 001C                               l58 0B19  
                             l74 0B4C                               l90 0BFF                               l67 0B01  
                             l83 0B41                               l69 0B07                               l77 0B52  
                             l86 0BC7                               l95 0C79                               l87 0BD5  
                             l98 0CB9                               _b0 00B8                               _b1 005D  
                             _b2 00B4                               _b3 00B0                               _b4 00A8  
                             _b5 00AC                               _b6 0059                               _b7 0055  
                   ___awdiv@sign 0076                               _x1 0051                               _x2 004D  
                             _aa 00D0                               _x3 00A0                               _ab 00CC  
                             _ac 00C8                               _ad 00C4                               _ae 00C0  
                             _af 00BC                               _up 00A4                               fsr 0004  
           bmp280_send_byte@addr 0072         ??_uncompensated_pressure 0020                ?_bmp280_send_byte 0071  
                            l101 0BC5                              l110 0B8F                              l123 024B  
                            l119 024B                              l309 0E02                              l184 0F32  
                            l338 0031                              l426 0E69                              l178 0687  
                            l187 0FFF                              l348 00B9                              l287 0D43  
                            l439 0D9C                              l545 0CFD                              l555 0C39  
                            _RC0 0038                              _RC1 0039                              _PEN 048A  
                            _SEN 0488                              u920 0E08                              u905 0C59  
                            u921 0E07                              u930 0E13                              u915 0C99  
                            u931 0E12                              u940 0E24                              u941 0E23  
                            u870 0B07                              u871 0B06                              u880 0B52  
                            u960 0E36                              u881 0B51                              u961 0E35  
                            u890 0BDB                              u891 0BDA                              u955 0E28  
                            u980 0E47                              u981 0E46                              u975 0E37  
                            u985 0E43                              u995 0E4F                              _ac1 0067  
                            _ac2 0065                              _ac3 0063                              _ac4 0061  
             ??_bmp280_send_byte 0072                              _avv 00D4                              _oss 006D  
                            fsr0 0004                              indf 0000                     ___awmod@sign 0076  
                   _bmp280_start 0B23           show_multidigits@digit1 0026            bmp280_send_byte@count 0071  
         show_multidigits@digit2 0028           show_multidigits@digit3 0024           show_multidigits@digit4 0020  
                           l1301 0BE1                             l1303 0BE6                             l1321 0C56  
                           l1313 0C3B                             l1305 0BEC                             l1401 0D50  
                           l1323 0C63                             l1315 0C3E                             l1307 0BF4  
                           l1331 0C7B                             l1411 0D69                             l1403 0D54  
                           l1325 0C64                             l1317 0C40                             l1253 0B01  
                           l1261 0B1D                             l1309 0BF9                             l1341 0CA3  
                           l1333 0C7E                             l1421 0D88                             l1413 0D6D  
                           l1405 0D59                             l1501 00CB                             l1327 0C6D  
                           l1319 0C4A                             l1263 0B11                             l1271 0B43  
                           l1343 0CA4                             l1335 0C80                             l1351 0E04  
                           l1415 0D71                             l1407 0D5F                             l1423 0D8E  
                           l1431 0CBA                             l1511 0107                             l1503 00D4  
                           l1255 0B23                             l1329 0C70                             l1601 0DEB  
                           l1265 0B14                             l1273 0B47                             l1345 0CAD  
                           l1337 0C8A                             l1361 0E18                             l1353 0E08  
                           l1425 0D93                             l1417 0D7B                             l1409 0D62  
                           l1441 0CD0                             l1433 0CBC                             l1521 0150  
                           l1513 010E                             l1505 00DD                             l1257 0B26  
                           l1611 0020                             l1603 0DF4                             l1267 0B2C  
                           l1275 0B36                             l1259 0B1A                             l1347 0CB0  
                           l1339 0C96                             l1371 0E2E                             l1363 0E1C  
                           l1355 0E0D                             l1427 0D98                             l1419 0D81  
                           l1451 0CF3                             l1443 0CD4                             l1435 0CC2  
                           l1531 018E                             l1523 0154                             l1507 00F0  
                           l1515 0118                             l1291 0B6B                             l1283 0B54  
                           l1621 004C                             l1613 0024                             l1605 0DFA  
                           l1269 0B30                             l1277 0B39                             l1293 0BC7  
                           l1381 0E4E                             l1373 0E32                             l1365 0E1E  
                           l1357 0E0F                             l1349 0E03                             l1445 0CE5  
                           l1437 0CC5                             l1453 0CF9                             l1461 0C09  
                           l1541 01D4                             l1525 016B                             l1517 0121  
                           l1533 0198                             l1509 00F4                             l1285 0B59  
                           l1701 031C                             l1631 0071                             l1623 0054  
                           l1615 0035                             l1279 0B3E                             l1295 0BCC  
                           l1383 0E55                             l1375 0E36                             l1367 0E24  
                           l1359 0E13                             l1447 0CEB                             l1439 0CCC  
                           l1471 0C28                             l1463 0C10                             l1551 022F  
                           l1543 01EB                             l1535 01A1                             l1527 017E  
                           l1519 012A                             l1287 0B5F                             l1711 0485  
                           l1703 0354                             l1633 0083                             l1625 0057  
                           l1641 00A1                             l1617 0040                             l1609 001D  
                           l1297 0BD0                             l1481 0014                             l1377 0E47  
                           l1369 0E27                             l1385 0E5B                             l1393 0D44  
                           l1449 0CEC                             l1473 0C2F                             l1465 0C14  
                           l1457 0C00                             l1553 0238                             l1545 01FE  
                           l1537 01AA                             l1529 0185                             l1289 0B65  
                           l1561 0F49                             l1721 062A                             l1713 04BB  
                           l1705 038B                             l1483 0B90                             l1643 00A6  
                           l1635 0091                             l1627 0064                             l1619 0044  
                           l1571 0CFE                             l1299 0BDB                             l1491 0B73  
                           l1387 0E60                             l1379 0E4D                             l1395 0D45  
                           l1467 0C18                             l1459 0C06                             l1475 0C35  
                           l1555 0241                             l1547 0215                             l1539 01D0  
                           l1563 0F53                             l1723 063E                             l1715 04F1  
                           l1707 03BC                             l1485 0B98                             l1645 00B1  
                           l1637 0092                             l1629 0068                             l1581 0D3B  
                           l1573 0D06                             l1557 0E6A                             l1493 0B7F  
                           l1389 0E65                             l1397 0D49                             l1469 0C22  
                           l1549 0228                             l1565 0F67                             l1725 0663  
                           l1717 0553                             l1709 044C                             l1487 0BBC  
                           l1639 009B                             l1591 0DBD                             l1575 0D0A  
                           l1479 0007                             l1495 0B83                             l1399 0D4E  
                           l1567 0F7B                             l1559 0F33                             l1719 05BB  
                           l1593 0DC1                             l1585 0D9D                             l1577 0D21  
                           l1489 0B72                             l1497 00BA                             l1569 0F8F  
                           l1681 0256                             l1595 0DCA                             l1587 0DAD  
                           l1579 0D2A                             l1499 00C3                             l1691 0284  
                           l1683 025C                             l1597 0DDC                             l1589 0DB0  
                           l1693 0294                             l1685 026A                             l1599 0DEA  
                           l1695 02A4                             l1687 026F                             l1679 024C  
                           l1697 02B4                             l1689 0274                             l1699 02E6  
                           STR_1 0806                             u1000 0E5B                             u1001 0E5A  
                           u1010 0E60                             u1011 0E5F                             u1100 0D93  
                           u1020 0D49                             u1101 0D92                             u1021 0D48  
                           u1030 0D54                             u1110 0CC2                             u1031 0D53  
                           u1111 0CC1                             u1040 0D5F                             u1200 0C18  
                           u1041 0D5E                             u1201 0C17                             u1130 0CD4  
                           u1210 0C22                             u1131 0CD3                             u1211 0C21  
                           u1060 0D71                             u1300 0121                             u1061 0D70  
                           u1125 0CC6                             u1301 0120                             u1070 0D7B  
                           u1150 0CE5                             u1230 0C35                             u1310 012A  
                           u1071 0D7A                             u1055 0D63                             u1151 0CE4  
                           u1231 0C34                             u1215 0C1E                             u1311 0129  
                           u1400 0D0A                             u1240 0011                             u1320 01A1  
                           u1401 0D09                             u1241 000D                             u1145 0CD5  
                           u1225 0C29                             u1321 01A0                             u1090 0D8E  
                           u1170 0CF9                             u1330 01AA                             u1411 0D13  
                           u1091 0D8D                             u1075 0D77                             u1171 0CF8  
                           u1155 0CE1                             u1331 01A9                             u1412 0D1A  
                           u1260 0B8F                             u1180 0C06                             u1413 0D21  
                           u1261 0B8E                             u1085 0D82                             u1165 0CED  
                           u1181 0C05                             u1510 0DFA                             u1254 0014  
                           u1270 00C3                             u1350 0FA9                             u1511 0DF9  
                           u1271 00C2                             u1600 00A1                             u1520 0024  
                           u1440 0D3B                             u1280 00D4                             u1360 0FBA  
                           u1601 00A0                             u1521 0023                             u1505 0DEC  
                           u1441 0D3A                             u1425 0D23                             u1281 00D3  
                           u1345 0F38                             u1610 00A6                             u1530 0035  
                           u1450 0DAD                             u1290 00DD                             u1370 0FC4  
                           u1611 00A5                             u1531 0034                             u1451 0DAC  
                           u1435 0D2B                             u1195 0C0A                             u1291 00DC  
                           u1371 0FC5                             u1355 0FA4                             u1540 0054  
                           u1380 0FD6                             u1372 0FCA                             u1700 0611  
                           u1620 02C9                             u1541 0053                             u1381 0FD7  
                           u1373 0FCB                             u1365 0FB5                             u1621 02CC  
                           u1470 0DC1                             u1390 0FE7                             u1382 0FDC  
                           u1710 063E                             u1630 0400                             u1622 02D3  
                           u1471 0DC0                             u1383 0FDD                             u1711 063D  
                           u1631 0401                             u1623 02D6                             u1560 0068  
                           u1720 0772                             u1640 0412                             u1632 0406  
                           u1561 0067                             u1465 0DB2                             u1721 0773  
                           u1713 063A                             u1705 060C                             u1633 0407  
                           u1490 0DDC                             u1722 0778                             u1650 041C  
                           u1555 0059                             u1491 0DDB                             u1395 0FE2  
                           u1723 0779                             u1651 041D                             u1580 0083  
                           u1660 0523                             u1652 0422                             u1581 0082  
                           u1485 0DC3                             u1661 0524                             u1653 0423  
                           u1645 040D                             u1670 056A                             u1662 0529  
                           u1807 0C45                             u1575 006A                             u1495 0DD8  
                           u1671 056D                             u1663 052A                             u1680 05A2  
                           u1672 0574                             u1817 0C51                             u1585 007F  
                           u1673 0577                             u1737 0264                             u1827 0C68  
                           u1595 0093                             u1747 0F4F                             u1691 05DE  
                           u1692 05E1                             u1837 0C74                             u1757 0C85  
                           u1693 05E8                             u1685 059D                             u1694 05EB  
                           u1767 0C91                             u1695 05F2                             u1696 05F5  
                           u1777 0CA8                             u1787 0CB4                             u1797 0BC0  
                           _RCEN 048B           show_multidigits@result 0022                             _RSEN 0489  
                           _main 024C                             _show 0B71                             btemp 007E  
                           start 0000                 __end_of_LCD_Char 0CBA                     LCD_Char@data 0072  
               __end_of_LCD_init 0BC6                  __end_of___aldiv 00BA                            ?_main 0070  
                          _ACKEN 048C                            _ACKDT 048D                  __end_of___awdiv 0E6A  
                __end_of___awmod 0D9D                            ?_show 0070                  __end_of___lldiv 0E03  
                ___awdiv@divisor 0070                  __end_of___lwdiv 0CFE                  __end_of___lwmod 0C3A  
                ___awdiv@counter 0075          show_multidigits@result1 002A                            _PORTB 0006  
                          _SSPIF 0063              ___lmul@multiplicand 0074                            pclath 000A  
                          show@s 0074                   _bmp280_getdata 0E6A                            status 0003  
                          wtemp0 007E                   _bmp280_restart 0B11                  __initialization 07DF  
                   __end_of_main 07DF                     __end_of_show 0B90                           ??_main 0039  
__size_of_uncompensated_pressure 00CD                           ??_show 0073                 ___awdiv@dividend 0072  
         __end_of_bmp280_getdata 0F33                           _SSPADD 0093                           _TRISC3 043B  
                         _TRISC4 043C                           _SSPCON 0014                           _SSPBUF 0013  
         __end_of_bmp280_restart 0B1A                           ___lmul 0CFE                        ??___aldiv 007D  
                      ??___awdiv 0074                        ??___awmod 0074                        ??___lldiv 0078  
                      ??___lwdiv 0074                        ??___lwmod 0074                 ___awdiv@quotient 0077  
                ___awmod@divisor 0070                  ___awmod@counter 0075             __size_of_LCD_Command 0040  
            bmp280_read_byte@rec 0073                 __end_of_waitmssp 0B09                  ?_bmp280_getdata 0070  
      __size_of_show_multidigits 0192           _uncompensated_pressure 0F33                        ?_LCD_Char 0070  
        __end_of__initialization 07FC                        ?_LCD_init 0070                  ?_bmp280_restart 0070  
                     _bmp280_nak 0B2C                   __pcstackCOMMON 0070                     __pidataBANK0 0005  
      __size_of_bmp280_read_byte 003A                       __pbssBANK0 004D                       __pbssBANK1 00A0  
                  ??_bmp280_init 0070                    ??_bmp280_read 0070                    ??_bmp280_send 0070  
                  ??_bmp280_stop 0070        __size_of_bmp280_send_byte 001E                       ??_LCD_Char 0070  
                     ??_LCD_init 0073                       __pmaintext 024C                          ?___lmul 0070  
                        _ACKSTAT 048E                   ___lmul@product 0079                       __stringtab 0800  
            show_multidigits@val 0079                      ?_bmp280_nak 0070              __end_of_bmp280_init 001D  
            __end_of_bmp280_read 0B42              __end_of_bmp280_send 0B53              __end_of_bmp280_stop 0B23  
                      ?_waitmssp 0070                          ___aldiv 001D                          ___awdiv 0E03  
                __size_of___lmul 0046                          ___awmod 0D44                          ___lldiv 0D9D  
                        ___lwdiv 0CBA                          ___lwmod 0C00                          __ptext1 0F33  
                        __ptext2 0B53                          __ptext3 0B23                          __ptext4 00BA  
                        __ptext5 0C00                          __ptext6 0CBA                          __ptext7 0D44  
                        __ptext8 0E03                          __ptext9 0B71                 ___awmod@dividend 0072  
               ___aldiv@dividend 0024                          main@hpa 0047                          clrloop0 0B0A  
           bmp280_read_byte@addr 0072             end_of_initialization 07FC                 _show_multidigits 00BA  
                ___lldiv@divisor 0070                  ___lldiv@counter 007D                 ___aldiv@quotient 002A  
                     ??_waitmssp 0070              __size_of_bmp280_nak 000A                 ??_bmp280_getdata 0074  
               _bmp280_read_byte 0BC6                        _TRISBbits 0086                        _TRISCbits 0087  
        ?_uncompensated_pressure 0070                 ??_bmp280_restart 0070                 _bmp280_send_byte 0B53  
                    _bmp280_init 0007                      _bmp280_read 0B36                      _bmp280_send 0B42  
                    _bmp280_stop 0B1A                __size_of_LCD_Char 0040                __size_of_LCD_init 0036  
                  ??_LCD_Command 0070                   __end_of___lmul 0D44              start_initialization 07DF  
                  ?_bmp280_start 0070   __end_of_uncompensated_pressure 1000                         ??___lmul 0078  
                    __pdataBANK0 006D              __end_of_LCD_Command 0C7A                   ??_bmp280_start 0070  
                      ___latbits 0002                    __pcstackBANK0 0020                     ??_bmp280_nak 0070  
               ___lwdiv@dividend 0072                         ?___aldiv 0020                         ?___awdiv 0070  
                       ?___awmod 0070                         ?___lldiv 0070                         ?___lwdiv 0070  
                       ?___lwmod 0070         __end_of_show_multidigits 024C                __size_of_waitmssp 0008  
                      __pstrings 0800               __end_of_bmp280_nak 0B36                 ___lwdiv@quotient 0075  
                ___aldiv@divisor 0020                         _LCD_Char 0C7A                  ___aldiv@counter 0028  
                       _LCD_init 0B90                        clear_ram0 0B09         __end_of_bmp280_read_byte 0C00  
                    _LCD_Command 0C3A         __end_of_bmp280_send_byte 0B71                      __stringbase 0805  
              ___lmul@multiplier 0070                     ?_bmp280_init 0070                     ?_bmp280_read 0070  
                   ?_bmp280_send 0070                     ?_bmp280_stop 0070                   bmp280_send@dat 0070  
           __end_of_bmp280_start 0B2C                 __size_of___aldiv 009D                 __size_of___awdiv 0067  
               __size_of___awmod 0059                 __size_of___lldiv 0066                 __size_of___lwdiv 0044  
               __size_of___lwmod 003A               __end_of__stringtab 0806                         _main$851 0049  
                ___lwdiv@divisor 0070                  ___lwdiv@counter 0077                         __ptext10 0C7A  
                       __ptext11 0007                         __ptext20 0CFE                         __ptext12 0E6A  
                       __ptext21 0D9D                         __ptext13 0BC6                         __ptext22 001D  
                       __ptext14 0B1A                         __ptext23 0B90                         __ptext15 0B42  
                       __ptext24 0C3A                         __ptext16 0B11                         __ptext17 0B36  
                       __ptext18 0B2C                         __ptext19 0B01        uncompensated_pressure@ff6 002D  
      uncompensated_pressure@ff7 0031        uncompensated_pressure@ff8 0035                    __size_of_main 0593  
                  __size_of_show 001F                         _waitmssp 0B01                  LCD_Command@cmnd 0072  
               ___lwmod@dividend 0072                 ___lldiv@dividend 0074          __size_of_bmp280_getdata 00C9  
                      stringcode 0800          __size_of_bmp280_restart 0009        show_multidigits@remainder 002C  
              ?_show_multidigits 0079               ??_show_multidigits 007B                 ___lldiv@quotient 0079  
                ___lwmod@divisor 0070                  ___lwmod@counter 0075                         stringdir 0800  
                       stringtab 0800                     ___aldiv@sign 0029            __size_of_bmp280_start 0009  
           __size_of_bmp280_init 0016             __size_of_bmp280_read 000C             __size_of_bmp280_send 0011  
           __size_of_bmp280_stop 0009                ?_bmp280_read_byte 0070  
