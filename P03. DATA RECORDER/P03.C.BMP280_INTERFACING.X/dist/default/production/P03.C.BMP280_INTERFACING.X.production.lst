

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 08 17:46:07 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.40
    33                           ; Generated 17/11/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187                           
   188                           	psect	idataBANK0
   189  0569                     __pidataBANK0:
   190                           
   191                           ;initializer for _oss
   192  0569  3403               	retlw	3
   193  056A  3400               	retlw	0
   194  0006                     _PORTB	set	6
   195  0013                     _SSPBUF	set	19
   196  0014                     _SSPCON	set	20
   197  0039                     _RC1	set	57
   198  0038                     _RC0	set	56
   199  0063                     _SSPIF	set	99
   200  0087                     _TRISCbits	set	135
   201  0086                     _TRISBbits	set	134
   202  0093                     _SSPADD	set	147
   203  048B                     _RCEN	set	1163
   204  048E                     _ACKSTAT	set	1166
   205  048C                     _ACKEN	set	1164
   206  048D                     _ACKDT	set	1165
   207  0489                     _RSEN	set	1161
   208  048A                     _PEN	set	1162
   209  0488                     _SEN	set	1160
   210  043C                     _TRISC4	set	1084
   211  043B                     _TRISC3	set	1083
   212                           
   213                           	psect	strings
   214  0003                     __pstrings:
   215  0003                     stringtab:
   216  0003                     __stringtab:
   217  0003                     stringcode:	
   218                           ;	String table - string pointers are 1 byte each
   219                           
   220  0003                     stringdir:
   221  0003  3000               	movlw	high stringdir
   222  0004  008A               	movwf	10
   223  0005  0804               	movf	4,w
   224  0006  0A84               	incf	4,f
   225  0007  0782               	addwf	2,f
   226  0008                     __stringbase:
   227  0008  3400               	retlw	0
   228  0009                     __end_of__stringtab:
   229  0009                     STR_1:
   230  0009  3442               	retlw	66	;'B'
   231  000A  344D               	retlw	77	;'M'
   232  000B  3450               	retlw	80	;'P'
   233  000C  3432               	retlw	50	;'2'
   234  000D  3438               	retlw	56	;'8'
   235  000E  3430               	retlw	48	;'0'
   236  000F  3400               	retlw	0
   237                           
   238                           	psect	cinit
   239  07DD                     start_initialization:	
   240                           ; #config settings
   241                           
   242  07DD                     __initialization:
   243                           
   244                           ; Initialize objects allocated to BANK0
   245  07DD  120A  118A  2569  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   246  07E2  00ED               	movwf	__pdataBANK0& (0+127)
   247  07E3  120A  118A  256A  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   248  07E8  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   249                           
   250                           ; Clear objects allocated to BANK1
   251  07E9  1383               	bcf	3,7	;select IRP bank0
   252  07EA  30A0               	movlw	low __pbssBANK1
   253  07EB  0084               	movwf	4
   254  07EC  30A8               	movlw	low (__pbssBANK1+8)
   255  07ED  120A  118A  2573  120A  118A  	fcall	clear_ram0
   256                           
   257                           ; Clear objects allocated to BANK0
   258  07F2  3020               	movlw	low __pbssBANK0
   259  07F3  0084               	movwf	4
   260  07F4  306D               	movlw	low (__pbssBANK0+77)
   261  07F5  120A  118A  2573  120A  118A  	fcall	clear_ram0
   262                           
   263                           ; Clear objects allocated to COMMON
   264  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   265  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   266  07FC                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269  07FC                     __end_of__initialization:
   270  07FC  0183               	clrf	3
   271  07FD  120A  118A  2DF9   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMMON
   274  007B                     __pbssCOMMON:
   275  007B                     _ac1:
   276  007B                     	ds	2
   277                           
   278                           	psect	bssBANK0
   279  0020                     __pbssBANK0:
   280  0020                     _x2:
   281  0020                     	ds	4
   282  0024                     _x1:
   283  0024                     	ds	4
   284  0028                     _up:
   285  0028                     	ds	4
   286  002C                     _b7:
   287  002C                     	ds	4
   288  0030                     _b4:
   289  0030                     	ds	4
   290  0034                     _b6:
   291  0034                     	ds	4
   292  0038                     _b5:
   293  0038                     	ds	4
   294  003C                     _b3:
   295  003C                     	ds	4
   296  0040                     _b2:
   297  0040                     	ds	4
   298  0044                     _b1:
   299  0044                     	ds	4
   300  0048                     _b0:
   301  0048                     	ds	4
   302  004C                     _af:
   303  004C                     	ds	4
   304  0050                     _ae:
   305  0050                     	ds	4
   306  0054                     _ad:
   307  0054                     	ds	4
   308  0058                     _ac:
   309  0058                     	ds	4
   310  005C                     _ab:
   311  005C                     	ds	4
   312  0060                     _aa:
   313  0060                     	ds	4
   314  0064                     _avv:
   315  0064                     	ds	3
   316  0067                     _ac4:
   317  0067                     	ds	2
   318  0069                     _ac3:
   319  0069                     	ds	2
   320  006B                     _ac2:
   321  006B                     	ds	2
   322                           
   323                           	psect	dataBANK0
   324  006D                     __pdataBANK0:
   325  006D                     _oss:
   326  006D                     	ds	2
   327                           
   328                           	psect	bssBANK1
   329  00A0                     __pbssBANK1:
   330  00A0                     _p:
   331  00A0                     	ds	4
   332  00A4                     _x3:
   333  00A4                     	ds	4
   334                           
   335                           	psect	clrtext
   336  0573                     clear_ram0:	
   337                           ;	Called with FSR containing the base address, and
   338                           ;	W with the last address+1
   339                           
   340  0573  0064               	clrwdt	;clear the watchdog before getting into this loop
   341  0574                     clrloop0:
   342  0574  0180               	clrf	0	;clear RAM location pointed to by FSR
   343  0575  0A84               	incf	4,f	;increment pointer
   344  0576  0604               	xorwf	4,w	;XOR with final address
   345  0577  1903               	btfsc	3,2	;have we reached the end yet?
   346  0578  3400               	retlw	0	;all done for this memory range, return
   347  0579  0604               	xorwf	4,w	;XOR again to restore value
   348  057A  2D74               	goto	clrloop0	;do the next byte
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:
   352  0070                     ?_waitmssp:
   353  0070                     ??_waitmssp:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_bmp280_getdata:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_print_checkdata:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_bmp280_init:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_bmp280_init:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_bmp280_stop:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ??_bmp280_stop:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_bmp280_restart:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ??_bmp280_restart:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_bmp280_nak:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ??_bmp280_nak:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_bmp280_send:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ??_bmp280_send:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_bmp280_read:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ??_bmp280_read:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_bmp280_read_byte:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_LCD_Command:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_LCD_Command:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_LCD_Char:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_LCD_Char:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_LCD_init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_show:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     bmp280_send@dat:	
   423                           ; 1 bytes @ 0x0
   424                           
   425                           
   426                           ; 1 bytes @ 0x0
   427  0070                     	ds	1
   428  0071                     ??_bmp280_read_byte:
   429                           
   430                           ; 1 bytes @ 0x1
   431  0071                     	ds	1
   432  0072                     bmp280_read_byte@addr:
   433  0072                     LCD_Command@cmnd:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     LCD_Char@data:	
   437                           ; 1 bytes @ 0x2
   438                           
   439                           
   440                           ; 1 bytes @ 0x2
   441  0072                     	ds	1
   442  0073                     ??_print_checkdata:
   443  0073                     ??_LCD_init:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     ??_show:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     bmp280_read_byte@rec:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 1 bytes @ 0x3
   454  0073                     	ds	1
   455  0074                     ??_bmp280_getdata:
   456  0074                     show@s:	
   457                           ; 1 bytes @ 0x4
   458                           
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	4
   462  0078                     ??_main:
   463                           
   464                           ; 1 bytes @ 0x8
   465  0078                     	ds	3
   466                           
   467                           	psect	maintext
   468  05F9                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 25 in file "main_bmp280.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B00/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0
   490 ;;      Temps:          3       0       0       0       0
   491 ;;      Totals:         3       0       0       0       0
   492 ;;Total ram usage:        3 bytes
   493 ;; Hardware stack levels required when called: 4
   494 ;; This function calls:
   495 ;;		_LCD_init
   496 ;;		_bmp280_getdata
   497 ;;		_bmp280_init
   498 ;;		_print_checkdata
   499 ;;		_show
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _main
   507  05F9                     _main:
   508  05F9                     l1214:	
   509                           ;incstack = 0
   510                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;main_bmp280.c: 27:     LCD_init();
   514  05F9  120A  118A  2624  120A  118A  	fcall	_LCD_init
   515                           
   516                           ;main_bmp280.c: 28:     bmp280_init();
   517  05FE  120A  118A  25C4  120A  118A  	fcall	_bmp280_init
   518  0603                     l1216:
   519                           
   520                           ;main_bmp280.c: 30:     show("BMP280");
   521  0603  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   522  0604  120A  118A  25DA  120A  118A  	fcall	_show
   523  0609                     l1218:
   524                           
   525                           ;main_bmp280.c: 31:     _delay((unsigned long)((1000)*(12000000/4000.0)));
   526  0609  3010               	movlw	16
   527  060A  00FA               	movwf	??_main+2
   528  060B  3039               	movlw	57
   529  060C  00F9               	movwf	??_main+1
   530  060D  300D               	movlw	13
   531  060E  00F8               	movwf	??_main
   532  060F                     u397:
   533  060F  0BF8               	decfsz	??_main,f
   534  0610  2E0F               	goto	u397
   535  0611  0BF9               	decfsz	??_main+1,f
   536  0612  2E0F               	goto	u397
   537  0613  0BFA               	decfsz	??_main+2,f
   538  0614  2E0F               	goto	u397
   539  0615  2E16               	nop2
   540  0616                     l1220:
   541                           
   542                           ;main_bmp280.c: 33:     {;main_bmp280.c: 34:         bmp280_getdata();
   543  0616  120A  118A  2714  120A  118A  	fcall	_bmp280_getdata
   544  061B                     l1222:
   545                           
   546                           ;main_bmp280.c: 35:         print_checkdata();
   547  061B  120A  118A  25A3  120A  118A  	fcall	_print_checkdata
   548  0620  2E16               	goto	l1220
   549  0621  120A  118A  2800   	ljmp	start
   550  0624                     __end_of_main:
   551                           
   552                           	psect	text1
   553  05DA                     __ptext1:	
   554 ;; *************** function _show *****************
   555 ;; Defined at:
   556 ;;		line 79 in file "./lcd4bit.h"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  s               1    wreg     PTR unsigned char 
   559 ;;		 -> STR_1(7), 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  s               1    4[COMMON] PTR unsigned char 
   562 ;;		 -> STR_1(7), 
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         1       0       0       0       0
   574 ;;      Temps:          1       0       0       0       0
   575 ;;      Totals:         2       0       0       0       0
   576 ;;Total ram usage:        2 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; Hardware stack levels required when called: 1
   579 ;; This function calls:
   580 ;;		_LCD_Char
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _show
   588  05DA                     _show:
   589                           
   590                           ;incstack = 0
   591                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   592                           ;show@s stored from wreg
   593  05DA  00F4               	movwf	show@s
   594  05DB                     l1112:
   595                           
   596                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
   597  05DB  2DEC               	goto	l1118
   598  05DC                     l1114:
   599                           
   600                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
   601  05DC  0874               	movf	show@s,w
   602  05DD  0084               	movwf	4
   603  05DE  120A  118A  2003  120A  118A  	fcall	stringdir
   604  05E3  120A  118A  26D4  120A  118A  	fcall	_LCD_Char
   605  05E8                     l1116:
   606  05E8  3001               	movlw	1
   607  05E9  00F3               	movwf	??_show
   608  05EA  0873               	movf	??_show,w
   609  05EB  07F4               	addwf	show@s,f
   610  05EC                     l1118:
   611                           
   612                           ;./lcd4bit.h: 81:     while(*s) {
   613  05EC  0874               	movf	show@s,w
   614  05ED  0084               	movwf	4
   615  05EE  120A  118A  2003  120A  118A  	fcall	stringdir
   616  05F3  3A00               	xorlw	0
   617  05F4  1D03               	skipz
   618  05F5  2DF7               	goto	u261
   619  05F6  2DF8               	goto	u260
   620  05F7                     u261:
   621  05F7  2DDC               	goto	l1114
   622  05F8                     u260:
   623  05F8                     l110:
   624  05F8  0008               	return
   625  05F9                     __end_of_show:
   626                           
   627                           	psect	text2
   628  05A3                     __ptext2:	
   629 ;; *************** function _print_checkdata *****************
   630 ;; Defined at:
   631 ;;		line 62 in file "main_bmp280.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; Hardware stack levels required when called: 1
   652 ;; This function calls:
   653 ;;		_LCD_Char
   654 ;;		_LCD_Command
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _print_checkdata
   662  05A3                     _print_checkdata:
   663  05A3                     l1122:	
   664                           ;incstack = 0
   665                           ; Regs used in _print_checkdata: [wreg+status,2+status,0+pclath+cstack]
   666                           
   667                           
   668                           ;main_bmp280.c: 64:     LCD_Command(0xC0);
   669  05A3  30C0               	movlw	192
   670  05A4  120A  118A  2694  120A  118A  	fcall	_LCD_Command
   671                           
   672                           ;main_bmp280.c: 65:     LCD_Char(aa+0x30);
   673  05A9  1283               	bcf	3,5	;RP0=0, select bank0
   674  05AA  1303               	bcf	3,6	;RP1=0, select bank0
   675  05AB  0860               	movf	_aa,w
   676  05AC  3E30               	addlw	48
   677  05AD  120A  118A  26D4  120A  118A  	fcall	_LCD_Char
   678  05B2                     l185:
   679  05B2  0008               	return
   680  05B3                     __end_of_print_checkdata:
   681                           
   682                           	psect	text3
   683  06D4                     __ptext3:	
   684 ;; *************** function _LCD_Char *****************
   685 ;; Defined at:
   686 ;;		line 27 in file "./lcd4bit.h"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  data            1    wreg     unsigned char 
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  data            1    2[COMMON] unsigned char 
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         1       0       0       0       0
   702 ;;      Temps:          2       0       0       0       0
   703 ;;      Totals:         3       0       0       0       0
   704 ;;Total ram usage:        3 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_show
   710 ;;		_print_checkdata
   711 ;;		_LCD_num
   712 ;;		_show_multidigits
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _LCD_Char
   718  06D4                     _LCD_Char:
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
   722                           ;LCD_Char@data stored from wreg
   723  06D4  00F2               	movwf	LCD_Char@data
   724  06D5                     l1078:
   725                           
   726                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
   727  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   728  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   729  06D7  1407               	bsf	7,0	;volatile
   730  06D8                     l1080:
   731                           
   732                           ;./lcd4bit.h: 30:     PORTB = data;
   733  06D8  0872               	movf	LCD_Char@data,w
   734  06D9  0086               	movwf	6	;volatile
   735  06DA                     l1082:
   736                           
   737                           ;./lcd4bit.h: 31:     RC1 = 1;
   738  06DA  1487               	bsf	7,1	;volatile
   739                           
   740                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
   741  06DB  3041               	movlw	65
   742  06DC  00F1               	movwf	??_LCD_Char+1
   743  06DD  30EE               	movlw	238
   744  06DE  00F0               	movwf	??_LCD_Char
   745  06DF                     u407:
   746  06DF  0BF0               	decfsz	??_LCD_Char,f
   747  06E0  2EDF               	goto	u407
   748  06E1  0BF1               	decfsz	??_LCD_Char+1,f
   749  06E2  2EDF               	goto	u407
   750  06E3  0000               	nop
   751  06E4                     l1084:
   752                           
   753                           ;./lcd4bit.h: 33:     RC1 = 0;
   754  06E4  1283               	bcf	3,5	;RP0=0, select bank0
   755  06E5  1303               	bcf	3,6	;RP1=0, select bank0
   756  06E6  1087               	bcf	7,1	;volatile
   757                           
   758                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
   759  06E7  3041               	movlw	65
   760  06E8  00F1               	movwf	??_LCD_Char+1
   761  06E9  30EE               	movlw	238
   762  06EA  00F0               	movwf	??_LCD_Char
   763  06EB                     u417:
   764  06EB  0BF0               	decfsz	??_LCD_Char,f
   765  06EC  2EEB               	goto	u417
   766  06ED  0BF1               	decfsz	??_LCD_Char+1,f
   767  06EE  2EEB               	goto	u417
   768  06EF  0000               	nop
   769  06F0                     l1086:
   770                           
   771                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
   772  06F0  0872               	movf	LCD_Char@data,w
   773  06F1  00F0               	movwf	??_LCD_Char
   774  06F2  3003               	movlw	3
   775  06F3                     u255:
   776  06F3  1003               	clrc
   777  06F4  0DF0               	rlf	??_LCD_Char,f
   778  06F5  3EFF               	addlw	-1
   779  06F6  1D03               	skipz
   780  06F7  2EF3               	goto	u255
   781  06F8  1003               	clrc
   782  06F9  0D70               	rlf	??_LCD_Char,w
   783  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   784  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   785  06FC  0086               	movwf	6	;volatile
   786  06FD                     l1088:
   787                           
   788                           ;./lcd4bit.h: 36:     RC1 = 1;
   789  06FD  1487               	bsf	7,1	;volatile
   790  06FE                     l1090:
   791                           
   792                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
   793  06FE  3041               	movlw	65
   794  06FF  00F1               	movwf	??_LCD_Char+1
   795  0700  30EE               	movlw	238
   796  0701  00F0               	movwf	??_LCD_Char
   797  0702                     u427:
   798  0702  0BF0               	decfsz	??_LCD_Char,f
   799  0703  2F02               	goto	u427
   800  0704  0BF1               	decfsz	??_LCD_Char+1,f
   801  0705  2F02               	goto	u427
   802  0706  0000               	nop
   803  0707                     l1092:
   804                           
   805                           ;./lcd4bit.h: 38:     RC1 = 0;
   806  0707  1283               	bcf	3,5	;RP0=0, select bank0
   807  0708  1303               	bcf	3,6	;RP1=0, select bank0
   808  0709  1087               	bcf	7,1	;volatile
   809  070A                     l1094:
   810                           
   811                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
   812  070A  3041               	movlw	65
   813  070B  00F1               	movwf	??_LCD_Char+1
   814  070C  30EE               	movlw	238
   815  070D  00F0               	movwf	??_LCD_Char
   816  070E                     u437:
   817  070E  0BF0               	decfsz	??_LCD_Char,f
   818  070F  2F0E               	goto	u437
   819  0710  0BF1               	decfsz	??_LCD_Char+1,f
   820  0711  2F0E               	goto	u437
   821  0712  0000               	nop
   822  0713                     l98:
   823  0713  0008               	return
   824  0714                     __end_of_LCD_Char:
   825                           
   826                           	psect	text4
   827  05C4                     __ptext4:	
   828 ;; *************** function _bmp280_init *****************
   829 ;; Defined at:
   830 ;;		line 15 in file "./p03a_bmp280.h"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0
   847 ;;      Totals:         0       0       0       0       0
   848 ;;Total ram usage:        0 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _bmp280_init
   859  05C4                     _bmp280_init:
   860  05C4                     l866:	
   861                           ;incstack = 0
   862                           ; Regs used in _bmp280_init: [wreg]
   863                           
   864                           
   865                           ;./p03a_bmp280.h: 17:     TRISC3=TRISC4=1;
   866  05C4  1683               	bsf	3,5	;RP0=1, select bank1
   867  05C5  1303               	bcf	3,6	;RP1=0, select bank1
   868  05C6  1607               	bsf	7,4	;volatile
   869  05C7  1A07               	btfsc	7,4	;volatile
   870  05C8  2DCA               	goto	u61
   871  05C9  2DCE               	goto	u60
   872  05CA                     u61:
   873  05CA  1683               	bsf	3,5	;RP0=1, select bank1
   874  05CB  1303               	bcf	3,6	;RP1=0, select bank1
   875  05CC  1587               	bsf	7,3	;volatile
   876  05CD  2DD1               	goto	u74
   877  05CE                     u60:
   878  05CE  1683               	bsf	3,5	;RP0=1, select bank1
   879  05CF  1303               	bcf	3,6	;RP1=0, select bank1
   880  05D0  1187               	bcf	7,3	;volatile
   881  05D1                     u74:
   882  05D1                     l868:
   883                           
   884                           ;./p03a_bmp280.h: 18:     SSPCON=0x28;
   885  05D1  3028               	movlw	40
   886  05D2  1283               	bcf	3,5	;RP0=0, select bank0
   887  05D3  1303               	bcf	3,6	;RP1=0, select bank0
   888  05D4  0094               	movwf	20	;volatile
   889                           
   890                           ;./p03a_bmp280.h: 19:     SSPADD=((11059200/4)/100)-1;
   891  05D5  30FF               	movlw	255
   892  05D6  1683               	bsf	3,5	;RP0=1, select bank1
   893  05D7  1303               	bcf	3,6	;RP1=0, select bank1
   894  05D8  0093               	movwf	19	;volatile
   895  05D9                     l49:
   896  05D9  0008               	return
   897  05DA                     __end_of_bmp280_init:
   898                           
   899                           	psect	text5
   900  0714                     __ptext5:	
   901 ;; *************** function _bmp280_getdata *****************
   902 ;; Defined at:
   903 ;;		line 47 in file "main_bmp280.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0, pclath, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0
   919 ;;      Temps:          4       0       0       0       0
   920 ;;      Totals:         4       0       0       0       0
   921 ;;Total ram usage:        4 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 3
   924 ;; This function calls:
   925 ;;		_bmp280_read_byte
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _bmp280_getdata
   933  0714                     _bmp280_getdata:
   934  0714                     l1120:	
   935                           ;incstack = 0
   936                           ; Regs used in _bmp280_getdata: [wreg+status,2+status,0+pclath+cstack]
   937                           
   938                           
   939                           ;main_bmp280.c: 49:         aa=(bmp280_read_byte(0xAA));
   940  0714  30AA               	movlw	170
   941  0715  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
   942  071A  00F4               	movwf	??_bmp280_getdata
   943  071B  01F5               	clrf	??_bmp280_getdata+1
   944  071C  01F6               	clrf	??_bmp280_getdata+2
   945  071D  01F7               	clrf	??_bmp280_getdata+3
   946  071E  0877               	movf	??_bmp280_getdata+3,w
   947  071F  1283               	bcf	3,5	;RP0=0, select bank0
   948  0720  1303               	bcf	3,6	;RP1=0, select bank0
   949  0721  00E3               	movwf	_aa+3
   950  0722  0876               	movf	??_bmp280_getdata+2,w
   951  0723  00E2               	movwf	_aa+2
   952  0724  0875               	movf	??_bmp280_getdata+1,w
   953  0725  00E1               	movwf	_aa+1
   954  0726  0874               	movf	??_bmp280_getdata,w
   955  0727  00E0               	movwf	_aa
   956                           
   957                           ;main_bmp280.c: 50:         ab=(bmp280_read_byte(0xAB));
   958  0728  30AB               	movlw	171
   959  0729  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
   960  072E  00F4               	movwf	??_bmp280_getdata
   961  072F  01F5               	clrf	??_bmp280_getdata+1
   962  0730  01F6               	clrf	??_bmp280_getdata+2
   963  0731  01F7               	clrf	??_bmp280_getdata+3
   964  0732  0877               	movf	??_bmp280_getdata+3,w
   965  0733  1283               	bcf	3,5	;RP0=0, select bank0
   966  0734  1303               	bcf	3,6	;RP1=0, select bank0
   967  0735  00DF               	movwf	_ab+3
   968  0736  0876               	movf	??_bmp280_getdata+2,w
   969  0737  00DE               	movwf	_ab+2
   970  0738  0875               	movf	??_bmp280_getdata+1,w
   971  0739  00DD               	movwf	_ab+1
   972  073A  0874               	movf	??_bmp280_getdata,w
   973  073B  00DC               	movwf	_ab
   974                           
   975                           ;main_bmp280.c: 51:         ac=(bmp280_read_byte(0xAC));
   976  073C  30AC               	movlw	172
   977  073D  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
   978  0742  00F4               	movwf	??_bmp280_getdata
   979  0743  01F5               	clrf	??_bmp280_getdata+1
   980  0744  01F6               	clrf	??_bmp280_getdata+2
   981  0745  01F7               	clrf	??_bmp280_getdata+3
   982  0746  0877               	movf	??_bmp280_getdata+3,w
   983  0747  1283               	bcf	3,5	;RP0=0, select bank0
   984  0748  1303               	bcf	3,6	;RP1=0, select bank0
   985  0749  00DB               	movwf	_ac+3
   986  074A  0876               	movf	??_bmp280_getdata+2,w
   987  074B  00DA               	movwf	_ac+2
   988  074C  0875               	movf	??_bmp280_getdata+1,w
   989  074D  00D9               	movwf	_ac+1
   990  074E  0874               	movf	??_bmp280_getdata,w
   991  074F  00D8               	movwf	_ac
   992                           
   993                           ;main_bmp280.c: 52:         ad=(bmp280_read_byte(0xAD));
   994  0750  30AD               	movlw	173
   995  0751  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
   996  0756  00F4               	movwf	??_bmp280_getdata
   997  0757  01F5               	clrf	??_bmp280_getdata+1
   998  0758  01F6               	clrf	??_bmp280_getdata+2
   999  0759  01F7               	clrf	??_bmp280_getdata+3
  1000  075A  0877               	movf	??_bmp280_getdata+3,w
  1001  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1002  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1003  075D  00D7               	movwf	_ad+3
  1004  075E  0876               	movf	??_bmp280_getdata+2,w
  1005  075F  00D6               	movwf	_ad+2
  1006  0760  0875               	movf	??_bmp280_getdata+1,w
  1007  0761  00D5               	movwf	_ad+1
  1008  0762  0874               	movf	??_bmp280_getdata,w
  1009  0763  00D4               	movwf	_ad
  1010                           
  1011                           ;main_bmp280.c: 53:         ae=(bmp280_read_byte(0xAE));
  1012  0764  30AE               	movlw	174
  1013  0765  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
  1014  076A  00F4               	movwf	??_bmp280_getdata
  1015  076B  01F5               	clrf	??_bmp280_getdata+1
  1016  076C  01F6               	clrf	??_bmp280_getdata+2
  1017  076D  01F7               	clrf	??_bmp280_getdata+3
  1018  076E  0877               	movf	??_bmp280_getdata+3,w
  1019  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0771  00D3               	movwf	_ae+3
  1022  0772  0876               	movf	??_bmp280_getdata+2,w
  1023  0773  00D2               	movwf	_ae+2
  1024  0774  0875               	movf	??_bmp280_getdata+1,w
  1025  0775  00D1               	movwf	_ae+1
  1026  0776  0874               	movf	??_bmp280_getdata,w
  1027  0777  00D0               	movwf	_ae
  1028                           
  1029                           ;main_bmp280.c: 54:         af=(bmp280_read_byte(0xAF));
  1030  0778  30AF               	movlw	175
  1031  0779  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
  1032  077E  00F4               	movwf	??_bmp280_getdata
  1033  077F  01F5               	clrf	??_bmp280_getdata+1
  1034  0780  01F6               	clrf	??_bmp280_getdata+2
  1035  0781  01F7               	clrf	??_bmp280_getdata+3
  1036  0782  0877               	movf	??_bmp280_getdata+3,w
  1037  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0785  00CF               	movwf	_af+3
  1040  0786  0876               	movf	??_bmp280_getdata+2,w
  1041  0787  00CE               	movwf	_af+2
  1042  0788  0875               	movf	??_bmp280_getdata+1,w
  1043  0789  00CD               	movwf	_af+1
  1044  078A  0874               	movf	??_bmp280_getdata,w
  1045  078B  00CC               	movwf	_af
  1046                           
  1047                           ;main_bmp280.c: 56:         b0=(bmp280_read_byte(0xB0));
  1048  078C  30B0               	movlw	176
  1049  078D  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
  1050  0792  00F4               	movwf	??_bmp280_getdata
  1051  0793  01F5               	clrf	??_bmp280_getdata+1
  1052  0794  01F6               	clrf	??_bmp280_getdata+2
  1053  0795  01F7               	clrf	??_bmp280_getdata+3
  1054  0796  0877               	movf	??_bmp280_getdata+3,w
  1055  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0799  00CB               	movwf	_b0+3
  1058  079A  0876               	movf	??_bmp280_getdata+2,w
  1059  079B  00CA               	movwf	_b0+2
  1060  079C  0875               	movf	??_bmp280_getdata+1,w
  1061  079D  00C9               	movwf	_b0+1
  1062  079E  0874               	movf	??_bmp280_getdata,w
  1063  079F  00C8               	movwf	_b0
  1064                           
  1065                           ;main_bmp280.c: 57:         b1=(bmp280_read_byte(0xB1));
  1066  07A0  30B1               	movlw	177
  1067  07A1  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
  1068  07A6  00F4               	movwf	??_bmp280_getdata
  1069  07A7  01F5               	clrf	??_bmp280_getdata+1
  1070  07A8  01F6               	clrf	??_bmp280_getdata+2
  1071  07A9  01F7               	clrf	??_bmp280_getdata+3
  1072  07AA  0877               	movf	??_bmp280_getdata+3,w
  1073  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1074  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1075  07AD  00C7               	movwf	_b1+3
  1076  07AE  0876               	movf	??_bmp280_getdata+2,w
  1077  07AF  00C6               	movwf	_b1+2
  1078  07B0  0875               	movf	??_bmp280_getdata+1,w
  1079  07B1  00C5               	movwf	_b1+1
  1080  07B2  0874               	movf	??_bmp280_getdata,w
  1081  07B3  00C4               	movwf	_b1
  1082                           
  1083                           ;main_bmp280.c: 58:         b2=(bmp280_read_byte(0xB2));
  1084  07B4  30B2               	movlw	178
  1085  07B5  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
  1086  07BA  00F4               	movwf	??_bmp280_getdata
  1087  07BB  01F5               	clrf	??_bmp280_getdata+1
  1088  07BC  01F6               	clrf	??_bmp280_getdata+2
  1089  07BD  01F7               	clrf	??_bmp280_getdata+3
  1090  07BE  0877               	movf	??_bmp280_getdata+3,w
  1091  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1092  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1093  07C1  00C3               	movwf	_b2+3
  1094  07C2  0876               	movf	??_bmp280_getdata+2,w
  1095  07C3  00C2               	movwf	_b2+2
  1096  07C4  0875               	movf	??_bmp280_getdata+1,w
  1097  07C5  00C1               	movwf	_b2+1
  1098  07C6  0874               	movf	??_bmp280_getdata,w
  1099  07C7  00C0               	movwf	_b2
  1100                           
  1101                           ;main_bmp280.c: 59:         b5=(bmp280_read_byte(0xB5));
  1102  07C8  30B5               	movlw	181
  1103  07C9  120A  118A  265A  120A  118A  	fcall	_bmp280_read_byte
  1104  07CE  00F4               	movwf	??_bmp280_getdata
  1105  07CF  01F5               	clrf	??_bmp280_getdata+1
  1106  07D0  01F6               	clrf	??_bmp280_getdata+2
  1107  07D1  01F7               	clrf	??_bmp280_getdata+3
  1108  07D2  0877               	movf	??_bmp280_getdata+3,w
  1109  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1110  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1111  07D5  00BB               	movwf	_b5+3
  1112  07D6  0876               	movf	??_bmp280_getdata+2,w
  1113  07D7  00BA               	movwf	_b5+2
  1114  07D8  0875               	movf	??_bmp280_getdata+1,w
  1115  07D9  00B9               	movwf	_b5+1
  1116  07DA  0874               	movf	??_bmp280_getdata,w
  1117  07DB  00B8               	movwf	_b5
  1118  07DC                     l182:
  1119  07DC  0008               	return
  1120  07DD                     __end_of_bmp280_getdata:
  1121                           
  1122                           	psect	text6
  1123  065A                     __ptext6:	
  1124 ;; *************** function _bmp280_read_byte *****************
  1125 ;; Defined at:
  1126 ;;		line 73 in file "./p03a_bmp280.h"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  addr            1    wreg     unsigned char 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  addr            1    2[COMMON] unsigned char 
  1131 ;;  rec             1    3[COMMON] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      unsigned char 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0, pclath, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         0       0       0       0       0
  1142 ;;      Locals:         2       0       0       0       0
  1143 ;;      Temps:          1       0       0       0       0
  1144 ;;      Totals:         3       0       0       0       0
  1145 ;;Total ram usage:        3 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 2
  1148 ;; This function calls:
  1149 ;;		_bmp280_nak
  1150 ;;		_bmp280_read
  1151 ;;		_bmp280_restart
  1152 ;;		_bmp280_send
  1153 ;;		_bmp280_stop
  1154 ;;		_waitmssp
  1155 ;; This function is called by:
  1156 ;;		_bmp280_getdata
  1157 ;;		_print_up
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _bmp280_read_byte
  1163  065A                     _bmp280_read_byte:
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _bmp280_read_byte: [wreg+status,2+status,0+pclath+cstack]
  1167                           ;bmp280_read_byte@addr stored from wreg
  1168  065A  00F2               	movwf	bmp280_read_byte@addr
  1169  065B                     l86:	
  1170                           ;./p03a_bmp280.h: 73: unsigned char bmp280_read_byte(unsigned char addr);./p03a_bmp280.h
      +                          : 74: {;./p03a_bmp280.h: 75:     unsigned char rec;;./p03a_bmp280.h: 76: L: bmp280_resta
      +                          rt();
  1171                           
  1172  065B                     l1040:
  1173  065B  120A  118A  257B  120A  118A  	fcall	_bmp280_restart
  1174  0660                     l1042:
  1175                           
  1176                           ;./p03a_bmp280.h: 77:     SSPBUF=0xEE;
  1177  0660  30EE               	movlw	238
  1178  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0663  0093               	movwf	19	;volatile
  1181  0664                     l1044:
  1182                           
  1183                           ;./p03a_bmp280.h: 78:     waitmssp();
  1184  0664  120A  118A  256B  120A  118A  	fcall	_waitmssp
  1185  0669                     l87:	
  1186                           ;./p03a_bmp280.h: 79:     while(ACKSTAT){goto L;}
  1187                           
  1188  0669  1683               	bsf	3,5	;RP0=1, select bank1
  1189  066A  1303               	bcf	3,6	;RP1=0, select bank1
  1190  066B  1B11               	btfsc	17,6	;volatile
  1191  066C  2E6E               	goto	u231
  1192  066D  2E6F               	goto	u230
  1193  066E                     u231:
  1194  066E  2E5B               	goto	l86
  1195  066F                     u230:
  1196  066F                     l1046:
  1197                           
  1198                           ;./p03a_bmp280.h: 80:     bmp280_send(addr);
  1199  066F  0872               	movf	bmp280_read_byte@addr,w
  1200  0670  120A  118A  25B3  120A  118A  	fcall	_bmp280_send
  1201  0675                     l1048:
  1202                           
  1203                           ;./p03a_bmp280.h: 81:     bmp280_restart();
  1204  0675  120A  118A  257B  120A  118A  	fcall	_bmp280_restart
  1205  067A                     l1050:
  1206                           
  1207                           ;./p03a_bmp280.h: 82:     bmp280_send(0xEF);
  1208  067A  30EF               	movlw	239
  1209  067B  120A  118A  25B3  120A  118A  	fcall	_bmp280_send
  1210  0680                     l1052:
  1211                           
  1212                           ;./p03a_bmp280.h: 83:     rec=bmp280_read();
  1213  0680  120A  118A  2597  120A  118A  	fcall	_bmp280_read
  1214  0685  00F1               	movwf	??_bmp280_read_byte
  1215  0686  0871               	movf	??_bmp280_read_byte,w
  1216  0687  00F3               	movwf	bmp280_read_byte@rec
  1217  0688                     l1054:
  1218                           
  1219                           ;./p03a_bmp280.h: 84:     bmp280_nak();
  1220  0688  120A  118A  258D  120A  118A  	fcall	_bmp280_nak
  1221  068D                     l1056:
  1222                           
  1223                           ;./p03a_bmp280.h: 85:     bmp280_stop();
  1224  068D  120A  118A  2584  120A  118A  	fcall	_bmp280_stop
  1225                           
  1226                           ;./p03a_bmp280.h: 86:     return rec;
  1227  0692  0873               	movf	bmp280_read_byte@rec,w
  1228  0693                     l90:
  1229  0693  0008               	return
  1230  0694                     __end_of_bmp280_read_byte:
  1231                           
  1232                           	psect	text7
  1233  0584                     __ptext7:	
  1234 ;; *************** function _bmp280_stop *****************
  1235 ;; Defined at:
  1236 ;;		line 26 in file "./p03a_bmp280.h"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		status,2, status,0, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0
  1253 ;;      Totals:         0       0       0       0       0
  1254 ;;Total ram usage:        0 bytes
  1255 ;; Hardware stack levels used: 1
  1256 ;; Hardware stack levels required when called: 1
  1257 ;; This function calls:
  1258 ;;		_waitmssp
  1259 ;; This function is called by:
  1260 ;;		_bmp280_read_byte
  1261 ;;		_bmp280_send_byte
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _bmp280_stop
  1267  0584                     _bmp280_stop:
  1268  0584                     l1012:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _bmp280_stop: [status,2+status,0+pclath+cstack]
  1271                           
  1272                           
  1273                           ;./p03a_bmp280.h: 28:     PEN=1;
  1274  0584  1683               	bsf	3,5	;RP0=1, select bank1
  1275  0585  1303               	bcf	3,6	;RP1=0, select bank1
  1276  0586  1511               	bsf	17,2	;volatile
  1277  0587                     l1014:
  1278                           
  1279                           ;./p03a_bmp280.h: 29:     waitmssp();
  1280  0587  120A  118A  256B  120A  118A  	fcall	_waitmssp
  1281  058C                     l55:
  1282  058C  0008               	return
  1283  058D                     __end_of_bmp280_stop:
  1284                           
  1285                           	psect	text8
  1286  05B3                     __ptext8:	
  1287 ;; *************** function _bmp280_send *****************
  1288 ;; Defined at:
  1289 ;;		line 53 in file "./p03a_bmp280.h"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  dat             1    wreg     unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  dat             1    0[COMMON] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, pclath, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         0       0       0       0       0
  1304 ;;      Locals:         1       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0
  1306 ;;      Totals:         1       0       0       0       0
  1307 ;;Total ram usage:        1 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 1
  1310 ;; This function calls:
  1311 ;;		_waitmssp
  1312 ;; This function is called by:
  1313 ;;		_bmp280_read_byte
  1314 ;;		_bmp280_send_byte
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function _bmp280_send
  1320  05B3                     _bmp280_send:
  1321                           
  1322                           ;incstack = 0
  1323                           ; Regs used in _bmp280_send: [wreg+status,2+status,0+pclath+cstack]
  1324                           ;bmp280_send@dat stored from wreg
  1325  05B3  00F0               	movwf	bmp280_send@dat
  1326  05B4                     l73:	
  1327                           ;./p03a_bmp280.h: 53: void bmp280_send(unsigned char dat);./p03a_bmp280.h: 54: {;./p03a_
      +                          bmp280.h: 55: L1: SSPBUF=dat;
  1328                           
  1329  05B4                     l1024:
  1330  05B4  0870               	movf	bmp280_send@dat,w
  1331  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1332  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1333  05B7  0093               	movwf	19	;volatile
  1334  05B8                     l1026:
  1335                           
  1336                           ;./p03a_bmp280.h: 56:     waitmssp();
  1337  05B8  120A  118A  256B  120A  118A  	fcall	_waitmssp
  1338  05BD                     l74:	
  1339                           ;./p03a_bmp280.h: 57:     while(ACKSTAT){bmp280_restart;goto L1;}
  1340                           
  1341  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  1342  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  1343  05BF  1B11               	btfsc	17,6	;volatile
  1344  05C0  2DC2               	goto	u221
  1345  05C1  2DC3               	goto	u220
  1346  05C2                     u221:
  1347  05C2  2DB4               	goto	l73
  1348  05C3                     u220:
  1349  05C3                     l77:
  1350  05C3  0008               	return
  1351  05C4                     __end_of_bmp280_send:
  1352                           
  1353                           	psect	text9
  1354  057B                     __ptext9:	
  1355 ;; *************** function _bmp280_restart *****************
  1356 ;; Defined at:
  1357 ;;		line 31 in file "./p03a_bmp280.h"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		status,2, status,0, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 1
  1378 ;; This function calls:
  1379 ;;		_waitmssp
  1380 ;; This function is called by:
  1381 ;;		_bmp280_read_byte
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _bmp280_restart
  1387  057B                     _bmp280_restart:
  1388  057B                     l1016:	
  1389                           ;incstack = 0
  1390                           ; Regs used in _bmp280_restart: [status,2+status,0+pclath+cstack]
  1391                           
  1392                           
  1393                           ;./p03a_bmp280.h: 33:     RSEN=1;
  1394  057B  1683               	bsf	3,5	;RP0=1, select bank1
  1395  057C  1303               	bcf	3,6	;RP1=0, select bank1
  1396  057D  1491               	bsf	17,1	;volatile
  1397  057E                     l1018:
  1398                           
  1399                           ;./p03a_bmp280.h: 34:     waitmssp();
  1400  057E  120A  118A  256B  120A  118A  	fcall	_waitmssp
  1401  0583                     l58:
  1402  0583  0008               	return
  1403  0584                     __end_of_bmp280_restart:
  1404                           
  1405                           	psect	text10
  1406  0597                     __ptext10:	
  1407 ;; *************** function _bmp280_read *****************
  1408 ;; Defined at:
  1409 ;;		line 67 in file "./p03a_bmp280.h"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      unsigned char 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0
  1426 ;;      Totals:         0       0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 1
  1430 ;; This function calls:
  1431 ;;		_waitmssp
  1432 ;; This function is called by:
  1433 ;;		_bmp280_read_byte
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _bmp280_read
  1439  0597                     _bmp280_read:
  1440  0597                     l1028:	
  1441                           ;incstack = 0
  1442                           ; Regs used in _bmp280_read: [wreg+status,2+status,0+pclath+cstack]
  1443                           
  1444                           
  1445                           ;./p03a_bmp280.h: 69:     RCEN=1;
  1446  0597  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0598  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0599  1591               	bsf	17,3	;volatile
  1449  059A                     l1030:
  1450                           
  1451                           ;./p03a_bmp280.h: 70:     waitmssp();
  1452  059A  120A  118A  256B  120A  118A  	fcall	_waitmssp
  1453  059F                     l1032:
  1454                           
  1455                           ;./p03a_bmp280.h: 71:     return SSPBUF;
  1456  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1457  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1458  05A1  0813               	movf	19,w	;volatile
  1459  05A2                     l83:
  1460  05A2  0008               	return
  1461  05A3                     __end_of_bmp280_read:
  1462                           
  1463                           	psect	text11
  1464  058D                     __ptext11:	
  1465 ;; *************** function _bmp280_nak *****************
  1466 ;; Defined at:
  1467 ;;		line 42 in file "./p03a_bmp280.h"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		status,2, status,0, pclath, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1481 ;;      Params:         0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0
  1484 ;;      Totals:         0       0       0       0       0
  1485 ;;Total ram usage:        0 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 1
  1488 ;; This function calls:
  1489 ;;		_waitmssp
  1490 ;; This function is called by:
  1491 ;;		_bmp280_read_byte
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _bmp280_nak
  1497  058D                     _bmp280_nak:
  1498  058D                     l1020:	
  1499                           ;incstack = 0
  1500                           ; Regs used in _bmp280_nak: [status,2+status,0+pclath+cstack]
  1501                           
  1502                           
  1503                           ;./p03a_bmp280.h: 44:     ACKDT=1;
  1504  058D  1683               	bsf	3,5	;RP0=1, select bank1
  1505  058E  1303               	bcf	3,6	;RP1=0, select bank1
  1506  058F  1691               	bsf	17,5	;volatile
  1507                           
  1508                           ;./p03a_bmp280.h: 45:     ACKEN=1;
  1509  0590  1611               	bsf	17,4	;volatile
  1510  0591                     l1022:
  1511                           
  1512                           ;./p03a_bmp280.h: 46:     waitmssp();
  1513  0591  120A  118A  256B  120A  118A  	fcall	_waitmssp
  1514  0596                     l64:
  1515  0596  0008               	return
  1516  0597                     __end_of_bmp280_nak:
  1517                           
  1518                           	psect	text12
  1519  056B                     __ptext12:	
  1520 ;; *************** function _waitmssp *****************
  1521 ;; Defined at:
  1522 ;;		line 48 in file "./p03a_bmp280.h"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		None
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1536 ;;      Params:         0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0
  1539 ;;      Totals:         0       0       0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_bmp280_stop
  1546 ;;		_bmp280_restart
  1547 ;;		_bmp280_nak
  1548 ;;		_bmp280_send
  1549 ;;		_bmp280_read
  1550 ;;		_bmp280_read_byte
  1551 ;;		_bmp280_start
  1552 ;;		_bmp280_ack
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _waitmssp
  1558  056B                     _waitmssp:
  1559  056B                     l1010:	
  1560                           ;incstack = 0
  1561                           ; Regs used in _waitmssp: []
  1562                           
  1563  056B                     l67:	
  1564                           ;./p03a_bmp280.h: 50:     while(!SSPIF);
  1565                           
  1566  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1567  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1568  056D  1D8C               	btfss	12,3	;volatile
  1569  056E  2D70               	goto	u211
  1570  056F  2D71               	goto	u210
  1571  0570                     u211:
  1572  0570  2D6B               	goto	l67
  1573  0571                     u210:
  1574  0571                     l69:
  1575                           
  1576                           ;./p03a_bmp280.h: 51:     SSPIF=0;
  1577  0571  118C               	bcf	12,3	;volatile
  1578  0572                     l70:
  1579  0572  0008               	return
  1580  0573                     __end_of_waitmssp:
  1581                           
  1582                           	psect	text13
  1583  0624                     __ptext13:	
  1584 ;; *************** function _LCD_init *****************
  1585 ;; Defined at:
  1586 ;;		line 41 in file "./lcd4bit.h"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0
  1602 ;;      Temps:          2       0       0       0       0
  1603 ;;      Totals:         2       0       0       0       0
  1604 ;;Total ram usage:        2 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 1
  1607 ;; This function calls:
  1608 ;;		_LCD_Command
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _LCD_init
  1616  0624                     _LCD_init:
  1617  0624                     l1106:	
  1618                           ;incstack = 0
  1619                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1620                           
  1621                           
  1622                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  1623  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1624  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1625  0626  1386               	bcf	6,7	;volatile
  1626                           
  1627                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  1628  0627  1306               	bcf	6,6	;volatile
  1629                           
  1630                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  1631  0628  1286               	bcf	6,5	;volatile
  1632                           
  1633                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  1634  0629  1206               	bcf	6,4	;volatile
  1635                           
  1636                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  1637  062A  1007               	bcf	7,0	;volatile
  1638                           
  1639                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  1640  062B  1087               	bcf	7,1	;volatile
  1641  062C                     l1108:
  1642                           
  1643                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  1644  062C  3002               	movlw	2
  1645  062D  120A  118A  2694  120A  118A  	fcall	_LCD_Command
  1646                           
  1647                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  1648  0632  3028               	movlw	40
  1649  0633  120A  118A  2694  120A  118A  	fcall	_LCD_Command
  1650                           
  1651                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  1652  0638  3080               	movlw	128
  1653  0639  120A  118A  2694  120A  118A  	fcall	_LCD_Command
  1654                           
  1655                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  1656  063E  300C               	movlw	12
  1657  063F  120A  118A  2694  120A  118A  	fcall	_LCD_Command
  1658                           
  1659                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  1660  0644  3006               	movlw	6
  1661  0645  120A  118A  2694  120A  118A  	fcall	_LCD_Command
  1662                           
  1663                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  1664  064A  3001               	movlw	1
  1665  064B  120A  118A  2694  120A  118A  	fcall	_LCD_Command
  1666  0650                     l1110:
  1667                           
  1668                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1669  0650  3041               	movlw	65
  1670  0651  00F4               	movwf	??_LCD_init+1
  1671  0652  30EE               	movlw	238
  1672  0653  00F3               	movwf	??_LCD_init
  1673  0654                     u447:
  1674  0654  0BF3               	decfsz	??_LCD_init,f
  1675  0655  2E54               	goto	u447
  1676  0656  0BF4               	decfsz	??_LCD_init+1,f
  1677  0657  2E54               	goto	u447
  1678  0658  0000               	nop
  1679  0659                     l101:
  1680  0659  0008               	return
  1681  065A                     __end_of_LCD_init:
  1682                           
  1683                           	psect	text14
  1684  0694                     __ptext14:	
  1685 ;; *************** function _LCD_Command *****************
  1686 ;; Defined at:
  1687 ;;		line 13 in file "./lcd4bit.h"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  cmnd            1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  cmnd            1    2[COMMON] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0
  1703 ;;      Temps:          2       0       0       0       0
  1704 ;;      Totals:         3       0       0       0       0
  1705 ;;Total ram usage:        3 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_LCD_init
  1711 ;;		_print_checkdata
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _LCD_Command
  1717  0694                     _LCD_Command:
  1718                           
  1719                           ;incstack = 0
  1720                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  1721                           ;LCD_Command@cmnd stored from wreg
  1722  0694  00F2               	movwf	LCD_Command@cmnd
  1723  0695                     l1060:
  1724                           
  1725                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  1726  0695  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0696  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0697  1007               	bcf	7,0	;volatile
  1729  0698                     l1062:
  1730                           
  1731                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  1732  0698  0872               	movf	LCD_Command@cmnd,w
  1733  0699  0086               	movwf	6	;volatile
  1734  069A                     l1064:
  1735                           
  1736                           ;./lcd4bit.h: 17:     RC1 = 1;
  1737  069A  1487               	bsf	7,1	;volatile
  1738                           
  1739                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1740  069B  3041               	movlw	65
  1741  069C  00F1               	movwf	??_LCD_Command+1
  1742  069D  30EE               	movlw	238
  1743  069E  00F0               	movwf	??_LCD_Command
  1744  069F                     u457:
  1745  069F  0BF0               	decfsz	??_LCD_Command,f
  1746  06A0  2E9F               	goto	u457
  1747  06A1  0BF1               	decfsz	??_LCD_Command+1,f
  1748  06A2  2E9F               	goto	u457
  1749  06A3  0000               	nop
  1750  06A4                     l1066:
  1751                           
  1752                           ;./lcd4bit.h: 19:     RC1 = 0;
  1753  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1754  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1755  06A6  1087               	bcf	7,1	;volatile
  1756                           
  1757                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1758  06A7  3041               	movlw	65
  1759  06A8  00F1               	movwf	??_LCD_Command+1
  1760  06A9  30EE               	movlw	238
  1761  06AA  00F0               	movwf	??_LCD_Command
  1762  06AB                     u467:
  1763  06AB  0BF0               	decfsz	??_LCD_Command,f
  1764  06AC  2EAB               	goto	u467
  1765  06AD  0BF1               	decfsz	??_LCD_Command+1,f
  1766  06AE  2EAB               	goto	u467
  1767  06AF  0000               	nop
  1768  06B0                     l1068:
  1769                           
  1770                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  1771  06B0  0872               	movf	LCD_Command@cmnd,w
  1772  06B1  00F0               	movwf	??_LCD_Command
  1773  06B2  3003               	movlw	3
  1774  06B3                     u245:
  1775  06B3  1003               	clrc
  1776  06B4  0DF0               	rlf	??_LCD_Command,f
  1777  06B5  3EFF               	addlw	-1
  1778  06B6  1D03               	skipz
  1779  06B7  2EB3               	goto	u245
  1780  06B8  1003               	clrc
  1781  06B9  0D70               	rlf	??_LCD_Command,w
  1782  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1783  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1784  06BC  0086               	movwf	6	;volatile
  1785  06BD                     l1070:
  1786                           
  1787                           ;./lcd4bit.h: 22:     RC1 = 1;
  1788  06BD  1487               	bsf	7,1	;volatile
  1789  06BE                     l1072:
  1790                           
  1791                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1792  06BE  3041               	movlw	65
  1793  06BF  00F1               	movwf	??_LCD_Command+1
  1794  06C0  30EE               	movlw	238
  1795  06C1  00F0               	movwf	??_LCD_Command
  1796  06C2                     u477:
  1797  06C2  0BF0               	decfsz	??_LCD_Command,f
  1798  06C3  2EC2               	goto	u477
  1799  06C4  0BF1               	decfsz	??_LCD_Command+1,f
  1800  06C5  2EC2               	goto	u477
  1801  06C6  0000               	nop
  1802  06C7                     l1074:
  1803                           
  1804                           ;./lcd4bit.h: 24:     RC1 = 0;
  1805  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1806  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1807  06C9  1087               	bcf	7,1	;volatile
  1808  06CA                     l1076:
  1809                           
  1810                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1811  06CA  3041               	movlw	65
  1812  06CB  00F1               	movwf	??_LCD_Command+1
  1813  06CC  30EE               	movlw	238
  1814  06CD  00F0               	movwf	??_LCD_Command
  1815  06CE                     u487:
  1816  06CE  0BF0               	decfsz	??_LCD_Command,f
  1817  06CF  2ECE               	goto	u487
  1818  06D0  0BF1               	decfsz	??_LCD_Command+1,f
  1819  06D1  2ECE               	goto	u487
  1820  06D2  0000               	nop
  1821  06D3                     l95:
  1822  06D3  0008               	return
  1823  06D4                     __end_of_LCD_Command:
  1824  007E                     btemp	set	126	;btemp
  1825  007E                     wtemp0	set	126
  1826                           
  1827                           	psect	idloc
  1828                           
  1829                           ;Config register IDLOC0 @ 0x2000
  1830                           ;	unspecified, using default values
  1831  2000                     	org	8192
  1832  2000  3FFF               	dw	16383
  1833                           
  1834                           ;Config register IDLOC1 @ 0x2001
  1835                           ;	unspecified, using default values
  1836  2001                     	org	8193
  1837  2001  3FFF               	dw	16383
  1838                           
  1839                           ;Config register IDLOC2 @ 0x2002
  1840                           ;	unspecified, using default values
  1841  2002                     	org	8194
  1842  2002  3FFF               	dw	16383
  1843                           
  1844                           ;Config register IDLOC3 @ 0x2003
  1845                           ;	unspecified, using default values
  1846  2003                     	org	8195
  1847  2003  3FFF               	dw	16383
  1848                           
  1849                           	psect	config
  1850                           
  1851                           ;Config register CONFIG @ 0x2007
  1852                           ;	unspecified, using default values
  1853                           ;	Oscillator Selection bits
  1854                           ;	FOSC = 0x3, unprogrammed default
  1855                           ;	Watchdog Timer Enable bit
  1856                           ;	WDTE = 0x1, unprogrammed default
  1857                           ;	Power-up Timer Enable bit
  1858                           ;	PWRTE = 0x1, unprogrammed default
  1859                           ;	Brown-out Reset Enable bit
  1860                           ;	BOREN = 0x1, unprogrammed default
  1861                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1862                           ;	LVP = 0x1, unprogrammed default
  1863                           ;	Data EEPROM Memory Code Protection bit
  1864                           ;	CPD = 0x1, unprogrammed default
  1865                           ;	Flash Program Memory Write Enable bits
  1866                           ;	WRT = 0x3, unprogrammed default
  1867                           ;	In-Circuit Debugger Mode bit
  1868                           ;	DEBUG = 0x1, unprogrammed default
  1869                           ;	Flash Program Memory Code Protection bit
  1870                           ;	CP = 0x1, unprogrammed default
  1871  2007                     	org	8199
  1872  2007  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        2
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0      79
    BANK1            80      0       8
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_bmp280_getdata
    _show->_LCD_Char
    _print_checkdata->_LCD_Char
    _print_checkdata->_LCD_Command
    _bmp280_getdata->_bmp280_read_byte
    _bmp280_read_byte->_bmp280_send
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     321
                                              8 COMMON     3     3      0
                           _LCD_init
                     _bmp280_getdata
                        _bmp280_init
                    _print_checkdata
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     122
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _print_checkdata                                      0     0      0      88
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bmp280_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bmp280_getdata                                       4     4      0      67
                                              4 COMMON     4     4      0
                   _bmp280_read_byte
 ---------------------------------------------------------------------------------
 (2) _bmp280_read_byte                                     3     3      0      67
                                              1 COMMON     3     3      0
                         _bmp280_nak
                        _bmp280_read
                     _bmp280_restart
                        _bmp280_send
                        _bmp280_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_stop                                          0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_send                                          1     1      0      22
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_restart                                       0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_read                                          0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_nak                                           0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_Command
   _bmp280_getdata
     _bmp280_read_byte
       _bmp280_nak
         _waitmssp
       _bmp280_read
         _waitmssp
       _bmp280_restart
         _waitmssp
       _bmp280_send
         _waitmssp
       _bmp280_stop
         _waitmssp
       _waitmssp
   _bmp280_init
   _print_checkdata
     _LCD_Char
     _LCD_Command
   _show
     _LCD_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       8       7       10.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      64      12        0.0%
ABS                  0      0      64       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 08 17:46:07 2022

                        _p 00A0                          pc 0002         ??_bmp280_read_byte 0071  
             ?_LCD_Command 0070                         l70 0572                         l55 058C  
                       l64 0596                         l73 05B4                         l49 05D9  
                       l58 0583                         l74 05BD                         l90 0693  
                       l67 056B                         l83 05A2                         l69 0571  
                       l77 05C3                         l86 065B                         l95 06D3  
                       l87 0669                         l98 0713                         u60 05CE  
                       _b0 0048                         u61 05CA                         _b1 0044  
                       _b2 0040                         _b3 003C                         _b4 0030  
                       _b5 0038                         u74 05D1                         _b6 0034  
                       _b7 002C                         _x1 0024                         _x2 0020  
                       _x3 00A4                         _aa 0060                         _ab 005C  
                       _ac 0058                         _ad 0054                         _ae 0050  
                       _af 004C                         _up 0028                         fsr 0004  
                      l101 0659                        l110 05F8                        l182 07DC  
                      l185 05B2                        l866 05C4                        l868 05D1  
                      _RC0 0038                        _RC1 0039                        u210 0571  
                      u211 0570                        u220 05C3                        u221 05C2  
                      u230 066F                        u231 066E                        u260 05F8  
                      u245 06B3                        u261 05F7                        u255 06F3  
                      u407 06DF                        _PEN 048A                        u417 06EB  
                      u427 0702                        u437 070E                        u447 0654  
                      u457 069F                        u467 06AB                        _SEN 0488  
                      u477 06C2                        u397 060F                        u487 06CE  
                      _ac1 007B                        _ac2 006B                        _ac3 0069  
                      _ac4 0067                        _avv 0064                        _oss 006D  
                      fsr0 0004                        indf 0000                       l1010 056B  
                     l1020 058D                       l1012 0584                       l1110 0650  
                     l1022 0591                       l1030 059A                       l1014 0587  
                     l1032 059F                       l1016 057B                       l1024 05B4  
                     l1040 065B                       l1120 0714                       l1112 05DB  
                     l1106 0624                       l1018 057E                       l1026 05B8  
                     l1050 067A                       l1042 0660                       l1122 05A3  
                     l1114 05DC                       l1060 0695                       l1108 062C  
                     l1028 0597                       l1052 0680                       l1044 0664  
                     l1116 05E8                       l1220 0616                       l1070 06BD  
                     l1062 0698                       l1054 0688                       l1046 066F  
                     l1118 05EC                       l1222 061B                       l1214 05F9  
                     l1072 06BE                       l1064 069A                       l1056 068D  
                     l1048 0675                       l1080 06D8                       l1216 0603  
                     l1074 06C7                       l1066 06A4                       l1090 06FE  
                     l1082 06DA                       l1218 0609                       l1076 06CA  
                     l1068 06B0                       l1092 0707                       l1084 06E4  
                     l1094 070A                       l1086 06F0                       l1078 06D5  
                     l1088 06FD                       STR_1 0009                       _RCEN 048B  
                     _RSEN 0489                       _main 05F9                       _show 05DA  
                     btemp 007E                       start 0000           __end_of_LCD_Char 0714  
             LCD_Char@data 0072           __end_of_LCD_init 065A                      ?_main 0070  
                    _ACKEN 048C                      _ACKDT 048D                      ?_show 0070  
                    _PORTB 0006                      _SSPIF 0063                      pclath 000A  
                    show@s 0074             _bmp280_getdata 0714                      status 0003  
                    wtemp0 007E             _bmp280_restart 057B            __initialization 07DD  
             __end_of_main 0624               __end_of_show 05F9                     ??_main 0078  
                   ??_show 0073     __end_of_bmp280_getdata 07DD                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013     __end_of_bmp280_restart 0584       __size_of_LCD_Command 0040  
      bmp280_read_byte@rec 0073           __end_of_waitmssp 0573            ?_bmp280_getdata 0070  
                ?_LCD_Char 0070    __end_of__initialization 07FC                  ?_LCD_init 0070  
          ?_bmp280_restart 0070                 _bmp280_nak 058D             __pcstackCOMMON 0070  
             __pidataBANK0 0569   __size_of_print_checkdata 0010  __size_of_bmp280_read_byte 003A  
               __pbssBANK0 0020                 __pbssBANK1 00A0              ??_bmp280_init 0070  
            ??_bmp280_read 0070              ??_bmp280_send 0070              ??_bmp280_stop 0070  
               ??_LCD_Char 0070                 ??_LCD_init 0073                 __pmaintext 05F9  
                  _ACKSTAT 048E                 __stringtab 0003                ?_bmp280_nak 0070  
      __end_of_bmp280_init 05DA        __end_of_bmp280_read 05A3        __end_of_bmp280_send 05C4  
      __end_of_bmp280_stop 058D                  ?_waitmssp 0070                    __ptext1 05DA  
                  __ptext2 05A3                    __ptext3 06D4                    __ptext4 05C4  
                  __ptext5 0714                    __ptext6 065A                    __ptext7 0584  
                  __ptext8 05B3                    __ptext9 057B                    clrloop0 0574  
     bmp280_read_byte@addr 0072          ??_print_checkdata 0073       end_of_initialization 07FC  
               ??_waitmssp 0070        __size_of_bmp280_nak 000A           ??_bmp280_getdata 0074  
         _bmp280_read_byte 065A                  _TRISBbits 0086                  _TRISCbits 0087  
         ??_bmp280_restart 0070                _bmp280_init 05C4                _bmp280_read 0597  
              _bmp280_send 05B3                _bmp280_stop 0584          __size_of_LCD_Char 0040  
        __size_of_LCD_init 0036              ??_LCD_Command 0070        start_initialization 07DD  
              __pdataBANK0 006D        __end_of_LCD_Command 06D4                __pbssCOMMON 007B  
                ___latbits 0002               ??_bmp280_nak 0070          __size_of_waitmssp 0008  
                __pstrings 0003            _print_checkdata 05A3         __end_of_bmp280_nak 0597  
                 _LCD_Char 06D4                   _LCD_init 0624                  clear_ram0 0573  
 __end_of_bmp280_read_byte 0694                _LCD_Command 0694                __stringbase 0008  
             ?_bmp280_init 0070               ?_bmp280_read 0070               ?_bmp280_send 0070  
             ?_bmp280_stop 0070             bmp280_send@dat 0070    __end_of_print_checkdata 05B3  
       __end_of__stringtab 0009                   __ptext10 0597                   __ptext11 058D  
                 __ptext12 056B                   __ptext13 0624                   __ptext14 0694  
            __size_of_main 002B              __size_of_show 001F                   _waitmssp 056B  
          LCD_Command@cmnd 0072    __size_of_bmp280_getdata 00C9                  stringcode 0003  
  __size_of_bmp280_restart 0009           ?_print_checkdata 0070                   stringdir 0003  
                 stringtab 0003       __size_of_bmp280_init 0016       __size_of_bmp280_read 000C  
     __size_of_bmp280_send 0011       __size_of_bmp280_stop 0009          ?_bmp280_read_byte 0070  
