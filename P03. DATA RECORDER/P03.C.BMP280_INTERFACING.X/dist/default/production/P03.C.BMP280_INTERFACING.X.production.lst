

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 08 17:52:59 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190                           
   191                           	psect	idataBANK0
   192  0008                     __pidataBANK0:
   193                           
   194                           ;initializer for _oss
   195  0008  3403               	retlw	3
   196  0009  3400               	retlw	0
   197  0006                     _PORTB	set	6
   198  0013                     _SSPBUF	set	19
   199  0014                     _SSPCON	set	20
   200  0039                     _RC1	set	57
   201  0038                     _RC0	set	56
   202  0063                     _SSPIF	set	99
   203  0087                     _TRISCbits	set	135
   204  0086                     _TRISBbits	set	134
   205  0093                     _SSPADD	set	147
   206  048B                     _RCEN	set	1163
   207  048E                     _ACKSTAT	set	1166
   208  048C                     _ACKEN	set	1164
   209  048D                     _ACKDT	set	1165
   210  0489                     _RSEN	set	1161
   211  048A                     _PEN	set	1162
   212  0488                     _SEN	set	1160
   213  043C                     _TRISC4	set	1084
   214  043B                     _TRISC3	set	1083
   215                           
   216                           	psect	strings
   217  0800                     __pstrings:
   218  0800                     stringtab:
   219  0800                     __stringtab:
   220  0800                     stringcode:	
   221                           ;	String table - string pointers are 1 byte each
   222                           
   223  0800                     stringdir:
   224  0800  3008               	movlw	high stringdir
   225  0801  008A               	movwf	10
   226  0802  0804               	movf	4,w
   227  0803  0A84               	incf	4,f
   228  0804  0782               	addwf	2,f
   229  0805                     __stringbase:
   230  0805  3400               	retlw	0
   231  0806                     __end_of__stringtab:
   232  0806                     STR_1:
   233  0806  3442               	retlw	66	;'B'
   234  0807  344D               	retlw	77	;'M'
   235  0808  3450               	retlw	80	;'P'
   236  0809  3432               	retlw	50	;'2'
   237  080A  3438               	retlw	56	;'8'
   238  080B  3430               	retlw	48	;'0'
   239  080C  3400               	retlw	0
   240                           
   241                           	psect	cinit
   242  07DF                     start_initialization:	
   243                           ; #config settings
   244                           
   245  07DF                     __initialization:
   246                           
   247                           ; Initialize objects allocated to BANK0
   248  07DF  120A  118A  2008  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   249  07E4  00ED               	movwf	__pdataBANK0& (0+127)
   250  07E5  120A  118A  2009  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   251  07EA  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   252                           
   253                           ; Clear objects allocated to BANK1
   254  07EB  1383               	bcf	3,7	;select IRP bank0
   255  07EC  30A0               	movlw	low __pbssBANK1
   256  07ED  0084               	movwf	4
   257  07EE  30C8               	movlw	low (__pbssBANK1+40)
   258  07EF  120A  158A  2799  120A  118A  	fcall	clear_ram0
   259                           
   260                           ; Clear objects allocated to BANK0
   261  07F4  3020               	movlw	low __pbssBANK0
   262  07F5  0084               	movwf	4
   263  07F6  304F               	movlw	low (__pbssBANK0+47)
   264  07F7  120A  158A  2799  120A  118A  	fcall	clear_ram0
   265  07FC                     end_of_initialization:	
   266                           ;End of C runtime variable initialization code
   267                           
   268  07FC                     __end_of__initialization:
   269  07FC  0183               	clrf	3
   270  07FD  120A  118A  2B2B   	ljmp	_main	;jump to C main() function
   271                           
   272                           	psect	bssBANK0
   273  0020                     __pbssBANK0:
   274  0020                     _x3:
   275  0020                     	ds	4
   276  0024                     _x2:
   277  0024                     	ds	4
   278  0028                     _x1:
   279  0028                     	ds	4
   280  002C                     _b7:
   281  002C                     	ds	4
   282  0030                     _b4:
   283  0030                     	ds	4
   284  0034                     _b6:
   285  0034                     	ds	4
   286  0038                     _b1:
   287  0038                     	ds	4
   288  003C                     _aa:
   289  003C                     	ds	4
   290  0040                     _avv:
   291  0040                     	ds	3
   292  0043                     _ac4:
   293  0043                     	ds	2
   294  0045                     _ac3:
   295  0045                     	ds	2
   296  0047                     _ac2:
   297  0047                     	ds	2
   298  0049                     _ac1:
   299  0049                     	ds	2
   300  004B                     _p:
   301  004B                     	ds	4
   302                           
   303                           	psect	dataBANK0
   304  006D                     __pdataBANK0:
   305  006D                     _oss:
   306  006D                     	ds	2
   307                           
   308                           	psect	bssBANK1
   309  00A0                     __pbssBANK1:
   310  00A0                     _up:
   311  00A0                     	ds	4
   312  00A4                     _b5:
   313  00A4                     	ds	4
   314  00A8                     _b3:
   315  00A8                     	ds	4
   316  00AC                     _b2:
   317  00AC                     	ds	4
   318  00B0                     _b0:
   319  00B0                     	ds	4
   320  00B4                     _af:
   321  00B4                     	ds	4
   322  00B8                     _ae:
   323  00B8                     	ds	4
   324  00BC                     _ad:
   325  00BC                     	ds	4
   326  00C0                     _ac:
   327  00C0                     	ds	4
   328  00C4                     _ab:
   329  00C4                     	ds	4
   330                           
   331                           	psect	clrtext
   332  0F99                     clear_ram0:	
   333                           ;	Called with FSR containing the base address, and
   334                           ;	W with the last address+1
   335                           
   336  0F99  0064               	clrwdt	;clear the watchdog before getting into this loop
   337  0F9A                     clrloop0:
   338  0F9A  0180               	clrf	0	;clear RAM location pointed to by FSR
   339  0F9B  0A84               	incf	4,f	;increment pointer
   340  0F9C  0604               	xorwf	4,w	;XOR with final address
   341  0F9D  1903               	btfsc	3,2	;have we reached the end yet?
   342  0F9E  3400               	retlw	0	;all done for this memory range, return
   343  0F9F  0604               	xorwf	4,w	;XOR again to restore value
   344  0FA0  2F9A               	goto	clrloop0	;do the next byte
   345                           
   346                           	psect	cstackCOMMON
   347  0070                     __pcstackCOMMON:
   348  0070                     ?_waitmssp:
   349  0070                     ??_waitmssp:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_bmp280_getdata:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_print_checkdata:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_bmp280_init:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ??_bmp280_init:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_bmp280_stop:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ??_bmp280_stop:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_bmp280_restart:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ??_bmp280_restart:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_bmp280_nak:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ??_bmp280_nak:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_bmp280_send:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ??_bmp280_send:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_bmp280_read:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ??_bmp280_read:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_bmp280_read_byte:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_LCD_Command:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ??_LCD_Command:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_LCD_Char:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_LCD_Char:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_LCD_init:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_show:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_main:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?___lmul:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?___lldiv:	
   422                           ; 4 bytes @ 0x0
   423                           
   424  0070                     bmp280_send@dat:	
   425                           ; 4 bytes @ 0x0
   426                           
   427  0070                     ___lmul@multiplier:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ___lldiv@divisor:	
   431                           ; 4 bytes @ 0x0
   432                           
   433                           
   434                           ; 4 bytes @ 0x0
   435  0070                     	ds	1
   436  0071                     ??_bmp280_read_byte:
   437                           
   438                           ; 1 bytes @ 0x1
   439  0071                     	ds	1
   440  0072                     bmp280_read_byte@addr:
   441  0072                     LCD_Command@cmnd:	
   442                           ; 1 bytes @ 0x2
   443                           
   444  0072                     LCD_Char@data:	
   445                           ; 1 bytes @ 0x2
   446                           
   447                           
   448                           ; 1 bytes @ 0x2
   449  0072                     	ds	1
   450  0073                     ??_print_checkdata:
   451  0073                     ??_LCD_init:	
   452                           ; 1 bytes @ 0x3
   453                           
   454  0073                     ??_show:	
   455                           ; 1 bytes @ 0x3
   456                           
   457  0073                     bmp280_read_byte@rec:	
   458                           ; 1 bytes @ 0x3
   459                           
   460                           
   461                           ; 1 bytes @ 0x3
   462  0073                     	ds	1
   463  0074                     ??_bmp280_getdata:
   464  0074                     show@s:	
   465                           ; 1 bytes @ 0x4
   466                           
   467  0074                     ___lmul@multiplicand:	
   468                           ; 1 bytes @ 0x4
   469                           
   470  0074                     ___lldiv@dividend:	
   471                           ; 4 bytes @ 0x4
   472                           
   473                           
   474                           ; 4 bytes @ 0x4
   475  0074                     	ds	4
   476  0078                     ??___lmul:
   477  0078                     ??___lldiv:	
   478                           ; 1 bytes @ 0x8
   479                           
   480                           
   481                           ; 1 bytes @ 0x8
   482  0078                     	ds	1
   483  0079                     ___lmul@product:
   484  0079                     ___lldiv@quotient:	
   485                           ; 4 bytes @ 0x9
   486                           
   487                           
   488                           ; 4 bytes @ 0x9
   489  0079                     	ds	4
   490  007D                     ??___aldiv:
   491  007D                     ___lldiv@counter:	
   492                           ; 1 bytes @ 0xD
   493                           
   494                           
   495                           ; 1 bytes @ 0xD
   496  007D                     	ds	1
   497                           
   498                           	psect	cstackBANK0
   499  004F                     __pcstackBANK0:
   500  004F                     ?___aldiv:
   501  004F                     ___aldiv@divisor:	
   502                           ; 4 bytes @ 0x0
   503                           
   504                           
   505                           ; 4 bytes @ 0x0
   506  004F                     	ds	4
   507  0053                     ___aldiv@dividend:
   508                           
   509                           ; 4 bytes @ 0x4
   510  0053                     	ds	4
   511  0057                     ___aldiv@counter:
   512                           
   513                           ; 1 bytes @ 0x8
   514  0057                     	ds	1
   515  0058                     ___aldiv@sign:
   516                           
   517                           ; 1 bytes @ 0x9
   518  0058                     	ds	1
   519  0059                     ___aldiv@quotient:
   520                           
   521                           ; 4 bytes @ 0xA
   522  0059                     	ds	4
   523  005D                     ??_main:
   524                           
   525                           ; 1 bytes @ 0xE
   526  005D                     	ds	12
   527  0069                     _main$854:
   528                           
   529                           ; 4 bytes @ 0x1A
   530  0069                     	ds	4
   531                           
   532                           	psect	maintext
   533  032B                     __pmaintext:	
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 25 in file "main_bmp280.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : B00/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       4       0       0       0
   555 ;;      Temps:          0      12       0       0       0
   556 ;;      Totals:         0      16       0       0       0
   557 ;;Total ram usage:       16 bytes
   558 ;; Hardware stack levels required when called: 4
   559 ;; This function calls:
   560 ;;		_LCD_init
   561 ;;		___aldiv
   562 ;;		___lldiv
   563 ;;		___lmul
   564 ;;		_bmp280_getdata
   565 ;;		_bmp280_init
   566 ;;		_print_checkdata
   567 ;;		_show
   568 ;; This function is called by:
   569 ;;		Startup code after reset
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           
   574                           ;psect for function _main
   575  032B                     _main:
   576  032B                     l1396:	
   577                           ;incstack = 0
   578                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   579                           
   580                           
   581                           ;main_bmp280.c: 27:     LCD_init();
   582  032B  120A  118A  2029  120A  118A  	fcall	_LCD_init
   583                           
   584                           ;main_bmp280.c: 28:     bmp280_init();
   585  0330  120A  158A  27EA  120A  118A  	fcall	_bmp280_init
   586  0335                     l1398:
   587                           
   588                           ;main_bmp280.c: 30:     show("BMP280");
   589  0335  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   590  0336  120A  118A  200A  120A  118A  	fcall	_show
   591  033B                     l1400:
   592                           
   593                           ;main_bmp280.c: 31:     _delay((unsigned long)((1000)*(12000000/4000.0)));
   594  033B  3010               	movlw	16
   595  033C  1283               	bcf	3,5	;RP0=0, select bank0
   596  033D  1303               	bcf	3,6	;RP1=0, select bank0
   597  033E  00DF               	movwf	??_main+2
   598  033F  3039               	movlw	57
   599  0340  00DE               	movwf	??_main+1
   600  0341  300D               	movlw	13
   601  0342  00DD               	movwf	??_main
   602  0343                     u1077:
   603  0343  0BDD               	decfsz	??_main,f
   604  0344  2B43               	goto	u1077
   605  0345  0BDE               	decfsz	??_main+1,f
   606  0346  2B43               	goto	u1077
   607  0347  0BDF               	decfsz	??_main+2,f
   608  0348  2B43               	goto	u1077
   609  0349                     l1402:
   610                           
   611                           ;main_bmp280.c: 33:     {;main_bmp280.c: 34:         bmp280_getdata();
   612  0349  120A  118A  2262  120A  118A  	fcall	_bmp280_getdata
   613  034E                     l1404:
   614                           
   615                           ;main_bmp280.c: 35:         print_checkdata();
   616  034E  120A  158A  27C9  120A  118A  	fcall	_print_checkdata
   617  0353                     l1406:
   618                           
   619                           ;main_bmp280.c: 43:         b6 = b5 - 4000;
   620  0353  3060               	movlw	96
   621  0354  1283               	bcf	3,5	;RP0=0, select bank0
   622  0355  1303               	bcf	3,6	;RP1=0, select bank0
   623  0356  00DD               	movwf	??_main
   624  0357  30F0               	movlw	240
   625  0358  00DE               	movwf	??_main+1
   626  0359  30FF               	movlw	255
   627  035A  00DF               	movwf	??_main+2
   628  035B  30FF               	movlw	255
   629  035C  00E0               	movwf	??_main+3
   630  035D  1683               	bsf	3,5	;RP0=1, select bank1
   631  035E  1303               	bcf	3,6	;RP1=0, select bank1
   632  035F  0824               	movf	_b5^(0+128),w
   633  0360  1283               	bcf	3,5	;RP0=0, select bank0
   634  0361  1303               	bcf	3,6	;RP1=0, select bank0
   635  0362  07DD               	addwf	??_main,f
   636  0363  1683               	bsf	3,5	;RP0=1, select bank1
   637  0364  1303               	bcf	3,6	;RP1=0, select bank1
   638  0365  0825               	movf	(_b5+1)^(0+128),w
   639  0366  1803               	skipnc
   640  0367  0F25               	incfsz	(_b5+1)^(0+128),w
   641  0368  2B6A               	goto	u910
   642  0369  2B6D               	goto	u911
   643  036A                     u910:
   644  036A  1283               	bcf	3,5	;RP0=0, select bank0
   645  036B  1303               	bcf	3,6	;RP1=0, select bank0
   646  036C  07DE               	addwf	??_main+1,f
   647  036D                     u911:
   648  036D  1683               	bsf	3,5	;RP0=1, select bank1
   649  036E  1303               	bcf	3,6	;RP1=0, select bank1
   650  036F  0826               	movf	(_b5+2)^(0+128),w
   651  0370  1803               	skipnc
   652  0371  0F26               	incfsz	(_b5+2)^(0+128),w
   653  0372  2B74               	goto	u912
   654  0373  2B77               	goto	u913
   655  0374                     u912:
   656  0374  1283               	bcf	3,5	;RP0=0, select bank0
   657  0375  1303               	bcf	3,6	;RP1=0, select bank0
   658  0376  07DF               	addwf	??_main+2,f
   659  0377                     u913:
   660  0377  1683               	bsf	3,5	;RP0=1, select bank1
   661  0378  1303               	bcf	3,6	;RP1=0, select bank1
   662  0379  0827               	movf	(_b5+3)^(0+128),w
   663  037A  1803               	skipnc
   664  037B  0A27               	incf	(_b5+3)^(0+128),w
   665  037C  1283               	bcf	3,5	;RP0=0, select bank0
   666  037D  1303               	bcf	3,6	;RP1=0, select bank0
   667  037E  07E0               	addwf	??_main+3,f
   668  037F  0860               	movf	??_main+3,w
   669  0380  00B7               	movwf	_b6+3
   670  0381  085F               	movf	??_main+2,w
   671  0382  00B6               	movwf	_b6+2
   672  0383  085E               	movf	??_main+1,w
   673  0384  00B5               	movwf	_b6+1
   674  0385  085D               	movf	??_main,w
   675  0386  00B4               	movwf	_b6
   676  0387                     l1408:
   677                           
   678                           ;main_bmp280.c: 44:         x1 = (b2*(b6*b6/4096))/2048;
   679  0387  3000               	movlw	0
   680  0388  00D2               	movwf	___aldiv@divisor+3
   681  0389  3000               	movlw	0
   682  038A  00D1               	movwf	___aldiv@divisor+2
   683  038B  3010               	movlw	16
   684  038C  00D0               	movwf	___aldiv@divisor+1
   685  038D  3000               	movlw	0
   686  038E  00CF               	movwf	___aldiv@divisor
   687  038F  0837               	movf	_b6+3,w
   688  0390  00F3               	movwf	___lmul@multiplier+3
   689  0391  0836               	movf	_b6+2,w
   690  0392  00F2               	movwf	___lmul@multiplier+2
   691  0393  0835               	movf	_b6+1,w
   692  0394  00F1               	movwf	___lmul@multiplier+1
   693  0395  0834               	movf	_b6,w
   694  0396  00F0               	movwf	___lmul@multiplier
   695  0397  0837               	movf	_b6+3,w
   696  0398  00F7               	movwf	___lmul@multiplicand+3
   697  0399  0836               	movf	_b6+2,w
   698  039A  00F6               	movwf	___lmul@multiplicand+2
   699  039B  0835               	movf	_b6+1,w
   700  039C  00F5               	movwf	___lmul@multiplicand+1
   701  039D  0834               	movf	_b6,w
   702  039E  00F4               	movwf	___lmul@multiplicand
   703  039F  120A  118A  2119  120A  118A  	fcall	___lmul
   704  03A4  0873               	movf	?___lmul+3,w
   705  03A5  1283               	bcf	3,5	;RP0=0, select bank0
   706  03A6  1303               	bcf	3,6	;RP1=0, select bank0
   707  03A7  00D6               	movwf	___aldiv@dividend+3
   708  03A8  0872               	movf	?___lmul+2,w
   709  03A9  00D5               	movwf	___aldiv@dividend+2
   710  03AA  0871               	movf	?___lmul+1,w
   711  03AB  00D4               	movwf	___aldiv@dividend+1
   712  03AC  0870               	movf	?___lmul,w
   713  03AD  00D3               	movwf	___aldiv@dividend
   714  03AE  120A  118A  21C5  120A  118A  	fcall	___aldiv
   715  03B3  1283               	bcf	3,5	;RP0=0, select bank0
   716  03B4  1303               	bcf	3,6	;RP1=0, select bank0
   717  03B5  0852               	movf	?___aldiv+3,w
   718  03B6  00EC               	movwf	_main$854+3
   719  03B7  0851               	movf	?___aldiv+2,w
   720  03B8  00EB               	movwf	_main$854+2
   721  03B9  0850               	movf	?___aldiv+1,w
   722  03BA  00EA               	movwf	_main$854+1
   723  03BB  084F               	movf	?___aldiv,w
   724  03BC  00E9               	movwf	_main$854
   725  03BD                     l1410:
   726                           
   727                           ;main_bmp280.c: 44:         x1 = (b2*(b6*b6/4096))/2048;
   728  03BD  3000               	movlw	0
   729  03BE  00D2               	movwf	___aldiv@divisor+3
   730  03BF  3000               	movlw	0
   731  03C0  00D1               	movwf	___aldiv@divisor+2
   732  03C1  3008               	movlw	8
   733  03C2  00D0               	movwf	___aldiv@divisor+1
   734  03C3  3000               	movlw	0
   735  03C4  00CF               	movwf	___aldiv@divisor
   736  03C5  086C               	movf	_main$854+3,w
   737  03C6  00F3               	movwf	___lmul@multiplier+3
   738  03C7  086B               	movf	_main$854+2,w
   739  03C8  00F2               	movwf	___lmul@multiplier+2
   740  03C9  086A               	movf	_main$854+1,w
   741  03CA  00F1               	movwf	___lmul@multiplier+1
   742  03CB  0869               	movf	_main$854,w
   743  03CC  00F0               	movwf	___lmul@multiplier
   744  03CD  1683               	bsf	3,5	;RP0=1, select bank1
   745  03CE  1303               	bcf	3,6	;RP1=0, select bank1
   746  03CF  082F               	movf	(_b2+3)^(0+128),w
   747  03D0  00F7               	movwf	___lmul@multiplicand+3
   748  03D1  082E               	movf	(_b2+2)^(0+128),w
   749  03D2  00F6               	movwf	___lmul@multiplicand+2
   750  03D3  082D               	movf	(_b2+1)^(0+128),w
   751  03D4  00F5               	movwf	___lmul@multiplicand+1
   752  03D5  082C               	movf	_b2^(0+128),w
   753  03D6  00F4               	movwf	___lmul@multiplicand
   754  03D7  120A  118A  2119  120A  118A  	fcall	___lmul
   755  03DC  0873               	movf	?___lmul+3,w
   756  03DD  1283               	bcf	3,5	;RP0=0, select bank0
   757  03DE  1303               	bcf	3,6	;RP1=0, select bank0
   758  03DF  00D6               	movwf	___aldiv@dividend+3
   759  03E0  0872               	movf	?___lmul+2,w
   760  03E1  00D5               	movwf	___aldiv@dividend+2
   761  03E2  0871               	movf	?___lmul+1,w
   762  03E3  00D4               	movwf	___aldiv@dividend+1
   763  03E4  0870               	movf	?___lmul,w
   764  03E5  00D3               	movwf	___aldiv@dividend
   765  03E6  120A  118A  21C5  120A  118A  	fcall	___aldiv
   766  03EB  1283               	bcf	3,5	;RP0=0, select bank0
   767  03EC  1303               	bcf	3,6	;RP1=0, select bank0
   768  03ED  0852               	movf	?___aldiv+3,w
   769  03EE  00AB               	movwf	_x1+3
   770  03EF  0851               	movf	?___aldiv+2,w
   771  03F0  00AA               	movwf	_x1+2
   772  03F1  0850               	movf	?___aldiv+1,w
   773  03F2  00A9               	movwf	_x1+1
   774  03F3  084F               	movf	?___aldiv,w
   775  03F4  00A8               	movwf	_x1
   776  03F5                     l1412:
   777                           
   778                           ;main_bmp280.c: 45:         x2 = ac2*b6/2048;
   779  03F5  3000               	movlw	0
   780  03F6  00D2               	movwf	___aldiv@divisor+3
   781  03F7  3000               	movlw	0
   782  03F8  00D1               	movwf	___aldiv@divisor+2
   783  03F9  3008               	movlw	8
   784  03FA  00D0               	movwf	___aldiv@divisor+1
   785  03FB  3000               	movlw	0
   786  03FC  00CF               	movwf	___aldiv@divisor
   787  03FD  0837               	movf	_b6+3,w
   788  03FE  00F3               	movwf	___lmul@multiplier+3
   789  03FF  0836               	movf	_b6+2,w
   790  0400  00F2               	movwf	___lmul@multiplier+2
   791  0401  0835               	movf	_b6+1,w
   792  0402  00F1               	movwf	___lmul@multiplier+1
   793  0403  0834               	movf	_b6,w
   794  0404  00F0               	movwf	___lmul@multiplier
   795  0405  3000               	movlw	0
   796  0406  00F7               	movwf	___lmul@multiplicand+3
   797  0407  3000               	movlw	0
   798  0408  00F6               	movwf	___lmul@multiplicand+2
   799  0409  3000               	movlw	0
   800  040A  00F5               	movwf	___lmul@multiplicand+1
   801  040B  3000               	movlw	0
   802  040C  00F4               	movwf	___lmul@multiplicand
   803  040D  120A  118A  2119  120A  118A  	fcall	___lmul
   804  0412  0873               	movf	?___lmul+3,w
   805  0413  1283               	bcf	3,5	;RP0=0, select bank0
   806  0414  1303               	bcf	3,6	;RP1=0, select bank0
   807  0415  00D6               	movwf	___aldiv@dividend+3
   808  0416  0872               	movf	?___lmul+2,w
   809  0417  00D5               	movwf	___aldiv@dividend+2
   810  0418  0871               	movf	?___lmul+1,w
   811  0419  00D4               	movwf	___aldiv@dividend+1
   812  041A  0870               	movf	?___lmul,w
   813  041B  00D3               	movwf	___aldiv@dividend
   814  041C  120A  118A  21C5  120A  118A  	fcall	___aldiv
   815  0421  1283               	bcf	3,5	;RP0=0, select bank0
   816  0422  1303               	bcf	3,6	;RP1=0, select bank0
   817  0423  0852               	movf	?___aldiv+3,w
   818  0424  00A7               	movwf	_x2+3
   819  0425  0851               	movf	?___aldiv+2,w
   820  0426  00A6               	movwf	_x2+2
   821  0427  0850               	movf	?___aldiv+1,w
   822  0428  00A5               	movwf	_x2+1
   823  0429  084F               	movf	?___aldiv,w
   824  042A  00A4               	movwf	_x2
   825  042B                     l1414:
   826                           
   827                           ;main_bmp280.c: 46:         x3 = x1+x2;
   828  042B  0828               	movf	_x1,w
   829  042C  0724               	addwf	_x2,w
   830  042D  00DD               	movwf	??_main
   831  042E  3000               	movlw	0
   832  042F  1803               	skipnc
   833  0430  3001               	movlw	1
   834  0431  0729               	addwf	_x1+1,w
   835  0432  01DF               	clrf	??_main+2
   836  0433  1803               	skipnc
   837  0434  0ADF               	incf	??_main+2,f
   838  0435  0725               	addwf	_x2+1,w
   839  0436  00DE               	movwf	??_main+1
   840  0437  1803               	skipnc
   841  0438  0ADF               	incf	??_main+2,f
   842  0439  082A               	movf	_x1+2,w
   843  043A  075F               	addwf	??_main+2,w
   844  043B  01E0               	clrf	??_main+3
   845  043C  1803               	skipnc
   846  043D  0AE0               	incf	??_main+3,f
   847  043E  0726               	addwf	_x2+2,w
   848  043F  00DF               	movwf	??_main+2
   849  0440  1803               	skipnc
   850  0441  0AE0               	incf	??_main+3,f
   851  0442  082B               	movf	_x1+3,w
   852  0443  0760               	addwf	??_main+3,w
   853  0444  0727               	addwf	_x2+3,w
   854  0445  00E0               	movwf	??_main+3
   855  0446  0860               	movf	??_main+3,w
   856  0447  00A3               	movwf	_x3+3
   857  0448  085F               	movf	??_main+2,w
   858  0449  00A2               	movwf	_x3+2
   859  044A  085E               	movf	??_main+1,w
   860  044B  00A1               	movwf	_x3+1
   861  044C  085D               	movf	??_main,w
   862  044D  00A0               	movwf	_x3
   863  044E                     l1416:
   864                           
   865                           ;main_bmp280.c: 47:         b3 = (((ac1*4+x3)<< oss)+ 2)/ 4;
   866  044E  3000               	movlw	0
   867  044F  00D2               	movwf	___aldiv@divisor+3
   868  0450  3000               	movlw	0
   869  0451  00D1               	movwf	___aldiv@divisor+2
   870  0452  3000               	movlw	0
   871  0453  00D0               	movwf	___aldiv@divisor+1
   872  0454  3004               	movlw	4
   873  0455  00CF               	movwf	___aldiv@divisor
   874  0456  3002               	movlw	2
   875  0457  00DD               	movwf	??_main
   876  0458  3000               	movlw	0
   877  0459  00DE               	movwf	??_main+1
   878  045A  3000               	movlw	0
   879  045B  00DF               	movwf	??_main+2
   880  045C  3000               	movlw	0
   881  045D  00E0               	movwf	??_main+3
   882  045E  0820               	movf	_x3,w
   883  045F  00E1               	movwf	??_main+4
   884  0460  0821               	movf	_x3+1,w
   885  0461  00E2               	movwf	??_main+5
   886  0462  0822               	movf	_x3+2,w
   887  0463  00E3               	movwf	??_main+6
   888  0464  0823               	movf	_x3+3,w
   889  0465  00E4               	movwf	??_main+7
   890  0466  0A6D               	incf	_oss,w
   891  0467  2C6D               	goto	u920
   892  0468                     u925:
   893  0468  1003               	clrc
   894  0469  0DE1               	rlf	??_main+4,f
   895  046A  0DE2               	rlf	??_main+5,f
   896  046B  0DE3               	rlf	??_main+6,f
   897  046C  0DE4               	rlf	??_main+7,f
   898  046D                     u920:
   899  046D  3EFF               	addlw	-1
   900  046E  1D03               	skipz
   901  046F  2C68               	goto	u925
   902  0470  0861               	movf	??_main+4,w
   903  0471  07DD               	addwf	??_main,f
   904  0472  0862               	movf	??_main+5,w
   905  0473  1803               	skipnc
   906  0474  0F62               	incfsz	??_main+5,w
   907  0475  2C77               	goto	u930
   908  0476  2C78               	goto	u931
   909  0477                     u930:
   910  0477  07DE               	addwf	??_main+1,f
   911  0478                     u931:
   912  0478  0863               	movf	??_main+6,w
   913  0479  1803               	skipnc
   914  047A  0F63               	incfsz	??_main+6,w
   915  047B  2C7D               	goto	u932
   916  047C  2C7E               	goto	u933
   917  047D                     u932:
   918  047D  07DF               	addwf	??_main+2,f
   919  047E                     u933:
   920  047E  0864               	movf	??_main+7,w
   921  047F  1803               	skipnc
   922  0480  0A64               	incf	??_main+7,w
   923  0481  07E0               	addwf	??_main+3,f
   924  0482  0860               	movf	??_main+3,w
   925  0483  00D6               	movwf	___aldiv@dividend+3
   926  0484  085F               	movf	??_main+2,w
   927  0485  00D5               	movwf	___aldiv@dividend+2
   928  0486  085E               	movf	??_main+1,w
   929  0487  00D4               	movwf	___aldiv@dividend+1
   930  0488  085D               	movf	??_main,w
   931  0489  00D3               	movwf	___aldiv@dividend
   932  048A  120A  118A  21C5  120A  118A  	fcall	___aldiv
   933  048F  1283               	bcf	3,5	;RP0=0, select bank0
   934  0490  1303               	bcf	3,6	;RP1=0, select bank0
   935  0491  0852               	movf	?___aldiv+3,w
   936  0492  1683               	bsf	3,5	;RP0=1, select bank1
   937  0493  1303               	bcf	3,6	;RP1=0, select bank1
   938  0494  00AB               	movwf	(_b3+3)^(0+128)
   939  0495  1283               	bcf	3,5	;RP0=0, select bank0
   940  0496  1303               	bcf	3,6	;RP1=0, select bank0
   941  0497  0851               	movf	?___aldiv+2,w
   942  0498  1683               	bsf	3,5	;RP0=1, select bank1
   943  0499  1303               	bcf	3,6	;RP1=0, select bank1
   944  049A  00AA               	movwf	(_b3+2)^(0+128)
   945  049B  1283               	bcf	3,5	;RP0=0, select bank0
   946  049C  1303               	bcf	3,6	;RP1=0, select bank0
   947  049D  0850               	movf	?___aldiv+1,w
   948  049E  1683               	bsf	3,5	;RP0=1, select bank1
   949  049F  1303               	bcf	3,6	;RP1=0, select bank1
   950  04A0  00A9               	movwf	(_b3+1)^(0+128)
   951  04A1  1283               	bcf	3,5	;RP0=0, select bank0
   952  04A2  1303               	bcf	3,6	;RP1=0, select bank0
   953  04A3  084F               	movf	?___aldiv,w
   954  04A4  1683               	bsf	3,5	;RP0=1, select bank1
   955  04A5  1303               	bcf	3,6	;RP1=0, select bank1
   956  04A6  00A8               	movwf	_b3^(0+128)
   957  04A7                     l1418:
   958                           
   959                           ;main_bmp280.c: 48:         x1 = ac3* b6 / 8192;
   960  04A7  3000               	movlw	0
   961  04A8  1283               	bcf	3,5	;RP0=0, select bank0
   962  04A9  1303               	bcf	3,6	;RP1=0, select bank0
   963  04AA  00D2               	movwf	___aldiv@divisor+3
   964  04AB  3000               	movlw	0
   965  04AC  00D1               	movwf	___aldiv@divisor+2
   966  04AD  3020               	movlw	32
   967  04AE  00D0               	movwf	___aldiv@divisor+1
   968  04AF  3000               	movlw	0
   969  04B0  00CF               	movwf	___aldiv@divisor
   970  04B1  0837               	movf	_b6+3,w
   971  04B2  00F3               	movwf	___lmul@multiplier+3
   972  04B3  0836               	movf	_b6+2,w
   973  04B4  00F2               	movwf	___lmul@multiplier+2
   974  04B5  0835               	movf	_b6+1,w
   975  04B6  00F1               	movwf	___lmul@multiplier+1
   976  04B7  0834               	movf	_b6,w
   977  04B8  00F0               	movwf	___lmul@multiplier
   978  04B9  3000               	movlw	0
   979  04BA  00F7               	movwf	___lmul@multiplicand+3
   980  04BB  3000               	movlw	0
   981  04BC  00F6               	movwf	___lmul@multiplicand+2
   982  04BD  3000               	movlw	0
   983  04BE  00F5               	movwf	___lmul@multiplicand+1
   984  04BF  3000               	movlw	0
   985  04C0  00F4               	movwf	___lmul@multiplicand
   986  04C1  120A  118A  2119  120A  118A  	fcall	___lmul
   987  04C6  0873               	movf	?___lmul+3,w
   988  04C7  1283               	bcf	3,5	;RP0=0, select bank0
   989  04C8  1303               	bcf	3,6	;RP1=0, select bank0
   990  04C9  00D6               	movwf	___aldiv@dividend+3
   991  04CA  0872               	movf	?___lmul+2,w
   992  04CB  00D5               	movwf	___aldiv@dividend+2
   993  04CC  0871               	movf	?___lmul+1,w
   994  04CD  00D4               	movwf	___aldiv@dividend+1
   995  04CE  0870               	movf	?___lmul,w
   996  04CF  00D3               	movwf	___aldiv@dividend
   997  04D0  120A  118A  21C5  120A  118A  	fcall	___aldiv
   998  04D5  1283               	bcf	3,5	;RP0=0, select bank0
   999  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1000  04D7  0852               	movf	?___aldiv+3,w
  1001  04D8  00AB               	movwf	_x1+3
  1002  04D9  0851               	movf	?___aldiv+2,w
  1003  04DA  00AA               	movwf	_x1+2
  1004  04DB  0850               	movf	?___aldiv+1,w
  1005  04DC  00A9               	movwf	_x1+1
  1006  04DD  084F               	movf	?___aldiv,w
  1007  04DE  00A8               	movwf	_x1
  1008  04DF                     l1420:
  1009                           
  1010                           ;main_bmp280.c: 49:         x2 = (b1 * (b6 *b6 / 4096)) / 65536;
  1011  04DF  3000               	movlw	0
  1012  04E0  00D2               	movwf	___aldiv@divisor+3
  1013  04E1  3000               	movlw	0
  1014  04E2  00D1               	movwf	___aldiv@divisor+2
  1015  04E3  3010               	movlw	16
  1016  04E4  00D0               	movwf	___aldiv@divisor+1
  1017  04E5  3000               	movlw	0
  1018  04E6  00CF               	movwf	___aldiv@divisor
  1019  04E7  0837               	movf	_b6+3,w
  1020  04E8  00F3               	movwf	___lmul@multiplier+3
  1021  04E9  0836               	movf	_b6+2,w
  1022  04EA  00F2               	movwf	___lmul@multiplier+2
  1023  04EB  0835               	movf	_b6+1,w
  1024  04EC  00F1               	movwf	___lmul@multiplier+1
  1025  04ED  0834               	movf	_b6,w
  1026  04EE  00F0               	movwf	___lmul@multiplier
  1027  04EF  0837               	movf	_b6+3,w
  1028  04F0  00F7               	movwf	___lmul@multiplicand+3
  1029  04F1  0836               	movf	_b6+2,w
  1030  04F2  00F6               	movwf	___lmul@multiplicand+2
  1031  04F3  0835               	movf	_b6+1,w
  1032  04F4  00F5               	movwf	___lmul@multiplicand+1
  1033  04F5  0834               	movf	_b6,w
  1034  04F6  00F4               	movwf	___lmul@multiplicand
  1035  04F7  120A  118A  2119  120A  118A  	fcall	___lmul
  1036  04FC  0873               	movf	?___lmul+3,w
  1037  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  1038  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  1039  04FF  00D6               	movwf	___aldiv@dividend+3
  1040  0500  0872               	movf	?___lmul+2,w
  1041  0501  00D5               	movwf	___aldiv@dividend+2
  1042  0502  0871               	movf	?___lmul+1,w
  1043  0503  00D4               	movwf	___aldiv@dividend+1
  1044  0504  0870               	movf	?___lmul,w
  1045  0505  00D3               	movwf	___aldiv@dividend
  1046  0506  120A  118A  21C5  120A  118A  	fcall	___aldiv
  1047  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1048  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1049  050D  0852               	movf	?___aldiv+3,w
  1050  050E  00EC               	movwf	_main$854+3
  1051  050F  0851               	movf	?___aldiv+2,w
  1052  0510  00EB               	movwf	_main$854+2
  1053  0511  0850               	movf	?___aldiv+1,w
  1054  0512  00EA               	movwf	_main$854+1
  1055  0513  084F               	movf	?___aldiv,w
  1056  0514  00E9               	movwf	_main$854
  1057  0515                     l1422:
  1058                           
  1059                           ;main_bmp280.c: 49:         x2 = (b1 * (b6 *b6 / 4096)) / 65536;
  1060  0515  3000               	movlw	0
  1061  0516  00D2               	movwf	___aldiv@divisor+3
  1062  0517  3001               	movlw	1
  1063  0518  00D1               	movwf	___aldiv@divisor+2
  1064  0519  3000               	movlw	0
  1065  051A  00D0               	movwf	___aldiv@divisor+1
  1066  051B  3000               	movlw	0
  1067  051C  00CF               	movwf	___aldiv@divisor
  1068  051D  086C               	movf	_main$854+3,w
  1069  051E  00F3               	movwf	___lmul@multiplier+3
  1070  051F  086B               	movf	_main$854+2,w
  1071  0520  00F2               	movwf	___lmul@multiplier+2
  1072  0521  086A               	movf	_main$854+1,w
  1073  0522  00F1               	movwf	___lmul@multiplier+1
  1074  0523  0869               	movf	_main$854,w
  1075  0524  00F0               	movwf	___lmul@multiplier
  1076  0525  083B               	movf	_b1+3,w
  1077  0526  00F7               	movwf	___lmul@multiplicand+3
  1078  0527  083A               	movf	_b1+2,w
  1079  0528  00F6               	movwf	___lmul@multiplicand+2
  1080  0529  0839               	movf	_b1+1,w
  1081  052A  00F5               	movwf	___lmul@multiplicand+1
  1082  052B  0838               	movf	_b1,w
  1083  052C  00F4               	movwf	___lmul@multiplicand
  1084  052D  120A  118A  2119  120A  118A  	fcall	___lmul
  1085  0532  0873               	movf	?___lmul+3,w
  1086  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0535  00D6               	movwf	___aldiv@dividend+3
  1089  0536  0872               	movf	?___lmul+2,w
  1090  0537  00D5               	movwf	___aldiv@dividend+2
  1091  0538  0871               	movf	?___lmul+1,w
  1092  0539  00D4               	movwf	___aldiv@dividend+1
  1093  053A  0870               	movf	?___lmul,w
  1094  053B  00D3               	movwf	___aldiv@dividend
  1095  053C  120A  118A  21C5  120A  118A  	fcall	___aldiv
  1096  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0543  0852               	movf	?___aldiv+3,w
  1099  0544  00A7               	movwf	_x2+3
  1100  0545  0851               	movf	?___aldiv+2,w
  1101  0546  00A6               	movwf	_x2+2
  1102  0547  0850               	movf	?___aldiv+1,w
  1103  0548  00A5               	movwf	_x2+1
  1104  0549  084F               	movf	?___aldiv,w
  1105  054A  00A4               	movwf	_x2
  1106  054B                     l1424:
  1107                           
  1108                           ;main_bmp280.c: 50:         x3 =((x1+x2)+2)/4;
  1109  054B  3000               	movlw	0
  1110  054C  00D2               	movwf	___aldiv@divisor+3
  1111  054D  3000               	movlw	0
  1112  054E  00D1               	movwf	___aldiv@divisor+2
  1113  054F  3000               	movlw	0
  1114  0550  00D0               	movwf	___aldiv@divisor+1
  1115  0551  3004               	movlw	4
  1116  0552  00CF               	movwf	___aldiv@divisor
  1117  0553  3002               	movlw	2
  1118  0554  00DD               	movwf	??_main
  1119  0555  3000               	movlw	0
  1120  0556  00DE               	movwf	??_main+1
  1121  0557  3000               	movlw	0
  1122  0558  00DF               	movwf	??_main+2
  1123  0559  3000               	movlw	0
  1124  055A  00E0               	movwf	??_main+3
  1125  055B  0828               	movf	_x1,w
  1126  055C  0724               	addwf	_x2,w
  1127  055D  00E1               	movwf	??_main+4
  1128  055E  3000               	movlw	0
  1129  055F  1803               	skipnc
  1130  0560  3001               	movlw	1
  1131  0561  0729               	addwf	_x1+1,w
  1132  0562  01E3               	clrf	??_main+6
  1133  0563  1803               	skipnc
  1134  0564  0AE3               	incf	??_main+6,f
  1135  0565  0725               	addwf	_x2+1,w
  1136  0566  00E2               	movwf	??_main+5
  1137  0567  1803               	skipnc
  1138  0568  0AE3               	incf	??_main+6,f
  1139  0569  082A               	movf	_x1+2,w
  1140  056A  0763               	addwf	??_main+6,w
  1141  056B  01E4               	clrf	??_main+7
  1142  056C  1803               	skipnc
  1143  056D  0AE4               	incf	??_main+7,f
  1144  056E  0726               	addwf	_x2+2,w
  1145  056F  00E3               	movwf	??_main+6
  1146  0570  1803               	skipnc
  1147  0571  0AE4               	incf	??_main+7,f
  1148  0572  082B               	movf	_x1+3,w
  1149  0573  0764               	addwf	??_main+7,w
  1150  0574  0727               	addwf	_x2+3,w
  1151  0575  00E4               	movwf	??_main+7
  1152  0576  0861               	movf	??_main+4,w
  1153  0577  07DD               	addwf	??_main,f
  1154  0578  0862               	movf	??_main+5,w
  1155  0579  1803               	skipnc
  1156  057A  0F62               	incfsz	??_main+5,w
  1157  057B  2D7D               	goto	u940
  1158  057C  2D7E               	goto	u941
  1159  057D                     u940:
  1160  057D  07DE               	addwf	??_main+1,f
  1161  057E                     u941:
  1162  057E  0863               	movf	??_main+6,w
  1163  057F  1803               	skipnc
  1164  0580  0F63               	incfsz	??_main+6,w
  1165  0581  2D83               	goto	u942
  1166  0582  2D84               	goto	u943
  1167  0583                     u942:
  1168  0583  07DF               	addwf	??_main+2,f
  1169  0584                     u943:
  1170  0584  0864               	movf	??_main+7,w
  1171  0585  1803               	skipnc
  1172  0586  0A64               	incf	??_main+7,w
  1173  0587  07E0               	addwf	??_main+3,f
  1174  0588  0860               	movf	??_main+3,w
  1175  0589  00D6               	movwf	___aldiv@dividend+3
  1176  058A  085F               	movf	??_main+2,w
  1177  058B  00D5               	movwf	___aldiv@dividend+2
  1178  058C  085E               	movf	??_main+1,w
  1179  058D  00D4               	movwf	___aldiv@dividend+1
  1180  058E  085D               	movf	??_main,w
  1181  058F  00D3               	movwf	___aldiv@dividend
  1182  0590  120A  118A  21C5  120A  118A  	fcall	___aldiv
  1183  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0597  0852               	movf	?___aldiv+3,w
  1186  0598  00A3               	movwf	_x3+3
  1187  0599  0851               	movf	?___aldiv+2,w
  1188  059A  00A2               	movwf	_x3+2
  1189  059B  0850               	movf	?___aldiv+1,w
  1190  059C  00A1               	movwf	_x3+1
  1191  059D  084F               	movf	?___aldiv,w
  1192  059E  00A0               	movwf	_x3
  1193  059F                     l1426:
  1194                           
  1195                           ;main_bmp280.c: 51:         b4 = ac4 * (unsigned long) (x3 + 32768)/ 32768;
  1196  059F  3000               	movlw	0
  1197  05A0  00DD               	movwf	??_main
  1198  05A1  3080               	movlw	128
  1199  05A2  00DE               	movwf	??_main+1
  1200  05A3  3000               	movlw	0
  1201  05A4  00DF               	movwf	??_main+2
  1202  05A5  3000               	movlw	0
  1203  05A6  00E0               	movwf	??_main+3
  1204  05A7  0820               	movf	_x3,w
  1205  05A8  07DD               	addwf	??_main,f
  1206  05A9  0821               	movf	_x3+1,w
  1207  05AA  1803               	skipnc
  1208  05AB  0F21               	incfsz	_x3+1,w
  1209  05AC  2DAE               	goto	u950
  1210  05AD  2DAF               	goto	u951
  1211  05AE                     u950:
  1212  05AE  07DE               	addwf	??_main+1,f
  1213  05AF                     u951:
  1214  05AF  0822               	movf	_x3+2,w
  1215  05B0  1803               	skipnc
  1216  05B1  0F22               	incfsz	_x3+2,w
  1217  05B2  2DB4               	goto	u952
  1218  05B3  2DB5               	goto	u953
  1219  05B4                     u952:
  1220  05B4  07DF               	addwf	??_main+2,f
  1221  05B5                     u953:
  1222  05B5  0823               	movf	_x3+3,w
  1223  05B6  1803               	skipnc
  1224  05B7  0A23               	incf	_x3+3,w
  1225  05B8  07E0               	addwf	??_main+3,f
  1226  05B9  0860               	movf	??_main+3,w
  1227  05BA  00F3               	movwf	___lmul@multiplier+3
  1228  05BB  085F               	movf	??_main+2,w
  1229  05BC  00F2               	movwf	___lmul@multiplier+2
  1230  05BD  085E               	movf	??_main+1,w
  1231  05BE  00F1               	movwf	___lmul@multiplier+1
  1232  05BF  085D               	movf	??_main,w
  1233  05C0  00F0               	movwf	___lmul@multiplier
  1234  05C1  3000               	movlw	0
  1235  05C2  00F7               	movwf	___lmul@multiplicand+3
  1236  05C3  3000               	movlw	0
  1237  05C4  00F6               	movwf	___lmul@multiplicand+2
  1238  05C5  3000               	movlw	0
  1239  05C6  00F5               	movwf	___lmul@multiplicand+1
  1240  05C7  3000               	movlw	0
  1241  05C8  00F4               	movwf	___lmul@multiplicand
  1242  05C9  120A  118A  2119  120A  118A  	fcall	___lmul
  1243  05CE  0870               	movf	?___lmul,w
  1244  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1245  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1246  05D1  00E1               	movwf	??_main+4
  1247  05D2  0871               	movf	?___lmul+1,w
  1248  05D3  00E2               	movwf	??_main+5
  1249  05D4  0872               	movf	?___lmul+2,w
  1250  05D5  00E3               	movwf	??_main+6
  1251  05D6  0873               	movf	?___lmul+3,w
  1252  05D7  00E4               	movwf	??_main+7
  1253  05D8  300F               	movlw	15
  1254  05D9                     u965:
  1255  05D9  1003               	clrc
  1256  05DA  0CE4               	rrf	??_main+7,f
  1257  05DB  0CE3               	rrf	??_main+6,f
  1258  05DC  0CE2               	rrf	??_main+5,f
  1259  05DD  0CE1               	rrf	??_main+4,f
  1260  05DE                     u960:
  1261  05DE  3EFF               	addlw	-1
  1262  05DF  1D03               	skipz
  1263  05E0  2DD9               	goto	u965
  1264  05E1  0864               	movf	??_main+7,w
  1265  05E2  00B3               	movwf	_b4+3
  1266  05E3  0863               	movf	??_main+6,w
  1267  05E4  00B2               	movwf	_b4+2
  1268  05E5  0862               	movf	??_main+5,w
  1269  05E6  00B1               	movwf	_b4+1
  1270  05E7  0861               	movf	??_main+4,w
  1271  05E8  00B0               	movwf	_b4
  1272  05E9                     l1428:
  1273                           
  1274                           ;main_bmp280.c: 52:         b7 = ((unsigned long)up - b3) * (50000 >> oss);
  1275  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  1276  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  1277  05EB  0820               	movf	_up^(0+128),w
  1278  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1279  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1280  05EE  00DD               	movwf	??_main
  1281  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  1282  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  1283  05F1  0821               	movf	(_up+1)^(0+128),w
  1284  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1285  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1286  05F4  00DE               	movwf	??_main+1
  1287  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  1288  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  1289  05F7  0822               	movf	(_up+2)^(0+128),w
  1290  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1291  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1292  05FA  00DF               	movwf	??_main+2
  1293  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  1294  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  1295  05FD  0823               	movf	(_up+3)^(0+128),w
  1296  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1297  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0600  00E0               	movwf	??_main+3
  1299  0601  1683               	bsf	3,5	;RP0=1, select bank1
  1300  0602  1303               	bcf	3,6	;RP1=0, select bank1
  1301  0603  0828               	movf	_b3^(0+128),w
  1302  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0606  02DD               	subwf	??_main,f
  1305  0607  1683               	bsf	3,5	;RP0=1, select bank1
  1306  0608  1303               	bcf	3,6	;RP1=0, select bank1
  1307  0609  0829               	movf	(_b3+1)^(0+128),w
  1308  060A  1C03               	skipc
  1309  060B  0F29               	incfsz	(_b3+1)^(0+128),w
  1310  060C  2E0E               	goto	u971
  1311  060D  2E11               	goto	u972
  1312  060E                     u971:
  1313  060E  1283               	bcf	3,5	;RP0=0, select bank0
  1314  060F  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0610  02DE               	subwf	??_main+1,f
  1316  0611                     u972:
  1317  0611  1683               	bsf	3,5	;RP0=1, select bank1
  1318  0612  1303               	bcf	3,6	;RP1=0, select bank1
  1319  0613  082A               	movf	(_b3+2)^(0+128),w
  1320  0614  1C03               	skipc
  1321  0615  0F2A               	incfsz	(_b3+2)^(0+128),w
  1322  0616  2E18               	goto	u973
  1323  0617  2E1B               	goto	u974
  1324  0618                     u973:
  1325  0618  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0619  1303               	bcf	3,6	;RP1=0, select bank0
  1327  061A  02DF               	subwf	??_main+2,f
  1328  061B                     u974:
  1329  061B  1683               	bsf	3,5	;RP0=1, select bank1
  1330  061C  1303               	bcf	3,6	;RP1=0, select bank1
  1331  061D  082B               	movf	(_b3+3)^(0+128),w
  1332  061E  1C03               	skipc
  1333  061F  0F2B               	incfsz	(_b3+3)^(0+128),w
  1334  0620  2E22               	goto	u975
  1335  0621  2E25               	goto	u976
  1336  0622                     u975:
  1337  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0624  02E0               	subwf	??_main+3,f
  1340  0625                     u976:
  1341  0625  1683               	bsf	3,5	;RP0=1, select bank1
  1342  0626  1303               	bcf	3,6	;RP1=0, select bank1
  1343  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0629  0860               	movf	??_main+3,w
  1346  062A  00F3               	movwf	___lmul@multiplier+3
  1347  062B  085F               	movf	??_main+2,w
  1348  062C  00F2               	movwf	___lmul@multiplier+2
  1349  062D  085E               	movf	??_main+1,w
  1350  062E  00F1               	movwf	___lmul@multiplier+1
  1351  062F  085D               	movf	??_main,w
  1352  0630  00F0               	movwf	___lmul@multiplier
  1353  0631  0A6D               	incf	_oss,w
  1354  0632  00E1               	movwf	??_main+4
  1355  0633  3050               	movlw	80
  1356  0634  00E2               	movwf	??_main+5
  1357  0635  30C3               	movlw	195
  1358  0636  00E3               	movwf	??_main+6
  1359  0637  3000               	movlw	0
  1360  0638  00E4               	movwf	??_main+7
  1361  0639  3000               	movlw	0
  1362  063A  00E5               	movwf	??_main+8
  1363  063B  2E41               	goto	u980
  1364  063C                     u985:
  1365  063C  0D65               	rlf	??_main+8,w
  1366  063D  0CE5               	rrf	??_main+8,f
  1367  063E  0CE4               	rrf	??_main+7,f
  1368  063F  0CE3               	rrf	??_main+6,f
  1369  0640  0CE2               	rrf	??_main+5,f
  1370  0641                     u980:
  1371  0641  0BE1               	decfsz	??_main+4,f
  1372  0642  2E3C               	goto	u985
  1373  0643  0865               	movf	??_main+8,w
  1374  0644  00F7               	movwf	___lmul@multiplicand+3
  1375  0645  0864               	movf	??_main+7,w
  1376  0646  00F6               	movwf	___lmul@multiplicand+2
  1377  0647  0863               	movf	??_main+6,w
  1378  0648  00F5               	movwf	___lmul@multiplicand+1
  1379  0649  0862               	movf	??_main+5,w
  1380  064A  00F4               	movwf	___lmul@multiplicand
  1381  064B  120A  118A  2119  120A  118A  	fcall	___lmul
  1382  0650  0873               	movf	?___lmul+3,w
  1383  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0653  00AF               	movwf	_b7+3
  1386  0654  0872               	movf	?___lmul+2,w
  1387  0655  00AE               	movwf	_b7+2
  1388  0656  0871               	movf	?___lmul+1,w
  1389  0657  00AD               	movwf	_b7+1
  1390  0658  0870               	movf	?___lmul,w
  1391  0659  00AC               	movwf	_b7
  1392  065A                     l1430:
  1393                           
  1394                           ;main_bmp280.c: 53:         if (b7 < 0x80000000)
  1395  065A  3080               	movlw	128
  1396  065B  022F               	subwf	_b7+3,w
  1397  065C  1D03               	skipz
  1398  065D  2E6A               	goto	u993
  1399  065E  3000               	movlw	0
  1400  065F  022E               	subwf	_b7+2,w
  1401  0660  1D03               	skipz
  1402  0661  2E6A               	goto	u993
  1403  0662  3000               	movlw	0
  1404  0663  022D               	subwf	_b7+1,w
  1405  0664  1D03               	skipz
  1406  0665  2E6A               	goto	u993
  1407  0666  3000               	movlw	0
  1408  0667  022C               	subwf	_b7,w
  1409  0668  1D03               	skipz
  1410  0669  2E6A               	goto	u993
  1411  066A                     u993:
  1412  066A  1803               	btfsc	3,0
  1413  066B  2E6D               	goto	u991
  1414  066C  2E6E               	goto	u990
  1415  066D                     u991:
  1416  066D  2E91               	goto	l1434
  1417  066E                     u990:
  1418  066E                     l1432:
  1419                           
  1420                           ;main_bmp280.c: 54:         {;main_bmp280.c: 55:             p = (b7* 2)/ b4;
  1421  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1422  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0670  0833               	movf	_b4+3,w
  1424  0671  00F3               	movwf	___lldiv@divisor+3
  1425  0672  0832               	movf	_b4+2,w
  1426  0673  00F2               	movwf	___lldiv@divisor+2
  1427  0674  0831               	movf	_b4+1,w
  1428  0675  00F1               	movwf	___lldiv@divisor+1
  1429  0676  0830               	movf	_b4,w
  1430  0677  00F0               	movwf	___lldiv@divisor
  1431  0678  1003               	clrc
  1432  0679  0D2C               	rlf	_b7,w
  1433  067A  00F4               	movwf	___lldiv@dividend
  1434  067B  0D2D               	rlf	_b7+1,w
  1435  067C  00F5               	movwf	___lldiv@dividend+1
  1436  067D  0D2E               	rlf	_b7+2,w
  1437  067E  00F6               	movwf	___lldiv@dividend+2
  1438  067F  0D2F               	rlf	_b7+3,w
  1439  0680  00F7               	movwf	___lldiv@dividend+3
  1440  0681  120A  118A  215F  120A  118A  	fcall	___lldiv
  1441  0686  0873               	movf	?___lldiv+3,w
  1442  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0689  00CE               	movwf	_p+3
  1445  068A  0872               	movf	?___lldiv+2,w
  1446  068B  00CD               	movwf	_p+2
  1447  068C  0871               	movf	?___lldiv+1,w
  1448  068D  00CC               	movwf	_p+1
  1449  068E  0870               	movf	?___lldiv,w
  1450  068F  00CB               	movwf	_p
  1451                           
  1452                           ;main_bmp280.c: 56:         }
  1453  0690  2EB3               	goto	l178
  1454  0691                     l1434:
  1455                           
  1456                           ;main_bmp280.c: 58:         {;main_bmp280.c: 59:             p = (b7 / b4)* 2;
  1457  0691  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0692  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0693  0833               	movf	_b4+3,w
  1460  0694  00F3               	movwf	___lldiv@divisor+3
  1461  0695  0832               	movf	_b4+2,w
  1462  0696  00F2               	movwf	___lldiv@divisor+2
  1463  0697  0831               	movf	_b4+1,w
  1464  0698  00F1               	movwf	___lldiv@divisor+1
  1465  0699  0830               	movf	_b4,w
  1466  069A  00F0               	movwf	___lldiv@divisor
  1467  069B  082F               	movf	_b7+3,w
  1468  069C  00F7               	movwf	___lldiv@dividend+3
  1469  069D  082E               	movf	_b7+2,w
  1470  069E  00F6               	movwf	___lldiv@dividend+2
  1471  069F  082D               	movf	_b7+1,w
  1472  06A0  00F5               	movwf	___lldiv@dividend+1
  1473  06A1  082C               	movf	_b7,w
  1474  06A2  00F4               	movwf	___lldiv@dividend
  1475  06A3  120A  118A  215F  120A  118A  	fcall	___lldiv
  1476  06A8  1003               	clrc
  1477  06A9  0D70               	rlf	?___lldiv,w
  1478  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1479  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1480  06AC  00CB               	movwf	_p
  1481  06AD  0D71               	rlf	?___lldiv+1,w
  1482  06AE  00CC               	movwf	_p+1
  1483  06AF  0D72               	rlf	?___lldiv+2,w
  1484  06B0  00CD               	movwf	_p+2
  1485  06B1  0D73               	rlf	?___lldiv+3,w
  1486  06B2  00CE               	movwf	_p+3
  1487  06B3                     l178:	
  1488                           ;main_bmp280.c: 60:         }
  1489                           
  1490                           
  1491                           ;main_bmp280.c: 61:         x1 =(p/256)*(p/265);
  1492  06B3  3000               	movlw	0
  1493  06B4  00D2               	movwf	___aldiv@divisor+3
  1494  06B5  3000               	movlw	0
  1495  06B6  00D1               	movwf	___aldiv@divisor+2
  1496  06B7  3001               	movlw	1
  1497  06B8  00D0               	movwf	___aldiv@divisor+1
  1498  06B9  3000               	movlw	0
  1499  06BA  00CF               	movwf	___aldiv@divisor
  1500  06BB  084E               	movf	_p+3,w
  1501  06BC  00D6               	movwf	___aldiv@dividend+3
  1502  06BD  084D               	movf	_p+2,w
  1503  06BE  00D5               	movwf	___aldiv@dividend+2
  1504  06BF  084C               	movf	_p+1,w
  1505  06C0  00D4               	movwf	___aldiv@dividend+1
  1506  06C1  084B               	movf	_p,w
  1507  06C2  00D3               	movwf	___aldiv@dividend
  1508  06C3  120A  118A  21C5  120A  118A  	fcall	___aldiv
  1509  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1510  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1511  06CA  0852               	movf	?___aldiv+3,w
  1512  06CB  00F3               	movwf	___lmul@multiplier+3
  1513  06CC  0851               	movf	?___aldiv+2,w
  1514  06CD  00F2               	movwf	___lmul@multiplier+2
  1515  06CE  0850               	movf	?___aldiv+1,w
  1516  06CF  00F1               	movwf	___lmul@multiplier+1
  1517  06D0  084F               	movf	?___aldiv,w
  1518  06D1  00F0               	movwf	___lmul@multiplier
  1519  06D2  3000               	movlw	0
  1520  06D3  00D2               	movwf	___aldiv@divisor+3
  1521  06D4  3000               	movlw	0
  1522  06D5  00D1               	movwf	___aldiv@divisor+2
  1523  06D6  3001               	movlw	1
  1524  06D7  00D0               	movwf	___aldiv@divisor+1
  1525  06D8  3009               	movlw	9
  1526  06D9  00CF               	movwf	___aldiv@divisor
  1527  06DA  084E               	movf	_p+3,w
  1528  06DB  00D6               	movwf	___aldiv@dividend+3
  1529  06DC  084D               	movf	_p+2,w
  1530  06DD  00D5               	movwf	___aldiv@dividend+2
  1531  06DE  084C               	movf	_p+1,w
  1532  06DF  00D4               	movwf	___aldiv@dividend+1
  1533  06E0  084B               	movf	_p,w
  1534  06E1  00D3               	movwf	___aldiv@dividend
  1535  06E2  120A  118A  21C5  120A  118A  	fcall	___aldiv
  1536  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1537  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1538  06E9  0852               	movf	?___aldiv+3,w
  1539  06EA  00F7               	movwf	___lmul@multiplicand+3
  1540  06EB  0851               	movf	?___aldiv+2,w
  1541  06EC  00F6               	movwf	___lmul@multiplicand+2
  1542  06ED  0850               	movf	?___aldiv+1,w
  1543  06EE  00F5               	movwf	___lmul@multiplicand+1
  1544  06EF  084F               	movf	?___aldiv,w
  1545  06F0  00F4               	movwf	___lmul@multiplicand
  1546  06F1  120A  118A  2119  120A  118A  	fcall	___lmul
  1547  06F6  0873               	movf	?___lmul+3,w
  1548  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1549  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1550  06F9  00AB               	movwf	_x1+3
  1551  06FA  0872               	movf	?___lmul+2,w
  1552  06FB  00AA               	movwf	_x1+2
  1553  06FC  0871               	movf	?___lmul+1,w
  1554  06FD  00A9               	movwf	_x1+1
  1555  06FE  0870               	movf	?___lmul,w
  1556  06FF  00A8               	movwf	_x1
  1557                           
  1558                           ;main_bmp280.c: 62:         x1 = (x1 * 3038)/65536;
  1559  0700  3000               	movlw	0
  1560  0701  00D2               	movwf	___aldiv@divisor+3
  1561  0702  3001               	movlw	1
  1562  0703  00D1               	movwf	___aldiv@divisor+2
  1563  0704  3000               	movlw	0
  1564  0705  00D0               	movwf	___aldiv@divisor+1
  1565  0706  3000               	movlw	0
  1566  0707  00CF               	movwf	___aldiv@divisor
  1567  0708  082B               	movf	_x1+3,w
  1568  0709  00F3               	movwf	___lmul@multiplier+3
  1569  070A  082A               	movf	_x1+2,w
  1570  070B  00F2               	movwf	___lmul@multiplier+2
  1571  070C  0829               	movf	_x1+1,w
  1572  070D  00F1               	movwf	___lmul@multiplier+1
  1573  070E  0828               	movf	_x1,w
  1574  070F  00F0               	movwf	___lmul@multiplier
  1575  0710  3000               	movlw	0
  1576  0711  00F7               	movwf	___lmul@multiplicand+3
  1577  0712  3000               	movlw	0
  1578  0713  00F6               	movwf	___lmul@multiplicand+2
  1579  0714  300B               	movlw	11
  1580  0715  00F5               	movwf	___lmul@multiplicand+1
  1581  0716  30DE               	movlw	222
  1582  0717  00F4               	movwf	___lmul@multiplicand
  1583  0718  120A  118A  2119  120A  118A  	fcall	___lmul
  1584  071D  0873               	movf	?___lmul+3,w
  1585  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1586  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0720  00D6               	movwf	___aldiv@dividend+3
  1588  0721  0872               	movf	?___lmul+2,w
  1589  0722  00D5               	movwf	___aldiv@dividend+2
  1590  0723  0871               	movf	?___lmul+1,w
  1591  0724  00D4               	movwf	___aldiv@dividend+1
  1592  0725  0870               	movf	?___lmul,w
  1593  0726  00D3               	movwf	___aldiv@dividend
  1594  0727  120A  118A  21C5  120A  118A  	fcall	___aldiv
  1595  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1596  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1597  072E  0852               	movf	?___aldiv+3,w
  1598  072F  00AB               	movwf	_x1+3
  1599  0730  0851               	movf	?___aldiv+2,w
  1600  0731  00AA               	movwf	_x1+2
  1601  0732  0850               	movf	?___aldiv+1,w
  1602  0733  00A9               	movwf	_x1+1
  1603  0734  084F               	movf	?___aldiv,w
  1604  0735  00A8               	movwf	_x1
  1605                           
  1606                           ;main_bmp280.c: 63:         x2 = (-7357 * p) / 25536;
  1607  0736  3000               	movlw	0
  1608  0737  00D2               	movwf	___aldiv@divisor+3
  1609  0738  3000               	movlw	0
  1610  0739  00D1               	movwf	___aldiv@divisor+2
  1611  073A  3063               	movlw	99
  1612  073B  00D0               	movwf	___aldiv@divisor+1
  1613  073C  30C0               	movlw	192
  1614  073D  00CF               	movwf	___aldiv@divisor
  1615  073E  084E               	movf	_p+3,w
  1616  073F  00F3               	movwf	___lmul@multiplier+3
  1617  0740  084D               	movf	_p+2,w
  1618  0741  00F2               	movwf	___lmul@multiplier+2
  1619  0742  084C               	movf	_p+1,w
  1620  0743  00F1               	movwf	___lmul@multiplier+1
  1621  0744  084B               	movf	_p,w
  1622  0745  00F0               	movwf	___lmul@multiplier
  1623  0746  30FF               	movlw	255
  1624  0747  00F7               	movwf	___lmul@multiplicand+3
  1625  0748  30FF               	movlw	255
  1626  0749  00F6               	movwf	___lmul@multiplicand+2
  1627  074A  30E3               	movlw	227
  1628  074B  00F5               	movwf	___lmul@multiplicand+1
  1629  074C  3043               	movlw	67
  1630  074D  00F4               	movwf	___lmul@multiplicand
  1631  074E  120A  118A  2119  120A  118A  	fcall	___lmul
  1632  0753  0873               	movf	?___lmul+3,w
  1633  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0756  00D6               	movwf	___aldiv@dividend+3
  1636  0757  0872               	movf	?___lmul+2,w
  1637  0758  00D5               	movwf	___aldiv@dividend+2
  1638  0759  0871               	movf	?___lmul+1,w
  1639  075A  00D4               	movwf	___aldiv@dividend+1
  1640  075B  0870               	movf	?___lmul,w
  1641  075C  00D3               	movwf	___aldiv@dividend
  1642  075D  120A  118A  21C5  120A  118A  	fcall	___aldiv
  1643  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0764  0852               	movf	?___aldiv+3,w
  1646  0765  00A7               	movwf	_x2+3
  1647  0766  0851               	movf	?___aldiv+2,w
  1648  0767  00A6               	movwf	_x2+2
  1649  0768  0850               	movf	?___aldiv+1,w
  1650  0769  00A5               	movwf	_x2+1
  1651  076A  084F               	movf	?___aldiv,w
  1652  076B  00A4               	movwf	_x2
  1653                           
  1654                           ;main_bmp280.c: 64:         p=p+(x1+x2+3791)/16;
  1655  076C  3000               	movlw	0
  1656  076D  00D2               	movwf	___aldiv@divisor+3
  1657  076E  3000               	movlw	0
  1658  076F  00D1               	movwf	___aldiv@divisor+2
  1659  0770  3000               	movlw	0
  1660  0771  00D0               	movwf	___aldiv@divisor+1
  1661  0772  3010               	movlw	16
  1662  0773  00CF               	movwf	___aldiv@divisor
  1663  0774  30CF               	movlw	207
  1664  0775  00DD               	movwf	??_main
  1665  0776  300E               	movlw	14
  1666  0777  00DE               	movwf	??_main+1
  1667  0778  3000               	movlw	0
  1668  0779  00DF               	movwf	??_main+2
  1669  077A  3000               	movlw	0
  1670  077B  00E0               	movwf	??_main+3
  1671  077C  0828               	movf	_x1,w
  1672  077D  0724               	addwf	_x2,w
  1673  077E  00E1               	movwf	??_main+4
  1674  077F  3000               	movlw	0
  1675  0780  1803               	skipnc
  1676  0781  3001               	movlw	1
  1677  0782  0729               	addwf	_x1+1,w
  1678  0783  01E3               	clrf	??_main+6
  1679  0784  1803               	skipnc
  1680  0785  0AE3               	incf	??_main+6,f
  1681  0786  0725               	addwf	_x2+1,w
  1682  0787  00E2               	movwf	??_main+5
  1683  0788  1803               	skipnc
  1684  0789  0AE3               	incf	??_main+6,f
  1685  078A  082A               	movf	_x1+2,w
  1686  078B  0763               	addwf	??_main+6,w
  1687  078C  01E4               	clrf	??_main+7
  1688  078D  1803               	skipnc
  1689  078E  0AE4               	incf	??_main+7,f
  1690  078F  0726               	addwf	_x2+2,w
  1691  0790  00E3               	movwf	??_main+6
  1692  0791  1803               	skipnc
  1693  0792  0AE4               	incf	??_main+7,f
  1694  0793  082B               	movf	_x1+3,w
  1695  0794  0764               	addwf	??_main+7,w
  1696  0795  0727               	addwf	_x2+3,w
  1697  0796  00E4               	movwf	??_main+7
  1698  0797  0861               	movf	??_main+4,w
  1699  0798  07DD               	addwf	??_main,f
  1700  0799  0862               	movf	??_main+5,w
  1701  079A  1803               	skipnc
  1702  079B  0F62               	incfsz	??_main+5,w
  1703  079C  2F9E               	goto	u1000
  1704  079D  2F9F               	goto	u1001
  1705  079E                     u1000:
  1706  079E  07DE               	addwf	??_main+1,f
  1707  079F                     u1001:
  1708  079F  0863               	movf	??_main+6,w
  1709  07A0  1803               	skipnc
  1710  07A1  0F63               	incfsz	??_main+6,w
  1711  07A2  2FA4               	goto	u1002
  1712  07A3  2FA5               	goto	u1003
  1713  07A4                     u1002:
  1714  07A4  07DF               	addwf	??_main+2,f
  1715  07A5                     u1003:
  1716  07A5  0864               	movf	??_main+7,w
  1717  07A6  1803               	skipnc
  1718  07A7  0A64               	incf	??_main+7,w
  1719  07A8  07E0               	addwf	??_main+3,f
  1720  07A9  0860               	movf	??_main+3,w
  1721  07AA  00D6               	movwf	___aldiv@dividend+3
  1722  07AB  085F               	movf	??_main+2,w
  1723  07AC  00D5               	movwf	___aldiv@dividend+2
  1724  07AD  085E               	movf	??_main+1,w
  1725  07AE  00D4               	movwf	___aldiv@dividend+1
  1726  07AF  085D               	movf	??_main,w
  1727  07B0  00D3               	movwf	___aldiv@dividend
  1728  07B1  120A  118A  21C5  120A  118A  	fcall	___aldiv
  1729  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1730  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1731  07B8  084F               	movf	?___aldiv,w
  1732  07B9  074B               	addwf	_p,w
  1733  07BA  00E5               	movwf	??_main+8
  1734  07BB  3000               	movlw	0
  1735  07BC  1803               	skipnc
  1736  07BD  3001               	movlw	1
  1737  07BE  0750               	addwf	?___aldiv+1,w
  1738  07BF  01E7               	clrf	??_main+10
  1739  07C0  1803               	skipnc
  1740  07C1  0AE7               	incf	??_main+10,f
  1741  07C2  074C               	addwf	_p+1,w
  1742  07C3  00E6               	movwf	??_main+9
  1743  07C4  1803               	skipnc
  1744  07C5  0AE7               	incf	??_main+10,f
  1745  07C6  0851               	movf	?___aldiv+2,w
  1746  07C7  0767               	addwf	??_main+10,w
  1747  07C8  01E8               	clrf	??_main+11
  1748  07C9  1803               	skipnc
  1749  07CA  0AE8               	incf	??_main+11,f
  1750  07CB  074D               	addwf	_p+2,w
  1751  07CC  00E7               	movwf	??_main+10
  1752  07CD  1803               	skipnc
  1753  07CE  0AE8               	incf	??_main+11,f
  1754  07CF  0852               	movf	?___aldiv+3,w
  1755  07D0  0768               	addwf	??_main+11,w
  1756  07D1  074E               	addwf	_p+3,w
  1757  07D2  00E8               	movwf	??_main+11
  1758  07D3  0868               	movf	??_main+11,w
  1759  07D4  00CE               	movwf	_p+3
  1760  07D5  0867               	movf	??_main+10,w
  1761  07D6  00CD               	movwf	_p+2
  1762  07D7  0866               	movf	??_main+9,w
  1763  07D8  00CC               	movwf	_p+1
  1764  07D9  0865               	movf	??_main+8,w
  1765  07DA  00CB               	movwf	_p
  1766  07DB  2B49               	goto	l1402
  1767  07DC  120A  118A  2800   	ljmp	start
  1768  07DF                     __end_of_main:
  1769                           
  1770                           	psect	text1
  1771  000A                     __ptext1:	
  1772 ;; *************** function _show *****************
  1773 ;; Defined at:
  1774 ;;		line 79 in file "./lcd4bit.h"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  s               1    wreg     PTR unsigned char 
  1777 ;;		 -> STR_1(7), 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  s               1    4[COMMON] PTR unsigned char 
  1780 ;;		 -> STR_1(7), 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       0       0       0       0
  1791 ;;      Locals:         1       0       0       0       0
  1792 ;;      Temps:          1       0       0       0       0
  1793 ;;      Totals:         2       0       0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 1
  1797 ;; This function calls:
  1798 ;;		_LCD_Char
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _show
  1806  000A                     _show:
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1810                           ;show@s stored from wreg
  1811  000A  00F4               	movwf	show@s
  1812  000B                     l1222:
  1813                           
  1814                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
  1815  000B  281C               	goto	l1228
  1816  000C                     l1224:
  1817                           
  1818                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
  1819  000C  0874               	movf	show@s,w
  1820  000D  0084               	movwf	4
  1821  000E  120A  158A  2000  120A  118A  	fcall	stringdir
  1822  0013  120A  118A  20D9  120A  118A  	fcall	_LCD_Char
  1823  0018                     l1226:
  1824  0018  3001               	movlw	1
  1825  0019  00F3               	movwf	??_show
  1826  001A  0873               	movf	??_show,w
  1827  001B  07F4               	addwf	show@s,f
  1828  001C                     l1228:
  1829                           
  1830                           ;./lcd4bit.h: 81:     while(*s) {
  1831  001C  0874               	movf	show@s,w
  1832  001D  0084               	movwf	4
  1833  001E  120A  158A  2000  120A  118A  	fcall	stringdir
  1834  0023  3A00               	xorlw	0
  1835  0024  1D03               	skipz
  1836  0025  2827               	goto	u611
  1837  0026  2828               	goto	u610
  1838  0027                     u611:
  1839  0027  280C               	goto	l1224
  1840  0028                     u610:
  1841  0028                     l110:
  1842  0028  0008               	return
  1843  0029                     __end_of_show:
  1844                           
  1845                           	psect	text2
  1846  0FC9                     __ptext2:	
  1847 ;; *************** function _print_checkdata *****************
  1848 ;; Defined at:
  1849 ;;		line 83 in file "main_bmp280.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0
  1866 ;;      Totals:         0       0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 1
  1870 ;; This function calls:
  1871 ;;		_LCD_Char
  1872 ;;		_LCD_Command
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _print_checkdata
  1880  0FC9                     _print_checkdata:
  1881  0FC9                     l1232:	
  1882                           ;incstack = 0
  1883                           ; Regs used in _print_checkdata: [wreg+status,2+status,0+pclath+cstack]
  1884                           
  1885                           
  1886                           ;main_bmp280.c: 85:     LCD_Command(0xC0);
  1887  0FC9  30C0               	movlw	192
  1888  0FCA  120A  118A  2099  120A  158A  	fcall	_LCD_Command
  1889                           
  1890                           ;main_bmp280.c: 86:     LCD_Char(aa+0x30);
  1891  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0FD1  083C               	movf	_aa,w
  1894  0FD2  3E30               	addlw	48
  1895  0FD3  120A  118A  20D9  120A  158A  	fcall	_LCD_Char
  1896  0FD8                     l187:
  1897  0FD8  0008               	return
  1898  0FD9                     __end_of_print_checkdata:
  1899                           
  1900                           	psect	text3
  1901  00D9                     __ptext3:	
  1902 ;; *************** function _LCD_Char *****************
  1903 ;; Defined at:
  1904 ;;		line 27 in file "./lcd4bit.h"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  data            1    wreg     unsigned char 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  data            1    2[COMMON] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       0       0       0       0
  1919 ;;      Locals:         1       0       0       0       0
  1920 ;;      Temps:          2       0       0       0       0
  1921 ;;      Totals:         3       0       0       0       0
  1922 ;;Total ram usage:        3 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_show
  1928 ;;		_print_checkdata
  1929 ;;		_LCD_num
  1930 ;;		_show_multidigits
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _LCD_Char
  1936  00D9                     _LCD_Char:
  1937                           
  1938                           ;incstack = 0
  1939                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1940                           ;LCD_Char@data stored from wreg
  1941  00D9  00F2               	movwf	LCD_Char@data
  1942  00DA                     l1184:
  1943                           
  1944                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  1945  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1946  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1947  00DC  1407               	bsf	7,0	;volatile
  1948  00DD                     l1186:
  1949                           
  1950                           ;./lcd4bit.h: 30:     PORTB = data;
  1951  00DD  0872               	movf	LCD_Char@data,w
  1952  00DE  0086               	movwf	6	;volatile
  1953  00DF                     l1188:
  1954                           
  1955                           ;./lcd4bit.h: 31:     RC1 = 1;
  1956  00DF  1487               	bsf	7,1	;volatile
  1957                           
  1958                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1959  00E0  3041               	movlw	65
  1960  00E1  00F1               	movwf	??_LCD_Char+1
  1961  00E2  30EE               	movlw	238
  1962  00E3  00F0               	movwf	??_LCD_Char
  1963  00E4                     u1087:
  1964  00E4  0BF0               	decfsz	??_LCD_Char,f
  1965  00E5  28E4               	goto	u1087
  1966  00E6  0BF1               	decfsz	??_LCD_Char+1,f
  1967  00E7  28E4               	goto	u1087
  1968  00E8  0000               	nop
  1969  00E9                     l1190:
  1970                           
  1971                           ;./lcd4bit.h: 33:     RC1 = 0;
  1972  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1973  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1974  00EB  1087               	bcf	7,1	;volatile
  1975                           
  1976                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1977  00EC  3041               	movlw	65
  1978  00ED  00F1               	movwf	??_LCD_Char+1
  1979  00EE  30EE               	movlw	238
  1980  00EF  00F0               	movwf	??_LCD_Char
  1981  00F0                     u1097:
  1982  00F0  0BF0               	decfsz	??_LCD_Char,f
  1983  00F1  28F0               	goto	u1097
  1984  00F2  0BF1               	decfsz	??_LCD_Char+1,f
  1985  00F3  28F0               	goto	u1097
  1986  00F4  0000               	nop
  1987  00F5                     l1192:
  1988                           
  1989                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  1990  00F5  0872               	movf	LCD_Char@data,w
  1991  00F6  00F0               	movwf	??_LCD_Char
  1992  00F7  3003               	movlw	3
  1993  00F8                     u585:
  1994  00F8  1003               	clrc
  1995  00F9  0DF0               	rlf	??_LCD_Char,f
  1996  00FA  3EFF               	addlw	-1
  1997  00FB  1D03               	skipz
  1998  00FC  28F8               	goto	u585
  1999  00FD  1003               	clrc
  2000  00FE  0D70               	rlf	??_LCD_Char,w
  2001  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0101  0086               	movwf	6	;volatile
  2004  0102                     l1194:
  2005                           
  2006                           ;./lcd4bit.h: 36:     RC1 = 1;
  2007  0102  1487               	bsf	7,1	;volatile
  2008  0103                     l1196:
  2009                           
  2010                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2011  0103  3041               	movlw	65
  2012  0104  00F1               	movwf	??_LCD_Char+1
  2013  0105  30EE               	movlw	238
  2014  0106  00F0               	movwf	??_LCD_Char
  2015  0107                     u1107:
  2016  0107  0BF0               	decfsz	??_LCD_Char,f
  2017  0108  2907               	goto	u1107
  2018  0109  0BF1               	decfsz	??_LCD_Char+1,f
  2019  010A  2907               	goto	u1107
  2020  010B  0000               	nop
  2021  010C                     l1198:
  2022                           
  2023                           ;./lcd4bit.h: 38:     RC1 = 0;
  2024  010C  1283               	bcf	3,5	;RP0=0, select bank0
  2025  010D  1303               	bcf	3,6	;RP1=0, select bank0
  2026  010E  1087               	bcf	7,1	;volatile
  2027  010F                     l1200:
  2028                           
  2029                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2030  010F  3041               	movlw	65
  2031  0110  00F1               	movwf	??_LCD_Char+1
  2032  0111  30EE               	movlw	238
  2033  0112  00F0               	movwf	??_LCD_Char
  2034  0113                     u1117:
  2035  0113  0BF0               	decfsz	??_LCD_Char,f
  2036  0114  2913               	goto	u1117
  2037  0115  0BF1               	decfsz	??_LCD_Char+1,f
  2038  0116  2913               	goto	u1117
  2039  0117  0000               	nop
  2040  0118                     l98:
  2041  0118  0008               	return
  2042  0119                     __end_of_LCD_Char:
  2043                           
  2044                           	psect	text4
  2045  0FEA                     __ptext4:	
  2046 ;; *************** function _bmp280_init *****************
  2047 ;; Defined at:
  2048 ;;		line 15 in file "./p03a_bmp280.h"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0
  2065 ;;      Totals:         0       0       0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function _bmp280_init
  2077  0FEA                     _bmp280_init:
  2078  0FEA                     l1202:	
  2079                           ;incstack = 0
  2080                           ; Regs used in _bmp280_init: [wreg]
  2081                           
  2082                           
  2083                           ;./p03a_bmp280.h: 17:     TRISC3=TRISC4=1;
  2084  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2085  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2086  0FEC  1607               	bsf	7,4	;volatile
  2087  0FED  1A07               	btfsc	7,4	;volatile
  2088  0FEE  2FF0               	goto	u591
  2089  0FEF  2FF4               	goto	u590
  2090  0FF0                     u591:
  2091  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  2093  0FF2  1587               	bsf	7,3	;volatile
  2094  0FF3  2FF7               	goto	u604
  2095  0FF4                     u590:
  2096  0FF4  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0FF5  1303               	bcf	3,6	;RP1=0, select bank1
  2098  0FF6  1187               	bcf	7,3	;volatile
  2099  0FF7                     u604:
  2100  0FF7                     l1204:
  2101                           
  2102                           ;./p03a_bmp280.h: 18:     SSPCON=0x28;
  2103  0FF7  3028               	movlw	40
  2104  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0FFA  0094               	movwf	20	;volatile
  2107                           
  2108                           ;./p03a_bmp280.h: 19:     SSPADD=((11059200/4)/100)-1;
  2109  0FFB  30FF               	movlw	255
  2110  0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0FFE  0093               	movwf	19	;volatile
  2113  0FFF                     l49:
  2114  0FFF  0008               	return
  2115  1000                     __end_of_bmp280_init:
  2116                           
  2117                           	psect	text5
  2118  0262                     __ptext5:	
  2119 ;; *************** function _bmp280_getdata *****************
  2120 ;; Defined at:
  2121 ;;		line 68 in file "main_bmp280.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          4       0       0       0       0
  2138 ;;      Totals:         4       0       0       0       0
  2139 ;;Total ram usage:        4 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 3
  2142 ;; This function calls:
  2143 ;;		_bmp280_read_byte
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _bmp280_getdata
  2151  0262                     _bmp280_getdata:
  2152  0262                     l1230:	
  2153                           ;incstack = 0
  2154                           ; Regs used in _bmp280_getdata: [wreg+status,2+status,0+pclath+cstack]
  2155                           
  2156                           
  2157                           ;main_bmp280.c: 70:         aa=(bmp280_read_byte(0xAA));
  2158  0262  30AA               	movlw	170
  2159  0263  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2160  0268  00F4               	movwf	??_bmp280_getdata
  2161  0269  01F5               	clrf	??_bmp280_getdata+1
  2162  026A  01F6               	clrf	??_bmp280_getdata+2
  2163  026B  01F7               	clrf	??_bmp280_getdata+3
  2164  026C  0877               	movf	??_bmp280_getdata+3,w
  2165  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2166  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2167  026F  00BF               	movwf	_aa+3
  2168  0270  0876               	movf	??_bmp280_getdata+2,w
  2169  0271  00BE               	movwf	_aa+2
  2170  0272  0875               	movf	??_bmp280_getdata+1,w
  2171  0273  00BD               	movwf	_aa+1
  2172  0274  0874               	movf	??_bmp280_getdata,w
  2173  0275  00BC               	movwf	_aa
  2174                           
  2175                           ;main_bmp280.c: 71:         ab=(bmp280_read_byte(0xAB));
  2176  0276  30AB               	movlw	171
  2177  0277  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2178  027C  00F4               	movwf	??_bmp280_getdata
  2179  027D  01F5               	clrf	??_bmp280_getdata+1
  2180  027E  01F6               	clrf	??_bmp280_getdata+2
  2181  027F  01F7               	clrf	??_bmp280_getdata+3
  2182  0280  0877               	movf	??_bmp280_getdata+3,w
  2183  0281  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0282  1303               	bcf	3,6	;RP1=0, select bank1
  2185  0283  00C7               	movwf	(_ab+3)^(0+128)
  2186  0284  0876               	movf	??_bmp280_getdata+2,w
  2187  0285  00C6               	movwf	(_ab+2)^(0+128)
  2188  0286  0875               	movf	??_bmp280_getdata+1,w
  2189  0287  00C5               	movwf	(_ab+1)^(0+128)
  2190  0288  0874               	movf	??_bmp280_getdata,w
  2191  0289  00C4               	movwf	_ab^(0+128)
  2192                           
  2193                           ;main_bmp280.c: 72:         ac=(bmp280_read_byte(0xAC));
  2194  028A  30AC               	movlw	172
  2195  028B  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2196  0290  00F4               	movwf	??_bmp280_getdata
  2197  0291  01F5               	clrf	??_bmp280_getdata+1
  2198  0292  01F6               	clrf	??_bmp280_getdata+2
  2199  0293  01F7               	clrf	??_bmp280_getdata+3
  2200  0294  0877               	movf	??_bmp280_getdata+3,w
  2201  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0297  00C3               	movwf	(_ac+3)^(0+128)
  2204  0298  0876               	movf	??_bmp280_getdata+2,w
  2205  0299  00C2               	movwf	(_ac+2)^(0+128)
  2206  029A  0875               	movf	??_bmp280_getdata+1,w
  2207  029B  00C1               	movwf	(_ac+1)^(0+128)
  2208  029C  0874               	movf	??_bmp280_getdata,w
  2209  029D  00C0               	movwf	_ac^(0+128)
  2210                           
  2211                           ;main_bmp280.c: 73:         ad=(bmp280_read_byte(0xAD));
  2212  029E  30AD               	movlw	173
  2213  029F  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2214  02A4  00F4               	movwf	??_bmp280_getdata
  2215  02A5  01F5               	clrf	??_bmp280_getdata+1
  2216  02A6  01F6               	clrf	??_bmp280_getdata+2
  2217  02A7  01F7               	clrf	??_bmp280_getdata+3
  2218  02A8  0877               	movf	??_bmp280_getdata+3,w
  2219  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2220  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2221  02AB  00BF               	movwf	(_ad+3)^(0+128)
  2222  02AC  0876               	movf	??_bmp280_getdata+2,w
  2223  02AD  00BE               	movwf	(_ad+2)^(0+128)
  2224  02AE  0875               	movf	??_bmp280_getdata+1,w
  2225  02AF  00BD               	movwf	(_ad+1)^(0+128)
  2226  02B0  0874               	movf	??_bmp280_getdata,w
  2227  02B1  00BC               	movwf	_ad^(0+128)
  2228                           
  2229                           ;main_bmp280.c: 74:         ae=(bmp280_read_byte(0xAE));
  2230  02B2  30AE               	movlw	174
  2231  02B3  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2232  02B8  00F4               	movwf	??_bmp280_getdata
  2233  02B9  01F5               	clrf	??_bmp280_getdata+1
  2234  02BA  01F6               	clrf	??_bmp280_getdata+2
  2235  02BB  01F7               	clrf	??_bmp280_getdata+3
  2236  02BC  0877               	movf	??_bmp280_getdata+3,w
  2237  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2238  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2239  02BF  00BB               	movwf	(_ae+3)^(0+128)
  2240  02C0  0876               	movf	??_bmp280_getdata+2,w
  2241  02C1  00BA               	movwf	(_ae+2)^(0+128)
  2242  02C2  0875               	movf	??_bmp280_getdata+1,w
  2243  02C3  00B9               	movwf	(_ae+1)^(0+128)
  2244  02C4  0874               	movf	??_bmp280_getdata,w
  2245  02C5  00B8               	movwf	_ae^(0+128)
  2246                           
  2247                           ;main_bmp280.c: 75:         af=(bmp280_read_byte(0xAF));
  2248  02C6  30AF               	movlw	175
  2249  02C7  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2250  02CC  00F4               	movwf	??_bmp280_getdata
  2251  02CD  01F5               	clrf	??_bmp280_getdata+1
  2252  02CE  01F6               	clrf	??_bmp280_getdata+2
  2253  02CF  01F7               	clrf	??_bmp280_getdata+3
  2254  02D0  0877               	movf	??_bmp280_getdata+3,w
  2255  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2256  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2257  02D3  00B7               	movwf	(_af+3)^(0+128)
  2258  02D4  0876               	movf	??_bmp280_getdata+2,w
  2259  02D5  00B6               	movwf	(_af+2)^(0+128)
  2260  02D6  0875               	movf	??_bmp280_getdata+1,w
  2261  02D7  00B5               	movwf	(_af+1)^(0+128)
  2262  02D8  0874               	movf	??_bmp280_getdata,w
  2263  02D9  00B4               	movwf	_af^(0+128)
  2264                           
  2265                           ;main_bmp280.c: 77:         b0=(bmp280_read_byte(0xB0));
  2266  02DA  30B0               	movlw	176
  2267  02DB  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2268  02E0  00F4               	movwf	??_bmp280_getdata
  2269  02E1  01F5               	clrf	??_bmp280_getdata+1
  2270  02E2  01F6               	clrf	??_bmp280_getdata+2
  2271  02E3  01F7               	clrf	??_bmp280_getdata+3
  2272  02E4  0877               	movf	??_bmp280_getdata+3,w
  2273  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2274  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2275  02E7  00B3               	movwf	(_b0+3)^(0+128)
  2276  02E8  0876               	movf	??_bmp280_getdata+2,w
  2277  02E9  00B2               	movwf	(_b0+2)^(0+128)
  2278  02EA  0875               	movf	??_bmp280_getdata+1,w
  2279  02EB  00B1               	movwf	(_b0+1)^(0+128)
  2280  02EC  0874               	movf	??_bmp280_getdata,w
  2281  02ED  00B0               	movwf	_b0^(0+128)
  2282                           
  2283                           ;main_bmp280.c: 78:         b1=(bmp280_read_byte(0xB1));
  2284  02EE  30B1               	movlw	177
  2285  02EF  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2286  02F4  00F4               	movwf	??_bmp280_getdata
  2287  02F5  01F5               	clrf	??_bmp280_getdata+1
  2288  02F6  01F6               	clrf	??_bmp280_getdata+2
  2289  02F7  01F7               	clrf	??_bmp280_getdata+3
  2290  02F8  0877               	movf	??_bmp280_getdata+3,w
  2291  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2292  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2293  02FB  00BB               	movwf	_b1+3
  2294  02FC  0876               	movf	??_bmp280_getdata+2,w
  2295  02FD  00BA               	movwf	_b1+2
  2296  02FE  0875               	movf	??_bmp280_getdata+1,w
  2297  02FF  00B9               	movwf	_b1+1
  2298  0300  0874               	movf	??_bmp280_getdata,w
  2299  0301  00B8               	movwf	_b1
  2300                           
  2301                           ;main_bmp280.c: 79:         b2=(bmp280_read_byte(0xB2));
  2302  0302  30B2               	movlw	178
  2303  0303  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2304  0308  00F4               	movwf	??_bmp280_getdata
  2305  0309  01F5               	clrf	??_bmp280_getdata+1
  2306  030A  01F6               	clrf	??_bmp280_getdata+2
  2307  030B  01F7               	clrf	??_bmp280_getdata+3
  2308  030C  0877               	movf	??_bmp280_getdata+3,w
  2309  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2310  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2311  030F  00AF               	movwf	(_b2+3)^(0+128)
  2312  0310  0876               	movf	??_bmp280_getdata+2,w
  2313  0311  00AE               	movwf	(_b2+2)^(0+128)
  2314  0312  0875               	movf	??_bmp280_getdata+1,w
  2315  0313  00AD               	movwf	(_b2+1)^(0+128)
  2316  0314  0874               	movf	??_bmp280_getdata,w
  2317  0315  00AC               	movwf	_b2^(0+128)
  2318                           
  2319                           ;main_bmp280.c: 80:         b5=(bmp280_read_byte(0xB5));
  2320  0316  30B5               	movlw	181
  2321  0317  120A  118A  205F  120A  118A  	fcall	_bmp280_read_byte
  2322  031C  00F4               	movwf	??_bmp280_getdata
  2323  031D  01F5               	clrf	??_bmp280_getdata+1
  2324  031E  01F6               	clrf	??_bmp280_getdata+2
  2325  031F  01F7               	clrf	??_bmp280_getdata+3
  2326  0320  0877               	movf	??_bmp280_getdata+3,w
  2327  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2328  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2329  0323  00A7               	movwf	(_b5+3)^(0+128)
  2330  0324  0876               	movf	??_bmp280_getdata+2,w
  2331  0325  00A6               	movwf	(_b5+2)^(0+128)
  2332  0326  0875               	movf	??_bmp280_getdata+1,w
  2333  0327  00A5               	movwf	(_b5+1)^(0+128)
  2334  0328  0874               	movf	??_bmp280_getdata,w
  2335  0329  00A4               	movwf	_b5^(0+128)
  2336  032A                     l184:
  2337  032A  0008               	return
  2338  032B                     __end_of_bmp280_getdata:
  2339                           
  2340                           	psect	text6
  2341  005F                     __ptext6:	
  2342 ;; *************** function _bmp280_read_byte *****************
  2343 ;; Defined at:
  2344 ;;		line 73 in file "./p03a_bmp280.h"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  addr            1    wreg     unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  addr            1    2[COMMON] unsigned char 
  2349 ;;  rec             1    3[COMMON] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      unsigned char 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       0       0       0       0
  2360 ;;      Locals:         2       0       0       0       0
  2361 ;;      Temps:          1       0       0       0       0
  2362 ;;      Totals:         3       0       0       0       0
  2363 ;;Total ram usage:        3 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 2
  2366 ;; This function calls:
  2367 ;;		_bmp280_nak
  2368 ;;		_bmp280_read
  2369 ;;		_bmp280_restart
  2370 ;;		_bmp280_send
  2371 ;;		_bmp280_stop
  2372 ;;		_waitmssp
  2373 ;; This function is called by:
  2374 ;;		_bmp280_getdata
  2375 ;;		_uncompensated_pressure
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function _bmp280_read_byte
  2381  005F                     _bmp280_read_byte:
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _bmp280_read_byte: [wreg+status,2+status,0+pclath+cstack]
  2385                           ;bmp280_read_byte@addr stored from wreg
  2386  005F  00F2               	movwf	bmp280_read_byte@addr
  2387  0060                     l86:	
  2388                           ;./p03a_bmp280.h: 73: unsigned char bmp280_read_byte(unsigned char addr);./p03a_bmp280.h
      +                          : 74: {;./p03a_bmp280.h: 75:     unsigned char rec;;./p03a_bmp280.h: 76: L: bmp280_resta
      +                          rt();
  2389                           
  2390  0060                     l1146:
  2391  0060  120A  158A  27A1  120A  118A  	fcall	_bmp280_restart
  2392  0065                     l1148:
  2393                           
  2394                           ;./p03a_bmp280.h: 77:     SSPBUF=0xEE;
  2395  0065  30EE               	movlw	238
  2396  0066  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0067  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0068  0093               	movwf	19	;volatile
  2399  0069                     l1150:
  2400                           
  2401                           ;./p03a_bmp280.h: 78:     waitmssp();
  2402  0069  120A  158A  2791  120A  118A  	fcall	_waitmssp
  2403  006E                     l87:	
  2404                           ;./p03a_bmp280.h: 79:     while(ACKSTAT){goto L;}
  2405                           
  2406  006E  1683               	bsf	3,5	;RP0=1, select bank1
  2407  006F  1303               	bcf	3,6	;RP1=0, select bank1
  2408  0070  1B11               	btfsc	17,6	;volatile
  2409  0071  2873               	goto	u561
  2410  0072  2874               	goto	u560
  2411  0073                     u561:
  2412  0073  2860               	goto	l86
  2413  0074                     u560:
  2414  0074                     l1152:
  2415                           
  2416                           ;./p03a_bmp280.h: 80:     bmp280_send(addr);
  2417  0074  0872               	movf	bmp280_read_byte@addr,w
  2418  0075  120A  158A  27D9  120A  118A  	fcall	_bmp280_send
  2419  007A                     l1154:
  2420                           
  2421                           ;./p03a_bmp280.h: 81:     bmp280_restart();
  2422  007A  120A  158A  27A1  120A  118A  	fcall	_bmp280_restart
  2423  007F                     l1156:
  2424                           
  2425                           ;./p03a_bmp280.h: 82:     bmp280_send(0xEF);
  2426  007F  30EF               	movlw	239
  2427  0080  120A  158A  27D9  120A  118A  	fcall	_bmp280_send
  2428  0085                     l1158:
  2429                           
  2430                           ;./p03a_bmp280.h: 83:     rec=bmp280_read();
  2431  0085  120A  158A  27BD  120A  118A  	fcall	_bmp280_read
  2432  008A  00F1               	movwf	??_bmp280_read_byte
  2433  008B  0871               	movf	??_bmp280_read_byte,w
  2434  008C  00F3               	movwf	bmp280_read_byte@rec
  2435  008D                     l1160:
  2436                           
  2437                           ;./p03a_bmp280.h: 84:     bmp280_nak();
  2438  008D  120A  158A  27B3  120A  118A  	fcall	_bmp280_nak
  2439  0092                     l1162:
  2440                           
  2441                           ;./p03a_bmp280.h: 85:     bmp280_stop();
  2442  0092  120A  158A  27AA  120A  118A  	fcall	_bmp280_stop
  2443                           
  2444                           ;./p03a_bmp280.h: 86:     return rec;
  2445  0097  0873               	movf	bmp280_read_byte@rec,w
  2446  0098                     l90:
  2447  0098  0008               	return
  2448  0099                     __end_of_bmp280_read_byte:
  2449                           
  2450                           	psect	text7
  2451  0FAA                     __ptext7:	
  2452 ;; *************** function _bmp280_stop *****************
  2453 ;; Defined at:
  2454 ;;		line 26 in file "./p03a_bmp280.h"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		status,2, status,0, pclath, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       0       0       0       0
  2469 ;;      Locals:         0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0
  2471 ;;      Totals:         0       0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 1
  2475 ;; This function calls:
  2476 ;;		_waitmssp
  2477 ;; This function is called by:
  2478 ;;		_bmp280_read_byte
  2479 ;;		_bmp280_send_byte
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _bmp280_stop
  2485  0FAA                     _bmp280_stop:
  2486  0FAA                     l1118:	
  2487                           ;incstack = 0
  2488                           ; Regs used in _bmp280_stop: [status,2+status,0+pclath+cstack]
  2489                           
  2490                           
  2491                           ;./p03a_bmp280.h: 28:     PEN=1;
  2492  0FAA  1683               	bsf	3,5	;RP0=1, select bank1
  2493  0FAB  1303               	bcf	3,6	;RP1=0, select bank1
  2494  0FAC  1511               	bsf	17,2	;volatile
  2495  0FAD                     l1120:
  2496                           
  2497                           ;./p03a_bmp280.h: 29:     waitmssp();
  2498  0FAD  120A  158A  2791  120A  158A  	fcall	_waitmssp
  2499  0FB2                     l55:
  2500  0FB2  0008               	return
  2501  0FB3                     __end_of_bmp280_stop:
  2502                           
  2503                           	psect	text8
  2504  0FD9                     __ptext8:	
  2505 ;; *************** function _bmp280_send *****************
  2506 ;; Defined at:
  2507 ;;		line 53 in file "./p03a_bmp280.h"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  dat             1    wreg     unsigned char 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  dat             1    0[COMMON] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       0       0       0       0
  2522 ;;      Locals:         1       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0
  2524 ;;      Totals:         1       0       0       0       0
  2525 ;;Total ram usage:        1 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 1
  2528 ;; This function calls:
  2529 ;;		_waitmssp
  2530 ;; This function is called by:
  2531 ;;		_bmp280_read_byte
  2532 ;;		_bmp280_send_byte
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           
  2537                           ;psect for function _bmp280_send
  2538  0FD9                     _bmp280_send:
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in _bmp280_send: [wreg+status,2+status,0+pclath+cstack]
  2542                           ;bmp280_send@dat stored from wreg
  2543  0FD9  00F0               	movwf	bmp280_send@dat
  2544  0FDA                     l73:	
  2545                           ;./p03a_bmp280.h: 53: void bmp280_send(unsigned char dat);./p03a_bmp280.h: 54: {;./p03a_
      +                          bmp280.h: 55: L1: SSPBUF=dat;
  2546                           
  2547  0FDA                     l1130:
  2548  0FDA  0870               	movf	bmp280_send@dat,w
  2549  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0FDD  0093               	movwf	19	;volatile
  2552  0FDE                     l1132:
  2553                           
  2554                           ;./p03a_bmp280.h: 56:     waitmssp();
  2555  0FDE  120A  158A  2791  120A  158A  	fcall	_waitmssp
  2556  0FE3                     l74:	
  2557                           ;./p03a_bmp280.h: 57:     while(ACKSTAT){bmp280_restart;goto L1;}
  2558                           
  2559  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  2560  0FE4  1303               	bcf	3,6	;RP1=0, select bank1
  2561  0FE5  1B11               	btfsc	17,6	;volatile
  2562  0FE6  2FE8               	goto	u551
  2563  0FE7  2FE9               	goto	u550
  2564  0FE8                     u551:
  2565  0FE8  2FDA               	goto	l73
  2566  0FE9                     u550:
  2567  0FE9                     l77:
  2568  0FE9  0008               	return
  2569  0FEA                     __end_of_bmp280_send:
  2570                           
  2571                           	psect	text9
  2572  0FA1                     __ptext9:	
  2573 ;; *************** function _bmp280_restart *****************
  2574 ;; Defined at:
  2575 ;;		line 31 in file "./p03a_bmp280.h"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		status,2, status,0, pclath, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2589 ;;      Params:         0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0
  2592 ;;      Totals:         0       0       0       0       0
  2593 ;;Total ram usage:        0 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 1
  2596 ;; This function calls:
  2597 ;;		_waitmssp
  2598 ;; This function is called by:
  2599 ;;		_bmp280_read_byte
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           
  2604                           ;psect for function _bmp280_restart
  2605  0FA1                     _bmp280_restart:
  2606  0FA1                     l1122:	
  2607                           ;incstack = 0
  2608                           ; Regs used in _bmp280_restart: [status,2+status,0+pclath+cstack]
  2609                           
  2610                           
  2611                           ;./p03a_bmp280.h: 33:     RSEN=1;
  2612  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  2613  0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  2614  0FA3  1491               	bsf	17,1	;volatile
  2615  0FA4                     l1124:
  2616                           
  2617                           ;./p03a_bmp280.h: 34:     waitmssp();
  2618  0FA4  120A  158A  2791  120A  158A  	fcall	_waitmssp
  2619  0FA9                     l58:
  2620  0FA9  0008               	return
  2621  0FAA                     __end_of_bmp280_restart:
  2622                           
  2623                           	psect	text10
  2624  0FBD                     __ptext10:	
  2625 ;; *************** function _bmp280_read *****************
  2626 ;; Defined at:
  2627 ;;		line 67 in file "./p03a_bmp280.h"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      unsigned char 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, pclath, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0
  2644 ;;      Totals:         0       0       0       0       0
  2645 ;;Total ram usage:        0 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 1
  2648 ;; This function calls:
  2649 ;;		_waitmssp
  2650 ;; This function is called by:
  2651 ;;		_bmp280_read_byte
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function _bmp280_read
  2657  0FBD                     _bmp280_read:
  2658  0FBD                     l1134:	
  2659                           ;incstack = 0
  2660                           ; Regs used in _bmp280_read: [wreg+status,2+status,0+pclath+cstack]
  2661                           
  2662                           
  2663                           ;./p03a_bmp280.h: 69:     RCEN=1;
  2664  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  2665  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  2666  0FBF  1591               	bsf	17,3	;volatile
  2667  0FC0                     l1136:
  2668                           
  2669                           ;./p03a_bmp280.h: 70:     waitmssp();
  2670  0FC0  120A  158A  2791  120A  158A  	fcall	_waitmssp
  2671  0FC5                     l1138:
  2672                           
  2673                           ;./p03a_bmp280.h: 71:     return SSPBUF;
  2674  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0FC7  0813               	movf	19,w	;volatile
  2677  0FC8                     l83:
  2678  0FC8  0008               	return
  2679  0FC9                     __end_of_bmp280_read:
  2680                           
  2681                           	psect	text11
  2682  0FB3                     __ptext11:	
  2683 ;; *************** function _bmp280_nak *****************
  2684 ;; Defined at:
  2685 ;;		line 42 in file "./p03a_bmp280.h"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		status,2, status,0, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 1
  2706 ;; This function calls:
  2707 ;;		_waitmssp
  2708 ;; This function is called by:
  2709 ;;		_bmp280_read_byte
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _bmp280_nak
  2715  0FB3                     _bmp280_nak:
  2716  0FB3                     l1126:	
  2717                           ;incstack = 0
  2718                           ; Regs used in _bmp280_nak: [status,2+status,0+pclath+cstack]
  2719                           
  2720                           
  2721                           ;./p03a_bmp280.h: 44:     ACKDT=1;
  2722  0FB3  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0FB4  1303               	bcf	3,6	;RP1=0, select bank1
  2724  0FB5  1691               	bsf	17,5	;volatile
  2725                           
  2726                           ;./p03a_bmp280.h: 45:     ACKEN=1;
  2727  0FB6  1611               	bsf	17,4	;volatile
  2728  0FB7                     l1128:
  2729                           
  2730                           ;./p03a_bmp280.h: 46:     waitmssp();
  2731  0FB7  120A  158A  2791  120A  158A  	fcall	_waitmssp
  2732  0FBC                     l64:
  2733  0FBC  0008               	return
  2734  0FBD                     __end_of_bmp280_nak:
  2735                           
  2736                           	psect	text12
  2737  0F91                     __ptext12:	
  2738 ;; *************** function _waitmssp *****************
  2739 ;; Defined at:
  2740 ;;		line 48 in file "./p03a_bmp280.h"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		None
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         0       0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0
  2757 ;;      Totals:         0       0       0       0       0
  2758 ;;Total ram usage:        0 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_bmp280_stop
  2764 ;;		_bmp280_restart
  2765 ;;		_bmp280_nak
  2766 ;;		_bmp280_send
  2767 ;;		_bmp280_read
  2768 ;;		_bmp280_read_byte
  2769 ;;		_bmp280_start
  2770 ;;		_bmp280_ack
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           
  2775                           ;psect for function _waitmssp
  2776  0F91                     _waitmssp:
  2777  0F91                     l1116:	
  2778                           ;incstack = 0
  2779                           ; Regs used in _waitmssp: []
  2780                           
  2781  0F91                     l67:	
  2782                           ;./p03a_bmp280.h: 50:     while(!SSPIF);
  2783                           
  2784  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0F93  1D8C               	btfss	12,3	;volatile
  2787  0F94  2F96               	goto	u541
  2788  0F95  2F97               	goto	u540
  2789  0F96                     u541:
  2790  0F96  2F91               	goto	l67
  2791  0F97                     u540:
  2792  0F97                     l69:
  2793                           
  2794                           ;./p03a_bmp280.h: 51:     SSPIF=0;
  2795  0F97  118C               	bcf	12,3	;volatile
  2796  0F98                     l70:
  2797  0F98  0008               	return
  2798  0F99                     __end_of_waitmssp:
  2799                           
  2800                           	psect	text13
  2801  0119                     __ptext13:	
  2802 ;; *************** function ___lmul *****************
  2803 ;; Defined at:
  2804 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  multiplier      4    0[COMMON] unsigned long 
  2807 ;;  multiplicand    4    4[COMMON] unsigned long 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  product         4    9[COMMON] unsigned long 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  4    0[COMMON] unsigned long 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2819 ;;      Params:         8       0       0       0       0
  2820 ;;      Locals:         4       0       0       0       0
  2821 ;;      Temps:          1       0       0       0       0
  2822 ;;      Totals:        13       0       0       0       0
  2823 ;;Total ram usage:       13 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;;		_LCD_num
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function ___lmul
  2835  0119                     ___lmul:
  2836  0119                     l1234:	
  2837                           ;incstack = 0
  2838                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2839                           
  2840  0119  3000               	movlw	0
  2841  011A  00FC               	movwf	___lmul@product+3
  2842  011B  3000               	movlw	0
  2843  011C  00FB               	movwf	___lmul@product+2
  2844  011D  3000               	movlw	0
  2845  011E  00FA               	movwf	___lmul@product+1
  2846  011F  3000               	movlw	0
  2847  0120  00F9               	movwf	___lmul@product
  2848  0121                     l1236:
  2849  0121  1C70               	btfss	___lmul@multiplier,0
  2850  0122  2924               	goto	u621
  2851  0123  2925               	goto	u620
  2852  0124                     u621:
  2853  0124  293C               	goto	l1240
  2854  0125                     u620:
  2855  0125                     l1238:
  2856  0125  0874               	movf	___lmul@multiplicand,w
  2857  0126  07F9               	addwf	___lmul@product,f
  2858  0127  0875               	movf	___lmul@multiplicand+1,w
  2859  0128  1103               	clrz
  2860  0129  1803               	skipnc
  2861  012A  3E01               	addlw	1
  2862  012B  1903               	skipnz
  2863  012C  292E               	goto	u631
  2864  012D  07FA               	addwf	___lmul@product+1,f
  2865  012E                     u631:
  2866  012E  0876               	movf	___lmul@multiplicand+2,w
  2867  012F  1103               	clrz
  2868  0130  1803               	skipnc
  2869  0131  3E01               	addlw	1
  2870  0132  1903               	skipnz
  2871  0133  2935               	goto	u632
  2872  0134  07FB               	addwf	___lmul@product+2,f
  2873  0135                     u632:
  2874  0135  0877               	movf	___lmul@multiplicand+3,w
  2875  0136  1103               	clrz
  2876  0137  1803               	skipnc
  2877  0138  3E01               	addlw	1
  2878  0139  1903               	skipnz
  2879  013A  293C               	goto	u633
  2880  013B  07FC               	addwf	___lmul@product+3,f
  2881  013C                     u633:
  2882  013C                     l1240:
  2883  013C  3001               	movlw	1
  2884  013D  00F8               	movwf	??___lmul
  2885  013E                     u645:
  2886  013E  1003               	clrc
  2887  013F  0DF4               	rlf	___lmul@multiplicand,f
  2888  0140  0DF5               	rlf	___lmul@multiplicand+1,f
  2889  0141  0DF6               	rlf	___lmul@multiplicand+2,f
  2890  0142  0DF7               	rlf	___lmul@multiplicand+3,f
  2891  0143  0BF8               	decfsz	??___lmul,f
  2892  0144  293E               	goto	u645
  2893  0145                     l1242:
  2894  0145  3001               	movlw	1
  2895  0146                     u655:
  2896  0146  1003               	clrc
  2897  0147  0CF3               	rrf	___lmul@multiplier+3,f
  2898  0148  0CF2               	rrf	___lmul@multiplier+2,f
  2899  0149  0CF1               	rrf	___lmul@multiplier+1,f
  2900  014A  0CF0               	rrf	___lmul@multiplier,f
  2901  014B  3EFF               	addlw	-1
  2902  014C  1D03               	skipz
  2903  014D  2946               	goto	u655
  2904  014E  0873               	movf	___lmul@multiplier+3,w
  2905  014F  0472               	iorwf	___lmul@multiplier+2,w
  2906  0150  0471               	iorwf	___lmul@multiplier+1,w
  2907  0151  0470               	iorwf	___lmul@multiplier,w
  2908  0152  1D03               	skipz
  2909  0153  2955               	goto	u661
  2910  0154  2956               	goto	u660
  2911  0155                     u661:
  2912  0155  2921               	goto	l1236
  2913  0156                     u660:
  2914  0156                     l1244:
  2915  0156  087C               	movf	___lmul@product+3,w
  2916  0157  00F3               	movwf	?___lmul+3
  2917  0158  087B               	movf	___lmul@product+2,w
  2918  0159  00F2               	movwf	?___lmul+2
  2919  015A  087A               	movf	___lmul@product+1,w
  2920  015B  00F1               	movwf	?___lmul+1
  2921  015C  0879               	movf	___lmul@product,w
  2922  015D  00F0               	movwf	?___lmul
  2923  015E                     l290:
  2924  015E  0008               	return
  2925  015F                     __end_of___lmul:
  2926                           
  2927                           	psect	text14
  2928  015F                     __ptext14:	
  2929 ;; *************** function ___lldiv *****************
  2930 ;; Defined at:
  2931 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  divisor         4    0[COMMON] unsigned long 
  2934 ;;  dividend        4    4[COMMON] unsigned long 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  quotient        4    9[COMMON] unsigned long 
  2937 ;;  counter         1   13[COMMON] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  4    0[COMMON] unsigned long 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         8       0       0       0       0
  2948 ;;      Locals:         5       0       0       0       0
  2949 ;;      Temps:          1       0       0       0       0
  2950 ;;      Totals:        14       0       0       0       0
  2951 ;;Total ram usage:       14 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function ___lldiv
  2962  015F                     ___lldiv:
  2963  015F                     l1248:	
  2964                           ;incstack = 0
  2965                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2966                           
  2967  015F  3000               	movlw	0
  2968  0160  00FC               	movwf	___lldiv@quotient+3
  2969  0161  3000               	movlw	0
  2970  0162  00FB               	movwf	___lldiv@quotient+2
  2971  0163  3000               	movlw	0
  2972  0164  00FA               	movwf	___lldiv@quotient+1
  2973  0165  3000               	movlw	0
  2974  0166  00F9               	movwf	___lldiv@quotient
  2975  0167  0873               	movf	___lldiv@divisor+3,w
  2976  0168  0472               	iorwf	___lldiv@divisor+2,w
  2977  0169  0471               	iorwf	___lldiv@divisor+1,w
  2978  016A  0470               	iorwf	___lldiv@divisor,w
  2979  016B  1903               	skipnz
  2980  016C  296E               	goto	u671
  2981  016D  296F               	goto	u670
  2982  016E                     u671:
  2983  016E  29BC               	goto	l1268
  2984  016F                     u670:
  2985  016F                     l1250:
  2986  016F  01FD               	clrf	___lldiv@counter
  2987  0170  0AFD               	incf	___lldiv@counter,f
  2988  0171  297F               	goto	l1254
  2989  0172                     l1252:
  2990  0172  3001               	movlw	1
  2991  0173  00F8               	movwf	??___lldiv
  2992  0174                     u685:
  2993  0174  1003               	clrc
  2994  0175  0DF0               	rlf	___lldiv@divisor,f
  2995  0176  0DF1               	rlf	___lldiv@divisor+1,f
  2996  0177  0DF2               	rlf	___lldiv@divisor+2,f
  2997  0178  0DF3               	rlf	___lldiv@divisor+3,f
  2998  0179  0BF8               	decfsz	??___lldiv,f
  2999  017A  2974               	goto	u685
  3000  017B  3001               	movlw	1
  3001  017C  00F8               	movwf	??___lldiv
  3002  017D  0878               	movf	??___lldiv,w
  3003  017E  07FD               	addwf	___lldiv@counter,f
  3004  017F                     l1254:
  3005  017F  1FF3               	btfss	___lldiv@divisor+3,7
  3006  0180  2982               	goto	u691
  3007  0181  2983               	goto	u690
  3008  0182                     u691:
  3009  0182  2972               	goto	l1252
  3010  0183                     u690:
  3011  0183                     l1256:
  3012  0183  3001               	movlw	1
  3013  0184  00F8               	movwf	??___lldiv
  3014  0185                     u705:
  3015  0185  1003               	clrc
  3016  0186  0DF9               	rlf	___lldiv@quotient,f
  3017  0187  0DFA               	rlf	___lldiv@quotient+1,f
  3018  0188  0DFB               	rlf	___lldiv@quotient+2,f
  3019  0189  0DFC               	rlf	___lldiv@quotient+3,f
  3020  018A  0BF8               	decfsz	??___lldiv,f
  3021  018B  2985               	goto	u705
  3022  018C                     l1258:
  3023  018C  0873               	movf	___lldiv@divisor+3,w
  3024  018D  0277               	subwf	___lldiv@dividend+3,w
  3025  018E  1D03               	skipz
  3026  018F  299A               	goto	u715
  3027  0190  0872               	movf	___lldiv@divisor+2,w
  3028  0191  0276               	subwf	___lldiv@dividend+2,w
  3029  0192  1D03               	skipz
  3030  0193  299A               	goto	u715
  3031  0194  0871               	movf	___lldiv@divisor+1,w
  3032  0195  0275               	subwf	___lldiv@dividend+1,w
  3033  0196  1D03               	skipz
  3034  0197  299A               	goto	u715
  3035  0198  0870               	movf	___lldiv@divisor,w
  3036  0199  0274               	subwf	___lldiv@dividend,w
  3037  019A                     u715:
  3038  019A  1C03               	skipc
  3039  019B  299D               	goto	u711
  3040  019C  299E               	goto	u710
  3041  019D                     u711:
  3042  019D  29AD               	goto	l1264
  3043  019E                     u710:
  3044  019E                     l1260:
  3045  019E  0870               	movf	___lldiv@divisor,w
  3046  019F  02F4               	subwf	___lldiv@dividend,f
  3047  01A0  0871               	movf	___lldiv@divisor+1,w
  3048  01A1  1C03               	skipc
  3049  01A2  0F71               	incfsz	___lldiv@divisor+1,w
  3050  01A3  02F5               	subwf	___lldiv@dividend+1,f
  3051  01A4  0872               	movf	___lldiv@divisor+2,w
  3052  01A5  1C03               	skipc
  3053  01A6  0F72               	incfsz	___lldiv@divisor+2,w
  3054  01A7  02F6               	subwf	___lldiv@dividend+2,f
  3055  01A8  0873               	movf	___lldiv@divisor+3,w
  3056  01A9  1C03               	skipc
  3057  01AA  0F73               	incfsz	___lldiv@divisor+3,w
  3058  01AB  02F7               	subwf	___lldiv@dividend+3,f
  3059  01AC                     l1262:
  3060  01AC  1479               	bsf	___lldiv@quotient,0
  3061  01AD                     l1264:
  3062  01AD  3001               	movlw	1
  3063  01AE                     u725:
  3064  01AE  1003               	clrc
  3065  01AF  0CF3               	rrf	___lldiv@divisor+3,f
  3066  01B0  0CF2               	rrf	___lldiv@divisor+2,f
  3067  01B1  0CF1               	rrf	___lldiv@divisor+1,f
  3068  01B2  0CF0               	rrf	___lldiv@divisor,f
  3069  01B3  3EFF               	addlw	-1
  3070  01B4  1D03               	skipz
  3071  01B5  29AE               	goto	u725
  3072  01B6                     l1266:
  3073  01B6  3001               	movlw	1
  3074  01B7  02FD               	subwf	___lldiv@counter,f
  3075  01B8  1D03               	btfss	3,2
  3076  01B9  29BB               	goto	u731
  3077  01BA  29BC               	goto	u730
  3078  01BB                     u731:
  3079  01BB  2983               	goto	l1256
  3080  01BC                     u730:
  3081  01BC                     l1268:
  3082  01BC  087C               	movf	___lldiv@quotient+3,w
  3083  01BD  00F3               	movwf	?___lldiv+3
  3084  01BE  087B               	movf	___lldiv@quotient+2,w
  3085  01BF  00F2               	movwf	?___lldiv+2
  3086  01C0  087A               	movf	___lldiv@quotient+1,w
  3087  01C1  00F1               	movwf	?___lldiv+1
  3088  01C2  0879               	movf	___lldiv@quotient,w
  3089  01C3  00F0               	movwf	?___lldiv
  3090  01C4                     l312:
  3091  01C4  0008               	return
  3092  01C5                     __end_of___lldiv:
  3093                           
  3094                           	psect	text15
  3095  01C5                     __ptext15:	
  3096 ;; *************** function ___aldiv *****************
  3097 ;; Defined at:
  3098 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  divisor         4    0[BANK0 ] long 
  3101 ;;  dividend        4    4[BANK0 ] long 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  quotient        4   10[BANK0 ] long 
  3104 ;;  sign            1    9[BANK0 ] unsigned char 
  3105 ;;  counter         1    8[BANK0 ] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  4    0[BANK0 ] long 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         0       8       0       0       0
  3116 ;;      Locals:         0       6       0       0       0
  3117 ;;      Temps:          1       0       0       0       0
  3118 ;;      Totals:         1      14       0       0       0
  3119 ;;Total ram usage:       15 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_main
  3125 ;;		_LCD_num
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function ___aldiv
  3131  01C5                     ___aldiv:
  3132  01C5                     l1272:	
  3133                           ;incstack = 0
  3134                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3135                           
  3136  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3137  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3138  01C7  01D8               	clrf	___aldiv@sign
  3139  01C8                     l1274:
  3140  01C8  1FD2               	btfss	___aldiv@divisor+3,7
  3141  01C9  29CB               	goto	u741
  3142  01CA  29CC               	goto	u740
  3143  01CB                     u741:
  3144  01CB  29D9               	goto	l341
  3145  01CC                     u740:
  3146  01CC                     l1276:
  3147  01CC  09CF               	comf	___aldiv@divisor,f
  3148  01CD  09D0               	comf	___aldiv@divisor+1,f
  3149  01CE  09D1               	comf	___aldiv@divisor+2,f
  3150  01CF  09D2               	comf	___aldiv@divisor+3,f
  3151  01D0  0ACF               	incf	___aldiv@divisor,f
  3152  01D1  1903               	skipnz
  3153  01D2  0AD0               	incf	___aldiv@divisor+1,f
  3154  01D3  1903               	skipnz
  3155  01D4  0AD1               	incf	___aldiv@divisor+2,f
  3156  01D5  1903               	skipnz
  3157  01D6  0AD2               	incf	___aldiv@divisor+3,f
  3158  01D7  01D8               	clrf	___aldiv@sign
  3159  01D8  0AD8               	incf	___aldiv@sign,f
  3160  01D9                     l341:
  3161  01D9  1FD6               	btfss	___aldiv@dividend+3,7
  3162  01DA  29DC               	goto	u751
  3163  01DB  29DD               	goto	u750
  3164  01DC                     u751:
  3165  01DC  29EC               	goto	l1282
  3166  01DD                     u750:
  3167  01DD                     l1278:
  3168  01DD  09D3               	comf	___aldiv@dividend,f
  3169  01DE  09D4               	comf	___aldiv@dividend+1,f
  3170  01DF  09D5               	comf	___aldiv@dividend+2,f
  3171  01E0  09D6               	comf	___aldiv@dividend+3,f
  3172  01E1  0AD3               	incf	___aldiv@dividend,f
  3173  01E2  1903               	skipnz
  3174  01E3  0AD4               	incf	___aldiv@dividend+1,f
  3175  01E4  1903               	skipnz
  3176  01E5  0AD5               	incf	___aldiv@dividend+2,f
  3177  01E6  1903               	skipnz
  3178  01E7  0AD6               	incf	___aldiv@dividend+3,f
  3179  01E8                     l1280:
  3180  01E8  3001               	movlw	1
  3181  01E9  00FD               	movwf	??___aldiv
  3182  01EA  087D               	movf	??___aldiv,w
  3183  01EB  06D8               	xorwf	___aldiv@sign,f
  3184  01EC                     l1282:
  3185  01EC  3000               	movlw	0
  3186  01ED  00DC               	movwf	___aldiv@quotient+3
  3187  01EE  3000               	movlw	0
  3188  01EF  00DB               	movwf	___aldiv@quotient+2
  3189  01F0  3000               	movlw	0
  3190  01F1  00DA               	movwf	___aldiv@quotient+1
  3191  01F2  3000               	movlw	0
  3192  01F3  00D9               	movwf	___aldiv@quotient
  3193  01F4                     l1284:
  3194  01F4  0852               	movf	___aldiv@divisor+3,w
  3195  01F5  0451               	iorwf	___aldiv@divisor+2,w
  3196  01F6  0450               	iorwf	___aldiv@divisor+1,w
  3197  01F7  044F               	iorwf	___aldiv@divisor,w
  3198  01F8  1903               	skipnz
  3199  01F9  29FB               	goto	u761
  3200  01FA  29FC               	goto	u760
  3201  01FB                     u761:
  3202  01FB  2A49               	goto	l1304
  3203  01FC                     u760:
  3204  01FC                     l1286:
  3205  01FC  01D7               	clrf	___aldiv@counter
  3206  01FD  0AD7               	incf	___aldiv@counter,f
  3207  01FE  2A0C               	goto	l1290
  3208  01FF                     l1288:
  3209  01FF  3001               	movlw	1
  3210  0200  00FD               	movwf	??___aldiv
  3211  0201                     u775:
  3212  0201  1003               	clrc
  3213  0202  0DCF               	rlf	___aldiv@divisor,f
  3214  0203  0DD0               	rlf	___aldiv@divisor+1,f
  3215  0204  0DD1               	rlf	___aldiv@divisor+2,f
  3216  0205  0DD2               	rlf	___aldiv@divisor+3,f
  3217  0206  0BFD               	decfsz	??___aldiv,f
  3218  0207  2A01               	goto	u775
  3219  0208  3001               	movlw	1
  3220  0209  00FD               	movwf	??___aldiv
  3221  020A  087D               	movf	??___aldiv,w
  3222  020B  07D7               	addwf	___aldiv@counter,f
  3223  020C                     l1290:
  3224  020C  1FD2               	btfss	___aldiv@divisor+3,7
  3225  020D  2A0F               	goto	u781
  3226  020E  2A10               	goto	u780
  3227  020F                     u781:
  3228  020F  29FF               	goto	l1288
  3229  0210                     u780:
  3230  0210                     l1292:
  3231  0210  3001               	movlw	1
  3232  0211  00FD               	movwf	??___aldiv
  3233  0212                     u795:
  3234  0212  1003               	clrc
  3235  0213  0DD9               	rlf	___aldiv@quotient,f
  3236  0214  0DDA               	rlf	___aldiv@quotient+1,f
  3237  0215  0DDB               	rlf	___aldiv@quotient+2,f
  3238  0216  0DDC               	rlf	___aldiv@quotient+3,f
  3239  0217  0BFD               	decfsz	??___aldiv,f
  3240  0218  2A12               	goto	u795
  3241  0219                     l1294:
  3242  0219  0852               	movf	___aldiv@divisor+3,w
  3243  021A  0256               	subwf	___aldiv@dividend+3,w
  3244  021B  1D03               	skipz
  3245  021C  2A27               	goto	u805
  3246  021D  0851               	movf	___aldiv@divisor+2,w
  3247  021E  0255               	subwf	___aldiv@dividend+2,w
  3248  021F  1D03               	skipz
  3249  0220  2A27               	goto	u805
  3250  0221  0850               	movf	___aldiv@divisor+1,w
  3251  0222  0254               	subwf	___aldiv@dividend+1,w
  3252  0223  1D03               	skipz
  3253  0224  2A27               	goto	u805
  3254  0225  084F               	movf	___aldiv@divisor,w
  3255  0226  0253               	subwf	___aldiv@dividend,w
  3256  0227                     u805:
  3257  0227  1C03               	skipc
  3258  0228  2A2A               	goto	u801
  3259  0229  2A2B               	goto	u800
  3260  022A                     u801:
  3261  022A  2A3A               	goto	l1300
  3262  022B                     u800:
  3263  022B                     l1296:
  3264  022B  084F               	movf	___aldiv@divisor,w
  3265  022C  02D3               	subwf	___aldiv@dividend,f
  3266  022D  0850               	movf	___aldiv@divisor+1,w
  3267  022E  1C03               	skipc
  3268  022F  0F50               	incfsz	___aldiv@divisor+1,w
  3269  0230  02D4               	subwf	___aldiv@dividend+1,f
  3270  0231  0851               	movf	___aldiv@divisor+2,w
  3271  0232  1C03               	skipc
  3272  0233  0F51               	incfsz	___aldiv@divisor+2,w
  3273  0234  02D5               	subwf	___aldiv@dividend+2,f
  3274  0235  0852               	movf	___aldiv@divisor+3,w
  3275  0236  1C03               	skipc
  3276  0237  0F52               	incfsz	___aldiv@divisor+3,w
  3277  0238  02D6               	subwf	___aldiv@dividend+3,f
  3278  0239                     l1298:
  3279  0239  1459               	bsf	___aldiv@quotient,0
  3280  023A                     l1300:
  3281  023A  3001               	movlw	1
  3282  023B                     u815:
  3283  023B  1003               	clrc
  3284  023C  0CD2               	rrf	___aldiv@divisor+3,f
  3285  023D  0CD1               	rrf	___aldiv@divisor+2,f
  3286  023E  0CD0               	rrf	___aldiv@divisor+1,f
  3287  023F  0CCF               	rrf	___aldiv@divisor,f
  3288  0240  3EFF               	addlw	-1
  3289  0241  1D03               	skipz
  3290  0242  2A3B               	goto	u815
  3291  0243                     l1302:
  3292  0243  3001               	movlw	1
  3293  0244  02D7               	subwf	___aldiv@counter,f
  3294  0245  1D03               	btfss	3,2
  3295  0246  2A48               	goto	u821
  3296  0247  2A49               	goto	u820
  3297  0248                     u821:
  3298  0248  2A10               	goto	l1292
  3299  0249                     u820:
  3300  0249                     l1304:
  3301  0249  0858               	movf	___aldiv@sign,w
  3302  024A  1903               	btfsc	3,2
  3303  024B  2A4D               	goto	u831
  3304  024C  2A4E               	goto	u830
  3305  024D                     u831:
  3306  024D  2A59               	goto	l1308
  3307  024E                     u830:
  3308  024E                     l1306:
  3309  024E  09D9               	comf	___aldiv@quotient,f
  3310  024F  09DA               	comf	___aldiv@quotient+1,f
  3311  0250  09DB               	comf	___aldiv@quotient+2,f
  3312  0251  09DC               	comf	___aldiv@quotient+3,f
  3313  0252  0AD9               	incf	___aldiv@quotient,f
  3314  0253  1903               	skipnz
  3315  0254  0ADA               	incf	___aldiv@quotient+1,f
  3316  0255  1903               	skipnz
  3317  0256  0ADB               	incf	___aldiv@quotient+2,f
  3318  0257  1903               	skipnz
  3319  0258  0ADC               	incf	___aldiv@quotient+3,f
  3320  0259                     l1308:
  3321  0259  085C               	movf	___aldiv@quotient+3,w
  3322  025A  00D2               	movwf	?___aldiv+3
  3323  025B  085B               	movf	___aldiv@quotient+2,w
  3324  025C  00D1               	movwf	?___aldiv+2
  3325  025D  085A               	movf	___aldiv@quotient+1,w
  3326  025E  00D0               	movwf	?___aldiv+1
  3327  025F  0859               	movf	___aldiv@quotient,w
  3328  0260  00CF               	movwf	?___aldiv
  3329  0261                     l351:
  3330  0261  0008               	return
  3331  0262                     __end_of___aldiv:
  3332                           
  3333                           	psect	text16
  3334  0029                     __ptext16:	
  3335 ;; *************** function _LCD_init *****************
  3336 ;; Defined at:
  3337 ;;		line 41 in file "./lcd4bit.h"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, pclath, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3351 ;;      Params:         0       0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0
  3353 ;;      Temps:          2       0       0       0       0
  3354 ;;      Totals:         2       0       0       0       0
  3355 ;;Total ram usage:        2 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; Hardware stack levels required when called: 1
  3358 ;; This function calls:
  3359 ;;		_LCD_Command
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function _LCD_init
  3367  0029                     _LCD_init:
  3368  0029                     l1216:	
  3369                           ;incstack = 0
  3370                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3371                           
  3372                           
  3373                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  3374  0029  1683               	bsf	3,5	;RP0=1, select bank1
  3375  002A  1303               	bcf	3,6	;RP1=0, select bank1
  3376  002B  1386               	bcf	6,7	;volatile
  3377                           
  3378                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  3379  002C  1306               	bcf	6,6	;volatile
  3380                           
  3381                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  3382  002D  1286               	bcf	6,5	;volatile
  3383                           
  3384                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  3385  002E  1206               	bcf	6,4	;volatile
  3386                           
  3387                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  3388  002F  1007               	bcf	7,0	;volatile
  3389                           
  3390                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  3391  0030  1087               	bcf	7,1	;volatile
  3392  0031                     l1218:
  3393                           
  3394                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  3395  0031  3002               	movlw	2
  3396  0032  120A  118A  2099  120A  118A  	fcall	_LCD_Command
  3397                           
  3398                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  3399  0037  3028               	movlw	40
  3400  0038  120A  118A  2099  120A  118A  	fcall	_LCD_Command
  3401                           
  3402                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  3403  003D  3080               	movlw	128
  3404  003E  120A  118A  2099  120A  118A  	fcall	_LCD_Command
  3405                           
  3406                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  3407  0043  300C               	movlw	12
  3408  0044  120A  118A  2099  120A  118A  	fcall	_LCD_Command
  3409                           
  3410                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  3411  0049  3006               	movlw	6
  3412  004A  120A  118A  2099  120A  118A  	fcall	_LCD_Command
  3413                           
  3414                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  3415  004F  3001               	movlw	1
  3416  0050  120A  118A  2099  120A  118A  	fcall	_LCD_Command
  3417  0055                     l1220:
  3418                           
  3419                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3420  0055  3041               	movlw	65
  3421  0056  00F4               	movwf	??_LCD_init+1
  3422  0057  30EE               	movlw	238
  3423  0058  00F3               	movwf	??_LCD_init
  3424  0059                     u1127:
  3425  0059  0BF3               	decfsz	??_LCD_init,f
  3426  005A  2859               	goto	u1127
  3427  005B  0BF4               	decfsz	??_LCD_init+1,f
  3428  005C  2859               	goto	u1127
  3429  005D  0000               	nop
  3430  005E                     l101:
  3431  005E  0008               	return
  3432  005F                     __end_of_LCD_init:
  3433                           
  3434                           	psect	text17
  3435  0099                     __ptext17:	
  3436 ;; *************** function _LCD_Command *****************
  3437 ;; Defined at:
  3438 ;;		line 13 in file "./lcd4bit.h"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  cmnd            1    wreg     unsigned char 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  cmnd            1    2[COMMON] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         0       0       0       0       0
  3453 ;;      Locals:         1       0       0       0       0
  3454 ;;      Temps:          2       0       0       0       0
  3455 ;;      Totals:         3       0       0       0       0
  3456 ;;Total ram usage:        3 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_LCD_init
  3462 ;;		_print_checkdata
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function _LCD_Command
  3468  0099                     _LCD_Command:
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  3472                           ;LCD_Command@cmnd stored from wreg
  3473  0099  00F2               	movwf	LCD_Command@cmnd
  3474  009A                     l1166:
  3475                           
  3476                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  3477  009A  1283               	bcf	3,5	;RP0=0, select bank0
  3478  009B  1303               	bcf	3,6	;RP1=0, select bank0
  3479  009C  1007               	bcf	7,0	;volatile
  3480  009D                     l1168:
  3481                           
  3482                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  3483  009D  0872               	movf	LCD_Command@cmnd,w
  3484  009E  0086               	movwf	6	;volatile
  3485  009F                     l1170:
  3486                           
  3487                           ;./lcd4bit.h: 17:     RC1 = 1;
  3488  009F  1487               	bsf	7,1	;volatile
  3489                           
  3490                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3491  00A0  3041               	movlw	65
  3492  00A1  00F1               	movwf	??_LCD_Command+1
  3493  00A2  30EE               	movlw	238
  3494  00A3  00F0               	movwf	??_LCD_Command
  3495  00A4                     u1137:
  3496  00A4  0BF0               	decfsz	??_LCD_Command,f
  3497  00A5  28A4               	goto	u1137
  3498  00A6  0BF1               	decfsz	??_LCD_Command+1,f
  3499  00A7  28A4               	goto	u1137
  3500  00A8  0000               	nop
  3501  00A9                     l1172:
  3502                           
  3503                           ;./lcd4bit.h: 19:     RC1 = 0;
  3504  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  3505  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  3506  00AB  1087               	bcf	7,1	;volatile
  3507                           
  3508                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3509  00AC  3041               	movlw	65
  3510  00AD  00F1               	movwf	??_LCD_Command+1
  3511  00AE  30EE               	movlw	238
  3512  00AF  00F0               	movwf	??_LCD_Command
  3513  00B0                     u1147:
  3514  00B0  0BF0               	decfsz	??_LCD_Command,f
  3515  00B1  28B0               	goto	u1147
  3516  00B2  0BF1               	decfsz	??_LCD_Command+1,f
  3517  00B3  28B0               	goto	u1147
  3518  00B4  0000               	nop
  3519  00B5                     l1174:
  3520                           
  3521                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  3522  00B5  0872               	movf	LCD_Command@cmnd,w
  3523  00B6  00F0               	movwf	??_LCD_Command
  3524  00B7  3003               	movlw	3
  3525  00B8                     u575:
  3526  00B8  1003               	clrc
  3527  00B9  0DF0               	rlf	??_LCD_Command,f
  3528  00BA  3EFF               	addlw	-1
  3529  00BB  1D03               	skipz
  3530  00BC  28B8               	goto	u575
  3531  00BD  1003               	clrc
  3532  00BE  0D70               	rlf	??_LCD_Command,w
  3533  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  3534  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  3535  00C1  0086               	movwf	6	;volatile
  3536  00C2                     l1176:
  3537                           
  3538                           ;./lcd4bit.h: 22:     RC1 = 1;
  3539  00C2  1487               	bsf	7,1	;volatile
  3540  00C3                     l1178:
  3541                           
  3542                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3543  00C3  3041               	movlw	65
  3544  00C4  00F1               	movwf	??_LCD_Command+1
  3545  00C5  30EE               	movlw	238
  3546  00C6  00F0               	movwf	??_LCD_Command
  3547  00C7                     u1157:
  3548  00C7  0BF0               	decfsz	??_LCD_Command,f
  3549  00C8  28C7               	goto	u1157
  3550  00C9  0BF1               	decfsz	??_LCD_Command+1,f
  3551  00CA  28C7               	goto	u1157
  3552  00CB  0000               	nop
  3553  00CC                     l1180:
  3554                           
  3555                           ;./lcd4bit.h: 24:     RC1 = 0;
  3556  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  3557  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  3558  00CE  1087               	bcf	7,1	;volatile
  3559  00CF                     l1182:
  3560                           
  3561                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3562  00CF  3041               	movlw	65
  3563  00D0  00F1               	movwf	??_LCD_Command+1
  3564  00D1  30EE               	movlw	238
  3565  00D2  00F0               	movwf	??_LCD_Command
  3566  00D3                     u1167:
  3567  00D3  0BF0               	decfsz	??_LCD_Command,f
  3568  00D4  28D3               	goto	u1167
  3569  00D5  0BF1               	decfsz	??_LCD_Command+1,f
  3570  00D6  28D3               	goto	u1167
  3571  00D7  0000               	nop
  3572  00D8                     l95:
  3573  00D8  0008               	return
  3574  00D9                     __end_of_LCD_Command:
  3575  007E                     btemp	set	126	;btemp
  3576  007E                     wtemp0	set	126
  3577                           
  3578                           	psect	idloc
  3579                           
  3580                           ;Config register IDLOC0 @ 0x2000
  3581                           ;	unspecified, using default values
  3582  2000                     	org	8192
  3583  2000  3FFF               	dw	16383
  3584                           
  3585                           ;Config register IDLOC1 @ 0x2001
  3586                           ;	unspecified, using default values
  3587  2001                     	org	8193
  3588  2001  3FFF               	dw	16383
  3589                           
  3590                           ;Config register IDLOC2 @ 0x2002
  3591                           ;	unspecified, using default values
  3592  2002                     	org	8194
  3593  2002  3FFF               	dw	16383
  3594                           
  3595                           ;Config register IDLOC3 @ 0x2003
  3596                           ;	unspecified, using default values
  3597  2003                     	org	8195
  3598  2003  3FFF               	dw	16383
  3599                           
  3600                           	psect	config
  3601                           
  3602                           ;Config register CONFIG @ 0x2007
  3603                           ;	unspecified, using default values
  3604                           ;	Oscillator Selection bits
  3605                           ;	FOSC = 0x3, unprogrammed default
  3606                           ;	Watchdog Timer Enable bit
  3607                           ;	WDTE = 0x1, unprogrammed default
  3608                           ;	Power-up Timer Enable bit
  3609                           ;	PWRTE = 0x1, unprogrammed default
  3610                           ;	Brown-out Reset Enable bit
  3611                           ;	BOREN = 0x1, unprogrammed default
  3612                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3613                           ;	LVP = 0x1, unprogrammed default
  3614                           ;	Data EEPROM Memory Code Protection bit
  3615                           ;	CPD = 0x1, unprogrammed default
  3616                           ;	Flash Program Memory Write Enable bits
  3617                           ;	WRT = 0x3, unprogrammed default
  3618                           ;	In-Circuit Debugger Mode bit
  3619                           ;	DEBUG = 0x1, unprogrammed default
  3620                           ;	Flash Program Memory Code Protection bit
  3621                           ;	CP = 0x1, unprogrammed default
  3622  2007                     	org	8199
  3623  2007  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        2
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      79
    BANK1            80      0      40
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->___aldiv
    _main->___lldiv
    _show->_LCD_Char
    _print_checkdata->_LCD_Char
    _print_checkdata->_LCD_Command
    _bmp280_getdata->_bmp280_read_byte
    _bmp280_read_byte->_bmp280_send
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    5177
                                             14 BANK0     16    16      0
                           _LCD_init
                            ___aldiv
                            ___lldiv
                             ___lmul
                     _bmp280_getdata
                        _bmp280_init
                    _print_checkdata
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     122
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _print_checkdata                                      0     0      0      88
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bmp280_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bmp280_getdata                                       4     4      0      67
                                              4 COMMON     4     4      0
                   _bmp280_read_byte
 ---------------------------------------------------------------------------------
 (2) _bmp280_read_byte                                     3     3      0      67
                                              1 COMMON     3     3      0
                         _bmp280_nak
                        _bmp280_read
                     _bmp280_restart
                        _bmp280_send
                        _bmp280_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_stop                                          0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_send                                          1     1      0      22
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_restart                                       0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_read                                          0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_nak                                           0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8    1916
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8    2428
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_Command
   ___aldiv
     ___lmul (ARG)
   ___lldiv
   ___lmul
   _bmp280_getdata
     _bmp280_read_byte
       _bmp280_nak
         _waitmssp
       _bmp280_read
         _waitmssp
       _bmp280_restart
         _waitmssp
       _bmp280_send
         _waitmssp
       _bmp280_stop
         _waitmssp
       _waitmssp
   _bmp280_init
   _print_checkdata
     _LCD_Char
     _LCD_Command
   _show
     _LCD_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      28       7       50.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      85      12        0.0%
ABS                  0      0      85       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 08 17:52:59 2022

                        _p 004B                          pc 0002         ??_bmp280_read_byte 0071  
             ?_LCD_Command 0070                         l70 0F98                         l55 0FB2  
                       l64 0FBC                         l73 0FDA                         l49 0FFF  
                       l58 0FA9                         l74 0FE3                         l90 0098  
                       l67 0F91                         l83 0FC8                         l69 0F97  
                       l77 0FE9                         l86 0060                         l95 00D8  
                       l87 006E                         l98 0118                         _b0 00B0  
                       _b1 0038                         _b2 00AC                         _b3 00A8  
                       _b4 0030                         _b5 00A4                         _b6 0034  
                       _b7 002C                         _x1 0028                         _x2 0024  
                       _aa 003C                         _x3 0020                         _ab 00C4  
                       _ac 00C0                         _ad 00BC                         _ae 00B8  
                       _af 00B4                         _up 00A0                         fsr 0004  
                      l101 005E                        l110 0028                        l312 01C4  
                      l341 01D9                        l351 0261                        l184 032A  
                      l290 015E                        l178 06B3                        l187 0FD8  
                      _RC0 0038                        _RC1 0039                        _PEN 048A  
                      u610 0028                        u611 0027                        u620 0125  
                      u540 0F97                        u604 0FF7                        u621 0124  
                      u541 0F96                        u710 019E                        u550 0FE9  
                      u711 019D                        u631 012E                        u551 0FE8  
                      u800 022B                        u632 0135                        u560 0074  
                      u801 022A                        u705 0185                        u633 013C  
                      u561 0073                        u730 01BC                        u731 01BB  
                      u715 019A                        u820 0249                        u740 01CC  
                      u660 0156                        _SEN 0488                        u821 0248  
                      u805 0227                        u741 01CB                        u725 01AE  
                      u661 0155                        u645 013E                        u830 024E  
                      u750 01DD                        u670 016F                        u590 0FF4  
                      u910 036A                        u575 00B8                        u831 024D  
                      u815 023B                        u751 01DC                        u671 016E  
                      u655 0146                        u591 0FF0                        u911 036D  
                      u760 01FC                        u920 046D                        u912 0374  
                      u761 01FB                        u585 00F8                        u913 0377  
                      u690 0183                        u930 0477                        u691 0182  
                      u931 0478                        u780 0210                        u940 057D  
                      u932 047D                        u781 020F                        u685 0174  
                      u941 057E                        u933 047E                        u925 0468  
                      u950 05AE                        u942 0583                        u775 0201  
                      u951 05AF                        u943 0584                        u960 05DE  
                      u952 05B4                        u953 05B5                        u795 0212  
                      u971 060E                        u980 0641                        u972 0611  
                      u973 0618                        u965 05D9                        u990 066E  
                      u974 061B                        u991 066D                        u975 0622  
                      u976 0625                        u993 066A                        u985 063C  
                      _ac1 0049                        _ac2 0047                        _ac3 0045  
                      _ac4 0043                        _avv 0040                        _oss 006D  
                      fsr0 0004                        indf 0000                       l1120 0FAD  
                     l1200 010F                       l1122 0FA1                       l1130 0FDA  
                     l1202 0FEA                       l1220 0055                       l1300 023A  
                     l1116 0F91                       l1124 0FA4                       l1132 0FDE  
                     l1204 0FF7                       l1302 0243                       l1126 0FB3  
                     l1134 0FBD                       l1118 0FAA                       l1150 0069  
                     l1230 0262                       l1222 000B                       l1216 0029  
                     l1304 0249                       l1240 013C                       l1128 0FB7  
                     l1136 0FC0                       l1160 008D                       l1152 0074  
                     l1232 0FC9                       l1224 000C                       l1400 033B  
                     l1170 009F                       l1218 0031                       l1306 024E  
                     l1250 016F                       l1242 0145                       l1234 0119  
                     l1138 0FC5                       l1162 0092                       l1154 007A  
                     l1146 0060                       l1226 0018                       l1410 03BD  
                     l1402 0349                       l1180 00CC                       l1172 00A9  
                     l1308 0259                       l1260 019E                       l1252 0172  
                     l1244 0156                       l1236 0121                       l1156 007F  
                     l1148 0065                       l1228 001C                       l1420 04DF  
                     l1412 03F5                       l1404 034E                       l1182 00CF  
                     l1174 00B5                       l1166 009A                       l1262 01AC  
                     l1254 017F                       l1238 0125                       l1158 0085  
                     l1190 00E9                       l1430 065A                       l1422 0515  
                     l1414 042B                       l1406 0353                       l1176 00C2  
                     l1168 009D                       l1280 01E8                       l1272 01C5  
                     l1264 01AD                       l1256 0183                       l1248 015F  
                     l1192 00F5                       l1184 00DA                       l1432 066E  
                     l1424 054B                       l1416 044E                       l1408 0387  
                     l1178 00C3                       l1290 020C                       l1282 01EC  
                     l1274 01C8                       l1266 01B6                       l1258 018C  
                     l1194 0102                       l1186 00DD                       l1434 0691  
                     l1426 059F                       l1418 04A7                       l1292 0210  
                     l1284 01F4                       l1276 01CC                       l1268 01BC  
                     l1196 0103                       l1188 00DF                       l1428 05E9  
                     l1294 0219                       l1286 01FC                       l1278 01DD  
                     l1198 010C                       l1296 022B                       l1288 01FF  
                     l1298 0239                       l1396 032B                       l1398 0335  
                     STR_1 0806                       u1000 079E                       u1001 079F  
                     u1002 07A4                       u1003 07A5                       u1107 0107  
                     u1117 0113                       u1127 0059                       u1137 00A4  
                     u1147 00B0                       u1157 00C7                       u1077 0343  
                     u1167 00D3                       u1087 00E4                       u1097 00F0  
                     _RCEN 048B                       _RSEN 0489                       _main 032B  
                     _show 000A                       btemp 007E                       start 0000  
         __end_of_LCD_Char 0119               LCD_Char@data 0072           __end_of_LCD_init 005F  
          __end_of___aldiv 0262                      ?_main 0070                      _ACKEN 048C  
                    _ACKDT 048D                      ?_show 0070            __end_of___lldiv 01C5  
                    _PORTB 0006                      _SSPIF 0063        ___lmul@multiplicand 0074  
                    pclath 000A                      show@s 0074             _bmp280_getdata 0262  
                    status 0003                      wtemp0 007E             _bmp280_restart 0FA1  
          __initialization 07DF               __end_of_main 07DF               __end_of_show 0029  
                   ??_main 005D                     ??_show 0073     __end_of_bmp280_getdata 032B  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013     __end_of_bmp280_restart 0FAA  
                   ___lmul 0119                  ??___aldiv 007D                  ??___lldiv 0078  
     __size_of_LCD_Command 0040        bmp280_read_byte@rec 0073           __end_of_waitmssp 0F99  
          ?_bmp280_getdata 0070                  ?_LCD_Char 0070    __end_of__initialization 07FC  
                ?_LCD_init 0070            ?_bmp280_restart 0070                 _bmp280_nak 0FB3  
           __pcstackCOMMON 0070               __pidataBANK0 0008   __size_of_print_checkdata 0010  
__size_of_bmp280_read_byte 003A                 __pbssBANK0 0020                 __pbssBANK1 00A0  
            ??_bmp280_init 0070              ??_bmp280_read 0070              ??_bmp280_send 0070  
            ??_bmp280_stop 0070                 ??_LCD_Char 0070                 ??_LCD_init 0073  
               __pmaintext 032B                    ?___lmul 0070                    _ACKSTAT 048E  
           ___lmul@product 0079                 __stringtab 0800                ?_bmp280_nak 0070  
      __end_of_bmp280_init 1000        __end_of_bmp280_read 0FC9        __end_of_bmp280_send 0FEA  
      __end_of_bmp280_stop 0FB3                  ?_waitmssp 0070                    ___aldiv 01C5  
          __size_of___lmul 0046                    ___lldiv 015F                    __ptext1 000A  
                  __ptext2 0FC9                    __ptext3 00D9                    __ptext4 0FEA  
                  __ptext5 0262                    __ptext6 005F                    __ptext7 0FAA  
                  __ptext8 0FD9                    __ptext9 0FA1           ___aldiv@dividend 0053  
                  clrloop0 0F9A       bmp280_read_byte@addr 0072          ??_print_checkdata 0073  
     end_of_initialization 07FC            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         ___aldiv@quotient 0059                 ??_waitmssp 0070        __size_of_bmp280_nak 000A  
         ??_bmp280_getdata 0074           _bmp280_read_byte 005F                  _TRISBbits 0086  
                _TRISCbits 0087           ??_bmp280_restart 0070                _bmp280_init 0FEA  
              _bmp280_read 0FBD                _bmp280_send 0FD9                _bmp280_stop 0FAA  
        __size_of_LCD_Char 0040          __size_of_LCD_init 0036              ??_LCD_Command 0070  
           __end_of___lmul 015F        start_initialization 07DF                   ??___lmul 0078  
              __pdataBANK0 006D        __end_of_LCD_Command 00D9                  ___latbits 0002  
            __pcstackBANK0 004F               ??_bmp280_nak 0070                   ?___aldiv 004F  
                 ?___lldiv 0070          __size_of_waitmssp 0008                  __pstrings 0800  
          _print_checkdata 0FC9         __end_of_bmp280_nak 0FBD            ___aldiv@divisor 004F  
                 _LCD_Char 00D9            ___aldiv@counter 0057                   _LCD_init 0029  
                clear_ram0 0F99   __end_of_bmp280_read_byte 0099                _LCD_Command 0099  
              __stringbase 0805          ___lmul@multiplier 0070               ?_bmp280_init 0070  
             ?_bmp280_read 0070               ?_bmp280_send 0070               ?_bmp280_stop 0070  
           bmp280_send@dat 0070    __end_of_print_checkdata 0FD9           __size_of___aldiv 009D  
         __size_of___lldiv 0066         __end_of__stringtab 0806                   _main$854 0069  
                 __ptext10 0FBD                   __ptext11 0FB3                   __ptext12 0F91  
                 __ptext13 0119                   __ptext14 015F                   __ptext15 01C5  
                 __ptext16 0029                   __ptext17 0099              __size_of_main 04B4  
            __size_of_show 001F                   _waitmssp 0F91            LCD_Command@cmnd 0072  
         ___lldiv@dividend 0074    __size_of_bmp280_getdata 00C9                  stringcode 0800  
  __size_of_bmp280_restart 0009           ?_print_checkdata 0070           ___lldiv@quotient 0079  
                 stringdir 0800                   stringtab 0800               ___aldiv@sign 0058  
     __size_of_bmp280_init 0016       __size_of_bmp280_read 000C       __size_of_bmp280_send 0011  
     __size_of_bmp280_stop 0009          ?_bmp280_read_byte 0070  
