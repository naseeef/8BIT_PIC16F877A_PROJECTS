

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 07 09:27:56 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0088                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0093                     	;# 
   169  0094                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  0006                     _PORTB	set	6
   183  0013                     _SSPBUF	set	19
   184  0014                     _SSPCON	set	20
   185  0039                     _RC1	set	57
   186  0038                     _RC0	set	56
   187  0063                     _SSPIF	set	99
   188  0087                     _TRISCbits	set	135
   189  0086                     _TRISBbits	set	134
   190  0093                     _SSPADD	set	147
   191  048C                     _ACKEN	set	1164
   192  048D                     _ACKDT	set	1165
   193  0489                     _RSEN	set	1161
   194  048A                     _PEN	set	1162
   195  0488                     _SEN	set	1160
   196  048B                     _RCEN	set	1163
   197  048E                     _ACKSTAT	set	1166
   198  043C                     _TRISC4	set	1084
   199  043B                     _TRISC3	set	1083
   200                           
   201                           	psect	strings
   202  0003                     __pstrings:
   203  0003                     stringtab:
   204  0003                     __stringtab:
   205  0003                     stringcode:	
   206                           ;	String table - string pointers are 1 byte each
   207                           
   208  0003                     stringdir:
   209  0003  3000               	movlw	high stringdir
   210  0004  008A               	movwf	10
   211  0005  0804               	movf	4,w
   212  0006  0A84               	incf	4,f
   213  0007  0782               	addwf	2,f
   214  0008                     __stringbase:
   215  0008  3400               	retlw	0
   216  0009                     __end_of__stringtab:
   217  0009                     STR_1:
   218  0009  3454               	retlw	84	;'T'
   219  000A  3469               	retlw	105	;'i'
   220  000B  346D               	retlw	109	;'m'
   221  000C  3465               	retlw	101	;'e'
   222  000D  343A               	retlw	58	;':'
   223  000E  3400               	retlw	0
   224  000F                     STR_2:
   225  000F  3444               	retlw	68	;'D'
   226  0010  3461               	retlw	97	;'a'
   227  0011  3474               	retlw	116	;'t'
   228  0012  3465               	retlw	101	;'e'
   229  0013  343A               	retlw	58	;':'
   230  0014  3400               	retlw	0
   231                           
   232                           	psect	cinit
   233  07F5                     start_initialization:	
   234                           ; #config settings
   235                           
   236  07F5                     __initialization:
   237                           
   238                           ; Clear objects allocated to COMMON
   239  07F5  01F0               	clrf	__pbssCOMMON& (0+127)
   240  07F6  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   241  07F7  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   242  07F8  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   243  07F9  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   244  07FA  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   245  07FB  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   246  07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FC                     __end_of__initialization:
   250  07FC  0183               	clrf	3
   251  07FD  120A  118A  2ED2   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMMON
   254  0070                     __pbssCOMMON:
   255  0070                     _year:
   256  0070                     	ds	1
   257  0071                     _month:
   258  0071                     	ds	1
   259  0072                     _date:
   260  0072                     	ds	1
   261  0073                     _day:
   262  0073                     	ds	1
   263  0074                     _hour:
   264  0074                     	ds	1
   265  0075                     _min:
   266  0075                     	ds	1
   267  0076                     _sec:
   268  0076                     	ds	1
   269                           
   270                           	psect	cstackCOMMON
   271  0077                     __pcstackCOMMON:
   272  0077                     ?_LCD_init:
   273  0077                     ?_show:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0077                     ?_LCD_Command:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0077                     ??_LCD_Command:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0077                     ?_rtc_int:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0077                     ??_rtc_int:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0077                     ?_rtc_read_byte:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0077                     ?_LCD_Char:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0077                     ??_LCD_Char:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0077                     ?_convup:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0077                     ??_convup:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0077                     ?_convd:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0077                     ??_convd:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0077                     ?_rtc_stop:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0077                     ??_rtc_stop:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0077                     ?_rtc_res:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0077                     ??_rtc_res:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0077                     ?_rtc_nak:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0077                     ??_rtc_nak:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0077                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0077                     ?_waitmssp:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0077                     ??_waitmssp:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0077                     ?_rtc_send:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0077                     ??_rtc_send:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0077                     ?_rtc_read:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0077                     ??_rtc_read:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0077                     rtc_send@a:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0077                     convd@bcd:	
   352                           ; 1 bytes @ 0x0
   353                           
   354                           
   355                           ; 1 bytes @ 0x0
   356  0077                     	ds	1
   357  0078                     ??_rtc_read_byte:
   358  0078                     convup@bcd:	
   359                           ; 1 bytes @ 0x1
   360                           
   361                           
   362                           ; 1 bytes @ 0x1
   363  0078                     	ds	1
   364  0079                     rtc_read_byte@addr:
   365  0079                     LCD_Command@cmnd:	
   366                           ; 1 bytes @ 0x2
   367                           
   368  0079                     LCD_Char@data:	
   369                           ; 1 bytes @ 0x2
   370                           
   371                           
   372                           ; 1 bytes @ 0x2
   373  0079                     	ds	1
   374  007A                     ??_LCD_init:
   375  007A                     ??_show:	
   376                           ; 1 bytes @ 0x3
   377                           
   378  007A                     rtc_read_byte@rec:	
   379                           ; 1 bytes @ 0x3
   380                           
   381                           
   382                           ; 1 bytes @ 0x3
   383  007A                     	ds	1
   384  007B                     show@s:
   385                           
   386                           ; 1 bytes @ 0x4
   387  007B                     	ds	1
   388  007C                     ??_main:
   389                           
   390                           ; 1 bytes @ 0x5
   391  007C                     	ds	1
   392                           
   393                           	psect	maintext
   394  06D2                     __pmaintext:	
   395 ;;
   396 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   397 ;;
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 41 in file "main_ds1307.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : B00/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   414 ;;      Params:         0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0
   416 ;;      Temps:          1       0       0       0       0
   417 ;;      Totals:         1       0       0       0       0
   418 ;;Total ram usage:        1 bytes
   419 ;; Hardware stack levels required when called: 3
   420 ;; This function calls:
   421 ;;		_LCD_Char
   422 ;;		_LCD_Command
   423 ;;		_LCD_init
   424 ;;		_convd
   425 ;;		_convup
   426 ;;		_rtc_int
   427 ;;		_rtc_read_byte
   428 ;;		_show
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _main
   436  06D2                     _main:
   437  06D2                     l938:	
   438                           ;incstack = 0
   439                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   440                           
   441                           
   442                           ;main_ds1307.c: 43:     LCD_init();
   443  06D2  120A  118A  25E2  120A  118A  	fcall	_LCD_init
   444  06D7                     l940:
   445                           
   446                           ;main_ds1307.c: 45:     show("Time:");
   447  06D7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   448  06D8  120A  118A  25C3  120A  118A  	fcall	_show
   449  06DD                     l942:
   450                           
   451                           ;main_ds1307.c: 46:     LCD_Command(0xc0);
   452  06DD  30C0               	movlw	192
   453  06DE  120A  118A  2652  120A  118A  	fcall	_LCD_Command
   454                           
   455                           ;main_ds1307.c: 47:     show("Date:");
   456  06E3  3007               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   457  06E4  120A  118A  25C3  120A  118A  	fcall	_show
   458  06E9                     l944:
   459                           
   460                           ;main_ds1307.c: 48:     rtc_int();
   461  06E9  120A  118A  25AD  120A  118A  	fcall	_rtc_int
   462  06EE                     l946:
   463                           
   464                           ;main_ds1307.c: 50:         sec =rtc_read_byte(0x00);
   465  06EE  3000               	movlw	0
   466  06EF  120A  118A  2618  120A  118A  	fcall	_rtc_read_byte
   467  06F4  00FC               	movwf	??_main
   468  06F5  087C               	movf	??_main,w
   469  06F6  00F6               	movwf	_sec
   470  06F7                     l948:
   471                           
   472                           ;main_ds1307.c: 51:         min =rtc_read_byte(0x01);
   473  06F7  3001               	movlw	1
   474  06F8  120A  118A  2618  120A  118A  	fcall	_rtc_read_byte
   475  06FD  00FC               	movwf	??_main
   476  06FE  087C               	movf	??_main,w
   477  06FF  00F5               	movwf	_min
   478  0700                     l950:
   479                           
   480                           ;main_ds1307.c: 52:         hour =rtc_read_byte(0x02);
   481  0700  3002               	movlw	2
   482  0701  120A  118A  2618  120A  118A  	fcall	_rtc_read_byte
   483  0706  00FC               	movwf	??_main
   484  0707  087C               	movf	??_main,w
   485  0708  00F4               	movwf	_hour
   486  0709                     l952:
   487                           
   488                           ;main_ds1307.c: 53:         day =rtc_read_byte(0x03);
   489  0709  3003               	movlw	3
   490  070A  120A  118A  2618  120A  118A  	fcall	_rtc_read_byte
   491  070F  00FC               	movwf	??_main
   492  0710  087C               	movf	??_main,w
   493  0711  00F3               	movwf	_day
   494  0712                     l954:
   495                           
   496                           ;main_ds1307.c: 54:         date =rtc_read_byte(0x04);
   497  0712  3004               	movlw	4
   498  0713  120A  118A  2618  120A  118A  	fcall	_rtc_read_byte
   499  0718  00FC               	movwf	??_main
   500  0719  087C               	movf	??_main,w
   501  071A  00F2               	movwf	_date
   502  071B                     l956:
   503                           
   504                           ;main_ds1307.c: 55:         month=rtc_read_byte(0x05);
   505  071B  3005               	movlw	5
   506  071C  120A  118A  2618  120A  118A  	fcall	_rtc_read_byte
   507  0721  00FC               	movwf	??_main
   508  0722  087C               	movf	??_main,w
   509  0723  00F1               	movwf	_month
   510  0724                     l958:
   511                           
   512                           ;main_ds1307.c: 56:         year =rtc_read_byte(0x06);
   513  0724  3006               	movlw	6
   514  0725  120A  118A  2618  120A  118A  	fcall	_rtc_read_byte
   515  072A  00FC               	movwf	??_main
   516  072B  087C               	movf	??_main,w
   517  072C  00F0               	movwf	_year
   518  072D                     l960:
   519                           
   520                           ;main_ds1307.c: 58:         LCD_Command(0x85);
   521  072D  3085               	movlw	133
   522  072E  120A  118A  2652  120A  118A  	fcall	_LCD_Command
   523  0733                     l962:
   524                           
   525                           ;main_ds1307.c: 59:         LCD_Char(convup(hour));
   526  0733  0874               	movf	_hour,w
   527  0734  120A  118A  2584  120A  118A  	fcall	_convup
   528  0739  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   529  073E                     l964:
   530                           
   531                           ;main_ds1307.c: 60:         LCD_Char(convd(hour));
   532  073E  0874               	movf	_hour,w
   533  073F  120A  118A  255B  120A  118A  	fcall	_convd
   534  0744  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   535  0749                     l966:
   536                           
   537                           ;main_ds1307.c: 61:         LCD_Char(':');
   538  0749  303A               	movlw	58
   539  074A  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   540  074F                     l968:
   541                           
   542                           ;main_ds1307.c: 62:         LCD_Char(convup(min));
   543  074F  0875               	movf	_min,w
   544  0750  120A  118A  2584  120A  118A  	fcall	_convup
   545  0755  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   546  075A                     l970:
   547                           
   548                           ;main_ds1307.c: 63:         LCD_Char(convd(min));
   549  075A  0875               	movf	_min,w
   550  075B  120A  118A  255B  120A  118A  	fcall	_convd
   551  0760  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   552  0765                     l972:
   553                           
   554                           ;main_ds1307.c: 64:         LCD_Char(':');
   555  0765  303A               	movlw	58
   556  0766  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   557  076B                     l974:
   558                           
   559                           ;main_ds1307.c: 65:         LCD_Char(convup(sec));
   560  076B  0876               	movf	_sec,w
   561  076C  120A  118A  2584  120A  118A  	fcall	_convup
   562  0771  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   563  0776                     l976:
   564                           
   565                           ;main_ds1307.c: 66:         LCD_Char(convd(sec));
   566  0776  0876               	movf	_sec,w
   567  0777  120A  118A  255B  120A  118A  	fcall	_convd
   568  077C  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   569  0781                     l978:
   570                           
   571                           ;main_ds1307.c: 68:         LCD_Command(0xC5);
   572  0781  30C5               	movlw	197
   573  0782  120A  118A  2652  120A  118A  	fcall	_LCD_Command
   574  0787                     l980:
   575                           
   576                           ;main_ds1307.c: 69:         LCD_Char(convup(date));
   577  0787  0872               	movf	_date,w
   578  0788  120A  118A  2584  120A  118A  	fcall	_convup
   579  078D  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   580  0792                     l982:
   581                           
   582                           ;main_ds1307.c: 70:         LCD_Char(convd(date));
   583  0792  0872               	movf	_date,w
   584  0793  120A  118A  255B  120A  118A  	fcall	_convd
   585  0798  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   586  079D                     l984:
   587                           
   588                           ;main_ds1307.c: 71:         LCD_Char(':');
   589  079D  303A               	movlw	58
   590  079E  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   591  07A3                     l986:
   592                           
   593                           ;main_ds1307.c: 72:         LCD_Char(convup(month));
   594  07A3  0871               	movf	_month,w
   595  07A4  120A  118A  2584  120A  118A  	fcall	_convup
   596  07A9  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   597  07AE                     l988:
   598                           
   599                           ;main_ds1307.c: 73:         LCD_Char(convd(month));
   600  07AE  0871               	movf	_month,w
   601  07AF  120A  118A  255B  120A  118A  	fcall	_convd
   602  07B4  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   603  07B9                     l990:
   604                           
   605                           ;main_ds1307.c: 74:         LCD_Char(':');
   606  07B9  303A               	movlw	58
   607  07BA  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   608  07BF                     l992:
   609                           
   610                           ;main_ds1307.c: 75:         LCD_Char(convup(year));
   611  07BF  0870               	movf	_year,w
   612  07C0  120A  118A  2584  120A  118A  	fcall	_convup
   613  07C5  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   614  07CA                     l994:
   615                           
   616                           ;main_ds1307.c: 76:         LCD_Char(convd(year));
   617  07CA  0870               	movf	_year,w
   618  07CB  120A  118A  255B  120A  118A  	fcall	_convd
   619  07D0  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   620  07D5                     l996:
   621                           
   622                           ;main_ds1307.c: 77:         LCD_Char('/');
   623  07D5  302F               	movlw	47
   624  07D6  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   625  07DB                     l998:
   626                           
   627                           ;main_ds1307.c: 78:         LCD_Char(convup(day));
   628  07DB  0873               	movf	_day,w
   629  07DC  120A  118A  2584  120A  118A  	fcall	_convup
   630  07E1  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   631  07E6                     l1000:
   632                           
   633                           ;main_ds1307.c: 79:         LCD_Char(convd(day));
   634  07E6  0873               	movf	_day,w
   635  07E7  120A  118A  255B  120A  118A  	fcall	_convd
   636  07EC  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   637  07F1  2EEE               	goto	l946
   638  07F2  120A  118A  2800   	ljmp	start
   639  07F5                     __end_of_main:
   640                           
   641                           	psect	text1
   642  05C3                     __ptext1:	
   643 ;; *************** function _show *****************
   644 ;; Defined at:
   645 ;;		line 217 in file "main_ds1307.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  s               1    wreg     PTR unsigned char 
   648 ;;		 -> STR_2(6), STR_1(6), 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  s               1    4[COMMON] PTR unsigned char 
   651 ;;		 -> STR_2(6), STR_1(6), 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         1       0       0       0       0
   663 ;;      Temps:          1       0       0       0       0
   664 ;;      Totals:         2       0       0       0       0
   665 ;;Total ram usage:        2 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 1
   668 ;; This function calls:
   669 ;;		_LCD_Char
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _show
   677  05C3                     _show:
   678                           
   679                           ;incstack = 0
   680                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   681                           ;show@s stored from wreg
   682  05C3  00FB               	movwf	show@s
   683  05C4                     l930:
   684                           
   685                           ;main_ds1307.c: 217: void show(unsigned char *s);main_ds1307.c: 218: {;main_ds1307.c: 21
      +                          9:     while(*s) {
   686  05C4  2DD5               	goto	l936
   687  05C5                     l932:
   688                           
   689                           ;main_ds1307.c: 220:         LCD_Char(*s++);
   690  05C5  087B               	movf	show@s,w
   691  05C6  0084               	movwf	4
   692  05C7  120A  118A  2003  120A  118A  	fcall	stringdir
   693  05CC  120A  118A  2692  120A  118A  	fcall	_LCD_Char
   694  05D1                     l934:
   695  05D1  3001               	movlw	1
   696  05D2  00FA               	movwf	??_show
   697  05D3  087A               	movf	??_show,w
   698  05D4  07FB               	addwf	show@s,f
   699  05D5                     l936:
   700                           
   701                           ;main_ds1307.c: 219:     while(*s) {
   702  05D5  087B               	movf	show@s,w
   703  05D6  0084               	movwf	4
   704  05D7  120A  118A  2003  120A  118A  	fcall	stringdir
   705  05DC  3A00               	xorlw	0
   706  05DD  1D03               	skipz
   707  05DE  2DE0               	goto	u101
   708  05DF  2DE1               	goto	u100
   709  05E0                     u101:
   710  05E0  2DC5               	goto	l932
   711  05E1                     u100:
   712  05E1                     l148:
   713  05E1  0008               	return
   714  05E2                     __end_of_show:
   715                           
   716                           	psect	text2
   717  0692                     __ptext2:	
   718 ;; *************** function _LCD_Char *****************
   719 ;; Defined at:
   720 ;;		line 186 in file "main_ds1307.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  data            1    wreg     unsigned char 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  data            1    2[COMMON] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         1       0       0       0       0
   736 ;;      Temps:          2       0       0       0       0
   737 ;;      Totals:         3       0       0       0       0
   738 ;;Total ram usage:        3 bytes
   739 ;; Hardware stack levels used: 1
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_main
   744 ;;		_show
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _LCD_Char
   750  0692                     _LCD_Char:
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
   754                           ;LCD_Char@data stored from wreg
   755  0692  00F9               	movwf	LCD_Char@data
   756  0693                     l760:
   757                           
   758                           ;main_ds1307.c: 186: void LCD_Char (unsigned char data);main_ds1307.c: 187: {;main_ds130
      +                          7.c: 188:     RC0 = 1;
   759  0693  1283               	bcf	3,5	;RP0=0, select bank0
   760  0694  1303               	bcf	3,6	;RP1=0, select bank0
   761  0695  1407               	bsf	7,0	;volatile
   762  0696                     l762:
   763                           
   764                           ;main_ds1307.c: 189:     PORTB = data;
   765  0696  0879               	movf	LCD_Char@data,w
   766  0697  0086               	movwf	6	;volatile
   767  0698                     l764:
   768                           
   769                           ;main_ds1307.c: 190:     RC1 = 1;
   770  0698  1487               	bsf	7,1	;volatile
   771                           
   772                           ;main_ds1307.c: 191:     _delay((unsigned long)((10)*(20000000/4000.0)));
   773  0699  3041               	movlw	65
   774  069A  00F8               	movwf	??_LCD_Char+1
   775  069B  30EE               	movlw	238
   776  069C  00F7               	movwf	??_LCD_Char
   777  069D                     u117:
   778  069D  0BF7               	decfsz	??_LCD_Char,f
   779  069E  2E9D               	goto	u117
   780  069F  0BF8               	decfsz	??_LCD_Char+1,f
   781  06A0  2E9D               	goto	u117
   782  06A1  0000               	nop
   783  06A2                     l766:
   784                           
   785                           ;main_ds1307.c: 192:     RC1 = 0;
   786  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   787  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   788  06A4  1087               	bcf	7,1	;volatile
   789                           
   790                           ;main_ds1307.c: 193:     _delay((unsigned long)((10)*(20000000/4000.0)));
   791  06A5  3041               	movlw	65
   792  06A6  00F8               	movwf	??_LCD_Char+1
   793  06A7  30EE               	movlw	238
   794  06A8  00F7               	movwf	??_LCD_Char
   795  06A9                     u127:
   796  06A9  0BF7               	decfsz	??_LCD_Char,f
   797  06AA  2EA9               	goto	u127
   798  06AB  0BF8               	decfsz	??_LCD_Char+1,f
   799  06AC  2EA9               	goto	u127
   800  06AD  0000               	nop
   801  06AE                     l768:
   802                           
   803                           ;main_ds1307.c: 194:     PORTB = (data<<4);
   804  06AE  0879               	movf	LCD_Char@data,w
   805  06AF  00F7               	movwf	??_LCD_Char
   806  06B0  3003               	movlw	3
   807  06B1                     u35:
   808  06B1  1003               	clrc
   809  06B2  0DF7               	rlf	??_LCD_Char,f
   810  06B3  3EFF               	addlw	-1
   811  06B4  1D03               	skipz
   812  06B5  2EB1               	goto	u35
   813  06B6  1003               	clrc
   814  06B7  0D77               	rlf	??_LCD_Char,w
   815  06B8  1283               	bcf	3,5	;RP0=0, select bank0
   816  06B9  1303               	bcf	3,6	;RP1=0, select bank0
   817  06BA  0086               	movwf	6	;volatile
   818  06BB                     l770:
   819                           
   820                           ;main_ds1307.c: 195:     RC1 = 1;
   821  06BB  1487               	bsf	7,1	;volatile
   822  06BC                     l772:
   823                           
   824                           ;main_ds1307.c: 196:     _delay((unsigned long)((10)*(20000000/4000.0)));
   825  06BC  3041               	movlw	65
   826  06BD  00F8               	movwf	??_LCD_Char+1
   827  06BE  30EE               	movlw	238
   828  06BF  00F7               	movwf	??_LCD_Char
   829  06C0                     u137:
   830  06C0  0BF7               	decfsz	??_LCD_Char,f
   831  06C1  2EC0               	goto	u137
   832  06C2  0BF8               	decfsz	??_LCD_Char+1,f
   833  06C3  2EC0               	goto	u137
   834  06C4  0000               	nop
   835  06C5                     l774:
   836                           
   837                           ;main_ds1307.c: 197:     RC1 = 0;
   838  06C5  1283               	bcf	3,5	;RP0=0, select bank0
   839  06C6  1303               	bcf	3,6	;RP1=0, select bank0
   840  06C7  1087               	bcf	7,1	;volatile
   841  06C8                     l776:
   842                           
   843                           ;main_ds1307.c: 198:     _delay((unsigned long)((10)*(20000000/4000.0)));
   844  06C8  3041               	movlw	65
   845  06C9  00F8               	movwf	??_LCD_Char+1
   846  06CA  30EE               	movlw	238
   847  06CB  00F7               	movwf	??_LCD_Char
   848  06CC                     u147:
   849  06CC  0BF7               	decfsz	??_LCD_Char,f
   850  06CD  2ECC               	goto	u147
   851  06CE  0BF8               	decfsz	??_LCD_Char+1,f
   852  06CF  2ECC               	goto	u147
   853  06D0  0000               	nop
   854  06D1                     l139:
   855  06D1  0008               	return
   856  06D2                     __end_of_LCD_Char:
   857                           
   858                           	psect	text3
   859  0618                     __ptext3:	
   860 ;; *************** function _rtc_read_byte *****************
   861 ;; Defined at:
   862 ;;		line 117 in file "main_ds1307.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  addr            1    wreg     unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  addr            1    2[COMMON] unsigned char 
   867 ;;  rec             1    3[COMMON] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      unsigned char 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         2       0       0       0       0
   879 ;;      Temps:          1       0       0       0       0
   880 ;;      Totals:         3       0       0       0       0
   881 ;;Total ram usage:        3 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 2
   884 ;; This function calls:
   885 ;;		_rtc_nak
   886 ;;		_rtc_read
   887 ;;		_rtc_res
   888 ;;		_rtc_send
   889 ;;		_rtc_stop
   890 ;;		_waitmssp
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           
   897                           ;psect for function _rtc_read_byte
   898  0618                     _rtc_read_byte:
   899                           
   900                           ;incstack = 0
   901                           ; Regs used in _rtc_read_byte: [wreg+status,2+status,0+pclath+cstack]
   902                           ;rtc_read_byte@addr stored from wreg
   903  0618  00F9               	movwf	rtc_read_byte@addr
   904  0619                     l108:	
   905                           ;main_ds1307.c: 117: unsigned char rtc_read_byte(unsigned char addr);main_ds1307.c: 118:
      +                           {;main_ds1307.c: 119:     unsigned char rec;;main_ds1307.c: 120: L: rtc_res();
   906                           
   907  0619                     l820:
   908  0619  120A  118A  2568  120A  118A  	fcall	_rtc_res
   909  061E                     l822:
   910                           
   911                           ;main_ds1307.c: 121:     SSPBUF=0xD0;
   912  061E  30D0               	movlw	208
   913  061F  1283               	bcf	3,5	;RP0=0, select bank0
   914  0620  1303               	bcf	3,6	;RP1=0, select bank0
   915  0621  0093               	movwf	19	;volatile
   916  0622                     l824:
   917                           
   918                           ;main_ds1307.c: 122:     waitmssp();
   919  0622  120A  118A  2560  120A  118A  	fcall	_waitmssp
   920  0627                     l109:	
   921                           ;main_ds1307.c: 123:     while(ACKSTAT){goto L;}
   922                           
   923  0627  1683               	bsf	3,5	;RP0=1, select bank1
   924  0628  1303               	bcf	3,6	;RP1=0, select bank1
   925  0629  1B11               	btfsc	17,6	;volatile
   926  062A  2E2C               	goto	u81
   927  062B  2E2D               	goto	u80
   928  062C                     u81:
   929  062C  2E19               	goto	l108
   930  062D                     u80:
   931  062D                     l826:
   932                           
   933                           ;main_ds1307.c: 125:     rtc_send(addr);
   934  062D  0879               	movf	rtc_read_byte@addr,w
   935  062E  120A  118A  259C  120A  118A  	fcall	_rtc_send
   936  0633                     l828:
   937                           
   938                           ;main_ds1307.c: 126:     rtc_res();
   939  0633  120A  118A  2568  120A  118A  	fcall	_rtc_res
   940  0638                     l830:
   941                           
   942                           ;main_ds1307.c: 127:     rtc_send(0xD1);
   943  0638  30D1               	movlw	209
   944  0639  120A  118A  259C  120A  118A  	fcall	_rtc_send
   945  063E                     l832:
   946                           
   947                           ;main_ds1307.c: 128:     rec=rtc_read();
   948  063E  120A  118A  2590  120A  118A  	fcall	_rtc_read
   949  0643  00F8               	movwf	??_rtc_read_byte
   950  0644  0878               	movf	??_rtc_read_byte,w
   951  0645  00FA               	movwf	rtc_read_byte@rec
   952  0646                     l834:
   953                           
   954                           ;main_ds1307.c: 129:     rtc_nak();
   955  0646  120A  118A  257A  120A  118A  	fcall	_rtc_nak
   956  064B                     l836:
   957                           
   958                           ;main_ds1307.c: 130:     rtc_stop();
   959  064B  120A  118A  2571  120A  118A  	fcall	_rtc_stop
   960                           
   961                           ;main_ds1307.c: 131:     return rec;
   962  0650  087A               	movf	rtc_read_byte@rec,w
   963  0651                     l112:
   964  0651  0008               	return
   965  0652                     __end_of_rtc_read_byte:
   966                           
   967                           	psect	text4
   968  0571                     __ptext4:	
   969 ;; *************** function _rtc_stop *****************
   970 ;; Defined at:
   971 ;;		line 140 in file "main_ds1307.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		status,2, status,0, pclath, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 1
   992 ;; This function calls:
   993 ;;		_waitmssp
   994 ;; This function is called by:
   995 ;;		_rtc_read_byte
   996 ;;		_rtc_send_byte
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           
  1001                           ;psect for function _rtc_stop
  1002  0571                     _rtc_stop:
  1003  0571                     l782:	
  1004                           ;incstack = 0
  1005                           ; Regs used in _rtc_stop: [status,2+status,0+pclath+cstack]
  1006                           
  1007                           
  1008                           ;main_ds1307.c: 142:     PEN=1;
  1009  0571  1683               	bsf	3,5	;RP0=1, select bank1
  1010  0572  1303               	bcf	3,6	;RP1=0, select bank1
  1011  0573  1511               	bsf	17,2	;volatile
  1012  0574                     l784:
  1013                           
  1014                           ;main_ds1307.c: 143:     waitmssp();
  1015  0574  120A  118A  2560  120A  118A  	fcall	_waitmssp
  1016  0579                     l118:
  1017  0579  0008               	return
  1018  057A                     __end_of_rtc_stop:
  1019                           
  1020                           	psect	text5
  1021  059C                     __ptext5:	
  1022 ;; *************** function _rtc_send *****************
  1023 ;; Defined at:
  1024 ;;		line 95 in file "main_ds1307.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  a               1    wreg     unsigned char 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  a               1    0[COMMON] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, pclath, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         0       0       0       0       0
  1039 ;;      Locals:         1       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0
  1041 ;;      Totals:         1       0       0       0       0
  1042 ;;Total ram usage:        1 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 1
  1045 ;; This function calls:
  1046 ;;		_waitmssp
  1047 ;; This function is called by:
  1048 ;;		_rtc_read_byte
  1049 ;;		_rtc_send_byte
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _rtc_send
  1055  059C                     _rtc_send:
  1056                           
  1057                           ;incstack = 0
  1058                           ; Regs used in _rtc_send: [wreg+status,2+status,0+pclath+cstack]
  1059                           ;rtc_send@a stored from wreg
  1060  059C  00F7               	movwf	rtc_send@a
  1061  059D                     l778:
  1062                           
  1063                           ;main_ds1307.c: 95: void rtc_send(unsigned char a);main_ds1307.c: 96: {;main_ds1307.c: 9
      +                          7:     SSPBUF=a;
  1064  059D  0877               	movf	rtc_send@a,w
  1065  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1066  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1067  05A0  0093               	movwf	19	;volatile
  1068  05A1                     l780:
  1069                           
  1070                           ;main_ds1307.c: 98:     waitmssp();
  1071  05A1  120A  118A  2560  120A  118A  	fcall	_waitmssp
  1072  05A6                     l96:	
  1073                           ;main_ds1307.c: 99:     while(ACKSTAT);
  1074                           
  1075  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  1076  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  1077  05A8  1B11               	btfsc	17,6	;volatile
  1078  05A9  2DAB               	goto	u41
  1079  05AA  2DAC               	goto	u40
  1080  05AB                     u41:
  1081  05AB  2DA6               	goto	l96
  1082  05AC                     u40:
  1083  05AC                     l99:
  1084  05AC  0008               	return
  1085  05AD                     __end_of_rtc_send:
  1086                           
  1087                           	psect	text6
  1088  0568                     __ptext6:	
  1089 ;; *************** function _rtc_res *****************
  1090 ;; Defined at:
  1091 ;;		line 145 in file "main_ds1307.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		status,2, status,0, pclath, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1105 ;;      Params:         0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0
  1108 ;;      Totals:         0       0       0       0       0
  1109 ;;Total ram usage:        0 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; Hardware stack levels required when called: 1
  1112 ;; This function calls:
  1113 ;;		_waitmssp
  1114 ;; This function is called by:
  1115 ;;		_rtc_read_byte
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           
  1120                           ;psect for function _rtc_res
  1121  0568                     _rtc_res:
  1122  0568                     l794:	
  1123                           ;incstack = 0
  1124                           ; Regs used in _rtc_res: [status,2+status,0+pclath+cstack]
  1125                           
  1126                           
  1127                           ;main_ds1307.c: 147:     RSEN=1;
  1128  0568  1683               	bsf	3,5	;RP0=1, select bank1
  1129  0569  1303               	bcf	3,6	;RP1=0, select bank1
  1130  056A  1491               	bsf	17,1	;volatile
  1131  056B                     l796:
  1132                           
  1133                           ;main_ds1307.c: 148:     waitmssp();
  1134  056B  120A  118A  2560  120A  118A  	fcall	_waitmssp
  1135  0570                     l121:
  1136  0570  0008               	return
  1137  0571                     __end_of_rtc_res:
  1138                           
  1139                           	psect	text7
  1140  0590                     __ptext7:	
  1141 ;; *************** function _rtc_read *****************
  1142 ;; Defined at:
  1143 ;;		line 110 in file "main_ds1307.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      unsigned char 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0, pclath, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 1
  1164 ;; This function calls:
  1165 ;;		_waitmssp
  1166 ;; This function is called by:
  1167 ;;		_rtc_read_byte
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function _rtc_read
  1173  0590                     _rtc_read:
  1174  0590                     l786:	
  1175                           ;incstack = 0
  1176                           ; Regs used in _rtc_read: [wreg+status,2+status,0+pclath+cstack]
  1177                           
  1178                           
  1179                           ;main_ds1307.c: 112:     RCEN=1;
  1180  0590  1683               	bsf	3,5	;RP0=1, select bank1
  1181  0591  1303               	bcf	3,6	;RP1=0, select bank1
  1182  0592  1591               	bsf	17,3	;volatile
  1183  0593                     l788:
  1184                           
  1185                           ;main_ds1307.c: 113:     waitmssp();
  1186  0593  120A  118A  2560  120A  118A  	fcall	_waitmssp
  1187  0598                     l790:
  1188                           
  1189                           ;main_ds1307.c: 114:     return SSPBUF;
  1190  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1192  059A  0813               	movf	19,w	;volatile
  1193  059B                     l105:
  1194  059B  0008               	return
  1195  059C                     __end_of_rtc_read:
  1196                           
  1197                           	psect	text8
  1198  057A                     __ptext8:	
  1199 ;; *************** function _rtc_nak *****************
  1200 ;; Defined at:
  1201 ;;		line 156 in file "main_ds1307.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		status,2, status,0, pclath, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0
  1218 ;;      Totals:         0       0       0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels used: 1
  1221 ;; Hardware stack levels required when called: 1
  1222 ;; This function calls:
  1223 ;;		_waitmssp
  1224 ;; This function is called by:
  1225 ;;		_rtc_read_byte
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _rtc_nak
  1231  057A                     _rtc_nak:
  1232  057A                     l798:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _rtc_nak: [status,2+status,0+pclath+cstack]
  1235                           
  1236                           
  1237                           ;main_ds1307.c: 158:     ACKDT=1;
  1238  057A  1683               	bsf	3,5	;RP0=1, select bank1
  1239  057B  1303               	bcf	3,6	;RP1=0, select bank1
  1240  057C  1691               	bsf	17,5	;volatile
  1241                           
  1242                           ;main_ds1307.c: 159:     ACKEN=1;
  1243  057D  1611               	bsf	17,4	;volatile
  1244  057E                     l800:
  1245                           
  1246                           ;main_ds1307.c: 160:     waitmssp();
  1247  057E  120A  118A  2560  120A  118A  	fcall	_waitmssp
  1248  0583                     l127:
  1249  0583  0008               	return
  1250  0584                     __end_of_rtc_nak:
  1251                           
  1252                           	psect	text9
  1253  0560                     __ptext9:	
  1254 ;; *************** function _waitmssp *****************
  1255 ;; Defined at:
  1256 ;;		line 90 in file "main_ds1307.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		None
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_rtc_send
  1280 ;;		_rtc_read
  1281 ;;		_rtc_read_byte
  1282 ;;		_rtc_stop
  1283 ;;		_rtc_res
  1284 ;;		_rtc_nak
  1285 ;;		_rtc_start
  1286 ;;		_rtc_ack
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _waitmssp
  1292  0560                     _waitmssp:
  1293  0560                     l740:	
  1294                           ;incstack = 0
  1295                           ; Regs used in _waitmssp: []
  1296                           
  1297  0560                     l90:	
  1298                           ;main_ds1307.c: 92:     while(!SSPIF);
  1299                           
  1300  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0562  1D8C               	btfss	12,3	;volatile
  1303  0563  2D65               	goto	u11
  1304  0564  2D66               	goto	u10
  1305  0565                     u11:
  1306  0565  2D60               	goto	l90
  1307  0566                     u10:
  1308  0566                     l92:
  1309                           
  1310                           ;main_ds1307.c: 93:     SSPIF=0;
  1311  0566  118C               	bcf	12,3	;volatile
  1312  0567                     l93:
  1313  0567  0008               	return
  1314  0568                     __end_of_waitmssp:
  1315                           
  1316                           	psect	text10
  1317  05AD                     __ptext10:	
  1318 ;; *************** function _rtc_int *****************
  1319 ;; Defined at:
  1320 ;;		line 84 in file "main_ds1307.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_main
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           
  1348                           ;psect for function _rtc_int
  1349  05AD                     _rtc_int:
  1350  05AD                     l816:	
  1351                           ;incstack = 0
  1352                           ; Regs used in _rtc_int: [wreg]
  1353                           
  1354                           
  1355                           ;main_ds1307.c: 86:     TRISC3=TRISC4=1;
  1356  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  1357  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  1358  05AF  1607               	bsf	7,4	;volatile
  1359  05B0  1A07               	btfsc	7,4	;volatile
  1360  05B1  2DB3               	goto	u61
  1361  05B2  2DB7               	goto	u60
  1362  05B3                     u61:
  1363  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  1364  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  1365  05B5  1587               	bsf	7,3	;volatile
  1366  05B6  2DBA               	goto	u74
  1367  05B7                     u60:
  1368  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  1369  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  1370  05B9  1187               	bcf	7,3	;volatile
  1371  05BA                     u74:
  1372  05BA                     l818:
  1373                           
  1374                           ;main_ds1307.c: 87:     SSPCON=0x28;
  1375  05BA  3028               	movlw	40
  1376  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1377  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1378  05BD  0094               	movwf	20	;volatile
  1379                           
  1380                           ;main_ds1307.c: 88:     SSPADD= (((11059200/4)/100)-1);
  1381  05BE  30FF               	movlw	255
  1382  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  1383  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  1384  05C1  0093               	movwf	19	;volatile
  1385  05C2                     l87:
  1386  05C2  0008               	return
  1387  05C3                     __end_of_rtc_int:
  1388                           
  1389                           	psect	text11
  1390  0584                     __ptext11:	
  1391 ;; *************** function _convup *****************
  1392 ;; Defined at:
  1393 ;;		line 162 in file "main_ds1307.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  bcd             1    wreg     unsigned char 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  bcd             1    1[COMMON] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      unsigned char 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       0       0       0       0
  1408 ;;      Locals:         1       0       0       0       0
  1409 ;;      Temps:          1       0       0       0       0
  1410 ;;      Totals:         2       0       0       0       0
  1411 ;;Total ram usage:        2 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _convup
  1422  0584                     _convup:
  1423                           
  1424                           ;incstack = 0
  1425                           ; Regs used in _convup: [wreg+status,2+status,0]
  1426                           ;convup@bcd stored from wreg
  1427  0584  00F8               	movwf	convup@bcd
  1428  0585                     l840:
  1429                           
  1430                           ;main_ds1307.c: 162: unsigned char convup(unsigned char bcd);main_ds1307.c: 163: {;main_
      +                          ds1307.c: 164:     return ((bcd>>4)+48);
  1431  0585  0878               	movf	convup@bcd,w
  1432  0586  00F7               	movwf	??_convup
  1433  0587  3004               	movlw	4
  1434  0588                     u95:
  1435  0588  1003               	clrc
  1436  0589  0CF7               	rrf	??_convup,f
  1437  058A  3EFF               	addlw	-1
  1438  058B  1D03               	skipz
  1439  058C  2D88               	goto	u95
  1440  058D  0877               	movf	??_convup,w
  1441  058E  3E30               	addlw	48
  1442  058F                     l130:
  1443  058F  0008               	return
  1444  0590                     __end_of_convup:
  1445                           
  1446                           	psect	text12
  1447  055B                     __ptext12:	
  1448 ;; *************** function _convd *****************
  1449 ;; Defined at:
  1450 ;;		line 166 in file "main_ds1307.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  bcd             1    wreg     unsigned char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  bcd             1    0[COMMON] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      unsigned char 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1464 ;;      Params:         0       0       0       0       0
  1465 ;;      Locals:         1       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0
  1467 ;;      Totals:         1       0       0       0       0
  1468 ;;Total ram usage:        1 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _convd
  1479  055B                     _convd:
  1480                           
  1481                           ;incstack = 0
  1482                           ; Regs used in _convd: [wreg+status,2+status,0]
  1483                           ;convd@bcd stored from wreg
  1484  055B  00F7               	movwf	convd@bcd
  1485  055C                     l844:
  1486                           
  1487                           ;main_ds1307.c: 166: unsigned char convd(unsigned char bcd);main_ds1307.c: 167: {;main_d
      +                          s1307.c: 168:     return ((bcd&0x0F)+48);
  1488  055C  0877               	movf	convd@bcd,w
  1489  055D  390F               	andlw	15
  1490  055E  3E30               	addlw	48
  1491  055F                     l133:
  1492  055F  0008               	return
  1493  0560                     __end_of_convd:
  1494                           
  1495                           	psect	text13
  1496  05E2                     __ptext13:	
  1497 ;; *************** function _LCD_init *****************
  1498 ;; Defined at:
  1499 ;;		line 200 in file "main_ds1307.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0, pclath, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0
  1515 ;;      Temps:          2       0       0       0       0
  1516 ;;      Totals:         2       0       0       0       0
  1517 ;;Total ram usage:        2 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 1
  1520 ;; This function calls:
  1521 ;;		_LCD_Command
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _LCD_init
  1529  05E2                     _LCD_init:
  1530  05E2                     l802:	
  1531                           ;incstack = 0
  1532                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1533                           
  1534                           
  1535                           ;main_ds1307.c: 202:     TRISBbits.TRISB7 =0;
  1536  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  1537  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  1538  05E4  1386               	bcf	6,7	;volatile
  1539                           
  1540                           ;main_ds1307.c: 203:     TRISBbits.TRISB6 =0;
  1541  05E5  1306               	bcf	6,6	;volatile
  1542                           
  1543                           ;main_ds1307.c: 204:     TRISBbits.TRISB5 =0;
  1544  05E6  1286               	bcf	6,5	;volatile
  1545                           
  1546                           ;main_ds1307.c: 205:     TRISBbits.TRISB4 =0;
  1547  05E7  1206               	bcf	6,4	;volatile
  1548                           
  1549                           ;main_ds1307.c: 206:     TRISCbits.TRISC0 =0;
  1550  05E8  1007               	bcf	7,0	;volatile
  1551                           
  1552                           ;main_ds1307.c: 207:     TRISCbits.TRISC1 =0;
  1553  05E9  1087               	bcf	7,1	;volatile
  1554  05EA                     l804:
  1555                           
  1556                           ;main_ds1307.c: 209:     LCD_Command (0x02);
  1557  05EA  3002               	movlw	2
  1558  05EB  120A  118A  2652  120A  118A  	fcall	_LCD_Command
  1559                           
  1560                           ;main_ds1307.c: 210:     LCD_Command (0x28);
  1561  05F0  3028               	movlw	40
  1562  05F1  120A  118A  2652  120A  118A  	fcall	_LCD_Command
  1563                           
  1564                           ;main_ds1307.c: 211:     LCD_Command (0x80);
  1565  05F6  3080               	movlw	128
  1566  05F7  120A  118A  2652  120A  118A  	fcall	_LCD_Command
  1567                           
  1568                           ;main_ds1307.c: 212:     LCD_Command (0x0C);
  1569  05FC  300C               	movlw	12
  1570  05FD  120A  118A  2652  120A  118A  	fcall	_LCD_Command
  1571                           
  1572                           ;main_ds1307.c: 213:     LCD_Command (0x06);
  1573  0602  3006               	movlw	6
  1574  0603  120A  118A  2652  120A  118A  	fcall	_LCD_Command
  1575                           
  1576                           ;main_ds1307.c: 214:     LCD_Command (0x01);
  1577  0608  3001               	movlw	1
  1578  0609  120A  118A  2652  120A  118A  	fcall	_LCD_Command
  1579  060E                     l806:
  1580                           
  1581                           ;main_ds1307.c: 215:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1582  060E  3041               	movlw	65
  1583  060F  00FB               	movwf	??_LCD_init+1
  1584  0610  30EE               	movlw	238
  1585  0611  00FA               	movwf	??_LCD_init
  1586  0612                     u157:
  1587  0612  0BFA               	decfsz	??_LCD_init,f
  1588  0613  2E12               	goto	u157
  1589  0614  0BFB               	decfsz	??_LCD_init+1,f
  1590  0615  2E12               	goto	u157
  1591  0616  0000               	nop
  1592  0617                     l142:
  1593  0617  0008               	return
  1594  0618                     __end_of_LCD_init:
  1595                           
  1596                           	psect	text14
  1597  0652                     __ptext14:	
  1598 ;; *************** function _LCD_Command *****************
  1599 ;; Defined at:
  1600 ;;		line 172 in file "main_ds1307.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  cmnd            1    wreg     unsigned char 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  cmnd            1    2[COMMON] unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         1       0       0       0       0
  1616 ;;      Temps:          2       0       0       0       0
  1617 ;;      Totals:         3       0       0       0       0
  1618 ;;Total ram usage:        3 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;;		_LCD_init
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _LCD_Command
  1630  0652                     _LCD_Command:
  1631                           
  1632                           ;incstack = 0
  1633                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  1634                           ;LCD_Command@cmnd stored from wreg
  1635  0652  00F9               	movwf	LCD_Command@cmnd
  1636  0653                     l742:
  1637                           
  1638                           ;main_ds1307.c: 172: void LCD_Command (unsigned char cmnd);main_ds1307.c: 173: {;main_ds
      +                          1307.c: 174:     RC0 = 0;
  1639  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0655  1007               	bcf	7,0	;volatile
  1642  0656                     l744:
  1643                           
  1644                           ;main_ds1307.c: 175:     PORTB = cmnd;
  1645  0656  0879               	movf	LCD_Command@cmnd,w
  1646  0657  0086               	movwf	6	;volatile
  1647  0658                     l746:
  1648                           
  1649                           ;main_ds1307.c: 176:     RC1 = 1;
  1650  0658  1487               	bsf	7,1	;volatile
  1651                           
  1652                           ;main_ds1307.c: 177:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1653  0659  3041               	movlw	65
  1654  065A  00F8               	movwf	??_LCD_Command+1
  1655  065B  30EE               	movlw	238
  1656  065C  00F7               	movwf	??_LCD_Command
  1657  065D                     u167:
  1658  065D  0BF7               	decfsz	??_LCD_Command,f
  1659  065E  2E5D               	goto	u167
  1660  065F  0BF8               	decfsz	??_LCD_Command+1,f
  1661  0660  2E5D               	goto	u167
  1662  0661  0000               	nop
  1663  0662                     l748:
  1664                           
  1665                           ;main_ds1307.c: 178:     RC1 = 0;
  1666  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0664  1087               	bcf	7,1	;volatile
  1669                           
  1670                           ;main_ds1307.c: 179:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1671  0665  3041               	movlw	65
  1672  0666  00F8               	movwf	??_LCD_Command+1
  1673  0667  30EE               	movlw	238
  1674  0668  00F7               	movwf	??_LCD_Command
  1675  0669                     u177:
  1676  0669  0BF7               	decfsz	??_LCD_Command,f
  1677  066A  2E69               	goto	u177
  1678  066B  0BF8               	decfsz	??_LCD_Command+1,f
  1679  066C  2E69               	goto	u177
  1680  066D  0000               	nop
  1681  066E                     l750:
  1682                           
  1683                           ;main_ds1307.c: 180:     PORTB = (cmnd<<4);
  1684  066E  0879               	movf	LCD_Command@cmnd,w
  1685  066F  00F7               	movwf	??_LCD_Command
  1686  0670  3003               	movlw	3
  1687  0671                     u25:
  1688  0671  1003               	clrc
  1689  0672  0DF7               	rlf	??_LCD_Command,f
  1690  0673  3EFF               	addlw	-1
  1691  0674  1D03               	skipz
  1692  0675  2E71               	goto	u25
  1693  0676  1003               	clrc
  1694  0677  0D77               	rlf	??_LCD_Command,w
  1695  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1697  067A  0086               	movwf	6	;volatile
  1698  067B                     l752:
  1699                           
  1700                           ;main_ds1307.c: 181:     RC1 = 1;
  1701  067B  1487               	bsf	7,1	;volatile
  1702  067C                     l754:
  1703                           
  1704                           ;main_ds1307.c: 182:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1705  067C  3041               	movlw	65
  1706  067D  00F8               	movwf	??_LCD_Command+1
  1707  067E  30EE               	movlw	238
  1708  067F  00F7               	movwf	??_LCD_Command
  1709  0680                     u187:
  1710  0680  0BF7               	decfsz	??_LCD_Command,f
  1711  0681  2E80               	goto	u187
  1712  0682  0BF8               	decfsz	??_LCD_Command+1,f
  1713  0683  2E80               	goto	u187
  1714  0684  0000               	nop
  1715  0685                     l756:
  1716                           
  1717                           ;main_ds1307.c: 183:     RC1 = 0;
  1718  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0687  1087               	bcf	7,1	;volatile
  1721  0688                     l758:
  1722                           
  1723                           ;main_ds1307.c: 184:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1724  0688  3041               	movlw	65
  1725  0689  00F8               	movwf	??_LCD_Command+1
  1726  068A  30EE               	movlw	238
  1727  068B  00F7               	movwf	??_LCD_Command
  1728  068C                     u197:
  1729  068C  0BF7               	decfsz	??_LCD_Command,f
  1730  068D  2E8C               	goto	u197
  1731  068E  0BF8               	decfsz	??_LCD_Command+1,f
  1732  068F  2E8C               	goto	u197
  1733  0690  0000               	nop
  1734  0691                     l136:
  1735  0691  0008               	return
  1736  0692                     __end_of_LCD_Command:
  1737  007E                     btemp	set	126	;btemp
  1738  007E                     wtemp0	set	126
  1739                           
  1740                           	psect	idloc
  1741                           
  1742                           ;Config register IDLOC0 @ 0x2000
  1743                           ;	unspecified, using default values
  1744  2000                     	org	8192
  1745  2000  3FFF               	dw	16383
  1746                           
  1747                           ;Config register IDLOC1 @ 0x2001
  1748                           ;	unspecified, using default values
  1749  2001                     	org	8193
  1750  2001  3FFF               	dw	16383
  1751                           
  1752                           ;Config register IDLOC2 @ 0x2002
  1753                           ;	unspecified, using default values
  1754  2002                     	org	8194
  1755  2002  3FFF               	dw	16383
  1756                           
  1757                           ;Config register IDLOC3 @ 0x2003
  1758                           ;	unspecified, using default values
  1759  2003                     	org	8195
  1760  2003  3FFF               	dw	16383
  1761                           
  1762                           	psect	config
  1763                           
  1764                           ;Config register CONFIG @ 0x2007
  1765                           ;	Oscillator Selection bits
  1766                           ;	FOSC = HS, HS oscillator
  1767                           ;	Watchdog Timer Enable bit
  1768                           ;	WDTE = OFF, WDT disabled
  1769                           ;	Power-up Timer Enable bit
  1770                           ;	PWRTE = OFF, PWRT disabled
  1771                           ;	Brown-out Reset Enable bit
  1772                           ;	BOREN = ON, BOR enabled
  1773                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1774                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1775                           ;	Data EEPROM Memory Code Protection bit
  1776                           ;	CPD = OFF, Data EEPROM code protection off
  1777                           ;	Flash Program Memory Write Enable bits
  1778                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1779                           ;	In-Circuit Debugger Mode bit
  1780                           ;	DEBUG = 0x1, unprogrammed default
  1781                           ;	Flash Program Memory Code Protection bit
  1782                           ;	CP = OFF, Code protection off
  1783  2007                     	org	8199
  1784  2007  3FFA               	dw	16378

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_LCD_init
    _main->_show
    _show->_LCD_Char
    _rtc_read_byte->_rtc_send
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     306
                                              5 COMMON     1     1      0
                           _LCD_Char
                        _LCD_Command
                           _LCD_init
                              _convd
                             _convup
                            _rtc_int
                      _rtc_read_byte
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     141
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _rtc_read_byte                                        3     3      0      45
                                              1 COMMON     3     3      0
                            _rtc_nak
                           _rtc_read
                            _rtc_res
                           _rtc_send
                           _rtc_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_stop                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_send                                             1     1      0      15
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_res                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_read                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_nak                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convup                                               2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _convd                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      30
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Command
   _LCD_init
     _LCD_Command
   _convd
   _convup
   _rtc_int
   _rtc_read_byte
     _rtc_nak
       _waitmssp
     _rtc_read
       _waitmssp
     _rtc_res
       _waitmssp
     _rtc_send
       _waitmssp
     _rtc_stop
       _waitmssp
     _waitmssp
   _show
     _LCD_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 07 09:27:56 2022

                      pc 0002             ?_LCD_Command 0077                       l90 0560  
                     l92 0566                       l93 0567                       l87 05C2  
                     l96 05A6                       l99 05AC                       u10 0566  
                     u11 0565                       u40 05AC                       u25 0671  
                     u41 05AB                       u35 06B1                       u60 05B7  
                     u61 05B3                       u80 062D                       u81 062C  
                     u74 05BA                       u95 0588                       fsr 0004  
                    l112 0651                      l105 059B                      l121 0570  
                    l130 058F                      l108 0619                      l133 055F  
                    l109 0627                      l142 0617                      l118 0579  
                    l127 0583                      l136 0691                      l139 06D1  
                    l148 05E1                      l800 057E                      l802 05E2  
                    l804 05EA                      l740 0560                      l820 0619  
                    l750 066E                      l742 0653                      l806 060E  
                    l830 0638                      l822 061E                      l752 067B  
                    l744 0656                      l840 0585                      l816 05AD  
                    l832 063E                      l824 0622                      l760 0693  
                    l754 067C                      l746 0658                      l818 05BA  
                    l834 0646                      l826 062D                      l770 06BB  
                    l762 0696                      l930 05C4                      l756 0685  
                    l748 0662                      l844 055C                      l780 05A1  
                    l836 064B                      l828 0633                      l772 06BC  
                    l764 0698                      l932 05C5                      l940 06D7  
                    l758 0688                      l790 0598                      l782 0571  
                    l774 06C5                      l766 06A2                      l934 05D1  
                    l950 0700                      l942 06DD                      l784 0574  
                    l776 06C8                      l768 06AE                      l936 05D5  
                    l960 072D                      l952 0709                      l944 06E9  
                    l786 0590                      l794 0568                      l778 059D  
                    l970 075A                      l962 0733                      l954 0712  
                    l946 06EE                      l938 06D2                      l788 0593  
                    l796 056B                      l980 0787                      l972 0765  
                    l964 073E                      l956 071B                      l948 06F7  
                    l798 057A                      l990 07B9                      l982 0792  
                    l974 076B                      l966 0749                      l958 0724  
                    l992 07BF                      l984 079D                      l976 0776  
                    l968 074F                      l994 07CA                      l986 07A3  
                    l978 0781                      l996 07D5                      l988 07AE  
                    l998 07DB                      _RC0 0038                      _RC1 0039  
                    u100 05E1                      u101 05E0                      u117 069D  
                    u127 06A9                      u137 06C0                      u147 06CC  
                    u157 0612                      u167 065D                      _PEN 048A  
                    u177 0669                      u187 0680                      u197 068C  
                    _SEN 0488                      _day 0073                      _min 0075  
                    _sec 0076                      fsr0 0004                     l1000 07E6  
                   STR_1 0009                     STR_2 000F                     _RCEN 048B  
                   _RSEN 0489                     _date 0072                     _main 06D2  
                   _hour 0074                     _show 05C3                     _year 0070  
                   btemp 007E                     start 0000         __end_of_LCD_Char 06D2  
           LCD_Char@data 0079         __end_of_LCD_init 0618          ??_rtc_read_byte 0078  
                  ?_main 0077                    _ACKEN 048C                    _ACKDT 048D  
                  ?_show 0077                    _PORTB 0006                    _SSPIF 0063  
                  _convd 055B                    _month 0071                    pclath 000A  
        __end_of_rtc_nak 0584          __end_of_rtc_int 05C3          __end_of_rtc_res 0571  
                  show@s 007B                    status 0003                    wtemp0 007E  
        __initialization 07F5             __end_of_main 07F5             __end_of_show 05E2  
                 ??_main 007C                   ??_show 007A                   ?_convd 0077  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                   _convup 0584  
   __size_of_LCD_Command 0040         __end_of_rtc_read 059C         __end_of_waitmssp 0568  
       __end_of_rtc_send 05AD         __end_of_rtc_stop 057A                ??_rtc_nak 0077  
              ??_rtc_int 0077                ??_rtc_res 0077                ?_LCD_Char 0077  
__end_of__initialization 07FC                ?_LCD_init 0077           __pcstackCOMMON 0077  
          __end_of_convd 0560                  ??_convd 0077               ??_LCD_Char 0077  
             ??_LCD_init 007A               __pmaintext 06D2                  ?_convup 0077  
                _ACKSTAT 048E               __stringtab 0003                ?_rtc_read 0077  
              ?_waitmssp 0077                ?_rtc_send 0077                ?_rtc_stop 0077  
        __size_of_convup 000C                  __ptext1 05C3                  __ptext2 0692  
                __ptext3 0618                  __ptext4 0571                  __ptext5 059C  
                __ptext6 0568                  __ptext7 0590                  __ptext8 057A  
                __ptext9 0560    __end_of_rtc_read_byte 0652                  _rtc_nak 057A  
                _rtc_int 05AD                  _rtc_res 0568     end_of_initialization 07FC  
             ??_rtc_read 0077               ??_waitmssp 0077               ??_rtc_send 0077  
             ??_rtc_stop 0077         rtc_read_byte@rec 007A                _TRISBbits 0086  
              _TRISCbits 0087        __size_of_LCD_Char 0040        __size_of_LCD_init 0036  
          ??_LCD_Command 0077           __end_of_convup 0590      start_initialization 07F5  
               ??_convup 0077      __end_of_LCD_Command 0692              __pbssCOMMON 0070  
              ___latbits 0002        __size_of_rtc_read 000C        __size_of_waitmssp 0008  
      __size_of_rtc_send 0011        __size_of_rtc_stop 0009                __pstrings 0003  
               ?_rtc_nak 0077                 ?_rtc_int 0077                 ?_rtc_res 0077  
         __size_of_convd 0005                 _LCD_Char 0692                 _LCD_init 05E2  
            _LCD_Command 0652              __stringbase 0008                convup@bcd 0078  
 __size_of_rtc_read_byte 003A       __end_of__stringtab 0009                 __ptext10 05AD  
               __ptext11 0584                 __ptext12 055B                 __ptext13 05E2  
               __ptext14 0652         __size_of_rtc_nak 000A         __size_of_rtc_int 0016  
       __size_of_rtc_res 0009            __size_of_main 0123            __size_of_show 001F  
               _rtc_read 0590                 _waitmssp 0560                 _rtc_send 059C  
               _rtc_stop 0571                rtc_send@a 0077                 convd@bcd 0077  
          _rtc_read_byte 0618          LCD_Command@cmnd 0079                stringcode 0003  
         ?_rtc_read_byte 0077                 stringdir 0003                 stringtab 0003  
      rtc_read_byte@addr 0079  
