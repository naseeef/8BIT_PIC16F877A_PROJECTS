

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 04 13:38:17 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  001E                     _ADRESH	set	30
   180  001F                     _ADCON0	set	31
   181  001A                     _RCREG	set	26
   182  0019                     _TXREG	set	25
   183  0018                     _RCSTA	set	24
   184  0006                     _PORTB	set	6
   185  00FA                     _GO_nDONE	set	250
   186  0065                     _RCIF	set	101
   187  0064                     _TXIF	set	100
   188  0039                     _RC1	set	57
   189  0038                     _RC0	set	56
   190  009E                     _ADRESL	set	158
   191  009F                     _ADCON1	set	159
   192  0087                     _TRISC	set	135
   193  0086                     _TRISB	set	134
   194  0099                     _SPBRG	set	153
   195  0098                     _TXSTA	set	152
   196                           
   197                           	psect	cinit
   198  07F2                     start_initialization:	
   199                           ; #config settings
   200                           
   201  07F2                     __initialization:
   202                           
   203                           ; Clear objects allocated to BANK0
   204  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   205  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   206  07F4  01C3               	clrf	__pbssBANK0& (0+127)
   207  07F5  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   208  07F6  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   209  07F7  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   210  07F8  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   211  07F9  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   212  07FA  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   213  07FB  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   214  07FC                     end_of_initialization:	
   215                           ;End of C runtime variable initialization code
   216                           
   217  07FC                     __end_of__initialization:
   218  07FC  0183               	clrf	3
   219  07FD  120A  118A  2E19   	ljmp	_main	;jump to C main() function
   220                           
   221                           	psect	bssBANK0
   222  0043                     __pbssBANK0:
   223  0043                     _AV:
   224  0043                     	ds	8
   225                           
   226                           	psect	cstackCOMMON
   227  0070                     __pcstackCOMMON:
   228  0070                     ?_ADC_Init:
   229  0070                     ??_ADC_Init:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_LCD_Command:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ??_LCD_Command:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_LCD_Char:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ??_LCD_Char:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_LCD_init:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_ser_int:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_ser_int:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_tx:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?___lwdiv:	
   260                           ; 2 bytes @ 0x0
   261                           
   262  0070                     ?___lwmod:	
   263                           ; 2 bytes @ 0x0
   264                           
   265  0070                     ?___lmul:	
   266                           ; 2 bytes @ 0x0
   267                           
   268  0070                     tx@a:	
   269                           ; 4 bytes @ 0x0
   270                           
   271  0070                     ___lwdiv@divisor:	
   272                           ; 2 bytes @ 0x0
   273                           
   274  0070                     ___lwmod@divisor:	
   275                           ; 2 bytes @ 0x0
   276                           
   277  0070                     ___lmul@multiplier:	
   278                           ; 2 bytes @ 0x0
   279                           
   280                           
   281                           ; 4 bytes @ 0x0
   282  0070                     	ds	2
   283  0072                     ??_tx:
   284  0072                     LCD_Command@cmnd:	
   285                           ; 1 bytes @ 0x2
   286                           
   287  0072                     LCD_Char@data:	
   288                           ; 1 bytes @ 0x2
   289                           
   290  0072                     ___lwdiv@dividend:	
   291                           ; 1 bytes @ 0x2
   292                           
   293  0072                     ___lwmod@dividend:	
   294                           ; 2 bytes @ 0x2
   295                           
   296                           
   297                           ; 2 bytes @ 0x2
   298  0072                     	ds	1
   299  0073                     ??_LCD_init:
   300                           
   301                           ; 1 bytes @ 0x3
   302  0073                     	ds	1
   303  0074                     ??___lwdiv:
   304  0074                     ??___lwmod:	
   305                           ; 1 bytes @ 0x4
   306                           
   307  0074                     ___lmul@multiplicand:	
   308                           ; 1 bytes @ 0x4
   309                           
   310                           
   311                           ; 4 bytes @ 0x4
   312  0074                     	ds	1
   313  0075                     ___lwmod@counter:
   314  0075                     ___lwdiv@quotient:	
   315                           ; 1 bytes @ 0x5
   316                           
   317                           
   318                           ; 2 bytes @ 0x5
   319  0075                     	ds	2
   320  0077                     ___lwdiv@counter:
   321                           
   322                           ; 1 bytes @ 0x7
   323  0077                     	ds	1
   324  0078                     ??___lmul:
   325                           
   326                           ; 1 bytes @ 0x8
   327  0078                     	ds	1
   328  0079                     ___lmul@product:
   329                           
   330                           ; 4 bytes @ 0x9
   331  0079                     	ds	4
   332  007D                     ??___aldiv:
   333                           
   334                           ; 1 bytes @ 0xD
   335  007D                     	ds	1
   336  007E                     ??_LCD_num:
   337                           
   338                           	psect	cstackBANK0
   339  0020                     __pcstackBANK0:	
   340                           ; 1 bytes @ 0xE
   341                           
   342  0020                     ?___aldiv:
   343  0020                     ___aldiv@divisor:	
   344                           ; 4 bytes @ 0x0
   345                           
   346                           
   347                           ; 4 bytes @ 0x0
   348  0020                     	ds	4
   349  0024                     ___aldiv@dividend:
   350                           
   351                           ; 4 bytes @ 0x4
   352  0024                     	ds	4
   353  0028                     ___aldiv@counter:
   354                           
   355                           ; 1 bytes @ 0x8
   356  0028                     	ds	1
   357  0029                     ___aldiv@sign:
   358                           
   359                           ; 1 bytes @ 0x9
   360  0029                     	ds	1
   361  002A                     ___aldiv@quotient:
   362                           
   363                           ; 4 bytes @ 0xA
   364  002A                     	ds	4
   365  002E                     ?_LCD_num:
   366  002E                     LCD_num@val:	
   367                           ; 1 bytes @ 0xE
   368                           
   369                           
   370                           ; 4 bytes @ 0xE
   371  002E                     	ds	4
   372  0032                     LCD_num@digit1:
   373                           
   374                           ; 2 bytes @ 0x12
   375  0032                     	ds	2
   376  0034                     LCD_num@digit2:
   377                           
   378                           ; 2 bytes @ 0x14
   379  0034                     	ds	2
   380  0036                     LCD_num@digit3:
   381                           
   382                           ; 2 bytes @ 0x16
   383  0036                     	ds	2
   384  0038                     LCD_num@result:
   385                           
   386                           ; 2 bytes @ 0x18
   387  0038                     	ds	2
   388  003A                     LCD_num@result1:
   389                           
   390                           ; 2 bytes @ 0x1A
   391  003A                     	ds	2
   392  003C                     LCD_num@remainder:
   393                           
   394                           ; 2 bytes @ 0x1C
   395  003C                     	ds	2
   396  003E                     ??_main:
   397                           
   398                           ; 1 bytes @ 0x1E
   399  003E                     	ds	3
   400  0041                     main@i:
   401                           
   402                           ; 2 bytes @ 0x21
   403  0041                     	ds	2
   404                           
   405                           	psect	maintext
   406  0619                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 28 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  i               2   33[BANK0 ] int 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       2       0       0       0
   428 ;;      Temps:          0       3       0       0       0
   429 ;;      Totals:         0       5       0       0       0
   430 ;;Total ram usage:        5 bytes
   431 ;; Hardware stack levels required when called: 2
   432 ;; This function calls:
   433 ;;		_ADC_Init
   434 ;;		_LCD_Command
   435 ;;		_LCD_init
   436 ;;		_LCD_num
   437 ;;		_ser_int
   438 ;;		_tx
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _main
   446  0619                     _main:
   447  0619                     l1073:	
   448                           ;incstack = 0
   449                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   450                           
   451                           
   452                           ;main.c: 30:     TRISB =0x00;
   453  0619  1683               	bsf	3,5	;RP0=1, select bank1
   454  061A  1303               	bcf	3,6	;RP1=0, select bank1
   455  061B  0186               	clrf	6	;volatile
   456                           
   457                           ;main.c: 31:     TRISC =0x00;
   458  061C  0187               	clrf	7	;volatile
   459  061D                     l1075:
   460                           
   461                           ;main.c: 33:     LCD_init();
   462  061D  120A  118A  2443  120A  118A  	fcall	_LCD_init
   463  0622                     l1077:
   464                           
   465                           ;main.c: 34:     ser_int();
   466  0622  120A  118A  2436  120A  118A  	fcall	_ser_int
   467  0627                     l1079:
   468                           
   469                           ;main.c: 36:     {;main.c: 37:         ADC_Init ();
   470  0627  120A  118A  25B5  120A  118A  	fcall	_ADC_Init
   471  062C                     l1081:
   472                           
   473                           ;main.c: 38:         GO_nDONE=1;
   474  062C  1283               	bcf	3,5	;RP0=0, select bank0
   475  062D  1303               	bcf	3,6	;RP1=0, select bank0
   476  062E  151F               	bsf	31,2	;volatile
   477  062F                     l79:	
   478                           ;main.c: 39:         while(GO_nDONE==1);
   479                           
   480  062F  191F               	btfsc	31,2	;volatile
   481  0630  2E32               	goto	u681
   482  0631  2E33               	goto	u680
   483  0632                     u681:
   484  0632  2E2F               	goto	l79
   485  0633                     u680:
   486  0633                     l1083:
   487                           
   488                           ;main.c: 40:         _delay((unsigned long)((10)*(20000000/4000.0)));
   489  0633  3041               	movlw	65
   490  0634  1283               	bcf	3,5	;RP0=0, select bank0
   491  0635  1303               	bcf	3,6	;RP1=0, select bank0
   492  0636  00BF               	movwf	??_main+1
   493  0637  30ED               	movlw	237
   494  0638  00BE               	movwf	??_main
   495  0639                     u707:
   496  0639  0BBE               	decfsz	??_main,f
   497  063A  2E39               	goto	u707
   498  063B  0BBF               	decfsz	??_main+1,f
   499  063C  2E39               	goto	u707
   500  063D  2E3E               	nop2
   501  063E                     l1085:
   502                           
   503                           ;main.c: 42:         for (int i=0;i<4;i++)
   504  063E  1283               	bcf	3,5	;RP0=0, select bank0
   505  063F  1303               	bcf	3,6	;RP1=0, select bank0
   506  0640  01C1               	clrf	main@i
   507  0641  01C2               	clrf	main@i+1
   508  0642                     l1091:
   509                           
   510                           ;main.c: 43:         {;main.c: 44:             LCD_num(AV[i]);
   511  0642  1283               	bcf	3,5	;RP0=0, select bank0
   512  0643  1303               	bcf	3,6	;RP1=0, select bank0
   513  0644  0841               	movf	main@i,w
   514  0645  00BE               	movwf	??_main
   515  0646  073E               	addwf	??_main,w
   516  0647  3E43               	addlw	(low (_AV| 0))& (0+255)
   517  0648  0084               	movwf	4
   518  0649  1383               	bcf	3,7	;select IRP bank0
   519  064A  0800               	movf	0,w
   520  064B  00BF               	movwf	??_main+1
   521  064C  0A84               	incf	4,f
   522  064D  0800               	movf	0,w
   523  064E  00C0               	movwf	??_main+2
   524  064F  083F               	movf	??_main+1,w
   525  0650  00AE               	movwf	LCD_num@val
   526  0651  0840               	movf	??_main+2,w
   527  0652  00AF               	movwf	LCD_num@val+1
   528  0653  01B0               	clrf	LCD_num@val+2
   529  0654  01B1               	clrf	LCD_num@val+3
   530  0655  120A  118A  2746  120A  118A  	fcall	_LCD_num
   531                           
   532                           ;main.c: 45:             tx(AV[i]);
   533  065A  1283               	bcf	3,5	;RP0=0, select bank0
   534  065B  1303               	bcf	3,6	;RP1=0, select bank0
   535  065C  0841               	movf	main@i,w
   536  065D  00BE               	movwf	??_main
   537  065E  073E               	addwf	??_main,w
   538  065F  3E43               	addlw	(low (_AV| 0))& (0+255)
   539  0660  0084               	movwf	4
   540  0661  1383               	bcf	3,7	;select IRP bank0
   541  0662  0800               	movf	0,w
   542  0663  00F0               	movwf	tx@a
   543  0664  0A84               	incf	4,f
   544  0665  0800               	movf	0,w
   545  0666  00F1               	movwf	tx@a+1
   546  0667  120A  118A  242C  120A  118A  	fcall	_tx
   547  066C                     l1093:
   548                           
   549                           ;main.c: 46:             _delay((unsigned long)((500)*(20000000/4000.0)));
   550  066C  300D               	movlw	13
   551  066D  1283               	bcf	3,5	;RP0=0, select bank0
   552  066E  1303               	bcf	3,6	;RP1=0, select bank0
   553  066F  00C0               	movwf	??_main+2
   554  0670  30AF               	movlw	175
   555  0671  00BF               	movwf	??_main+1
   556  0672  30B5               	movlw	181
   557  0673  00BE               	movwf	??_main
   558  0674                     u717:
   559  0674  0BBE               	decfsz	??_main,f
   560  0675  2E74               	goto	u717
   561  0676  0BBF               	decfsz	??_main+1,f
   562  0677  2E74               	goto	u717
   563  0678  0BC0               	decfsz	??_main+2,f
   564  0679  2E74               	goto	u717
   565  067A  2E7B               	nop2
   566  067B                     l1095:
   567                           
   568                           ;main.c: 47:         }
   569  067B  3001               	movlw	1
   570  067C  1283               	bcf	3,5	;RP0=0, select bank0
   571  067D  1303               	bcf	3,6	;RP1=0, select bank0
   572  067E  07C1               	addwf	main@i,f
   573  067F  1803               	skipnc
   574  0680  0AC2               	incf	main@i+1,f
   575  0681  3000               	movlw	0
   576  0682  07C2               	addwf	main@i+1,f
   577  0683                     l1097:
   578  0683  0842               	movf	main@i+1,w
   579  0684  3A80               	xorlw	128
   580  0685  00FF               	movwf	btemp+1
   581  0686  3080               	movlw	128
   582  0687  027F               	subwf	btemp+1,w
   583  0688  1D03               	skipz
   584  0689  2E8C               	goto	u695
   585  068A  3004               	movlw	4
   586  068B  0241               	subwf	main@i,w
   587  068C                     u695:
   588  068C  1C03               	skipc
   589  068D  2E8F               	goto	u691
   590  068E  2E90               	goto	u690
   591  068F                     u691:
   592  068F  2E42               	goto	l1091
   593  0690                     u690:
   594  0690                     l1099:
   595                           
   596                           ;main.c: 48:         LCD_Command(0x01);
   597  0690  3001               	movlw	1
   598  0691  120A  118A  24AB  120A  118A  	fcall	_LCD_Command
   599  0696                     l1101:
   600                           
   601                           ;main.c: 49:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   602  0696  301A               	movlw	26
   603  0697  1283               	bcf	3,5	;RP0=0, select bank0
   604  0698  1303               	bcf	3,6	;RP1=0, select bank0
   605  0699  00C0               	movwf	??_main+2
   606  069A  305E               	movlw	94
   607  069B  00BF               	movwf	??_main+1
   608  069C  306D               	movlw	109
   609  069D  00BE               	movwf	??_main
   610  069E                     u727:
   611  069E  0BBE               	decfsz	??_main,f
   612  069F  2E9E               	goto	u727
   613  06A0  0BBF               	decfsz	??_main+1,f
   614  06A1  2E9E               	goto	u727
   615  06A2  0BC0               	decfsz	??_main+2,f
   616  06A3  2E9E               	goto	u727
   617  06A4  2EA5               	nop2
   618  06A5  2E27               	goto	l1079
   619  06A6  120A  118A  2800   	ljmp	start
   620  06A9                     __end_of_main:
   621                           
   622                           	psect	text1
   623  042C                     __ptext1:	
   624 ;; *************** function _tx *****************
   625 ;; Defined at:
   626 ;;		line 13 in file "./uart.h"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  a               2    0[COMMON] unsigned int 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  2    0[COMMON] unsigned int 
   633 ;; Registers used:
   634 ;;		wreg
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         2       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         2       0       0       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _tx
   655  042C                     _tx:
   656  042C                     l1061:	
   657                           ;incstack = 0
   658                           ; Regs used in _tx: [wreg]
   659                           
   660                           
   661                           ;./uart.h: 13: unsigned int tx(unsigned int a);./uart.h: 14: {;./uart.h: 15:  TXREG=a;
   662  042C  0870               	movf	tx@a,w
   663  042D  1283               	bcf	3,5	;RP0=0, select bank0
   664  042E  1303               	bcf	3,6	;RP1=0, select bank0
   665  042F  0099               	movwf	25	;volatile
   666  0430                     l62:	
   667                           ;./uart.h: 16:  while(!TXIF);
   668                           
   669  0430  1E0C               	btfss	12,4	;volatile
   670  0431  2C33               	goto	u661
   671  0432  2C34               	goto	u660
   672  0433                     u661:
   673  0433  2C30               	goto	l62
   674  0434                     u660:
   675  0434                     l64:
   676                           
   677                           ;./uart.h: 17:  TXIF = 0;
   678  0434  120C               	bcf	12,4	;volatile
   679  0435                     l65:
   680  0435  0008               	return
   681  0436                     __end_of_tx:
   682                           
   683                           	psect	text2
   684  0436                     __ptext2:	
   685 ;; *************** function _ser_int *****************
   686 ;; Defined at:
   687 ;;		line 6 in file "./uart.h"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _ser_int
   716  0436                     _ser_int:
   717  0436                     l1059:	
   718                           ;incstack = 0
   719                           ; Regs used in _ser_int: [wreg]
   720                           
   721                           
   722                           ;./uart.h: 8:  TXSTA= 0x20;
   723  0436  3020               	movlw	32
   724  0437  1683               	bsf	3,5	;RP0=1, select bank1
   725  0438  1303               	bcf	3,6	;RP1=0, select bank1
   726  0439  0098               	movwf	24	;volatile
   727                           
   728                           ;./uart.h: 9:  RCSTA= 0b10010000;
   729  043A  3090               	movlw	144
   730  043B  1283               	bcf	3,5	;RP0=0, select bank0
   731  043C  1303               	bcf	3,6	;RP1=0, select bank0
   732  043D  0098               	movwf	24	;volatile
   733                           
   734                           ;./uart.h: 10:  SPBRG=31;
   735  043E  301F               	movlw	31
   736  043F  1683               	bsf	3,5	;RP0=1, select bank1
   737  0440  1303               	bcf	3,6	;RP1=0, select bank1
   738  0441  0099               	movwf	25	;volatile
   739  0442                     l59:
   740  0442  0008               	return
   741  0443                     __end_of_ser_int:
   742                           
   743                           	psect	text3
   744  0746                     __ptext3:	
   745 ;; *************** function _LCD_num *****************
   746 ;; Defined at:
   747 ;;		line 47 in file "./lcd4bit.h"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  val             4   14[BANK0 ] long 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  remainder       2   28[BANK0 ] unsigned int 
   752 ;;  result1         2   26[BANK0 ] unsigned int 
   753 ;;  result          2   24[BANK0 ] unsigned int 
   754 ;;  digit3          2   22[BANK0 ] unsigned int 
   755 ;;  digit2          2   20[BANK0 ] unsigned int 
   756 ;;  digit1          2   18[BANK0 ] unsigned int 
   757 ;;  calb_val        2    0        int 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       4       0       0       0
   768 ;;      Locals:         0      12       0       0       0
   769 ;;      Temps:          0       0       0       0       0
   770 ;;      Totals:         0      16       0       0       0
   771 ;;Total ram usage:       16 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 1
   774 ;; This function calls:
   775 ;;		_LCD_Char
   776 ;;		___aldiv
   777 ;;		___lmul
   778 ;;		___lwdiv
   779 ;;		___lwmod
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _LCD_num
   787  0746                     _LCD_num:
   788  0746                     l1037:	
   789                           ;incstack = 0
   790                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
   791                           
   792  0746                     l1039:
   793                           
   794                           ;./lcd4bit.h: 50:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 51:     result1;;./lcd4bit.h: 52:     result = ((val*100)/calb_val);
   795  0746  3000               	movlw	0
   796  0747  1283               	bcf	3,5	;RP0=0, select bank0
   797  0748  1303               	bcf	3,6	;RP1=0, select bank0
   798  0749  00A3               	movwf	___aldiv@divisor+3
   799  074A  3000               	movlw	0
   800  074B  00A2               	movwf	___aldiv@divisor+2
   801  074C  3000               	movlw	0
   802  074D  00A1               	movwf	___aldiv@divisor+1
   803  074E  30C8               	movlw	200
   804  074F  00A0               	movwf	___aldiv@divisor
   805  0750  0831               	movf	LCD_num@val+3,w
   806  0751  00F3               	movwf	___lmul@multiplier+3
   807  0752  0830               	movf	LCD_num@val+2,w
   808  0753  00F2               	movwf	___lmul@multiplier+2
   809  0754  082F               	movf	LCD_num@val+1,w
   810  0755  00F1               	movwf	___lmul@multiplier+1
   811  0756  082E               	movf	LCD_num@val,w
   812  0757  00F0               	movwf	___lmul@multiplier
   813  0758  3000               	movlw	0
   814  0759  00F7               	movwf	___lmul@multiplicand+3
   815  075A  3000               	movlw	0
   816  075B  00F6               	movwf	___lmul@multiplicand+2
   817  075C  3000               	movlw	0
   818  075D  00F5               	movwf	___lmul@multiplicand+1
   819  075E  3064               	movlw	100
   820  075F  00F4               	movwf	___lmul@multiplicand
   821  0760  120A  118A  256F  120A  118A  	fcall	___lmul
   822  0765  0873               	movf	?___lmul+3,w
   823  0766  1283               	bcf	3,5	;RP0=0, select bank0
   824  0767  1303               	bcf	3,6	;RP1=0, select bank0
   825  0768  00A7               	movwf	___aldiv@dividend+3
   826  0769  0872               	movf	?___lmul+2,w
   827  076A  00A6               	movwf	___aldiv@dividend+2
   828  076B  0871               	movf	?___lmul+1,w
   829  076C  00A5               	movwf	___aldiv@dividend+1
   830  076D  0870               	movf	?___lmul,w
   831  076E  00A4               	movwf	___aldiv@dividend
   832  076F  120A  118A  26A9  120A  118A  	fcall	___aldiv
   833  0774  1283               	bcf	3,5	;RP0=0, select bank0
   834  0775  1303               	bcf	3,6	;RP1=0, select bank0
   835  0776  0821               	movf	?___aldiv+1,w
   836  0777  00B9               	movwf	LCD_num@result+1
   837  0778  0820               	movf	?___aldiv,w
   838  0779  00B8               	movwf	LCD_num@result
   839  077A                     l1041:
   840                           
   841                           ;./lcd4bit.h: 53:     remainder = result% 10;
   842  077A  300A               	movlw	10
   843  077B  00F0               	movwf	___lwmod@divisor
   844  077C  3000               	movlw	0
   845  077D  00F1               	movwf	___lwmod@divisor+1
   846  077E  0839               	movf	LCD_num@result+1,w
   847  077F  00F3               	movwf	___lwmod@dividend+1
   848  0780  0838               	movf	LCD_num@result,w
   849  0781  00F2               	movwf	___lwmod@dividend
   850  0782  120A  118A  2471  120A  118A  	fcall	___lwmod
   851  0787  0871               	movf	?___lwmod+1,w
   852  0788  1283               	bcf	3,5	;RP0=0, select bank0
   853  0789  1303               	bcf	3,6	;RP1=0, select bank0
   854  078A  00BD               	movwf	LCD_num@remainder+1
   855  078B  0870               	movf	?___lwmod,w
   856  078C  00BC               	movwf	LCD_num@remainder
   857  078D                     l1043:
   858                           
   859                           ;./lcd4bit.h: 54:     result1 = result /10;
   860  078D  300A               	movlw	10
   861  078E  00F0               	movwf	___lwdiv@divisor
   862  078F  3000               	movlw	0
   863  0790  00F1               	movwf	___lwdiv@divisor+1
   864  0791  0839               	movf	LCD_num@result+1,w
   865  0792  00F3               	movwf	___lwdiv@dividend+1
   866  0793  0838               	movf	LCD_num@result,w
   867  0794  00F2               	movwf	___lwdiv@dividend
   868  0795  120A  118A  252B  120A  118A  	fcall	___lwdiv
   869  079A  0871               	movf	?___lwdiv+1,w
   870  079B  1283               	bcf	3,5	;RP0=0, select bank0
   871  079C  1303               	bcf	3,6	;RP1=0, select bank0
   872  079D  00BB               	movwf	LCD_num@result1+1
   873  079E  0870               	movf	?___lwdiv,w
   874  079F  00BA               	movwf	LCD_num@result1
   875  07A0                     l1045:
   876                           
   877                           ;./lcd4bit.h: 55:     digit1 = remainder;
   878  07A0  083D               	movf	LCD_num@remainder+1,w
   879  07A1  00B3               	movwf	LCD_num@digit1+1
   880  07A2  083C               	movf	LCD_num@remainder,w
   881  07A3  00B2               	movwf	LCD_num@digit1
   882                           
   883                           ;./lcd4bit.h: 56:     remainder = result1%10;
   884  07A4  300A               	movlw	10
   885  07A5  00F0               	movwf	___lwmod@divisor
   886  07A6  3000               	movlw	0
   887  07A7  00F1               	movwf	___lwmod@divisor+1
   888  07A8  083B               	movf	LCD_num@result1+1,w
   889  07A9  00F3               	movwf	___lwmod@dividend+1
   890  07AA  083A               	movf	LCD_num@result1,w
   891  07AB  00F2               	movwf	___lwmod@dividend
   892  07AC  120A  118A  2471  120A  118A  	fcall	___lwmod
   893  07B1  0871               	movf	?___lwmod+1,w
   894  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   895  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   896  07B4  00BD               	movwf	LCD_num@remainder+1
   897  07B5  0870               	movf	?___lwmod,w
   898  07B6  00BC               	movwf	LCD_num@remainder
   899  07B7                     l1047:
   900                           
   901                           ;./lcd4bit.h: 57:     digit2 = remainder;
   902  07B7  083D               	movf	LCD_num@remainder+1,w
   903  07B8  00B5               	movwf	LCD_num@digit2+1
   904  07B9  083C               	movf	LCD_num@remainder,w
   905  07BA  00B4               	movwf	LCD_num@digit2
   906  07BB                     l1049:
   907                           
   908                           ;./lcd4bit.h: 58:     remainder = (result1/10);
   909  07BB  300A               	movlw	10
   910  07BC  00F0               	movwf	___lwdiv@divisor
   911  07BD  3000               	movlw	0
   912  07BE  00F1               	movwf	___lwdiv@divisor+1
   913  07BF  083B               	movf	LCD_num@result1+1,w
   914  07C0  00F3               	movwf	___lwdiv@dividend+1
   915  07C1  083A               	movf	LCD_num@result1,w
   916  07C2  00F2               	movwf	___lwdiv@dividend
   917  07C3  120A  118A  252B  120A  118A  	fcall	___lwdiv
   918  07C8  0871               	movf	?___lwdiv+1,w
   919  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   920  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   921  07CB  00BD               	movwf	LCD_num@remainder+1
   922  07CC  0870               	movf	?___lwdiv,w
   923  07CD  00BC               	movwf	LCD_num@remainder
   924                           
   925                           ;./lcd4bit.h: 59:     digit3=remainder;
   926  07CE  083D               	movf	LCD_num@remainder+1,w
   927  07CF  00B7               	movwf	LCD_num@digit3+1
   928  07D0  083C               	movf	LCD_num@remainder,w
   929  07D1  00B6               	movwf	LCD_num@digit3
   930  07D2                     l1051:
   931                           
   932                           ;./lcd4bit.h: 60:     LCD_Char(digit3+0x30);
   933  07D2  0836               	movf	LCD_num@digit3,w
   934  07D3  3E30               	addlw	48
   935  07D4  120A  118A  24EB  120A  118A  	fcall	_LCD_Char
   936  07D9                     l1053:
   937                           
   938                           ;./lcd4bit.h: 61:     LCD_Char('.');
   939  07D9  302E               	movlw	46
   940  07DA  120A  118A  24EB  120A  118A  	fcall	_LCD_Char
   941  07DF                     l1055:
   942                           
   943                           ;./lcd4bit.h: 62:     LCD_Char(digit2+0x30);
   944  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   945  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   946  07E1  0834               	movf	LCD_num@digit2,w
   947  07E2  3E30               	addlw	48
   948  07E3  120A  118A  24EB  120A  118A  	fcall	_LCD_Char
   949  07E8                     l1057:
   950                           
   951                           ;./lcd4bit.h: 63:     LCD_Char(digit1+0x30);
   952  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   953  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   954  07EA  0832               	movf	LCD_num@digit1,w
   955  07EB  3E30               	addlw	48
   956  07EC  120A  118A  24EB  120A  118A  	fcall	_LCD_Char
   957  07F1                     l50:
   958  07F1  0008               	return
   959  07F2                     __end_of_LCD_num:
   960                           
   961                           	psect	text4
   962  0471                     __ptext4:	
   963 ;; *************** function ___lwmod *****************
   964 ;; Defined at:
   965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  divisor         2    0[COMMON] unsigned int 
   968 ;;  dividend        2    2[COMMON] unsigned int 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  counter         1    5[COMMON] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  2    0[COMMON] unsigned int 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         4       0       0       0       0
   981 ;;      Locals:         1       0       0       0       0
   982 ;;      Temps:          1       0       0       0       0
   983 ;;      Totals:         6       0       0       0       0
   984 ;;Total ram usage:        6 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_LCD_num
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           
   994                           ;psect for function ___lwmod
   995  0471                     ___lwmod:
   996  0471                     l1011:	
   997                           ;incstack = 0
   998                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   999                           
  1000  0471  0870               	movf	___lwmod@divisor,w
  1001  0472  0471               	iorwf	___lwmod@divisor+1,w
  1002  0473  1903               	btfsc	3,2
  1003  0474  2C76               	goto	u601
  1004  0475  2C77               	goto	u600
  1005  0476                     u601:
  1006  0476  2CA6               	goto	l1029
  1007  0477                     u600:
  1008  0477                     l1013:
  1009  0477  01F5               	clrf	___lwmod@counter
  1010  0478  0AF5               	incf	___lwmod@counter,f
  1011  0479  2C85               	goto	l1019
  1012  047A                     l1015:
  1013  047A  3001               	movlw	1
  1014  047B                     u615:
  1015  047B  1003               	clrc
  1016  047C  0DF0               	rlf	___lwmod@divisor,f
  1017  047D  0DF1               	rlf	___lwmod@divisor+1,f
  1018  047E  3EFF               	addlw	-1
  1019  047F  1D03               	skipz
  1020  0480  2C7B               	goto	u615
  1021  0481                     l1017:
  1022  0481  3001               	movlw	1
  1023  0482  00F4               	movwf	??___lwmod
  1024  0483  0874               	movf	??___lwmod,w
  1025  0484  07F5               	addwf	___lwmod@counter,f
  1026  0485                     l1019:
  1027  0485  1FF1               	btfss	___lwmod@divisor+1,7
  1028  0486  2C88               	goto	u621
  1029  0487  2C89               	goto	u620
  1030  0488                     u621:
  1031  0488  2C7A               	goto	l1015
  1032  0489                     u620:
  1033  0489                     l1021:
  1034  0489  0871               	movf	___lwmod@divisor+1,w
  1035  048A  0273               	subwf	___lwmod@dividend+1,w
  1036  048B  1D03               	skipz
  1037  048C  2C8F               	goto	u635
  1038  048D  0870               	movf	___lwmod@divisor,w
  1039  048E  0272               	subwf	___lwmod@dividend,w
  1040  048F                     u635:
  1041  048F  1C03               	skipc
  1042  0490  2C92               	goto	u631
  1043  0491  2C93               	goto	u630
  1044  0492                     u631:
  1045  0492  2C99               	goto	l1025
  1046  0493                     u630:
  1047  0493                     l1023:
  1048  0493  0870               	movf	___lwmod@divisor,w
  1049  0494  02F2               	subwf	___lwmod@dividend,f
  1050  0495  0871               	movf	___lwmod@divisor+1,w
  1051  0496  1C03               	skipc
  1052  0497  03F3               	decf	___lwmod@dividend+1,f
  1053  0498  02F3               	subwf	___lwmod@dividend+1,f
  1054  0499                     l1025:
  1055  0499  3001               	movlw	1
  1056  049A                     u645:
  1057  049A  1003               	clrc
  1058  049B  0CF1               	rrf	___lwmod@divisor+1,f
  1059  049C  0CF0               	rrf	___lwmod@divisor,f
  1060  049D  3EFF               	addlw	-1
  1061  049E  1D03               	skipz
  1062  049F  2C9A               	goto	u645
  1063  04A0                     l1027:
  1064  04A0  3001               	movlw	1
  1065  04A1  02F5               	subwf	___lwmod@counter,f
  1066  04A2  1D03               	btfss	3,2
  1067  04A3  2CA5               	goto	u651
  1068  04A4  2CA6               	goto	u650
  1069  04A5                     u651:
  1070  04A5  2C89               	goto	l1021
  1071  04A6                     u650:
  1072  04A6                     l1029:
  1073  04A6  0873               	movf	___lwmod@dividend+1,w
  1074  04A7  00F1               	movwf	?___lwmod+1
  1075  04A8  0872               	movf	___lwmod@dividend,w
  1076  04A9  00F0               	movwf	?___lwmod
  1077  04AA                     l457:
  1078  04AA  0008               	return
  1079  04AB                     __end_of___lwmod:
  1080                           
  1081                           	psect	text5
  1082  052B                     __ptext5:	
  1083 ;; *************** function ___lwdiv *****************
  1084 ;; Defined at:
  1085 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  divisor         2    0[COMMON] unsigned int 
  1088 ;;  dividend        2    2[COMMON] unsigned int 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  quotient        2    5[COMMON] unsigned int 
  1091 ;;  counter         1    7[COMMON] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  2    0[COMMON] unsigned int 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         4       0       0       0       0
  1102 ;;      Locals:         3       0       0       0       0
  1103 ;;      Temps:          1       0       0       0       0
  1104 ;;      Totals:         8       0       0       0       0
  1105 ;;Total ram usage:        8 bytes
  1106 ;; Hardware stack levels used: 1
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_LCD_num
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           
  1115                           ;psect for function ___lwdiv
  1116  052B                     ___lwdiv:
  1117  052B                     l985:	
  1118                           ;incstack = 0
  1119                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1120                           
  1121  052B  01F5               	clrf	___lwdiv@quotient
  1122  052C  01F6               	clrf	___lwdiv@quotient+1
  1123  052D                     l987:
  1124  052D  0870               	movf	___lwdiv@divisor,w
  1125  052E  0471               	iorwf	___lwdiv@divisor+1,w
  1126  052F  1903               	btfsc	3,2
  1127  0530  2D32               	goto	u531
  1128  0531  2D33               	goto	u530
  1129  0532                     u531:
  1130  0532  2D6A               	goto	l1007
  1131  0533                     u530:
  1132  0533                     l989:
  1133  0533  01F7               	clrf	___lwdiv@counter
  1134  0534  0AF7               	incf	___lwdiv@counter,f
  1135  0535  2D41               	goto	l995
  1136  0536                     l991:
  1137  0536  3001               	movlw	1
  1138  0537                     u545:
  1139  0537  1003               	clrc
  1140  0538  0DF0               	rlf	___lwdiv@divisor,f
  1141  0539  0DF1               	rlf	___lwdiv@divisor+1,f
  1142  053A  3EFF               	addlw	-1
  1143  053B  1D03               	skipz
  1144  053C  2D37               	goto	u545
  1145  053D                     l993:
  1146  053D  3001               	movlw	1
  1147  053E  00F4               	movwf	??___lwdiv
  1148  053F  0874               	movf	??___lwdiv,w
  1149  0540  07F7               	addwf	___lwdiv@counter,f
  1150  0541                     l995:
  1151  0541  1FF1               	btfss	___lwdiv@divisor+1,7
  1152  0542  2D44               	goto	u551
  1153  0543  2D45               	goto	u550
  1154  0544                     u551:
  1155  0544  2D36               	goto	l991
  1156  0545                     u550:
  1157  0545                     l997:
  1158  0545  3001               	movlw	1
  1159  0546                     u565:
  1160  0546  1003               	clrc
  1161  0547  0DF5               	rlf	___lwdiv@quotient,f
  1162  0548  0DF6               	rlf	___lwdiv@quotient+1,f
  1163  0549  3EFF               	addlw	-1
  1164  054A  1D03               	skipz
  1165  054B  2D46               	goto	u565
  1166  054C  0871               	movf	___lwdiv@divisor+1,w
  1167  054D  0273               	subwf	___lwdiv@dividend+1,w
  1168  054E  1D03               	skipz
  1169  054F  2D52               	goto	u575
  1170  0550  0870               	movf	___lwdiv@divisor,w
  1171  0551  0272               	subwf	___lwdiv@dividend,w
  1172  0552                     u575:
  1173  0552  1C03               	skipc
  1174  0553  2D55               	goto	u571
  1175  0554  2D56               	goto	u570
  1176  0555                     u571:
  1177  0555  2D5D               	goto	l1003
  1178  0556                     u570:
  1179  0556                     l999:
  1180  0556  0870               	movf	___lwdiv@divisor,w
  1181  0557  02F2               	subwf	___lwdiv@dividend,f
  1182  0558  0871               	movf	___lwdiv@divisor+1,w
  1183  0559  1C03               	skipc
  1184  055A  03F3               	decf	___lwdiv@dividend+1,f
  1185  055B  02F3               	subwf	___lwdiv@dividend+1,f
  1186  055C                     l1001:
  1187  055C  1475               	bsf	___lwdiv@quotient,0
  1188  055D                     l1003:
  1189  055D  3001               	movlw	1
  1190  055E                     u585:
  1191  055E  1003               	clrc
  1192  055F  0CF1               	rrf	___lwdiv@divisor+1,f
  1193  0560  0CF0               	rrf	___lwdiv@divisor,f
  1194  0561  3EFF               	addlw	-1
  1195  0562  1D03               	skipz
  1196  0563  2D5E               	goto	u585
  1197  0564                     l1005:
  1198  0564  3001               	movlw	1
  1199  0565  02F7               	subwf	___lwdiv@counter,f
  1200  0566  1D03               	btfss	3,2
  1201  0567  2D69               	goto	u591
  1202  0568  2D6A               	goto	u590
  1203  0569                     u591:
  1204  0569  2D45               	goto	l997
  1205  056A                     u590:
  1206  056A                     l1007:
  1207  056A  0876               	movf	___lwdiv@quotient+1,w
  1208  056B  00F1               	movwf	?___lwdiv+1
  1209  056C  0875               	movf	___lwdiv@quotient,w
  1210  056D  00F0               	movwf	?___lwdiv
  1211  056E                     l447:
  1212  056E  0008               	return
  1213  056F                     __end_of___lwdiv:
  1214                           
  1215                           	psect	text6
  1216  056F                     __ptext6:	
  1217 ;; *************** function ___lmul *****************
  1218 ;; Defined at:
  1219 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  multiplier      4    0[COMMON] unsigned long 
  1222 ;;  multiplicand    4    4[COMMON] unsigned long 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  product         4    9[COMMON] unsigned long 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  4    0[COMMON] unsigned long 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1234 ;;      Params:         8       0       0       0       0
  1235 ;;      Locals:         4       0       0       0       0
  1236 ;;      Temps:          1       0       0       0       0
  1237 ;;      Totals:        13       0       0       0       0
  1238 ;;Total ram usage:       13 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_LCD_num
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function ___lmul
  1249  056F                     ___lmul:
  1250  056F                     l931:	
  1251                           ;incstack = 0
  1252                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1253                           
  1254  056F  3000               	movlw	0
  1255  0570  00FC               	movwf	___lmul@product+3
  1256  0571  3000               	movlw	0
  1257  0572  00FB               	movwf	___lmul@product+2
  1258  0573  3000               	movlw	0
  1259  0574  00FA               	movwf	___lmul@product+1
  1260  0575  3000               	movlw	0
  1261  0576  00F9               	movwf	___lmul@product
  1262  0577                     l933:
  1263  0577  1C70               	btfss	___lmul@multiplier,0
  1264  0578  2D7A               	goto	u381
  1265  0579  2D7B               	goto	u380
  1266  057A                     u381:
  1267  057A  2D92               	goto	l937
  1268  057B                     u380:
  1269  057B                     l935:
  1270  057B  0874               	movf	___lmul@multiplicand,w
  1271  057C  07F9               	addwf	___lmul@product,f
  1272  057D  0875               	movf	___lmul@multiplicand+1,w
  1273  057E  1103               	clrz
  1274  057F  1803               	skipnc
  1275  0580  3E01               	addlw	1
  1276  0581  1903               	skipnz
  1277  0582  2D84               	goto	u391
  1278  0583  07FA               	addwf	___lmul@product+1,f
  1279  0584                     u391:
  1280  0584  0876               	movf	___lmul@multiplicand+2,w
  1281  0585  1103               	clrz
  1282  0586  1803               	skipnc
  1283  0587  3E01               	addlw	1
  1284  0588  1903               	skipnz
  1285  0589  2D8B               	goto	u392
  1286  058A  07FB               	addwf	___lmul@product+2,f
  1287  058B                     u392:
  1288  058B  0877               	movf	___lmul@multiplicand+3,w
  1289  058C  1103               	clrz
  1290  058D  1803               	skipnc
  1291  058E  3E01               	addlw	1
  1292  058F  1903               	skipnz
  1293  0590  2D92               	goto	u393
  1294  0591  07FC               	addwf	___lmul@product+3,f
  1295  0592                     u393:
  1296  0592                     l937:
  1297  0592  3001               	movlw	1
  1298  0593  00F8               	movwf	??___lmul
  1299  0594                     u405:
  1300  0594  1003               	clrc
  1301  0595  0DF4               	rlf	___lmul@multiplicand,f
  1302  0596  0DF5               	rlf	___lmul@multiplicand+1,f
  1303  0597  0DF6               	rlf	___lmul@multiplicand+2,f
  1304  0598  0DF7               	rlf	___lmul@multiplicand+3,f
  1305  0599  0BF8               	decfsz	??___lmul,f
  1306  059A  2D94               	goto	u405
  1307  059B                     l939:
  1308  059B  3001               	movlw	1
  1309  059C                     u415:
  1310  059C  1003               	clrc
  1311  059D  0CF3               	rrf	___lmul@multiplier+3,f
  1312  059E  0CF2               	rrf	___lmul@multiplier+2,f
  1313  059F  0CF1               	rrf	___lmul@multiplier+1,f
  1314  05A0  0CF0               	rrf	___lmul@multiplier,f
  1315  05A1  3EFF               	addlw	-1
  1316  05A2  1D03               	skipz
  1317  05A3  2D9C               	goto	u415
  1318  05A4  0873               	movf	___lmul@multiplier+3,w
  1319  05A5  0472               	iorwf	___lmul@multiplier+2,w
  1320  05A6  0471               	iorwf	___lmul@multiplier+1,w
  1321  05A7  0470               	iorwf	___lmul@multiplier,w
  1322  05A8  1D03               	skipz
  1323  05A9  2DAB               	goto	u421
  1324  05AA  2DAC               	goto	u420
  1325  05AB                     u421:
  1326  05AB  2D77               	goto	l933
  1327  05AC                     u420:
  1328  05AC                     l941:
  1329  05AC  087C               	movf	___lmul@product+3,w
  1330  05AD  00F3               	movwf	?___lmul+3
  1331  05AE  087B               	movf	___lmul@product+2,w
  1332  05AF  00F2               	movwf	?___lmul+2
  1333  05B0  087A               	movf	___lmul@product+1,w
  1334  05B1  00F1               	movwf	?___lmul+1
  1335  05B2  0879               	movf	___lmul@product,w
  1336  05B3  00F0               	movwf	?___lmul
  1337  05B4                     l189:
  1338  05B4  0008               	return
  1339  05B5                     __end_of___lmul:
  1340                           
  1341                           	psect	text7
  1342  06A9                     __ptext7:	
  1343 ;; *************** function ___aldiv *****************
  1344 ;; Defined at:
  1345 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  divisor         4    0[BANK0 ] long 
  1348 ;;  dividend        4    4[BANK0 ] long 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  quotient        4   10[BANK0 ] long 
  1351 ;;  sign            1    9[BANK0 ] unsigned char 
  1352 ;;  counter         1    8[BANK0 ] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  4    0[BANK0 ] long 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       8       0       0       0
  1363 ;;      Locals:         0       6       0       0       0
  1364 ;;      Temps:          1       0       0       0       0
  1365 ;;      Totals:         1      14       0       0       0
  1366 ;;Total ram usage:       15 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_LCD_num
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function ___aldiv
  1377  06A9                     ___aldiv:
  1378  06A9                     l945:	
  1379                           ;incstack = 0
  1380                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1381                           
  1382  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1383  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1384  06AB  01A9               	clrf	___aldiv@sign
  1385  06AC                     l947:
  1386  06AC  1FA3               	btfss	___aldiv@divisor+3,7
  1387  06AD  2EAF               	goto	u431
  1388  06AE  2EB0               	goto	u430
  1389  06AF                     u431:
  1390  06AF  2EBD               	goto	l240
  1391  06B0                     u430:
  1392  06B0                     l949:
  1393  06B0  09A0               	comf	___aldiv@divisor,f
  1394  06B1  09A1               	comf	___aldiv@divisor+1,f
  1395  06B2  09A2               	comf	___aldiv@divisor+2,f
  1396  06B3  09A3               	comf	___aldiv@divisor+3,f
  1397  06B4  0AA0               	incf	___aldiv@divisor,f
  1398  06B5  1903               	skipnz
  1399  06B6  0AA1               	incf	___aldiv@divisor+1,f
  1400  06B7  1903               	skipnz
  1401  06B8  0AA2               	incf	___aldiv@divisor+2,f
  1402  06B9  1903               	skipnz
  1403  06BA  0AA3               	incf	___aldiv@divisor+3,f
  1404  06BB  01A9               	clrf	___aldiv@sign
  1405  06BC  0AA9               	incf	___aldiv@sign,f
  1406  06BD                     l240:
  1407  06BD  1FA7               	btfss	___aldiv@dividend+3,7
  1408  06BE  2EC0               	goto	u441
  1409  06BF  2EC1               	goto	u440
  1410  06C0                     u441:
  1411  06C0  2ED0               	goto	l955
  1412  06C1                     u440:
  1413  06C1                     l951:
  1414  06C1  09A4               	comf	___aldiv@dividend,f
  1415  06C2  09A5               	comf	___aldiv@dividend+1,f
  1416  06C3  09A6               	comf	___aldiv@dividend+2,f
  1417  06C4  09A7               	comf	___aldiv@dividend+3,f
  1418  06C5  0AA4               	incf	___aldiv@dividend,f
  1419  06C6  1903               	skipnz
  1420  06C7  0AA5               	incf	___aldiv@dividend+1,f
  1421  06C8  1903               	skipnz
  1422  06C9  0AA6               	incf	___aldiv@dividend+2,f
  1423  06CA  1903               	skipnz
  1424  06CB  0AA7               	incf	___aldiv@dividend+3,f
  1425  06CC                     l953:
  1426  06CC  3001               	movlw	1
  1427  06CD  00FD               	movwf	??___aldiv
  1428  06CE  087D               	movf	??___aldiv,w
  1429  06CF  06A9               	xorwf	___aldiv@sign,f
  1430  06D0                     l955:
  1431  06D0  3000               	movlw	0
  1432  06D1  00AD               	movwf	___aldiv@quotient+3
  1433  06D2  3000               	movlw	0
  1434  06D3  00AC               	movwf	___aldiv@quotient+2
  1435  06D4  3000               	movlw	0
  1436  06D5  00AB               	movwf	___aldiv@quotient+1
  1437  06D6  3000               	movlw	0
  1438  06D7  00AA               	movwf	___aldiv@quotient
  1439  06D8                     l957:
  1440  06D8  0823               	movf	___aldiv@divisor+3,w
  1441  06D9  0422               	iorwf	___aldiv@divisor+2,w
  1442  06DA  0421               	iorwf	___aldiv@divisor+1,w
  1443  06DB  0420               	iorwf	___aldiv@divisor,w
  1444  06DC  1903               	skipnz
  1445  06DD  2EDF               	goto	u451
  1446  06DE  2EE0               	goto	u450
  1447  06DF                     u451:
  1448  06DF  2F2D               	goto	l977
  1449  06E0                     u450:
  1450  06E0                     l959:
  1451  06E0  01A8               	clrf	___aldiv@counter
  1452  06E1  0AA8               	incf	___aldiv@counter,f
  1453  06E2  2EF0               	goto	l963
  1454  06E3                     l961:
  1455  06E3  3001               	movlw	1
  1456  06E4  00FD               	movwf	??___aldiv
  1457  06E5                     u465:
  1458  06E5  1003               	clrc
  1459  06E6  0DA0               	rlf	___aldiv@divisor,f
  1460  06E7  0DA1               	rlf	___aldiv@divisor+1,f
  1461  06E8  0DA2               	rlf	___aldiv@divisor+2,f
  1462  06E9  0DA3               	rlf	___aldiv@divisor+3,f
  1463  06EA  0BFD               	decfsz	??___aldiv,f
  1464  06EB  2EE5               	goto	u465
  1465  06EC  3001               	movlw	1
  1466  06ED  00FD               	movwf	??___aldiv
  1467  06EE  087D               	movf	??___aldiv,w
  1468  06EF  07A8               	addwf	___aldiv@counter,f
  1469  06F0                     l963:
  1470  06F0  1FA3               	btfss	___aldiv@divisor+3,7
  1471  06F1  2EF3               	goto	u471
  1472  06F2  2EF4               	goto	u470
  1473  06F3                     u471:
  1474  06F3  2EE3               	goto	l961
  1475  06F4                     u470:
  1476  06F4                     l965:
  1477  06F4  3001               	movlw	1
  1478  06F5  00FD               	movwf	??___aldiv
  1479  06F6                     u485:
  1480  06F6  1003               	clrc
  1481  06F7  0DAA               	rlf	___aldiv@quotient,f
  1482  06F8  0DAB               	rlf	___aldiv@quotient+1,f
  1483  06F9  0DAC               	rlf	___aldiv@quotient+2,f
  1484  06FA  0DAD               	rlf	___aldiv@quotient+3,f
  1485  06FB  0BFD               	decfsz	??___aldiv,f
  1486  06FC  2EF6               	goto	u485
  1487  06FD                     l967:
  1488  06FD  0823               	movf	___aldiv@divisor+3,w
  1489  06FE  0227               	subwf	___aldiv@dividend+3,w
  1490  06FF  1D03               	skipz
  1491  0700  2F0B               	goto	u495
  1492  0701  0822               	movf	___aldiv@divisor+2,w
  1493  0702  0226               	subwf	___aldiv@dividend+2,w
  1494  0703  1D03               	skipz
  1495  0704  2F0B               	goto	u495
  1496  0705  0821               	movf	___aldiv@divisor+1,w
  1497  0706  0225               	subwf	___aldiv@dividend+1,w
  1498  0707  1D03               	skipz
  1499  0708  2F0B               	goto	u495
  1500  0709  0820               	movf	___aldiv@divisor,w
  1501  070A  0224               	subwf	___aldiv@dividend,w
  1502  070B                     u495:
  1503  070B  1C03               	skipc
  1504  070C  2F0E               	goto	u491
  1505  070D  2F0F               	goto	u490
  1506  070E                     u491:
  1507  070E  2F1E               	goto	l973
  1508  070F                     u490:
  1509  070F                     l969:
  1510  070F  0820               	movf	___aldiv@divisor,w
  1511  0710  02A4               	subwf	___aldiv@dividend,f
  1512  0711  0821               	movf	___aldiv@divisor+1,w
  1513  0712  1C03               	skipc
  1514  0713  0F21               	incfsz	___aldiv@divisor+1,w
  1515  0714  02A5               	subwf	___aldiv@dividend+1,f
  1516  0715  0822               	movf	___aldiv@divisor+2,w
  1517  0716  1C03               	skipc
  1518  0717  0F22               	incfsz	___aldiv@divisor+2,w
  1519  0718  02A6               	subwf	___aldiv@dividend+2,f
  1520  0719  0823               	movf	___aldiv@divisor+3,w
  1521  071A  1C03               	skipc
  1522  071B  0F23               	incfsz	___aldiv@divisor+3,w
  1523  071C  02A7               	subwf	___aldiv@dividend+3,f
  1524  071D                     l971:
  1525  071D  142A               	bsf	___aldiv@quotient,0
  1526  071E                     l973:
  1527  071E  3001               	movlw	1
  1528  071F                     u505:
  1529  071F  1003               	clrc
  1530  0720  0CA3               	rrf	___aldiv@divisor+3,f
  1531  0721  0CA2               	rrf	___aldiv@divisor+2,f
  1532  0722  0CA1               	rrf	___aldiv@divisor+1,f
  1533  0723  0CA0               	rrf	___aldiv@divisor,f
  1534  0724  3EFF               	addlw	-1
  1535  0725  1D03               	skipz
  1536  0726  2F1F               	goto	u505
  1537  0727                     l975:
  1538  0727  3001               	movlw	1
  1539  0728  02A8               	subwf	___aldiv@counter,f
  1540  0729  1D03               	btfss	3,2
  1541  072A  2F2C               	goto	u511
  1542  072B  2F2D               	goto	u510
  1543  072C                     u511:
  1544  072C  2EF4               	goto	l965
  1545  072D                     u510:
  1546  072D                     l977:
  1547  072D  0829               	movf	___aldiv@sign,w
  1548  072E  1903               	btfsc	3,2
  1549  072F  2F31               	goto	u521
  1550  0730  2F32               	goto	u520
  1551  0731                     u521:
  1552  0731  2F3D               	goto	l981
  1553  0732                     u520:
  1554  0732                     l979:
  1555  0732  09AA               	comf	___aldiv@quotient,f
  1556  0733  09AB               	comf	___aldiv@quotient+1,f
  1557  0734  09AC               	comf	___aldiv@quotient+2,f
  1558  0735  09AD               	comf	___aldiv@quotient+3,f
  1559  0736  0AAA               	incf	___aldiv@quotient,f
  1560  0737  1903               	skipnz
  1561  0738  0AAB               	incf	___aldiv@quotient+1,f
  1562  0739  1903               	skipnz
  1563  073A  0AAC               	incf	___aldiv@quotient+2,f
  1564  073B  1903               	skipnz
  1565  073C  0AAD               	incf	___aldiv@quotient+3,f
  1566  073D                     l981:
  1567  073D  082D               	movf	___aldiv@quotient+3,w
  1568  073E  00A3               	movwf	?___aldiv+3
  1569  073F  082C               	movf	___aldiv@quotient+2,w
  1570  0740  00A2               	movwf	?___aldiv+2
  1571  0741  082B               	movf	___aldiv@quotient+1,w
  1572  0742  00A1               	movwf	?___aldiv+1
  1573  0743  082A               	movf	___aldiv@quotient,w
  1574  0744  00A0               	movwf	?___aldiv
  1575  0745                     l250:
  1576  0745  0008               	return
  1577  0746                     __end_of___aldiv:
  1578                           
  1579                           	psect	text8
  1580  04EB                     __ptext8:	
  1581 ;; *************** function _LCD_Char *****************
  1582 ;; Defined at:
  1583 ;;		line 23 in file "./lcd4bit.h"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  data            1    wreg     unsigned char 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  data            1    2[COMMON] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         0       0       0       0       0
  1598 ;;      Locals:         1       0       0       0       0
  1599 ;;      Temps:          2       0       0       0       0
  1600 ;;      Totals:         3       0       0       0       0
  1601 ;;Total ram usage:        3 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_LCD_num
  1607 ;;		_show
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _LCD_Char
  1613  04EB                     _LCD_Char:
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1617                           ;LCD_Char@data stored from wreg
  1618  04EB  00F2               	movwf	LCD_Char@data
  1619  04EC                     l913:
  1620                           
  1621                           ;./lcd4bit.h: 23: void LCD_Char (unsigned char data);./lcd4bit.h: 24: {;./lcd4bit.h: 25:
      +                               RC0 = 1;
  1622  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1623  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1624  04EE  1407               	bsf	7,0	;volatile
  1625  04EF                     l915:
  1626                           
  1627                           ;./lcd4bit.h: 26:     PORTB = data;
  1628  04EF  0872               	movf	LCD_Char@data,w
  1629  04F0  0086               	movwf	6	;volatile
  1630  04F1                     l917:
  1631                           
  1632                           ;./lcd4bit.h: 27:     RC1 = 1;
  1633  04F1  1487               	bsf	7,1	;volatile
  1634                           
  1635                           ;./lcd4bit.h: 28:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1636  04F2  3041               	movlw	65
  1637  04F3  00F1               	movwf	??_LCD_Char+1
  1638  04F4  30EE               	movlw	238
  1639  04F5  00F0               	movwf	??_LCD_Char
  1640  04F6                     u737:
  1641  04F6  0BF0               	decfsz	??_LCD_Char,f
  1642  04F7  2CF6               	goto	u737
  1643  04F8  0BF1               	decfsz	??_LCD_Char+1,f
  1644  04F9  2CF6               	goto	u737
  1645  04FA  0000               	nop
  1646  04FB                     l919:
  1647                           
  1648                           ;./lcd4bit.h: 29:     RC1 = 0;
  1649  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  1650  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  1651  04FD  1087               	bcf	7,1	;volatile
  1652                           
  1653                           ;./lcd4bit.h: 30:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1654  04FE  3041               	movlw	65
  1655  04FF  00F1               	movwf	??_LCD_Char+1
  1656  0500  30EE               	movlw	238
  1657  0501  00F0               	movwf	??_LCD_Char
  1658  0502                     u747:
  1659  0502  0BF0               	decfsz	??_LCD_Char,f
  1660  0503  2D02               	goto	u747
  1661  0504  0BF1               	decfsz	??_LCD_Char+1,f
  1662  0505  2D02               	goto	u747
  1663  0506  0000               	nop
  1664  0507                     l921:
  1665                           
  1666                           ;./lcd4bit.h: 31:     PORTB = (data<<4);
  1667  0507  0872               	movf	LCD_Char@data,w
  1668  0508  00F0               	movwf	??_LCD_Char
  1669  0509  3003               	movlw	3
  1670  050A                     u375:
  1671  050A  1003               	clrc
  1672  050B  0DF0               	rlf	??_LCD_Char,f
  1673  050C  3EFF               	addlw	-1
  1674  050D  1D03               	skipz
  1675  050E  2D0A               	goto	u375
  1676  050F  1003               	clrc
  1677  0510  0D70               	rlf	??_LCD_Char,w
  1678  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1680  0513  0086               	movwf	6	;volatile
  1681  0514                     l923:
  1682                           
  1683                           ;./lcd4bit.h: 32:     RC1 = 1;
  1684  0514  1487               	bsf	7,1	;volatile
  1685  0515                     l925:
  1686                           
  1687                           ;./lcd4bit.h: 33:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1688  0515  3041               	movlw	65
  1689  0516  00F1               	movwf	??_LCD_Char+1
  1690  0517  30EE               	movlw	238
  1691  0518  00F0               	movwf	??_LCD_Char
  1692  0519                     u757:
  1693  0519  0BF0               	decfsz	??_LCD_Char,f
  1694  051A  2D19               	goto	u757
  1695  051B  0BF1               	decfsz	??_LCD_Char+1,f
  1696  051C  2D19               	goto	u757
  1697  051D  0000               	nop
  1698  051E                     l927:
  1699                           
  1700                           ;./lcd4bit.h: 34:     RC1 = 0;
  1701  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1702  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0520  1087               	bcf	7,1	;volatile
  1704  0521                     l929:
  1705                           
  1706                           ;./lcd4bit.h: 35:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1707  0521  3041               	movlw	65
  1708  0522  00F1               	movwf	??_LCD_Char+1
  1709  0523  30EE               	movlw	238
  1710  0524  00F0               	movwf	??_LCD_Char
  1711  0525                     u767:
  1712  0525  0BF0               	decfsz	??_LCD_Char,f
  1713  0526  2D25               	goto	u767
  1714  0527  0BF1               	decfsz	??_LCD_Char+1,f
  1715  0528  2D25               	goto	u767
  1716  0529  0000               	nop
  1717  052A                     l44:
  1718  052A  0008               	return
  1719  052B                     __end_of_LCD_Char:
  1720                           
  1721                           	psect	text9
  1722  0443                     __ptext9:	
  1723 ;; *************** function _LCD_init *****************
  1724 ;; Defined at:
  1725 ;;		line 37 in file "./lcd4bit.h"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0
  1741 ;;      Temps:          2       0       0       0       0
  1742 ;;      Totals:         2       0       0       0       0
  1743 ;;Total ram usage:        2 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 1
  1746 ;; This function calls:
  1747 ;;		_LCD_Command
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function _LCD_init
  1755  0443                     _LCD_init:
  1756  0443                     l1033:	
  1757                           ;incstack = 0
  1758                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1759                           
  1760                           
  1761                           ;./lcd4bit.h: 39:     LCD_Command (0x02);
  1762  0443  3002               	movlw	2
  1763  0444  120A  118A  24AB  120A  118A  	fcall	_LCD_Command
  1764                           
  1765                           ;./lcd4bit.h: 40:     LCD_Command (0x28);
  1766  0449  3028               	movlw	40
  1767  044A  120A  118A  24AB  120A  118A  	fcall	_LCD_Command
  1768                           
  1769                           ;./lcd4bit.h: 41:     LCD_Command (0x80);
  1770  044F  3080               	movlw	128
  1771  0450  120A  118A  24AB  120A  118A  	fcall	_LCD_Command
  1772                           
  1773                           ;./lcd4bit.h: 42:     LCD_Command (0x0C);
  1774  0455  300C               	movlw	12
  1775  0456  120A  118A  24AB  120A  118A  	fcall	_LCD_Command
  1776                           
  1777                           ;./lcd4bit.h: 43:     LCD_Command (0x06);
  1778  045B  3006               	movlw	6
  1779  045C  120A  118A  24AB  120A  118A  	fcall	_LCD_Command
  1780                           
  1781                           ;./lcd4bit.h: 44:     LCD_Command (0x01);
  1782  0461  3001               	movlw	1
  1783  0462  120A  118A  24AB  120A  118A  	fcall	_LCD_Command
  1784  0467                     l1035:
  1785                           
  1786                           ;./lcd4bit.h: 45:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1787  0467  3041               	movlw	65
  1788  0468  00F4               	movwf	??_LCD_init+1
  1789  0469  30EE               	movlw	238
  1790  046A  00F3               	movwf	??_LCD_init
  1791  046B                     u777:
  1792  046B  0BF3               	decfsz	??_LCD_init,f
  1793  046C  2C6B               	goto	u777
  1794  046D  0BF4               	decfsz	??_LCD_init+1,f
  1795  046E  2C6B               	goto	u777
  1796  046F  0000               	nop
  1797  0470                     l47:
  1798  0470  0008               	return
  1799  0471                     __end_of_LCD_init:
  1800                           
  1801                           	psect	text10
  1802  04AB                     __ptext10:	
  1803 ;; *************** function _LCD_Command *****************
  1804 ;; Defined at:
  1805 ;;		line 9 in file "./lcd4bit.h"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  cmnd            1    wreg     unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  cmnd            1    2[COMMON] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         1       0       0       0       0
  1821 ;;      Temps:          2       0       0       0       0
  1822 ;;      Totals:         3       0       0       0       0
  1823 ;;Total ram usage:        3 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_LCD_init
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _LCD_Command
  1835  04AB                     _LCD_Command:
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  1839                           ;LCD_Command@cmnd stored from wreg
  1840  04AB  00F2               	movwf	LCD_Command@cmnd
  1841  04AC                     l895:
  1842                           
  1843                           ;./lcd4bit.h: 9: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 10: {;./lcd4bit.h: 1
      +                          1:     RC0 = 0;
  1844  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1845  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1846  04AE  1007               	bcf	7,0	;volatile
  1847  04AF                     l897:
  1848                           
  1849                           ;./lcd4bit.h: 12:     PORTB = cmnd;
  1850  04AF  0872               	movf	LCD_Command@cmnd,w
  1851  04B0  0086               	movwf	6	;volatile
  1852  04B1                     l899:
  1853                           
  1854                           ;./lcd4bit.h: 13:     RC1 = 1;
  1855  04B1  1487               	bsf	7,1	;volatile
  1856                           
  1857                           ;./lcd4bit.h: 14:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1858  04B2  3041               	movlw	65
  1859  04B3  00F1               	movwf	??_LCD_Command+1
  1860  04B4  30EE               	movlw	238
  1861  04B5  00F0               	movwf	??_LCD_Command
  1862  04B6                     u787:
  1863  04B6  0BF0               	decfsz	??_LCD_Command,f
  1864  04B7  2CB6               	goto	u787
  1865  04B8  0BF1               	decfsz	??_LCD_Command+1,f
  1866  04B9  2CB6               	goto	u787
  1867  04BA  0000               	nop
  1868  04BB                     l901:
  1869                           
  1870                           ;./lcd4bit.h: 15:     RC1 = 0;
  1871  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1872  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1873  04BD  1087               	bcf	7,1	;volatile
  1874                           
  1875                           ;./lcd4bit.h: 16:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1876  04BE  3041               	movlw	65
  1877  04BF  00F1               	movwf	??_LCD_Command+1
  1878  04C0  30EE               	movlw	238
  1879  04C1  00F0               	movwf	??_LCD_Command
  1880  04C2                     u797:
  1881  04C2  0BF0               	decfsz	??_LCD_Command,f
  1882  04C3  2CC2               	goto	u797
  1883  04C4  0BF1               	decfsz	??_LCD_Command+1,f
  1884  04C5  2CC2               	goto	u797
  1885  04C6  0000               	nop
  1886  04C7                     l903:
  1887                           
  1888                           ;./lcd4bit.h: 17:     PORTB = (cmnd<<4);
  1889  04C7  0872               	movf	LCD_Command@cmnd,w
  1890  04C8  00F0               	movwf	??_LCD_Command
  1891  04C9  3003               	movlw	3
  1892  04CA                     u365:
  1893  04CA  1003               	clrc
  1894  04CB  0DF0               	rlf	??_LCD_Command,f
  1895  04CC  3EFF               	addlw	-1
  1896  04CD  1D03               	skipz
  1897  04CE  2CCA               	goto	u365
  1898  04CF  1003               	clrc
  1899  04D0  0D70               	rlf	??_LCD_Command,w
  1900  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  1901  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  1902  04D3  0086               	movwf	6	;volatile
  1903  04D4                     l905:
  1904                           
  1905                           ;./lcd4bit.h: 18:     RC1 = 1;
  1906  04D4  1487               	bsf	7,1	;volatile
  1907  04D5                     l907:
  1908                           
  1909                           ;./lcd4bit.h: 19:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1910  04D5  3041               	movlw	65
  1911  04D6  00F1               	movwf	??_LCD_Command+1
  1912  04D7  30EE               	movlw	238
  1913  04D8  00F0               	movwf	??_LCD_Command
  1914  04D9                     u807:
  1915  04D9  0BF0               	decfsz	??_LCD_Command,f
  1916  04DA  2CD9               	goto	u807
  1917  04DB  0BF1               	decfsz	??_LCD_Command+1,f
  1918  04DC  2CD9               	goto	u807
  1919  04DD  0000               	nop
  1920  04DE                     l909:
  1921                           
  1922                           ;./lcd4bit.h: 20:     RC1 = 0;
  1923  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1924  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1925  04E0  1087               	bcf	7,1	;volatile
  1926  04E1                     l911:
  1927                           
  1928                           ;./lcd4bit.h: 21:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1929  04E1  3041               	movlw	65
  1930  04E2  00F1               	movwf	??_LCD_Command+1
  1931  04E3  30EE               	movlw	238
  1932  04E4  00F0               	movwf	??_LCD_Command
  1933  04E5                     u817:
  1934  04E5  0BF0               	decfsz	??_LCD_Command,f
  1935  04E6  2CE5               	goto	u817
  1936  04E7  0BF1               	decfsz	??_LCD_Command+1,f
  1937  04E8  2CE5               	goto	u817
  1938  04E9  0000               	nop
  1939  04EA                     l41:
  1940  04EA  0008               	return
  1941  04EB                     __end_of_LCD_Command:
  1942                           
  1943                           	psect	text11
  1944  05B5                     __ptext11:	
  1945 ;; *************** function _ADC_Init *****************
  1946 ;; Defined at:
  1947 ;;		line 53 in file "main.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1961 ;;      Params:         0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0
  1963 ;;      Temps:          2       0       0       0       0
  1964 ;;      Totals:         2       0       0       0       0
  1965 ;;Total ram usage:        2 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           
  1975                           ;psect for function _ADC_Init
  1976  05B5                     _ADC_Init:
  1977  05B5                     l1063:	
  1978                           ;incstack = 0
  1979                           ; Regs used in _ADC_Init: [wreg]
  1980                           
  1981                           
  1982                           ;main.c: 55:     ADCON0 = 0x85;
  1983  05B5  3085               	movlw	133
  1984  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1985  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1986  05B8  009F               	movwf	31	;volatile
  1987                           
  1988                           ;main.c: 56:     ADCON1 = 0xC0;
  1989  05B9  30C0               	movlw	192
  1990  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  1991  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  1992  05BC  009F               	movwf	31	;volatile
  1993                           
  1994                           ;main.c: 57:     AV[0]= ((ADRESH<<8)+ADRESL);
  1995  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1996  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1997  05BF  081E               	movf	30,w	;volatile
  1998  05C0  00C4               	movwf	_AV+1
  1999  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  2000  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  2001  05C3  081E               	movf	30,w	;volatile
  2002  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  2003  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  2004  05C6  00C3               	movwf	_AV
  2005                           
  2006                           ;main.c: 59:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2007  05C7  3041               	movlw	65
  2008  05C8  00F1               	movwf	??_ADC_Init+1
  2009  05C9  30EE               	movlw	238
  2010  05CA  00F0               	movwf	??_ADC_Init
  2011  05CB                     u827:
  2012  05CB  0BF0               	decfsz	??_ADC_Init,f
  2013  05CC  2DCB               	goto	u827
  2014  05CD  0BF1               	decfsz	??_ADC_Init+1,f
  2015  05CE  2DCB               	goto	u827
  2016  05CF  0000               	nop
  2017                           
  2018                           ;main.c: 60:     ADCON0 = 0x8D;
  2019  05D0  308D               	movlw	141
  2020  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2021  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2022  05D3  009F               	movwf	31	;volatile
  2023                           
  2024                           ;main.c: 61:     ADCON1 = 0xC0;
  2025  05D4  30C0               	movlw	192
  2026  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  2027  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  2028  05D7  009F               	movwf	31	;volatile
  2029                           
  2030                           ;main.c: 62:     AV[1]= ((ADRESH<<8)+ADRESL);
  2031  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  2032  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  2033  05DA  081E               	movf	30,w	;volatile
  2034  05DB  00C6               	movwf	_AV+3
  2035  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  2036  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  2037  05DE  081E               	movf	30,w	;volatile
  2038  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2039  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2040  05E1  00C5               	movwf	_AV+2
  2041                           
  2042                           ;main.c: 64:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2043  05E2  3041               	movlw	65
  2044  05E3  00F1               	movwf	??_ADC_Init+1
  2045  05E4  30EE               	movlw	238
  2046  05E5  00F0               	movwf	??_ADC_Init
  2047  05E6                     u837:
  2048  05E6  0BF0               	decfsz	??_ADC_Init,f
  2049  05E7  2DE6               	goto	u837
  2050  05E8  0BF1               	decfsz	??_ADC_Init+1,f
  2051  05E9  2DE6               	goto	u837
  2052  05EA  0000               	nop
  2053                           
  2054                           ;main.c: 65:     ADCON0 = 0x95;
  2055  05EB  3095               	movlw	149
  2056  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  2057  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  2058  05EE  009F               	movwf	31	;volatile
  2059                           
  2060                           ;main.c: 66:     ADCON1 = 0xC0;
  2061  05EF  30C0               	movlw	192
  2062  05F0  1683               	bsf	3,5	;RP0=1, select bank1
  2063  05F1  1303               	bcf	3,6	;RP1=0, select bank1
  2064  05F2  009F               	movwf	31	;volatile
  2065                           
  2066                           ;main.c: 67:     AV[2]= ((ADRESH<<8)+ADRESL);
  2067  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  2068  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  2069  05F5  081E               	movf	30,w	;volatile
  2070  05F6  00C8               	movwf	_AV+5
  2071  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  2072  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  2073  05F9  081E               	movf	30,w	;volatile
  2074  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2075  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2076  05FC  00C7               	movwf	_AV+4
  2077                           
  2078                           ;main.c: 69:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2079  05FD  3041               	movlw	65
  2080  05FE  00F1               	movwf	??_ADC_Init+1
  2081  05FF  30EE               	movlw	238
  2082  0600  00F0               	movwf	??_ADC_Init
  2083  0601                     u847:
  2084  0601  0BF0               	decfsz	??_ADC_Init,f
  2085  0602  2E01               	goto	u847
  2086  0603  0BF1               	decfsz	??_ADC_Init+1,f
  2087  0604  2E01               	goto	u847
  2088  0605  0000               	nop
  2089                           
  2090                           ;main.c: 70:     ADCON0 = 0x9D;
  2091  0606  309D               	movlw	157
  2092  0607  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0608  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0609  009F               	movwf	31	;volatile
  2095                           
  2096                           ;main.c: 71:     ADCON1 = 0xC0;
  2097  060A  30C0               	movlw	192
  2098  060B  1683               	bsf	3,5	;RP0=1, select bank1
  2099  060C  1303               	bcf	3,6	;RP1=0, select bank1
  2100  060D  009F               	movwf	31	;volatile
  2101                           
  2102                           ;main.c: 72:     AV[3]= ((ADRESH<<8)+ADRESL);
  2103  060E  1283               	bcf	3,5	;RP0=0, select bank0
  2104  060F  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0610  081E               	movf	30,w	;volatile
  2106  0611  00CA               	movwf	_AV+7
  2107  0612  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0613  1303               	bcf	3,6	;RP1=0, select bank1
  2109  0614  081E               	movf	30,w	;volatile
  2110  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0617  00C9               	movwf	_AV+6
  2113  0618                     l89:
  2114  0618  0008               	return
  2115  0619                     __end_of_ADC_Init:
  2116  007E                     btemp	set	126	;btemp
  2117  007E                     wtemp0	set	126
  2118                           
  2119                           	psect	idloc
  2120                           
  2121                           ;Config register IDLOC0 @ 0x2000
  2122                           ;	unspecified, using default values
  2123  2000                     	org	8192
  2124  2000  3FFF               	dw	16383
  2125                           
  2126                           ;Config register IDLOC1 @ 0x2001
  2127                           ;	unspecified, using default values
  2128  2001                     	org	8193
  2129  2001  3FFF               	dw	16383
  2130                           
  2131                           ;Config register IDLOC2 @ 0x2002
  2132                           ;	unspecified, using default values
  2133  2002                     	org	8194
  2134  2002  3FFF               	dw	16383
  2135                           
  2136                           ;Config register IDLOC3 @ 0x2003
  2137                           ;	unspecified, using default values
  2138  2003                     	org	8195
  2139  2003  3FFF               	dw	16383
  2140                           
  2141                           	psect	config
  2142                           
  2143                           ;Config register CONFIG @ 0x2007
  2144                           ;	Oscillator Selection bits
  2145                           ;	FOSC = HS, HS oscillator
  2146                           ;	Watchdog Timer Enable bit
  2147                           ;	WDTE = OFF, WDT disabled
  2148                           ;	Power-up Timer Enable bit
  2149                           ;	PWRTE = OFF, PWRT disabled
  2150                           ;	Brown-out Reset Enable bit
  2151                           ;	BOREN = ON, BOR enabled
  2152                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2153                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2154                           ;	Data EEPROM Memory Code Protection bit
  2155                           ;	CPD = OFF, Data EEPROM code protection off
  2156                           ;	Flash Program Memory Write Enable bits
  2157                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2158                           ;	In-Circuit Debugger Mode bit
  2159                           ;	DEBUG = 0x1, unprogrammed default
  2160                           ;	Flash Program Memory Code Protection bit
  2161                           ;	CP = OFF, Code protection off
  2162  2007                     	org	8199
  2163  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2294
                                             30 BANK0      5     5      0
                           _ADC_Init
                        _LCD_Command
                           _LCD_init
                            _LCD_num
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_num                                             18    14      4    2018
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Command
   _LCD_init
     _LCD_Command
   _LCD_num
     _LCD_Char
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
     ___lwmod
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 04 13:38:17 2022

           ?_LCD_Command 0070                       l41 04EA                       l50 07F1  
                     l44 052A                       l62 0430                       l47 0470  
                     l64 0434                       l65 0435                       l59 0442  
                     _AV 0043                       l79 062F                       l89 0618  
                     _tx 042C                      l240 06BD                      l250 0745  
                    l189 05B4                      l447 056E                      l457 04AA  
                    ?_tx 0070                      l901 04BB                      l911 04E1  
                    l903 04C7                      l905 04D4                      l921 0507  
                    l913 04EC                      l907 04D5                      l923 0514  
                    l915 04EF                      l931 056F                      l909 04DE  
                    l925 0515                      l917 04F1                      l941 05AC  
                    l933 0577                      l927 051E                      l919 04FB  
                    l951 06C1                      l935 057B                      l929 0521  
                    l961 06E3                      l953 06CC                      l945 06A9  
                    l937 0592                      l971 071D                      l963 06F0  
                    l955 06D0                      l947 06AC                      l939 059B  
                    l981 073D                      l973 071E                      l965 06F4  
                    l957 06D8                      l949 06B0                      l895 04AC  
                    l975 0727                      l967 06FD                      l959 06E0  
                    l991 0536                      l897 04AF                      l969 070F  
                    l977 072D                      l993 053D                      l985 052B  
                    l899 04B1                      l979 0732                      l995 0541  
                    l987 052D                      l997 0545                      l989 0533  
                    l999 0556                      _RC0 0038                      _RC1 0039  
                    u420 05AC                      u421 05AB                      u405 0594  
                    u510 072D                      u430 06B0                      u511 072C  
                    u431 06AF                      u415 059C                      u520 0732  
                    u440 06C1                      u600 0477                      u521 0731  
                    u505 071F                      u441 06C0                      u601 0476  
                    u450 06E0                      u530 0533                      u451 06DF  
                    u531 0532                      u380 057B                      u620 0489  
                    u365 04CA                      u381 057A                      u621 0488  
                    u470 06F4                      u550 0545                      u630 0493  
                    u375 050A                      u471 06F3                      u391 0584  
                    u551 0544                      u631 0492                      u615 047B  
                    u392 058B                      u465 06E5                      u393 0592  
                    u545 0537                      u490 070F                      u570 0556  
                    u650 04A6                      u491 070E                      u571 0555  
                    u651 04A5                      u635 048F                      u707 0639  
                    u660 0434                      u485 06F6                      u565 0546  
                    u645 049A                      u661 0433                      u717 0674  
                    u590 056A                      u807 04D9                      u495 070B  
                    u591 0569                      u575 0552                      u727 069E  
                    u680 0633                      u817 04E5                      u737 04F6  
                    u585 055E                      u681 0632                      u690 0690  
                    u827 05CB                      u747 0502                      u691 068F  
                    u837 05E6                      u757 0519                      u847 0601  
                    u767 0525                      u695 068C                      u777 046B  
                    u787 04B6                      u797 04C2                      fsr0 0004  
                    indf 0000                      tx@a 0070                     ??_tx 0072  
        __end_of_LCD_num 07F2                     l1001 055C                     l1003 055D  
                   l1011 0471                     l1005 0564                     l1021 0489  
                   l1013 0477                     l1101 0696                     l1007 056A  
                   l1023 0493                     l1015 047A                     l1033 0443  
                   l1025 0499                     l1017 0481                     l1041 077A  
                   l1035 0467                     l1027 04A0                     l1019 0485  
                   l1051 07D2                     l1043 078D                     l1029 04A6  
                   l1053 07D9                     l1045 07A0                     l1037 0746  
                   l1061 042C                     l1063 05B5                     l1055 07DF  
                   l1047 07B7                     l1039 0746                     l1057 07E8  
                   l1049 07BB                     l1081 062C                     l1073 0619  
                   l1059 0436                     l1091 0642                     l1083 0633  
                   l1075 061D                     l1093 066C                     l1085 063E  
                   l1077 0622                     l1095 067B                     l1079 0627  
                   l1097 0683                     l1099 0690                     _RCIF 0065  
                   _TXIF 0064                     _main 0619                     btemp 007E  
       __end_of_ADC_Init 0619                     start 0000         __end_of_LCD_Char 052B  
           LCD_Char@data 0072         __end_of_LCD_init 0471          __end_of___aldiv 0746  
                  ?_main 0070          __end_of___lwdiv 056F          __end_of___lwmod 04AB  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TRISC 0087  
                  _TXREG 0019                    _TXSTA 0098      ___lmul@multiplicand 0074  
                  main@i 0041          __end_of_ser_int 0443                    status 0003  
                  wtemp0 007E          __initialization 07F2             __end_of_main 06A9  
                 ??_main 003E           LCD_num@result1 003A                ??_LCD_num 007E  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   ___lmul 056F                ??___aldiv 007D  
              ??___lwdiv 0074                ??___lwmod 0074     __size_of_LCD_Command 0040  
              ?_ADC_Init 0070                ??_ser_int 0070                ?_LCD_Char 0070  
__end_of__initialization 07FC                ?_LCD_init 0070           __pcstackCOMMON 0070  
             __end_of_tx 0436               ??_ADC_Init 0070               __pbssBANK0 0043  
             ??_LCD_Char 0070               ??_LCD_init 0073               __pmaintext 0619  
                ?___lmul 0070           ___lmul@product 0079                  _LCD_num 0746  
                ___aldiv 06A9          __size_of___lmul 0046                  ___lwdiv 052B  
                ___lwmod 0471                  __ptext1 042C                  __ptext2 0436  
                __ptext3 0746                  __ptext4 0471                  __ptext5 052B  
                __ptext6 056F                  __ptext7 06A9                  __ptext8 04EB  
                __ptext9 0443         ___aldiv@dividend 0024                  _ser_int 0436  
   end_of_initialization 07FC         ___aldiv@quotient 002A        __size_of_ADC_Init 0064  
      __size_of_LCD_Char 0040        __size_of_LCD_init 002E            ??_LCD_Command 0070  
         __end_of___lmul 05B5      start_initialization 07F2            LCD_num@digit1 0032  
          LCD_num@digit2 0034            LCD_num@digit3 0036               LCD_num@val 002E  
          LCD_num@result 0038                 ??___lmul 0078         LCD_num@remainder 003C  
    __end_of_LCD_Command 04EB                 ?_LCD_num 002E                ___latbits 0002  
          __pcstackBANK0 0020         ___lwdiv@dividend 0072                 ?___aldiv 0020  
               ?___lwdiv 0070                 ?___lwmod 0070                 _ADC_Init 05B5  
               ?_ser_int 0070         ___lwdiv@quotient 0075              __size_of_tx 000A  
        ___aldiv@divisor 0020                 _LCD_Char 04EB          ___aldiv@counter 0028  
               _LCD_init 0443                 _GO_nDONE 00FA              _LCD_Command 04AB  
       __size_of_LCD_num 00AC        ___lmul@multiplier 0070         __size_of___aldiv 009D  
       __size_of___lwdiv 0044         __size_of___lwmod 003A          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 __ptext10 04AB                 __ptext11 05B5  
       __size_of_ser_int 000D            __size_of_main 0090          LCD_Command@cmnd 0072  
       ___lwmod@dividend 0072          ___lwmod@divisor 0070          ___lwmod@counter 0075  
           ___aldiv@sign 0029  
