

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 07 10:27:22 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F877A Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataBANK0
   210  0004                     __pidataBANK0:
   211                           
   212                           ;initializer for _sn
   213  0004  3401               	retlw	1
   214  0005  3400               	retlw	0
   215  001E                     _ADRESH	set	30
   216  001F                     _ADCON0	set	31
   217  0013                     _SSPBUF	set	19
   218  0014                     _SSPCON	set	20
   219  0008                     _PORTDbits	set	8
   220  001A                     _RCREG	set	26
   221  0019                     _TXREG	set	25
   222  0018                     _RCSTA	set	24
   223  0006                     _PORTB	set	6
   224  00FA                     _GO_nDONE	set	250
   225  0063                     _SSPIF	set	99
   226  0065                     _RCIF	set	101
   227  0064                     _TXIF	set	100
   228  0039                     _RC1	set	57
   229  0038                     _RC0	set	56
   230  009E                     _ADRESL	set	158
   231  009F                     _ADCON1	set	159
   232  0093                     _SSPADD	set	147
   233  0088                     _TRISDbits	set	136
   234  0099                     _SPBRG	set	153
   235  0098                     _TXSTA	set	152
   236  0087                     _TRISCbits	set	135
   237  0086                     _TRISBbits	set	134
   238  048C                     _ACKEN	set	1164
   239  048D                     _ACKDT	set	1165
   240  0489                     _RSEN	set	1161
   241  048A                     _PEN	set	1162
   242  0488                     _SEN	set	1160
   243  048B                     _RCEN	set	1163
   244  048E                     _ACKSTAT	set	1166
   245  043C                     _TRISC4	set	1084
   246  043B                     _TRISC3	set	1083
   247                           
   248                           	psect	strings
   249  0800                     __pstrings:
   250  0800                     stringtab:
   251  0800                     __stringtab:
   252  0800                     stringcode:	
   253                           ;	String table - string pointers are 1 byte each
   254                           
   255  0800                     stringdir:
   256  0800  3008               	movlw	high stringdir
   257  0801  008A               	movwf	10
   258  0802  0804               	movf	4,w
   259  0803  0A84               	incf	4,f
   260  0804  0782               	addwf	2,f
   261  0805                     __stringbase:
   262  0805  3400               	retlw	0
   263  0806                     __end_of__stringtab:
   264  0806                     STR_2:
   265  0806  3448               	retlw	72	;'H'
   266  0807  3475               	retlw	117	;'u'
   267  0808  346D               	retlw	109	;'m'
   268  0809  3469               	retlw	105	;'i'
   269  080A  343A               	retlw	58	;':'
   270  080B  3400               	retlw	0
   271  080C                     STR_1:
   272  080C  3454               	retlw	84	;'T'
   273  080D  3465               	retlw	101	;'e'
   274  080E  346D               	retlw	109	;'m'
   275  080F  3470               	retlw	112	;'p'
   276  0810  343A               	retlw	58	;':'
   277  0811  3400               	retlw	0
   278                           
   279                           	psect	cinit
   280  07E7                     start_initialization:	
   281                           ; #config settings
   282                           
   283  07E7                     __initialization:
   284                           
   285                           ; Initialize objects allocated to BANK0
   286  07E7  120A  118A  2004  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   287  07EC  00EB               	movwf	__pdataBANK0& (0+127)
   288  07ED  120A  118A  2005  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   289  07F2  00EC               	movwf	(__pdataBANK0+1)& (0+127)
   290                           
   291                           ; Clear objects allocated to BANK0
   292  07F3  1383               	bcf	3,7	;select IRP bank0
   293  07F4  3046               	movlw	low __pbssBANK0
   294  07F5  0084               	movwf	4
   295  07F6  306B               	movlw	low (__pbssBANK0+37)
   296  07F7  120A  158A  238D  120A  118A  	fcall	clear_ram0
   297  07FC                     end_of_initialization:	
   298                           ;End of C runtime variable initialization code
   299                           
   300  07FC                     __end_of__initialization:
   301  07FC  0183               	clrf	3
   302  07FD  120A  118A  285F   	ljmp	_main	;jump to C main() function
   303                           
   304                           	psect	bssBANK0
   305  0046                     __pbssBANK0:
   306  0046                     _AV:
   307  0046                     	ds	8
   308  004E                     _message:
   309  004E                     	ds	3
   310  0051                     _avv:
   311  0051                     	ds	3
   312  0054                     _temperature:
   313  0054                     	ds	2
   314  0056                     _humidity:
   315  0056                     	ds	2
   316  0058                     _Sum:
   317  0058                     	ds	2
   318  005A                     _RH:
   319  005A                     	ds	2
   320  005C                     _Temp:
   321  005C                     	ds	2
   322  005E                     _year:
   323  005E                     	ds	1
   324  005F                     _month:
   325  005F                     	ds	1
   326  0060                     _date:
   327  0060                     	ds	1
   328  0061                     _day:
   329  0061                     	ds	1
   330  0062                     _hour:
   331  0062                     	ds	1
   332  0063                     _min:
   333  0063                     	ds	1
   334  0064                     _sec:
   335  0064                     	ds	1
   336  0065                     _Ch:
   337  0065                     	ds	1
   338  0066                     _RH_byte2:
   339  0066                     	ds	1
   340  0067                     _RH_byte1:
   341  0067                     	ds	1
   342  0068                     _T_byte2:
   343  0068                     	ds	1
   344  0069                     _T_byte1:
   345  0069                     	ds	1
   346  006A                     _Check:
   347  006A                     	ds	1
   348                           
   349                           	psect	dataBANK0
   350  006B                     __pdataBANK0:
   351  006B                     _sn:
   352  006B                     	ds	2
   353                           
   354                           	psect	clrtext
   355  0B8D                     clear_ram0:	
   356                           ;	Called with FSR containing the base address, and
   357                           ;	W with the last address+1
   358                           
   359  0B8D  0064               	clrwdt	;clear the watchdog before getting into this loop
   360  0B8E                     clrloop0:
   361  0B8E  0180               	clrf	0	;clear RAM location pointed to by FSR
   362  0B8F  0A84               	incf	4,f	;increment pointer
   363  0B90  0604               	xorwf	4,w	;XOR with final address
   364  0B91  1903               	btfsc	3,2	;have we reached the end yet?
   365  0B92  3400               	retlw	0	;all done for this memory range, return
   366  0B93  0604               	xorwf	4,w	;XOR again to restore value
   367  0B94  2B8E               	goto	clrloop0	;do the next byte
   368                           
   369                           	psect	cstackCOMMON
   370  0070                     __pcstackCOMMON:
   371  0070                     ?_intdigits_chardigits:
   372  0070                     ?_rtc_stop:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ??_rtc_stop:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_rtc_res:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ??_rtc_res:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_rtc_nak:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ??_rtc_nak:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_print_serialnumber:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_rtc_getdata:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_rtc_lcd_data:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_rtc_terminal_data:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_ADC_Init:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ??_ADC_Init:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_print_analogvoltages:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_print_dht11data:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_LCD_Command:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_LCD_Command:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_LCD_Char:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_LCD_Char:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_LCD_init:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_show:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_ser_int:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_ser_int:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_tx:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_tx:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_StartSignal:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??_StartSignal:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_CheckResponse:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ??_CheckResponse:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_ReadData:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ??_ReadData:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_rtc_int:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ??_rtc_int:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_waitmssp:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ??_waitmssp:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_rtc_send:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ??_rtc_send:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_rtc_read:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ??_rtc_read:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_rtc_read_byte:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_convup:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ??_convup:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_convd:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ??_convd:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_main:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?___awdiv:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?___awmod:	
   508                           ; 2 bytes @ 0x0
   509                           
   510  0070                     ?___lwdiv:	
   511                           ; 2 bytes @ 0x0
   512                           
   513  0070                     ?___lwmod:	
   514                           ; 2 bytes @ 0x0
   515                           
   516  0070                     ?___lmul:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  0070                     tx@a:	
   520                           ; 4 bytes @ 0x0
   521                           
   522  0070                     rtc_send@a:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     convd@bcd:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     intdigits_chardigits@a:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ___awdiv@divisor:	
   532                           ; 2 bytes @ 0x0
   533                           
   534  0070                     ___awmod@divisor:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0070                     ___lwdiv@divisor:	
   538                           ; 2 bytes @ 0x0
   539                           
   540  0070                     ___lwmod@divisor:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0070                     ___lmul@multiplier:	
   544                           ; 2 bytes @ 0x0
   545                           
   546                           
   547                           ; 4 bytes @ 0x0
   548  0070                     	ds	1
   549  0071                     ??_rtc_read_byte:
   550  0071                     convup@bcd:	
   551                           ; 1 bytes @ 0x1
   552                           
   553                           
   554                           ; 1 bytes @ 0x1
   555  0071                     	ds	1
   556  0072                     ??_rtc_terminal_data:
   557  0072                     LCD_Command@cmnd:	
   558                           ; 1 bytes @ 0x2
   559                           
   560  0072                     LCD_Char@data:	
   561                           ; 1 bytes @ 0x2
   562                           
   563  0072                     ReadData@i:	
   564                           ; 1 bytes @ 0x2
   565                           
   566  0072                     rtc_read_byte@addr:	
   567                           ; 1 bytes @ 0x2
   568                           
   569  0072                     intdigits_chardigits@b:	
   570                           ; 1 bytes @ 0x2
   571                           
   572  0072                     ___awdiv@dividend:	
   573                           ; 2 bytes @ 0x2
   574                           
   575  0072                     ___awmod@dividend:	
   576                           ; 2 bytes @ 0x2
   577                           
   578  0072                     ___lwdiv@dividend:	
   579                           ; 2 bytes @ 0x2
   580                           
   581  0072                     ___lwmod@dividend:	
   582                           ; 2 bytes @ 0x2
   583                           
   584                           
   585                           ; 2 bytes @ 0x2
   586  0072                     	ds	1
   587  0073                     ??_rtc_lcd_data:
   588  0073                     ??_LCD_init:	
   589                           ; 1 bytes @ 0x3
   590                           
   591  0073                     ??_show:	
   592                           ; 1 bytes @ 0x3
   593                           
   594  0073                     ReadData@j:	
   595                           ; 1 bytes @ 0x3
   596                           
   597  0073                     rtc_read_byte@rec:	
   598                           ; 1 bytes @ 0x3
   599                           
   600                           
   601                           ; 1 bytes @ 0x3
   602  0073                     	ds	1
   603  0074                     ??_rtc_getdata:
   604  0074                     ??___awdiv:	
   605                           ; 1 bytes @ 0x4
   606                           
   607  0074                     ??___awmod:	
   608                           ; 1 bytes @ 0x4
   609                           
   610  0074                     ??___lwdiv:	
   611                           ; 1 bytes @ 0x4
   612                           
   613  0074                     ??___lwmod:	
   614                           ; 1 bytes @ 0x4
   615                           
   616  0074                     show@s:	
   617                           ; 1 bytes @ 0x4
   618                           
   619  0074                     intdigits_chardigits@c:	
   620                           ; 1 bytes @ 0x4
   621                           
   622  0074                     ___lmul@multiplicand:	
   623                           ; 2 bytes @ 0x4
   624                           
   625                           
   626                           ; 4 bytes @ 0x4
   627  0074                     	ds	1
   628  0075                     ___awdiv@counter:
   629  0075                     ___awmod@counter:	
   630                           ; 1 bytes @ 0x5
   631                           
   632  0075                     ___lwmod@counter:	
   633                           ; 1 bytes @ 0x5
   634                           
   635  0075                     ___lwdiv@quotient:	
   636                           ; 1 bytes @ 0x5
   637                           
   638                           
   639                           ; 2 bytes @ 0x5
   640  0075                     	ds	1
   641  0076                     ??_intdigits_chardigits:
   642  0076                     ___awdiv@sign:	
   643                           ; 1 bytes @ 0x6
   644                           
   645  0076                     ___awmod@sign:	
   646                           ; 1 bytes @ 0x6
   647                           
   648                           
   649                           ; 1 bytes @ 0x6
   650  0076                     	ds	1
   651  0077                     ___lwdiv@counter:
   652  0077                     ___awdiv@quotient:	
   653                           ; 1 bytes @ 0x7
   654                           
   655                           
   656                           ; 2 bytes @ 0x7
   657  0077                     	ds	1
   658  0078                     ??___lmul:
   659                           
   660                           ; 1 bytes @ 0x8
   661  0078                     	ds	1
   662  0079                     ?_show_multidigits:
   663  0079                     ?_tx_sn:	
   664                           ; 1 bytes @ 0x9
   665                           
   666  0079                     show_multidigits@val:	
   667                           ; 1 bytes @ 0x9
   668                           
   669  0079                     tx_sn@val:	
   670                           ; 2 bytes @ 0x9
   671                           
   672  0079                     ___lmul@product:	
   673                           ; 2 bytes @ 0x9
   674                           
   675                           
   676                           ; 4 bytes @ 0x9
   677  0079                     	ds	2
   678  007B                     ??_print_serialnumber:
   679  007B                     ??_show_multidigits:	
   680                           ; 1 bytes @ 0xB
   681                           
   682  007B                     ??_tx_sn:	
   683                           ; 1 bytes @ 0xB
   684                           
   685                           
   686                           ; 1 bytes @ 0xB
   687  007B                     	ds	2
   688  007D                     ??___aldiv:
   689                           
   690                           ; 1 bytes @ 0xD
   691  007D                     	ds	1
   692  007E                     ??_LCD_num:
   693                           
   694                           	psect	cstackBANK0
   695  0020                     __pcstackBANK0:	
   696                           ; 1 bytes @ 0xE
   697                           
   698  0020                     ?___aldiv:
   699  0020                     show_multidigits@digit4:	
   700                           ; 4 bytes @ 0x0
   701                           
   702  0020                     tx_sn@digit4:	
   703                           ; 2 bytes @ 0x0
   704                           
   705  0020                     ___aldiv@divisor:	
   706                           ; 2 bytes @ 0x0
   707                           
   708                           
   709                           ; 4 bytes @ 0x0
   710  0020                     	ds	2
   711  0022                     show_multidigits@result:
   712  0022                     tx_sn@result:	
   713                           ; 2 bytes @ 0x2
   714                           
   715                           
   716                           ; 2 bytes @ 0x2
   717  0022                     	ds	2
   718  0024                     show_multidigits@digit3:
   719  0024                     tx_sn@digit3:	
   720                           ; 2 bytes @ 0x4
   721                           
   722  0024                     ___aldiv@dividend:	
   723                           ; 2 bytes @ 0x4
   724                           
   725                           
   726                           ; 4 bytes @ 0x4
   727  0024                     	ds	2
   728  0026                     show_multidigits@digit1:
   729  0026                     tx_sn@digit1:	
   730                           ; 2 bytes @ 0x6
   731                           
   732                           
   733                           ; 2 bytes @ 0x6
   734  0026                     	ds	2
   735  0028                     ___aldiv@counter:
   736  0028                     show_multidigits@digit2:	
   737                           ; 1 bytes @ 0x8
   738                           
   739  0028                     tx_sn@digit2:	
   740                           ; 2 bytes @ 0x8
   741                           
   742                           
   743                           ; 2 bytes @ 0x8
   744  0028                     	ds	1
   745  0029                     ___aldiv@sign:
   746                           
   747                           ; 1 bytes @ 0x9
   748  0029                     	ds	1
   749  002A                     show_multidigits@result1:
   750  002A                     tx_sn@result1:	
   751                           ; 2 bytes @ 0xA
   752                           
   753  002A                     ___aldiv@quotient:	
   754                           ; 2 bytes @ 0xA
   755                           
   756                           
   757                           ; 4 bytes @ 0xA
   758  002A                     	ds	2
   759  002C                     show_multidigits@remainder:
   760  002C                     tx_sn@remainder:	
   761                           ; 2 bytes @ 0xC
   762                           
   763                           
   764                           ; 2 bytes @ 0xC
   765  002C                     	ds	2
   766  002E                     ??_print_dht11data:
   767  002E                     ?_LCD_num:	
   768                           ; 1 bytes @ 0xE
   769                           
   770  002E                     LCD_num@val:	
   771                           ; 1 bytes @ 0xE
   772                           
   773                           
   774                           ; 4 bytes @ 0xE
   775  002E                     	ds	4
   776  0032                     LCD_num@digit1:
   777                           
   778                           ; 2 bytes @ 0x12
   779  0032                     	ds	2
   780  0034                     LCD_num@digit2:
   781                           
   782                           ; 2 bytes @ 0x14
   783  0034                     	ds	2
   784  0036                     LCD_num@digit3:
   785                           
   786                           ; 2 bytes @ 0x16
   787  0036                     	ds	2
   788  0038                     LCD_num@result:
   789                           
   790                           ; 2 bytes @ 0x18
   791  0038                     	ds	2
   792  003A                     LCD_num@result1:
   793                           
   794                           ; 2 bytes @ 0x1A
   795  003A                     	ds	2
   796  003C                     LCD_num@remainder:
   797                           
   798                           ; 2 bytes @ 0x1C
   799  003C                     	ds	2
   800  003E                     ??_print_analogvoltages:
   801                           
   802                           ; 1 bytes @ 0x1E
   803  003E                     	ds	3
   804  0041                     print_analogvoltages@i:
   805                           
   806                           ; 1 bytes @ 0x21
   807  0041                     	ds	1
   808  0042                     print_analogvoltages@j:
   809                           
   810                           ; 1 bytes @ 0x22
   811  0042                     	ds	1
   812  0043                     ??_main:
   813                           
   814                           ; 1 bytes @ 0x23
   815  0043                     	ds	3
   816                           
   817                           	psect	maintext
   818  005F                     __pmaintext:	
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 39 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : B00/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0
   840 ;;      Temps:          0       3       0       0       0
   841 ;;      Totals:         0       3       0       0       0
   842 ;;Total ram usage:        3 bytes
   843 ;; Hardware stack levels required when called: 4
   844 ;; This function calls:
   845 ;;		_ADC_Init
   846 ;;		_LCD_Command
   847 ;;		_LCD_init
   848 ;;		_print_analogvoltages
   849 ;;		_print_dht11data
   850 ;;		_print_serialnumber
   851 ;;		_rtc_getdata
   852 ;;		_rtc_int
   853 ;;		_rtc_lcd_data
   854 ;;		_rtc_terminal_data
   855 ;;		_ser_int
   856 ;;		_tx
   857 ;; This function is called by:
   858 ;;		Startup code after reset
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _main
   864  005F                     _main:
   865  005F                     l2081:	
   866                           ;incstack = 0
   867                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   868                           
   869                           
   870                           ;main.c: 41:     LCD_init();
   871  005F  120A  158A  2483  120A  118A  	fcall	_LCD_init
   872                           
   873                           ;main.c: 42:     ser_int();
   874  0064  120A  158A  23D4  120A  118A  	fcall	_ser_int
   875  0069                     l265:	
   876                           ;main.c: 43:     while (1)
   877                           
   878                           
   879                           ;main.c: 44:     {;main.c: 45:         LCD_Command(0x01);
   880  0069  3001               	movlw	1
   881  006A  120A  158A  252D  120A  118A  	fcall	_LCD_Command
   882                           
   883                           ;main.c: 48:         print_serialnumber();
   884  006F  120A  158A  2401  120A  118A  	fcall	_print_serialnumber
   885                           
   886                           ;main.c: 50:         rtc_int();
   887  0074  120A  158A  2413  120A  118A  	fcall	_rtc_int
   888                           
   889                           ;main.c: 51:         rtc_getdata();
   890  0079  120A  158A  2679  120A  118A  	fcall	_rtc_getdata
   891                           
   892                           ;main.c: 52:         rtc_lcd_data();
   893  007E  120A  118A  2301  120A  118A  	fcall	_rtc_lcd_data
   894                           
   895                           ;main.c: 53:         rtc_terminal_data();
   896  0083  120A  118A  23E2  120A  118A  	fcall	_rtc_terminal_data
   897                           
   898                           ;main.c: 56:         ADC_Init ();
   899  0088  120A  158A  26C7  120A  118A  	fcall	_ADC_Init
   900  008D                     l2083:
   901                           
   902                           ;main.c: 57:         GO_nDONE=1;
   903  008D  1283               	bcf	3,5	;RP0=0, select bank0
   904  008E  1303               	bcf	3,6	;RP1=0, select bank0
   905  008F  151F               	bsf	31,2	;volatile
   906  0090                     l266:	
   907                           ;main.c: 58:         while(GO_nDONE==1);
   908                           
   909  0090  191F               	btfsc	31,2	;volatile
   910  0091  2893               	goto	u1731
   911  0092  2894               	goto	u1730
   912  0093                     u1731:
   913  0093  2890               	goto	l266
   914  0094                     u1730:
   915  0094                     l2085:
   916                           
   917                           ;main.c: 59:         _delay((unsigned long)((10)*(20000000/4000.0)));
   918  0094  3041               	movlw	65
   919  0095  1283               	bcf	3,5	;RP0=0, select bank0
   920  0096  1303               	bcf	3,6	;RP1=0, select bank0
   921  0097  00C4               	movwf	??_main+1
   922  0098  30ED               	movlw	237
   923  0099  00C3               	movwf	??_main
   924  009A                     u1747:
   925  009A  0BC3               	decfsz	??_main,f
   926  009B  289A               	goto	u1747
   927  009C  0BC4               	decfsz	??_main+1,f
   928  009D  289A               	goto	u1747
   929  009E  289F               	nop2
   930  009F                     l2087:
   931                           
   932                           ;main.c: 60:         LCD_Command(0xC0);
   933  009F  30C0               	movlw	192
   934  00A0  120A  158A  252D  120A  118A  	fcall	_LCD_Command
   935  00A5                     l2089:
   936                           
   937                           ;main.c: 61:         print_analogvoltages();
   938  00A5  120A  158A  2792  120A  118A  	fcall	_print_analogvoltages
   939  00AA                     l2091:
   940                           
   941                           ;main.c: 64:         print_dht11data();
   942  00AA  120A  118A  222B  120A  118A  	fcall	_print_dht11data
   943  00AF                     l2093:
   944                           
   945                           ;main.c: 67:         tx(0x0d);
   946  00AF  300D               	movlw	13
   947  00B0  120A  158A  23B1  120A  118A  	fcall	_tx
   948                           
   949                           ;main.c: 68:         _delay((unsigned long)((250)*(20000000/4000.0)));
   950  00B5  3007               	movlw	7
   951  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   952  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   953  00B8  00C5               	movwf	??_main+2
   954  00B9  3058               	movlw	88
   955  00BA  00C4               	movwf	??_main+1
   956  00BB  3059               	movlw	89
   957  00BC  00C3               	movwf	??_main
   958  00BD                     u1757:
   959  00BD  0BC3               	decfsz	??_main,f
   960  00BE  28BD               	goto	u1757
   961  00BF  0BC4               	decfsz	??_main+1,f
   962  00C0  28BD               	goto	u1757
   963  00C1  0BC5               	decfsz	??_main+2,f
   964  00C2  28BD               	goto	u1757
   965                           
   966                           ;main.c: 69:         sn += 1;
   967  00C3  3001               	movlw	1
   968  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   969  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   970  00C6  07EB               	addwf	_sn,f
   971  00C7  1803               	skipnc
   972  00C8  0AEC               	incf	_sn+1,f
   973  00C9  3000               	movlw	0
   974  00CA  07EC               	addwf	_sn+1,f
   975  00CB  2869               	goto	l265
   976  00CC  120A  118A  2800   	ljmp	start
   977  00CF                     __end_of_main:
   978                           
   979                           	psect	text1
   980  0BD4                     __ptext1:	
   981 ;; *************** function _ser_int *****************
   982 ;; Defined at:
   983 ;;		line 7 in file "./uart.h"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _ser_int
  1012  0BD4                     _ser_int:
  1013  0BD4                     l1977:	
  1014                           ;incstack = 0
  1015                           ; Regs used in _ser_int: [wreg]
  1016                           
  1017                           
  1018                           ;./uart.h: 9:  TXSTA= 0x20;
  1019  0BD4  3020               	movlw	32
  1020  0BD5  1683               	bsf	3,5	;RP0=1, select bank1
  1021  0BD6  1303               	bcf	3,6	;RP1=0, select bank1
  1022  0BD7  0098               	movwf	24	;volatile
  1023                           
  1024                           ;./uart.h: 10:  RCSTA= 0b10010000;
  1025  0BD8  3090               	movlw	144
  1026  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0BDB  0098               	movwf	24	;volatile
  1029                           
  1030                           ;./uart.h: 11:  SPBRG=31;
  1031  0BDC  301F               	movlw	31
  1032  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  1033  0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  1034  0BDF  0099               	movwf	25	;volatile
  1035  0BE0                     l126:
  1036  0BE0  0008               	return
  1037  0BE1                     __end_of_ser_int:
  1038                           
  1039                           	psect	text2
  1040  03E2                     __ptext2:	
  1041 ;; *************** function _rtc_terminal_data *****************
  1042 ;; Defined at:
  1043 ;;		line 192 in file "main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 1
  1064 ;; This function calls:
  1065 ;;		_convd
  1066 ;;		_convup
  1067 ;;		_tx
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _rtc_terminal_data
  1075  03E2                     _rtc_terminal_data:
  1076  03E2                     l1989:	
  1077                           ;incstack = 0
  1078                           ; Regs used in _rtc_terminal_data: [wreg+status,2+status,0+pclath+cstack]
  1079                           
  1080                           
  1081                           ;main.c: 194:         tx(convup(hour));
  1082  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1083  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1084  03E4  0862               	movf	_hour,w
  1085  03E5  120A  158A  23C8  120A  118A  	fcall	_convup
  1086  03EA  120A  158A  23B1  120A  118A  	fcall	_tx
  1087                           
  1088                           ;main.c: 195:         tx(convd(hour));
  1089  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1090  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1091  03F1  0862               	movf	_hour,w
  1092  03F2  120A  158A  2380  120A  118A  	fcall	_convd
  1093  03F7  120A  158A  23B1  120A  118A  	fcall	_tx
  1094                           
  1095                           ;main.c: 196:         tx(':');
  1096  03FC  303A               	movlw	58
  1097  03FD  120A  158A  23B1  120A  118A  	fcall	_tx
  1098                           
  1099                           ;main.c: 197:         tx(convup(min));
  1100  0402  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0403  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0404  0863               	movf	_min,w
  1103  0405  120A  158A  23C8  120A  118A  	fcall	_convup
  1104  040A  120A  158A  23B1  120A  118A  	fcall	_tx
  1105                           
  1106                           ;main.c: 198:         tx(convd(min));
  1107  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0411  0863               	movf	_min,w
  1110  0412  120A  158A  2380  120A  118A  	fcall	_convd
  1111  0417  120A  158A  23B1  120A  118A  	fcall	_tx
  1112                           
  1113                           ;main.c: 199:         tx(':');
  1114  041C  303A               	movlw	58
  1115  041D  120A  158A  23B1  120A  118A  	fcall	_tx
  1116                           
  1117                           ;main.c: 200:         tx(convup(sec));
  1118  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0424  0864               	movf	_sec,w
  1121  0425  120A  158A  23C8  120A  118A  	fcall	_convup
  1122  042A  120A  158A  23B1  120A  118A  	fcall	_tx
  1123                           
  1124                           ;main.c: 201:         tx(convd(sec));
  1125  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0431  0864               	movf	_sec,w
  1128  0432  120A  158A  2380  120A  118A  	fcall	_convd
  1129  0437  120A  158A  23B1  120A  118A  	fcall	_tx
  1130                           
  1131                           ;main.c: 203:         tx(',');
  1132  043C  302C               	movlw	44
  1133  043D  120A  158A  23B1  120A  118A  	fcall	_tx
  1134                           
  1135                           ;main.c: 205:         tx(convup(date));
  1136  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0444  0860               	movf	_date,w
  1139  0445  120A  158A  23C8  120A  118A  	fcall	_convup
  1140  044A  120A  158A  23B1  120A  118A  	fcall	_tx
  1141                           
  1142                           ;main.c: 206:         tx(convd(date));
  1143  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0451  0860               	movf	_date,w
  1146  0452  120A  158A  2380  120A  118A  	fcall	_convd
  1147  0457  120A  158A  23B1  120A  118A  	fcall	_tx
  1148                           
  1149                           ;main.c: 207:         tx(':');
  1150  045C  303A               	movlw	58
  1151  045D  120A  158A  23B1  120A  118A  	fcall	_tx
  1152                           
  1153                           ;main.c: 208:         tx(convup(month));
  1154  0462  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0463  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0464  085F               	movf	_month,w
  1157  0465  120A  158A  23C8  120A  118A  	fcall	_convup
  1158  046A  120A  158A  23B1  120A  118A  	fcall	_tx
  1159                           
  1160                           ;main.c: 209:         tx(convd(month));
  1161  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0471  085F               	movf	_month,w
  1164  0472  120A  158A  2380  120A  118A  	fcall	_convd
  1165  0477  120A  158A  23B1  120A  118A  	fcall	_tx
  1166                           
  1167                           ;main.c: 210:         tx(':');
  1168  047C  303A               	movlw	58
  1169  047D  120A  158A  23B1  120A  118A  	fcall	_tx
  1170                           
  1171                           ;main.c: 211:         tx(convup(year));
  1172  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1173  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1174  0484  085E               	movf	_year,w
  1175  0485  120A  158A  23C8  120A  118A  	fcall	_convup
  1176  048A  120A  158A  23B1  120A  118A  	fcall	_tx
  1177                           
  1178                           ;main.c: 212:         tx(convd(year));
  1179  048F  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0490  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0491  085E               	movf	_year,w
  1182  0492  120A  158A  2380  120A  118A  	fcall	_convd
  1183  0497  120A  158A  23B1  120A  118A  	fcall	_tx
  1184                           
  1185                           ;main.c: 214:         tx(',');
  1186  049C  302C               	movlw	44
  1187  049D  120A  158A  23B1  120A  118A  	fcall	_tx
  1188                           
  1189                           ;main.c: 215:         tx(convup(day));
  1190  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1191  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1192  04A4  0861               	movf	_day,w
  1193  04A5  120A  158A  23C8  120A  118A  	fcall	_convup
  1194  04AA  120A  158A  23B1  120A  118A  	fcall	_tx
  1195                           
  1196                           ;main.c: 216:         tx(convd(day));
  1197  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1198  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1199  04B1  0861               	movf	_day,w
  1200  04B2  120A  158A  2380  120A  118A  	fcall	_convd
  1201  04B7  120A  158A  23B1  120A  118A  	fcall	_tx
  1202                           
  1203                           ;main.c: 218:         tx(',');
  1204  04BC  302C               	movlw	44
  1205  04BD  120A  158A  23B1  120A  118A  	fcall	_tx
  1206  04C2                     l301:
  1207  04C2  0008               	return
  1208  04C3                     __end_of_rtc_terminal_data:
  1209                           
  1210                           	psect	text3
  1211  0301                     __ptext3:	
  1212 ;; *************** function _rtc_lcd_data *****************
  1213 ;; Defined at:
  1214 ;;		line 167 in file "main.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, pclath, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0
  1231 ;;      Totals:         0       0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 1
  1235 ;; This function calls:
  1236 ;;		_LCD_Char
  1237 ;;		_LCD_Command
  1238 ;;		_convd
  1239 ;;		_convup
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           
  1246                           ;psect for function _rtc_lcd_data
  1247  0301                     _rtc_lcd_data:
  1248  0301                     l1987:	
  1249                           ;incstack = 0
  1250                           ; Regs used in _rtc_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1251                           
  1252                           
  1253                           ;main.c: 169:         LCD_Command(0x80);
  1254  0301  3080               	movlw	128
  1255  0302  120A  158A  252D  120A  118A  	fcall	_LCD_Command
  1256                           
  1257                           ;main.c: 170:         LCD_Char(convup(hour));
  1258  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0309  0862               	movf	_hour,w
  1261  030A  120A  158A  23C8  120A  118A  	fcall	_convup
  1262  030F  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1263                           
  1264                           ;main.c: 171:         LCD_Char(convd(hour));
  1265  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0316  0862               	movf	_hour,w
  1268  0317  120A  158A  2380  120A  118A  	fcall	_convd
  1269  031C  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1270                           
  1271                           ;main.c: 172:         LCD_Char(':');
  1272  0321  303A               	movlw	58
  1273  0322  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1274                           
  1275                           ;main.c: 173:         LCD_Char(convup(min));
  1276  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0329  0863               	movf	_min,w
  1279  032A  120A  158A  23C8  120A  118A  	fcall	_convup
  1280  032F  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1281                           
  1282                           ;main.c: 174:         LCD_Char(convd(min));
  1283  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0336  0863               	movf	_min,w
  1286  0337  120A  158A  2380  120A  118A  	fcall	_convd
  1287  033C  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1288                           
  1289                           ;main.c: 175:         LCD_Char(':');
  1290  0341  303A               	movlw	58
  1291  0342  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1292                           
  1293                           ;main.c: 176:         LCD_Char(convup(sec));
  1294  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0349  0864               	movf	_sec,w
  1297  034A  120A  158A  23C8  120A  118A  	fcall	_convup
  1298  034F  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1299                           
  1300                           ;main.c: 177:         LCD_Char(convd(sec));
  1301  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0356  0864               	movf	_sec,w
  1304  0357  120A  158A  2380  120A  118A  	fcall	_convd
  1305  035C  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1306                           
  1307                           ;main.c: 179:         LCD_Command(0x89);
  1308  0361  3089               	movlw	137
  1309  0362  120A  158A  252D  120A  118A  	fcall	_LCD_Command
  1310                           
  1311                           ;main.c: 180:         LCD_Char(convup(date));
  1312  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0369  0860               	movf	_date,w
  1315  036A  120A  158A  23C8  120A  118A  	fcall	_convup
  1316  036F  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1317                           
  1318                           ;main.c: 181:         LCD_Char(convd(date));
  1319  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0376  0860               	movf	_date,w
  1322  0377  120A  158A  2380  120A  118A  	fcall	_convd
  1323  037C  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1324                           
  1325                           ;main.c: 182:         LCD_Char(':');
  1326  0381  303A               	movlw	58
  1327  0382  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1328                           
  1329                           ;main.c: 183:         LCD_Char(convup(month));
  1330  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0389  085F               	movf	_month,w
  1333  038A  120A  158A  23C8  120A  118A  	fcall	_convup
  1334  038F  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1335                           
  1336                           ;main.c: 184:         LCD_Char(convd(month));
  1337  0394  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0395  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0396  085F               	movf	_month,w
  1340  0397  120A  158A  2380  120A  118A  	fcall	_convd
  1341  039C  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1342                           
  1343                           ;main.c: 185:         LCD_Char(':');
  1344  03A1  303A               	movlw	58
  1345  03A2  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1346                           
  1347                           ;main.c: 186:         LCD_Char(convup(year));
  1348  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  1349  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  1350  03A9  085E               	movf	_year,w
  1351  03AA  120A  158A  23C8  120A  118A  	fcall	_convup
  1352  03AF  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1353                           
  1354                           ;main.c: 187:         LCD_Char(convd(year));
  1355  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1356  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1357  03B6  085E               	movf	_year,w
  1358  03B7  120A  158A  2380  120A  118A  	fcall	_convd
  1359  03BC  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1360                           
  1361                           ;main.c: 188:         LCD_Char('/');
  1362  03C1  302F               	movlw	47
  1363  03C2  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1364                           
  1365                           ;main.c: 189:         LCD_Char(convup(day));
  1366  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1367  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1368  03C9  0861               	movf	_day,w
  1369  03CA  120A  158A  23C8  120A  118A  	fcall	_convup
  1370  03CF  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1371                           
  1372                           ;main.c: 190:         LCD_Char(convd(day));
  1373  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1374  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1375  03D6  0861               	movf	_day,w
  1376  03D7  120A  158A  2380  120A  118A  	fcall	_convd
  1377  03DC  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  1378  03E1                     l298:
  1379  03E1  0008               	return
  1380  03E2                     __end_of_rtc_lcd_data:
  1381                           
  1382                           	psect	text4
  1383  0BC8                     __ptext4:	
  1384 ;; *************** function _convup *****************
  1385 ;; Defined at:
  1386 ;;		line 97 in file "./ds1307.h"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  bcd             1    wreg     unsigned char 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  bcd             1    1[COMMON] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      unsigned char 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       0       0       0       0
  1401 ;;      Locals:         1       0       0       0       0
  1402 ;;      Temps:          1       0       0       0       0
  1403 ;;      Totals:         2       0       0       0       0
  1404 ;;Total ram usage:        2 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_rtc_lcd_data
  1410 ;;		_rtc_terminal_data
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _convup
  1416  0BC8                     _convup:
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _convup: [wreg+status,2+status,0]
  1420                           ;convup@bcd stored from wreg
  1421  0BC8  00F1               	movwf	convup@bcd
  1422  0BC9                     l1963:
  1423                           
  1424                           ;./ds1307.h: 97: unsigned char convup(unsigned char bcd);./ds1307.h: 98: {;./ds1307.h: 9
      +                          9:     return ((bcd>>4)+48);
  1425  0BC9  0871               	movf	convup@bcd,w
  1426  0BCA  00F0               	movwf	??_convup
  1427  0BCB  3004               	movlw	4
  1428  0BCC                     u1645:
  1429  0BCC  1003               	clrc
  1430  0BCD  0CF0               	rrf	??_convup,f
  1431  0BCE  3EFF               	addlw	-1
  1432  0BCF  1D03               	skipz
  1433  0BD0  2BCC               	goto	u1645
  1434  0BD1  0870               	movf	??_convup,w
  1435  0BD2  3E30               	addlw	48
  1436  0BD3                     l247:
  1437  0BD3  0008               	return
  1438  0BD4                     __end_of_convup:
  1439                           
  1440                           	psect	text5
  1441  0B80                     __ptext5:	
  1442 ;; *************** function _convd *****************
  1443 ;; Defined at:
  1444 ;;		line 101 in file "./ds1307.h"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  bcd             1    wreg     unsigned char 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  bcd             1    0[COMMON] unsigned char 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      unsigned char 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         1       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0
  1461 ;;      Totals:         1       0       0       0       0
  1462 ;;Total ram usage:        1 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_rtc_lcd_data
  1468 ;;		_rtc_terminal_data
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _convd
  1474  0B80                     _convd:
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _convd: [wreg+status,2+status,0]
  1478                           ;convd@bcd stored from wreg
  1479  0B80  00F0               	movwf	convd@bcd
  1480  0B81                     l1967:
  1481                           
  1482                           ;./ds1307.h: 101: unsigned char convd(unsigned char bcd);./ds1307.h: 102: {;./ds1307.h: 
      +                          103:     return ((bcd&0x0F)+48);
  1483  0B81  0870               	movf	convd@bcd,w
  1484  0B82  390F               	andlw	15
  1485  0B83  3E30               	addlw	48
  1486  0B84                     l250:
  1487  0B84  0008               	return
  1488  0B85                     __end_of_convd:
  1489                           
  1490                           	psect	text6
  1491  0C13                     __ptext6:	
  1492 ;; *************** function _rtc_int *****************
  1493 ;; Defined at:
  1494 ;;		line 19 in file "./ds1307.h"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _rtc_int
  1523  0C13                     _rtc_int:
  1524  0C13                     l1979:	
  1525                           ;incstack = 0
  1526                           ; Regs used in _rtc_int: [wreg]
  1527                           
  1528                           
  1529                           ;./ds1307.h: 21:     TRISC3=TRISC4=1;
  1530  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  1531  0C14  1303               	bcf	3,6	;RP1=0, select bank1
  1532  0C15  1607               	bsf	7,4	;volatile
  1533  0C16  1A07               	btfsc	7,4	;volatile
  1534  0C17  2C19               	goto	u1651
  1535  0C18  2C1D               	goto	u1650
  1536  0C19                     u1651:
  1537  0C19  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0C1A  1303               	bcf	3,6	;RP1=0, select bank1
  1539  0C1B  1587               	bsf	7,3	;volatile
  1540  0C1C  2C20               	goto	u1664
  1541  0C1D                     u1650:
  1542  0C1D  1683               	bsf	3,5	;RP0=1, select bank1
  1543  0C1E  1303               	bcf	3,6	;RP1=0, select bank1
  1544  0C1F  1187               	bcf	7,3	;volatile
  1545  0C20                     u1664:
  1546  0C20                     l1981:
  1547                           
  1548                           ;./ds1307.h: 22:     SSPCON=0x28;
  1549  0C20  3028               	movlw	40
  1550  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0C23  0094               	movwf	20	;volatile
  1553                           
  1554                           ;./ds1307.h: 23:     SSPADD= (((11059200/4)/100)-1);
  1555  0C24  30FF               	movlw	255
  1556  0C25  1683               	bsf	3,5	;RP0=1, select bank1
  1557  0C26  1303               	bcf	3,6	;RP1=0, select bank1
  1558  0C27  0093               	movwf	19	;volatile
  1559  0C28                     l204:
  1560  0C28  0008               	return
  1561  0C29                     __end_of_rtc_int:
  1562                           
  1563                           	psect	text7
  1564  0E79                     __ptext7:	
  1565 ;; *************** function _rtc_getdata *****************
  1566 ;; Defined at:
  1567 ;;		line 157 in file "main.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, pclath, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0
  1583 ;;      Temps:          1       0       0       0       0
  1584 ;;      Totals:         1       0       0       0       0
  1585 ;;Total ram usage:        1 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 3
  1588 ;; This function calls:
  1589 ;;		_rtc_read_byte
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _rtc_getdata
  1597  0E79                     _rtc_getdata:
  1598  0E79                     l1985:	
  1599                           ;incstack = 0
  1600                           ; Regs used in _rtc_getdata: [wreg+status,2+status,0+pclath+cstack]
  1601                           
  1602                           
  1603                           ;main.c: 159:     sec =rtc_read_byte(0x00);
  1604  0E79  3000               	movlw	0
  1605  0E7A  120A  158A  24F3  120A  158A  	fcall	_rtc_read_byte
  1606  0E7F  00F4               	movwf	??_rtc_getdata
  1607  0E80  0874               	movf	??_rtc_getdata,w
  1608  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0E83  00E4               	movwf	_sec
  1611                           
  1612                           ;main.c: 160:     min =rtc_read_byte(0x01);
  1613  0E84  3001               	movlw	1
  1614  0E85  120A  158A  24F3  120A  158A  	fcall	_rtc_read_byte
  1615  0E8A  00F4               	movwf	??_rtc_getdata
  1616  0E8B  0874               	movf	??_rtc_getdata,w
  1617  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0E8E  00E3               	movwf	_min
  1620                           
  1621                           ;main.c: 161:     hour =rtc_read_byte(0x02);
  1622  0E8F  3002               	movlw	2
  1623  0E90  120A  158A  24F3  120A  158A  	fcall	_rtc_read_byte
  1624  0E95  00F4               	movwf	??_rtc_getdata
  1625  0E96  0874               	movf	??_rtc_getdata,w
  1626  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  1627  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  1628  0E99  00E2               	movwf	_hour
  1629                           
  1630                           ;main.c: 162:     day =rtc_read_byte(0x03);
  1631  0E9A  3003               	movlw	3
  1632  0E9B  120A  158A  24F3  120A  158A  	fcall	_rtc_read_byte
  1633  0EA0  00F4               	movwf	??_rtc_getdata
  1634  0EA1  0874               	movf	??_rtc_getdata,w
  1635  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0EA4  00E1               	movwf	_day
  1638                           
  1639                           ;main.c: 163:     date =rtc_read_byte(0x04);
  1640  0EA5  3004               	movlw	4
  1641  0EA6  120A  158A  24F3  120A  158A  	fcall	_rtc_read_byte
  1642  0EAB  00F4               	movwf	??_rtc_getdata
  1643  0EAC  0874               	movf	??_rtc_getdata,w
  1644  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0EAF  00E0               	movwf	_date
  1647                           
  1648                           ;main.c: 164:     month=rtc_read_byte(0x05);
  1649  0EB0  3005               	movlw	5
  1650  0EB1  120A  158A  24F3  120A  158A  	fcall	_rtc_read_byte
  1651  0EB6  00F4               	movwf	??_rtc_getdata
  1652  0EB7  0874               	movf	??_rtc_getdata,w
  1653  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0EBA  00DF               	movwf	_month
  1656                           
  1657                           ;main.c: 165:     year =rtc_read_byte(0x06);
  1658  0EBB  3006               	movlw	6
  1659  0EBC  120A  158A  24F3  120A  158A  	fcall	_rtc_read_byte
  1660  0EC1  00F4               	movwf	??_rtc_getdata
  1661  0EC2  0874               	movf	??_rtc_getdata,w
  1662  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0EC5  00DE               	movwf	_year
  1665  0EC6                     l295:
  1666  0EC6  0008               	return
  1667  0EC7                     __end_of_rtc_getdata:
  1668                           
  1669                           	psect	text8
  1670  0CF3                     __ptext8:	
  1671 ;; *************** function _rtc_read_byte *****************
  1672 ;; Defined at:
  1673 ;;		line 52 in file "./ds1307.h"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  addr            1    wreg     unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  addr            1    2[COMMON] unsigned char 
  1678 ;;  rec             1    3[COMMON] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      unsigned char 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       0       0       0       0
  1689 ;;      Locals:         2       0       0       0       0
  1690 ;;      Temps:          1       0       0       0       0
  1691 ;;      Totals:         3       0       0       0       0
  1692 ;;Total ram usage:        3 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 2
  1695 ;; This function calls:
  1696 ;;		_rtc_nak
  1697 ;;		_rtc_read
  1698 ;;		_rtc_res
  1699 ;;		_rtc_send
  1700 ;;		_rtc_stop
  1701 ;;		_waitmssp
  1702 ;; This function is called by:
  1703 ;;		_rtc_getdata
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _rtc_read_byte
  1709  0CF3                     _rtc_read_byte:
  1710                           
  1711                           ;incstack = 0
  1712                           ; Regs used in _rtc_read_byte: [wreg+status,2+status,0+pclath+cstack]
  1713                           ;rtc_read_byte@addr stored from wreg
  1714  0CF3  00F2               	movwf	rtc_read_byte@addr
  1715  0CF4                     l225:	
  1716                           ;./ds1307.h: 52: unsigned char rtc_read_byte(unsigned char addr);./ds1307.h: 53: {;./ds1
      +                          307.h: 54:     unsigned char rec;;./ds1307.h: 55: L: rtc_res();
  1717                           
  1718  0CF4                     l1943:
  1719  0CF4  120A  158A  2395  120A  158A  	fcall	_rtc_res
  1720  0CF9                     l1945:
  1721                           
  1722                           ;./ds1307.h: 56:     SSPBUF=0xD0;
  1723  0CF9  30D0               	movlw	208
  1724  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0CFC  0093               	movwf	19	;volatile
  1727  0CFD                     l1947:
  1728                           
  1729                           ;./ds1307.h: 57:     waitmssp();
  1730  0CFD  120A  158A  2385  120A  158A  	fcall	_waitmssp
  1731  0D02                     l226:	
  1732                           ;./ds1307.h: 58:     while(ACKSTAT){goto L;}
  1733                           
  1734  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  1735  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  1736  0D04  1B11               	btfsc	17,6	;volatile
  1737  0D05  2D07               	goto	u1631
  1738  0D06  2D08               	goto	u1630
  1739  0D07                     u1631:
  1740  0D07  2CF4               	goto	l225
  1741  0D08                     u1630:
  1742  0D08                     l1949:
  1743                           
  1744                           ;./ds1307.h: 60:     rtc_send(addr);
  1745  0D08  0872               	movf	rtc_read_byte@addr,w
  1746  0D09  120A  158A  23F0  120A  158A  	fcall	_rtc_send
  1747  0D0E                     l1951:
  1748                           
  1749                           ;./ds1307.h: 61:     rtc_res();
  1750  0D0E  120A  158A  2395  120A  158A  	fcall	_rtc_res
  1751  0D13                     l1953:
  1752                           
  1753                           ;./ds1307.h: 62:     rtc_send(0xD1);
  1754  0D13  30D1               	movlw	209
  1755  0D14  120A  158A  23F0  120A  158A  	fcall	_rtc_send
  1756  0D19                     l1955:
  1757                           
  1758                           ;./ds1307.h: 63:     rec=rtc_read();
  1759  0D19  120A  158A  23BC  120A  158A  	fcall	_rtc_read
  1760  0D1E  00F1               	movwf	??_rtc_read_byte
  1761  0D1F  0871               	movf	??_rtc_read_byte,w
  1762  0D20  00F3               	movwf	rtc_read_byte@rec
  1763  0D21                     l1957:
  1764                           
  1765                           ;./ds1307.h: 64:     rtc_nak();
  1766  0D21  120A  158A  23A7  120A  158A  	fcall	_rtc_nak
  1767  0D26                     l1959:
  1768                           
  1769                           ;./ds1307.h: 65:     rtc_stop();
  1770  0D26  120A  158A  239E  120A  158A  	fcall	_rtc_stop
  1771                           
  1772                           ;./ds1307.h: 66:     return rec;
  1773  0D2B  0873               	movf	rtc_read_byte@rec,w
  1774  0D2C                     l229:
  1775  0D2C  0008               	return
  1776  0D2D                     __end_of_rtc_read_byte:
  1777                           
  1778                           	psect	text9
  1779  0B9E                     __ptext9:	
  1780 ;; *************** function _rtc_stop *****************
  1781 ;; Defined at:
  1782 ;;		line 75 in file "./ds1307.h"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		status,2, status,0, pclath, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1796 ;;      Params:         0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0
  1799 ;;      Totals:         0       0       0       0       0
  1800 ;;Total ram usage:        0 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 1
  1803 ;; This function calls:
  1804 ;;		_waitmssp
  1805 ;; This function is called by:
  1806 ;;		_rtc_read_byte
  1807 ;;		_rtc_send_byte
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _rtc_stop
  1813  0B9E                     _rtc_stop:
  1814  0B9E                     l1525:	
  1815                           ;incstack = 0
  1816                           ; Regs used in _rtc_stop: [status,2+status,0+pclath+cstack]
  1817                           
  1818                           
  1819                           ;./ds1307.h: 77:     PEN=1;
  1820  0B9E  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0B9F  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0BA0  1511               	bsf	17,2	;volatile
  1823  0BA1                     l1527:
  1824                           
  1825                           ;./ds1307.h: 78:     waitmssp();
  1826  0BA1  120A  158A  2385  120A  158A  	fcall	_waitmssp
  1827  0BA6                     l235:
  1828  0BA6  0008               	return
  1829  0BA7                     __end_of_rtc_stop:
  1830                           
  1831                           	psect	text10
  1832  0BF0                     __ptext10:	
  1833 ;; *************** function _rtc_send *****************
  1834 ;; Defined at:
  1835 ;;		line 30 in file "./ds1307.h"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  a               1    wreg     unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  a               1    0[COMMON] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0, pclath, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         0       0       0       0       0
  1850 ;;      Locals:         1       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0
  1852 ;;      Totals:         1       0       0       0       0
  1853 ;;Total ram usage:        1 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 1
  1856 ;; This function calls:
  1857 ;;		_waitmssp
  1858 ;; This function is called by:
  1859 ;;		_rtc_read_byte
  1860 ;;		_rtc_send_byte
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _rtc_send
  1866  0BF0                     _rtc_send:
  1867                           
  1868                           ;incstack = 0
  1869                           ; Regs used in _rtc_send: [wreg+status,2+status,0+pclath+cstack]
  1870                           ;rtc_send@a stored from wreg
  1871  0BF0  00F0               	movwf	rtc_send@a
  1872  0BF1                     l1521:
  1873                           
  1874                           ;./ds1307.h: 30: void rtc_send(unsigned char a);./ds1307.h: 31: {;./ds1307.h: 32:     SS
      +                          PBUF=a;
  1875  0BF1  0870               	movf	rtc_send@a,w
  1876  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0BF4  0093               	movwf	19	;volatile
  1879  0BF5                     l1523:
  1880                           
  1881                           ;./ds1307.h: 33:     waitmssp();
  1882  0BF5  120A  158A  2385  120A  158A  	fcall	_waitmssp
  1883  0BFA                     l213:	
  1884                           ;./ds1307.h: 34:     while(ACKSTAT);
  1885                           
  1886  0BFA  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0BFB  1303               	bcf	3,6	;RP1=0, select bank1
  1888  0BFC  1B11               	btfsc	17,6	;volatile
  1889  0BFD  2BFF               	goto	u911
  1890  0BFE  2C00               	goto	u910
  1891  0BFF                     u911:
  1892  0BFF  2BFA               	goto	l213
  1893  0C00                     u910:
  1894  0C00                     l216:
  1895  0C00  0008               	return
  1896  0C01                     __end_of_rtc_send:
  1897                           
  1898                           	psect	text11
  1899  0B95                     __ptext11:	
  1900 ;; *************** function _rtc_res *****************
  1901 ;; Defined at:
  1902 ;;		line 80 in file "./ds1307.h"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0
  1919 ;;      Totals:         0       0       0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 1
  1923 ;; This function calls:
  1924 ;;		_waitmssp
  1925 ;; This function is called by:
  1926 ;;		_rtc_read_byte
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function _rtc_res
  1932  0B95                     _rtc_res:
  1933  0B95                     l1537:	
  1934                           ;incstack = 0
  1935                           ; Regs used in _rtc_res: [status,2+status,0+pclath+cstack]
  1936                           
  1937                           
  1938                           ;./ds1307.h: 82:     RSEN=1;
  1939  0B95  1683               	bsf	3,5	;RP0=1, select bank1
  1940  0B96  1303               	bcf	3,6	;RP1=0, select bank1
  1941  0B97  1491               	bsf	17,1	;volatile
  1942  0B98                     l1539:
  1943                           
  1944                           ;./ds1307.h: 83:     waitmssp();
  1945  0B98  120A  158A  2385  120A  158A  	fcall	_waitmssp
  1946  0B9D                     l238:
  1947  0B9D  0008               	return
  1948  0B9E                     __end_of_rtc_res:
  1949                           
  1950                           	psect	text12
  1951  0BBC                     __ptext12:	
  1952 ;; *************** function _rtc_read *****************
  1953 ;; Defined at:
  1954 ;;		line 45 in file "./ds1307.h"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      unsigned char 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, pclath, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; Hardware stack levels required when called: 1
  1975 ;; This function calls:
  1976 ;;		_waitmssp
  1977 ;; This function is called by:
  1978 ;;		_rtc_read_byte
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _rtc_read
  1984  0BBC                     _rtc_read:
  1985  0BBC                     l1529:	
  1986                           ;incstack = 0
  1987                           ; Regs used in _rtc_read: [wreg+status,2+status,0+pclath+cstack]
  1988                           
  1989                           
  1990                           ;./ds1307.h: 47:     RCEN=1;
  1991  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  1992  0BBD  1303               	bcf	3,6	;RP1=0, select bank1
  1993  0BBE  1591               	bsf	17,3	;volatile
  1994  0BBF                     l1531:
  1995                           
  1996                           ;./ds1307.h: 48:     waitmssp();
  1997  0BBF  120A  158A  2385  120A  158A  	fcall	_waitmssp
  1998  0BC4                     l1533:
  1999                           
  2000                           ;./ds1307.h: 49:     return SSPBUF;
  2001  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0BC6  0813               	movf	19,w	;volatile
  2004  0BC7                     l222:
  2005  0BC7  0008               	return
  2006  0BC8                     __end_of_rtc_read:
  2007                           
  2008                           	psect	text13
  2009  0BA7                     __ptext13:	
  2010 ;; *************** function _rtc_nak *****************
  2011 ;; Defined at:
  2012 ;;		line 91 in file "./ds1307.h"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		status,2, status,0, pclath, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 1
  2033 ;; This function calls:
  2034 ;;		_waitmssp
  2035 ;; This function is called by:
  2036 ;;		_rtc_read_byte
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _rtc_nak
  2042  0BA7                     _rtc_nak:
  2043  0BA7                     l1541:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _rtc_nak: [status,2+status,0+pclath+cstack]
  2046                           
  2047                           
  2048                           ;./ds1307.h: 93:     ACKDT=1;
  2049  0BA7  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0BA8  1303               	bcf	3,6	;RP1=0, select bank1
  2051  0BA9  1691               	bsf	17,5	;volatile
  2052                           
  2053                           ;./ds1307.h: 94:     ACKEN=1;
  2054  0BAA  1611               	bsf	17,4	;volatile
  2055  0BAB                     l1543:
  2056                           
  2057                           ;./ds1307.h: 95:     waitmssp();
  2058  0BAB  120A  158A  2385  120A  158A  	fcall	_waitmssp
  2059  0BB0                     l244:
  2060  0BB0  0008               	return
  2061  0BB1                     __end_of_rtc_nak:
  2062                           
  2063                           	psect	text14
  2064  0B85                     __ptext14:	
  2065 ;; *************** function _waitmssp *****************
  2066 ;; Defined at:
  2067 ;;		line 25 in file "./ds1307.h"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		None
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0
  2084 ;;      Totals:         0       0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_rtc_send
  2091 ;;		_rtc_read
  2092 ;;		_rtc_read_byte
  2093 ;;		_rtc_stop
  2094 ;;		_rtc_res
  2095 ;;		_rtc_nak
  2096 ;;		_rtc_start
  2097 ;;		_rtc_ack
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _waitmssp
  2103  0B85                     _waitmssp:
  2104  0B85                     l1497:	
  2105                           ;incstack = 0
  2106                           ; Regs used in _waitmssp: []
  2107                           
  2108  0B85                     l207:	
  2109                           ;./ds1307.h: 27:     while(!SSPIF);
  2110                           
  2111  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0B87  1D8C               	btfss	12,3	;volatile
  2114  0B88  2B8A               	goto	u881
  2115  0B89  2B8B               	goto	u880
  2116  0B8A                     u881:
  2117  0B8A  2B85               	goto	l207
  2118  0B8B                     u880:
  2119  0B8B                     l209:
  2120                           
  2121                           ;./ds1307.h: 28:     SSPIF=0;
  2122  0B8B  118C               	bcf	12,3	;volatile
  2123  0B8C                     l210:
  2124  0B8C  0008               	return
  2125  0B8D                     __end_of_waitmssp:
  2126                           
  2127                           	psect	text15
  2128  0C01                     __ptext15:	
  2129 ;; *************** function _print_serialnumber *****************
  2130 ;; Defined at:
  2131 ;;		line 96 in file "main.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0, pclath, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2145 ;;      Params:         0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0
  2148 ;;      Totals:         0       0       0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 2
  2152 ;; This function calls:
  2153 ;;		_tx
  2154 ;;		_tx_sn
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           
  2161                           ;psect for function _print_serialnumber
  2162  0C01                     _print_serialnumber:
  2163  0C01                     l1983:	
  2164                           ;incstack = 0
  2165                           ; Regs used in _print_serialnumber: [wreg+status,2+status,0+pclath+cstack]
  2166                           
  2167                           
  2168                           ;main.c: 98:     tx_sn(sn);
  2169  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0C03  086C               	movf	_sn+1,w
  2172  0C04  00FA               	movwf	tx_sn@val+1
  2173  0C05  086B               	movf	_sn,w
  2174  0C06  00F9               	movwf	tx_sn@val
  2175  0C07  120A  118A  2655  120A  158A  	fcall	_tx_sn
  2176                           
  2177                           ;main.c: 99:     tx(')');
  2178  0C0C  3029               	movlw	41
  2179  0C0D  120A  158A  23B1  120A  158A  	fcall	_tx
  2180  0C12                     l277:
  2181  0C12  0008               	return
  2182  0C13                     __end_of_print_serialnumber:
  2183                           
  2184                           	psect	text16
  2185  022B                     __ptext16:	
  2186 ;; *************** function _print_dht11data *****************
  2187 ;; Defined at:
  2188 ;;		line 126 in file "main.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         0       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0
  2204 ;;      Temps:          0       8       0       0       0
  2205 ;;      Totals:         0       8       0       0       0
  2206 ;;Total ram usage:        8 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 2
  2209 ;; This function calls:
  2210 ;;		_CheckResponse
  2211 ;;		_LCD_Command
  2212 ;;		_ReadData
  2213 ;;		_StartSignal
  2214 ;;		_show
  2215 ;;		_show_multidigits
  2216 ;;		_tx
  2217 ;;		_tx_sn
  2218 ;; This function is called by:
  2219 ;;		_main
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           
  2224                           ;psect for function _print_dht11data
  2225  022B                     _print_dht11data:
  2226  022B                     l2029:	
  2227                           ;incstack = 0
  2228                           ; Regs used in _print_dht11data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2229                           
  2230                           
  2231                           ;main.c: 128:         StartSignal();
  2232  022B  120A  158A  2429  120A  118A  	fcall	_StartSignal
  2233                           
  2234                           ;main.c: 129:         CheckResponse();
  2235  0230  120A  158A  2462  120A  118A  	fcall	_CheckResponse
  2236  0235                     l2031:
  2237                           
  2238                           ;main.c: 130:         if(Check == 1)
  2239  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0237  036A               	decf	_Check,w
  2242  0238  1D03               	btfss	3,2
  2243  0239  2A3B               	goto	u1711
  2244  023A  2A3C               	goto	u1710
  2245  023B                     u1711:
  2246  023B  2AA4               	goto	l2039
  2247  023C                     u1710:
  2248  023C                     l2033:
  2249                           
  2250                           ;main.c: 131:         {;main.c: 132:             RH_byte1 = ReadData();
  2251  023C  120A  158A  25AD  120A  118A  	fcall	_ReadData
  2252  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2254  0243  00AE               	movwf	??_print_dht11data
  2255  0244  082E               	movf	??_print_dht11data,w
  2256  0245  00E7               	movwf	_RH_byte1
  2257                           
  2258                           ;main.c: 133:             RH_byte2 = ReadData();
  2259  0246  120A  158A  25AD  120A  118A  	fcall	_ReadData
  2260  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2261  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2262  024D  00AE               	movwf	??_print_dht11data
  2263  024E  082E               	movf	??_print_dht11data,w
  2264  024F  00E6               	movwf	_RH_byte2
  2265                           
  2266                           ;main.c: 134:             T_byte1 = ReadData();
  2267  0250  120A  158A  25AD  120A  118A  	fcall	_ReadData
  2268  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0257  00AE               	movwf	??_print_dht11data
  2271  0258  082E               	movf	??_print_dht11data,w
  2272  0259  00E9               	movwf	_T_byte1
  2273                           
  2274                           ;main.c: 135:             T_byte2 = ReadData();
  2275  025A  120A  158A  25AD  120A  118A  	fcall	_ReadData
  2276  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0261  00AE               	movwf	??_print_dht11data
  2279  0262  082E               	movf	??_print_dht11data,w
  2280  0263  00E8               	movwf	_T_byte2
  2281                           
  2282                           ;main.c: 136:             Sum = ReadData();
  2283  0264  120A  158A  25AD  120A  118A  	fcall	_ReadData
  2284  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2285  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2286  026B  00AE               	movwf	??_print_dht11data
  2287  026C  01AF               	clrf	??_print_dht11data+1
  2288  026D  082E               	movf	??_print_dht11data,w
  2289  026E  00D8               	movwf	_Sum
  2290  026F  082F               	movf	??_print_dht11data+1,w
  2291  0270  00D9               	movwf	_Sum+1
  2292  0271                     l2035:
  2293                           
  2294                           ;main.c: 137:             if(Sum == ((RH_byte1+RH_byte2+T_byte1+T_byte2) & 0XFF))
  2295  0271  0867               	movf	_RH_byte1,w
  2296  0272  0766               	addwf	_RH_byte2,w
  2297  0273  00AE               	movwf	??_print_dht11data
  2298  0274  01AF               	clrf	??_print_dht11data+1
  2299  0275  0DAF               	rlf	??_print_dht11data+1,f
  2300  0276  0869               	movf	_T_byte1,w
  2301  0277  072E               	addwf	??_print_dht11data,w
  2302  0278  00B0               	movwf	??_print_dht11data+2
  2303  0279  3000               	movlw	0
  2304  027A  1803               	skipnc
  2305  027B  3001               	movlw	1
  2306  027C  072F               	addwf	??_print_dht11data+1,w
  2307  027D  00B1               	movwf	??_print_dht11data+3
  2308  027E  0868               	movf	_T_byte2,w
  2309  027F  0730               	addwf	??_print_dht11data+2,w
  2310  0280  00B2               	movwf	??_print_dht11data+4
  2311  0281  3000               	movlw	0
  2312  0282  1803               	skipnc
  2313  0283  3001               	movlw	1
  2314  0284  0731               	addwf	??_print_dht11data+3,w
  2315  0285  00B3               	movwf	??_print_dht11data+5
  2316  0286  30FF               	movlw	255
  2317  0287  0532               	andwf	??_print_dht11data+4,w
  2318  0288  00B4               	movwf	??_print_dht11data+6
  2319  0289  3000               	movlw	0
  2320  028A  0533               	andwf	??_print_dht11data+5,w
  2321  028B  00B5               	movwf	??_print_dht11data+7
  2322  028C  0859               	movf	_Sum+1,w
  2323  028D  0635               	xorwf	??_print_dht11data+7,w
  2324  028E  1D03               	skipz
  2325  028F  2A92               	goto	u1725
  2326  0290  0858               	movf	_Sum,w
  2327  0291  0634               	xorwf	??_print_dht11data+6,w
  2328  0292                     u1725:
  2329  0292  1D03               	skipz
  2330  0293  2A95               	goto	u1721
  2331  0294  2A96               	goto	u1720
  2332  0295                     u1721:
  2333  0295  2AA4               	goto	l2039
  2334  0296                     u1720:
  2335  0296                     l2037:
  2336                           
  2337                           ;main.c: 138:             {;main.c: 139:                 Temp = T_byte1;
  2338  0296  0869               	movf	_T_byte1,w
  2339  0297  00AE               	movwf	??_print_dht11data
  2340  0298  01AF               	clrf	??_print_dht11data+1
  2341  0299  082E               	movf	??_print_dht11data,w
  2342  029A  00DC               	movwf	_Temp
  2343  029B  082F               	movf	??_print_dht11data+1,w
  2344  029C  00DD               	movwf	_Temp+1
  2345                           
  2346                           ;main.c: 140:                 RH = RH_byte1;
  2347  029D  0867               	movf	_RH_byte1,w
  2348  029E  00AE               	movwf	??_print_dht11data
  2349  029F  01AF               	clrf	??_print_dht11data+1
  2350  02A0  082E               	movf	??_print_dht11data,w
  2351  02A1  00DA               	movwf	_RH
  2352  02A2  082F               	movf	??_print_dht11data+1,w
  2353  02A3  00DB               	movwf	_RH+1
  2354  02A4                     l2039:
  2355                           
  2356                           ;main.c: 143:         LCD_Command(0x94);
  2357  02A4  3094               	movlw	148
  2358  02A5  120A  158A  252D  120A  118A  	fcall	_LCD_Command
  2359  02AA                     l2041:
  2360                           
  2361                           ;main.c: 144:         show("Temp:");
  2362  02AA  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2363  02AB  120A  158A  2443  120A  118A  	fcall	_show
  2364  02B0                     l2043:
  2365                           
  2366                           ;main.c: 145:         LCD_Command(0x99);
  2367  02B0  3099               	movlw	153
  2368  02B1  120A  158A  252D  120A  118A  	fcall	_LCD_Command
  2369  02B6                     l2045:
  2370                           
  2371                           ;main.c: 146:         show_multidigits (Temp);
  2372  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2373  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2374  02B8  085D               	movf	_Temp+1,w
  2375  02B9  00FA               	movwf	show_multidigits@val+1
  2376  02BA  085C               	movf	_Temp,w
  2377  02BB  00F9               	movwf	show_multidigits@val
  2378  02BC  120A  118A  24C3  120A  118A  	fcall	_show_multidigits
  2379  02C1                     l2047:
  2380                           
  2381                           ;main.c: 147:         tx_sn(Temp);
  2382  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2383  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2384  02C3  085D               	movf	_Temp+1,w
  2385  02C4  00FA               	movwf	tx_sn@val+1
  2386  02C5  085C               	movf	_Temp,w
  2387  02C6  00F9               	movwf	tx_sn@val
  2388  02C7  120A  118A  2655  120A  118A  	fcall	_tx_sn
  2389  02CC                     l2049:
  2390                           
  2391                           ;main.c: 148:         tx(',');
  2392  02CC  302C               	movlw	44
  2393  02CD  120A  158A  23B1  120A  118A  	fcall	_tx
  2394  02D2                     l2051:
  2395                           
  2396                           ;main.c: 149:         LCD_Command(0x9D);
  2397  02D2  309D               	movlw	157
  2398  02D3  120A  158A  252D  120A  118A  	fcall	_LCD_Command
  2399  02D8                     l2053:
  2400                           
  2401                           ;main.c: 150:         show("Humi:");
  2402  02D8  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2403  02D9  120A  158A  2443  120A  118A  	fcall	_show
  2404  02DE                     l2055:
  2405                           
  2406                           ;main.c: 151:         LCD_Command(0xA2);
  2407  02DE  30A2               	movlw	162
  2408  02DF  120A  158A  252D  120A  118A  	fcall	_LCD_Command
  2409  02E4                     l2057:
  2410                           
  2411                           ;main.c: 152:         show_multidigits(RH);
  2412  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2413  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2414  02E6  085B               	movf	_RH+1,w
  2415  02E7  00FA               	movwf	show_multidigits@val+1
  2416  02E8  085A               	movf	_RH,w
  2417  02E9  00F9               	movwf	show_multidigits@val
  2418  02EA  120A  118A  24C3  120A  118A  	fcall	_show_multidigits
  2419  02EF                     l2059:
  2420                           
  2421                           ;main.c: 153:         tx_sn(RH);
  2422  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2423  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2424  02F1  085B               	movf	_RH+1,w
  2425  02F2  00FA               	movwf	tx_sn@val+1
  2426  02F3  085A               	movf	_RH,w
  2427  02F4  00F9               	movwf	tx_sn@val
  2428  02F5  120A  118A  2655  120A  118A  	fcall	_tx_sn
  2429  02FA                     l2061:
  2430                           
  2431                           ;main.c: 154:         tx(',');
  2432  02FA  302C               	movlw	44
  2433  02FB  120A  158A  23B1  120A  118A  	fcall	_tx
  2434  0300                     l292:
  2435  0300  0008               	return
  2436  0301                     __end_of_print_dht11data:
  2437                           
  2438                           	psect	text17
  2439  0655                     __ptext17:	
  2440 ;; *************** function _tx_sn *****************
  2441 ;; Defined at:
  2442 ;;		line 27 in file "./uart.h"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  val             2    9[COMMON] unsigned int 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  remainder       2   12[BANK0 ] int 
  2447 ;;  result1         2   10[BANK0 ] int 
  2448 ;;  digit2          2    8[BANK0 ] int 
  2449 ;;  digit1          2    6[BANK0 ] int 
  2450 ;;  digit3          2    4[BANK0 ] int 
  2451 ;;  result          2    2[BANK0 ] int 
  2452 ;;  digit4          2    0[BANK0 ] int 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0, pclath, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2462 ;;      Params:         2       0       0       0       0
  2463 ;;      Locals:         0      14       0       0       0
  2464 ;;      Temps:          0       0       0       0       0
  2465 ;;      Totals:         2      14       0       0       0
  2466 ;;Total ram usage:       16 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 1
  2469 ;; This function calls:
  2470 ;;		___awdiv
  2471 ;;		___awmod
  2472 ;;		___lwdiv
  2473 ;;		___lwmod
  2474 ;;		_tx
  2475 ;; This function is called by:
  2476 ;;		_print_serialnumber
  2477 ;;		_print_dht11data
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function _tx_sn
  2483  0655                     _tx_sn:
  2484  0655                     l1839:	
  2485                           ;incstack = 0
  2486                           ; Regs used in _tx_sn: [wreg+status,2+status,0+pclath+cstack]
  2487                           
  2488                           
  2489                           ;./uart.h: 27: void tx_sn (unsigned int val);./uart.h: 28: {;./uart.h: 29:     int remai
      +                          nder, digit1, digit2, digit3, digit4, result, result1;;./uart.h: 30:     if (val<=9)
  2490  0655  3000               	movlw	0
  2491  0656  027A               	subwf	tx_sn@val+1,w
  2492  0657  300A               	movlw	10
  2493  0658  1903               	skipnz
  2494  0659  0279               	subwf	tx_sn@val,w
  2495  065A  1803               	skipnc
  2496  065B  2E5D               	goto	u1481
  2497  065C  2E5E               	goto	u1480
  2498  065D                     u1481:
  2499  065D  2E66               	goto	l1843
  2500  065E                     u1480:
  2501  065E                     l1841:
  2502                           
  2503                           ;./uart.h: 31:     {;./uart.h: 32:        tx(val+0x30);
  2504  065E  0879               	movf	tx_sn@val,w
  2505  065F  3E30               	addlw	48
  2506  0660  120A  158A  23B1  120A  118A  	fcall	_tx
  2507                           
  2508                           ;./uart.h: 33:     }
  2509  0665  2FE6               	goto	l148
  2510  0666                     l1843:
  2511  0666  3000               	movlw	0
  2512  0667  027A               	subwf	tx_sn@val+1,w
  2513  0668  300A               	movlw	10
  2514  0669  1903               	skipnz
  2515  066A  0279               	subwf	tx_sn@val,w
  2516  066B  1C03               	skipc
  2517  066C  2E6E               	goto	u1491
  2518  066D  2E6F               	goto	u1490
  2519  066E                     u1491:
  2520  066E  2EB3               	goto	l1857
  2521  066F                     u1490:
  2522  066F                     l1845:
  2523  066F  3000               	movlw	0
  2524  0670  027A               	subwf	tx_sn@val+1,w
  2525  0671  3064               	movlw	100
  2526  0672  1903               	skipnz
  2527  0673  0279               	subwf	tx_sn@val,w
  2528  0674  1803               	skipnc
  2529  0675  2E77               	goto	u1501
  2530  0676  2E78               	goto	u1500
  2531  0677                     u1501:
  2532  0677  2EB3               	goto	l1857
  2533  0678                     u1500:
  2534  0678                     l1847:
  2535                           
  2536                           ;./uart.h: 35:     {;./uart.h: 36:         remainder = val % 10;
  2537  0678  300A               	movlw	10
  2538  0679  00F0               	movwf	___lwmod@divisor
  2539  067A  3000               	movlw	0
  2540  067B  00F1               	movwf	___lwmod@divisor+1
  2541  067C  087A               	movf	tx_sn@val+1,w
  2542  067D  00F3               	movwf	___lwmod@dividend+1
  2543  067E  0879               	movf	tx_sn@val,w
  2544  067F  00F2               	movwf	___lwmod@dividend
  2545  0680  120A  158A  24B9  120A  118A  	fcall	___lwmod
  2546  0685  0871               	movf	?___lwmod+1,w
  2547  0686  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0687  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0688  00AD               	movwf	tx_sn@remainder+1
  2550  0689  0870               	movf	?___lwmod,w
  2551  068A  00AC               	movwf	tx_sn@remainder
  2552  068B                     l1849:
  2553                           
  2554                           ;./uart.h: 37:         digit1 = remainder;
  2555  068B  082D               	movf	tx_sn@remainder+1,w
  2556  068C  00A7               	movwf	tx_sn@digit1+1
  2557  068D  082C               	movf	tx_sn@remainder,w
  2558  068E  00A6               	movwf	tx_sn@digit1
  2559  068F                     l1851:
  2560                           
  2561                           ;./uart.h: 38:         digit2 = val/10;
  2562  068F  300A               	movlw	10
  2563  0690  00F0               	movwf	___lwdiv@divisor
  2564  0691  3000               	movlw	0
  2565  0692  00F1               	movwf	___lwdiv@divisor+1
  2566  0693  087A               	movf	tx_sn@val+1,w
  2567  0694  00F3               	movwf	___lwdiv@dividend+1
  2568  0695  0879               	movf	tx_sn@val,w
  2569  0696  00F2               	movwf	___lwdiv@dividend
  2570  0697  120A  158A  25EF  120A  118A  	fcall	___lwdiv
  2571  069C  0871               	movf	?___lwdiv+1,w
  2572  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2573  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2574  069F  00A9               	movwf	tx_sn@digit2+1
  2575  06A0  0870               	movf	?___lwdiv,w
  2576  06A1  00A8               	movwf	tx_sn@digit2
  2577  06A2                     l1853:
  2578                           
  2579                           ;./uart.h: 39:         tx(digit2+0x30);
  2580  06A2  0828               	movf	tx_sn@digit2,w
  2581  06A3  3E30               	addlw	48
  2582  06A4  120A  158A  23B1  120A  118A  	fcall	_tx
  2583  06A9                     l1855:
  2584                           
  2585                           ;./uart.h: 40:         tx(digit1+0x30);
  2586  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  2587  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  2588  06AB  0826               	movf	tx_sn@digit1,w
  2589  06AC  3E30               	addlw	48
  2590  06AD  120A  158A  23B1  120A  118A  	fcall	_tx
  2591                           
  2592                           ;./uart.h: 41:     }
  2593  06B2  2FE6               	goto	l148
  2594  06B3                     l1857:
  2595  06B3  3000               	movlw	0
  2596  06B4  027A               	subwf	tx_sn@val+1,w
  2597  06B5  3064               	movlw	100
  2598  06B6  1903               	skipnz
  2599  06B7  0279               	subwf	tx_sn@val,w
  2600  06B8  1C03               	skipc
  2601  06B9  2EBB               	goto	u1511
  2602  06BA  2EBC               	goto	u1510
  2603  06BB                     u1511:
  2604  06BB  2F33               	goto	l1875
  2605  06BC                     u1510:
  2606  06BC                     l1859:
  2607  06BC  3003               	movlw	3
  2608  06BD  027A               	subwf	tx_sn@val+1,w
  2609  06BE  30E8               	movlw	232
  2610  06BF  1903               	skipnz
  2611  06C0  0279               	subwf	tx_sn@val,w
  2612  06C1  1803               	skipnc
  2613  06C2  2EC4               	goto	u1521
  2614  06C3  2EC5               	goto	u1520
  2615  06C4                     u1521:
  2616  06C4  2F33               	goto	l1875
  2617  06C5                     u1520:
  2618  06C5                     l1861:
  2619                           
  2620                           ;./uart.h: 43:     {;./uart.h: 44:         remainder = val % 10;
  2621  06C5  300A               	movlw	10
  2622  06C6  00F0               	movwf	___lwmod@divisor
  2623  06C7  3000               	movlw	0
  2624  06C8  00F1               	movwf	___lwmod@divisor+1
  2625  06C9  087A               	movf	tx_sn@val+1,w
  2626  06CA  00F3               	movwf	___lwmod@dividend+1
  2627  06CB  0879               	movf	tx_sn@val,w
  2628  06CC  00F2               	movwf	___lwmod@dividend
  2629  06CD  120A  158A  24B9  120A  118A  	fcall	___lwmod
  2630  06D2  0871               	movf	?___lwmod+1,w
  2631  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2632  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2633  06D5  00AD               	movwf	tx_sn@remainder+1
  2634  06D6  0870               	movf	?___lwmod,w
  2635  06D7  00AC               	movwf	tx_sn@remainder
  2636                           
  2637                           ;./uart.h: 45:         result1 = val /10;
  2638  06D8  300A               	movlw	10
  2639  06D9  00F0               	movwf	___lwdiv@divisor
  2640  06DA  3000               	movlw	0
  2641  06DB  00F1               	movwf	___lwdiv@divisor+1
  2642  06DC  087A               	movf	tx_sn@val+1,w
  2643  06DD  00F3               	movwf	___lwdiv@dividend+1
  2644  06DE  0879               	movf	tx_sn@val,w
  2645  06DF  00F2               	movwf	___lwdiv@dividend
  2646  06E0  120A  158A  25EF  120A  118A  	fcall	___lwdiv
  2647  06E5  0871               	movf	?___lwdiv+1,w
  2648  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2649  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2650  06E8  00AB               	movwf	tx_sn@result1+1
  2651  06E9  0870               	movf	?___lwdiv,w
  2652  06EA  00AA               	movwf	tx_sn@result1
  2653  06EB                     l1863:
  2654                           
  2655                           ;./uart.h: 46:         digit1 = remainder;
  2656  06EB  082D               	movf	tx_sn@remainder+1,w
  2657  06EC  00A7               	movwf	tx_sn@digit1+1
  2658  06ED  082C               	movf	tx_sn@remainder,w
  2659  06EE  00A6               	movwf	tx_sn@digit1
  2660  06EF                     l1865:
  2661                           
  2662                           ;./uart.h: 47:         remainder = result1%10;
  2663  06EF  300A               	movlw	10
  2664  06F0  00F0               	movwf	___awmod@divisor
  2665  06F1  3000               	movlw	0
  2666  06F2  00F1               	movwf	___awmod@divisor+1
  2667  06F3  082B               	movf	tx_sn@result1+1,w
  2668  06F4  00F3               	movwf	___awmod@dividend+1
  2669  06F5  082A               	movf	tx_sn@result1,w
  2670  06F6  00F2               	movwf	___awmod@dividend
  2671  06F7  120A  118A  2006  120A  118A  	fcall	___awmod
  2672  06FC  0871               	movf	?___awmod+1,w
  2673  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  2674  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  2675  06FF  00AD               	movwf	tx_sn@remainder+1
  2676  0700  0870               	movf	?___awmod,w
  2677  0701  00AC               	movwf	tx_sn@remainder
  2678                           
  2679                           ;./uart.h: 48:         digit2 = remainder;
  2680  0702  082D               	movf	tx_sn@remainder+1,w
  2681  0703  00A9               	movwf	tx_sn@digit2+1
  2682  0704  082C               	movf	tx_sn@remainder,w
  2683  0705  00A8               	movwf	tx_sn@digit2
  2684  0706                     l1867:
  2685                           
  2686                           ;./uart.h: 49:         digit3 = result1/10;
  2687  0706  300A               	movlw	10
  2688  0707  00F0               	movwf	___awdiv@divisor
  2689  0708  3000               	movlw	0
  2690  0709  00F1               	movwf	___awdiv@divisor+1
  2691  070A  082B               	movf	tx_sn@result1+1,w
  2692  070B  00F3               	movwf	___awdiv@dividend+1
  2693  070C  082A               	movf	tx_sn@result1,w
  2694  070D  00F2               	movwf	___awdiv@dividend
  2695  070E  120A  158A  272B  120A  118A  	fcall	___awdiv
  2696  0713  0871               	movf	?___awdiv+1,w
  2697  0714  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0715  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0716  00A5               	movwf	tx_sn@digit3+1
  2700  0717  0870               	movf	?___awdiv,w
  2701  0718  00A4               	movwf	tx_sn@digit3
  2702  0719                     l1869:
  2703                           
  2704                           ;./uart.h: 50:         tx(digit3+0x30);
  2705  0719  0824               	movf	tx_sn@digit3,w
  2706  071A  3E30               	addlw	48
  2707  071B  120A  158A  23B1  120A  118A  	fcall	_tx
  2708  0720                     l1871:
  2709                           
  2710                           ;./uart.h: 51:         tx(digit2+0x30);
  2711  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0721  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0722  0828               	movf	tx_sn@digit2,w
  2714  0723  3E30               	addlw	48
  2715  0724  120A  158A  23B1  120A  118A  	fcall	_tx
  2716  0729                     l1873:
  2717                           
  2718                           ;./uart.h: 52:         tx(digit1+0x30);
  2719  0729  1283               	bcf	3,5	;RP0=0, select bank0
  2720  072A  1303               	bcf	3,6	;RP1=0, select bank0
  2721  072B  0826               	movf	tx_sn@digit1,w
  2722  072C  3E30               	addlw	48
  2723  072D  120A  158A  23B1  120A  118A  	fcall	_tx
  2724                           
  2725                           ;./uart.h: 53:     }
  2726  0732  2FE6               	goto	l148
  2727  0733                     l1875:
  2728  0733  3003               	movlw	3
  2729  0734  027A               	subwf	tx_sn@val+1,w
  2730  0735  30E8               	movlw	232
  2731  0736  1903               	skipnz
  2732  0737  0279               	subwf	tx_sn@val,w
  2733  0738  1C03               	skipc
  2734  0739  2F3B               	goto	u1531
  2735  073A  2F3C               	goto	u1530
  2736  073B                     u1531:
  2737  073B  2FE6               	goto	l144
  2738  073C                     u1530:
  2739  073C                     l1877:
  2740  073C  3027               	movlw	39
  2741  073D  027A               	subwf	tx_sn@val+1,w
  2742  073E  300F               	movlw	15
  2743  073F  1903               	skipnz
  2744  0740  0279               	subwf	tx_sn@val,w
  2745  0741  1803               	skipnc
  2746  0742  2F44               	goto	u1541
  2747  0743  2F45               	goto	u1540
  2748  0744                     u1541:
  2749  0744  2FE6               	goto	l144
  2750  0745                     u1540:
  2751  0745                     l1879:
  2752                           
  2753                           ;./uart.h: 55:     {;./uart.h: 56:         remainder = val % 10;
  2754  0745  300A               	movlw	10
  2755  0746  00F0               	movwf	___lwmod@divisor
  2756  0747  3000               	movlw	0
  2757  0748  00F1               	movwf	___lwmod@divisor+1
  2758  0749  087A               	movf	tx_sn@val+1,w
  2759  074A  00F3               	movwf	___lwmod@dividend+1
  2760  074B  0879               	movf	tx_sn@val,w
  2761  074C  00F2               	movwf	___lwmod@dividend
  2762  074D  120A  158A  24B9  120A  118A  	fcall	___lwmod
  2763  0752  0871               	movf	?___lwmod+1,w
  2764  0753  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0754  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0755  00AD               	movwf	tx_sn@remainder+1
  2767  0756  0870               	movf	?___lwmod,w
  2768  0757  00AC               	movwf	tx_sn@remainder
  2769                           
  2770                           ;./uart.h: 57:         result1 = val /10;
  2771  0758  300A               	movlw	10
  2772  0759  00F0               	movwf	___lwdiv@divisor
  2773  075A  3000               	movlw	0
  2774  075B  00F1               	movwf	___lwdiv@divisor+1
  2775  075C  087A               	movf	tx_sn@val+1,w
  2776  075D  00F3               	movwf	___lwdiv@dividend+1
  2777  075E  0879               	movf	tx_sn@val,w
  2778  075F  00F2               	movwf	___lwdiv@dividend
  2779  0760  120A  158A  25EF  120A  118A  	fcall	___lwdiv
  2780  0765  0871               	movf	?___lwdiv+1,w
  2781  0766  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0767  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0768  00AB               	movwf	tx_sn@result1+1
  2784  0769  0870               	movf	?___lwdiv,w
  2785  076A  00AA               	movwf	tx_sn@result1
  2786  076B                     l1881:
  2787                           
  2788                           ;./uart.h: 58:         digit1 = remainder;
  2789  076B  082D               	movf	tx_sn@remainder+1,w
  2790  076C  00A7               	movwf	tx_sn@digit1+1
  2791  076D  082C               	movf	tx_sn@remainder,w
  2792  076E  00A6               	movwf	tx_sn@digit1
  2793  076F                     l1883:
  2794                           
  2795                           ;./uart.h: 59:         remainder = result1%10;
  2796  076F  300A               	movlw	10
  2797  0770  00F0               	movwf	___awmod@divisor
  2798  0771  3000               	movlw	0
  2799  0772  00F1               	movwf	___awmod@divisor+1
  2800  0773  082B               	movf	tx_sn@result1+1,w
  2801  0774  00F3               	movwf	___awmod@dividend+1
  2802  0775  082A               	movf	tx_sn@result1,w
  2803  0776  00F2               	movwf	___awmod@dividend
  2804  0777  120A  118A  2006  120A  118A  	fcall	___awmod
  2805  077C  0871               	movf	?___awmod+1,w
  2806  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2807  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2808  077F  00AD               	movwf	tx_sn@remainder+1
  2809  0780  0870               	movf	?___awmod,w
  2810  0781  00AC               	movwf	tx_sn@remainder
  2811                           
  2812                           ;./uart.h: 60:         digit2 = remainder;
  2813  0782  082D               	movf	tx_sn@remainder+1,w
  2814  0783  00A9               	movwf	tx_sn@digit2+1
  2815  0784  082C               	movf	tx_sn@remainder,w
  2816  0785  00A8               	movwf	tx_sn@digit2
  2817  0786                     l1885:
  2818                           
  2819                           ;./uart.h: 61:         result = result1/10;
  2820  0786  300A               	movlw	10
  2821  0787  00F0               	movwf	___awdiv@divisor
  2822  0788  3000               	movlw	0
  2823  0789  00F1               	movwf	___awdiv@divisor+1
  2824  078A  082B               	movf	tx_sn@result1+1,w
  2825  078B  00F3               	movwf	___awdiv@dividend+1
  2826  078C  082A               	movf	tx_sn@result1,w
  2827  078D  00F2               	movwf	___awdiv@dividend
  2828  078E  120A  158A  272B  120A  118A  	fcall	___awdiv
  2829  0793  0871               	movf	?___awdiv+1,w
  2830  0794  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0795  1303               	bcf	3,6	;RP1=0, select bank0
  2832  0796  00A3               	movwf	tx_sn@result+1
  2833  0797  0870               	movf	?___awdiv,w
  2834  0798  00A2               	movwf	tx_sn@result
  2835  0799                     l1887:
  2836                           
  2837                           ;./uart.h: 62:         remainder = result%10;
  2838  0799  300A               	movlw	10
  2839  079A  00F0               	movwf	___awmod@divisor
  2840  079B  3000               	movlw	0
  2841  079C  00F1               	movwf	___awmod@divisor+1
  2842  079D  0823               	movf	tx_sn@result+1,w
  2843  079E  00F3               	movwf	___awmod@dividend+1
  2844  079F  0822               	movf	tx_sn@result,w
  2845  07A0  00F2               	movwf	___awmod@dividend
  2846  07A1  120A  118A  2006  120A  118A  	fcall	___awmod
  2847  07A6  0871               	movf	?___awmod+1,w
  2848  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  2849  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  2850  07A9  00AD               	movwf	tx_sn@remainder+1
  2851  07AA  0870               	movf	?___awmod,w
  2852  07AB  00AC               	movwf	tx_sn@remainder
  2853                           
  2854                           ;./uart.h: 63:         digit3=remainder;
  2855  07AC  082D               	movf	tx_sn@remainder+1,w
  2856  07AD  00A5               	movwf	tx_sn@digit3+1
  2857  07AE  082C               	movf	tx_sn@remainder,w
  2858  07AF  00A4               	movwf	tx_sn@digit3
  2859  07B0                     l1889:
  2860                           
  2861                           ;./uart.h: 64:         digit4 = result/10;
  2862  07B0  300A               	movlw	10
  2863  07B1  00F0               	movwf	___awdiv@divisor
  2864  07B2  3000               	movlw	0
  2865  07B3  00F1               	movwf	___awdiv@divisor+1
  2866  07B4  0823               	movf	tx_sn@result+1,w
  2867  07B5  00F3               	movwf	___awdiv@dividend+1
  2868  07B6  0822               	movf	tx_sn@result,w
  2869  07B7  00F2               	movwf	___awdiv@dividend
  2870  07B8  120A  158A  272B  120A  118A  	fcall	___awdiv
  2871  07BD  0871               	movf	?___awdiv+1,w
  2872  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  2873  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  2874  07C0  00A1               	movwf	tx_sn@digit4+1
  2875  07C1  0870               	movf	?___awdiv,w
  2876  07C2  00A0               	movwf	tx_sn@digit4
  2877  07C3                     l1891:
  2878                           
  2879                           ;./uart.h: 65:         tx(digit4+0x30);
  2880  07C3  0820               	movf	tx_sn@digit4,w
  2881  07C4  3E30               	addlw	48
  2882  07C5  120A  158A  23B1  120A  118A  	fcall	_tx
  2883  07CA                     l1893:
  2884                           
  2885                           ;./uart.h: 66:         tx(digit3+0x30);
  2886  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  2887  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  2888  07CC  0824               	movf	tx_sn@digit3,w
  2889  07CD  3E30               	addlw	48
  2890  07CE  120A  158A  23B1  120A  118A  	fcall	_tx
  2891  07D3                     l1895:
  2892                           
  2893                           ;./uart.h: 67:         tx(digit2+0x30);
  2894  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  2895  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  2896  07D5  0828               	movf	tx_sn@digit2,w
  2897  07D6  3E30               	addlw	48
  2898  07D7  120A  158A  23B1  120A  118A  	fcall	_tx
  2899  07DC                     l1897:
  2900                           
  2901                           ;./uart.h: 68:         tx(digit1+0x30);
  2902  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  2903  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  2904  07DE  0826               	movf	tx_sn@digit1,w
  2905  07DF  3E30               	addlw	48
  2906  07E0  120A  158A  23B1  120A  118A  	fcall	_tx
  2907  07E5  2FE6               	goto	l148
  2908  07E6                     l144:
  2909  07E6                     l148:
  2910  07E6  0008               	return
  2911  07E7                     __end_of_tx_sn:
  2912                           
  2913                           	psect	text18
  2914  04C3                     __ptext18:	
  2915 ;; *************** function _show_multidigits *****************
  2916 ;; Defined at:
  2917 ;;		line 93 in file "./lcd4bit.h"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  val             2    9[COMMON] unsigned int 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  remainder       2   12[BANK0 ] int 
  2922 ;;  result1         2   10[BANK0 ] int 
  2923 ;;  digit2          2    8[BANK0 ] int 
  2924 ;;  digit1          2    6[BANK0 ] int 
  2925 ;;  digit3          2    4[BANK0 ] int 
  2926 ;;  result          2    2[BANK0 ] int 
  2927 ;;  digit4          2    0[BANK0 ] int 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, pclath, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         2       0       0       0       0
  2938 ;;      Locals:         0      14       0       0       0
  2939 ;;      Temps:          0       0       0       0       0
  2940 ;;      Totals:         2      14       0       0       0
  2941 ;;Total ram usage:       16 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 1
  2944 ;; This function calls:
  2945 ;;		_LCD_Char
  2946 ;;		___awdiv
  2947 ;;		___awmod
  2948 ;;		___lwdiv
  2949 ;;		___lwmod
  2950 ;; This function is called by:
  2951 ;;		_print_dht11data
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _show_multidigits
  2957  04C3                     _show_multidigits:
  2958  04C3                     l1779:	
  2959                           ;incstack = 0
  2960                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  2961                           
  2962                           
  2963                           ;./lcd4bit.h: 93: void show_multidigits (unsigned int val);./lcd4bit.h: 94: {;./lcd4bit.
      +                          h: 95:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          96:     if (val<=9)
  2964  04C3  3000               	movlw	0
  2965  04C4  027A               	subwf	show_multidigits@val+1,w
  2966  04C5  300A               	movlw	10
  2967  04C6  1903               	skipnz
  2968  04C7  0279               	subwf	show_multidigits@val,w
  2969  04C8  1803               	skipnc
  2970  04C9  2CCB               	goto	u1411
  2971  04CA  2CCC               	goto	u1410
  2972  04CB                     u1411:
  2973  04CB  2CD4               	goto	l1783
  2974  04CC                     u1410:
  2975  04CC                     l1781:
  2976                           
  2977                           ;./lcd4bit.h: 97:     {;./lcd4bit.h: 98:        LCD_Char(val+0x30);
  2978  04CC  0879               	movf	show_multidigits@val,w
  2979  04CD  3E30               	addlw	48
  2980  04CE  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  2981                           
  2982                           ;./lcd4bit.h: 99:     }
  2983  04D3  2E54               	goto	l123
  2984  04D4                     l1783:
  2985  04D4  3000               	movlw	0
  2986  04D5  027A               	subwf	show_multidigits@val+1,w
  2987  04D6  300A               	movlw	10
  2988  04D7  1903               	skipnz
  2989  04D8  0279               	subwf	show_multidigits@val,w
  2990  04D9  1C03               	skipc
  2991  04DA  2CDC               	goto	u1421
  2992  04DB  2CDD               	goto	u1420
  2993  04DC                     u1421:
  2994  04DC  2D21               	goto	l1797
  2995  04DD                     u1420:
  2996  04DD                     l1785:
  2997  04DD  3000               	movlw	0
  2998  04DE  027A               	subwf	show_multidigits@val+1,w
  2999  04DF  3064               	movlw	100
  3000  04E0  1903               	skipnz
  3001  04E1  0279               	subwf	show_multidigits@val,w
  3002  04E2  1803               	skipnc
  3003  04E3  2CE5               	goto	u1431
  3004  04E4  2CE6               	goto	u1430
  3005  04E5                     u1431:
  3006  04E5  2D21               	goto	l1797
  3007  04E6                     u1430:
  3008  04E6                     l1787:
  3009                           
  3010                           ;./lcd4bit.h: 101:     {;./lcd4bit.h: 102:         remainder = val % 10;
  3011  04E6  300A               	movlw	10
  3012  04E7  00F0               	movwf	___lwmod@divisor
  3013  04E8  3000               	movlw	0
  3014  04E9  00F1               	movwf	___lwmod@divisor+1
  3015  04EA  087A               	movf	show_multidigits@val+1,w
  3016  04EB  00F3               	movwf	___lwmod@dividend+1
  3017  04EC  0879               	movf	show_multidigits@val,w
  3018  04ED  00F2               	movwf	___lwmod@dividend
  3019  04EE  120A  158A  24B9  120A  118A  	fcall	___lwmod
  3020  04F3  0871               	movf	?___lwmod+1,w
  3021  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3022  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  3023  04F6  00AD               	movwf	show_multidigits@remainder+1
  3024  04F7  0870               	movf	?___lwmod,w
  3025  04F8  00AC               	movwf	show_multidigits@remainder
  3026  04F9                     l1789:
  3027                           
  3028                           ;./lcd4bit.h: 103:         digit1 = remainder;
  3029  04F9  082D               	movf	show_multidigits@remainder+1,w
  3030  04FA  00A7               	movwf	show_multidigits@digit1+1
  3031  04FB  082C               	movf	show_multidigits@remainder,w
  3032  04FC  00A6               	movwf	show_multidigits@digit1
  3033  04FD                     l1791:
  3034                           
  3035                           ;./lcd4bit.h: 104:         digit2 = val/10;
  3036  04FD  300A               	movlw	10
  3037  04FE  00F0               	movwf	___lwdiv@divisor
  3038  04FF  3000               	movlw	0
  3039  0500  00F1               	movwf	___lwdiv@divisor+1
  3040  0501  087A               	movf	show_multidigits@val+1,w
  3041  0502  00F3               	movwf	___lwdiv@dividend+1
  3042  0503  0879               	movf	show_multidigits@val,w
  3043  0504  00F2               	movwf	___lwdiv@dividend
  3044  0505  120A  158A  25EF  120A  118A  	fcall	___lwdiv
  3045  050A  0871               	movf	?___lwdiv+1,w
  3046  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3047  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3048  050D  00A9               	movwf	show_multidigits@digit2+1
  3049  050E  0870               	movf	?___lwdiv,w
  3050  050F  00A8               	movwf	show_multidigits@digit2
  3051  0510                     l1793:
  3052                           
  3053                           ;./lcd4bit.h: 105:         LCD_Char(digit2+0x30);
  3054  0510  0828               	movf	show_multidigits@digit2,w
  3055  0511  3E30               	addlw	48
  3056  0512  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  3057  0517                     l1795:
  3058                           
  3059                           ;./lcd4bit.h: 106:         LCD_Char(digit1+0x30);
  3060  0517  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0518  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0519  0826               	movf	show_multidigits@digit1,w
  3063  051A  3E30               	addlw	48
  3064  051B  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  3065                           
  3066                           ;./lcd4bit.h: 107:     }
  3067  0520  2E54               	goto	l123
  3068  0521                     l1797:
  3069  0521  3000               	movlw	0
  3070  0522  027A               	subwf	show_multidigits@val+1,w
  3071  0523  3064               	movlw	100
  3072  0524  1903               	skipnz
  3073  0525  0279               	subwf	show_multidigits@val,w
  3074  0526  1C03               	skipc
  3075  0527  2D29               	goto	u1441
  3076  0528  2D2A               	goto	u1440
  3077  0529                     u1441:
  3078  0529  2DA1               	goto	l1815
  3079  052A                     u1440:
  3080  052A                     l1799:
  3081  052A  3003               	movlw	3
  3082  052B  027A               	subwf	show_multidigits@val+1,w
  3083  052C  30E8               	movlw	232
  3084  052D  1903               	skipnz
  3085  052E  0279               	subwf	show_multidigits@val,w
  3086  052F  1803               	skipnc
  3087  0530  2D32               	goto	u1451
  3088  0531  2D33               	goto	u1450
  3089  0532                     u1451:
  3090  0532  2DA1               	goto	l1815
  3091  0533                     u1450:
  3092  0533                     l1801:
  3093                           
  3094                           ;./lcd4bit.h: 109:     {;./lcd4bit.h: 110:         remainder = val % 10;
  3095  0533  300A               	movlw	10
  3096  0534  00F0               	movwf	___lwmod@divisor
  3097  0535  3000               	movlw	0
  3098  0536  00F1               	movwf	___lwmod@divisor+1
  3099  0537  087A               	movf	show_multidigits@val+1,w
  3100  0538  00F3               	movwf	___lwmod@dividend+1
  3101  0539  0879               	movf	show_multidigits@val,w
  3102  053A  00F2               	movwf	___lwmod@dividend
  3103  053B  120A  158A  24B9  120A  118A  	fcall	___lwmod
  3104  0540  0871               	movf	?___lwmod+1,w
  3105  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0542  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0543  00AD               	movwf	show_multidigits@remainder+1
  3108  0544  0870               	movf	?___lwmod,w
  3109  0545  00AC               	movwf	show_multidigits@remainder
  3110                           
  3111                           ;./lcd4bit.h: 111:         result1 = val /10;
  3112  0546  300A               	movlw	10
  3113  0547  00F0               	movwf	___lwdiv@divisor
  3114  0548  3000               	movlw	0
  3115  0549  00F1               	movwf	___lwdiv@divisor+1
  3116  054A  087A               	movf	show_multidigits@val+1,w
  3117  054B  00F3               	movwf	___lwdiv@dividend+1
  3118  054C  0879               	movf	show_multidigits@val,w
  3119  054D  00F2               	movwf	___lwdiv@dividend
  3120  054E  120A  158A  25EF  120A  118A  	fcall	___lwdiv
  3121  0553  0871               	movf	?___lwdiv+1,w
  3122  0554  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0555  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0556  00AB               	movwf	show_multidigits@result1+1
  3125  0557  0870               	movf	?___lwdiv,w
  3126  0558  00AA               	movwf	show_multidigits@result1
  3127  0559                     l1803:
  3128                           
  3129                           ;./lcd4bit.h: 112:         digit1 = remainder;
  3130  0559  082D               	movf	show_multidigits@remainder+1,w
  3131  055A  00A7               	movwf	show_multidigits@digit1+1
  3132  055B  082C               	movf	show_multidigits@remainder,w
  3133  055C  00A6               	movwf	show_multidigits@digit1
  3134  055D                     l1805:
  3135                           
  3136                           ;./lcd4bit.h: 113:         remainder = result1%10;
  3137  055D  300A               	movlw	10
  3138  055E  00F0               	movwf	___awmod@divisor
  3139  055F  3000               	movlw	0
  3140  0560  00F1               	movwf	___awmod@divisor+1
  3141  0561  082B               	movf	show_multidigits@result1+1,w
  3142  0562  00F3               	movwf	___awmod@dividend+1
  3143  0563  082A               	movf	show_multidigits@result1,w
  3144  0564  00F2               	movwf	___awmod@dividend
  3145  0565  120A  118A  2006  120A  118A  	fcall	___awmod
  3146  056A  0871               	movf	?___awmod+1,w
  3147  056B  1283               	bcf	3,5	;RP0=0, select bank0
  3148  056C  1303               	bcf	3,6	;RP1=0, select bank0
  3149  056D  00AD               	movwf	show_multidigits@remainder+1
  3150  056E  0870               	movf	?___awmod,w
  3151  056F  00AC               	movwf	show_multidigits@remainder
  3152                           
  3153                           ;./lcd4bit.h: 114:         digit2 = remainder;
  3154  0570  082D               	movf	show_multidigits@remainder+1,w
  3155  0571  00A9               	movwf	show_multidigits@digit2+1
  3156  0572  082C               	movf	show_multidigits@remainder,w
  3157  0573  00A8               	movwf	show_multidigits@digit2
  3158  0574                     l1807:
  3159                           
  3160                           ;./lcd4bit.h: 115:         digit3 = result1/10;
  3161  0574  300A               	movlw	10
  3162  0575  00F0               	movwf	___awdiv@divisor
  3163  0576  3000               	movlw	0
  3164  0577  00F1               	movwf	___awdiv@divisor+1
  3165  0578  082B               	movf	show_multidigits@result1+1,w
  3166  0579  00F3               	movwf	___awdiv@dividend+1
  3167  057A  082A               	movf	show_multidigits@result1,w
  3168  057B  00F2               	movwf	___awdiv@dividend
  3169  057C  120A  158A  272B  120A  118A  	fcall	___awdiv
  3170  0581  0871               	movf	?___awdiv+1,w
  3171  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0583  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0584  00A5               	movwf	show_multidigits@digit3+1
  3174  0585  0870               	movf	?___awdiv,w
  3175  0586  00A4               	movwf	show_multidigits@digit3
  3176  0587                     l1809:
  3177                           
  3178                           ;./lcd4bit.h: 116:         LCD_Char(digit3+0x30);
  3179  0587  0824               	movf	show_multidigits@digit3,w
  3180  0588  3E30               	addlw	48
  3181  0589  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  3182  058E                     l1811:
  3183                           
  3184                           ;./lcd4bit.h: 117:         LCD_Char(digit2+0x30);
  3185  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3186  058F  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0590  0828               	movf	show_multidigits@digit2,w
  3188  0591  3E30               	addlw	48
  3189  0592  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  3190  0597                     l1813:
  3191                           
  3192                           ;./lcd4bit.h: 118:         LCD_Char(digit1+0x30);
  3193  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3195  0599  0826               	movf	show_multidigits@digit1,w
  3196  059A  3E30               	addlw	48
  3197  059B  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  3198                           
  3199                           ;./lcd4bit.h: 119:     }
  3200  05A0  2E54               	goto	l123
  3201  05A1                     l1815:
  3202  05A1  3003               	movlw	3
  3203  05A2  027A               	subwf	show_multidigits@val+1,w
  3204  05A3  30E8               	movlw	232
  3205  05A4  1903               	skipnz
  3206  05A5  0279               	subwf	show_multidigits@val,w
  3207  05A6  1C03               	skipc
  3208  05A7  2DA9               	goto	u1461
  3209  05A8  2DAA               	goto	u1460
  3210  05A9                     u1461:
  3211  05A9  2E54               	goto	l119
  3212  05AA                     u1460:
  3213  05AA                     l1817:
  3214  05AA  3027               	movlw	39
  3215  05AB  027A               	subwf	show_multidigits@val+1,w
  3216  05AC  300F               	movlw	15
  3217  05AD  1903               	skipnz
  3218  05AE  0279               	subwf	show_multidigits@val,w
  3219  05AF  1803               	skipnc
  3220  05B0  2DB2               	goto	u1471
  3221  05B1  2DB3               	goto	u1470
  3222  05B2                     u1471:
  3223  05B2  2E54               	goto	l119
  3224  05B3                     u1470:
  3225  05B3                     l1819:
  3226                           
  3227                           ;./lcd4bit.h: 121:     {;./lcd4bit.h: 122:         remainder = val % 10;
  3228  05B3  300A               	movlw	10
  3229  05B4  00F0               	movwf	___lwmod@divisor
  3230  05B5  3000               	movlw	0
  3231  05B6  00F1               	movwf	___lwmod@divisor+1
  3232  05B7  087A               	movf	show_multidigits@val+1,w
  3233  05B8  00F3               	movwf	___lwmod@dividend+1
  3234  05B9  0879               	movf	show_multidigits@val,w
  3235  05BA  00F2               	movwf	___lwmod@dividend
  3236  05BB  120A  158A  24B9  120A  118A  	fcall	___lwmod
  3237  05C0  0871               	movf	?___lwmod+1,w
  3238  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  3239  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  3240  05C3  00AD               	movwf	show_multidigits@remainder+1
  3241  05C4  0870               	movf	?___lwmod,w
  3242  05C5  00AC               	movwf	show_multidigits@remainder
  3243                           
  3244                           ;./lcd4bit.h: 123:         result1 = val /10;
  3245  05C6  300A               	movlw	10
  3246  05C7  00F0               	movwf	___lwdiv@divisor
  3247  05C8  3000               	movlw	0
  3248  05C9  00F1               	movwf	___lwdiv@divisor+1
  3249  05CA  087A               	movf	show_multidigits@val+1,w
  3250  05CB  00F3               	movwf	___lwdiv@dividend+1
  3251  05CC  0879               	movf	show_multidigits@val,w
  3252  05CD  00F2               	movwf	___lwdiv@dividend
  3253  05CE  120A  158A  25EF  120A  118A  	fcall	___lwdiv
  3254  05D3  0871               	movf	?___lwdiv+1,w
  3255  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3256  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3257  05D6  00AB               	movwf	show_multidigits@result1+1
  3258  05D7  0870               	movf	?___lwdiv,w
  3259  05D8  00AA               	movwf	show_multidigits@result1
  3260  05D9                     l1821:
  3261                           
  3262                           ;./lcd4bit.h: 124:         digit1 = remainder;
  3263  05D9  082D               	movf	show_multidigits@remainder+1,w
  3264  05DA  00A7               	movwf	show_multidigits@digit1+1
  3265  05DB  082C               	movf	show_multidigits@remainder,w
  3266  05DC  00A6               	movwf	show_multidigits@digit1
  3267  05DD                     l1823:
  3268                           
  3269                           ;./lcd4bit.h: 125:         remainder = result1%10;
  3270  05DD  300A               	movlw	10
  3271  05DE  00F0               	movwf	___awmod@divisor
  3272  05DF  3000               	movlw	0
  3273  05E0  00F1               	movwf	___awmod@divisor+1
  3274  05E1  082B               	movf	show_multidigits@result1+1,w
  3275  05E2  00F3               	movwf	___awmod@dividend+1
  3276  05E3  082A               	movf	show_multidigits@result1,w
  3277  05E4  00F2               	movwf	___awmod@dividend
  3278  05E5  120A  118A  2006  120A  118A  	fcall	___awmod
  3279  05EA  0871               	movf	?___awmod+1,w
  3280  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3281  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3282  05ED  00AD               	movwf	show_multidigits@remainder+1
  3283  05EE  0870               	movf	?___awmod,w
  3284  05EF  00AC               	movwf	show_multidigits@remainder
  3285                           
  3286                           ;./lcd4bit.h: 126:         digit2 = remainder;
  3287  05F0  082D               	movf	show_multidigits@remainder+1,w
  3288  05F1  00A9               	movwf	show_multidigits@digit2+1
  3289  05F2  082C               	movf	show_multidigits@remainder,w
  3290  05F3  00A8               	movwf	show_multidigits@digit2
  3291  05F4                     l1825:
  3292                           
  3293                           ;./lcd4bit.h: 127:         result = result1/10;
  3294  05F4  300A               	movlw	10
  3295  05F5  00F0               	movwf	___awdiv@divisor
  3296  05F6  3000               	movlw	0
  3297  05F7  00F1               	movwf	___awdiv@divisor+1
  3298  05F8  082B               	movf	show_multidigits@result1+1,w
  3299  05F9  00F3               	movwf	___awdiv@dividend+1
  3300  05FA  082A               	movf	show_multidigits@result1,w
  3301  05FB  00F2               	movwf	___awdiv@dividend
  3302  05FC  120A  158A  272B  120A  118A  	fcall	___awdiv
  3303  0601  0871               	movf	?___awdiv+1,w
  3304  0602  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0603  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0604  00A3               	movwf	show_multidigits@result+1
  3307  0605  0870               	movf	?___awdiv,w
  3308  0606  00A2               	movwf	show_multidigits@result
  3309  0607                     l1827:
  3310                           
  3311                           ;./lcd4bit.h: 128:         remainder = result%10;
  3312  0607  300A               	movlw	10
  3313  0608  00F0               	movwf	___awmod@divisor
  3314  0609  3000               	movlw	0
  3315  060A  00F1               	movwf	___awmod@divisor+1
  3316  060B  0823               	movf	show_multidigits@result+1,w
  3317  060C  00F3               	movwf	___awmod@dividend+1
  3318  060D  0822               	movf	show_multidigits@result,w
  3319  060E  00F2               	movwf	___awmod@dividend
  3320  060F  120A  118A  2006  120A  118A  	fcall	___awmod
  3321  0614  0871               	movf	?___awmod+1,w
  3322  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0617  00AD               	movwf	show_multidigits@remainder+1
  3325  0618  0870               	movf	?___awmod,w
  3326  0619  00AC               	movwf	show_multidigits@remainder
  3327                           
  3328                           ;./lcd4bit.h: 129:         digit3=remainder;
  3329  061A  082D               	movf	show_multidigits@remainder+1,w
  3330  061B  00A5               	movwf	show_multidigits@digit3+1
  3331  061C  082C               	movf	show_multidigits@remainder,w
  3332  061D  00A4               	movwf	show_multidigits@digit3
  3333  061E                     l1829:
  3334                           
  3335                           ;./lcd4bit.h: 130:         digit4 = result/10;
  3336  061E  300A               	movlw	10
  3337  061F  00F0               	movwf	___awdiv@divisor
  3338  0620  3000               	movlw	0
  3339  0621  00F1               	movwf	___awdiv@divisor+1
  3340  0622  0823               	movf	show_multidigits@result+1,w
  3341  0623  00F3               	movwf	___awdiv@dividend+1
  3342  0624  0822               	movf	show_multidigits@result,w
  3343  0625  00F2               	movwf	___awdiv@dividend
  3344  0626  120A  158A  272B  120A  118A  	fcall	___awdiv
  3345  062B  0871               	movf	?___awdiv+1,w
  3346  062C  1283               	bcf	3,5	;RP0=0, select bank0
  3347  062D  1303               	bcf	3,6	;RP1=0, select bank0
  3348  062E  00A1               	movwf	show_multidigits@digit4+1
  3349  062F  0870               	movf	?___awdiv,w
  3350  0630  00A0               	movwf	show_multidigits@digit4
  3351  0631                     l1831:
  3352                           
  3353                           ;./lcd4bit.h: 131:         LCD_Char(digit4+0x30);
  3354  0631  0820               	movf	show_multidigits@digit4,w
  3355  0632  3E30               	addlw	48
  3356  0633  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  3357  0638                     l1833:
  3358                           
  3359                           ;./lcd4bit.h: 132:         LCD_Char(digit3+0x30);
  3360  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3362  063A  0824               	movf	show_multidigits@digit3,w
  3363  063B  3E30               	addlw	48
  3364  063C  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  3365  0641                     l1835:
  3366                           
  3367                           ;./lcd4bit.h: 133:         LCD_Char(digit2+0x30);
  3368  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0642  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0643  0828               	movf	show_multidigits@digit2,w
  3371  0644  3E30               	addlw	48
  3372  0645  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  3373  064A                     l1837:
  3374                           
  3375                           ;./lcd4bit.h: 134:         LCD_Char(digit1+0x30);
  3376  064A  1283               	bcf	3,5	;RP0=0, select bank0
  3377  064B  1303               	bcf	3,6	;RP1=0, select bank0
  3378  064C  0826               	movf	show_multidigits@digit1,w
  3379  064D  3E30               	addlw	48
  3380  064E  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  3381  0653  2E54               	goto	l123
  3382  0654                     l119:
  3383  0654                     l123:
  3384  0654  0008               	return
  3385  0655                     __end_of_show_multidigits:
  3386                           
  3387                           	psect	text19
  3388  0006                     __ptext19:	
  3389 ;; *************** function ___awmod *****************
  3390 ;; Defined at:
  3391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  divisor         2    0[COMMON] int 
  3394 ;;  dividend        2    2[COMMON] int 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  sign            1    6[COMMON] unsigned char 
  3397 ;;  counter         1    5[COMMON] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  2    0[COMMON] int 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3407 ;;      Params:         4       0       0       0       0
  3408 ;;      Locals:         2       0       0       0       0
  3409 ;;      Temps:          1       0       0       0       0
  3410 ;;      Totals:         7       0       0       0       0
  3411 ;;Total ram usage:        7 bytes
  3412 ;; Hardware stack levels used: 1
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_show_multidigits
  3417 ;;		_tx_sn
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           
  3422                           ;psect for function ___awmod
  3423  0006                     ___awmod:
  3424  0006                     l1643:	
  3425                           ;incstack = 0
  3426                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3427                           
  3428  0006  01F6               	clrf	___awmod@sign
  3429  0007                     l1645:
  3430  0007  1FF3               	btfss	___awmod@dividend+1,7
  3431  0008  280A               	goto	u1171
  3432  0009  280B               	goto	u1170
  3433  000A                     u1171:
  3434  000A  2812               	goto	l1651
  3435  000B                     u1170:
  3436  000B                     l1647:
  3437  000B  09F2               	comf	___awmod@dividend,f
  3438  000C  09F3               	comf	___awmod@dividend+1,f
  3439  000D  0AF2               	incf	___awmod@dividend,f
  3440  000E  1903               	skipnz
  3441  000F  0AF3               	incf	___awmod@dividend+1,f
  3442  0010                     l1649:
  3443  0010  01F6               	clrf	___awmod@sign
  3444  0011  0AF6               	incf	___awmod@sign,f
  3445  0012                     l1651:
  3446  0012  1FF1               	btfss	___awmod@divisor+1,7
  3447  0013  2815               	goto	u1181
  3448  0014  2816               	goto	u1180
  3449  0015                     u1181:
  3450  0015  281B               	goto	l1655
  3451  0016                     u1180:
  3452  0016                     l1653:
  3453  0016  09F0               	comf	___awmod@divisor,f
  3454  0017  09F1               	comf	___awmod@divisor+1,f
  3455  0018  0AF0               	incf	___awmod@divisor,f
  3456  0019  1903               	skipnz
  3457  001A  0AF1               	incf	___awmod@divisor+1,f
  3458  001B                     l1655:
  3459  001B  0870               	movf	___awmod@divisor,w
  3460  001C  0471               	iorwf	___awmod@divisor+1,w
  3461  001D  1903               	btfsc	3,2
  3462  001E  2820               	goto	u1191
  3463  001F  2821               	goto	u1190
  3464  0020                     u1191:
  3465  0020  2850               	goto	l1673
  3466  0021                     u1190:
  3467  0021                     l1657:
  3468  0021  01F5               	clrf	___awmod@counter
  3469  0022  0AF5               	incf	___awmod@counter,f
  3470  0023  282F               	goto	l1663
  3471  0024                     l1659:
  3472  0024  3001               	movlw	1
  3473  0025                     u1205:
  3474  0025  1003               	clrc
  3475  0026  0DF0               	rlf	___awmod@divisor,f
  3476  0027  0DF1               	rlf	___awmod@divisor+1,f
  3477  0028  3EFF               	addlw	-1
  3478  0029  1D03               	skipz
  3479  002A  2825               	goto	u1205
  3480  002B                     l1661:
  3481  002B  3001               	movlw	1
  3482  002C  00F4               	movwf	??___awmod
  3483  002D  0874               	movf	??___awmod,w
  3484  002E  07F5               	addwf	___awmod@counter,f
  3485  002F                     l1663:
  3486  002F  1FF1               	btfss	___awmod@divisor+1,7
  3487  0030  2832               	goto	u1211
  3488  0031  2833               	goto	u1210
  3489  0032                     u1211:
  3490  0032  2824               	goto	l1659
  3491  0033                     u1210:
  3492  0033                     l1665:
  3493  0033  0871               	movf	___awmod@divisor+1,w
  3494  0034  0273               	subwf	___awmod@dividend+1,w
  3495  0035  1D03               	skipz
  3496  0036  2839               	goto	u1225
  3497  0037  0870               	movf	___awmod@divisor,w
  3498  0038  0272               	subwf	___awmod@dividend,w
  3499  0039                     u1225:
  3500  0039  1C03               	skipc
  3501  003A  283C               	goto	u1221
  3502  003B  283D               	goto	u1220
  3503  003C                     u1221:
  3504  003C  2843               	goto	l1669
  3505  003D                     u1220:
  3506  003D                     l1667:
  3507  003D  0870               	movf	___awmod@divisor,w
  3508  003E  02F2               	subwf	___awmod@dividend,f
  3509  003F  0871               	movf	___awmod@divisor+1,w
  3510  0040  1C03               	skipc
  3511  0041  03F3               	decf	___awmod@dividend+1,f
  3512  0042  02F3               	subwf	___awmod@dividend+1,f
  3513  0043                     l1669:
  3514  0043  3001               	movlw	1
  3515  0044                     u1235:
  3516  0044  1003               	clrc
  3517  0045  0CF1               	rrf	___awmod@divisor+1,f
  3518  0046  0CF0               	rrf	___awmod@divisor,f
  3519  0047  3EFF               	addlw	-1
  3520  0048  1D03               	skipz
  3521  0049  2844               	goto	u1235
  3522  004A                     l1671:
  3523  004A  3001               	movlw	1
  3524  004B  02F5               	subwf	___awmod@counter,f
  3525  004C  1D03               	btfss	3,2
  3526  004D  284F               	goto	u1241
  3527  004E  2850               	goto	u1240
  3528  004F                     u1241:
  3529  004F  2833               	goto	l1665
  3530  0050                     u1240:
  3531  0050                     l1673:
  3532  0050  0876               	movf	___awmod@sign,w
  3533  0051  1903               	btfsc	3,2
  3534  0052  2854               	goto	u1251
  3535  0053  2855               	goto	u1250
  3536  0054                     u1251:
  3537  0054  285A               	goto	l1677
  3538  0055                     u1250:
  3539  0055                     l1675:
  3540  0055  09F2               	comf	___awmod@dividend,f
  3541  0056  09F3               	comf	___awmod@dividend+1,f
  3542  0057  0AF2               	incf	___awmod@dividend,f
  3543  0058  1903               	skipnz
  3544  0059  0AF3               	incf	___awmod@dividend+1,f
  3545  005A                     l1677:
  3546  005A  0873               	movf	___awmod@dividend+1,w
  3547  005B  00F1               	movwf	?___awmod+1
  3548  005C  0872               	movf	___awmod@dividend,w
  3549  005D  00F0               	movwf	?___awmod
  3550  005E                     l553:
  3551  005E  0008               	return
  3552  005F                     __end_of___awmod:
  3553                           
  3554                           	psect	text20
  3555  0F2B                     __ptext20:	
  3556 ;; *************** function ___awdiv *****************
  3557 ;; Defined at:
  3558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  divisor         2    0[COMMON] int 
  3561 ;;  dividend        2    2[COMMON] int 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  quotient        2    7[COMMON] int 
  3564 ;;  sign            1    6[COMMON] unsigned char 
  3565 ;;  counter         1    5[COMMON] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  2    0[COMMON] int 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         4       0       0       0       0
  3576 ;;      Locals:         4       0       0       0       0
  3577 ;;      Temps:          1       0       0       0       0
  3578 ;;      Totals:         9       0       0       0       0
  3579 ;;Total ram usage:        9 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_show_multidigits
  3585 ;;		_tx_sn
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           
  3590                           ;psect for function ___awdiv
  3591  0F2B                     ___awdiv:
  3592  0F2B                     l1599:	
  3593                           ;incstack = 0
  3594                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3595                           
  3596  0F2B  01F6               	clrf	___awdiv@sign
  3597  0F2C                     l1601:
  3598  0F2C  1FF1               	btfss	___awdiv@divisor+1,7
  3599  0F2D  2F2F               	goto	u1071
  3600  0F2E  2F30               	goto	u1070
  3601  0F2F                     u1071:
  3602  0F2F  2F37               	goto	l1607
  3603  0F30                     u1070:
  3604  0F30                     l1603:
  3605  0F30  09F0               	comf	___awdiv@divisor,f
  3606  0F31  09F1               	comf	___awdiv@divisor+1,f
  3607  0F32  0AF0               	incf	___awdiv@divisor,f
  3608  0F33  1903               	skipnz
  3609  0F34  0AF1               	incf	___awdiv@divisor+1,f
  3610  0F35                     l1605:
  3611  0F35  01F6               	clrf	___awdiv@sign
  3612  0F36  0AF6               	incf	___awdiv@sign,f
  3613  0F37                     l1607:
  3614  0F37  1FF3               	btfss	___awdiv@dividend+1,7
  3615  0F38  2F3A               	goto	u1081
  3616  0F39  2F3B               	goto	u1080
  3617  0F3A                     u1081:
  3618  0F3A  2F44               	goto	l1613
  3619  0F3B                     u1080:
  3620  0F3B                     l1609:
  3621  0F3B  09F2               	comf	___awdiv@dividend,f
  3622  0F3C  09F3               	comf	___awdiv@dividend+1,f
  3623  0F3D  0AF2               	incf	___awdiv@dividend,f
  3624  0F3E  1903               	skipnz
  3625  0F3F  0AF3               	incf	___awdiv@dividend+1,f
  3626  0F40                     l1611:
  3627  0F40  3001               	movlw	1
  3628  0F41  00F4               	movwf	??___awdiv
  3629  0F42  0874               	movf	??___awdiv,w
  3630  0F43  06F6               	xorwf	___awdiv@sign,f
  3631  0F44                     l1613:
  3632  0F44  01F7               	clrf	___awdiv@quotient
  3633  0F45  01F8               	clrf	___awdiv@quotient+1
  3634  0F46                     l1615:
  3635  0F46  0870               	movf	___awdiv@divisor,w
  3636  0F47  0471               	iorwf	___awdiv@divisor+1,w
  3637  0F48  1903               	btfsc	3,2
  3638  0F49  2F4B               	goto	u1091
  3639  0F4A  2F4C               	goto	u1090
  3640  0F4B                     u1091:
  3641  0F4B  2F83               	goto	l1635
  3642  0F4C                     u1090:
  3643  0F4C                     l1617:
  3644  0F4C  01F5               	clrf	___awdiv@counter
  3645  0F4D  0AF5               	incf	___awdiv@counter,f
  3646  0F4E  2F5A               	goto	l1623
  3647  0F4F                     l1619:
  3648  0F4F  3001               	movlw	1
  3649  0F50                     u1105:
  3650  0F50  1003               	clrc
  3651  0F51  0DF0               	rlf	___awdiv@divisor,f
  3652  0F52  0DF1               	rlf	___awdiv@divisor+1,f
  3653  0F53  3EFF               	addlw	-1
  3654  0F54  1D03               	skipz
  3655  0F55  2F50               	goto	u1105
  3656  0F56                     l1621:
  3657  0F56  3001               	movlw	1
  3658  0F57  00F4               	movwf	??___awdiv
  3659  0F58  0874               	movf	??___awdiv,w
  3660  0F59  07F5               	addwf	___awdiv@counter,f
  3661  0F5A                     l1623:
  3662  0F5A  1FF1               	btfss	___awdiv@divisor+1,7
  3663  0F5B  2F5D               	goto	u1111
  3664  0F5C  2F5E               	goto	u1110
  3665  0F5D                     u1111:
  3666  0F5D  2F4F               	goto	l1619
  3667  0F5E                     u1110:
  3668  0F5E                     l1625:
  3669  0F5E  3001               	movlw	1
  3670  0F5F                     u1125:
  3671  0F5F  1003               	clrc
  3672  0F60  0DF7               	rlf	___awdiv@quotient,f
  3673  0F61  0DF8               	rlf	___awdiv@quotient+1,f
  3674  0F62  3EFF               	addlw	-1
  3675  0F63  1D03               	skipz
  3676  0F64  2F5F               	goto	u1125
  3677  0F65  0871               	movf	___awdiv@divisor+1,w
  3678  0F66  0273               	subwf	___awdiv@dividend+1,w
  3679  0F67  1D03               	skipz
  3680  0F68  2F6B               	goto	u1135
  3681  0F69  0870               	movf	___awdiv@divisor,w
  3682  0F6A  0272               	subwf	___awdiv@dividend,w
  3683  0F6B                     u1135:
  3684  0F6B  1C03               	skipc
  3685  0F6C  2F6E               	goto	u1131
  3686  0F6D  2F6F               	goto	u1130
  3687  0F6E                     u1131:
  3688  0F6E  2F76               	goto	l1631
  3689  0F6F                     u1130:
  3690  0F6F                     l1627:
  3691  0F6F  0870               	movf	___awdiv@divisor,w
  3692  0F70  02F2               	subwf	___awdiv@dividend,f
  3693  0F71  0871               	movf	___awdiv@divisor+1,w
  3694  0F72  1C03               	skipc
  3695  0F73  03F3               	decf	___awdiv@dividend+1,f
  3696  0F74  02F3               	subwf	___awdiv@dividend+1,f
  3697  0F75                     l1629:
  3698  0F75  1477               	bsf	___awdiv@quotient,0
  3699  0F76                     l1631:
  3700  0F76  3001               	movlw	1
  3701  0F77                     u1145:
  3702  0F77  1003               	clrc
  3703  0F78  0CF1               	rrf	___awdiv@divisor+1,f
  3704  0F79  0CF0               	rrf	___awdiv@divisor,f
  3705  0F7A  3EFF               	addlw	-1
  3706  0F7B  1D03               	skipz
  3707  0F7C  2F77               	goto	u1145
  3708  0F7D                     l1633:
  3709  0F7D  3001               	movlw	1
  3710  0F7E  02F5               	subwf	___awdiv@counter,f
  3711  0F7F  1D03               	btfss	3,2
  3712  0F80  2F82               	goto	u1151
  3713  0F81  2F83               	goto	u1150
  3714  0F82                     u1151:
  3715  0F82  2F5E               	goto	l1625
  3716  0F83                     u1150:
  3717  0F83                     l1635:
  3718  0F83  0876               	movf	___awdiv@sign,w
  3719  0F84  1903               	btfsc	3,2
  3720  0F85  2F87               	goto	u1161
  3721  0F86  2F88               	goto	u1160
  3722  0F87                     u1161:
  3723  0F87  2F8D               	goto	l1639
  3724  0F88                     u1160:
  3725  0F88                     l1637:
  3726  0F88  09F7               	comf	___awdiv@quotient,f
  3727  0F89  09F8               	comf	___awdiv@quotient+1,f
  3728  0F8A  0AF7               	incf	___awdiv@quotient,f
  3729  0F8B  1903               	skipnz
  3730  0F8C  0AF8               	incf	___awdiv@quotient+1,f
  3731  0F8D                     l1639:
  3732  0F8D  0878               	movf	___awdiv@quotient+1,w
  3733  0F8E  00F1               	movwf	?___awdiv+1
  3734  0F8F  0877               	movf	___awdiv@quotient,w
  3735  0F90  00F0               	movwf	?___awdiv
  3736  0F91                     l540:
  3737  0F91  0008               	return
  3738  0F92                     __end_of___awdiv:
  3739                           
  3740                           	psect	text21
  3741  0C43                     __ptext21:	
  3742 ;; *************** function _show *****************
  3743 ;; Defined at:
  3744 ;;		line 79 in file "./lcd4bit.h"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  s               1    wreg     PTR unsigned char 
  3747 ;;		 -> STR_2(6), STR_1(6), 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  s               1    4[COMMON] PTR unsigned char 
  3750 ;;		 -> STR_2(6), STR_1(6), 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         0       0       0       0       0
  3761 ;;      Locals:         1       0       0       0       0
  3762 ;;      Temps:          1       0       0       0       0
  3763 ;;      Totals:         2       0       0       0       0
  3764 ;;Total ram usage:        2 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 1
  3767 ;; This function calls:
  3768 ;;		_LCD_Char
  3769 ;; This function is called by:
  3770 ;;		_print_dht11data
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _show
  3776  0C43                     _show:
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3780                           ;show@s stored from wreg
  3781  0C43  00F4               	movwf	show@s
  3782  0C44                     l1771:
  3783                           
  3784                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
  3785  0C44  2C55               	goto	l1777
  3786  0C45                     l1773:
  3787                           
  3788                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
  3789  0C45  0874               	movf	show@s,w
  3790  0C46  0084               	movwf	4
  3791  0C47  120A  158A  2000  120A  158A  	fcall	stringdir
  3792  0C4C  120A  158A  256D  120A  158A  	fcall	_LCD_Char
  3793  0C51                     l1775:
  3794  0C51  3001               	movlw	1
  3795  0C52  00F3               	movwf	??_show
  3796  0C53  0873               	movf	??_show,w
  3797  0C54  07F4               	addwf	show@s,f
  3798  0C55                     l1777:
  3799                           
  3800                           ;./lcd4bit.h: 81:     while(*s) {
  3801  0C55  0874               	movf	show@s,w
  3802  0C56  0084               	movwf	4
  3803  0C57  120A  158A  2000  120A  158A  	fcall	stringdir
  3804  0C5C  3A00               	xorlw	0
  3805  0C5D  1D03               	skipz
  3806  0C5E  2C60               	goto	u1401
  3807  0C5F  2C61               	goto	u1400
  3808  0C60                     u1401:
  3809  0C60  2C45               	goto	l1773
  3810  0C61                     u1400:
  3811  0C61                     l110:
  3812  0C61  0008               	return
  3813  0C62                     __end_of_show:
  3814                           
  3815                           	psect	text22
  3816  0C29                     __ptext22:	
  3817 ;; *************** function _StartSignal *****************
  3818 ;; Defined at:
  3819 ;;		line 7 in file "./dht11.h"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3833 ;;      Params:         0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0
  3835 ;;      Temps:          2       0       0       0       0
  3836 ;;      Totals:         2       0       0       0       0
  3837 ;;Total ram usage:        2 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; This function calls:
  3840 ;;		Nothing
  3841 ;; This function is called by:
  3842 ;;		_print_dht11data
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           
  3847                           ;psect for function _StartSignal
  3848  0C29                     _StartSignal:
  3849  0C29                     l1899:	
  3850                           ;incstack = 0
  3851                           ; Regs used in _StartSignal: [wreg]
  3852                           
  3853                           
  3854                           ;./dht11.h: 9:     TRISDbits.TRISD0 = 0;
  3855  0C29  1683               	bsf	3,5	;RP0=1, select bank1
  3856  0C2A  1303               	bcf	3,6	;RP1=0, select bank1
  3857  0C2B  1008               	bcf	8,0	;volatile
  3858                           
  3859                           ;./dht11.h: 10:     PORTDbits.RD0 = 0;
  3860  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0C2E  1008               	bcf	8,0	;volatile
  3863  0C2F                     l1901:
  3864                           
  3865                           ;./dht11.h: 11:     _delay((unsigned long)((25)*(20000000/4000.0)));
  3866  0C2F  30A3               	movlw	163
  3867  0C30  00F1               	movwf	??_StartSignal+1
  3868  0C31  3055               	movlw	85
  3869  0C32  00F0               	movwf	??_StartSignal
  3870  0C33                     u1767:
  3871  0C33  0BF0               	decfsz	??_StartSignal,f
  3872  0C34  2C33               	goto	u1767
  3873  0C35  0BF1               	decfsz	??_StartSignal+1,f
  3874  0C36  2C33               	goto	u1767
  3875  0C37                     l1903:
  3876                           
  3877                           ;./dht11.h: 12:     PORTDbits.RD0 = 1;
  3878  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  3879  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  3880  0C39  1408               	bsf	8,0	;volatile
  3881                           
  3882                           ;./dht11.h: 13:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  3883  0C3A  3031               	movlw	49
  3884  0C3B  00F0               	movwf	??_StartSignal
  3885  0C3C                     u1777:
  3886  0C3C  0BF0               	decfsz	??_StartSignal,f
  3887  0C3D  2C3C               	goto	u1777
  3888  0C3E  2C3F               	nop2
  3889  0C3F                     l1905:
  3890                           
  3891                           ;./dht11.h: 14:     TRISDbits.TRISD0 = 1;
  3892  0C3F  1683               	bsf	3,5	;RP0=1, select bank1
  3893  0C40  1303               	bcf	3,6	;RP1=0, select bank1
  3894  0C41  1408               	bsf	8,0	;volatile
  3895  0C42                     l169:
  3896  0C42  0008               	return
  3897  0C43                     __end_of_StartSignal:
  3898                           
  3899                           	psect	text23
  3900  0DAD                     __ptext23:	
  3901 ;; *************** function _ReadData *****************
  3902 ;; Defined at:
  3903 ;;		line 32 in file "./dht11.h"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  j               1    3[COMMON] unsigned char 
  3908 ;;  i               1    2[COMMON] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      unsigned char 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3918 ;;      Params:         0       0       0       0       0
  3919 ;;      Locals:         2       0       0       0       0
  3920 ;;      Temps:          2       0       0       0       0
  3921 ;;      Totals:         4       0       0       0       0
  3922 ;;Total ram usage:        4 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_print_dht11data
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           
  3932                           ;psect for function _ReadData
  3933  0DAD                     _ReadData:
  3934  0DAD                     l1921:	
  3935                           ;incstack = 0
  3936                           ; Regs used in _ReadData: [wreg+status,2+status,0]
  3937                           
  3938                           
  3939                           ;./dht11.h: 34:     char i, j;;./dht11.h: 35:     for(j = 0; j < 8; j++)
  3940  0DAD  01F3               	clrf	ReadData@j
  3941  0DAE                     l179:
  3942  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0DB0  1C08               	btfss	8,0	;volatile
  3945  0DB1  2DB3               	goto	u1571
  3946  0DB2  2DB4               	goto	u1570
  3947  0DB3                     u1571:
  3948  0DB3  2DAE               	goto	l179
  3949  0DB4                     u1570:
  3950  0DB4                     l1927:
  3951                           
  3952                           ;./dht11.h: 38:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  3953  0DB4  3031               	movlw	49
  3954  0DB5  00F0               	movwf	??_ReadData
  3955  0DB6                     u1787:
  3956  0DB6  0BF0               	decfsz	??_ReadData,f
  3957  0DB7  2DB6               	goto	u1787
  3958  0DB8  2DB9               	nop2
  3959  0DB9                     l1929:
  3960                           
  3961                           ;./dht11.h: 39:         if(PORTDbits.RD0 == 0)
  3962  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  3964  0DBB  1808               	btfsc	8,0	;volatile
  3965  0DBC  2DBE               	goto	u1581
  3966  0DBD  2DBF               	goto	u1580
  3967  0DBE                     u1581:
  3968  0DBE  2DD0               	goto	l1933
  3969  0DBF                     u1580:
  3970  0DBF                     l1931:
  3971                           
  3972                           ;./dht11.h: 40:         i&= ~(1<<(7 - j));
  3973  0DBF  3001               	movlw	1
  3974  0DC0  00F0               	movwf	??_ReadData
  3975  0DC1  0873               	movf	ReadData@j,w
  3976  0DC2  3C07               	sublw	7
  3977  0DC3  3E01               	addlw	1
  3978  0DC4  2DC7               	goto	u1594
  3979  0DC5                     u1595:
  3980  0DC5  1003               	clrc
  3981  0DC6  0DF0               	rlf	??_ReadData,f
  3982  0DC7                     u1594:
  3983  0DC7  3EFF               	addlw	-1
  3984  0DC8  1D03               	skipz
  3985  0DC9  2DC5               	goto	u1595
  3986  0DCA  0870               	movf	??_ReadData,w
  3987  0DCB  3AFF               	xorlw	255
  3988  0DCC  00F1               	movwf	??_ReadData+1
  3989  0DCD  0871               	movf	??_ReadData+1,w
  3990  0DCE  05F2               	andwf	ReadData@i,f
  3991  0DCF  2DE3               	goto	l1935
  3992  0DD0                     l1933:
  3993                           
  3994                           ;./dht11.h: 42:         {;./dht11.h: 43:             i|= (1 << (7 - j));
  3995  0DD0  3001               	movlw	1
  3996  0DD1  00F0               	movwf	??_ReadData
  3997  0DD2  0873               	movf	ReadData@j,w
  3998  0DD3  3C07               	sublw	7
  3999  0DD4  3E01               	addlw	1
  4000  0DD5  2DD8               	goto	u1604
  4001  0DD6                     u1605:
  4002  0DD6  1003               	clrc
  4003  0DD7  0DF0               	rlf	??_ReadData,f
  4004  0DD8                     u1604:
  4005  0DD8  3EFF               	addlw	-1
  4006  0DD9  1D03               	skipz
  4007  0DDA  2DD6               	goto	u1605
  4008  0DDB  0870               	movf	??_ReadData,w
  4009  0DDC  00F1               	movwf	??_ReadData+1
  4010  0DDD  0871               	movf	??_ReadData+1,w
  4011  0DDE  04F2               	iorwf	ReadData@i,f
  4012  0DDF                     l184:	
  4013                           ;./dht11.h: 44:             while(PORTDbits.RD0);
  4014                           
  4015  0DDF  1808               	btfsc	8,0	;volatile
  4016  0DE0  2DE2               	goto	u1611
  4017  0DE1  2DE3               	goto	u1610
  4018  0DE2                     u1611:
  4019  0DE2  2DDF               	goto	l184
  4020  0DE3                     u1610:
  4021  0DE3                     l1935:
  4022                           
  4023                           ;./dht11.h: 46:     }
  4024  0DE3  3001               	movlw	1
  4025  0DE4  00F0               	movwf	??_ReadData
  4026  0DE5  0870               	movf	??_ReadData,w
  4027  0DE6  07F3               	addwf	ReadData@j,f
  4028  0DE7                     l1937:
  4029  0DE7  3008               	movlw	8
  4030  0DE8  0273               	subwf	ReadData@j,w
  4031  0DE9  1C03               	skipc
  4032  0DEA  2DEC               	goto	u1621
  4033  0DEB  2DED               	goto	u1620
  4034  0DEC                     u1621:
  4035  0DEC  2DAE               	goto	l179
  4036  0DED                     u1620:
  4037  0DED                     l1939:
  4038                           
  4039                           ;./dht11.h: 47:     return i;
  4040  0DED  0872               	movf	ReadData@i,w
  4041  0DEE                     l187:
  4042  0DEE  0008               	return
  4043  0DEF                     __end_of_ReadData:
  4044                           
  4045                           	psect	text24
  4046  0C62                     __ptext24:	
  4047 ;; *************** function _CheckResponse *****************
  4048 ;; Defined at:
  4049 ;;		line 17 in file "./dht11.h"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4063 ;;      Params:         0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0
  4065 ;;      Temps:          1       0       0       0       0
  4066 ;;      Totals:         1       0       0       0       0
  4067 ;;Total ram usage:        1 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_print_dht11data
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           
  4077                           ;psect for function _CheckResponse
  4078  0C62                     _CheckResponse:
  4079  0C62                     l1907:	
  4080                           ;incstack = 0
  4081                           ; Regs used in _CheckResponse: [wreg+status,2]
  4082                           
  4083                           
  4084                           ;./dht11.h: 19:     Check = 0;
  4085  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  4086  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  4087  0C64  01EA               	clrf	_Check
  4088  0C65                     l1909:
  4089                           
  4090                           ;./dht11.h: 20:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  4091  0C65  3042               	movlw	66
  4092  0C66  00F0               	movwf	??_CheckResponse
  4093  0C67                     u1797:
  4094  0C67  0BF0               	decfsz	??_CheckResponse,f
  4095  0C68  2C67               	goto	u1797
  4096  0C69  0000               	nop
  4097  0C6A                     l1911:
  4098                           
  4099                           ;./dht11.h: 21:     if (PORTDbits.RD0 == 0)
  4100  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  4101  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  4102  0C6C  1808               	btfsc	8,0	;volatile
  4103  0C6D  2C6F               	goto	u1551
  4104  0C6E  2C70               	goto	u1550
  4105  0C6F                     u1551:
  4106  0C6F  2C82               	goto	l174
  4107  0C70                     u1550:
  4108  0C70                     l1913:
  4109                           
  4110                           ;./dht11.h: 22:     {;./dht11.h: 23:         _delay((unsigned long)((80)*(20000000/40000
      +                          00.0)));
  4111  0C70  3085               	movlw	133
  4112  0C71  00F0               	movwf	??_CheckResponse
  4113  0C72                     u1807:
  4114  0C72  0BF0               	decfsz	??_CheckResponse,f
  4115  0C73  2C72               	goto	u1807
  4116  0C74                     l1915:
  4117                           
  4118                           ;./dht11.h: 24:         if (PORTDbits.RD0 == 1)
  4119  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  4120  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  4121  0C76  1C08               	btfss	8,0	;volatile
  4122  0C77  2C79               	goto	u1561
  4123  0C78  2C7A               	goto	u1560
  4124  0C79                     u1561:
  4125  0C79  2C82               	goto	l174
  4126  0C7A                     u1560:
  4127  0C7A                     l1917:
  4128                           
  4129                           ;./dht11.h: 25:         {;./dht11.h: 26:             _delay((unsigned long)((50)*(200000
      +                          00/4000000.0)));
  4130  0C7A  3053               	movlw	83
  4131  0C7B  00F0               	movwf	??_CheckResponse
  4132  0C7C                     u1817:
  4133  0C7C  0BF0               	decfsz	??_CheckResponse,f
  4134  0C7D  2C7C               	goto	u1817
  4135  0C7E                     l1919:
  4136                           
  4137                           ;./dht11.h: 27:            Check = 1;
  4138  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  4139  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  4140  0C80  01EA               	clrf	_Check
  4141  0C81  0AEA               	incf	_Check,f
  4142  0C82                     l174:
  4143  0C82  0008               	return
  4144  0C83                     __end_of_CheckResponse:
  4145                           
  4146                           	psect	text25
  4147  0F92                     __ptext25:	
  4148 ;; *************** function _print_analogvoltages *****************
  4149 ;; Defined at:
  4150 ;;		line 102 in file "main.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  j               1   34[BANK0 ] unsigned char 
  4155 ;;  i               1   33[BANK0 ] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       0       0       0       0
  4166 ;;      Locals:         0       2       0       0       0
  4167 ;;      Temps:          0       3       0       0       0
  4168 ;;      Totals:         0       5       0       0       0
  4169 ;;Total ram usage:        5 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 2
  4172 ;; This function calls:
  4173 ;;		_LCD_Char
  4174 ;;		_LCD_num
  4175 ;;		_tx
  4176 ;; This function is called by:
  4177 ;;		_main
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           
  4182                           ;psect for function _print_analogvoltages
  4183  0F92                     _print_analogvoltages:
  4184  0F92                     l1993:	
  4185                           ;incstack = 0
  4186                           ; Regs used in _print_analogvoltages: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4187                           
  4188                           
  4189                           ;main.c: 104:     for (unsigned char i=0;i<4;i++)
  4190  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0F94  01C1               	clrf	print_analogvoltages@i
  4193  0F95                     l1999:
  4194                           
  4195                           ;main.c: 105:         {;main.c: 106:             LCD_num(AV[i]);
  4196  0F95  0841               	movf	print_analogvoltages@i,w
  4197  0F96  00BE               	movwf	??_print_analogvoltages
  4198  0F97  073E               	addwf	??_print_analogvoltages,w
  4199  0F98  3E46               	addlw	(low (_AV| 0))& (0+255)
  4200  0F99  0084               	movwf	4
  4201  0F9A  1383               	bcf	3,7	;select IRP bank0
  4202  0F9B  0800               	movf	0,w
  4203  0F9C  00BF               	movwf	??_print_analogvoltages+1
  4204  0F9D  0A84               	incf	4,f
  4205  0F9E  0800               	movf	0,w
  4206  0F9F  00C0               	movwf	??_print_analogvoltages+2
  4207  0FA0  083F               	movf	??_print_analogvoltages+1,w
  4208  0FA1  00AE               	movwf	LCD_num@val
  4209  0FA2  0840               	movf	??_print_analogvoltages+2,w
  4210  0FA3  00AF               	movwf	LCD_num@val+1
  4211  0FA4  01B0               	clrf	LCD_num@val+2
  4212  0FA5  01B1               	clrf	LCD_num@val+3
  4213  0FA6  120A  118A  216C  120A  158A  	fcall	_LCD_num
  4214  0FAB                     l2001:
  4215                           
  4216                           ;main.c: 107:             LCD_Char(' ');
  4217  0FAB  3020               	movlw	32
  4218  0FAC  120A  158A  256D  120A  158A  	fcall	_LCD_Char
  4219  0FB1                     l2003:
  4220                           
  4221                           ;main.c: 108:             for (unsigned char j=0;j<3;j++)
  4222  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  4224  0FB3  01C2               	clrf	print_analogvoltages@j
  4225  0FB4                     l2009:
  4226                           
  4227                           ;main.c: 109:             {;main.c: 110:                 tx((avv[j]+0x30));
  4228  0FB4  0842               	movf	print_analogvoltages@j,w
  4229  0FB5  3E51               	addlw	(low (_avv| 0))& (0+255)
  4230  0FB6  0084               	movwf	4
  4231  0FB7  1383               	bcf	3,7	;select IRP bank0
  4232  0FB8  0800               	movf	0,w
  4233  0FB9  3E30               	addlw	48
  4234  0FBA  120A  158A  23B1  120A  158A  	fcall	_tx
  4235  0FBF                     l2011:
  4236                           
  4237                           ;main.c: 111:                 if (j == 0)
  4238  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  4240  0FC1  0842               	movf	print_analogvoltages@j,w
  4241  0FC2  1D03               	btfss	3,2
  4242  0FC3  2FC5               	goto	u1671
  4243  0FC4  2FC6               	goto	u1670
  4244  0FC5                     u1671:
  4245  0FC5  2FCD               	goto	l2015
  4246  0FC6                     u1670:
  4247  0FC6                     l2013:
  4248                           
  4249                           ;main.c: 112:                 {;main.c: 113:                     tx('.');
  4250  0FC6  302E               	movlw	46
  4251  0FC7  120A  158A  23B1  120A  158A  	fcall	_tx
  4252                           
  4253                           ;main.c: 114:                 }
  4254  0FCC  2FD9               	goto	l2019
  4255  0FCD                     l2015:
  4256  0FCD  3002               	movlw	2
  4257  0FCE  0642               	xorwf	print_analogvoltages@j,w
  4258  0FCF  1D03               	btfss	3,2
  4259  0FD0  2FD2               	goto	u1681
  4260  0FD1  2FD3               	goto	u1680
  4261  0FD2                     u1681:
  4262  0FD2  2FD9               	goto	l2019
  4263  0FD3                     u1680:
  4264  0FD3                     l2017:
  4265                           
  4266                           ;main.c: 116:                 {;main.c: 117:                     tx(',');
  4267  0FD3  302C               	movlw	44
  4268  0FD4  120A  158A  23B1  120A  158A  	fcall	_tx
  4269  0FD9                     l2019:
  4270                           
  4271                           ;main.c: 119:             }
  4272  0FD9  3001               	movlw	1
  4273  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  4274  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  4275  0FDC  00BE               	movwf	??_print_analogvoltages
  4276  0FDD  083E               	movf	??_print_analogvoltages,w
  4277  0FDE  07C2               	addwf	print_analogvoltages@j,f
  4278  0FDF                     l2021:
  4279  0FDF  3003               	movlw	3
  4280  0FE0  0242               	subwf	print_analogvoltages@j,w
  4281  0FE1  1C03               	skipc
  4282  0FE2  2FE4               	goto	u1691
  4283  0FE3  2FE5               	goto	u1690
  4284  0FE4                     u1691:
  4285  0FE4  2FB4               	goto	l2009
  4286  0FE5                     u1690:
  4287  0FE5                     l2023:
  4288                           
  4289                           ;main.c: 121:             _delay((unsigned long)((100)*(20000000/4000.0)));
  4290  0FE5  3003               	movlw	3
  4291  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  4292  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  4293  0FE8  00C0               	movwf	??_print_analogvoltages+2
  4294  0FE9  308A               	movlw	138
  4295  0FEA  00BF               	movwf	??_print_analogvoltages+1
  4296  0FEB  3055               	movlw	85
  4297  0FEC  00BE               	movwf	??_print_analogvoltages
  4298  0FED                     u1827:
  4299  0FED  0BBE               	decfsz	??_print_analogvoltages,f
  4300  0FEE  2FED               	goto	u1827
  4301  0FEF  0BBF               	decfsz	??_print_analogvoltages+1,f
  4302  0FF0  2FED               	goto	u1827
  4303  0FF1  0BC0               	decfsz	??_print_analogvoltages+2,f
  4304  0FF2  2FED               	goto	u1827
  4305  0FF3                     l2025:
  4306                           
  4307                           ;main.c: 122:         }
  4308  0FF3  3001               	movlw	1
  4309  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  4311  0FF6  00BE               	movwf	??_print_analogvoltages
  4312  0FF7  083E               	movf	??_print_analogvoltages,w
  4313  0FF8  07C1               	addwf	print_analogvoltages@i,f
  4314  0FF9                     l2027:
  4315  0FF9  3004               	movlw	4
  4316  0FFA  0241               	subwf	print_analogvoltages@i,w
  4317  0FFB  1C03               	skipc
  4318  0FFC  2FFE               	goto	u1701
  4319  0FFD  2FFF               	goto	u1700
  4320  0FFE                     u1701:
  4321  0FFE  2F95               	goto	l1999
  4322  0FFF                     u1700:
  4323  0FFF                     l287:
  4324  0FFF  0008               	return
  4325  1000                     __end_of_print_analogvoltages:
  4326                           
  4327                           	psect	text26
  4328  0BB1                     __ptext26:	
  4329 ;; *************** function _tx *****************
  4330 ;; Defined at:
  4331 ;;		line 14 in file "./uart.h"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  a               1    wreg     unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  a               1    0[COMMON] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      unsigned char 
  4338 ;; Registers used:
  4339 ;;		wreg
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4345 ;;      Params:         0       0       0       0       0
  4346 ;;      Locals:         1       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0
  4348 ;;      Totals:         1       0       0       0       0
  4349 ;;Total ram usage:        1 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_tx_sn
  4355 ;;		_main
  4356 ;;		_print_serialnumber
  4357 ;;		_print_analogvoltages
  4358 ;;		_print_dht11data
  4359 ;;		_rtc_terminal_data
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function _tx
  4365  0BB1                     _tx:
  4366                           
  4367                           ;incstack = 0
  4368                           ; Regs used in _tx: [wreg]
  4369                           ;tx@a stored from wreg
  4370  0BB1  00F0               	movwf	tx@a
  4371  0BB2                     l1519:
  4372                           
  4373                           ;./uart.h: 14: unsigned char tx(unsigned char a);./uart.h: 15: {;./uart.h: 16:  TXREG=a;
  4374  0BB2  0870               	movf	tx@a,w
  4375  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  4376  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  4377  0BB5  0099               	movwf	25	;volatile
  4378  0BB6                     l129:	
  4379                           ;./uart.h: 17:  while(!TXIF);
  4380                           
  4381  0BB6  1E0C               	btfss	12,4	;volatile
  4382  0BB7  2BB9               	goto	u901
  4383  0BB8  2BBA               	goto	u900
  4384  0BB9                     u901:
  4385  0BB9  2BB6               	goto	l129
  4386  0BBA                     u900:
  4387  0BBA                     l131:
  4388                           
  4389                           ;./uart.h: 18:  TXIF = 0;
  4390  0BBA  120C               	bcf	12,4	;volatile
  4391  0BBB                     l132:
  4392  0BBB  0008               	return
  4393  0BBC                     __end_of_tx:
  4394                           
  4395                           	psect	text27
  4396  016C                     __ptext27:	
  4397 ;; *************** function _LCD_num *****************
  4398 ;; Defined at:
  4399 ;;		line 58 in file "./lcd4bit.h"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  val             4   14[BANK0 ] long 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  remainder       2   28[BANK0 ] unsigned int 
  4404 ;;  result1         2   26[BANK0 ] unsigned int 
  4405 ;;  result          2   24[BANK0 ] unsigned int 
  4406 ;;  digit3          2   22[BANK0 ] unsigned int 
  4407 ;;  digit2          2   20[BANK0 ] unsigned int 
  4408 ;;  digit1          2   18[BANK0 ] unsigned int 
  4409 ;;  calb_val        2    0        int 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0, pclath, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4419 ;;      Params:         0       4       0       0       0
  4420 ;;      Locals:         0      12       0       0       0
  4421 ;;      Temps:          0       0       0       0       0
  4422 ;;      Totals:         0      16       0       0       0
  4423 ;;Total ram usage:       16 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 1
  4426 ;; This function calls:
  4427 ;;		_LCD_Char
  4428 ;;		___aldiv
  4429 ;;		___lmul
  4430 ;;		___lwdiv
  4431 ;;		___lwmod
  4432 ;;		_intdigits_chardigits
  4433 ;; This function is called by:
  4434 ;;		_print_analogvoltages
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function _LCD_num
  4440  016C                     _LCD_num:
  4441  016C                     l1747:	
  4442                           ;incstack = 0
  4443                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  4444                           
  4445  016C                     l1749:
  4446                           
  4447                           ;./lcd4bit.h: 61:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 62:     result1;;./lcd4bit.h: 63:     result = ((val*100)/calb_val);
  4448  016C  3000               	movlw	0
  4449  016D  1283               	bcf	3,5	;RP0=0, select bank0
  4450  016E  1303               	bcf	3,6	;RP1=0, select bank0
  4451  016F  00A3               	movwf	___aldiv@divisor+3
  4452  0170  3000               	movlw	0
  4453  0171  00A2               	movwf	___aldiv@divisor+2
  4454  0172  3000               	movlw	0
  4455  0173  00A1               	movwf	___aldiv@divisor+1
  4456  0174  30C8               	movlw	200
  4457  0175  00A0               	movwf	___aldiv@divisor
  4458  0176  0831               	movf	LCD_num@val+3,w
  4459  0177  00F3               	movwf	___lmul@multiplier+3
  4460  0178  0830               	movf	LCD_num@val+2,w
  4461  0179  00F2               	movwf	___lmul@multiplier+2
  4462  017A  082F               	movf	LCD_num@val+1,w
  4463  017B  00F1               	movwf	___lmul@multiplier+1
  4464  017C  082E               	movf	LCD_num@val,w
  4465  017D  00F0               	movwf	___lmul@multiplier
  4466  017E  3000               	movlw	0
  4467  017F  00F7               	movwf	___lmul@multiplicand+3
  4468  0180  3000               	movlw	0
  4469  0181  00F6               	movwf	___lmul@multiplicand+2
  4470  0182  3000               	movlw	0
  4471  0183  00F5               	movwf	___lmul@multiplicand+1
  4472  0184  3064               	movlw	100
  4473  0185  00F4               	movwf	___lmul@multiplicand
  4474  0186  120A  158A  2633  120A  118A  	fcall	___lmul
  4475  018B  0873               	movf	?___lmul+3,w
  4476  018C  1283               	bcf	3,5	;RP0=0, select bank0
  4477  018D  1303               	bcf	3,6	;RP1=0, select bank0
  4478  018E  00A7               	movwf	___aldiv@dividend+3
  4479  018F  0872               	movf	?___lmul+2,w
  4480  0190  00A6               	movwf	___aldiv@dividend+2
  4481  0191  0871               	movf	?___lmul+1,w
  4482  0192  00A5               	movwf	___aldiv@dividend+1
  4483  0193  0870               	movf	?___lmul,w
  4484  0194  00A4               	movwf	___aldiv@dividend
  4485  0195  120A  118A  20CF  120A  118A  	fcall	___aldiv
  4486  019A  1283               	bcf	3,5	;RP0=0, select bank0
  4487  019B  1303               	bcf	3,6	;RP1=0, select bank0
  4488  019C  0821               	movf	?___aldiv+1,w
  4489  019D  00B9               	movwf	LCD_num@result+1
  4490  019E  0820               	movf	?___aldiv,w
  4491  019F  00B8               	movwf	LCD_num@result
  4492  01A0                     l1751:
  4493                           
  4494                           ;./lcd4bit.h: 64:     remainder = result% 10;
  4495  01A0  300A               	movlw	10
  4496  01A1  00F0               	movwf	___lwmod@divisor
  4497  01A2  3000               	movlw	0
  4498  01A3  00F1               	movwf	___lwmod@divisor+1
  4499  01A4  0839               	movf	LCD_num@result+1,w
  4500  01A5  00F3               	movwf	___lwmod@dividend+1
  4501  01A6  0838               	movf	LCD_num@result,w
  4502  01A7  00F2               	movwf	___lwmod@dividend
  4503  01A8  120A  158A  24B9  120A  118A  	fcall	___lwmod
  4504  01AD  0871               	movf	?___lwmod+1,w
  4505  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  4506  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  4507  01B0  00BD               	movwf	LCD_num@remainder+1
  4508  01B1  0870               	movf	?___lwmod,w
  4509  01B2  00BC               	movwf	LCD_num@remainder
  4510  01B3                     l1753:
  4511                           
  4512                           ;./lcd4bit.h: 65:     result1 = result /10;
  4513  01B3  300A               	movlw	10
  4514  01B4  00F0               	movwf	___lwdiv@divisor
  4515  01B5  3000               	movlw	0
  4516  01B6  00F1               	movwf	___lwdiv@divisor+1
  4517  01B7  0839               	movf	LCD_num@result+1,w
  4518  01B8  00F3               	movwf	___lwdiv@dividend+1
  4519  01B9  0838               	movf	LCD_num@result,w
  4520  01BA  00F2               	movwf	___lwdiv@dividend
  4521  01BB  120A  158A  25EF  120A  118A  	fcall	___lwdiv
  4522  01C0  0871               	movf	?___lwdiv+1,w
  4523  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  4524  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  4525  01C3  00BB               	movwf	LCD_num@result1+1
  4526  01C4  0870               	movf	?___lwdiv,w
  4527  01C5  00BA               	movwf	LCD_num@result1
  4528  01C6                     l1755:
  4529                           
  4530                           ;./lcd4bit.h: 66:     digit1 = remainder;
  4531  01C6  083D               	movf	LCD_num@remainder+1,w
  4532  01C7  00B3               	movwf	LCD_num@digit1+1
  4533  01C8  083C               	movf	LCD_num@remainder,w
  4534  01C9  00B2               	movwf	LCD_num@digit1
  4535                           
  4536                           ;./lcd4bit.h: 67:     remainder = result1%10;
  4537  01CA  300A               	movlw	10
  4538  01CB  00F0               	movwf	___lwmod@divisor
  4539  01CC  3000               	movlw	0
  4540  01CD  00F1               	movwf	___lwmod@divisor+1
  4541  01CE  083B               	movf	LCD_num@result1+1,w
  4542  01CF  00F3               	movwf	___lwmod@dividend+1
  4543  01D0  083A               	movf	LCD_num@result1,w
  4544  01D1  00F2               	movwf	___lwmod@dividend
  4545  01D2  120A  158A  24B9  120A  118A  	fcall	___lwmod
  4546  01D7  0871               	movf	?___lwmod+1,w
  4547  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  4548  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  4549  01DA  00BD               	movwf	LCD_num@remainder+1
  4550  01DB  0870               	movf	?___lwmod,w
  4551  01DC  00BC               	movwf	LCD_num@remainder
  4552  01DD                     l1757:
  4553                           
  4554                           ;./lcd4bit.h: 68:     digit2 = remainder;
  4555  01DD  083D               	movf	LCD_num@remainder+1,w
  4556  01DE  00B5               	movwf	LCD_num@digit2+1
  4557  01DF  083C               	movf	LCD_num@remainder,w
  4558  01E0  00B4               	movwf	LCD_num@digit2
  4559  01E1                     l1759:
  4560                           
  4561                           ;./lcd4bit.h: 69:     remainder = (result1/10);
  4562  01E1  300A               	movlw	10
  4563  01E2  00F0               	movwf	___lwdiv@divisor
  4564  01E3  3000               	movlw	0
  4565  01E4  00F1               	movwf	___lwdiv@divisor+1
  4566  01E5  083B               	movf	LCD_num@result1+1,w
  4567  01E6  00F3               	movwf	___lwdiv@dividend+1
  4568  01E7  083A               	movf	LCD_num@result1,w
  4569  01E8  00F2               	movwf	___lwdiv@dividend
  4570  01E9  120A  158A  25EF  120A  118A  	fcall	___lwdiv
  4571  01EE  0871               	movf	?___lwdiv+1,w
  4572  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  4573  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  4574  01F1  00BD               	movwf	LCD_num@remainder+1
  4575  01F2  0870               	movf	?___lwdiv,w
  4576  01F3  00BC               	movwf	LCD_num@remainder
  4577                           
  4578                           ;./lcd4bit.h: 70:     digit3=remainder;
  4579  01F4  083D               	movf	LCD_num@remainder+1,w
  4580  01F5  00B7               	movwf	LCD_num@digit3+1
  4581  01F6  083C               	movf	LCD_num@remainder,w
  4582  01F7  00B6               	movwf	LCD_num@digit3
  4583  01F8                     l1761:
  4584                           
  4585                           ;./lcd4bit.h: 71:     LCD_Char(digit3+0x30);
  4586  01F8  0836               	movf	LCD_num@digit3,w
  4587  01F9  3E30               	addlw	48
  4588  01FA  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  4589  01FF                     l1763:
  4590                           
  4591                           ;./lcd4bit.h: 72:     LCD_Char('.');
  4592  01FF  302E               	movlw	46
  4593  0200  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  4594  0205                     l1765:
  4595                           
  4596                           ;./lcd4bit.h: 73:     LCD_Char(digit2+0x30);
  4597  0205  1283               	bcf	3,5	;RP0=0, select bank0
  4598  0206  1303               	bcf	3,6	;RP1=0, select bank0
  4599  0207  0834               	movf	LCD_num@digit2,w
  4600  0208  3E30               	addlw	48
  4601  0209  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  4602  020E                     l1767:
  4603                           
  4604                           ;./lcd4bit.h: 74:     LCD_Char(digit1+0x30);
  4605  020E  1283               	bcf	3,5	;RP0=0, select bank0
  4606  020F  1303               	bcf	3,6	;RP1=0, select bank0
  4607  0210  0832               	movf	LCD_num@digit1,w
  4608  0211  3E30               	addlw	48
  4609  0212  120A  158A  256D  120A  118A  	fcall	_LCD_Char
  4610  0217                     l1769:
  4611                           
  4612                           ;./lcd4bit.h: 76:     intdigits_chardigits(digit3,digit2,digit1);
  4613  0217  1283               	bcf	3,5	;RP0=0, select bank0
  4614  0218  1303               	bcf	3,6	;RP1=0, select bank0
  4615  0219  0837               	movf	LCD_num@digit3+1,w
  4616  021A  00F1               	movwf	intdigits_chardigits@a+1
  4617  021B  0836               	movf	LCD_num@digit3,w
  4618  021C  00F0               	movwf	intdigits_chardigits@a
  4619  021D  0835               	movf	LCD_num@digit2+1,w
  4620  021E  00F3               	movwf	intdigits_chardigits@b+1
  4621  021F  0834               	movf	LCD_num@digit2,w
  4622  0220  00F2               	movwf	intdigits_chardigits@b
  4623  0221  0833               	movf	LCD_num@digit1+1,w
  4624  0222  00F5               	movwf	intdigits_chardigits@c+1
  4625  0223  0832               	movf	LCD_num@digit1,w
  4626  0224  00F4               	movwf	intdigits_chardigits@c
  4627  0225  120A  158A  23E1  120A  118A  	fcall	_intdigits_chardigits
  4628  022A                     l104:
  4629  022A  0008               	return
  4630  022B                     __end_of_LCD_num:
  4631                           
  4632                           	psect	text28
  4633  0BE1                     __ptext28:	
  4634 ;; *************** function _intdigits_chardigits *****************
  4635 ;; Defined at:
  4636 ;;		line 86 in file "./lcd4bit.h"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  a               2    0[COMMON] unsigned int 
  4639 ;;  b               2    2[COMMON] unsigned int 
  4640 ;;  c               2    4[COMMON] unsigned int 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      unsigned char 
  4645 ;; Registers used:
  4646 ;;		wreg
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4652 ;;      Params:         6       0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0
  4654 ;;      Temps:          1       0       0       0       0
  4655 ;;      Totals:         7       0       0       0       0
  4656 ;;Total ram usage:        7 bytes
  4657 ;; Hardware stack levels used: 1
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_LCD_num
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _intdigits_chardigits
  4667  0BE1                     _intdigits_chardigits:
  4668  0BE1                     l1517:	
  4669                           ;incstack = 0
  4670                           ; Regs used in _intdigits_chardigits: [wreg]
  4671                           
  4672                           
  4673                           ;./lcd4bit.h: 86: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 87: {;./lcd4bit.h: 88:     avv[0] = (unsigned char)a;
  4674  0BE1  0870               	movf	intdigits_chardigits@a,w
  4675  0BE2  00F6               	movwf	??_intdigits_chardigits
  4676  0BE3  0876               	movf	??_intdigits_chardigits,w
  4677  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0BE6  00D1               	movwf	_avv
  4680                           
  4681                           ;./lcd4bit.h: 89:     avv[1] = (unsigned char)b;
  4682  0BE7  0872               	movf	intdigits_chardigits@b,w
  4683  0BE8  00F6               	movwf	??_intdigits_chardigits
  4684  0BE9  0876               	movf	??_intdigits_chardigits,w
  4685  0BEA  00D2               	movwf	_avv+1
  4686                           
  4687                           ;./lcd4bit.h: 90:     avv[2] = (unsigned char)c;
  4688  0BEB  0874               	movf	intdigits_chardigits@c,w
  4689  0BEC  00F6               	movwf	??_intdigits_chardigits
  4690  0BED  0876               	movf	??_intdigits_chardigits,w
  4691  0BEE  00D3               	movwf	_avv+2
  4692  0BEF                     l113:
  4693  0BEF  0008               	return
  4694  0BF0                     __end_of_intdigits_chardigits:
  4695                           
  4696                           	psect	text29
  4697  0CB9                     __ptext29:	
  4698 ;; *************** function ___lwmod *****************
  4699 ;; Defined at:
  4700 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  divisor         2    0[COMMON] unsigned int 
  4703 ;;  dividend        2    2[COMMON] unsigned int 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  counter         1    5[COMMON] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  2    0[COMMON] unsigned int 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         4       0       0       0       0
  4716 ;;      Locals:         1       0       0       0       0
  4717 ;;      Temps:          1       0       0       0       0
  4718 ;;      Totals:         6       0       0       0       0
  4719 ;;Total ram usage:        6 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_LCD_num
  4725 ;;		_show_multidigits
  4726 ;;		_tx_sn
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           
  4731                           ;psect for function ___lwmod
  4732  0CB9                     ___lwmod:
  4733  0CB9                     l1707:	
  4734                           ;incstack = 0
  4735                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4736                           
  4737  0CB9  0870               	movf	___lwmod@divisor,w
  4738  0CBA  0471               	iorwf	___lwmod@divisor+1,w
  4739  0CBB  1903               	btfsc	3,2
  4740  0CBC  2CBE               	goto	u1331
  4741  0CBD  2CBF               	goto	u1330
  4742  0CBE                     u1331:
  4743  0CBE  2CEE               	goto	l1725
  4744  0CBF                     u1330:
  4745  0CBF                     l1709:
  4746  0CBF  01F5               	clrf	___lwmod@counter
  4747  0CC0  0AF5               	incf	___lwmod@counter,f
  4748  0CC1  2CCD               	goto	l1715
  4749  0CC2                     l1711:
  4750  0CC2  3001               	movlw	1
  4751  0CC3                     u1345:
  4752  0CC3  1003               	clrc
  4753  0CC4  0DF0               	rlf	___lwmod@divisor,f
  4754  0CC5  0DF1               	rlf	___lwmod@divisor+1,f
  4755  0CC6  3EFF               	addlw	-1
  4756  0CC7  1D03               	skipz
  4757  0CC8  2CC3               	goto	u1345
  4758  0CC9                     l1713:
  4759  0CC9  3001               	movlw	1
  4760  0CCA  00F4               	movwf	??___lwmod
  4761  0CCB  0874               	movf	??___lwmod,w
  4762  0CCC  07F5               	addwf	___lwmod@counter,f
  4763  0CCD                     l1715:
  4764  0CCD  1FF1               	btfss	___lwmod@divisor+1,7
  4765  0CCE  2CD0               	goto	u1351
  4766  0CCF  2CD1               	goto	u1350
  4767  0CD0                     u1351:
  4768  0CD0  2CC2               	goto	l1711
  4769  0CD1                     u1350:
  4770  0CD1                     l1717:
  4771  0CD1  0871               	movf	___lwmod@divisor+1,w
  4772  0CD2  0273               	subwf	___lwmod@dividend+1,w
  4773  0CD3  1D03               	skipz
  4774  0CD4  2CD7               	goto	u1365
  4775  0CD5  0870               	movf	___lwmod@divisor,w
  4776  0CD6  0272               	subwf	___lwmod@dividend,w
  4777  0CD7                     u1365:
  4778  0CD7  1C03               	skipc
  4779  0CD8  2CDA               	goto	u1361
  4780  0CD9  2CDB               	goto	u1360
  4781  0CDA                     u1361:
  4782  0CDA  2CE1               	goto	l1721
  4783  0CDB                     u1360:
  4784  0CDB                     l1719:
  4785  0CDB  0870               	movf	___lwmod@divisor,w
  4786  0CDC  02F2               	subwf	___lwmod@dividend,f
  4787  0CDD  0871               	movf	___lwmod@divisor+1,w
  4788  0CDE  1C03               	skipc
  4789  0CDF  03F3               	decf	___lwmod@dividend+1,f
  4790  0CE0  02F3               	subwf	___lwmod@dividend+1,f
  4791  0CE1                     l1721:
  4792  0CE1  3001               	movlw	1
  4793  0CE2                     u1375:
  4794  0CE2  1003               	clrc
  4795  0CE3  0CF1               	rrf	___lwmod@divisor+1,f
  4796  0CE4  0CF0               	rrf	___lwmod@divisor,f
  4797  0CE5  3EFF               	addlw	-1
  4798  0CE6  1D03               	skipz
  4799  0CE7  2CE2               	goto	u1375
  4800  0CE8                     l1723:
  4801  0CE8  3001               	movlw	1
  4802  0CE9  02F5               	subwf	___lwmod@counter,f
  4803  0CEA  1D03               	btfss	3,2
  4804  0CEB  2CED               	goto	u1381
  4805  0CEC  2CEE               	goto	u1380
  4806  0CED                     u1381:
  4807  0CED  2CD1               	goto	l1717
  4808  0CEE                     u1380:
  4809  0CEE                     l1725:
  4810  0CEE  0873               	movf	___lwmod@dividend+1,w
  4811  0CEF  00F1               	movwf	?___lwmod+1
  4812  0CF0  0872               	movf	___lwmod@dividend,w
  4813  0CF1  00F0               	movwf	?___lwmod
  4814  0CF2                     l669:
  4815  0CF2  0008               	return
  4816  0CF3                     __end_of___lwmod:
  4817                           
  4818                           	psect	text30
  4819  0DEF                     __ptext30:	
  4820 ;; *************** function ___lwdiv *****************
  4821 ;; Defined at:
  4822 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  divisor         2    0[COMMON] unsigned int 
  4825 ;;  dividend        2    2[COMMON] unsigned int 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  quotient        2    5[COMMON] unsigned int 
  4828 ;;  counter         1    7[COMMON] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  2    0[COMMON] unsigned int 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4838 ;;      Params:         4       0       0       0       0
  4839 ;;      Locals:         3       0       0       0       0
  4840 ;;      Temps:          1       0       0       0       0
  4841 ;;      Totals:         8       0       0       0       0
  4842 ;;Total ram usage:        8 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_LCD_num
  4848 ;;		_show_multidigits
  4849 ;;		_tx_sn
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           
  4854                           ;psect for function ___lwdiv
  4855  0DEF                     ___lwdiv:
  4856  0DEF                     l1681:	
  4857                           ;incstack = 0
  4858                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4859                           
  4860  0DEF  01F5               	clrf	___lwdiv@quotient
  4861  0DF0  01F6               	clrf	___lwdiv@quotient+1
  4862  0DF1                     l1683:
  4863  0DF1  0870               	movf	___lwdiv@divisor,w
  4864  0DF2  0471               	iorwf	___lwdiv@divisor+1,w
  4865  0DF3  1903               	btfsc	3,2
  4866  0DF4  2DF6               	goto	u1261
  4867  0DF5  2DF7               	goto	u1260
  4868  0DF6                     u1261:
  4869  0DF6  2E2E               	goto	l1703
  4870  0DF7                     u1260:
  4871  0DF7                     l1685:
  4872  0DF7  01F7               	clrf	___lwdiv@counter
  4873  0DF8  0AF7               	incf	___lwdiv@counter,f
  4874  0DF9  2E05               	goto	l1691
  4875  0DFA                     l1687:
  4876  0DFA  3001               	movlw	1
  4877  0DFB                     u1275:
  4878  0DFB  1003               	clrc
  4879  0DFC  0DF0               	rlf	___lwdiv@divisor,f
  4880  0DFD  0DF1               	rlf	___lwdiv@divisor+1,f
  4881  0DFE  3EFF               	addlw	-1
  4882  0DFF  1D03               	skipz
  4883  0E00  2DFB               	goto	u1275
  4884  0E01                     l1689:
  4885  0E01  3001               	movlw	1
  4886  0E02  00F4               	movwf	??___lwdiv
  4887  0E03  0874               	movf	??___lwdiv,w
  4888  0E04  07F7               	addwf	___lwdiv@counter,f
  4889  0E05                     l1691:
  4890  0E05  1FF1               	btfss	___lwdiv@divisor+1,7
  4891  0E06  2E08               	goto	u1281
  4892  0E07  2E09               	goto	u1280
  4893  0E08                     u1281:
  4894  0E08  2DFA               	goto	l1687
  4895  0E09                     u1280:
  4896  0E09                     l1693:
  4897  0E09  3001               	movlw	1
  4898  0E0A                     u1295:
  4899  0E0A  1003               	clrc
  4900  0E0B  0DF5               	rlf	___lwdiv@quotient,f
  4901  0E0C  0DF6               	rlf	___lwdiv@quotient+1,f
  4902  0E0D  3EFF               	addlw	-1
  4903  0E0E  1D03               	skipz
  4904  0E0F  2E0A               	goto	u1295
  4905  0E10  0871               	movf	___lwdiv@divisor+1,w
  4906  0E11  0273               	subwf	___lwdiv@dividend+1,w
  4907  0E12  1D03               	skipz
  4908  0E13  2E16               	goto	u1305
  4909  0E14  0870               	movf	___lwdiv@divisor,w
  4910  0E15  0272               	subwf	___lwdiv@dividend,w
  4911  0E16                     u1305:
  4912  0E16  1C03               	skipc
  4913  0E17  2E19               	goto	u1301
  4914  0E18  2E1A               	goto	u1300
  4915  0E19                     u1301:
  4916  0E19  2E21               	goto	l1699
  4917  0E1A                     u1300:
  4918  0E1A                     l1695:
  4919  0E1A  0870               	movf	___lwdiv@divisor,w
  4920  0E1B  02F2               	subwf	___lwdiv@dividend,f
  4921  0E1C  0871               	movf	___lwdiv@divisor+1,w
  4922  0E1D  1C03               	skipc
  4923  0E1E  03F3               	decf	___lwdiv@dividend+1,f
  4924  0E1F  02F3               	subwf	___lwdiv@dividend+1,f
  4925  0E20                     l1697:
  4926  0E20  1475               	bsf	___lwdiv@quotient,0
  4927  0E21                     l1699:
  4928  0E21  3001               	movlw	1
  4929  0E22                     u1315:
  4930  0E22  1003               	clrc
  4931  0E23  0CF1               	rrf	___lwdiv@divisor+1,f
  4932  0E24  0CF0               	rrf	___lwdiv@divisor,f
  4933  0E25  3EFF               	addlw	-1
  4934  0E26  1D03               	skipz
  4935  0E27  2E22               	goto	u1315
  4936  0E28                     l1701:
  4937  0E28  3001               	movlw	1
  4938  0E29  02F7               	subwf	___lwdiv@counter,f
  4939  0E2A  1D03               	btfss	3,2
  4940  0E2B  2E2D               	goto	u1321
  4941  0E2C  2E2E               	goto	u1320
  4942  0E2D                     u1321:
  4943  0E2D  2E09               	goto	l1693
  4944  0E2E                     u1320:
  4945  0E2E                     l1703:
  4946  0E2E  0876               	movf	___lwdiv@quotient+1,w
  4947  0E2F  00F1               	movwf	?___lwdiv+1
  4948  0E30  0875               	movf	___lwdiv@quotient,w
  4949  0E31  00F0               	movwf	?___lwdiv
  4950  0E32                     l659:
  4951  0E32  0008               	return
  4952  0E33                     __end_of___lwdiv:
  4953                           
  4954                           	psect	text31
  4955  0E33                     __ptext31:	
  4956 ;; *************** function ___lmul *****************
  4957 ;; Defined at:
  4958 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  multiplier      4    0[COMMON] unsigned long 
  4961 ;;  multiplicand    4    4[COMMON] unsigned long 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  product         4    9[COMMON] unsigned long 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  4    0[COMMON] unsigned long 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4973 ;;      Params:         8       0       0       0       0
  4974 ;;      Locals:         4       0       0       0       0
  4975 ;;      Temps:          1       0       0       0       0
  4976 ;;      Totals:        13       0       0       0       0
  4977 ;;Total ram usage:       13 bytes
  4978 ;; Hardware stack levels used: 1
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_LCD_num
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function ___lmul
  4988  0E33                     ___lmul:
  4989  0E33                     l1545:	
  4990                           ;incstack = 0
  4991                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4992                           
  4993  0E33  3000               	movlw	0
  4994  0E34  00FC               	movwf	___lmul@product+3
  4995  0E35  3000               	movlw	0
  4996  0E36  00FB               	movwf	___lmul@product+2
  4997  0E37  3000               	movlw	0
  4998  0E38  00FA               	movwf	___lmul@product+1
  4999  0E39  3000               	movlw	0
  5000  0E3A  00F9               	movwf	___lmul@product
  5001  0E3B                     l1547:
  5002  0E3B  1C70               	btfss	___lmul@multiplier,0
  5003  0E3C  2E3E               	goto	u921
  5004  0E3D  2E3F               	goto	u920
  5005  0E3E                     u921:
  5006  0E3E  2E56               	goto	l1551
  5007  0E3F                     u920:
  5008  0E3F                     l1549:
  5009  0E3F  0874               	movf	___lmul@multiplicand,w
  5010  0E40  07F9               	addwf	___lmul@product,f
  5011  0E41  0875               	movf	___lmul@multiplicand+1,w
  5012  0E42  1103               	clrz
  5013  0E43  1803               	skipnc
  5014  0E44  3E01               	addlw	1
  5015  0E45  1903               	skipnz
  5016  0E46  2E48               	goto	u931
  5017  0E47  07FA               	addwf	___lmul@product+1,f
  5018  0E48                     u931:
  5019  0E48  0876               	movf	___lmul@multiplicand+2,w
  5020  0E49  1103               	clrz
  5021  0E4A  1803               	skipnc
  5022  0E4B  3E01               	addlw	1
  5023  0E4C  1903               	skipnz
  5024  0E4D  2E4F               	goto	u932
  5025  0E4E  07FB               	addwf	___lmul@product+2,f
  5026  0E4F                     u932:
  5027  0E4F  0877               	movf	___lmul@multiplicand+3,w
  5028  0E50  1103               	clrz
  5029  0E51  1803               	skipnc
  5030  0E52  3E01               	addlw	1
  5031  0E53  1903               	skipnz
  5032  0E54  2E56               	goto	u933
  5033  0E55  07FC               	addwf	___lmul@product+3,f
  5034  0E56                     u933:
  5035  0E56                     l1551:
  5036  0E56  3001               	movlw	1
  5037  0E57  00F8               	movwf	??___lmul
  5038  0E58                     u945:
  5039  0E58  1003               	clrc
  5040  0E59  0DF4               	rlf	___lmul@multiplicand,f
  5041  0E5A  0DF5               	rlf	___lmul@multiplicand+1,f
  5042  0E5B  0DF6               	rlf	___lmul@multiplicand+2,f
  5043  0E5C  0DF7               	rlf	___lmul@multiplicand+3,f
  5044  0E5D  0BF8               	decfsz	??___lmul,f
  5045  0E5E  2E58               	goto	u945
  5046  0E5F                     l1553:
  5047  0E5F  3001               	movlw	1
  5048  0E60                     u955:
  5049  0E60  1003               	clrc
  5050  0E61  0CF3               	rrf	___lmul@multiplier+3,f
  5051  0E62  0CF2               	rrf	___lmul@multiplier+2,f
  5052  0E63  0CF1               	rrf	___lmul@multiplier+1,f
  5053  0E64  0CF0               	rrf	___lmul@multiplier,f
  5054  0E65  3EFF               	addlw	-1
  5055  0E66  1D03               	skipz
  5056  0E67  2E60               	goto	u955
  5057  0E68  0873               	movf	___lmul@multiplier+3,w
  5058  0E69  0472               	iorwf	___lmul@multiplier+2,w
  5059  0E6A  0471               	iorwf	___lmul@multiplier+1,w
  5060  0E6B  0470               	iorwf	___lmul@multiplier,w
  5061  0E6C  1D03               	skipz
  5062  0E6D  2E6F               	goto	u961
  5063  0E6E  2E70               	goto	u960
  5064  0E6F                     u961:
  5065  0E6F  2E3B               	goto	l1547
  5066  0E70                     u960:
  5067  0E70                     l1555:
  5068  0E70  087C               	movf	___lmul@product+3,w
  5069  0E71  00F3               	movwf	?___lmul+3
  5070  0E72  087B               	movf	___lmul@product+2,w
  5071  0E73  00F2               	movwf	?___lmul+2
  5072  0E74  087A               	movf	___lmul@product+1,w
  5073  0E75  00F1               	movwf	?___lmul+1
  5074  0E76  0879               	movf	___lmul@product,w
  5075  0E77  00F0               	movwf	?___lmul
  5076  0E78                     l401:
  5077  0E78  0008               	return
  5078  0E79                     __end_of___lmul:
  5079                           
  5080                           	psect	text32
  5081  00CF                     __ptext32:	
  5082 ;; *************** function ___aldiv *****************
  5083 ;; Defined at:
  5084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  divisor         4    0[BANK0 ] long 
  5087 ;;  dividend        4    4[BANK0 ] long 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  quotient        4   10[BANK0 ] long 
  5090 ;;  sign            1    9[BANK0 ] unsigned char 
  5091 ;;  counter         1    8[BANK0 ] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  4    0[BANK0 ] long 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5101 ;;      Params:         0       8       0       0       0
  5102 ;;      Locals:         0       6       0       0       0
  5103 ;;      Temps:          1       0       0       0       0
  5104 ;;      Totals:         1      14       0       0       0
  5105 ;;Total ram usage:       15 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_LCD_num
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           
  5115                           ;psect for function ___aldiv
  5116  00CF                     ___aldiv:
  5117  00CF                     l1559:	
  5118                           ;incstack = 0
  5119                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5120                           
  5121  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  5122  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  5123  00D1  01A9               	clrf	___aldiv@sign
  5124  00D2                     l1561:
  5125  00D2  1FA3               	btfss	___aldiv@divisor+3,7
  5126  00D3  28D5               	goto	u971
  5127  00D4  28D6               	goto	u970
  5128  00D5                     u971:
  5129  00D5  28E3               	goto	l452
  5130  00D6                     u970:
  5131  00D6                     l1563:
  5132  00D6  09A0               	comf	___aldiv@divisor,f
  5133  00D7  09A1               	comf	___aldiv@divisor+1,f
  5134  00D8  09A2               	comf	___aldiv@divisor+2,f
  5135  00D9  09A3               	comf	___aldiv@divisor+3,f
  5136  00DA  0AA0               	incf	___aldiv@divisor,f
  5137  00DB  1903               	skipnz
  5138  00DC  0AA1               	incf	___aldiv@divisor+1,f
  5139  00DD  1903               	skipnz
  5140  00DE  0AA2               	incf	___aldiv@divisor+2,f
  5141  00DF  1903               	skipnz
  5142  00E0  0AA3               	incf	___aldiv@divisor+3,f
  5143  00E1  01A9               	clrf	___aldiv@sign
  5144  00E2  0AA9               	incf	___aldiv@sign,f
  5145  00E3                     l452:
  5146  00E3  1FA7               	btfss	___aldiv@dividend+3,7
  5147  00E4  28E6               	goto	u981
  5148  00E5  28E7               	goto	u980
  5149  00E6                     u981:
  5150  00E6  28F6               	goto	l1569
  5151  00E7                     u980:
  5152  00E7                     l1565:
  5153  00E7  09A4               	comf	___aldiv@dividend,f
  5154  00E8  09A5               	comf	___aldiv@dividend+1,f
  5155  00E9  09A6               	comf	___aldiv@dividend+2,f
  5156  00EA  09A7               	comf	___aldiv@dividend+3,f
  5157  00EB  0AA4               	incf	___aldiv@dividend,f
  5158  00EC  1903               	skipnz
  5159  00ED  0AA5               	incf	___aldiv@dividend+1,f
  5160  00EE  1903               	skipnz
  5161  00EF  0AA6               	incf	___aldiv@dividend+2,f
  5162  00F0  1903               	skipnz
  5163  00F1  0AA7               	incf	___aldiv@dividend+3,f
  5164  00F2                     l1567:
  5165  00F2  3001               	movlw	1
  5166  00F3  00FD               	movwf	??___aldiv
  5167  00F4  087D               	movf	??___aldiv,w
  5168  00F5  06A9               	xorwf	___aldiv@sign,f
  5169  00F6                     l1569:
  5170  00F6  3000               	movlw	0
  5171  00F7  00AD               	movwf	___aldiv@quotient+3
  5172  00F8  3000               	movlw	0
  5173  00F9  00AC               	movwf	___aldiv@quotient+2
  5174  00FA  3000               	movlw	0
  5175  00FB  00AB               	movwf	___aldiv@quotient+1
  5176  00FC  3000               	movlw	0
  5177  00FD  00AA               	movwf	___aldiv@quotient
  5178  00FE                     l1571:
  5179  00FE  0823               	movf	___aldiv@divisor+3,w
  5180  00FF  0422               	iorwf	___aldiv@divisor+2,w
  5181  0100  0421               	iorwf	___aldiv@divisor+1,w
  5182  0101  0420               	iorwf	___aldiv@divisor,w
  5183  0102  1903               	skipnz
  5184  0103  2905               	goto	u991
  5185  0104  2906               	goto	u990
  5186  0105                     u991:
  5187  0105  2953               	goto	l1591
  5188  0106                     u990:
  5189  0106                     l1573:
  5190  0106  01A8               	clrf	___aldiv@counter
  5191  0107  0AA8               	incf	___aldiv@counter,f
  5192  0108  2916               	goto	l1577
  5193  0109                     l1575:
  5194  0109  3001               	movlw	1
  5195  010A  00FD               	movwf	??___aldiv
  5196  010B                     u1005:
  5197  010B  1003               	clrc
  5198  010C  0DA0               	rlf	___aldiv@divisor,f
  5199  010D  0DA1               	rlf	___aldiv@divisor+1,f
  5200  010E  0DA2               	rlf	___aldiv@divisor+2,f
  5201  010F  0DA3               	rlf	___aldiv@divisor+3,f
  5202  0110  0BFD               	decfsz	??___aldiv,f
  5203  0111  290B               	goto	u1005
  5204  0112  3001               	movlw	1
  5205  0113  00FD               	movwf	??___aldiv
  5206  0114  087D               	movf	??___aldiv,w
  5207  0115  07A8               	addwf	___aldiv@counter,f
  5208  0116                     l1577:
  5209  0116  1FA3               	btfss	___aldiv@divisor+3,7
  5210  0117  2919               	goto	u1011
  5211  0118  291A               	goto	u1010
  5212  0119                     u1011:
  5213  0119  2909               	goto	l1575
  5214  011A                     u1010:
  5215  011A                     l1579:
  5216  011A  3001               	movlw	1
  5217  011B  00FD               	movwf	??___aldiv
  5218  011C                     u1025:
  5219  011C  1003               	clrc
  5220  011D  0DAA               	rlf	___aldiv@quotient,f
  5221  011E  0DAB               	rlf	___aldiv@quotient+1,f
  5222  011F  0DAC               	rlf	___aldiv@quotient+2,f
  5223  0120  0DAD               	rlf	___aldiv@quotient+3,f
  5224  0121  0BFD               	decfsz	??___aldiv,f
  5225  0122  291C               	goto	u1025
  5226  0123                     l1581:
  5227  0123  0823               	movf	___aldiv@divisor+3,w
  5228  0124  0227               	subwf	___aldiv@dividend+3,w
  5229  0125  1D03               	skipz
  5230  0126  2931               	goto	u1035
  5231  0127  0822               	movf	___aldiv@divisor+2,w
  5232  0128  0226               	subwf	___aldiv@dividend+2,w
  5233  0129  1D03               	skipz
  5234  012A  2931               	goto	u1035
  5235  012B  0821               	movf	___aldiv@divisor+1,w
  5236  012C  0225               	subwf	___aldiv@dividend+1,w
  5237  012D  1D03               	skipz
  5238  012E  2931               	goto	u1035
  5239  012F  0820               	movf	___aldiv@divisor,w
  5240  0130  0224               	subwf	___aldiv@dividend,w
  5241  0131                     u1035:
  5242  0131  1C03               	skipc
  5243  0132  2934               	goto	u1031
  5244  0133  2935               	goto	u1030
  5245  0134                     u1031:
  5246  0134  2944               	goto	l1587
  5247  0135                     u1030:
  5248  0135                     l1583:
  5249  0135  0820               	movf	___aldiv@divisor,w
  5250  0136  02A4               	subwf	___aldiv@dividend,f
  5251  0137  0821               	movf	___aldiv@divisor+1,w
  5252  0138  1C03               	skipc
  5253  0139  0F21               	incfsz	___aldiv@divisor+1,w
  5254  013A  02A5               	subwf	___aldiv@dividend+1,f
  5255  013B  0822               	movf	___aldiv@divisor+2,w
  5256  013C  1C03               	skipc
  5257  013D  0F22               	incfsz	___aldiv@divisor+2,w
  5258  013E  02A6               	subwf	___aldiv@dividend+2,f
  5259  013F  0823               	movf	___aldiv@divisor+3,w
  5260  0140  1C03               	skipc
  5261  0141  0F23               	incfsz	___aldiv@divisor+3,w
  5262  0142  02A7               	subwf	___aldiv@dividend+3,f
  5263  0143                     l1585:
  5264  0143  142A               	bsf	___aldiv@quotient,0
  5265  0144                     l1587:
  5266  0144  3001               	movlw	1
  5267  0145                     u1045:
  5268  0145  1003               	clrc
  5269  0146  0CA3               	rrf	___aldiv@divisor+3,f
  5270  0147  0CA2               	rrf	___aldiv@divisor+2,f
  5271  0148  0CA1               	rrf	___aldiv@divisor+1,f
  5272  0149  0CA0               	rrf	___aldiv@divisor,f
  5273  014A  3EFF               	addlw	-1
  5274  014B  1D03               	skipz
  5275  014C  2945               	goto	u1045
  5276  014D                     l1589:
  5277  014D  3001               	movlw	1
  5278  014E  02A8               	subwf	___aldiv@counter,f
  5279  014F  1D03               	btfss	3,2
  5280  0150  2952               	goto	u1051
  5281  0151  2953               	goto	u1050
  5282  0152                     u1051:
  5283  0152  291A               	goto	l1579
  5284  0153                     u1050:
  5285  0153                     l1591:
  5286  0153  0829               	movf	___aldiv@sign,w
  5287  0154  1903               	btfsc	3,2
  5288  0155  2957               	goto	u1061
  5289  0156  2958               	goto	u1060
  5290  0157                     u1061:
  5291  0157  2963               	goto	l1595
  5292  0158                     u1060:
  5293  0158                     l1593:
  5294  0158  09AA               	comf	___aldiv@quotient,f
  5295  0159  09AB               	comf	___aldiv@quotient+1,f
  5296  015A  09AC               	comf	___aldiv@quotient+2,f
  5297  015B  09AD               	comf	___aldiv@quotient+3,f
  5298  015C  0AAA               	incf	___aldiv@quotient,f
  5299  015D  1903               	skipnz
  5300  015E  0AAB               	incf	___aldiv@quotient+1,f
  5301  015F  1903               	skipnz
  5302  0160  0AAC               	incf	___aldiv@quotient+2,f
  5303  0161  1903               	skipnz
  5304  0162  0AAD               	incf	___aldiv@quotient+3,f
  5305  0163                     l1595:
  5306  0163  082D               	movf	___aldiv@quotient+3,w
  5307  0164  00A3               	movwf	?___aldiv+3
  5308  0165  082C               	movf	___aldiv@quotient+2,w
  5309  0166  00A2               	movwf	?___aldiv+2
  5310  0167  082B               	movf	___aldiv@quotient+1,w
  5311  0168  00A1               	movwf	?___aldiv+1
  5312  0169  082A               	movf	___aldiv@quotient,w
  5313  016A  00A0               	movwf	?___aldiv
  5314  016B                     l462:
  5315  016B  0008               	return
  5316  016C                     __end_of___aldiv:
  5317                           
  5318                           	psect	text33
  5319  0D6D                     __ptext33:	
  5320 ;; *************** function _LCD_Char *****************
  5321 ;; Defined at:
  5322 ;;		line 27 in file "./lcd4bit.h"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  data            1    wreg     unsigned char 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  data            1    2[COMMON] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5336 ;;      Params:         0       0       0       0       0
  5337 ;;      Locals:         1       0       0       0       0
  5338 ;;      Temps:          2       0       0       0       0
  5339 ;;      Totals:         3       0       0       0       0
  5340 ;;Total ram usage:        3 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_LCD_num
  5346 ;;		_show
  5347 ;;		_show_multidigits
  5348 ;;		_print_analogvoltages
  5349 ;;		_rtc_lcd_data
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _LCD_Char
  5355  0D6D                     _LCD_Char:
  5356                           
  5357                           ;incstack = 0
  5358                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  5359                           ;LCD_Char@data stored from wreg
  5360  0D6D  00F2               	movwf	LCD_Char@data
  5361  0D6E                     l1499:
  5362                           
  5363                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  5364  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  5365  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  5366  0D70  1407               	bsf	7,0	;volatile
  5367  0D71                     l1501:
  5368                           
  5369                           ;./lcd4bit.h: 30:     PORTB = data;
  5370  0D71  0872               	movf	LCD_Char@data,w
  5371  0D72  0086               	movwf	6	;volatile
  5372  0D73                     l1503:
  5373                           
  5374                           ;./lcd4bit.h: 31:     RC1 = 1;
  5375  0D73  1487               	bsf	7,1	;volatile
  5376                           
  5377                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5378  0D74  3041               	movlw	65
  5379  0D75  00F1               	movwf	??_LCD_Char+1
  5380  0D76  30EE               	movlw	238
  5381  0D77  00F0               	movwf	??_LCD_Char
  5382  0D78                     u1837:
  5383  0D78  0BF0               	decfsz	??_LCD_Char,f
  5384  0D79  2D78               	goto	u1837
  5385  0D7A  0BF1               	decfsz	??_LCD_Char+1,f
  5386  0D7B  2D78               	goto	u1837
  5387  0D7C  0000               	nop
  5388  0D7D                     l1505:
  5389                           
  5390                           ;./lcd4bit.h: 33:     RC1 = 0;
  5391  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0D7F  1087               	bcf	7,1	;volatile
  5394                           
  5395                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5396  0D80  3041               	movlw	65
  5397  0D81  00F1               	movwf	??_LCD_Char+1
  5398  0D82  30EE               	movlw	238
  5399  0D83  00F0               	movwf	??_LCD_Char
  5400  0D84                     u1847:
  5401  0D84  0BF0               	decfsz	??_LCD_Char,f
  5402  0D85  2D84               	goto	u1847
  5403  0D86  0BF1               	decfsz	??_LCD_Char+1,f
  5404  0D87  2D84               	goto	u1847
  5405  0D88  0000               	nop
  5406  0D89                     l1507:
  5407                           
  5408                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  5409  0D89  0872               	movf	LCD_Char@data,w
  5410  0D8A  00F0               	movwf	??_LCD_Char
  5411  0D8B  3003               	movlw	3
  5412  0D8C                     u895:
  5413  0D8C  1003               	clrc
  5414  0D8D  0DF0               	rlf	??_LCD_Char,f
  5415  0D8E  3EFF               	addlw	-1
  5416  0D8F  1D03               	skipz
  5417  0D90  2D8C               	goto	u895
  5418  0D91  1003               	clrc
  5419  0D92  0D70               	rlf	??_LCD_Char,w
  5420  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  5421  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  5422  0D95  0086               	movwf	6	;volatile
  5423  0D96                     l1509:
  5424                           
  5425                           ;./lcd4bit.h: 36:     RC1 = 1;
  5426  0D96  1487               	bsf	7,1	;volatile
  5427  0D97                     l1511:
  5428                           
  5429                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5430  0D97  3041               	movlw	65
  5431  0D98  00F1               	movwf	??_LCD_Char+1
  5432  0D99  30EE               	movlw	238
  5433  0D9A  00F0               	movwf	??_LCD_Char
  5434  0D9B                     u1857:
  5435  0D9B  0BF0               	decfsz	??_LCD_Char,f
  5436  0D9C  2D9B               	goto	u1857
  5437  0D9D  0BF1               	decfsz	??_LCD_Char+1,f
  5438  0D9E  2D9B               	goto	u1857
  5439  0D9F  0000               	nop
  5440  0DA0                     l1513:
  5441                           
  5442                           ;./lcd4bit.h: 38:     RC1 = 0;
  5443  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  5444  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  5445  0DA2  1087               	bcf	7,1	;volatile
  5446  0DA3                     l1515:
  5447                           
  5448                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5449  0DA3  3041               	movlw	65
  5450  0DA4  00F1               	movwf	??_LCD_Char+1
  5451  0DA5  30EE               	movlw	238
  5452  0DA6  00F0               	movwf	??_LCD_Char
  5453  0DA7                     u1867:
  5454  0DA7  0BF0               	decfsz	??_LCD_Char,f
  5455  0DA8  2DA7               	goto	u1867
  5456  0DA9  0BF1               	decfsz	??_LCD_Char+1,f
  5457  0DAA  2DA7               	goto	u1867
  5458  0DAB  0000               	nop
  5459  0DAC                     l98:
  5460  0DAC  0008               	return
  5461  0DAD                     __end_of_LCD_Char:
  5462                           
  5463                           	psect	text34
  5464  0C83                     __ptext34:	
  5465 ;; *************** function _LCD_init *****************
  5466 ;; Defined at:
  5467 ;;		line 41 in file "./lcd4bit.h"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;		None
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0, pclath, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5481 ;;      Params:         0       0       0       0       0
  5482 ;;      Locals:         0       0       0       0       0
  5483 ;;      Temps:          2       0       0       0       0
  5484 ;;      Totals:         2       0       0       0       0
  5485 ;;Total ram usage:        2 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 1
  5488 ;; This function calls:
  5489 ;;		_LCD_Command
  5490 ;; This function is called by:
  5491 ;;		_main
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           
  5496                           ;psect for function _LCD_init
  5497  0C83                     _LCD_init:
  5498  0C83                     l1971:	
  5499                           ;incstack = 0
  5500                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  5501                           
  5502                           
  5503                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  5504  0C83  1683               	bsf	3,5	;RP0=1, select bank1
  5505  0C84  1303               	bcf	3,6	;RP1=0, select bank1
  5506  0C85  1386               	bcf	6,7	;volatile
  5507                           
  5508                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  5509  0C86  1306               	bcf	6,6	;volatile
  5510                           
  5511                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  5512  0C87  1286               	bcf	6,5	;volatile
  5513                           
  5514                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  5515  0C88  1206               	bcf	6,4	;volatile
  5516                           
  5517                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  5518  0C89  1007               	bcf	7,0	;volatile
  5519                           
  5520                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  5521  0C8A  1087               	bcf	7,1	;volatile
  5522  0C8B                     l1973:
  5523                           
  5524                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  5525  0C8B  3002               	movlw	2
  5526  0C8C  120A  158A  252D  120A  158A  	fcall	_LCD_Command
  5527                           
  5528                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  5529  0C91  3028               	movlw	40
  5530  0C92  120A  158A  252D  120A  158A  	fcall	_LCD_Command
  5531                           
  5532                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  5533  0C97  3080               	movlw	128
  5534  0C98  120A  158A  252D  120A  158A  	fcall	_LCD_Command
  5535                           
  5536                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  5537  0C9D  300C               	movlw	12
  5538  0C9E  120A  158A  252D  120A  158A  	fcall	_LCD_Command
  5539                           
  5540                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  5541  0CA3  3006               	movlw	6
  5542  0CA4  120A  158A  252D  120A  158A  	fcall	_LCD_Command
  5543                           
  5544                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  5545  0CA9  3001               	movlw	1
  5546  0CAA  120A  158A  252D  120A  158A  	fcall	_LCD_Command
  5547  0CAF                     l1975:
  5548                           
  5549                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5550  0CAF  3041               	movlw	65
  5551  0CB0  00F4               	movwf	??_LCD_init+1
  5552  0CB1  30EE               	movlw	238
  5553  0CB2  00F3               	movwf	??_LCD_init
  5554  0CB3                     u1877:
  5555  0CB3  0BF3               	decfsz	??_LCD_init,f
  5556  0CB4  2CB3               	goto	u1877
  5557  0CB5  0BF4               	decfsz	??_LCD_init+1,f
  5558  0CB6  2CB3               	goto	u1877
  5559  0CB7  0000               	nop
  5560  0CB8                     l101:
  5561  0CB8  0008               	return
  5562  0CB9                     __end_of_LCD_init:
  5563                           
  5564                           	psect	text35
  5565  0D2D                     __ptext35:	
  5566 ;; *************** function _LCD_Command *****************
  5567 ;; Defined at:
  5568 ;;		line 13 in file "./lcd4bit.h"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  cmnd            1    wreg     unsigned char 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  cmnd            1    2[COMMON] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5582 ;;      Params:         0       0       0       0       0
  5583 ;;      Locals:         1       0       0       0       0
  5584 ;;      Temps:          2       0       0       0       0
  5585 ;;      Totals:         3       0       0       0       0
  5586 ;;Total ram usage:        3 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_LCD_init
  5592 ;;		_main
  5593 ;;		_print_dht11data
  5594 ;;		_rtc_lcd_data
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function _LCD_Command
  5600  0D2D                     _LCD_Command:
  5601                           
  5602                           ;incstack = 0
  5603                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  5604                           ;LCD_Command@cmnd stored from wreg
  5605  0D2D  00F2               	movwf	LCD_Command@cmnd
  5606  0D2E                     l1729:
  5607                           
  5608                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  5609  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  5610  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  5611  0D30  1007               	bcf	7,0	;volatile
  5612  0D31                     l1731:
  5613                           
  5614                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  5615  0D31  0872               	movf	LCD_Command@cmnd,w
  5616  0D32  0086               	movwf	6	;volatile
  5617  0D33                     l1733:
  5618                           
  5619                           ;./lcd4bit.h: 17:     RC1 = 1;
  5620  0D33  1487               	bsf	7,1	;volatile
  5621                           
  5622                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5623  0D34  3041               	movlw	65
  5624  0D35  00F1               	movwf	??_LCD_Command+1
  5625  0D36  30EE               	movlw	238
  5626  0D37  00F0               	movwf	??_LCD_Command
  5627  0D38                     u1887:
  5628  0D38  0BF0               	decfsz	??_LCD_Command,f
  5629  0D39  2D38               	goto	u1887
  5630  0D3A  0BF1               	decfsz	??_LCD_Command+1,f
  5631  0D3B  2D38               	goto	u1887
  5632  0D3C  0000               	nop
  5633  0D3D                     l1735:
  5634                           
  5635                           ;./lcd4bit.h: 19:     RC1 = 0;
  5636  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  5637  0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  5638  0D3F  1087               	bcf	7,1	;volatile
  5639                           
  5640                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5641  0D40  3041               	movlw	65
  5642  0D41  00F1               	movwf	??_LCD_Command+1
  5643  0D42  30EE               	movlw	238
  5644  0D43  00F0               	movwf	??_LCD_Command
  5645  0D44                     u1897:
  5646  0D44  0BF0               	decfsz	??_LCD_Command,f
  5647  0D45  2D44               	goto	u1897
  5648  0D46  0BF1               	decfsz	??_LCD_Command+1,f
  5649  0D47  2D44               	goto	u1897
  5650  0D48  0000               	nop
  5651  0D49                     l1737:
  5652                           
  5653                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  5654  0D49  0872               	movf	LCD_Command@cmnd,w
  5655  0D4A  00F0               	movwf	??_LCD_Command
  5656  0D4B  3003               	movlw	3
  5657  0D4C                     u1395:
  5658  0D4C  1003               	clrc
  5659  0D4D  0DF0               	rlf	??_LCD_Command,f
  5660  0D4E  3EFF               	addlw	-1
  5661  0D4F  1D03               	skipz
  5662  0D50  2D4C               	goto	u1395
  5663  0D51  1003               	clrc
  5664  0D52  0D70               	rlf	??_LCD_Command,w
  5665  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  5667  0D55  0086               	movwf	6	;volatile
  5668  0D56                     l1739:
  5669                           
  5670                           ;./lcd4bit.h: 22:     RC1 = 1;
  5671  0D56  1487               	bsf	7,1	;volatile
  5672  0D57                     l1741:
  5673                           
  5674                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5675  0D57  3041               	movlw	65
  5676  0D58  00F1               	movwf	??_LCD_Command+1
  5677  0D59  30EE               	movlw	238
  5678  0D5A  00F0               	movwf	??_LCD_Command
  5679  0D5B                     u1907:
  5680  0D5B  0BF0               	decfsz	??_LCD_Command,f
  5681  0D5C  2D5B               	goto	u1907
  5682  0D5D  0BF1               	decfsz	??_LCD_Command+1,f
  5683  0D5E  2D5B               	goto	u1907
  5684  0D5F  0000               	nop
  5685  0D60                     l1743:
  5686                           
  5687                           ;./lcd4bit.h: 24:     RC1 = 0;
  5688  0D60  1283               	bcf	3,5	;RP0=0, select bank0
  5689  0D61  1303               	bcf	3,6	;RP1=0, select bank0
  5690  0D62  1087               	bcf	7,1	;volatile
  5691  0D63                     l1745:
  5692                           
  5693                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5694  0D63  3041               	movlw	65
  5695  0D64  00F1               	movwf	??_LCD_Command+1
  5696  0D65  30EE               	movlw	238
  5697  0D66  00F0               	movwf	??_LCD_Command
  5698  0D67                     u1917:
  5699  0D67  0BF0               	decfsz	??_LCD_Command,f
  5700  0D68  2D67               	goto	u1917
  5701  0D69  0BF1               	decfsz	??_LCD_Command+1,f
  5702  0D6A  2D67               	goto	u1917
  5703  0D6B  0000               	nop
  5704  0D6C                     l95:
  5705  0D6C  0008               	return
  5706  0D6D                     __end_of_LCD_Command:
  5707                           
  5708                           	psect	text36
  5709  0EC7                     __ptext36:	
  5710 ;; *************** function _ADC_Init *****************
  5711 ;; Defined at:
  5712 ;;		line 73 in file "main.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;		None
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;		None
  5717 ;; Return value:  Size  Location     Type
  5718 ;;                  1    wreg      void 
  5719 ;; Registers used:
  5720 ;;		wreg
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5726 ;;      Params:         0       0       0       0       0
  5727 ;;      Locals:         0       0       0       0       0
  5728 ;;      Temps:          2       0       0       0       0
  5729 ;;      Totals:         2       0       0       0       0
  5730 ;;Total ram usage:        2 bytes
  5731 ;; Hardware stack levels used: 1
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_main
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           
  5740                           ;psect for function _ADC_Init
  5741  0EC7                     _ADC_Init:
  5742  0EC7                     l1991:	
  5743                           ;incstack = 0
  5744                           ; Regs used in _ADC_Init: [wreg]
  5745                           
  5746                           
  5747                           ;main.c: 75:     ADCON0 = 0x85;
  5748  0EC7  3085               	movlw	133
  5749  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  5750  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  5751  0ECA  009F               	movwf	31	;volatile
  5752                           
  5753                           ;main.c: 76:     ADCON1 = 0xC0;
  5754  0ECB  30C0               	movlw	192
  5755  0ECC  1683               	bsf	3,5	;RP0=1, select bank1
  5756  0ECD  1303               	bcf	3,6	;RP1=0, select bank1
  5757  0ECE  009F               	movwf	31	;volatile
  5758                           
  5759                           ;main.c: 77:     AV[0]= ((ADRESH<<8)+ADRESL);
  5760  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  5761  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  5762  0ED1  081E               	movf	30,w	;volatile
  5763  0ED2  00C7               	movwf	_AV+1
  5764  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  5765  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  5766  0ED5  081E               	movf	30,w	;volatile
  5767  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  5768  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  5769  0ED8  00C6               	movwf	_AV
  5770                           
  5771                           ;main.c: 79:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5772  0ED9  3041               	movlw	65
  5773  0EDA  00F1               	movwf	??_ADC_Init+1
  5774  0EDB  30EE               	movlw	238
  5775  0EDC  00F0               	movwf	??_ADC_Init
  5776  0EDD                     u1927:
  5777  0EDD  0BF0               	decfsz	??_ADC_Init,f
  5778  0EDE  2EDD               	goto	u1927
  5779  0EDF  0BF1               	decfsz	??_ADC_Init+1,f
  5780  0EE0  2EDD               	goto	u1927
  5781  0EE1  0000               	nop
  5782                           
  5783                           ;main.c: 80:     ADCON0 = 0x8D;
  5784  0EE2  308D               	movlw	141
  5785  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  5787  0EE5  009F               	movwf	31	;volatile
  5788                           
  5789                           ;main.c: 81:     ADCON1 = 0xC0;
  5790  0EE6  30C0               	movlw	192
  5791  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  5792  0EE8  1303               	bcf	3,6	;RP1=0, select bank1
  5793  0EE9  009F               	movwf	31	;volatile
  5794                           
  5795                           ;main.c: 82:     AV[1]= ((ADRESH<<8)+ADRESL);
  5796  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  5797  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  5798  0EEC  081E               	movf	30,w	;volatile
  5799  0EED  00C9               	movwf	_AV+3
  5800  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  5801  0EEF  1303               	bcf	3,6	;RP1=0, select bank1
  5802  0EF0  081E               	movf	30,w	;volatile
  5803  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  5804  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  5805  0EF3  00C8               	movwf	_AV+2
  5806                           
  5807                           ;main.c: 84:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5808  0EF4  3041               	movlw	65
  5809  0EF5  00F1               	movwf	??_ADC_Init+1
  5810  0EF6  30EE               	movlw	238
  5811  0EF7  00F0               	movwf	??_ADC_Init
  5812  0EF8                     u1937:
  5813  0EF8  0BF0               	decfsz	??_ADC_Init,f
  5814  0EF9  2EF8               	goto	u1937
  5815  0EFA  0BF1               	decfsz	??_ADC_Init+1,f
  5816  0EFB  2EF8               	goto	u1937
  5817  0EFC  0000               	nop
  5818                           
  5819                           ;main.c: 85:     ADCON0 = 0x95;
  5820  0EFD  3095               	movlw	149
  5821  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  5822  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  5823  0F00  009F               	movwf	31	;volatile
  5824                           
  5825                           ;main.c: 86:     ADCON1 = 0xC0;
  5826  0F01  30C0               	movlw	192
  5827  0F02  1683               	bsf	3,5	;RP0=1, select bank1
  5828  0F03  1303               	bcf	3,6	;RP1=0, select bank1
  5829  0F04  009F               	movwf	31	;volatile
  5830                           
  5831                           ;main.c: 87:     AV[2]= ((ADRESH<<8)+ADRESL);
  5832  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  5833  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  5834  0F07  081E               	movf	30,w	;volatile
  5835  0F08  00CB               	movwf	_AV+5
  5836  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  5837  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  5838  0F0B  081E               	movf	30,w	;volatile
  5839  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  5840  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  5841  0F0E  00CA               	movwf	_AV+4
  5842                           
  5843                           ;main.c: 89:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5844  0F0F  3041               	movlw	65
  5845  0F10  00F1               	movwf	??_ADC_Init+1
  5846  0F11  30EE               	movlw	238
  5847  0F12  00F0               	movwf	??_ADC_Init
  5848  0F13                     u1947:
  5849  0F13  0BF0               	decfsz	??_ADC_Init,f
  5850  0F14  2F13               	goto	u1947
  5851  0F15  0BF1               	decfsz	??_ADC_Init+1,f
  5852  0F16  2F13               	goto	u1947
  5853  0F17  0000               	nop
  5854                           
  5855                           ;main.c: 90:     ADCON0 = 0x9D;
  5856  0F18  309D               	movlw	157
  5857  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0F1B  009F               	movwf	31	;volatile
  5860                           
  5861                           ;main.c: 91:     ADCON1 = 0xC0;
  5862  0F1C  30C0               	movlw	192
  5863  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  5864  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  5865  0F1F  009F               	movwf	31	;volatile
  5866                           
  5867                           ;main.c: 92:     AV[3]= ((ADRESH<<8)+ADRESL);
  5868  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  5869  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  5870  0F22  081E               	movf	30,w	;volatile
  5871  0F23  00CD               	movwf	_AV+7
  5872  0F24  1683               	bsf	3,5	;RP0=1, select bank1
  5873  0F25  1303               	bcf	3,6	;RP1=0, select bank1
  5874  0F26  081E               	movf	30,w	;volatile
  5875  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  5876  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  5877  0F29  00CC               	movwf	_AV+6
  5878  0F2A                     l274:
  5879  0F2A  0008               	return
  5880  0F2B                     __end_of_ADC_Init:
  5881  007E                     btemp	set	126	;btemp
  5882  007E                     wtemp0	set	126
  5883                           
  5884                           	psect	idloc
  5885                           
  5886                           ;Config register IDLOC0 @ 0x2000
  5887                           ;	unspecified, using default values
  5888  2000                     	org	8192
  5889  2000  3FFF               	dw	16383
  5890                           
  5891                           ;Config register IDLOC1 @ 0x2001
  5892                           ;	unspecified, using default values
  5893  2001                     	org	8193
  5894  2001  3FFF               	dw	16383
  5895                           
  5896                           ;Config register IDLOC2 @ 0x2002
  5897                           ;	unspecified, using default values
  5898  2002                     	org	8194
  5899  2002  3FFF               	dw	16383
  5900                           
  5901                           ;Config register IDLOC3 @ 0x2003
  5902                           ;	unspecified, using default values
  5903  2003                     	org	8195
  5904  2003  3FFF               	dw	16383
  5905                           
  5906                           	psect	config
  5907                           
  5908                           ;Config register CONFIG @ 0x2007
  5909                           ;	Oscillator Selection bits
  5910                           ;	FOSC = HS, HS oscillator
  5911                           ;	Watchdog Timer Enable bit
  5912                           ;	WDTE = OFF, WDT disabled
  5913                           ;	Power-up Timer Enable bit
  5914                           ;	PWRTE = OFF, PWRT disabled
  5915                           ;	Brown-out Reset Enable bit
  5916                           ;	BOREN = ON, BOR enabled
  5917                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5918                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  5919                           ;	Data EEPROM Memory Code Protection bit
  5920                           ;	CPD = OFF, Data EEPROM code protection off
  5921                           ;	Flash Program Memory Write Enable bits
  5922                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5923                           ;	In-Circuit Debugger Mode bit
  5924                           ;	DEBUG = 0x1, unprogrammed default
  5925                           ;	Flash Program Memory Code Protection bit
  5926                           ;	CP = OFF, Code protection off
  5927  2007                     	org	8199
  5928  2007  3FFA               	dw	16378

Data Sizes:
    Strings     12
    Constant    0
    Data        2
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _rtc_terminal_data->_convup
    _rtc_lcd_data->_LCD_Char
    _rtc_lcd_data->_LCD_Command
    _rtc_getdata->_rtc_read_byte
    _rtc_read_byte->_rtc_send
    _print_serialnumber->_tx_sn
    _print_dht11data->_show_multidigits
    _print_dht11data->_tx_sn
    _tx_sn->___awdiv
    _show_multidigits->___awdiv
    _show->_LCD_Char
    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_print_analogvoltages
    _print_serialnumber->_tx_sn
    _print_dht11data->_show_multidigits
    _print_dht11data->_tx_sn
    _print_analogvoltages->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   23759
                                             35 BANK0      3     3      0
                           _ADC_Init
                        _LCD_Command
                           _LCD_init
               _print_analogvoltages
                    _print_dht11data
                 _print_serialnumber
                        _rtc_getdata
                            _rtc_int
                       _rtc_lcd_data
                  _rtc_terminal_data
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_terminal_data                                    0     0      0      66
                              _convd
                             _convup
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _rtc_lcd_data                                         0     0      0     132
                           _LCD_Char
                        _LCD_Command
                              _convd
                             _convup
 ---------------------------------------------------------------------------------
 (2) _convup                                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _convd                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rtc_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_getdata                                          1     1      0      67
                                              4 COMMON     1     1      0
                      _rtc_read_byte
 ---------------------------------------------------------------------------------
 (2) _rtc_read_byte                                        3     3      0      67
                                              1 COMMON     3     3      0
                            _rtc_nak
                           _rtc_read
                            _rtc_res
                           _rtc_send
                           _rtc_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_stop                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_res                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_read                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_nak                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_serialnumber                                   0     0      0    6233
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (1) _print_dht11data                                      8     8      0   12703
                                             14 BANK0      8     8      0
                      _CheckResponse
                        _LCD_Command
                           _ReadData
                        _StartSignal
                               _show
                   _show_multidigits
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (2) _tx_sn                                               16    14      2    6211
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _show_multidigits                                    16    14      2    6157
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _show                                                 2     2      0     155
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _StartSignal                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadData                                             4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _CheckResponse                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _print_analogvoltages                                 5     5      0    4448
                                             30 BANK0      5     5      0
                           _LCD_Char
                            _LCD_num
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_num                                             18    14      4    4202
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (3) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1375
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Command
   _LCD_init
     _LCD_Command
   _print_analogvoltages
     _LCD_Char
     _LCD_num
       _LCD_Char
       ___aldiv
         ___lmul (ARG)
       ___lmul
       ___lwdiv
       ___lwmod
       _intdigits_chardigits
     _tx
   _print_dht11data
     _CheckResponse
     _LCD_Command
     _ReadData
     _StartSignal
     _show
       _LCD_Char
     _show_multidigits
       _LCD_Char
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
     _tx
     _tx_sn
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
       _tx
   _print_serialnumber
     _tx
     _tx_sn
   _rtc_getdata
     _rtc_read_byte
       _rtc_nak
         _waitmssp
       _rtc_read
         _waitmssp
       _rtc_res
         _waitmssp
       _rtc_send
         _waitmssp
       _rtc_stop
         _waitmssp
       _waitmssp
   _rtc_int
   _rtc_lcd_data
     _LCD_Char
     _LCD_Command
     _convd
     _convup
   _rtc_terminal_data
     _convd
     _convup
     _tx
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 07 10:27:22 2022

                            pc 0002                   ?_LCD_Command 0070                             _AV 0046  
                           l95 0D6C                             l98 0DAC                             _RH 005A  
                           _Ch 0065                   ___awdiv@sign 0076                             _sn 006B  
                           _tx 0BB1                             fsr 0004          print_analogvoltages@i 0041  
        print_analogvoltages@j 0042                            l101 0CB8                            l110 0C61  
                          l104 022A                            l113 0BEF                            l210 0B8C  
                          l131 0BBA                            l123 0654                            l132 0BBB  
                          l204 0C28                            l213 0BFA                            l301 04C2  
                          l222 0BC7                            l126 0BE0                            l119 0654  
                          l207 0B85                            l144 07E6                            l216 0C00  
                          l401 0E78                            l129 0BB6                            l209 0B8B  
                          l225 0CF4                            l226 0D02                            l250 0B84  
                          l235 0BA6                            l148 07E6                            l244 0BB0  
                          l229 0D2C                            l174 0C82                            l238 0B9D  
                          l247 0BD3                            l184 0DDF                            l169 0C42  
                          l265 0069                            l274 0F2A                            l266 0090  
                          l187 0DEE                            l179 0DAE                            l452 00E3  
                          l540 0F91                            l292 0300                            l277 0C12  
                          l462 016B                            l287 0FFF                            l295 0EC6  
                          l553 005E                            l298 03E1                            ?_tx 0070  
                          l659 0E32                            l669 0CF2                            _RC0 0038  
                          _RC1 0039                            _PEN 048A                            u900 0BBA  
                          _SEN 0488                            u901 0BB9                            u910 0C00  
                          u911 0BFF                            u920 0E3F                            u921 0E3E  
                          u931 0E48                            u932 0E4F                            u933 0E56  
                          u960 0E70                            u880 0B8B                            u961 0E6F  
                          u945 0E58                            u881 0B8A                            u970 00D6  
                          u971 00D5                            u955 0E60                            u980 00E7  
                          u981 00E6                            u990 0106                            u895 0D8C  
                          u991 0105                            _Sum 0058                            _day 0061  
                          _avv 0051                            _min 0063                            _sec 0064  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0076  
                          tx@a 0070         show_multidigits@digit1 0026         show_multidigits@digit2 0028  
       show_multidigits@digit3 0024         show_multidigits@digit4 0020                           ??_tx 0070  
              __end_of_LCD_num 022B                           l2001 0FAB                           l2011 0FBF  
                         l2003 0FB1                           l2021 0FDF                           l2013 0FC6  
                         l2023 0FE5                           l2015 0FCD                           l2031 0235  
                         l2025 0FF3                           l2017 0FD3                           l2009 0FB4  
                         l2041 02AA                           l2033 023C                           l2027 0FF9  
                         l2019 0FD9                           l2051 02D2                           l2043 02B0  
                         l2035 0271                           l1501 0D71                           l2061 02FA  
                         l2053 02D8                           l2045 02B6                           l2037 0296  
                         l2029 022B                           l1511 0D97                           l1503 0D73  
                         l2055 02DE                           l2047 02C1                           l2039 02A4  
                         l1513 0DA0                           l1505 0D7D                           l1601 0F2C  
                         l2057 02E4                           l2049 02CC                           l1521 0BF1  
                         l2081 005F                           l1515 0DA3                           l1507 0D89  
                         l1611 0F40                           l1603 0F30                           l2059 02EF  
                         l1531 0BBF                           l1523 0BF5                           l2091 00AA  
                         l2083 008D                           l1509 0D96                           l1701 0E28  
                         l1517 0BE1                           l1621 0F56                           l1613 0F44  
                         l1605 0F35                           l1541 0BA7                           l1533 0BC4  
                         l1525 0B9E                           l2093 00AF                           l2085 0094  
                         l1551 0E56                           l1703 0E2E                           l1711 0CC2  
                         l1519 0BB2                           l1631 0F76                           l1623 0F5A  
                         l1615 0F46                           l1607 0F37                           l1543 0BAB  
                         l1527 0BA1                           l2087 009F                           l1561 00D2  
                         l1553 0E5F                           l1545 0E33                           l1721 0CE1  
                         l1713 0CC9                           l1633 0F7D                           l1625 0F5E  
                         l1617 0F4C                           l1609 0F3B                           l1801 0533  
                         l1529 0BBC                           l1537 0B95                           l2089 00A5  
                         l1731 0D31                           l1571 00FE                           l1563 00D6  
                         l1555 0E70                           l1547 0E3B                           l1723 0CE8  
                         l1715 0CCD                           l1707 0CB9                           l1627 0F6F  
                         l1619 0F4F                           l1635 0F83                           l1651 0012  
                         l1643 0006                           l1811 058E                           l1803 0559  
                         l1539 0B98                           l1741 0D57                           l1733 0D33  
                         l1581 0123                           l1573 0106                           l1565 00E7  
                         l1549 0E3F                           l1717 0CD1                           l1709 0CBF  
                         l1725 0CEE                           l1901 0C2F                           l1637 0F88  
                         l1629 0F75                           l1661 002B                           l1653 0016  
                         l1645 0007                           l1821 05D9                           l1813 0597  
                         l1805 055D                           l1743 0D60                           l1735 0D3D  
                         l1583 0135                           l1575 0109                           l1591 0153  
                         l1567 00F2                           l1559 00CF                           l1719 0CDB  
                         l1751 01A0                           l1911 0C6A                           l1903 0C37  
                         l1639 0F8D                           l1671 004A                           l1663 002F  
                         l1655 001B                           l1647 000B                           l1831 0631  
                         l1823 05DD                           l1807 0574                           l1815 05A1  
                         l1745 0D63                           l1737 0D49                           l1729 0D2E  
                         l1593 0158                           l1585 0143                           l1577 0116  
                         l1569 00F6                           l1681 0DEF                           l1761 01F8  
                         l1753 01B3                           l1913 0C70                           l1921 0DAD  
                         l1905 0C3F                           l1665 0033                           l1657 0021  
                         l1673 0050                           l1649 0010                           l1833 0638  
                         l1825 05F4                           l1817 05AA                           l1809 0587  
                         l1841 065E                           l1497 0B85                           l1739 0D56  
                         l1499 0D6E                           l1595 0163                           l1587 0144  
                         l1579 011A                           l1691 0E05                           l1683 0DF1  
                         l1763 01FF                           l1755 01C6                           l1747 016C  
                         l1915 0C74                           l1907 0C62                           l1931 0DBF  
                         l1771 0C44                           l1675 0055                           l1667 003D  
                         l1659 0024                           l1835 0641                           l1827 0607  
                         l1819 05B3                           l1851 068F                           l1843 0666  
                         l1589 014D                           l1693 0E09                           l1685 0DF7  
                         l1765 0205                           l1757 01DD                           l1749 016C  
                         l1917 0C7A                           l1909 0C65                           l1933 0DD0  
                         l1773 0C45                           l1677 005A                           l1669 0043  
                         l1837 064A                           l1829 061E                           l1781 04CC  
                         l1861 06C5                           l1853 06A2                           l1845 066F  
                         l1695 0E1A                           l1687 0DFA                           l1767 020E  
                         l1759 01E1                           l1919 0C7E                           l1935 0DE3  
                         l1927 0DB4                           l1775 0C51                           l1599 0F2B  
                         l1791 04FD                           l1783 04D4                           l1871 0720  
                         l1863 06EB                           l1855 06A9                           l1847 0678  
                         l1839 0655                           l1951 0D0E                           l1943 0CF4  
                         l1697 0E20                           l1689 0E01                           l1769 0217  
                         l1937 0DE7                           l1929 0DB9                           l1777 0C55  
                         l1793 0510                           l1785 04DD                           l1881 076B  
                         l1873 0729                           l1865 06EF                           l1849 068B  
                         l1857 06B3                           l1953 0D13                           l1945 0CF9  
                         l1971 0C83                           l1699 0E21                           l1939 0DED  
                         l1795 0517                           l1787 04E6                           l1779 04C3  
                         l1891 07C3                           l1883 076F                           l1867 0706  
                         l1859 06BC                           l1875 0733                           l1955 0D19  
                         l1947 0CFD                           l1963 0BC9                           l1973 0C8B  
                         l1789 04F9                           l1797 0521                           l1893 07CA  
                         l1885 0786                           l1877 073C                           l1869 0719  
                         l1957 0D21                           l1949 0D08                           l1981 0C20  
                         l1991 0EC7                           l1975 0CAF                           l1799 052A  
                         l1895 07D3                           l1887 0799                           l1879 0745  
                         l1983 0C01                           l1959 0D26                           l1967 0B81  
                         l1993 0F92                           l1897 07DC                           l1889 07B0  
                         l1985 0E79                           l1977 0BD4                           l1899 0C29  
                         l1979 0C13                           l1987 0301                           l1989 03E2  
                         l1999 0F95                           STR_1 080C                           STR_2 0806  
                         u1010 011A                           u1011 0119                           u1005 010B  
                         u1030 0135                           u1110 0F5E                           u1031 0134  
                         u1111 0F5D                           u1025 011C                           u1105 0F50  
                         u1050 0153                           u1130 0F6F                           u1210 0033  
                         u1051 0152                           u1035 0131                           u1131 0F6E  
                         u1211 0032                           u1060 0158                           u1300 0E1A  
                         u1220 003D                           u1061 0157                           u1045 0145  
                         u1301 0E19                           u1125 0F5F                           u1221 003C  
                         u1205 0025                           u1150 0F83                           u1070 0F30  
                         u1151 0F82                           u1135 0F6B                           u1071 0F2F  
                         u1320 0E2E                           u1400 0C61                           u1160 0F88  
                         u1080 0F3B                           u1240 0050                           u1321 0E2D  
                         u1305 0E16                           u1401 0C60                           u1161 0F87  
                         u1145 0F77                           u1081 0F3A                           u1241 004F  
                         u1225 0039                           u1330 0CBF                           u1090 0F4C  
                         u1250 0055                           u1170 000B                           u1410 04CC  
                         u1315 0E22                           u1331 0CBE                           u1091 0F4B  
                         u1251 0054                           u1235 0044                           u1171 000A  
                         u1411 04CB                           u1260 0DF7                           u1180 0016  
                         u1420 04DD                           u1500 0678                           u1261 0DF6  
                         u1181 0015                           u1421 04DC                           u1501 0677  
                         u1350 0CD1                           u1190 0021                           u1430 04E6  
                         u1510 06BC                           u1351 0CD0                           u1191 0020  
                         u1431 04E5                           u1511 06BB                           u1280 0E09  
                         u1360 0CDB                           u1440 052A                           u1520 06C5  
                         u1281 0E08                           u1361 0CDA                           u1345 0CC3  
                         u1441 0529                           u1521 06C4                           u1610 0DE3  
                         u1450 0533                           u1530 073C                           u1275 0DFB  
                         u1611 0DE2                           u1451 0532                           u1531 073B  
                         u1380 0CEE                           u1700 0FFF                           u1620 0DED  
                         u1604 0DD8                           u1460 05AA                           u1540 0745  
                         u1381 0CED                           u1365 0CD7                           u1701 0FFE  
                         u1621 0DEC                           u1605 0DD6                           u1461 05A9  
                         u1541 0744                           u1550 0C70                           u1470 05B3  
                         u1710 023C                           u1630 0D08                           u1295 0E0A  
                         u1375 0CE2                           u1551 0C6F                           u1471 05B2  
                         u1711 023B                           u1631 0D07                           u1560 0C7A  
                         u1480 065E                           u1720 0296                           u1561 0C79  
                         u1481 065D                           u1721 0295                           u1570 0DB4  
                         u1490 066F                           u1650 0C1D                           u1730 0094  
                         u1395 0D4C                           u1571 0DB3                           u1491 066E  
                         u1651 0C19                           u1731 0093                           u1580 0DBF  
                         u1581 0DBE                           u1725 0292                           u1645 0BCC  
                         u1670 0FC6                           u1671 0FC5                           u1807 0C72  
                         u1680 0FD3                           u1664 0C20                           u1681 0FD2  
                         u1817 0C7C                           u1690 0FE5                           u1594 0DC7  
                         u1907 0D5B                           u1827 0FED                           u1691 0FE4  
                         u1595 0DC5                           u1747 009A                           u1917 0D67  
                         u1837 0D78                           u1757 00BD                           u1927 0EDD  
                         u1847 0D84                           u1767 0C33                           u1937 0EF8  
                         u1857 0D9B                           u1777 0C3C                           u1947 0F13  
                         u1867 0DA7                           u1787 0DB6                           u1877 0CB3  
                         u1797 0C67                           u1887 0D38                           u1897 0D44  
                         _RCEN 048B                           _RCIF 0065         show_multidigits@result 0022  
                         _RSEN 0489                           _TXIF 0064   __end_of_print_analogvoltages 1000  
                         _Temp 005C                           _date 0060                           _main 005F  
                         _hour 0062                           _show 0C43                           _year 005E  
                         btemp 007E               __end_of_ADC_Init 0F2B                           start 0000  
   __size_of_rtc_terminal_data 00E1               __end_of_LCD_Char 0DAD                   LCD_Char@data 0072  
             __end_of_LCD_init 0CB9                ??_rtc_read_byte 0071                __end_of___aldiv 016C  
                        ?_main 0070                          _ACKEN 048C                          _ACKDT 048D  
              __end_of___awdiv 0F92                __end_of___awmod 005F                          ?_show 0070  
              ___awdiv@divisor 0070                __end_of___lwdiv 0E33                __end_of___lwmod 0CF3  
              ___awdiv@counter 0075                          _RCREG 001A                          _RCSTA 0018  
      show_multidigits@result1 002A                          _SPBRG 0099                          _PORTB 0006  
                        _SSPIF 0063                          _TXREG 0019                          _TXSTA 0098  
                        _Check 006A            ___lmul@multiplicand 0074                          _convd 0B80  
                        _month 005F                          _tx_sn 0655                __end_of_ser_int 0BE1  
                        pclath 000A             _print_serialnumber 0C01                __end_of_rtc_nak 0BB1  
              __end_of_rtc_int 0C29                __end_of_rtc_res 0B9E                          show@s 0074  
                        status 0003                          wtemp0 007E            ?_print_serialnumber 0070  
              __initialization 07E7                   __end_of_main 00CF                   __end_of_show 0C62  
             __end_of_ReadData 0DEF                         ??_main 0043                         ??_show 0073  
               LCD_num@result1 003A           _intdigits_chardigits 0BE1                      ??_LCD_num 007E  
         ??_print_serialnumber 007B                         _ADCON0 001F                         _ADCON1 009F  
                       ?_convd 0070                         _ADRESH 001E                         _ADRESL 009E  
             ___awdiv@dividend 0072                         ?_tx_sn 0079                         _SSPADD 0093  
                       _TRISC3 043B                         _TRISC4 043C                         _SSPCON 0014  
                       _SSPBUF 0013                         ___lmul 0E33                      ??___aldiv 007D  
                    ??___awdiv 0074                      ??___awmod 0074                      ??___lwdiv 0074  
                    ??___lwmod 0074                         _convup 0BC8               ___awdiv@quotient 0077  
              ___awmod@divisor 0070                ___awmod@counter 0075           _print_analogvoltages 0F92  
         __size_of_LCD_Command 0040          ?_intdigits_chardigits 0070         __size_of_CheckResponse 0021  
                    ?_ADC_Init 0070               __end_of_rtc_read 0BC8               __end_of_waitmssp 0B8D  
             __end_of_rtc_send 0C01                      ??_ser_int 0070                   ?_rtc_getdata 0070  
             __end_of_rtc_stop 0BA7                      ??_rtc_nak 0070                      ??_rtc_int 0070  
                    ??_rtc_res 0070      __size_of_show_multidigits 0192                      ?_LCD_Char 0070  
      __end_of__initialization 07FC                      ?_LCD_init 0070                 __pcstackCOMMON 0070  
     __size_of_print_dht11data 00D6                   __pidataBANK0 0004                  ??_StartSignal 0070  
                __end_of_convd 0B85                  __end_of_tx_sn 07E7          ?_print_analogvoltages 0070  
                   __end_of_tx 0BBC                     ??_ADC_Init 0070                        ??_convd 0070  
                      ??_tx_sn 007B                     __pbssBANK0 0046                      ?_ReadData 0070  
               tx_sn@remainder 002C                     ??_LCD_Char 0070                     ??_LCD_init 0073  
                _CheckResponse 0C62                   tx_sn@result1 002A                     __pmaintext 005F  
                      ?___lmul 0070                        ?_convup 0070                        _ACKSTAT 048E  
               ___lmul@product 0079         ??_intdigits_chardigits 0076            __end_of_StartSignal 0C43  
                      _LCD_num 016C                     __stringtab 0800            show_multidigits@val 0079  
                   ??_ReadData 0070                 ?_CheckResponse 0070                        _T_byte1 0069  
                      _T_byte2 0068                      ?_rtc_read 0070                      ?_waitmssp 0070  
                      ___aldiv 00CF                      ?_rtc_send 0070                      ?_rtc_stop 0070  
                      ___awdiv 0F2B                __size_of___lmul 0046                        ___awmod 0006  
                      ___lwdiv 0DEF                        ___lwmod 0CB9         ??_print_analogvoltages 003E  
              __size_of_convup 000C                        __ptext1 0BD4                        __ptext2 03E2  
                      __ptext3 0301                        __ptext4 0BC8                        __ptext5 0B80  
                      __ptext6 0C13                        __ptext7 0E79                        __ptext8 0CF3  
                      __ptext9 0B9E              ??_print_dht11data 002E          __end_of_rtc_read_byte 0D2D  
                      _message 004E               ___awmod@dividend 0072               ___aldiv@dividend 0024  
                      _ser_int 0BD4                        _rtc_nak 0BA7                        _rtc_int 0C13  
                      _rtc_res 0B95                        clrloop0 0B8E           __size_of_rtc_getdata 004E  
         end_of_initialization 07FC               _show_multidigits 04C3                  ?_rtc_lcd_data 0070  
             ___aldiv@quotient 002A                     ??_rtc_read 0070                     ??_waitmssp 0070  
                   ??_rtc_send 0070                     ??_rtc_stop 0070                    _StartSignal 0C29  
                    _PORTDbits 0008               rtc_read_byte@rec 0073    __size_of_print_serialnumber 0012  
                    _TRISBbits 0086                      _TRISCbits 0087                      _TRISDbits 0088  
            __size_of_ADC_Init 0064                ??_CheckResponse 0070                      ReadData@i 0072  
                    ReadData@j 0073              __size_of_LCD_Char 0040                 ??_rtc_lcd_data 0073  
            __size_of_LCD_init 0036                  ??_LCD_Command 0070                 __end_of___lmul 0E79  
               __end_of_convup 0BD4            start_initialization 07E7                  LCD_num@digit1 0032  
                LCD_num@digit2 0034                  LCD_num@digit3 0036                     LCD_num@val 002E  
                LCD_num@result 0038              __size_of_ReadData 0042                       ??___lmul 0078  
                  __pdataBANK0 006B                       ??_convup 0070               LCD_num@remainder 003C  
          __end_of_LCD_Command 0D6D                       ?_LCD_num 002E                      ___latbits 0002  
                __pcstackBANK0 0020                    tx_sn@digit1 0026                    tx_sn@digit2 0028  
                  tx_sn@digit3 0024                    tx_sn@digit4 0020               ___lwdiv@dividend 0072  
              _print_dht11data 022B                    tx_sn@result 0022                       ?___aldiv 0020  
                     ?___awdiv 0070                       ?___awmod 0070                       ?___lwdiv 0070  
                     ?___lwmod 0070       __end_of_show_multidigits 0655              __size_of_rtc_read 000C  
            __size_of_waitmssp 0008              __size_of_rtc_send 0011              __size_of_rtc_stop 0009  
                    __pstrings 0800  __size_of_intdigits_chardigits 000F                       _ADC_Init 0EC7  
         __end_of_rtc_lcd_data 03E2                       ?_ser_int 0070                       ?_rtc_nak 0070  
                     ?_rtc_int 0070                       ?_rtc_res 0070               ___lwdiv@quotient 0075  
               __size_of_convd 0005                 __size_of_tx_sn 0192                    __size_of_tx 000B  
              ___aldiv@divisor 0020                       _LCD_Char 0D6D                ___aldiv@counter 0028  
                     _LCD_init 0C83                      clear_ram0 0B8D                       _GO_nDONE 00FA  
                 ?_StartSignal 0070                    _LCD_Command 0D2D  __size_of_print_analogvoltages 006E  
                  __stringbase 0805                       _RH_byte1 0067                       _RH_byte2 0066  
                ??_rtc_getdata 0074               __size_of_LCD_num 00BF              ___lmul@multiplier 0070  
                    convup@bcd 0071          intdigits_chardigits@a 0070          intdigits_chardigits@b 0072  
        intdigits_chardigits@c 0074        __end_of_print_dht11data 0301                       _ReadData 0DAD  
       __size_of_rtc_read_byte 003A               __size_of___aldiv 009D               __size_of___awdiv 0067  
             __size_of___awmod 0059               __size_of___lwdiv 0044               __size_of___lwmod 003A  
           __end_of__stringtab 0806     __end_of_print_serialnumber 0C13                ___lwdiv@divisor 0070  
              ___lwdiv@counter 0077                       __ptext10 0BF0                       __ptext11 0B95  
                     __ptext20 0F2B                       __ptext12 0BBC                       __ptext21 0C43  
                     __ptext13 0BA7                       __ptext30 0DEF                       __ptext22 0C29  
                     __ptext14 0B85                       __ptext31 0E33                       __ptext23 0DAD  
                     __ptext15 0C01                       __ptext32 00CF                       __ptext24 0C62  
                     __ptext16 022B                       __ptext33 0D6D                       __ptext25 0F92  
                     __ptext17 0655                       __ptext34 0C83                       __ptext26 0BB1  
                     __ptext18 04C3                       __ptext35 0D2D                       __ptext27 016C  
                     __ptext19 0006                       __ptext36 0EC7                       __ptext28 0BE1  
                     __ptext29 0CB9               __size_of_ser_int 000D               __size_of_rtc_nak 000A  
             __size_of_rtc_int 0016               __size_of_rtc_res 0009            __end_of_rtc_getdata 0EC7  
        __end_of_CheckResponse 0C83                  __size_of_main 0070                  __size_of_show 001F  
                     _humidity 0056              _rtc_terminal_data 03E2                       _rtc_read 0BBC  
                     _waitmssp 0B85                       _rtc_send 0BF0                       _rtc_stop 0B9E  
           ?_rtc_terminal_data 0070                      rtc_send@a 0070                       convd@bcd 0070  
        __size_of_rtc_lcd_data 00E1            ??_rtc_terminal_data 0072                  _rtc_read_byte 0CF3  
              LCD_Command@cmnd 0072               ?_print_dht11data 0070               ___lwmod@dividend 0072  
                    stringcode 0800      __end_of_rtc_terminal_data 04C3                   _rtc_lcd_data 0301  
    show_multidigits@remainder 002C              ?_show_multidigits 0079           __size_of_StartSignal 001A  
           ??_show_multidigits 007B                    _temperature 0054                       tx_sn@val 0079  
               ?_rtc_read_byte 0070                ___lwmod@divisor 0070                ___lwmod@counter 0075  
                     stringdir 0800                       stringtab 0800                   ___aldiv@sign 0029  
                  _rtc_getdata 0E79              rtc_read_byte@addr 0072   __end_of_intdigits_chardigits 0BF0  
