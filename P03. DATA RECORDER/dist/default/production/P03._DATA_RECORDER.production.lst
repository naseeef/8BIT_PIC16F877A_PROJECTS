

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 06 00:16:39 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195                           
   196                           	psect	idataBANK0
   197  0008                     __pidataBANK0:
   198                           
   199                           ;initializer for _sn
   200  0008  3401               	retlw	1
   201  0009  3400               	retlw	0
   202  001E                     _ADRESH	set	30
   203  001F                     _ADCON0	set	31
   204  0008                     _PORTDbits	set	8
   205  001A                     _RCREG	set	26
   206  0019                     _TXREG	set	25
   207  0018                     _RCSTA	set	24
   208  0006                     _PORTB	set	6
   209  00FA                     _GO_nDONE	set	250
   210  0065                     _RCIF	set	101
   211  0064                     _TXIF	set	100
   212  0039                     _RC1	set	57
   213  0038                     _RC0	set	56
   214  009E                     _ADRESL	set	158
   215  009F                     _ADCON1	set	159
   216  0087                     _TRISC	set	135
   217  0086                     _TRISB	set	134
   218  0088                     _TRISDbits	set	136
   219  0099                     _SPBRG	set	153
   220  0098                     _TXSTA	set	152
   221                           
   222                           	psect	strings
   223  0800                     __pstrings:
   224  0800                     stringtab:
   225  0800                     __stringtab:
   226  0800                     stringcode:	
   227                           ;	String table - string pointers are 1 byte each
   228                           
   229  0800                     stringdir:
   230  0800  3008               	movlw	high stringdir
   231  0801  008A               	movwf	10
   232  0802  0804               	movf	4,w
   233  0803  0A84               	incf	4,f
   234  0804  0782               	addwf	2,f
   235  0805                     __stringbase:
   236  0805  3400               	retlw	0
   237  0806                     __end_of__stringtab:
   238  0806                     STR_2:
   239  0806  3458               	retlw	88	;'X'
   240  0807  3458               	retlw	88	;'X'
   241  0808  3458               	retlw	88	;'X'
   242  0809  3420               	retlw	32	;' '
   243  080A  3462               	retlw	98	;'b'
   244  080B  3465               	retlw	101	;'e'
   245  080C  3466               	retlw	102	;'f'
   246  080D  346F               	retlw	111	;'o'
   247  080E  3472               	retlw	114	;'r'
   248  080F  3465               	retlw	101	;'e'
   249  0810  3420               	retlw	32	;' '
   250  0811  3474               	retlw	116	;'t'
   251  0812  3468               	retlw	104	;'h'
   252  0813  3469               	retlw	105	;'i'
   253  0814  3473               	retlw	115	;'s'
   254  0815  3420               	retlw	32	;' '
   255  0816  346C               	retlw	108	;'l'
   256  0817  3469               	retlw	105	;'i'
   257  0818  346E               	retlw	110	;'n'
   258  0819  3465               	retlw	101	;'e'
   259  081A  3400               	retlw	0
   260  081B                     STR_1:
   261  081B  3458               	retlw	88	;'X'
   262  081C  3458               	retlw	88	;'X'
   263  081D  3458               	retlw	88	;'X'
   264  081E  3420               	retlw	32	;' '
   265  081F  3461               	retlw	97	;'a'
   266  0820  3466               	retlw	102	;'f'
   267  0821  3474               	retlw	116	;'t'
   268  0822  3465               	retlw	101	;'e'
   269  0823  3472               	retlw	114	;'r'
   270  0824  3420               	retlw	32	;' '
   271  0825  3474               	retlw	116	;'t'
   272  0826  3468               	retlw	104	;'h'
   273  0827  3469               	retlw	105	;'i'
   274  0828  3473               	retlw	115	;'s'
   275  0829  3420               	retlw	32	;' '
   276  082A  346C               	retlw	108	;'l'
   277  082B  3469               	retlw	105	;'i'
   278  082C  346E               	retlw	110	;'n'
   279  082D  3465               	retlw	101	;'e'
   280  082E  3400               	retlw	0
   281                           
   282                           	psect	cinit
   283  07E7                     start_initialization:	
   284                           ; #config settings
   285                           
   286  07E7                     __initialization:
   287                           
   288                           ; Initialize objects allocated to BANK0
   289  07E7  120A  118A  2008  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   290  07EC  00D8               	movwf	__pdataBANK0& (0+127)
   291  07ED  120A  118A  2009  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   292  07F2  00D9               	movwf	(__pdataBANK0+1)& (0+127)
   293                           
   294                           ; Clear objects allocated to BANK0
   295  07F3  1383               	bcf	3,7	;select IRP bank0
   296  07F4  3046               	movlw	low __pbssBANK0
   297  07F5  0084               	movwf	4
   298  07F6  3058               	movlw	low (__pbssBANK0+18)
   299  07F7  120A  158A  2616  120A  118A  	fcall	clear_ram0
   300  07FC                     end_of_initialization:	
   301                           ;End of C runtime variable initialization code
   302                           
   303  07FC                     __end_of__initialization:
   304  07FC  0183               	clrf	3
   305  07FD  120A  118A  2A08   	ljmp	_main	;jump to C main() function
   306                           
   307                           	psect	bssBANK0
   308  0046                     __pbssBANK0:
   309  0046                     _AV:
   310  0046                     	ds	8
   311  004E                     _message:
   312  004E                     	ds	3
   313  0051                     _avv:
   314  0051                     	ds	3
   315  0054                     _temperature:
   316  0054                     	ds	2
   317  0056                     _humidity:
   318  0056                     	ds	2
   319                           
   320                           	psect	dataBANK0
   321  0058                     __pdataBANK0:
   322  0058                     _sn:
   323  0058                     	ds	2
   324                           
   325                           	psect	clrtext
   326  0E16                     clear_ram0:	
   327                           ;	Called with FSR containing the base address, and
   328                           ;	W with the last address+1
   329                           
   330  0E16  0064               	clrwdt	;clear the watchdog before getting into this loop
   331  0E17                     clrloop0:
   332  0E17  0180               	clrf	0	;clear RAM location pointed to by FSR
   333  0E18  0A84               	incf	4,f	;increment pointer
   334  0E19  0604               	xorwf	4,w	;XOR with final address
   335  0E1A  1903               	btfsc	3,2	;have we reached the end yet?
   336  0E1B  3400               	retlw	0	;all done for this memory range, return
   337  0E1C  0604               	xorwf	4,w	;XOR again to restore value
   338  0E1D  2E17               	goto	clrloop0	;do the next byte
   339                           
   340                           	psect	cstackCOMMON
   341  0070                     __pcstackCOMMON:
   342  0070                     ?_intdigits_chardigits:
   343  0070                     ?_ADC_Init:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ??_ADC_Init:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_print_serialnumber:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_print_analogvoltages:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_LCD_Command:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ??_LCD_Command:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_LCD_Char:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_LCD_Char:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_LCD_init:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_show:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_ser_int:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ??_ser_int:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_tx:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ??_tx:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_problem:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_dht22_read_byte:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ??_dht22_read_byte:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_main:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?___wmul:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?___awdiv:	
   401                           ; 2 bytes @ 0x0
   402                           
   403  0070                     ?___awmod:	
   404                           ; 2 bytes @ 0x0
   405                           
   406  0070                     ?___lwdiv:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0070                     ?___lwmod:	
   410                           ; 2 bytes @ 0x0
   411                           
   412  0070                     ?___lmul:	
   413                           ; 2 bytes @ 0x0
   414                           
   415  0070                     tx@a:	
   416                           ; 4 bytes @ 0x0
   417                           
   418  0070                     intdigits_chardigits@a:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ___wmul@multiplier:	
   422                           ; 2 bytes @ 0x0
   423                           
   424  0070                     ___awdiv@divisor:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ___awmod@divisor:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  0070                     ___lwdiv@divisor:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0070                     ___lwmod@divisor:	
   434                           ; 2 bytes @ 0x0
   435                           
   436  0070                     ___lmul@multiplier:	
   437                           ; 2 bytes @ 0x0
   438                           
   439                           
   440                           ; 4 bytes @ 0x0
   441  0070                     	ds	2
   442  0072                     LCD_Command@cmnd:
   443  0072                     LCD_Char@data:	
   444                           ; 1 bytes @ 0x2
   445                           
   446  0072                     intdigits_chardigits@b:	
   447                           ; 1 bytes @ 0x2
   448                           
   449  0072                     ___wmul@multiplicand:	
   450                           ; 2 bytes @ 0x2
   451                           
   452  0072                     ___awdiv@dividend:	
   453                           ; 2 bytes @ 0x2
   454                           
   455  0072                     ___awmod@dividend:	
   456                           ; 2 bytes @ 0x2
   457                           
   458  0072                     ___lwdiv@dividend:	
   459                           ; 2 bytes @ 0x2
   460                           
   461  0072                     ___lwmod@dividend:	
   462                           ; 2 bytes @ 0x2
   463                           
   464                           
   465                           ; 2 bytes @ 0x2
   466  0072                     	ds	1
   467  0073                     ??_LCD_init:
   468  0073                     ??_show:	
   469                           ; 1 bytes @ 0x3
   470                           
   471  0073                     dht22_read_byte@dht22_byte:	
   472                           ; 1 bytes @ 0x3
   473                           
   474                           
   475                           ; 1 bytes @ 0x3
   476  0073                     	ds	1
   477  0074                     ??___wmul:
   478  0074                     ??___awdiv:	
   479                           ; 1 bytes @ 0x4
   480                           
   481  0074                     ??___awmod:	
   482                           ; 1 bytes @ 0x4
   483                           
   484  0074                     ??___lwdiv:	
   485                           ; 1 bytes @ 0x4
   486                           
   487  0074                     ??___lwmod:	
   488                           ; 1 bytes @ 0x4
   489                           
   490  0074                     show@s:	
   491                           ; 1 bytes @ 0x4
   492                           
   493  0074                     dht22_read_byte@i:	
   494                           ; 1 bytes @ 0x4
   495                           
   496  0074                     intdigits_chardigits@c:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0074                     ___wmul@product:	
   500                           ; 2 bytes @ 0x4
   501                           
   502  0074                     ___lmul@multiplicand:	
   503                           ; 2 bytes @ 0x4
   504                           
   505                           
   506                           ; 4 bytes @ 0x4
   507  0074                     	ds	1
   508  0075                     ??_problem:
   509  0075                     problem@a:	
   510                           ; 1 bytes @ 0x5
   511                           
   512  0075                     ___awdiv@counter:	
   513                           ; 1 bytes @ 0x5
   514                           
   515  0075                     ___awmod@counter:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0075                     ___lwmod@counter:	
   519                           ; 1 bytes @ 0x5
   520                           
   521  0075                     ___lwdiv@quotient:	
   522                           ; 1 bytes @ 0x5
   523                           
   524                           
   525                           ; 2 bytes @ 0x5
   526  0075                     	ds	1
   527  0076                     ??_intdigits_chardigits:
   528  0076                     ?_dht22_read:	
   529                           ; 1 bytes @ 0x6
   530                           
   531  0076                     dht22_read@dht22_temp:	
   532                           ; 1 bytes @ 0x6
   533                           
   534  0076                     ___awdiv@sign:	
   535                           ; 1 bytes @ 0x6
   536                           
   537  0076                     ___awmod@sign:	
   538                           ; 1 bytes @ 0x6
   539                           
   540                           
   541                           ; 1 bytes @ 0x6
   542  0076                     	ds	1
   543  0077                     ??_dht22_read:
   544  0077                     ___lwdiv@counter:	
   545                           ; 1 bytes @ 0x7
   546                           
   547  0077                     ___awdiv@quotient:	
   548                           ; 1 bytes @ 0x7
   549                           
   550                           
   551                           ; 2 bytes @ 0x7
   552  0077                     	ds	1
   553  0078                     ??___lmul:
   554                           
   555                           ; 1 bytes @ 0x8
   556  0078                     	ds	1
   557  0079                     ?_show_multidigits:
   558  0079                     ?_tx_sn:	
   559                           ; 1 bytes @ 0x9
   560                           
   561  0079                     show_multidigits@val:	
   562                           ; 1 bytes @ 0x9
   563                           
   564  0079                     tx_sn@val:	
   565                           ; 2 bytes @ 0x9
   566                           
   567  0079                     ___lmul@product:	
   568                           ; 2 bytes @ 0x9
   569                           
   570                           
   571                           ; 4 bytes @ 0x9
   572  0079                     	ds	2
   573  007B                     ??_print_serialnumber:
   574  007B                     ??_show_multidigits:	
   575                           ; 1 bytes @ 0xB
   576                           
   577  007B                     ??_tx_sn:	
   578                           ; 1 bytes @ 0xB
   579                           
   580                           
   581                           ; 1 bytes @ 0xB
   582  007B                     	ds	2
   583  007D                     ??___aldiv:
   584  007D                     dht22_read@dht22_humi:	
   585                           ; 1 bytes @ 0xD
   586                           
   587                           
   588                           ; 1 bytes @ 0xD
   589  007D                     	ds	1
   590  007E                     ??_LCD_num:
   591                           
   592                           	psect	cstackBANK0
   593  0020                     __pcstackBANK0:	
   594                           ; 1 bytes @ 0xE
   595                           
   596  0020                     ?___aldiv:
   597  0020                     show_multidigits@digit4:	
   598                           ; 4 bytes @ 0x0
   599                           
   600  0020                     tx_sn@digit4:	
   601                           ; 2 bytes @ 0x0
   602                           
   603  0020                     ___aldiv@divisor:	
   604                           ; 2 bytes @ 0x0
   605                           
   606                           
   607                           ; 4 bytes @ 0x0
   608  0020                     	ds	2
   609  0022                     show_multidigits@result:
   610  0022                     tx_sn@result:	
   611                           ; 2 bytes @ 0x2
   612                           
   613                           
   614                           ; 2 bytes @ 0x2
   615  0022                     	ds	2
   616  0024                     show_multidigits@digit3:
   617  0024                     tx_sn@digit3:	
   618                           ; 2 bytes @ 0x4
   619                           
   620  0024                     ___aldiv@dividend:	
   621                           ; 2 bytes @ 0x4
   622                           
   623                           
   624                           ; 4 bytes @ 0x4
   625  0024                     	ds	2
   626  0026                     show_multidigits@digit1:
   627  0026                     tx_sn@digit1:	
   628                           ; 2 bytes @ 0x6
   629                           
   630                           
   631                           ; 2 bytes @ 0x6
   632  0026                     	ds	2
   633  0028                     ___aldiv@counter:
   634  0028                     show_multidigits@digit2:	
   635                           ; 1 bytes @ 0x8
   636                           
   637  0028                     tx_sn@digit2:	
   638                           ; 2 bytes @ 0x8
   639                           
   640                           
   641                           ; 2 bytes @ 0x8
   642  0028                     	ds	1
   643  0029                     ___aldiv@sign:
   644                           
   645                           ; 1 bytes @ 0x9
   646  0029                     	ds	1
   647  002A                     show_multidigits@result1:
   648  002A                     tx_sn@result1:	
   649                           ; 2 bytes @ 0xA
   650                           
   651  002A                     ___aldiv@quotient:	
   652                           ; 2 bytes @ 0xA
   653                           
   654                           
   655                           ; 4 bytes @ 0xA
   656  002A                     	ds	2
   657  002C                     show_multidigits@remainder:
   658  002C                     tx_sn@remainder:	
   659                           ; 2 bytes @ 0xC
   660                           
   661                           
   662                           ; 2 bytes @ 0xC
   663  002C                     	ds	2
   664  002E                     ?_LCD_num:
   665  002E                     LCD_num@val:	
   666                           ; 1 bytes @ 0xE
   667                           
   668                           
   669                           ; 4 bytes @ 0xE
   670  002E                     	ds	4
   671  0032                     LCD_num@digit1:
   672                           
   673                           ; 2 bytes @ 0x12
   674  0032                     	ds	2
   675  0034                     LCD_num@digit2:
   676                           
   677                           ; 2 bytes @ 0x14
   678  0034                     	ds	2
   679  0036                     LCD_num@digit3:
   680                           
   681                           ; 2 bytes @ 0x16
   682  0036                     	ds	2
   683  0038                     LCD_num@result:
   684                           
   685                           ; 2 bytes @ 0x18
   686  0038                     	ds	2
   687  003A                     LCD_num@result1:
   688                           
   689                           ; 2 bytes @ 0x1A
   690  003A                     	ds	2
   691  003C                     LCD_num@remainder:
   692                           
   693                           ; 2 bytes @ 0x1C
   694  003C                     	ds	2
   695  003E                     ??_print_analogvoltages:
   696                           
   697                           ; 1 bytes @ 0x1E
   698  003E                     	ds	3
   699  0041                     print_analogvoltages@i:
   700                           
   701                           ; 1 bytes @ 0x21
   702  0041                     	ds	1
   703  0042                     print_analogvoltages@j:
   704                           
   705                           ; 1 bytes @ 0x22
   706  0042                     	ds	1
   707  0043                     ??_main:
   708                           
   709                           ; 1 bytes @ 0x23
   710  0043                     	ds	3
   711                           
   712                           	psect	maintext
   713  0208                     __pmaintext:	
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 34 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : B00/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       3       0       0       0
   736 ;;      Totals:         0       3       0       0       0
   737 ;;Total ram usage:        3 bytes
   738 ;; Hardware stack levels required when called: 4
   739 ;; This function calls:
   740 ;;		_ADC_Init
   741 ;;		_LCD_Command
   742 ;;		_LCD_init
   743 ;;		_dht22_read
   744 ;;		_print_analogvoltages
   745 ;;		_print_serialnumber
   746 ;;		_ser_int
   747 ;;		_show_multidigits
   748 ;;		_tx
   749 ;; This function is called by:
   750 ;;		Startup code after reset
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           
   755                           ;psect for function _main
   756  0208                     _main:
   757  0208                     l1790:	
   758                           ;incstack = 0
   759                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   760                           
   761                           
   762                           ;main.c: 36:     TRISB =0x00;
   763  0208  1683               	bsf	3,5	;RP0=1, select bank1
   764  0209  1303               	bcf	3,6	;RP1=0, select bank1
   765  020A  0186               	clrf	6	;volatile
   766                           
   767                           ;main.c: 37:     TRISC =0x00;
   768  020B  0187               	clrf	7	;volatile
   769  020C                     l1792:
   770                           
   771                           ;main.c: 39:     LCD_init();
   772  020C  120A  158A  269B  120A  118A  	fcall	_LCD_init
   773  0211                     l1794:
   774                           
   775                           ;main.c: 40:     ser_int();
   776  0211  120A  158A  2629  120A  118A  	fcall	_ser_int
   777  0216                     l1796:
   778                           
   779                           ;main.c: 42:     {;main.c: 43:         ADC_Init ();
   780  0216  120A  118A  20CF  120A  118A  	fcall	_ADC_Init
   781  021B                     l1798:
   782                           
   783                           ;main.c: 44:         GO_nDONE=1;
   784  021B  1283               	bcf	3,5	;RP0=0, select bank0
   785  021C  1303               	bcf	3,6	;RP1=0, select bank0
   786  021D  151F               	bsf	31,2	;volatile
   787  021E                     l157:	
   788                           ;main.c: 45:         while(GO_nDONE==1);
   789                           
   790  021E  191F               	btfsc	31,2	;volatile
   791  021F  2A21               	goto	u1711
   792  0220  2A22               	goto	u1710
   793  0221                     u1711:
   794  0221  2A1E               	goto	l157
   795  0222                     u1710:
   796  0222                     l1800:
   797                           
   798                           ;main.c: 46:         _delay((unsigned long)((10)*(20000000/4000.0)));
   799  0222  3041               	movlw	65
   800  0223  1283               	bcf	3,5	;RP0=0, select bank0
   801  0224  1303               	bcf	3,6	;RP1=0, select bank0
   802  0225  00C4               	movwf	??_main+1
   803  0226  30ED               	movlw	237
   804  0227  00C3               	movwf	??_main
   805  0228                     u1727:
   806  0228  0BC3               	decfsz	??_main,f
   807  0229  2A28               	goto	u1727
   808  022A  0BC4               	decfsz	??_main+1,f
   809  022B  2A28               	goto	u1727
   810  022C  2A2D               	nop2
   811  022D                     l1802:
   812                           
   813                           ;main.c: 49:         print_serialnumber();
   814  022D  120A  158A  2645  120A  118A  	fcall	_print_serialnumber
   815  0232                     l1804:
   816                           
   817                           ;main.c: 51:         print_analogvoltages();
   818  0232  120A  118A  219A  120A  118A  	fcall	_print_analogvoltages
   819  0237                     l1806:
   820                           
   821                           ;main.c: 54:         dht22_read(&humidity, &temperature);
   822  0237  3054               	movlw	(low (_temperature| 0))& (0+255)
   823  0238  1283               	bcf	3,5	;RP0=0, select bank0
   824  0239  1303               	bcf	3,6	;RP1=0, select bank0
   825  023A  00C3               	movwf	??_main
   826  023B  0843               	movf	??_main,w
   827  023C  00F6               	movwf	dht22_read@dht22_temp
   828  023D  3056               	movlw	(low (_humidity| 0))& (0+255)
   829  023E  120A  118A  23FD  120A  118A  	fcall	_dht22_read
   830  0243                     l1808:
   831                           
   832                           ;main.c: 55:         LCD_Command(0x01);
   833  0243  3001               	movlw	1
   834  0244  120A  158A  273C  120A  118A  	fcall	_LCD_Command
   835  0249                     l1810:
   836                           
   837                           ;main.c: 56:         LCD_Command(0x80);
   838  0249  3080               	movlw	128
   839  024A  120A  158A  273C  120A  118A  	fcall	_LCD_Command
   840  024F                     l1812:
   841                           
   842                           ;main.c: 57:         show_multidigits(humidity);
   843  024F  1283               	bcf	3,5	;RP0=0, select bank0
   844  0250  1303               	bcf	3,6	;RP1=0, select bank0
   845  0251  0857               	movf	_humidity+1,w
   846  0252  00FA               	movwf	show_multidigits@val+1
   847  0253  0856               	movf	_humidity,w
   848  0254  00F9               	movwf	show_multidigits@val
   849  0255  120A  118A  2655  120A  118A  	fcall	_show_multidigits
   850  025A                     l1814:
   851                           
   852                           ;main.c: 58:         LCD_Command(0xC0);
   853  025A  30C0               	movlw	192
   854  025B  120A  158A  273C  120A  118A  	fcall	_LCD_Command
   855  0260                     l1816:
   856                           
   857                           ;main.c: 59:         show_multidigits(temperature);
   858  0260  1283               	bcf	3,5	;RP0=0, select bank0
   859  0261  1303               	bcf	3,6	;RP1=0, select bank0
   860  0262  0855               	movf	_temperature+1,w
   861  0263  00FA               	movwf	show_multidigits@val+1
   862  0264  0854               	movf	_temperature,w
   863  0265  00F9               	movwf	show_multidigits@val
   864  0266  120A  118A  2655  120A  118A  	fcall	_show_multidigits
   865  026B                     l1818:
   866                           
   867                           ;main.c: 60:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   868  026B  301A               	movlw	26
   869  026C  1283               	bcf	3,5	;RP0=0, select bank0
   870  026D  1303               	bcf	3,6	;RP1=0, select bank0
   871  026E  00C5               	movwf	??_main+2
   872  026F  305E               	movlw	94
   873  0270  00C4               	movwf	??_main+1
   874  0271  306D               	movlw	109
   875  0272  00C3               	movwf	??_main
   876  0273                     u1737:
   877  0273  0BC3               	decfsz	??_main,f
   878  0274  2A73               	goto	u1737
   879  0275  0BC4               	decfsz	??_main+1,f
   880  0276  2A73               	goto	u1737
   881  0277  0BC5               	decfsz	??_main+2,f
   882  0278  2A73               	goto	u1737
   883  0279  2A7A               	nop2
   884  027A                     l1820:
   885                           
   886                           ;main.c: 63:         tx(0x0d);
   887  027A  300D               	movlw	13
   888  027B  120A  158A  261E  120A  118A  	fcall	_tx
   889  0280                     l1822:
   890                           
   891                           ;main.c: 64:         LCD_Command(0x01);
   892  0280  3001               	movlw	1
   893  0281  120A  158A  273C  120A  118A  	fcall	_LCD_Command
   894  0286                     l1824:
   895                           
   896                           ;main.c: 65:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   897  0286  301A               	movlw	26
   898  0287  1283               	bcf	3,5	;RP0=0, select bank0
   899  0288  1303               	bcf	3,6	;RP1=0, select bank0
   900  0289  00C5               	movwf	??_main+2
   901  028A  305E               	movlw	94
   902  028B  00C4               	movwf	??_main+1
   903  028C  306D               	movlw	109
   904  028D  00C3               	movwf	??_main
   905  028E                     u1747:
   906  028E  0BC3               	decfsz	??_main,f
   907  028F  2A8E               	goto	u1747
   908  0290  0BC4               	decfsz	??_main+1,f
   909  0291  2A8E               	goto	u1747
   910  0292  0BC5               	decfsz	??_main+2,f
   911  0293  2A8E               	goto	u1747
   912  0294  2A95               	nop2
   913  0295                     l1826:
   914                           
   915                           ;main.c: 66:         sn += 1;
   916  0295  3001               	movlw	1
   917  0296  1283               	bcf	3,5	;RP0=0, select bank0
   918  0297  1303               	bcf	3,6	;RP1=0, select bank0
   919  0298  07D8               	addwf	_sn,f
   920  0299  1803               	skipnc
   921  029A  0AD9               	incf	_sn+1,f
   922  029B  3000               	movlw	0
   923  029C  07D9               	addwf	_sn+1,f
   924  029D  2A16               	goto	l1796
   925  029E  120A  118A  2800   	ljmp	start
   926  02A1                     __end_of_main:
   927                           
   928                           	psect	text1
   929  0655                     __ptext1:	
   930 ;; *************** function _show_multidigits *****************
   931 ;; Defined at:
   932 ;;		line 86 in file "./lcd4bit.h"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  val             2    9[COMMON] unsigned int 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  remainder       2   12[BANK0 ] int 
   937 ;;  result1         2   10[BANK0 ] int 
   938 ;;  digit2          2    8[BANK0 ] int 
   939 ;;  digit1          2    6[BANK0 ] int 
   940 ;;  digit3          2    4[BANK0 ] int 
   941 ;;  result          2    2[BANK0 ] int 
   942 ;;  digit4          2    0[BANK0 ] int 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         2       0       0       0       0
   953 ;;      Locals:         0      14       0       0       0
   954 ;;      Temps:          0       0       0       0       0
   955 ;;      Totals:         2      14       0       0       0
   956 ;;Total ram usage:       16 bytes
   957 ;; Hardware stack levels used: 1
   958 ;; Hardware stack levels required when called: 1
   959 ;; This function calls:
   960 ;;		_LCD_Char
   961 ;;		___awdiv
   962 ;;		___awmod
   963 ;;		___lwdiv
   964 ;;		___lwmod
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _show_multidigits
   972  0655                     _show_multidigits:
   973  0655                     l1662:	
   974                           ;incstack = 0
   975                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
   976                           
   977                           
   978                           ;./lcd4bit.h: 86: void show_multidigits (unsigned int val);./lcd4bit.h: 87: {;./lcd4bit.
      +                          h: 88:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          89:     if (val<=9)
   979  0655  3000               	movlw	0
   980  0656  027A               	subwf	show_multidigits@val+1,w
   981  0657  300A               	movlw	10
   982  0658  1903               	skipnz
   983  0659  0279               	subwf	show_multidigits@val,w
   984  065A  1803               	skipnc
   985  065B  2E5D               	goto	u1561
   986  065C  2E5E               	goto	u1560
   987  065D                     u1561:
   988  065D  2E66               	goto	l1666
   989  065E                     u1560:
   990  065E                     l1664:
   991                           
   992                           ;./lcd4bit.h: 90:     {;./lcd4bit.h: 91:        LCD_Char(val+0x30);
   993  065E  0879               	movf	show_multidigits@val,w
   994  065F  3E30               	addlw	48
   995  0660  120A  158A  277C  120A  118A  	fcall	_LCD_Char
   996                           
   997                           ;./lcd4bit.h: 92:     }
   998  0665  2FE6               	goto	l81
   999  0666                     l1666:
  1000  0666  3000               	movlw	0
  1001  0667  027A               	subwf	show_multidigits@val+1,w
  1002  0668  300A               	movlw	10
  1003  0669  1903               	skipnz
  1004  066A  0279               	subwf	show_multidigits@val,w
  1005  066B  1C03               	skipc
  1006  066C  2E6E               	goto	u1571
  1007  066D  2E6F               	goto	u1570
  1008  066E                     u1571:
  1009  066E  2EB3               	goto	l1680
  1010  066F                     u1570:
  1011  066F                     l1668:
  1012  066F  3000               	movlw	0
  1013  0670  027A               	subwf	show_multidigits@val+1,w
  1014  0671  3064               	movlw	100
  1015  0672  1903               	skipnz
  1016  0673  0279               	subwf	show_multidigits@val,w
  1017  0674  1803               	skipnc
  1018  0675  2E77               	goto	u1581
  1019  0676  2E78               	goto	u1580
  1020  0677                     u1581:
  1021  0677  2EB3               	goto	l1680
  1022  0678                     u1580:
  1023  0678                     l1670:
  1024                           
  1025                           ;./lcd4bit.h: 94:     {;./lcd4bit.h: 95:         remainder = val % 10;
  1026  0678  300A               	movlw	10
  1027  0679  00F0               	movwf	___lwmod@divisor
  1028  067A  3000               	movlw	0
  1029  067B  00F1               	movwf	___lwmod@divisor+1
  1030  067C  087A               	movf	show_multidigits@val+1,w
  1031  067D  00F3               	movwf	___lwmod@dividend+1
  1032  067E  0879               	movf	show_multidigits@val,w
  1033  067F  00F2               	movwf	___lwmod@dividend
  1034  0680  120A  158A  2702  120A  118A  	fcall	___lwmod
  1035  0685  0871               	movf	?___lwmod+1,w
  1036  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0688  00AD               	movwf	show_multidigits@remainder+1
  1039  0689  0870               	movf	?___lwmod,w
  1040  068A  00AC               	movwf	show_multidigits@remainder
  1041  068B                     l1672:
  1042                           
  1043                           ;./lcd4bit.h: 96:         digit1 = remainder;
  1044  068B  082D               	movf	show_multidigits@remainder+1,w
  1045  068C  00A7               	movwf	show_multidigits@digit1+1
  1046  068D  082C               	movf	show_multidigits@remainder,w
  1047  068E  00A6               	movwf	show_multidigits@digit1
  1048  068F                     l1674:
  1049                           
  1050                           ;./lcd4bit.h: 97:         digit2 = val/10;
  1051  068F  300A               	movlw	10
  1052  0690  00F0               	movwf	___lwdiv@divisor
  1053  0691  3000               	movlw	0
  1054  0692  00F1               	movwf	___lwdiv@divisor+1
  1055  0693  087A               	movf	show_multidigits@val+1,w
  1056  0694  00F3               	movwf	___lwdiv@dividend+1
  1057  0695  0879               	movf	show_multidigits@val,w
  1058  0696  00F2               	movwf	___lwdiv@dividend
  1059  0697  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  1060  069C  0871               	movf	?___lwdiv+1,w
  1061  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1062  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1063  069F  00A9               	movwf	show_multidigits@digit2+1
  1064  06A0  0870               	movf	?___lwdiv,w
  1065  06A1  00A8               	movwf	show_multidigits@digit2
  1066  06A2                     l1676:
  1067                           
  1068                           ;./lcd4bit.h: 98:         LCD_Char(digit2+0x30);
  1069  06A2  0828               	movf	show_multidigits@digit2,w
  1070  06A3  3E30               	addlw	48
  1071  06A4  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  1072  06A9                     l1678:
  1073                           
  1074                           ;./lcd4bit.h: 99:         LCD_Char(digit1+0x30);
  1075  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1076  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1077  06AB  0826               	movf	show_multidigits@digit1,w
  1078  06AC  3E30               	addlw	48
  1079  06AD  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  1080                           
  1081                           ;./lcd4bit.h: 100:     }
  1082  06B2  2FE6               	goto	l81
  1083  06B3                     l1680:
  1084  06B3  3000               	movlw	0
  1085  06B4  027A               	subwf	show_multidigits@val+1,w
  1086  06B5  3064               	movlw	100
  1087  06B6  1903               	skipnz
  1088  06B7  0279               	subwf	show_multidigits@val,w
  1089  06B8  1C03               	skipc
  1090  06B9  2EBB               	goto	u1591
  1091  06BA  2EBC               	goto	u1590
  1092  06BB                     u1591:
  1093  06BB  2F33               	goto	l1698
  1094  06BC                     u1590:
  1095  06BC                     l1682:
  1096  06BC  3003               	movlw	3
  1097  06BD  027A               	subwf	show_multidigits@val+1,w
  1098  06BE  30E8               	movlw	232
  1099  06BF  1903               	skipnz
  1100  06C0  0279               	subwf	show_multidigits@val,w
  1101  06C1  1803               	skipnc
  1102  06C2  2EC4               	goto	u1601
  1103  06C3  2EC5               	goto	u1600
  1104  06C4                     u1601:
  1105  06C4  2F33               	goto	l1698
  1106  06C5                     u1600:
  1107  06C5                     l1684:
  1108                           
  1109                           ;./lcd4bit.h: 102:     {;./lcd4bit.h: 103:         remainder = val % 10;
  1110  06C5  300A               	movlw	10
  1111  06C6  00F0               	movwf	___lwmod@divisor
  1112  06C7  3000               	movlw	0
  1113  06C8  00F1               	movwf	___lwmod@divisor+1
  1114  06C9  087A               	movf	show_multidigits@val+1,w
  1115  06CA  00F3               	movwf	___lwmod@dividend+1
  1116  06CB  0879               	movf	show_multidigits@val,w
  1117  06CC  00F2               	movwf	___lwmod@dividend
  1118  06CD  120A  158A  2702  120A  118A  	fcall	___lwmod
  1119  06D2  0871               	movf	?___lwmod+1,w
  1120  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1121  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1122  06D5  00AD               	movwf	show_multidigits@remainder+1
  1123  06D6  0870               	movf	?___lwmod,w
  1124  06D7  00AC               	movwf	show_multidigits@remainder
  1125                           
  1126                           ;./lcd4bit.h: 104:         result1 = val /10;
  1127  06D8  300A               	movlw	10
  1128  06D9  00F0               	movwf	___lwdiv@divisor
  1129  06DA  3000               	movlw	0
  1130  06DB  00F1               	movwf	___lwdiv@divisor+1
  1131  06DC  087A               	movf	show_multidigits@val+1,w
  1132  06DD  00F3               	movwf	___lwdiv@dividend+1
  1133  06DE  0879               	movf	show_multidigits@val,w
  1134  06DF  00F2               	movwf	___lwdiv@dividend
  1135  06E0  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  1136  06E5  0871               	movf	?___lwdiv+1,w
  1137  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1138  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1139  06E8  00AB               	movwf	show_multidigits@result1+1
  1140  06E9  0870               	movf	?___lwdiv,w
  1141  06EA  00AA               	movwf	show_multidigits@result1
  1142  06EB                     l1686:
  1143                           
  1144                           ;./lcd4bit.h: 105:         digit1 = remainder;
  1145  06EB  082D               	movf	show_multidigits@remainder+1,w
  1146  06EC  00A7               	movwf	show_multidigits@digit1+1
  1147  06ED  082C               	movf	show_multidigits@remainder,w
  1148  06EE  00A6               	movwf	show_multidigits@digit1
  1149  06EF                     l1688:
  1150                           
  1151                           ;./lcd4bit.h: 106:         remainder = result1%10;
  1152  06EF  300A               	movlw	10
  1153  06F0  00F0               	movwf	___awmod@divisor
  1154  06F1  3000               	movlw	0
  1155  06F2  00F1               	movwf	___awmod@divisor+1
  1156  06F3  082B               	movf	show_multidigits@result1+1,w
  1157  06F4  00F3               	movwf	___awmod@dividend+1
  1158  06F5  082A               	movf	show_multidigits@result1,w
  1159  06F6  00F2               	movwf	___awmod@dividend
  1160  06F7  120A  118A  2076  120A  118A  	fcall	___awmod
  1161  06FC  0871               	movf	?___awmod+1,w
  1162  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1163  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1164  06FF  00AD               	movwf	show_multidigits@remainder+1
  1165  0700  0870               	movf	?___awmod,w
  1166  0701  00AC               	movwf	show_multidigits@remainder
  1167                           
  1168                           ;./lcd4bit.h: 107:         digit2 = remainder;
  1169  0702  082D               	movf	show_multidigits@remainder+1,w
  1170  0703  00A9               	movwf	show_multidigits@digit2+1
  1171  0704  082C               	movf	show_multidigits@remainder,w
  1172  0705  00A8               	movwf	show_multidigits@digit2
  1173  0706                     l1690:
  1174                           
  1175                           ;./lcd4bit.h: 108:         digit3 = result1/10;
  1176  0706  300A               	movlw	10
  1177  0707  00F0               	movwf	___awdiv@divisor
  1178  0708  3000               	movlw	0
  1179  0709  00F1               	movwf	___awdiv@divisor+1
  1180  070A  082B               	movf	show_multidigits@result1+1,w
  1181  070B  00F3               	movwf	___awdiv@dividend+1
  1182  070C  082A               	movf	show_multidigits@result1,w
  1183  070D  00F2               	movwf	___awdiv@dividend
  1184  070E  120A  118A  2133  120A  118A  	fcall	___awdiv
  1185  0713  0871               	movf	?___awdiv+1,w
  1186  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0716  00A5               	movwf	show_multidigits@digit3+1
  1189  0717  0870               	movf	?___awdiv,w
  1190  0718  00A4               	movwf	show_multidigits@digit3
  1191  0719                     l1692:
  1192                           
  1193                           ;./lcd4bit.h: 109:         LCD_Char(digit3+0x30);
  1194  0719  0824               	movf	show_multidigits@digit3,w
  1195  071A  3E30               	addlw	48
  1196  071B  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  1197  0720                     l1694:
  1198                           
  1199                           ;./lcd4bit.h: 110:         LCD_Char(digit2+0x30);
  1200  0720  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0721  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0722  0828               	movf	show_multidigits@digit2,w
  1203  0723  3E30               	addlw	48
  1204  0724  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  1205  0729                     l1696:
  1206                           
  1207                           ;./lcd4bit.h: 111:         LCD_Char(digit1+0x30);
  1208  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1209  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1210  072B  0826               	movf	show_multidigits@digit1,w
  1211  072C  3E30               	addlw	48
  1212  072D  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  1213                           
  1214                           ;./lcd4bit.h: 112:     }
  1215  0732  2FE6               	goto	l81
  1216  0733                     l1698:
  1217  0733  3003               	movlw	3
  1218  0734  027A               	subwf	show_multidigits@val+1,w
  1219  0735  30E8               	movlw	232
  1220  0736  1903               	skipnz
  1221  0737  0279               	subwf	show_multidigits@val,w
  1222  0738  1C03               	skipc
  1223  0739  2F3B               	goto	u1611
  1224  073A  2F3C               	goto	u1610
  1225  073B                     u1611:
  1226  073B  2FE6               	goto	l77
  1227  073C                     u1610:
  1228  073C                     l1700:
  1229  073C  3027               	movlw	39
  1230  073D  027A               	subwf	show_multidigits@val+1,w
  1231  073E  300F               	movlw	15
  1232  073F  1903               	skipnz
  1233  0740  0279               	subwf	show_multidigits@val,w
  1234  0741  1803               	skipnc
  1235  0742  2F44               	goto	u1621
  1236  0743  2F45               	goto	u1620
  1237  0744                     u1621:
  1238  0744  2FE6               	goto	l77
  1239  0745                     u1620:
  1240  0745                     l1702:
  1241                           
  1242                           ;./lcd4bit.h: 114:     {;./lcd4bit.h: 115:         remainder = val % 10;
  1243  0745  300A               	movlw	10
  1244  0746  00F0               	movwf	___lwmod@divisor
  1245  0747  3000               	movlw	0
  1246  0748  00F1               	movwf	___lwmod@divisor+1
  1247  0749  087A               	movf	show_multidigits@val+1,w
  1248  074A  00F3               	movwf	___lwmod@dividend+1
  1249  074B  0879               	movf	show_multidigits@val,w
  1250  074C  00F2               	movwf	___lwmod@dividend
  1251  074D  120A  158A  2702  120A  118A  	fcall	___lwmod
  1252  0752  0871               	movf	?___lwmod+1,w
  1253  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0755  00AD               	movwf	show_multidigits@remainder+1
  1256  0756  0870               	movf	?___lwmod,w
  1257  0757  00AC               	movwf	show_multidigits@remainder
  1258                           
  1259                           ;./lcd4bit.h: 116:         result1 = val /10;
  1260  0758  300A               	movlw	10
  1261  0759  00F0               	movwf	___lwdiv@divisor
  1262  075A  3000               	movlw	0
  1263  075B  00F1               	movwf	___lwdiv@divisor+1
  1264  075C  087A               	movf	show_multidigits@val+1,w
  1265  075D  00F3               	movwf	___lwdiv@dividend+1
  1266  075E  0879               	movf	show_multidigits@val,w
  1267  075F  00F2               	movwf	___lwdiv@dividend
  1268  0760  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  1269  0765  0871               	movf	?___lwdiv+1,w
  1270  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0768  00AB               	movwf	show_multidigits@result1+1
  1273  0769  0870               	movf	?___lwdiv,w
  1274  076A  00AA               	movwf	show_multidigits@result1
  1275  076B                     l1704:
  1276                           
  1277                           ;./lcd4bit.h: 117:         digit1 = remainder;
  1278  076B  082D               	movf	show_multidigits@remainder+1,w
  1279  076C  00A7               	movwf	show_multidigits@digit1+1
  1280  076D  082C               	movf	show_multidigits@remainder,w
  1281  076E  00A6               	movwf	show_multidigits@digit1
  1282  076F                     l1706:
  1283                           
  1284                           ;./lcd4bit.h: 118:         remainder = result1%10;
  1285  076F  300A               	movlw	10
  1286  0770  00F0               	movwf	___awmod@divisor
  1287  0771  3000               	movlw	0
  1288  0772  00F1               	movwf	___awmod@divisor+1
  1289  0773  082B               	movf	show_multidigits@result1+1,w
  1290  0774  00F3               	movwf	___awmod@dividend+1
  1291  0775  082A               	movf	show_multidigits@result1,w
  1292  0776  00F2               	movwf	___awmod@dividend
  1293  0777  120A  118A  2076  120A  118A  	fcall	___awmod
  1294  077C  0871               	movf	?___awmod+1,w
  1295  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1296  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1297  077F  00AD               	movwf	show_multidigits@remainder+1
  1298  0780  0870               	movf	?___awmod,w
  1299  0781  00AC               	movwf	show_multidigits@remainder
  1300                           
  1301                           ;./lcd4bit.h: 119:         digit2 = remainder;
  1302  0782  082D               	movf	show_multidigits@remainder+1,w
  1303  0783  00A9               	movwf	show_multidigits@digit2+1
  1304  0784  082C               	movf	show_multidigits@remainder,w
  1305  0785  00A8               	movwf	show_multidigits@digit2
  1306  0786                     l1708:
  1307                           
  1308                           ;./lcd4bit.h: 120:         result = result1/10;
  1309  0786  300A               	movlw	10
  1310  0787  00F0               	movwf	___awdiv@divisor
  1311  0788  3000               	movlw	0
  1312  0789  00F1               	movwf	___awdiv@divisor+1
  1313  078A  082B               	movf	show_multidigits@result1+1,w
  1314  078B  00F3               	movwf	___awdiv@dividend+1
  1315  078C  082A               	movf	show_multidigits@result1,w
  1316  078D  00F2               	movwf	___awdiv@dividend
  1317  078E  120A  118A  2133  120A  118A  	fcall	___awdiv
  1318  0793  0871               	movf	?___awdiv+1,w
  1319  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0796  00A3               	movwf	show_multidigits@result+1
  1322  0797  0870               	movf	?___awdiv,w
  1323  0798  00A2               	movwf	show_multidigits@result
  1324  0799                     l1710:
  1325                           
  1326                           ;./lcd4bit.h: 121:         remainder = result%10;
  1327  0799  300A               	movlw	10
  1328  079A  00F0               	movwf	___awmod@divisor
  1329  079B  3000               	movlw	0
  1330  079C  00F1               	movwf	___awmod@divisor+1
  1331  079D  0823               	movf	show_multidigits@result+1,w
  1332  079E  00F3               	movwf	___awmod@dividend+1
  1333  079F  0822               	movf	show_multidigits@result,w
  1334  07A0  00F2               	movwf	___awmod@dividend
  1335  07A1  120A  118A  2076  120A  118A  	fcall	___awmod
  1336  07A6  0871               	movf	?___awmod+1,w
  1337  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1338  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1339  07A9  00AD               	movwf	show_multidigits@remainder+1
  1340  07AA  0870               	movf	?___awmod,w
  1341  07AB  00AC               	movwf	show_multidigits@remainder
  1342                           
  1343                           ;./lcd4bit.h: 122:         digit3=remainder;
  1344  07AC  082D               	movf	show_multidigits@remainder+1,w
  1345  07AD  00A5               	movwf	show_multidigits@digit3+1
  1346  07AE  082C               	movf	show_multidigits@remainder,w
  1347  07AF  00A4               	movwf	show_multidigits@digit3
  1348  07B0                     l1712:
  1349                           
  1350                           ;./lcd4bit.h: 123:         digit4 = result/10;
  1351  07B0  300A               	movlw	10
  1352  07B1  00F0               	movwf	___awdiv@divisor
  1353  07B2  3000               	movlw	0
  1354  07B3  00F1               	movwf	___awdiv@divisor+1
  1355  07B4  0823               	movf	show_multidigits@result+1,w
  1356  07B5  00F3               	movwf	___awdiv@dividend+1
  1357  07B6  0822               	movf	show_multidigits@result,w
  1358  07B7  00F2               	movwf	___awdiv@dividend
  1359  07B8  120A  118A  2133  120A  118A  	fcall	___awdiv
  1360  07BD  0871               	movf	?___awdiv+1,w
  1361  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1362  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1363  07C0  00A1               	movwf	show_multidigits@digit4+1
  1364  07C1  0870               	movf	?___awdiv,w
  1365  07C2  00A0               	movwf	show_multidigits@digit4
  1366  07C3                     l1714:
  1367                           
  1368                           ;./lcd4bit.h: 124:         LCD_Char(digit4+0x30);
  1369  07C3  0820               	movf	show_multidigits@digit4,w
  1370  07C4  3E30               	addlw	48
  1371  07C5  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  1372  07CA                     l1716:
  1373                           
  1374                           ;./lcd4bit.h: 125:         LCD_Char(digit3+0x30);
  1375  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1376  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1377  07CC  0824               	movf	show_multidigits@digit3,w
  1378  07CD  3E30               	addlw	48
  1379  07CE  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  1380  07D3                     l1718:
  1381                           
  1382                           ;./lcd4bit.h: 126:         LCD_Char(digit2+0x30);
  1383  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1384  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1385  07D5  0828               	movf	show_multidigits@digit2,w
  1386  07D6  3E30               	addlw	48
  1387  07D7  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  1388  07DC                     l1720:
  1389                           
  1390                           ;./lcd4bit.h: 127:         LCD_Char(digit1+0x30);
  1391  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1392  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1393  07DE  0826               	movf	show_multidigits@digit1,w
  1394  07DF  3E30               	addlw	48
  1395  07E0  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  1396  07E5  2FE6               	goto	l81
  1397  07E6                     l77:
  1398  07E6                     l81:
  1399  07E6  0008               	return
  1400  07E7                     __end_of_show_multidigits:
  1401                           
  1402                           	psect	text2
  1403  0E29                     __ptext2:	
  1404 ;; *************** function _ser_int *****************
  1405 ;; Defined at:
  1406 ;;		line 7 in file "./uart.h"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0
  1423 ;;      Totals:         0       0       0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           
  1434                           ;psect for function _ser_int
  1435  0E29                     _ser_int:
  1436  0E29                     l1722:	
  1437                           ;incstack = 0
  1438                           ; Regs used in _ser_int: [wreg]
  1439                           
  1440                           
  1441                           ;./uart.h: 9:  TXSTA= 0x20;
  1442  0E29  3020               	movlw	32
  1443  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0E2C  0098               	movwf	24	;volatile
  1446                           
  1447                           ;./uart.h: 10:  RCSTA= 0b10010000;
  1448  0E2D  3090               	movlw	144
  1449  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0E30  0098               	movwf	24	;volatile
  1452                           
  1453                           ;./uart.h: 11:  SPBRG=31;
  1454  0E31  301F               	movlw	31
  1455  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  1456  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  1457  0E34  0099               	movwf	25	;volatile
  1458  0E35                     l84:
  1459  0E35  0008               	return
  1460  0E36                     __end_of_ser_int:
  1461                           
  1462                           	psect	text3
  1463  0E45                     __ptext3:	
  1464 ;; *************** function _print_serialnumber *****************
  1465 ;; Defined at:
  1466 ;;		line 93 in file "main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 2
  1487 ;; This function calls:
  1488 ;;		_tx
  1489 ;;		_tx_sn
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _print_serialnumber
  1497  0E45                     _print_serialnumber:
  1498  0E45                     l1752:	
  1499                           ;incstack = 0
  1500                           ; Regs used in _print_serialnumber: [wreg+status,2+status,0+pclath+cstack]
  1501                           
  1502                           
  1503                           ;main.c: 95:     tx_sn(sn);
  1504  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0E47  0859               	movf	_sn+1,w
  1507  0E48  00FA               	movwf	tx_sn@val+1
  1508  0E49  0858               	movf	_sn,w
  1509  0E4A  00F9               	movwf	tx_sn@val
  1510  0E4B  120A  118A  24C3  120A  158A  	fcall	_tx_sn
  1511                           
  1512                           ;main.c: 96:     tx(')');
  1513  0E50  3029               	movlw	41
  1514  0E51  120A  158A  261E  120A  158A  	fcall	_tx
  1515  0E56                     l168:
  1516  0E56  0008               	return
  1517  0E57                     __end_of_print_serialnumber:
  1518                           
  1519                           	psect	text4
  1520  04C3                     __ptext4:	
  1521 ;; *************** function _tx_sn *****************
  1522 ;; Defined at:
  1523 ;;		line 27 in file "./uart.h"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  val             2    9[COMMON] unsigned int 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  remainder       2   12[BANK0 ] int 
  1528 ;;  result1         2   10[BANK0 ] int 
  1529 ;;  digit2          2    8[BANK0 ] int 
  1530 ;;  digit1          2    6[BANK0 ] int 
  1531 ;;  digit3          2    4[BANK0 ] int 
  1532 ;;  result          2    2[BANK0 ] int 
  1533 ;;  digit4          2    0[BANK0 ] int 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, pclath, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1543 ;;      Params:         2       0       0       0       0
  1544 ;;      Locals:         0      14       0       0       0
  1545 ;;      Temps:          0       0       0       0       0
  1546 ;;      Totals:         2      14       0       0       0
  1547 ;;Total ram usage:       16 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 1
  1550 ;; This function calls:
  1551 ;;		___awdiv
  1552 ;;		___awmod
  1553 ;;		___lwdiv
  1554 ;;		___lwmod
  1555 ;;		_tx
  1556 ;; This function is called by:
  1557 ;;		_print_serialnumber
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _tx_sn
  1563  04C3                     _tx_sn:
  1564  04C3                     l1558:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _tx_sn: [wreg+status,2+status,0+pclath+cstack]
  1567                           
  1568                           
  1569                           ;./uart.h: 27: void tx_sn (unsigned int val);./uart.h: 28: {;./uart.h: 29:     int remai
      +                          nder, digit1, digit2, digit3, digit4, result, result1;;./uart.h: 30:     if (val<=9)
  1570  04C3  3000               	movlw	0
  1571  04C4  027A               	subwf	tx_sn@val+1,w
  1572  04C5  300A               	movlw	10
  1573  04C6  1903               	skipnz
  1574  04C7  0279               	subwf	tx_sn@val,w
  1575  04C8  1803               	skipnc
  1576  04C9  2CCB               	goto	u1381
  1577  04CA  2CCC               	goto	u1380
  1578  04CB                     u1381:
  1579  04CB  2CD4               	goto	l1562
  1580  04CC                     u1380:
  1581  04CC                     l1560:
  1582                           
  1583                           ;./uart.h: 31:     {;./uart.h: 32:        tx(val+0x30);
  1584  04CC  0879               	movf	tx_sn@val,w
  1585  04CD  3E30               	addlw	48
  1586  04CE  120A  158A  261E  120A  118A  	fcall	_tx
  1587                           
  1588                           ;./uart.h: 33:     }
  1589  04D3  2E54               	goto	l106
  1590  04D4                     l1562:
  1591  04D4  3000               	movlw	0
  1592  04D5  027A               	subwf	tx_sn@val+1,w
  1593  04D6  300A               	movlw	10
  1594  04D7  1903               	skipnz
  1595  04D8  0279               	subwf	tx_sn@val,w
  1596  04D9  1C03               	skipc
  1597  04DA  2CDC               	goto	u1391
  1598  04DB  2CDD               	goto	u1390
  1599  04DC                     u1391:
  1600  04DC  2D21               	goto	l1576
  1601  04DD                     u1390:
  1602  04DD                     l1564:
  1603  04DD  3000               	movlw	0
  1604  04DE  027A               	subwf	tx_sn@val+1,w
  1605  04DF  3064               	movlw	100
  1606  04E0  1903               	skipnz
  1607  04E1  0279               	subwf	tx_sn@val,w
  1608  04E2  1803               	skipnc
  1609  04E3  2CE5               	goto	u1401
  1610  04E4  2CE6               	goto	u1400
  1611  04E5                     u1401:
  1612  04E5  2D21               	goto	l1576
  1613  04E6                     u1400:
  1614  04E6                     l1566:
  1615                           
  1616                           ;./uart.h: 35:     {;./uart.h: 36:         remainder = val % 10;
  1617  04E6  300A               	movlw	10
  1618  04E7  00F0               	movwf	___lwmod@divisor
  1619  04E8  3000               	movlw	0
  1620  04E9  00F1               	movwf	___lwmod@divisor+1
  1621  04EA  087A               	movf	tx_sn@val+1,w
  1622  04EB  00F3               	movwf	___lwmod@dividend+1
  1623  04EC  0879               	movf	tx_sn@val,w
  1624  04ED  00F2               	movwf	___lwmod@dividend
  1625  04EE  120A  158A  2702  120A  118A  	fcall	___lwmod
  1626  04F3  0871               	movf	?___lwmod+1,w
  1627  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1628  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1629  04F6  00AD               	movwf	tx_sn@remainder+1
  1630  04F7  0870               	movf	?___lwmod,w
  1631  04F8  00AC               	movwf	tx_sn@remainder
  1632  04F9                     l1568:
  1633                           
  1634                           ;./uart.h: 37:         digit1 = remainder;
  1635  04F9  082D               	movf	tx_sn@remainder+1,w
  1636  04FA  00A7               	movwf	tx_sn@digit1+1
  1637  04FB  082C               	movf	tx_sn@remainder,w
  1638  04FC  00A6               	movwf	tx_sn@digit1
  1639  04FD                     l1570:
  1640                           
  1641                           ;./uart.h: 38:         digit2 = val/10;
  1642  04FD  300A               	movlw	10
  1643  04FE  00F0               	movwf	___lwdiv@divisor
  1644  04FF  3000               	movlw	0
  1645  0500  00F1               	movwf	___lwdiv@divisor+1
  1646  0501  087A               	movf	tx_sn@val+1,w
  1647  0502  00F3               	movwf	___lwdiv@dividend+1
  1648  0503  0879               	movf	tx_sn@val,w
  1649  0504  00F2               	movwf	___lwdiv@dividend
  1650  0505  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  1651  050A  0871               	movf	?___lwdiv+1,w
  1652  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1653  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1654  050D  00A9               	movwf	tx_sn@digit2+1
  1655  050E  0870               	movf	?___lwdiv,w
  1656  050F  00A8               	movwf	tx_sn@digit2
  1657  0510                     l1572:
  1658                           
  1659                           ;./uart.h: 39:         tx(digit2+0x30);
  1660  0510  0828               	movf	tx_sn@digit2,w
  1661  0511  3E30               	addlw	48
  1662  0512  120A  158A  261E  120A  118A  	fcall	_tx
  1663  0517                     l1574:
  1664                           
  1665                           ;./uart.h: 40:         tx(digit1+0x30);
  1666  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0519  0826               	movf	tx_sn@digit1,w
  1669  051A  3E30               	addlw	48
  1670  051B  120A  158A  261E  120A  118A  	fcall	_tx
  1671                           
  1672                           ;./uart.h: 41:     }
  1673  0520  2E54               	goto	l106
  1674  0521                     l1576:
  1675  0521  3000               	movlw	0
  1676  0522  027A               	subwf	tx_sn@val+1,w
  1677  0523  3064               	movlw	100
  1678  0524  1903               	skipnz
  1679  0525  0279               	subwf	tx_sn@val,w
  1680  0526  1C03               	skipc
  1681  0527  2D29               	goto	u1411
  1682  0528  2D2A               	goto	u1410
  1683  0529                     u1411:
  1684  0529  2DA1               	goto	l1594
  1685  052A                     u1410:
  1686  052A                     l1578:
  1687  052A  3003               	movlw	3
  1688  052B  027A               	subwf	tx_sn@val+1,w
  1689  052C  30E8               	movlw	232
  1690  052D  1903               	skipnz
  1691  052E  0279               	subwf	tx_sn@val,w
  1692  052F  1803               	skipnc
  1693  0530  2D32               	goto	u1421
  1694  0531  2D33               	goto	u1420
  1695  0532                     u1421:
  1696  0532  2DA1               	goto	l1594
  1697  0533                     u1420:
  1698  0533                     l1580:
  1699                           
  1700                           ;./uart.h: 43:     {;./uart.h: 44:         remainder = val % 10;
  1701  0533  300A               	movlw	10
  1702  0534  00F0               	movwf	___lwmod@divisor
  1703  0535  3000               	movlw	0
  1704  0536  00F1               	movwf	___lwmod@divisor+1
  1705  0537  087A               	movf	tx_sn@val+1,w
  1706  0538  00F3               	movwf	___lwmod@dividend+1
  1707  0539  0879               	movf	tx_sn@val,w
  1708  053A  00F2               	movwf	___lwmod@dividend
  1709  053B  120A  158A  2702  120A  118A  	fcall	___lwmod
  1710  0540  0871               	movf	?___lwmod+1,w
  1711  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0543  00AD               	movwf	tx_sn@remainder+1
  1714  0544  0870               	movf	?___lwmod,w
  1715  0545  00AC               	movwf	tx_sn@remainder
  1716                           
  1717                           ;./uart.h: 45:         result1 = val /10;
  1718  0546  300A               	movlw	10
  1719  0547  00F0               	movwf	___lwdiv@divisor
  1720  0548  3000               	movlw	0
  1721  0549  00F1               	movwf	___lwdiv@divisor+1
  1722  054A  087A               	movf	tx_sn@val+1,w
  1723  054B  00F3               	movwf	___lwdiv@dividend+1
  1724  054C  0879               	movf	tx_sn@val,w
  1725  054D  00F2               	movwf	___lwdiv@dividend
  1726  054E  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  1727  0553  0871               	movf	?___lwdiv+1,w
  1728  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0556  00AB               	movwf	tx_sn@result1+1
  1731  0557  0870               	movf	?___lwdiv,w
  1732  0558  00AA               	movwf	tx_sn@result1
  1733  0559                     l1582:
  1734                           
  1735                           ;./uart.h: 46:         digit1 = remainder;
  1736  0559  082D               	movf	tx_sn@remainder+1,w
  1737  055A  00A7               	movwf	tx_sn@digit1+1
  1738  055B  082C               	movf	tx_sn@remainder,w
  1739  055C  00A6               	movwf	tx_sn@digit1
  1740  055D                     l1584:
  1741                           
  1742                           ;./uart.h: 47:         remainder = result1%10;
  1743  055D  300A               	movlw	10
  1744  055E  00F0               	movwf	___awmod@divisor
  1745  055F  3000               	movlw	0
  1746  0560  00F1               	movwf	___awmod@divisor+1
  1747  0561  082B               	movf	tx_sn@result1+1,w
  1748  0562  00F3               	movwf	___awmod@dividend+1
  1749  0563  082A               	movf	tx_sn@result1,w
  1750  0564  00F2               	movwf	___awmod@dividend
  1751  0565  120A  118A  2076  120A  118A  	fcall	___awmod
  1752  056A  0871               	movf	?___awmod+1,w
  1753  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1754  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1755  056D  00AD               	movwf	tx_sn@remainder+1
  1756  056E  0870               	movf	?___awmod,w
  1757  056F  00AC               	movwf	tx_sn@remainder
  1758                           
  1759                           ;./uart.h: 48:         digit2 = remainder;
  1760  0570  082D               	movf	tx_sn@remainder+1,w
  1761  0571  00A9               	movwf	tx_sn@digit2+1
  1762  0572  082C               	movf	tx_sn@remainder,w
  1763  0573  00A8               	movwf	tx_sn@digit2
  1764  0574                     l1586:
  1765                           
  1766                           ;./uart.h: 49:         digit3 = result1/10;
  1767  0574  300A               	movlw	10
  1768  0575  00F0               	movwf	___awdiv@divisor
  1769  0576  3000               	movlw	0
  1770  0577  00F1               	movwf	___awdiv@divisor+1
  1771  0578  082B               	movf	tx_sn@result1+1,w
  1772  0579  00F3               	movwf	___awdiv@dividend+1
  1773  057A  082A               	movf	tx_sn@result1,w
  1774  057B  00F2               	movwf	___awdiv@dividend
  1775  057C  120A  118A  2133  120A  118A  	fcall	___awdiv
  1776  0581  0871               	movf	?___awdiv+1,w
  1777  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0584  00A5               	movwf	tx_sn@digit3+1
  1780  0585  0870               	movf	?___awdiv,w
  1781  0586  00A4               	movwf	tx_sn@digit3
  1782  0587                     l1588:
  1783                           
  1784                           ;./uart.h: 50:         tx(digit3+0x30);
  1785  0587  0824               	movf	tx_sn@digit3,w
  1786  0588  3E30               	addlw	48
  1787  0589  120A  158A  261E  120A  118A  	fcall	_tx
  1788  058E                     l1590:
  1789                           
  1790                           ;./uart.h: 51:         tx(digit2+0x30);
  1791  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1792  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0590  0828               	movf	tx_sn@digit2,w
  1794  0591  3E30               	addlw	48
  1795  0592  120A  158A  261E  120A  118A  	fcall	_tx
  1796  0597                     l1592:
  1797                           
  1798                           ;./uart.h: 52:         tx(digit1+0x30);
  1799  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0599  0826               	movf	tx_sn@digit1,w
  1802  059A  3E30               	addlw	48
  1803  059B  120A  158A  261E  120A  118A  	fcall	_tx
  1804                           
  1805                           ;./uart.h: 53:     }
  1806  05A0  2E54               	goto	l106
  1807  05A1                     l1594:
  1808  05A1  3003               	movlw	3
  1809  05A2  027A               	subwf	tx_sn@val+1,w
  1810  05A3  30E8               	movlw	232
  1811  05A4  1903               	skipnz
  1812  05A5  0279               	subwf	tx_sn@val,w
  1813  05A6  1C03               	skipc
  1814  05A7  2DA9               	goto	u1431
  1815  05A8  2DAA               	goto	u1430
  1816  05A9                     u1431:
  1817  05A9  2E54               	goto	l102
  1818  05AA                     u1430:
  1819  05AA                     l1596:
  1820  05AA  3027               	movlw	39
  1821  05AB  027A               	subwf	tx_sn@val+1,w
  1822  05AC  300F               	movlw	15
  1823  05AD  1903               	skipnz
  1824  05AE  0279               	subwf	tx_sn@val,w
  1825  05AF  1803               	skipnc
  1826  05B0  2DB2               	goto	u1441
  1827  05B1  2DB3               	goto	u1440
  1828  05B2                     u1441:
  1829  05B2  2E54               	goto	l102
  1830  05B3                     u1440:
  1831  05B3                     l1598:
  1832                           
  1833                           ;./uart.h: 55:     {;./uart.h: 56:         remainder = val % 10;
  1834  05B3  300A               	movlw	10
  1835  05B4  00F0               	movwf	___lwmod@divisor
  1836  05B5  3000               	movlw	0
  1837  05B6  00F1               	movwf	___lwmod@divisor+1
  1838  05B7  087A               	movf	tx_sn@val+1,w
  1839  05B8  00F3               	movwf	___lwmod@dividend+1
  1840  05B9  0879               	movf	tx_sn@val,w
  1841  05BA  00F2               	movwf	___lwmod@dividend
  1842  05BB  120A  158A  2702  120A  118A  	fcall	___lwmod
  1843  05C0  0871               	movf	?___lwmod+1,w
  1844  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1845  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1846  05C3  00AD               	movwf	tx_sn@remainder+1
  1847  05C4  0870               	movf	?___lwmod,w
  1848  05C5  00AC               	movwf	tx_sn@remainder
  1849                           
  1850                           ;./uart.h: 57:         result1 = val /10;
  1851  05C6  300A               	movlw	10
  1852  05C7  00F0               	movwf	___lwdiv@divisor
  1853  05C8  3000               	movlw	0
  1854  05C9  00F1               	movwf	___lwdiv@divisor+1
  1855  05CA  087A               	movf	tx_sn@val+1,w
  1856  05CB  00F3               	movwf	___lwdiv@dividend+1
  1857  05CC  0879               	movf	tx_sn@val,w
  1858  05CD  00F2               	movwf	___lwdiv@dividend
  1859  05CE  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  1860  05D3  0871               	movf	?___lwdiv+1,w
  1861  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1862  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1863  05D6  00AB               	movwf	tx_sn@result1+1
  1864  05D7  0870               	movf	?___lwdiv,w
  1865  05D8  00AA               	movwf	tx_sn@result1
  1866  05D9                     l1600:
  1867                           
  1868                           ;./uart.h: 58:         digit1 = remainder;
  1869  05D9  082D               	movf	tx_sn@remainder+1,w
  1870  05DA  00A7               	movwf	tx_sn@digit1+1
  1871  05DB  082C               	movf	tx_sn@remainder,w
  1872  05DC  00A6               	movwf	tx_sn@digit1
  1873  05DD                     l1602:
  1874                           
  1875                           ;./uart.h: 59:         remainder = result1%10;
  1876  05DD  300A               	movlw	10
  1877  05DE  00F0               	movwf	___awmod@divisor
  1878  05DF  3000               	movlw	0
  1879  05E0  00F1               	movwf	___awmod@divisor+1
  1880  05E1  082B               	movf	tx_sn@result1+1,w
  1881  05E2  00F3               	movwf	___awmod@dividend+1
  1882  05E3  082A               	movf	tx_sn@result1,w
  1883  05E4  00F2               	movwf	___awmod@dividend
  1884  05E5  120A  118A  2076  120A  118A  	fcall	___awmod
  1885  05EA  0871               	movf	?___awmod+1,w
  1886  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1887  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1888  05ED  00AD               	movwf	tx_sn@remainder+1
  1889  05EE  0870               	movf	?___awmod,w
  1890  05EF  00AC               	movwf	tx_sn@remainder
  1891                           
  1892                           ;./uart.h: 60:         digit2 = remainder;
  1893  05F0  082D               	movf	tx_sn@remainder+1,w
  1894  05F1  00A9               	movwf	tx_sn@digit2+1
  1895  05F2  082C               	movf	tx_sn@remainder,w
  1896  05F3  00A8               	movwf	tx_sn@digit2
  1897  05F4                     l1604:
  1898                           
  1899                           ;./uart.h: 61:         result = result1/10;
  1900  05F4  300A               	movlw	10
  1901  05F5  00F0               	movwf	___awdiv@divisor
  1902  05F6  3000               	movlw	0
  1903  05F7  00F1               	movwf	___awdiv@divisor+1
  1904  05F8  082B               	movf	tx_sn@result1+1,w
  1905  05F9  00F3               	movwf	___awdiv@dividend+1
  1906  05FA  082A               	movf	tx_sn@result1,w
  1907  05FB  00F2               	movwf	___awdiv@dividend
  1908  05FC  120A  118A  2133  120A  118A  	fcall	___awdiv
  1909  0601  0871               	movf	?___awdiv+1,w
  1910  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0604  00A3               	movwf	tx_sn@result+1
  1913  0605  0870               	movf	?___awdiv,w
  1914  0606  00A2               	movwf	tx_sn@result
  1915  0607                     l1606:
  1916                           
  1917                           ;./uart.h: 62:         remainder = result%10;
  1918  0607  300A               	movlw	10
  1919  0608  00F0               	movwf	___awmod@divisor
  1920  0609  3000               	movlw	0
  1921  060A  00F1               	movwf	___awmod@divisor+1
  1922  060B  0823               	movf	tx_sn@result+1,w
  1923  060C  00F3               	movwf	___awmod@dividend+1
  1924  060D  0822               	movf	tx_sn@result,w
  1925  060E  00F2               	movwf	___awmod@dividend
  1926  060F  120A  118A  2076  120A  118A  	fcall	___awmod
  1927  0614  0871               	movf	?___awmod+1,w
  1928  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0617  00AD               	movwf	tx_sn@remainder+1
  1931  0618  0870               	movf	?___awmod,w
  1932  0619  00AC               	movwf	tx_sn@remainder
  1933                           
  1934                           ;./uart.h: 63:         digit3=remainder;
  1935  061A  082D               	movf	tx_sn@remainder+1,w
  1936  061B  00A5               	movwf	tx_sn@digit3+1
  1937  061C  082C               	movf	tx_sn@remainder,w
  1938  061D  00A4               	movwf	tx_sn@digit3
  1939  061E                     l1608:
  1940                           
  1941                           ;./uart.h: 64:         digit4 = result/10;
  1942  061E  300A               	movlw	10
  1943  061F  00F0               	movwf	___awdiv@divisor
  1944  0620  3000               	movlw	0
  1945  0621  00F1               	movwf	___awdiv@divisor+1
  1946  0622  0823               	movf	tx_sn@result+1,w
  1947  0623  00F3               	movwf	___awdiv@dividend+1
  1948  0624  0822               	movf	tx_sn@result,w
  1949  0625  00F2               	movwf	___awdiv@dividend
  1950  0626  120A  118A  2133  120A  118A  	fcall	___awdiv
  1951  062B  0871               	movf	?___awdiv+1,w
  1952  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1953  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1954  062E  00A1               	movwf	tx_sn@digit4+1
  1955  062F  0870               	movf	?___awdiv,w
  1956  0630  00A0               	movwf	tx_sn@digit4
  1957  0631                     l1610:
  1958                           
  1959                           ;./uart.h: 65:         tx(digit4+0x30);
  1960  0631  0820               	movf	tx_sn@digit4,w
  1961  0632  3E30               	addlw	48
  1962  0633  120A  158A  261E  120A  118A  	fcall	_tx
  1963  0638                     l1612:
  1964                           
  1965                           ;./uart.h: 66:         tx(digit3+0x30);
  1966  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1968  063A  0824               	movf	tx_sn@digit3,w
  1969  063B  3E30               	addlw	48
  1970  063C  120A  158A  261E  120A  118A  	fcall	_tx
  1971  0641                     l1614:
  1972                           
  1973                           ;./uart.h: 67:         tx(digit2+0x30);
  1974  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1975  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1976  0643  0828               	movf	tx_sn@digit2,w
  1977  0644  3E30               	addlw	48
  1978  0645  120A  158A  261E  120A  118A  	fcall	_tx
  1979  064A                     l1616:
  1980                           
  1981                           ;./uart.h: 68:         tx(digit1+0x30);
  1982  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1983  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1984  064C  0826               	movf	tx_sn@digit1,w
  1985  064D  3E30               	addlw	48
  1986  064E  120A  158A  261E  120A  118A  	fcall	_tx
  1987  0653  2E54               	goto	l106
  1988  0654                     l102:
  1989  0654                     l106:
  1990  0654  0008               	return
  1991  0655                     __end_of_tx_sn:
  1992                           
  1993                           	psect	text5
  1994  0076                     __ptext5:	
  1995 ;; *************** function ___awmod *****************
  1996 ;; Defined at:
  1997 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  divisor         2    0[COMMON] int 
  2000 ;;  dividend        2    2[COMMON] int 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  sign            1    6[COMMON] unsigned char 
  2003 ;;  counter         1    5[COMMON] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2    0[COMMON] int 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         4       0       0       0       0
  2014 ;;      Locals:         2       0       0       0       0
  2015 ;;      Temps:          1       0       0       0       0
  2016 ;;      Totals:         7       0       0       0       0
  2017 ;;Total ram usage:        7 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_show_multidigits
  2023 ;;		_tx_sn
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function ___awmod
  2029  0076                     ___awmod:
  2030  0076                     l1448:	
  2031                           ;incstack = 0
  2032                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2033                           
  2034  0076  01F6               	clrf	___awmod@sign
  2035  0077                     l1450:
  2036  0077  1FF3               	btfss	___awmod@dividend+1,7
  2037  0078  287A               	goto	u1161
  2038  0079  287B               	goto	u1160
  2039  007A                     u1161:
  2040  007A  2882               	goto	l1456
  2041  007B                     u1160:
  2042  007B                     l1452:
  2043  007B  09F2               	comf	___awmod@dividend,f
  2044  007C  09F3               	comf	___awmod@dividend+1,f
  2045  007D  0AF2               	incf	___awmod@dividend,f
  2046  007E  1903               	skipnz
  2047  007F  0AF3               	incf	___awmod@dividend+1,f
  2048  0080                     l1454:
  2049  0080  01F6               	clrf	___awmod@sign
  2050  0081  0AF6               	incf	___awmod@sign,f
  2051  0082                     l1456:
  2052  0082  1FF1               	btfss	___awmod@divisor+1,7
  2053  0083  2885               	goto	u1171
  2054  0084  2886               	goto	u1170
  2055  0085                     u1171:
  2056  0085  288B               	goto	l1460
  2057  0086                     u1170:
  2058  0086                     l1458:
  2059  0086  09F0               	comf	___awmod@divisor,f
  2060  0087  09F1               	comf	___awmod@divisor+1,f
  2061  0088  0AF0               	incf	___awmod@divisor,f
  2062  0089  1903               	skipnz
  2063  008A  0AF1               	incf	___awmod@divisor+1,f
  2064  008B                     l1460:
  2065  008B  0870               	movf	___awmod@divisor,w
  2066  008C  0471               	iorwf	___awmod@divisor+1,w
  2067  008D  1903               	btfsc	3,2
  2068  008E  2890               	goto	u1181
  2069  008F  2891               	goto	u1180
  2070  0090                     u1181:
  2071  0090  28C0               	goto	l1478
  2072  0091                     u1180:
  2073  0091                     l1462:
  2074  0091  01F5               	clrf	___awmod@counter
  2075  0092  0AF5               	incf	___awmod@counter,f
  2076  0093  289F               	goto	l1468
  2077  0094                     l1464:
  2078  0094  3001               	movlw	1
  2079  0095                     u1195:
  2080  0095  1003               	clrc
  2081  0096  0DF0               	rlf	___awmod@divisor,f
  2082  0097  0DF1               	rlf	___awmod@divisor+1,f
  2083  0098  3EFF               	addlw	-1
  2084  0099  1D03               	skipz
  2085  009A  2895               	goto	u1195
  2086  009B                     l1466:
  2087  009B  3001               	movlw	1
  2088  009C  00F4               	movwf	??___awmod
  2089  009D  0874               	movf	??___awmod,w
  2090  009E  07F5               	addwf	___awmod@counter,f
  2091  009F                     l1468:
  2092  009F  1FF1               	btfss	___awmod@divisor+1,7
  2093  00A0  28A2               	goto	u1201
  2094  00A1  28A3               	goto	u1200
  2095  00A2                     u1201:
  2096  00A2  2894               	goto	l1464
  2097  00A3                     u1200:
  2098  00A3                     l1470:
  2099  00A3  0871               	movf	___awmod@divisor+1,w
  2100  00A4  0273               	subwf	___awmod@dividend+1,w
  2101  00A5  1D03               	skipz
  2102  00A6  28A9               	goto	u1215
  2103  00A7  0870               	movf	___awmod@divisor,w
  2104  00A8  0272               	subwf	___awmod@dividend,w
  2105  00A9                     u1215:
  2106  00A9  1C03               	skipc
  2107  00AA  28AC               	goto	u1211
  2108  00AB  28AD               	goto	u1210
  2109  00AC                     u1211:
  2110  00AC  28B3               	goto	l1474
  2111  00AD                     u1210:
  2112  00AD                     l1472:
  2113  00AD  0870               	movf	___awmod@divisor,w
  2114  00AE  02F2               	subwf	___awmod@dividend,f
  2115  00AF  0871               	movf	___awmod@divisor+1,w
  2116  00B0  1C03               	skipc
  2117  00B1  03F3               	decf	___awmod@dividend+1,f
  2118  00B2  02F3               	subwf	___awmod@dividend+1,f
  2119  00B3                     l1474:
  2120  00B3  3001               	movlw	1
  2121  00B4                     u1225:
  2122  00B4  1003               	clrc
  2123  00B5  0CF1               	rrf	___awmod@divisor+1,f
  2124  00B6  0CF0               	rrf	___awmod@divisor,f
  2125  00B7  3EFF               	addlw	-1
  2126  00B8  1D03               	skipz
  2127  00B9  28B4               	goto	u1225
  2128  00BA                     l1476:
  2129  00BA  3001               	movlw	1
  2130  00BB  02F5               	subwf	___awmod@counter,f
  2131  00BC  1D03               	btfss	3,2
  2132  00BD  28BF               	goto	u1231
  2133  00BE  28C0               	goto	u1230
  2134  00BF                     u1231:
  2135  00BF  28A3               	goto	l1470
  2136  00C0                     u1230:
  2137  00C0                     l1478:
  2138  00C0  0876               	movf	___awmod@sign,w
  2139  00C1  1903               	btfsc	3,2
  2140  00C2  28C4               	goto	u1241
  2141  00C3  28C5               	goto	u1240
  2142  00C4                     u1241:
  2143  00C4  28CA               	goto	l1482
  2144  00C5                     u1240:
  2145  00C5                     l1480:
  2146  00C5  09F2               	comf	___awmod@dividend,f
  2147  00C6  09F3               	comf	___awmod@dividend+1,f
  2148  00C7  0AF2               	incf	___awmod@dividend,f
  2149  00C8  1903               	skipnz
  2150  00C9  0AF3               	incf	___awmod@dividend+1,f
  2151  00CA                     l1482:
  2152  00CA  0873               	movf	___awmod@dividend+1,w
  2153  00CB  00F1               	movwf	?___awmod+1
  2154  00CC  0872               	movf	___awmod@dividend,w
  2155  00CD  00F0               	movwf	?___awmod
  2156  00CE                     l430:
  2157  00CE  0008               	return
  2158  00CF                     __end_of___awmod:
  2159                           
  2160                           	psect	text6
  2161  0133                     __ptext6:	
  2162 ;; *************** function ___awdiv *****************
  2163 ;; Defined at:
  2164 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  divisor         2    0[COMMON] int 
  2167 ;;  dividend        2    2[COMMON] int 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  quotient        2    7[COMMON] int 
  2170 ;;  sign            1    6[COMMON] unsigned char 
  2171 ;;  counter         1    5[COMMON] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  2    0[COMMON] int 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         4       0       0       0       0
  2182 ;;      Locals:         4       0       0       0       0
  2183 ;;      Temps:          1       0       0       0       0
  2184 ;;      Totals:         9       0       0       0       0
  2185 ;;Total ram usage:        9 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_show_multidigits
  2191 ;;		_tx_sn
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           
  2196                           ;psect for function ___awdiv
  2197  0133                     ___awdiv:
  2198  0133                     l1404:	
  2199                           ;incstack = 0
  2200                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2201                           
  2202  0133  01F6               	clrf	___awdiv@sign
  2203  0134                     l1406:
  2204  0134  1FF1               	btfss	___awdiv@divisor+1,7
  2205  0135  2937               	goto	u1061
  2206  0136  2938               	goto	u1060
  2207  0137                     u1061:
  2208  0137  293F               	goto	l1412
  2209  0138                     u1060:
  2210  0138                     l1408:
  2211  0138  09F0               	comf	___awdiv@divisor,f
  2212  0139  09F1               	comf	___awdiv@divisor+1,f
  2213  013A  0AF0               	incf	___awdiv@divisor,f
  2214  013B  1903               	skipnz
  2215  013C  0AF1               	incf	___awdiv@divisor+1,f
  2216  013D                     l1410:
  2217  013D  01F6               	clrf	___awdiv@sign
  2218  013E  0AF6               	incf	___awdiv@sign,f
  2219  013F                     l1412:
  2220  013F  1FF3               	btfss	___awdiv@dividend+1,7
  2221  0140  2942               	goto	u1071
  2222  0141  2943               	goto	u1070
  2223  0142                     u1071:
  2224  0142  294C               	goto	l1418
  2225  0143                     u1070:
  2226  0143                     l1414:
  2227  0143  09F2               	comf	___awdiv@dividend,f
  2228  0144  09F3               	comf	___awdiv@dividend+1,f
  2229  0145  0AF2               	incf	___awdiv@dividend,f
  2230  0146  1903               	skipnz
  2231  0147  0AF3               	incf	___awdiv@dividend+1,f
  2232  0148                     l1416:
  2233  0148  3001               	movlw	1
  2234  0149  00F4               	movwf	??___awdiv
  2235  014A  0874               	movf	??___awdiv,w
  2236  014B  06F6               	xorwf	___awdiv@sign,f
  2237  014C                     l1418:
  2238  014C  01F7               	clrf	___awdiv@quotient
  2239  014D  01F8               	clrf	___awdiv@quotient+1
  2240  014E                     l1420:
  2241  014E  0870               	movf	___awdiv@divisor,w
  2242  014F  0471               	iorwf	___awdiv@divisor+1,w
  2243  0150  1903               	btfsc	3,2
  2244  0151  2953               	goto	u1081
  2245  0152  2954               	goto	u1080
  2246  0153                     u1081:
  2247  0153  298B               	goto	l1440
  2248  0154                     u1080:
  2249  0154                     l1422:
  2250  0154  01F5               	clrf	___awdiv@counter
  2251  0155  0AF5               	incf	___awdiv@counter,f
  2252  0156  2962               	goto	l1428
  2253  0157                     l1424:
  2254  0157  3001               	movlw	1
  2255  0158                     u1095:
  2256  0158  1003               	clrc
  2257  0159  0DF0               	rlf	___awdiv@divisor,f
  2258  015A  0DF1               	rlf	___awdiv@divisor+1,f
  2259  015B  3EFF               	addlw	-1
  2260  015C  1D03               	skipz
  2261  015D  2958               	goto	u1095
  2262  015E                     l1426:
  2263  015E  3001               	movlw	1
  2264  015F  00F4               	movwf	??___awdiv
  2265  0160  0874               	movf	??___awdiv,w
  2266  0161  07F5               	addwf	___awdiv@counter,f
  2267  0162                     l1428:
  2268  0162  1FF1               	btfss	___awdiv@divisor+1,7
  2269  0163  2965               	goto	u1101
  2270  0164  2966               	goto	u1100
  2271  0165                     u1101:
  2272  0165  2957               	goto	l1424
  2273  0166                     u1100:
  2274  0166                     l1430:
  2275  0166  3001               	movlw	1
  2276  0167                     u1115:
  2277  0167  1003               	clrc
  2278  0168  0DF7               	rlf	___awdiv@quotient,f
  2279  0169  0DF8               	rlf	___awdiv@quotient+1,f
  2280  016A  3EFF               	addlw	-1
  2281  016B  1D03               	skipz
  2282  016C  2967               	goto	u1115
  2283  016D  0871               	movf	___awdiv@divisor+1,w
  2284  016E  0273               	subwf	___awdiv@dividend+1,w
  2285  016F  1D03               	skipz
  2286  0170  2973               	goto	u1125
  2287  0171  0870               	movf	___awdiv@divisor,w
  2288  0172  0272               	subwf	___awdiv@dividend,w
  2289  0173                     u1125:
  2290  0173  1C03               	skipc
  2291  0174  2976               	goto	u1121
  2292  0175  2977               	goto	u1120
  2293  0176                     u1121:
  2294  0176  297E               	goto	l1436
  2295  0177                     u1120:
  2296  0177                     l1432:
  2297  0177  0870               	movf	___awdiv@divisor,w
  2298  0178  02F2               	subwf	___awdiv@dividend,f
  2299  0179  0871               	movf	___awdiv@divisor+1,w
  2300  017A  1C03               	skipc
  2301  017B  03F3               	decf	___awdiv@dividend+1,f
  2302  017C  02F3               	subwf	___awdiv@dividend+1,f
  2303  017D                     l1434:
  2304  017D  1477               	bsf	___awdiv@quotient,0
  2305  017E                     l1436:
  2306  017E  3001               	movlw	1
  2307  017F                     u1135:
  2308  017F  1003               	clrc
  2309  0180  0CF1               	rrf	___awdiv@divisor+1,f
  2310  0181  0CF0               	rrf	___awdiv@divisor,f
  2311  0182  3EFF               	addlw	-1
  2312  0183  1D03               	skipz
  2313  0184  297F               	goto	u1135
  2314  0185                     l1438:
  2315  0185  3001               	movlw	1
  2316  0186  02F5               	subwf	___awdiv@counter,f
  2317  0187  1D03               	btfss	3,2
  2318  0188  298A               	goto	u1141
  2319  0189  298B               	goto	u1140
  2320  018A                     u1141:
  2321  018A  2966               	goto	l1430
  2322  018B                     u1140:
  2323  018B                     l1440:
  2324  018B  0876               	movf	___awdiv@sign,w
  2325  018C  1903               	btfsc	3,2
  2326  018D  298F               	goto	u1151
  2327  018E  2990               	goto	u1150
  2328  018F                     u1151:
  2329  018F  2995               	goto	l1444
  2330  0190                     u1150:
  2331  0190                     l1442:
  2332  0190  09F7               	comf	___awdiv@quotient,f
  2333  0191  09F8               	comf	___awdiv@quotient+1,f
  2334  0192  0AF7               	incf	___awdiv@quotient,f
  2335  0193  1903               	skipnz
  2336  0194  0AF8               	incf	___awdiv@quotient+1,f
  2337  0195                     l1444:
  2338  0195  0878               	movf	___awdiv@quotient+1,w
  2339  0196  00F1               	movwf	?___awdiv+1
  2340  0197  0877               	movf	___awdiv@quotient,w
  2341  0198  00F0               	movwf	?___awdiv
  2342  0199                     l417:
  2343  0199  0008               	return
  2344  019A                     __end_of___awdiv:
  2345                           
  2346                           	psect	text7
  2347  019A                     __ptext7:	
  2348 ;; *************** function _print_analogvoltages *****************
  2349 ;; Defined at:
  2350 ;;		line 99 in file "main.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  j               1   34[BANK0 ] unsigned char 
  2355 ;;  i               1   33[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         0       0       0       0       0
  2366 ;;      Locals:         0       2       0       0       0
  2367 ;;      Temps:          0       3       0       0       0
  2368 ;;      Totals:         0       5       0       0       0
  2369 ;;Total ram usage:        5 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 2
  2372 ;; This function calls:
  2373 ;;		_LCD_Char
  2374 ;;		_LCD_num
  2375 ;;		_tx
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function _print_analogvoltages
  2383  019A                     _print_analogvoltages:
  2384  019A                     l1754:	
  2385                           ;incstack = 0
  2386                           ; Regs used in _print_analogvoltages: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2387                           
  2388                           
  2389                           ;main.c: 101:     for (unsigned char i=0;i<4;i++)
  2390  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2391  019B  1303               	bcf	3,6	;RP1=0, select bank0
  2392  019C  01C1               	clrf	print_analogvoltages@i
  2393  019D                     l1760:
  2394                           
  2395                           ;main.c: 102:         {;main.c: 103:             LCD_num(AV[i]);
  2396  019D  0841               	movf	print_analogvoltages@i,w
  2397  019E  00BE               	movwf	??_print_analogvoltages
  2398  019F  073E               	addwf	??_print_analogvoltages,w
  2399  01A0  3E46               	addlw	(low (_AV| 0))& (0+255)
  2400  01A1  0084               	movwf	4
  2401  01A2  1383               	bcf	3,7	;select IRP bank0
  2402  01A3  0800               	movf	0,w
  2403  01A4  00BF               	movwf	??_print_analogvoltages+1
  2404  01A5  0A84               	incf	4,f
  2405  01A6  0800               	movf	0,w
  2406  01A7  00C0               	movwf	??_print_analogvoltages+2
  2407  01A8  083F               	movf	??_print_analogvoltages+1,w
  2408  01A9  00AE               	movwf	LCD_num@val
  2409  01AA  0840               	movf	??_print_analogvoltages+2,w
  2410  01AB  00AF               	movwf	LCD_num@val+1
  2411  01AC  01B0               	clrf	LCD_num@val+2
  2412  01AD  01B1               	clrf	LCD_num@val+3
  2413  01AE  120A  118A  233E  120A  118A  	fcall	_LCD_num
  2414  01B3                     l1762:
  2415                           
  2416                           ;main.c: 104:             LCD_Char(' ');
  2417  01B3  3020               	movlw	32
  2418  01B4  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  2419  01B9                     l1764:
  2420                           
  2421                           ;main.c: 105:             for (unsigned char j=0;j<3;j++)
  2422  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2423  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2424  01BB  01C2               	clrf	print_analogvoltages@j
  2425  01BC                     l1770:
  2426                           
  2427                           ;main.c: 106:             {;main.c: 107:                 tx((avv[j]+0x30));
  2428  01BC  0842               	movf	print_analogvoltages@j,w
  2429  01BD  3E51               	addlw	(low (_avv| 0))& (0+255)
  2430  01BE  0084               	movwf	4
  2431  01BF  1383               	bcf	3,7	;select IRP bank0
  2432  01C0  0800               	movf	0,w
  2433  01C1  3E30               	addlw	48
  2434  01C2  120A  158A  261E  120A  118A  	fcall	_tx
  2435  01C7                     l1772:
  2436                           
  2437                           ;main.c: 108:                 if (j == 0)
  2438  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2439  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2440  01C9  0842               	movf	print_analogvoltages@j,w
  2441  01CA  1D03               	btfss	3,2
  2442  01CB  29CD               	goto	u1671
  2443  01CC  29CE               	goto	u1670
  2444  01CD                     u1671:
  2445  01CD  29D5               	goto	l1776
  2446  01CE                     u1670:
  2447  01CE                     l1774:
  2448                           
  2449                           ;main.c: 109:                 {;main.c: 110:                     tx('.');
  2450  01CE  302E               	movlw	46
  2451  01CF  120A  158A  261E  120A  118A  	fcall	_tx
  2452                           
  2453                           ;main.c: 111:                 }
  2454  01D4  29E1               	goto	l1780
  2455  01D5                     l1776:
  2456  01D5  3002               	movlw	2
  2457  01D6  0642               	xorwf	print_analogvoltages@j,w
  2458  01D7  1D03               	btfss	3,2
  2459  01D8  29DA               	goto	u1681
  2460  01D9  29DB               	goto	u1680
  2461  01DA                     u1681:
  2462  01DA  29E1               	goto	l1780
  2463  01DB                     u1680:
  2464  01DB                     l1778:
  2465                           
  2466                           ;main.c: 113:                 {;main.c: 114:                     tx(',');
  2467  01DB  302C               	movlw	44
  2468  01DC  120A  158A  261E  120A  118A  	fcall	_tx
  2469  01E1                     l1780:
  2470                           
  2471                           ;main.c: 116:             }
  2472  01E1  3001               	movlw	1
  2473  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2474  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2475  01E4  00BE               	movwf	??_print_analogvoltages
  2476  01E5  083E               	movf	??_print_analogvoltages,w
  2477  01E6  07C2               	addwf	print_analogvoltages@j,f
  2478  01E7                     l1782:
  2479  01E7  3003               	movlw	3
  2480  01E8  0242               	subwf	print_analogvoltages@j,w
  2481  01E9  1C03               	skipc
  2482  01EA  29EC               	goto	u1691
  2483  01EB  29ED               	goto	u1690
  2484  01EC                     u1691:
  2485  01EC  29BC               	goto	l1770
  2486  01ED                     u1690:
  2487  01ED                     l1784:
  2488                           
  2489                           ;main.c: 118:             _delay((unsigned long)((100)*(20000000/4000.0)));
  2490  01ED  3003               	movlw	3
  2491  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2492  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2493  01F0  00C0               	movwf	??_print_analogvoltages+2
  2494  01F1  308A               	movlw	138
  2495  01F2  00BF               	movwf	??_print_analogvoltages+1
  2496  01F3  3055               	movlw	85
  2497  01F4  00BE               	movwf	??_print_analogvoltages
  2498  01F5                     u1757:
  2499  01F5  0BBE               	decfsz	??_print_analogvoltages,f
  2500  01F6  29F5               	goto	u1757
  2501  01F7  0BBF               	decfsz	??_print_analogvoltages+1,f
  2502  01F8  29F5               	goto	u1757
  2503  01F9  0BC0               	decfsz	??_print_analogvoltages+2,f
  2504  01FA  29F5               	goto	u1757
  2505  01FB                     l1786:
  2506                           
  2507                           ;main.c: 119:         }
  2508  01FB  3001               	movlw	1
  2509  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2510  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2511  01FE  00BE               	movwf	??_print_analogvoltages
  2512  01FF  083E               	movf	??_print_analogvoltages,w
  2513  0200  07C1               	addwf	print_analogvoltages@i,f
  2514  0201                     l1788:
  2515  0201  3004               	movlw	4
  2516  0202  0241               	subwf	print_analogvoltages@i,w
  2517  0203  1C03               	skipc
  2518  0204  2A06               	goto	u1701
  2519  0205  2A07               	goto	u1700
  2520  0206                     u1701:
  2521  0206  299D               	goto	l1760
  2522  0207                     u1700:
  2523  0207                     l178:
  2524  0207  0008               	return
  2525  0208                     __end_of_print_analogvoltages:
  2526                           
  2527                           	psect	text8
  2528  0E1E                     __ptext8:	
  2529 ;; *************** function _tx *****************
  2530 ;; Defined at:
  2531 ;;		line 14 in file "./uart.h"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  a               1    wreg     unsigned char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  a               1    0[COMMON] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      unsigned char 
  2538 ;; Registers used:
  2539 ;;		wreg
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         1       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0
  2548 ;;      Totals:         1       0       0       0       0
  2549 ;;Total ram usage:        1 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_tx_sn
  2555 ;;		_main
  2556 ;;		_print_serialnumber
  2557 ;;		_print_analogvoltages
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _tx
  2563  0E1E                     _tx:
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _tx: [wreg]
  2567                           ;tx@a stored from wreg
  2568  0E1E  00F0               	movwf	tx@a
  2569  0E1F                     l1348:
  2570                           
  2571                           ;./uart.h: 14: unsigned char tx(unsigned char a);./uart.h: 15: {;./uart.h: 16:  TXREG=a;
  2572  0E1F  0870               	movf	tx@a,w
  2573  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0E22  0099               	movwf	25	;volatile
  2576  0E23                     l87:	
  2577                           ;./uart.h: 17:  while(!TXIF);
  2578                           
  2579  0E23  1E0C               	btfss	12,4	;volatile
  2580  0E24  2E26               	goto	u901
  2581  0E25  2E27               	goto	u900
  2582  0E26                     u901:
  2583  0E26  2E23               	goto	l87
  2584  0E27                     u900:
  2585  0E27                     l89:
  2586                           
  2587                           ;./uart.h: 18:  TXIF = 0;
  2588  0E27  120C               	bcf	12,4	;volatile
  2589  0E28                     l90:
  2590  0E28  0008               	return
  2591  0E29                     __end_of_tx:
  2592                           
  2593                           	psect	text9
  2594  033E                     __ptext9:	
  2595 ;; *************** function _LCD_num *****************
  2596 ;; Defined at:
  2597 ;;		line 51 in file "./lcd4bit.h"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  val             4   14[BANK0 ] long 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  remainder       2   28[BANK0 ] unsigned int 
  2602 ;;  result1         2   26[BANK0 ] unsigned int 
  2603 ;;  result          2   24[BANK0 ] unsigned int 
  2604 ;;  digit3          2   22[BANK0 ] unsigned int 
  2605 ;;  digit2          2   20[BANK0 ] unsigned int 
  2606 ;;  digit1          2   18[BANK0 ] unsigned int 
  2607 ;;  calb_val        2    0        int 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         0       4       0       0       0
  2618 ;;      Locals:         0      12       0       0       0
  2619 ;;      Temps:          0       0       0       0       0
  2620 ;;      Totals:         0      16       0       0       0
  2621 ;;Total ram usage:       16 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 1
  2624 ;; This function calls:
  2625 ;;		_LCD_Char
  2626 ;;		___aldiv
  2627 ;;		___lmul
  2628 ;;		___lwdiv
  2629 ;;		___lwmod
  2630 ;;		_intdigits_chardigits
  2631 ;; This function is called by:
  2632 ;;		_print_analogvoltages
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _LCD_num
  2638  033E                     _LCD_num:
  2639  033E                     l1534:	
  2640                           ;incstack = 0
  2641                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  2642                           
  2643  033E                     l1536:
  2644                           
  2645                           ;./lcd4bit.h: 54:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 55:     result1;;./lcd4bit.h: 56:     result = ((val*100)/calb_val);
  2646  033E  3000               	movlw	0
  2647  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0341  00A3               	movwf	___aldiv@divisor+3
  2650  0342  3000               	movlw	0
  2651  0343  00A2               	movwf	___aldiv@divisor+2
  2652  0344  3000               	movlw	0
  2653  0345  00A1               	movwf	___aldiv@divisor+1
  2654  0346  30C8               	movlw	200
  2655  0347  00A0               	movwf	___aldiv@divisor
  2656  0348  0831               	movf	LCD_num@val+3,w
  2657  0349  00F3               	movwf	___lmul@multiplier+3
  2658  034A  0830               	movf	LCD_num@val+2,w
  2659  034B  00F2               	movwf	___lmul@multiplier+2
  2660  034C  082F               	movf	LCD_num@val+1,w
  2661  034D  00F1               	movwf	___lmul@multiplier+1
  2662  034E  082E               	movf	LCD_num@val,w
  2663  034F  00F0               	movwf	___lmul@multiplier
  2664  0350  3000               	movlw	0
  2665  0351  00F7               	movwf	___lmul@multiplicand+3
  2666  0352  3000               	movlw	0
  2667  0353  00F6               	movwf	___lmul@multiplicand+2
  2668  0354  3000               	movlw	0
  2669  0355  00F5               	movwf	___lmul@multiplicand+1
  2670  0356  3064               	movlw	100
  2671  0357  00F4               	movwf	___lmul@multiplicand
  2672  0358  120A  118A  2030  120A  118A  	fcall	___lmul
  2673  035D  0873               	movf	?___lmul+3,w
  2674  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2675  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0360  00A7               	movwf	___aldiv@dividend+3
  2677  0361  0872               	movf	?___lmul+2,w
  2678  0362  00A6               	movwf	___aldiv@dividend+2
  2679  0363  0871               	movf	?___lmul+1,w
  2680  0364  00A5               	movwf	___aldiv@dividend+1
  2681  0365  0870               	movf	?___lmul,w
  2682  0366  00A4               	movwf	___aldiv@dividend
  2683  0367  120A  118A  22A1  120A  118A  	fcall	___aldiv
  2684  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2685  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2686  036E  0821               	movf	?___aldiv+1,w
  2687  036F  00B9               	movwf	LCD_num@result+1
  2688  0370  0820               	movf	?___aldiv,w
  2689  0371  00B8               	movwf	LCD_num@result
  2690  0372                     l1538:
  2691                           
  2692                           ;./lcd4bit.h: 57:     remainder = result% 10;
  2693  0372  300A               	movlw	10
  2694  0373  00F0               	movwf	___lwmod@divisor
  2695  0374  3000               	movlw	0
  2696  0375  00F1               	movwf	___lwmod@divisor+1
  2697  0376  0839               	movf	LCD_num@result+1,w
  2698  0377  00F3               	movwf	___lwmod@dividend+1
  2699  0378  0838               	movf	LCD_num@result,w
  2700  0379  00F2               	movwf	___lwmod@dividend
  2701  037A  120A  158A  2702  120A  118A  	fcall	___lwmod
  2702  037F  0871               	movf	?___lwmod+1,w
  2703  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0382  00BD               	movwf	LCD_num@remainder+1
  2706  0383  0870               	movf	?___lwmod,w
  2707  0384  00BC               	movwf	LCD_num@remainder
  2708  0385                     l1540:
  2709                           
  2710                           ;./lcd4bit.h: 58:     result1 = result /10;
  2711  0385  300A               	movlw	10
  2712  0386  00F0               	movwf	___lwdiv@divisor
  2713  0387  3000               	movlw	0
  2714  0388  00F1               	movwf	___lwdiv@divisor+1
  2715  0389  0839               	movf	LCD_num@result+1,w
  2716  038A  00F3               	movwf	___lwdiv@dividend+1
  2717  038B  0838               	movf	LCD_num@result,w
  2718  038C  00F2               	movwf	___lwdiv@dividend
  2719  038D  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  2720  0392  0871               	movf	?___lwdiv+1,w
  2721  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0395  00BB               	movwf	LCD_num@result1+1
  2724  0396  0870               	movf	?___lwdiv,w
  2725  0397  00BA               	movwf	LCD_num@result1
  2726  0398                     l1542:
  2727                           
  2728                           ;./lcd4bit.h: 59:     digit1 = remainder;
  2729  0398  083D               	movf	LCD_num@remainder+1,w
  2730  0399  00B3               	movwf	LCD_num@digit1+1
  2731  039A  083C               	movf	LCD_num@remainder,w
  2732  039B  00B2               	movwf	LCD_num@digit1
  2733                           
  2734                           ;./lcd4bit.h: 60:     remainder = result1%10;
  2735  039C  300A               	movlw	10
  2736  039D  00F0               	movwf	___lwmod@divisor
  2737  039E  3000               	movlw	0
  2738  039F  00F1               	movwf	___lwmod@divisor+1
  2739  03A0  083B               	movf	LCD_num@result1+1,w
  2740  03A1  00F3               	movwf	___lwmod@dividend+1
  2741  03A2  083A               	movf	LCD_num@result1,w
  2742  03A3  00F2               	movwf	___lwmod@dividend
  2743  03A4  120A  158A  2702  120A  118A  	fcall	___lwmod
  2744  03A9  0871               	movf	?___lwmod+1,w
  2745  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2746  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2747  03AC  00BD               	movwf	LCD_num@remainder+1
  2748  03AD  0870               	movf	?___lwmod,w
  2749  03AE  00BC               	movwf	LCD_num@remainder
  2750  03AF                     l1544:
  2751                           
  2752                           ;./lcd4bit.h: 61:     digit2 = remainder;
  2753  03AF  083D               	movf	LCD_num@remainder+1,w
  2754  03B0  00B5               	movwf	LCD_num@digit2+1
  2755  03B1  083C               	movf	LCD_num@remainder,w
  2756  03B2  00B4               	movwf	LCD_num@digit2
  2757  03B3                     l1546:
  2758                           
  2759                           ;./lcd4bit.h: 62:     remainder = (result1/10);
  2760  03B3  300A               	movlw	10
  2761  03B4  00F0               	movwf	___lwdiv@divisor
  2762  03B5  3000               	movlw	0
  2763  03B6  00F1               	movwf	___lwdiv@divisor+1
  2764  03B7  083B               	movf	LCD_num@result1+1,w
  2765  03B8  00F3               	movwf	___lwdiv@dividend+1
  2766  03B9  083A               	movf	LCD_num@result1,w
  2767  03BA  00F2               	movwf	___lwdiv@dividend
  2768  03BB  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  2769  03C0  0871               	movf	?___lwdiv+1,w
  2770  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2771  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2772  03C3  00BD               	movwf	LCD_num@remainder+1
  2773  03C4  0870               	movf	?___lwdiv,w
  2774  03C5  00BC               	movwf	LCD_num@remainder
  2775                           
  2776                           ;./lcd4bit.h: 63:     digit3=remainder;
  2777  03C6  083D               	movf	LCD_num@remainder+1,w
  2778  03C7  00B7               	movwf	LCD_num@digit3+1
  2779  03C8  083C               	movf	LCD_num@remainder,w
  2780  03C9  00B6               	movwf	LCD_num@digit3
  2781  03CA                     l1548:
  2782                           
  2783                           ;./lcd4bit.h: 64:     LCD_Char(digit3+0x30);
  2784  03CA  0836               	movf	LCD_num@digit3,w
  2785  03CB  3E30               	addlw	48
  2786  03CC  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  2787  03D1                     l1550:
  2788                           
  2789                           ;./lcd4bit.h: 65:     LCD_Char('.');
  2790  03D1  302E               	movlw	46
  2791  03D2  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  2792  03D7                     l1552:
  2793                           
  2794                           ;./lcd4bit.h: 66:     LCD_Char(digit2+0x30);
  2795  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2796  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2797  03D9  0834               	movf	LCD_num@digit2,w
  2798  03DA  3E30               	addlw	48
  2799  03DB  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  2800  03E0                     l1554:
  2801                           
  2802                           ;./lcd4bit.h: 67:     LCD_Char(digit1+0x30);
  2803  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2804  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2805  03E2  0832               	movf	LCD_num@digit1,w
  2806  03E3  3E30               	addlw	48
  2807  03E4  120A  158A  277C  120A  118A  	fcall	_LCD_Char
  2808  03E9                     l1556:
  2809                           
  2810                           ;./lcd4bit.h: 69:     intdigits_chardigits(digit3,digit2,digit1);
  2811  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2812  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2813  03EB  0837               	movf	LCD_num@digit3+1,w
  2814  03EC  00F1               	movwf	intdigits_chardigits@a+1
  2815  03ED  0836               	movf	LCD_num@digit3,w
  2816  03EE  00F0               	movwf	intdigits_chardigits@a
  2817  03EF  0835               	movf	LCD_num@digit2+1,w
  2818  03F0  00F3               	movwf	intdigits_chardigits@b+1
  2819  03F1  0834               	movf	LCD_num@digit2,w
  2820  03F2  00F2               	movwf	intdigits_chardigits@b
  2821  03F3  0833               	movf	LCD_num@digit1+1,w
  2822  03F4  00F5               	movwf	intdigits_chardigits@c+1
  2823  03F5  0832               	movf	LCD_num@digit1,w
  2824  03F6  00F4               	movwf	intdigits_chardigits@c
  2825  03F7  120A  158A  2636  120A  118A  	fcall	_intdigits_chardigits
  2826  03FC                     l62:
  2827  03FC  0008               	return
  2828  03FD                     __end_of_LCD_num:
  2829                           
  2830                           	psect	text10
  2831  0E36                     __ptext10:	
  2832 ;; *************** function _intdigits_chardigits *****************
  2833 ;; Defined at:
  2834 ;;		line 79 in file "./lcd4bit.h"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  a               2    0[COMMON] unsigned int 
  2837 ;;  b               2    2[COMMON] unsigned int 
  2838 ;;  c               2    4[COMMON] unsigned int 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      unsigned char 
  2843 ;; Registers used:
  2844 ;;		wreg
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2850 ;;      Params:         6       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0
  2852 ;;      Temps:          1       0       0       0       0
  2853 ;;      Totals:         7       0       0       0       0
  2854 ;;Total ram usage:        7 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_LCD_num
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _intdigits_chardigits
  2865  0E36                     _intdigits_chardigits:
  2866  0E36                     l1338:	
  2867                           ;incstack = 0
  2868                           ; Regs used in _intdigits_chardigits: [wreg]
  2869                           
  2870                           
  2871                           ;./lcd4bit.h: 79: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     avv[0] = (unsigned char)a;
  2872  0E36  0870               	movf	intdigits_chardigits@a,w
  2873  0E37  00F6               	movwf	??_intdigits_chardigits
  2874  0E38  0876               	movf	??_intdigits_chardigits,w
  2875  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0E3B  00D1               	movwf	_avv
  2878                           
  2879                           ;./lcd4bit.h: 82:     avv[1] = (unsigned char)b;
  2880  0E3C  0872               	movf	intdigits_chardigits@b,w
  2881  0E3D  00F6               	movwf	??_intdigits_chardigits
  2882  0E3E  0876               	movf	??_intdigits_chardigits,w
  2883  0E3F  00D2               	movwf	_avv+1
  2884                           
  2885                           ;./lcd4bit.h: 83:     avv[2] = (unsigned char)c;
  2886  0E40  0874               	movf	intdigits_chardigits@c,w
  2887  0E41  00F6               	movwf	??_intdigits_chardigits
  2888  0E42  0876               	movf	??_intdigits_chardigits,w
  2889  0E43  00D3               	movwf	_avv+2
  2890  0E44                     l71:
  2891  0E44  0008               	return
  2892  0E45                     __end_of_intdigits_chardigits:
  2893                           
  2894                           	psect	text11
  2895  0F02                     __ptext11:	
  2896 ;; *************** function ___lwmod *****************
  2897 ;; Defined at:
  2898 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  divisor         2    0[COMMON] unsigned int 
  2901 ;;  dividend        2    2[COMMON] unsigned int 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  counter         1    5[COMMON] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2    0[COMMON] unsigned int 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         4       0       0       0       0
  2914 ;;      Locals:         1       0       0       0       0
  2915 ;;      Temps:          1       0       0       0       0
  2916 ;;      Totals:         6       0       0       0       0
  2917 ;;Total ram usage:        6 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_LCD_num
  2923 ;;		_show_multidigits
  2924 ;;		_tx_sn
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function ___lwmod
  2930  0F02                     ___lwmod:
  2931  0F02                     l1512:	
  2932                           ;incstack = 0
  2933                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2934                           
  2935  0F02  0870               	movf	___lwmod@divisor,w
  2936  0F03  0471               	iorwf	___lwmod@divisor+1,w
  2937  0F04  1903               	btfsc	3,2
  2938  0F05  2F07               	goto	u1321
  2939  0F06  2F08               	goto	u1320
  2940  0F07                     u1321:
  2941  0F07  2F37               	goto	l1530
  2942  0F08                     u1320:
  2943  0F08                     l1514:
  2944  0F08  01F5               	clrf	___lwmod@counter
  2945  0F09  0AF5               	incf	___lwmod@counter,f
  2946  0F0A  2F16               	goto	l1520
  2947  0F0B                     l1516:
  2948  0F0B  3001               	movlw	1
  2949  0F0C                     u1335:
  2950  0F0C  1003               	clrc
  2951  0F0D  0DF0               	rlf	___lwmod@divisor,f
  2952  0F0E  0DF1               	rlf	___lwmod@divisor+1,f
  2953  0F0F  3EFF               	addlw	-1
  2954  0F10  1D03               	skipz
  2955  0F11  2F0C               	goto	u1335
  2956  0F12                     l1518:
  2957  0F12  3001               	movlw	1
  2958  0F13  00F4               	movwf	??___lwmod
  2959  0F14  0874               	movf	??___lwmod,w
  2960  0F15  07F5               	addwf	___lwmod@counter,f
  2961  0F16                     l1520:
  2962  0F16  1FF1               	btfss	___lwmod@divisor+1,7
  2963  0F17  2F19               	goto	u1341
  2964  0F18  2F1A               	goto	u1340
  2965  0F19                     u1341:
  2966  0F19  2F0B               	goto	l1516
  2967  0F1A                     u1340:
  2968  0F1A                     l1522:
  2969  0F1A  0871               	movf	___lwmod@divisor+1,w
  2970  0F1B  0273               	subwf	___lwmod@dividend+1,w
  2971  0F1C  1D03               	skipz
  2972  0F1D  2F20               	goto	u1355
  2973  0F1E  0870               	movf	___lwmod@divisor,w
  2974  0F1F  0272               	subwf	___lwmod@dividend,w
  2975  0F20                     u1355:
  2976  0F20  1C03               	skipc
  2977  0F21  2F23               	goto	u1351
  2978  0F22  2F24               	goto	u1350
  2979  0F23                     u1351:
  2980  0F23  2F2A               	goto	l1526
  2981  0F24                     u1350:
  2982  0F24                     l1524:
  2983  0F24  0870               	movf	___lwmod@divisor,w
  2984  0F25  02F2               	subwf	___lwmod@dividend,f
  2985  0F26  0871               	movf	___lwmod@divisor+1,w
  2986  0F27  1C03               	skipc
  2987  0F28  03F3               	decf	___lwmod@dividend+1,f
  2988  0F29  02F3               	subwf	___lwmod@dividend+1,f
  2989  0F2A                     l1526:
  2990  0F2A  3001               	movlw	1
  2991  0F2B                     u1365:
  2992  0F2B  1003               	clrc
  2993  0F2C  0CF1               	rrf	___lwmod@divisor+1,f
  2994  0F2D  0CF0               	rrf	___lwmod@divisor,f
  2995  0F2E  3EFF               	addlw	-1
  2996  0F2F  1D03               	skipz
  2997  0F30  2F2B               	goto	u1365
  2998  0F31                     l1528:
  2999  0F31  3001               	movlw	1
  3000  0F32  02F5               	subwf	___lwmod@counter,f
  3001  0F33  1D03               	btfss	3,2
  3002  0F34  2F36               	goto	u1371
  3003  0F35  2F37               	goto	u1370
  3004  0F36                     u1371:
  3005  0F36  2F1A               	goto	l1522
  3006  0F37                     u1370:
  3007  0F37                     l1530:
  3008  0F37  0873               	movf	___lwmod@dividend+1,w
  3009  0F38  00F1               	movwf	?___lwmod+1
  3010  0F39  0872               	movf	___lwmod@dividend,w
  3011  0F3A  00F0               	movwf	?___lwmod
  3012  0F3B                     l546:
  3013  0F3B  0008               	return
  3014  0F3C                     __end_of___lwmod:
  3015                           
  3016                           	psect	text12
  3017  0FBC                     __ptext12:	
  3018 ;; *************** function ___lwdiv *****************
  3019 ;; Defined at:
  3020 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  divisor         2    0[COMMON] unsigned int 
  3023 ;;  dividend        2    2[COMMON] unsigned int 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  quotient        2    5[COMMON] unsigned int 
  3026 ;;  counter         1    7[COMMON] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  2    0[COMMON] unsigned int 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         4       0       0       0       0
  3037 ;;      Locals:         3       0       0       0       0
  3038 ;;      Temps:          1       0       0       0       0
  3039 ;;      Totals:         8       0       0       0       0
  3040 ;;Total ram usage:        8 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_LCD_num
  3046 ;;		_show_multidigits
  3047 ;;		_tx_sn
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function ___lwdiv
  3053  0FBC                     ___lwdiv:
  3054  0FBC                     l1486:	
  3055                           ;incstack = 0
  3056                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3057                           
  3058  0FBC  01F5               	clrf	___lwdiv@quotient
  3059  0FBD  01F6               	clrf	___lwdiv@quotient+1
  3060  0FBE                     l1488:
  3061  0FBE  0870               	movf	___lwdiv@divisor,w
  3062  0FBF  0471               	iorwf	___lwdiv@divisor+1,w
  3063  0FC0  1903               	btfsc	3,2
  3064  0FC1  2FC3               	goto	u1251
  3065  0FC2  2FC4               	goto	u1250
  3066  0FC3                     u1251:
  3067  0FC3  2FFB               	goto	l1508
  3068  0FC4                     u1250:
  3069  0FC4                     l1490:
  3070  0FC4  01F7               	clrf	___lwdiv@counter
  3071  0FC5  0AF7               	incf	___lwdiv@counter,f
  3072  0FC6  2FD2               	goto	l1496
  3073  0FC7                     l1492:
  3074  0FC7  3001               	movlw	1
  3075  0FC8                     u1265:
  3076  0FC8  1003               	clrc
  3077  0FC9  0DF0               	rlf	___lwdiv@divisor,f
  3078  0FCA  0DF1               	rlf	___lwdiv@divisor+1,f
  3079  0FCB  3EFF               	addlw	-1
  3080  0FCC  1D03               	skipz
  3081  0FCD  2FC8               	goto	u1265
  3082  0FCE                     l1494:
  3083  0FCE  3001               	movlw	1
  3084  0FCF  00F4               	movwf	??___lwdiv
  3085  0FD0  0874               	movf	??___lwdiv,w
  3086  0FD1  07F7               	addwf	___lwdiv@counter,f
  3087  0FD2                     l1496:
  3088  0FD2  1FF1               	btfss	___lwdiv@divisor+1,7
  3089  0FD3  2FD5               	goto	u1271
  3090  0FD4  2FD6               	goto	u1270
  3091  0FD5                     u1271:
  3092  0FD5  2FC7               	goto	l1492
  3093  0FD6                     u1270:
  3094  0FD6                     l1498:
  3095  0FD6  3001               	movlw	1
  3096  0FD7                     u1285:
  3097  0FD7  1003               	clrc
  3098  0FD8  0DF5               	rlf	___lwdiv@quotient,f
  3099  0FD9  0DF6               	rlf	___lwdiv@quotient+1,f
  3100  0FDA  3EFF               	addlw	-1
  3101  0FDB  1D03               	skipz
  3102  0FDC  2FD7               	goto	u1285
  3103  0FDD  0871               	movf	___lwdiv@divisor+1,w
  3104  0FDE  0273               	subwf	___lwdiv@dividend+1,w
  3105  0FDF  1D03               	skipz
  3106  0FE0  2FE3               	goto	u1295
  3107  0FE1  0870               	movf	___lwdiv@divisor,w
  3108  0FE2  0272               	subwf	___lwdiv@dividend,w
  3109  0FE3                     u1295:
  3110  0FE3  1C03               	skipc
  3111  0FE4  2FE6               	goto	u1291
  3112  0FE5  2FE7               	goto	u1290
  3113  0FE6                     u1291:
  3114  0FE6  2FEE               	goto	l1504
  3115  0FE7                     u1290:
  3116  0FE7                     l1500:
  3117  0FE7  0870               	movf	___lwdiv@divisor,w
  3118  0FE8  02F2               	subwf	___lwdiv@dividend,f
  3119  0FE9  0871               	movf	___lwdiv@divisor+1,w
  3120  0FEA  1C03               	skipc
  3121  0FEB  03F3               	decf	___lwdiv@dividend+1,f
  3122  0FEC  02F3               	subwf	___lwdiv@dividend+1,f
  3123  0FED                     l1502:
  3124  0FED  1475               	bsf	___lwdiv@quotient,0
  3125  0FEE                     l1504:
  3126  0FEE  3001               	movlw	1
  3127  0FEF                     u1305:
  3128  0FEF  1003               	clrc
  3129  0FF0  0CF1               	rrf	___lwdiv@divisor+1,f
  3130  0FF1  0CF0               	rrf	___lwdiv@divisor,f
  3131  0FF2  3EFF               	addlw	-1
  3132  0FF3  1D03               	skipz
  3133  0FF4  2FEF               	goto	u1305
  3134  0FF5                     l1506:
  3135  0FF5  3001               	movlw	1
  3136  0FF6  02F7               	subwf	___lwdiv@counter,f
  3137  0FF7  1D03               	btfss	3,2
  3138  0FF8  2FFA               	goto	u1311
  3139  0FF9  2FFB               	goto	u1310
  3140  0FFA                     u1311:
  3141  0FFA  2FD6               	goto	l1498
  3142  0FFB                     u1310:
  3143  0FFB                     l1508:
  3144  0FFB  0876               	movf	___lwdiv@quotient+1,w
  3145  0FFC  00F1               	movwf	?___lwdiv+1
  3146  0FFD  0875               	movf	___lwdiv@quotient,w
  3147  0FFE  00F0               	movwf	?___lwdiv
  3148  0FFF                     l536:
  3149  0FFF  0008               	return
  3150  1000                     __end_of___lwdiv:
  3151                           
  3152                           	psect	text13
  3153  0030                     __ptext13:	
  3154 ;; *************** function ___lmul *****************
  3155 ;; Defined at:
  3156 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  multiplier      4    0[COMMON] unsigned long 
  3159 ;;  multiplicand    4    4[COMMON] unsigned long 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  product         4    9[COMMON] unsigned long 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  4    0[COMMON] unsigned long 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         8       0       0       0       0
  3172 ;;      Locals:         4       0       0       0       0
  3173 ;;      Temps:          1       0       0       0       0
  3174 ;;      Totals:        13       0       0       0       0
  3175 ;;Total ram usage:       13 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_LCD_num
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function ___lmul
  3186  0030                     ___lmul:
  3187  0030                     l1350:	
  3188                           ;incstack = 0
  3189                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3190                           
  3191  0030  3000               	movlw	0
  3192  0031  00FC               	movwf	___lmul@product+3
  3193  0032  3000               	movlw	0
  3194  0033  00FB               	movwf	___lmul@product+2
  3195  0034  3000               	movlw	0
  3196  0035  00FA               	movwf	___lmul@product+1
  3197  0036  3000               	movlw	0
  3198  0037  00F9               	movwf	___lmul@product
  3199  0038                     l1352:
  3200  0038  1C70               	btfss	___lmul@multiplier,0
  3201  0039  283B               	goto	u911
  3202  003A  283C               	goto	u910
  3203  003B                     u911:
  3204  003B  2853               	goto	l1356
  3205  003C                     u910:
  3206  003C                     l1354:
  3207  003C  0874               	movf	___lmul@multiplicand,w
  3208  003D  07F9               	addwf	___lmul@product,f
  3209  003E  0875               	movf	___lmul@multiplicand+1,w
  3210  003F  1103               	clrz
  3211  0040  1803               	skipnc
  3212  0041  3E01               	addlw	1
  3213  0042  1903               	skipnz
  3214  0043  2845               	goto	u921
  3215  0044  07FA               	addwf	___lmul@product+1,f
  3216  0045                     u921:
  3217  0045  0876               	movf	___lmul@multiplicand+2,w
  3218  0046  1103               	clrz
  3219  0047  1803               	skipnc
  3220  0048  3E01               	addlw	1
  3221  0049  1903               	skipnz
  3222  004A  284C               	goto	u922
  3223  004B  07FB               	addwf	___lmul@product+2,f
  3224  004C                     u922:
  3225  004C  0877               	movf	___lmul@multiplicand+3,w
  3226  004D  1103               	clrz
  3227  004E  1803               	skipnc
  3228  004F  3E01               	addlw	1
  3229  0050  1903               	skipnz
  3230  0051  2853               	goto	u923
  3231  0052  07FC               	addwf	___lmul@product+3,f
  3232  0053                     u923:
  3233  0053                     l1356:
  3234  0053  3001               	movlw	1
  3235  0054  00F8               	movwf	??___lmul
  3236  0055                     u935:
  3237  0055  1003               	clrc
  3238  0056  0DF4               	rlf	___lmul@multiplicand,f
  3239  0057  0DF5               	rlf	___lmul@multiplicand+1,f
  3240  0058  0DF6               	rlf	___lmul@multiplicand+2,f
  3241  0059  0DF7               	rlf	___lmul@multiplicand+3,f
  3242  005A  0BF8               	decfsz	??___lmul,f
  3243  005B  2855               	goto	u935
  3244  005C                     l1358:
  3245  005C  3001               	movlw	1
  3246  005D                     u945:
  3247  005D  1003               	clrc
  3248  005E  0CF3               	rrf	___lmul@multiplier+3,f
  3249  005F  0CF2               	rrf	___lmul@multiplier+2,f
  3250  0060  0CF1               	rrf	___lmul@multiplier+1,f
  3251  0061  0CF0               	rrf	___lmul@multiplier,f
  3252  0062  3EFF               	addlw	-1
  3253  0063  1D03               	skipz
  3254  0064  285D               	goto	u945
  3255  0065  0873               	movf	___lmul@multiplier+3,w
  3256  0066  0472               	iorwf	___lmul@multiplier+2,w
  3257  0067  0471               	iorwf	___lmul@multiplier+1,w
  3258  0068  0470               	iorwf	___lmul@multiplier,w
  3259  0069  1D03               	skipz
  3260  006A  286C               	goto	u951
  3261  006B  286D               	goto	u950
  3262  006C                     u951:
  3263  006C  2838               	goto	l1352
  3264  006D                     u950:
  3265  006D                     l1360:
  3266  006D  087C               	movf	___lmul@product+3,w
  3267  006E  00F3               	movwf	?___lmul+3
  3268  006F  087B               	movf	___lmul@product+2,w
  3269  0070  00F2               	movwf	?___lmul+2
  3270  0071  087A               	movf	___lmul@product+1,w
  3271  0072  00F1               	movwf	?___lmul+1
  3272  0073  0879               	movf	___lmul@product,w
  3273  0074  00F0               	movwf	?___lmul
  3274  0075                     l278:
  3275  0075  0008               	return
  3276  0076                     __end_of___lmul:
  3277                           
  3278                           	psect	text14
  3279  02A1                     __ptext14:	
  3280 ;; *************** function ___aldiv *****************
  3281 ;; Defined at:
  3282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  divisor         4    0[BANK0 ] long 
  3285 ;;  dividend        4    4[BANK0 ] long 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  quotient        4   10[BANK0 ] long 
  3288 ;;  sign            1    9[BANK0 ] unsigned char 
  3289 ;;  counter         1    8[BANK0 ] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  4    0[BANK0 ] long 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         0       8       0       0       0
  3300 ;;      Locals:         0       6       0       0       0
  3301 ;;      Temps:          1       0       0       0       0
  3302 ;;      Totals:         1      14       0       0       0
  3303 ;;Total ram usage:       15 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_LCD_num
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function ___aldiv
  3314  02A1                     ___aldiv:
  3315  02A1                     l1364:	
  3316                           ;incstack = 0
  3317                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3318                           
  3319  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  3320  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  3321  02A3  01A9               	clrf	___aldiv@sign
  3322  02A4                     l1366:
  3323  02A4  1FA3               	btfss	___aldiv@divisor+3,7
  3324  02A5  2AA7               	goto	u961
  3325  02A6  2AA8               	goto	u960
  3326  02A7                     u961:
  3327  02A7  2AB5               	goto	l329
  3328  02A8                     u960:
  3329  02A8                     l1368:
  3330  02A8  09A0               	comf	___aldiv@divisor,f
  3331  02A9  09A1               	comf	___aldiv@divisor+1,f
  3332  02AA  09A2               	comf	___aldiv@divisor+2,f
  3333  02AB  09A3               	comf	___aldiv@divisor+3,f
  3334  02AC  0AA0               	incf	___aldiv@divisor,f
  3335  02AD  1903               	skipnz
  3336  02AE  0AA1               	incf	___aldiv@divisor+1,f
  3337  02AF  1903               	skipnz
  3338  02B0  0AA2               	incf	___aldiv@divisor+2,f
  3339  02B1  1903               	skipnz
  3340  02B2  0AA3               	incf	___aldiv@divisor+3,f
  3341  02B3  01A9               	clrf	___aldiv@sign
  3342  02B4  0AA9               	incf	___aldiv@sign,f
  3343  02B5                     l329:
  3344  02B5  1FA7               	btfss	___aldiv@dividend+3,7
  3345  02B6  2AB8               	goto	u971
  3346  02B7  2AB9               	goto	u970
  3347  02B8                     u971:
  3348  02B8  2AC8               	goto	l1374
  3349  02B9                     u970:
  3350  02B9                     l1370:
  3351  02B9  09A4               	comf	___aldiv@dividend,f
  3352  02BA  09A5               	comf	___aldiv@dividend+1,f
  3353  02BB  09A6               	comf	___aldiv@dividend+2,f
  3354  02BC  09A7               	comf	___aldiv@dividend+3,f
  3355  02BD  0AA4               	incf	___aldiv@dividend,f
  3356  02BE  1903               	skipnz
  3357  02BF  0AA5               	incf	___aldiv@dividend+1,f
  3358  02C0  1903               	skipnz
  3359  02C1  0AA6               	incf	___aldiv@dividend+2,f
  3360  02C2  1903               	skipnz
  3361  02C3  0AA7               	incf	___aldiv@dividend+3,f
  3362  02C4                     l1372:
  3363  02C4  3001               	movlw	1
  3364  02C5  00FD               	movwf	??___aldiv
  3365  02C6  087D               	movf	??___aldiv,w
  3366  02C7  06A9               	xorwf	___aldiv@sign,f
  3367  02C8                     l1374:
  3368  02C8  3000               	movlw	0
  3369  02C9  00AD               	movwf	___aldiv@quotient+3
  3370  02CA  3000               	movlw	0
  3371  02CB  00AC               	movwf	___aldiv@quotient+2
  3372  02CC  3000               	movlw	0
  3373  02CD  00AB               	movwf	___aldiv@quotient+1
  3374  02CE  3000               	movlw	0
  3375  02CF  00AA               	movwf	___aldiv@quotient
  3376  02D0                     l1376:
  3377  02D0  0823               	movf	___aldiv@divisor+3,w
  3378  02D1  0422               	iorwf	___aldiv@divisor+2,w
  3379  02D2  0421               	iorwf	___aldiv@divisor+1,w
  3380  02D3  0420               	iorwf	___aldiv@divisor,w
  3381  02D4  1903               	skipnz
  3382  02D5  2AD7               	goto	u981
  3383  02D6  2AD8               	goto	u980
  3384  02D7                     u981:
  3385  02D7  2B25               	goto	l1396
  3386  02D8                     u980:
  3387  02D8                     l1378:
  3388  02D8  01A8               	clrf	___aldiv@counter
  3389  02D9  0AA8               	incf	___aldiv@counter,f
  3390  02DA  2AE8               	goto	l1382
  3391  02DB                     l1380:
  3392  02DB  3001               	movlw	1
  3393  02DC  00FD               	movwf	??___aldiv
  3394  02DD                     u995:
  3395  02DD  1003               	clrc
  3396  02DE  0DA0               	rlf	___aldiv@divisor,f
  3397  02DF  0DA1               	rlf	___aldiv@divisor+1,f
  3398  02E0  0DA2               	rlf	___aldiv@divisor+2,f
  3399  02E1  0DA3               	rlf	___aldiv@divisor+3,f
  3400  02E2  0BFD               	decfsz	??___aldiv,f
  3401  02E3  2ADD               	goto	u995
  3402  02E4  3001               	movlw	1
  3403  02E5  00FD               	movwf	??___aldiv
  3404  02E6  087D               	movf	??___aldiv,w
  3405  02E7  07A8               	addwf	___aldiv@counter,f
  3406  02E8                     l1382:
  3407  02E8  1FA3               	btfss	___aldiv@divisor+3,7
  3408  02E9  2AEB               	goto	u1001
  3409  02EA  2AEC               	goto	u1000
  3410  02EB                     u1001:
  3411  02EB  2ADB               	goto	l1380
  3412  02EC                     u1000:
  3413  02EC                     l1384:
  3414  02EC  3001               	movlw	1
  3415  02ED  00FD               	movwf	??___aldiv
  3416  02EE                     u1015:
  3417  02EE  1003               	clrc
  3418  02EF  0DAA               	rlf	___aldiv@quotient,f
  3419  02F0  0DAB               	rlf	___aldiv@quotient+1,f
  3420  02F1  0DAC               	rlf	___aldiv@quotient+2,f
  3421  02F2  0DAD               	rlf	___aldiv@quotient+3,f
  3422  02F3  0BFD               	decfsz	??___aldiv,f
  3423  02F4  2AEE               	goto	u1015
  3424  02F5                     l1386:
  3425  02F5  0823               	movf	___aldiv@divisor+3,w
  3426  02F6  0227               	subwf	___aldiv@dividend+3,w
  3427  02F7  1D03               	skipz
  3428  02F8  2B03               	goto	u1025
  3429  02F9  0822               	movf	___aldiv@divisor+2,w
  3430  02FA  0226               	subwf	___aldiv@dividend+2,w
  3431  02FB  1D03               	skipz
  3432  02FC  2B03               	goto	u1025
  3433  02FD  0821               	movf	___aldiv@divisor+1,w
  3434  02FE  0225               	subwf	___aldiv@dividend+1,w
  3435  02FF  1D03               	skipz
  3436  0300  2B03               	goto	u1025
  3437  0301  0820               	movf	___aldiv@divisor,w
  3438  0302  0224               	subwf	___aldiv@dividend,w
  3439  0303                     u1025:
  3440  0303  1C03               	skipc
  3441  0304  2B06               	goto	u1021
  3442  0305  2B07               	goto	u1020
  3443  0306                     u1021:
  3444  0306  2B16               	goto	l1392
  3445  0307                     u1020:
  3446  0307                     l1388:
  3447  0307  0820               	movf	___aldiv@divisor,w
  3448  0308  02A4               	subwf	___aldiv@dividend,f
  3449  0309  0821               	movf	___aldiv@divisor+1,w
  3450  030A  1C03               	skipc
  3451  030B  0F21               	incfsz	___aldiv@divisor+1,w
  3452  030C  02A5               	subwf	___aldiv@dividend+1,f
  3453  030D  0822               	movf	___aldiv@divisor+2,w
  3454  030E  1C03               	skipc
  3455  030F  0F22               	incfsz	___aldiv@divisor+2,w
  3456  0310  02A6               	subwf	___aldiv@dividend+2,f
  3457  0311  0823               	movf	___aldiv@divisor+3,w
  3458  0312  1C03               	skipc
  3459  0313  0F23               	incfsz	___aldiv@divisor+3,w
  3460  0314  02A7               	subwf	___aldiv@dividend+3,f
  3461  0315                     l1390:
  3462  0315  142A               	bsf	___aldiv@quotient,0
  3463  0316                     l1392:
  3464  0316  3001               	movlw	1
  3465  0317                     u1035:
  3466  0317  1003               	clrc
  3467  0318  0CA3               	rrf	___aldiv@divisor+3,f
  3468  0319  0CA2               	rrf	___aldiv@divisor+2,f
  3469  031A  0CA1               	rrf	___aldiv@divisor+1,f
  3470  031B  0CA0               	rrf	___aldiv@divisor,f
  3471  031C  3EFF               	addlw	-1
  3472  031D  1D03               	skipz
  3473  031E  2B17               	goto	u1035
  3474  031F                     l1394:
  3475  031F  3001               	movlw	1
  3476  0320  02A8               	subwf	___aldiv@counter,f
  3477  0321  1D03               	btfss	3,2
  3478  0322  2B24               	goto	u1041
  3479  0323  2B25               	goto	u1040
  3480  0324                     u1041:
  3481  0324  2AEC               	goto	l1384
  3482  0325                     u1040:
  3483  0325                     l1396:
  3484  0325  0829               	movf	___aldiv@sign,w
  3485  0326  1903               	btfsc	3,2
  3486  0327  2B29               	goto	u1051
  3487  0328  2B2A               	goto	u1050
  3488  0329                     u1051:
  3489  0329  2B35               	goto	l1400
  3490  032A                     u1050:
  3491  032A                     l1398:
  3492  032A  09AA               	comf	___aldiv@quotient,f
  3493  032B  09AB               	comf	___aldiv@quotient+1,f
  3494  032C  09AC               	comf	___aldiv@quotient+2,f
  3495  032D  09AD               	comf	___aldiv@quotient+3,f
  3496  032E  0AAA               	incf	___aldiv@quotient,f
  3497  032F  1903               	skipnz
  3498  0330  0AAB               	incf	___aldiv@quotient+1,f
  3499  0331  1903               	skipnz
  3500  0332  0AAC               	incf	___aldiv@quotient+2,f
  3501  0333  1903               	skipnz
  3502  0334  0AAD               	incf	___aldiv@quotient+3,f
  3503  0335                     l1400:
  3504  0335  082D               	movf	___aldiv@quotient+3,w
  3505  0336  00A3               	movwf	?___aldiv+3
  3506  0337  082C               	movf	___aldiv@quotient+2,w
  3507  0338  00A2               	movwf	?___aldiv+2
  3508  0339  082B               	movf	___aldiv@quotient+1,w
  3509  033A  00A1               	movwf	?___aldiv+1
  3510  033B  082A               	movf	___aldiv@quotient,w
  3511  033C  00A0               	movwf	?___aldiv
  3512  033D                     l339:
  3513  033D  0008               	return
  3514  033E                     __end_of___aldiv:
  3515                           
  3516                           	psect	text15
  3517  03FD                     __ptext15:	
  3518 ;; *************** function _dht22_read *****************
  3519 ;; Defined at:
  3520 ;;		line 40 in file "./dht11.h"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  dht22_humi      1    wreg     PTR unsigned int 
  3523 ;;		 -> humidity(2), 
  3524 ;;  dht22_temp      1    6[COMMON] PTR int 
  3525 ;;		 -> temperature(2), 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  dht22_humi      1   13[COMMON] PTR unsigned int 
  3528 ;;		 -> humidity(2), 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3538 ;;      Params:         1       0       0       0       0
  3539 ;;      Locals:         1       0       0       0       0
  3540 ;;      Temps:          6       0       0       0       0
  3541 ;;      Totals:         8       0       0       0       0
  3542 ;;Total ram usage:        8 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; Hardware stack levels required when called: 3
  3545 ;; This function calls:
  3546 ;;		___wmul
  3547 ;;		_dht22_read_byte
  3548 ;;		_problem
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function _dht22_read
  3556  03FD                     _dht22_read:
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in _dht22_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3560                           ;dht22_read@dht22_humi stored from wreg
  3561  03FD  00FD               	movwf	dht22_read@dht22_humi
  3562  03FE                     l1724:
  3563                           
  3564                           ;./dht11.h: 40: void dht22_read(uint16_t *dht22_humi, int16_t *dht22_temp);./dht11.h: 41
      +                          : {;./dht11.h: 43:   PORTDbits.RD0 = 0;
  3565  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3566  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0400  1008               	bcf	8,0	;volatile
  3568                           
  3569                           ;./dht11.h: 44:   TRISDbits.TRISD0 = 0;
  3570  0401  1683               	bsf	3,5	;RP0=1, select bank1
  3571  0402  1303               	bcf	3,6	;RP1=0, select bank1
  3572  0403  1008               	bcf	8,0	;volatile
  3573  0404                     l1726:
  3574                           
  3575                           ;./dht11.h: 45:   _delay((unsigned long)((25)*(20000000/4000.0)));
  3576  0404  30A3               	movlw	163
  3577  0405  00F8               	movwf	??_dht22_read+1
  3578  0406  3055               	movlw	85
  3579  0407  00F7               	movwf	??_dht22_read
  3580  0408                     u1767:
  3581  0408  0BF7               	decfsz	??_dht22_read,f
  3582  0409  2C08               	goto	u1767
  3583  040A  0BF8               	decfsz	??_dht22_read+1,f
  3584  040B  2C08               	goto	u1767
  3585  040C                     l1728:
  3586                           
  3587                           ;./dht11.h: 46:   PORTDbits.RD0 = 1;
  3588  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3589  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3590  040E  1408               	bsf	8,0	;volatile
  3591                           
  3592                           ;./dht11.h: 47:   _delay((unsigned long)((30)*(20000000/4000.0)));
  3593  040F  30C3               	movlw	195
  3594  0410  00F8               	movwf	??_dht22_read+1
  3595  0411  30CD               	movlw	205
  3596  0412  00F7               	movwf	??_dht22_read
  3597  0413                     u1777:
  3598  0413  0BF7               	decfsz	??_dht22_read,f
  3599  0414  2C13               	goto	u1777
  3600  0415  0BF8               	decfsz	??_dht22_read+1,f
  3601  0416  2C13               	goto	u1777
  3602  0417                     l1730:
  3603                           
  3604                           ;./dht11.h: 48:   TRISDbits.TRISD0 = 1;
  3605  0417  1683               	bsf	3,5	;RP0=1, select bank1
  3606  0418  1303               	bcf	3,6	;RP1=0, select bank1
  3607  0419  1408               	bsf	8,0	;volatile
  3608  041A                     l1732:
  3609                           
  3610                           ;./dht11.h: 50:   problem(0);
  3611  041A  3000               	movlw	0
  3612  041B  120A  118A  200A  120A  118A  	fcall	_problem
  3613  0420                     l131:	
  3614                           ;./dht11.h: 51:   while( PORTDbits.RD0 );
  3615                           
  3616  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0422  1808               	btfsc	8,0	;volatile
  3619  0423  2C25               	goto	u1631
  3620  0424  2C26               	goto	u1630
  3621  0425                     u1631:
  3622  0425  2C20               	goto	l131
  3623  0426                     u1630:
  3624  0426                     l1734:
  3625                           
  3626                           ;./dht11.h: 52:   problem(1);
  3627  0426  3001               	movlw	1
  3628  0427  120A  118A  200A  120A  118A  	fcall	_problem
  3629  042C                     l134:	
  3630                           ;./dht11.h: 53:   while(!PORTDbits.RD0 );
  3631                           
  3632  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3633  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3634  042E  1C08               	btfss	8,0	;volatile
  3635  042F  2C31               	goto	u1641
  3636  0430  2C32               	goto	u1640
  3637  0431                     u1641:
  3638  0431  2C2C               	goto	l134
  3639  0432                     u1640:
  3640  0432                     l137:
  3641  0432  1808               	btfsc	8,0	;volatile
  3642  0433  2C35               	goto	u1651
  3643  0434  2C36               	goto	u1650
  3644  0435                     u1651:
  3645  0435  2C32               	goto	l137
  3646  0436                     u1650:
  3647  0436                     l1736:
  3648                           
  3649                           ;./dht11.h: 56:   *dht22_humi = dht22_read_byte();
  3650  0436  120A  158A  26C9  120A  118A  	fcall	_dht22_read_byte
  3651  043B  00F7               	movwf	??_dht22_read
  3652  043C  01F8               	clrf	??_dht22_read+1
  3653  043D  087D               	movf	dht22_read@dht22_humi,w
  3654  043E  0084               	movwf	4
  3655  043F  0877               	movf	??_dht22_read,w
  3656  0440  1383               	bcf	3,7	;select IRP bank0
  3657  0441  0080               	movwf	0
  3658  0442  0A84               	incf	4,f
  3659  0443  0878               	movf	??_dht22_read+1,w
  3660  0444  0080               	movwf	0
  3661  0445                     l1738:
  3662                           
  3663                           ;./dht11.h: 57:   *dht22_humi = (*dht22_humi << 8) | dht22_read_byte();
  3664  0445  120A  158A  26C9  120A  118A  	fcall	_dht22_read_byte
  3665  044A  00F7               	movwf	??_dht22_read
  3666  044B  01F8               	clrf	??_dht22_read+1
  3667  044C  087D               	movf	dht22_read@dht22_humi,w
  3668  044D  0084               	movwf	4
  3669  044E  1383               	bcf	3,7	;select IRP bank0
  3670  044F  0800               	movf	0,w
  3671  0450  00F9               	movwf	??_dht22_read+2
  3672  0451  0A84               	incf	4,f
  3673  0452  0800               	movf	0,w
  3674  0453  00FA               	movwf	??_dht22_read+3
  3675  0454  0879               	movf	??_dht22_read+2,w
  3676  0455  00FA               	movwf	??_dht22_read+3
  3677  0456  01F9               	clrf	??_dht22_read+2
  3678  0457  0877               	movf	??_dht22_read,w
  3679  0458  0479               	iorwf	??_dht22_read+2,w
  3680  0459  00FB               	movwf	??_dht22_read+4
  3681  045A  0878               	movf	??_dht22_read+1,w
  3682  045B  047A               	iorwf	??_dht22_read+3,w
  3683  045C  00FC               	movwf	??_dht22_read+5
  3684  045D  087D               	movf	dht22_read@dht22_humi,w
  3685  045E  0084               	movwf	4
  3686  045F  087B               	movf	??_dht22_read+4,w
  3687  0460  0080               	movwf	0
  3688  0461  0A84               	incf	4,f
  3689  0462  087C               	movf	??_dht22_read+5,w
  3690  0463  0080               	movwf	0
  3691  0464                     l1740:
  3692                           
  3693                           ;./dht11.h: 58:   *dht22_temp = dht22_read_byte();
  3694  0464  120A  158A  26C9  120A  118A  	fcall	_dht22_read_byte
  3695  0469  00F7               	movwf	??_dht22_read
  3696  046A  01F8               	clrf	??_dht22_read+1
  3697  046B  0876               	movf	dht22_read@dht22_temp,w
  3698  046C  0084               	movwf	4
  3699  046D  0877               	movf	??_dht22_read,w
  3700  046E  1383               	bcf	3,7	;select IRP bank0
  3701  046F  0080               	movwf	0
  3702  0470  0A84               	incf	4,f
  3703  0471  0878               	movf	??_dht22_read+1,w
  3704  0472  0080               	movwf	0
  3705                           
  3706                           ;./dht11.h: 59:   *dht22_temp = (*dht22_temp << 8) | dht22_read_byte();
  3707  0473  120A  158A  26C9  120A  118A  	fcall	_dht22_read_byte
  3708  0478  00F7               	movwf	??_dht22_read
  3709  0479  01F8               	clrf	??_dht22_read+1
  3710  047A  0876               	movf	dht22_read@dht22_temp,w
  3711  047B  0084               	movwf	4
  3712  047C  1383               	bcf	3,7	;select IRP bank0
  3713  047D  0800               	movf	0,w
  3714  047E  00F9               	movwf	??_dht22_read+2
  3715  047F  0A84               	incf	4,f
  3716  0480  0800               	movf	0,w
  3717  0481  00FA               	movwf	??_dht22_read+3
  3718  0482  0879               	movf	??_dht22_read+2,w
  3719  0483  00FA               	movwf	??_dht22_read+3
  3720  0484  01F9               	clrf	??_dht22_read+2
  3721  0485  0877               	movf	??_dht22_read,w
  3722  0486  0479               	iorwf	??_dht22_read+2,w
  3723  0487  00FB               	movwf	??_dht22_read+4
  3724  0488  0878               	movf	??_dht22_read+1,w
  3725  0489  047A               	iorwf	??_dht22_read+3,w
  3726  048A  00FC               	movwf	??_dht22_read+5
  3727  048B  0876               	movf	dht22_read@dht22_temp,w
  3728  048C  0084               	movwf	4
  3729  048D  087B               	movf	??_dht22_read+4,w
  3730  048E  0080               	movwf	0
  3731  048F  0A84               	incf	4,f
  3732  0490  087C               	movf	??_dht22_read+5,w
  3733  0491  0080               	movwf	0
  3734  0492                     l1742:
  3735                           
  3736                           ;./dht11.h: 60:   dht22_read_byte();
  3737  0492  120A  158A  26C9  120A  118A  	fcall	_dht22_read_byte
  3738  0497                     l1744:
  3739                           
  3740                           ;./dht11.h: 61:   if(*dht22_temp & 0x8000)
  3741  0497  0876               	movf	dht22_read@dht22_temp,w
  3742  0498  0084               	movwf	4
  3743  0499  1383               	bcf	3,7	;select IRP bank0
  3744  049A  0800               	movf	0,w
  3745  049B  00F7               	movwf	??_dht22_read
  3746  049C  0A84               	incf	4,f
  3747  049D  0800               	movf	0,w
  3748  049E  00F8               	movwf	??_dht22_read+1
  3749  049F  1FF8               	btfss	??_dht22_read+1,7
  3750  04A0  2CA2               	goto	u1661
  3751  04A1  2CA3               	goto	u1660
  3752  04A2                     u1661:
  3753  04A2  2CC2               	goto	l141
  3754  04A3                     u1660:
  3755  04A3                     l1746:
  3756                           
  3757                           ;./dht11.h: 62:   {;./dht11.h: 63:     *dht22_temp &= 0x7FFF;
  3758  04A3  0876               	movf	dht22_read@dht22_temp,w
  3759  04A4  0084               	movwf	4
  3760  04A5  30FF               	movlw	255
  3761  04A6  0580               	andwf	0,f
  3762  04A7  0A84               	incf	4,f
  3763  04A8  307F               	movlw	127
  3764  04A9  0580               	andwf	0,f
  3765  04AA                     l1748:
  3766                           
  3767                           ;./dht11.h: 64:     *dht22_temp *= -1;
  3768  04AA  30FF               	movlw	255
  3769  04AB  00F0               	movwf	___wmul@multiplier
  3770  04AC  30FF               	movlw	255
  3771  04AD  00F1               	movwf	___wmul@multiplier+1
  3772  04AE  0876               	movf	dht22_read@dht22_temp,w
  3773  04AF  0084               	movwf	4
  3774  04B0  0800               	movf	0,w
  3775  04B1  00F2               	movwf	___wmul@multiplicand
  3776  04B2  0A84               	incf	4,f
  3777  04B3  0800               	movf	0,w
  3778  04B4  00F3               	movwf	___wmul@multiplicand+1
  3779  04B5  120A  158A  2676  120A  118A  	fcall	___wmul
  3780  04BA  0876               	movf	dht22_read@dht22_temp,w
  3781  04BB  0084               	movwf	4
  3782  04BC  0870               	movf	?___wmul,w
  3783  04BD  1383               	bcf	3,7	;select IRP bank0
  3784  04BE  0080               	movwf	0
  3785  04BF  0A84               	incf	4,f
  3786  04C0  0871               	movf	?___wmul+1,w
  3787  04C1  0080               	movwf	0
  3788  04C2                     l141:
  3789  04C2  0008               	return
  3790  04C3                     __end_of_dht22_read:
  3791                           
  3792                           	psect	text16
  3793  000A                     __ptext16:	
  3794 ;; *************** function _problem *****************
  3795 ;; Defined at:
  3796 ;;		line 9 in file "./dht11.h"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  a               1    wreg     unsigned char 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  a               1    5[COMMON] unsigned char 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         0       0       0       0       0
  3811 ;;      Locals:         1       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0
  3813 ;;      Totals:         1       0       0       0       0
  3814 ;;Total ram usage:        1 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; Hardware stack levels required when called: 2
  3817 ;; This function calls:
  3818 ;;		_LCD_Command
  3819 ;;		_show
  3820 ;; This function is called by:
  3821 ;;		_dht22_read
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           
  3826                           ;psect for function _problem
  3827  000A                     _problem:
  3828                           
  3829                           ;incstack = 0
  3830                           ; Regs used in _problem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3831                           ;problem@a stored from wreg
  3832  000A  00F5               	movwf	problem@a
  3833  000B                     l1618:
  3834                           
  3835                           ;./dht11.h: 9: void problem(char a);./dht11.h: 10: {;./dht11.h: 11:     LCD_Command(0x01
      +                          );
  3836  000B  3001               	movlw	1
  3837  000C  120A  158A  273C  120A  118A  	fcall	_LCD_Command
  3838                           
  3839                           ;./dht11.h: 12:     LCD_Command(0x80);
  3840  0011  3080               	movlw	128
  3841  0012  120A  158A  273C  120A  118A  	fcall	_LCD_Command
  3842  0017                     l1620:
  3843                           
  3844                           ;./dht11.h: 13:     if (a==0)
  3845  0017  0875               	movf	problem@a,w
  3846  0018  1D03               	btfss	3,2
  3847  0019  281B               	goto	u1451
  3848  001A  281C               	goto	u1450
  3849  001B                     u1451:
  3850  001B  2823               	goto	l1624
  3851  001C                     u1450:
  3852  001C                     l1622:
  3853                           
  3854                           ;./dht11.h: 14:     {;./dht11.h: 15:         show("XXX after this line");
  3855  001C  3016               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3856  001D  120A  158A  2657  120A  118A  	fcall	_show
  3857                           
  3858                           ;./dht11.h: 16:     }
  3859  0022  282E               	goto	l112
  3860  0023                     l1624:
  3861  0023  0375               	decf	problem@a,w
  3862  0024  1D03               	btfss	3,2
  3863  0025  2827               	goto	u1461
  3864  0026  2828               	goto	u1460
  3865  0027                     u1461:
  3866  0027  282E               	goto	l112
  3867  0028                     u1460:
  3868  0028                     l1626:
  3869                           
  3870                           ;./dht11.h: 18:     {;./dht11.h: 19:         show("XXX before this line");
  3871  0028  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3872  0029  120A  158A  2657  120A  118A  	fcall	_show
  3873  002E                     l112:	
  3874                           ;./dht11.h: 21:     while(1);
  3875                           
  3876  002E  282E               	goto	l112
  3877  002F  0008               	return
  3878  0030                     __end_of_problem:
  3879                           
  3880                           	psect	text17
  3881  0E57                     __ptext17:	
  3882 ;; *************** function _show *****************
  3883 ;; Defined at:
  3884 ;;		line 72 in file "./lcd4bit.h"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  s               1    wreg     PTR unsigned char 
  3887 ;;		 -> STR_2(21), STR_1(20), 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  s               1    4[COMMON] PTR unsigned char 
  3890 ;;		 -> STR_2(21), STR_1(20), 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3900 ;;      Params:         0       0       0       0       0
  3901 ;;      Locals:         1       0       0       0       0
  3902 ;;      Temps:          1       0       0       0       0
  3903 ;;      Totals:         2       0       0       0       0
  3904 ;;Total ram usage:        2 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; Hardware stack levels required when called: 1
  3907 ;; This function calls:
  3908 ;;		_LCD_Char
  3909 ;; This function is called by:
  3910 ;;		_problem
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           
  3915                           ;psect for function _show
  3916  0E57                     _show:
  3917                           
  3918                           ;incstack = 0
  3919                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3920                           ;show@s stored from wreg
  3921  0E57  00F4               	movwf	show@s
  3922  0E58                     l1340:
  3923                           
  3924                           ;./lcd4bit.h: 72: void show(unsigned char *s);./lcd4bit.h: 73: {;./lcd4bit.h: 74:     wh
      +                          ile(*s) {
  3925  0E58  2E69               	goto	l1346
  3926  0E59                     l1342:
  3927                           
  3928                           ;./lcd4bit.h: 75:         LCD_Char(*s++);
  3929  0E59  0874               	movf	show@s,w
  3930  0E5A  0084               	movwf	4
  3931  0E5B  120A  158A  2000  120A  158A  	fcall	stringdir
  3932  0E60  120A  158A  277C  120A  158A  	fcall	_LCD_Char
  3933  0E65                     l1344:
  3934  0E65  3001               	movlw	1
  3935  0E66  00F3               	movwf	??_show
  3936  0E67  0873               	movf	??_show,w
  3937  0E68  07F4               	addwf	show@s,f
  3938  0E69                     l1346:
  3939                           
  3940                           ;./lcd4bit.h: 74:     while(*s) {
  3941  0E69  0874               	movf	show@s,w
  3942  0E6A  0084               	movwf	4
  3943  0E6B  120A  158A  2000  120A  158A  	fcall	stringdir
  3944  0E70  3A00               	xorlw	0
  3945  0E71  1D03               	skipz
  3946  0E72  2E74               	goto	u891
  3947  0E73  2E75               	goto	u890
  3948  0E74                     u891:
  3949  0E74  2E59               	goto	l1342
  3950  0E75                     u890:
  3951  0E75                     l68:
  3952  0E75  0008               	return
  3953  0E76                     __end_of_show:
  3954                           
  3955                           	psect	text18
  3956  0F7C                     __ptext18:	
  3957 ;; *************** function _LCD_Char *****************
  3958 ;; Defined at:
  3959 ;;		line 27 in file "./lcd4bit.h"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  data            1    wreg     unsigned char 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  data            1    2[COMMON] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3973 ;;      Params:         0       0       0       0       0
  3974 ;;      Locals:         1       0       0       0       0
  3975 ;;      Temps:          2       0       0       0       0
  3976 ;;      Totals:         3       0       0       0       0
  3977 ;;Total ram usage:        3 bytes
  3978 ;; Hardware stack levels used: 1
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_LCD_num
  3983 ;;		_show
  3984 ;;		_show_multidigits
  3985 ;;		_print_analogvoltages
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           
  3990                           ;psect for function _LCD_Char
  3991  0F7C                     _LCD_Char:
  3992                           
  3993                           ;incstack = 0
  3994                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3995                           ;LCD_Char@data stored from wreg
  3996  0F7C  00F2               	movwf	LCD_Char@data
  3997  0F7D                     l1302:
  3998                           
  3999                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  4000  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0F7F  1407               	bsf	7,0	;volatile
  4003  0F80                     l1304:
  4004                           
  4005                           ;./lcd4bit.h: 30:     PORTB = data;
  4006  0F80  0872               	movf	LCD_Char@data,w
  4007  0F81  0086               	movwf	6	;volatile
  4008  0F82                     l1306:
  4009                           
  4010                           ;./lcd4bit.h: 31:     RC1 = 1;
  4011  0F82  1487               	bsf	7,1	;volatile
  4012                           
  4013                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4014  0F83  3041               	movlw	65
  4015  0F84  00F1               	movwf	??_LCD_Char+1
  4016  0F85  30EE               	movlw	238
  4017  0F86  00F0               	movwf	??_LCD_Char
  4018  0F87                     u1787:
  4019  0F87  0BF0               	decfsz	??_LCD_Char,f
  4020  0F88  2F87               	goto	u1787
  4021  0F89  0BF1               	decfsz	??_LCD_Char+1,f
  4022  0F8A  2F87               	goto	u1787
  4023  0F8B  0000               	nop
  4024  0F8C                     l1308:
  4025                           
  4026                           ;./lcd4bit.h: 33:     RC1 = 0;
  4027  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  4029  0F8E  1087               	bcf	7,1	;volatile
  4030                           
  4031                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4032  0F8F  3041               	movlw	65
  4033  0F90  00F1               	movwf	??_LCD_Char+1
  4034  0F91  30EE               	movlw	238
  4035  0F92  00F0               	movwf	??_LCD_Char
  4036  0F93                     u1797:
  4037  0F93  0BF0               	decfsz	??_LCD_Char,f
  4038  0F94  2F93               	goto	u1797
  4039  0F95  0BF1               	decfsz	??_LCD_Char+1,f
  4040  0F96  2F93               	goto	u1797
  4041  0F97  0000               	nop
  4042  0F98                     l1310:
  4043                           
  4044                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  4045  0F98  0872               	movf	LCD_Char@data,w
  4046  0F99  00F0               	movwf	??_LCD_Char
  4047  0F9A  3003               	movlw	3
  4048  0F9B                     u875:
  4049  0F9B  1003               	clrc
  4050  0F9C  0DF0               	rlf	??_LCD_Char,f
  4051  0F9D  3EFF               	addlw	-1
  4052  0F9E  1D03               	skipz
  4053  0F9F  2F9B               	goto	u875
  4054  0FA0  1003               	clrc
  4055  0FA1  0D70               	rlf	??_LCD_Char,w
  4056  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  4057  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  4058  0FA4  0086               	movwf	6	;volatile
  4059  0FA5                     l1312:
  4060                           
  4061                           ;./lcd4bit.h: 36:     RC1 = 1;
  4062  0FA5  1487               	bsf	7,1	;volatile
  4063  0FA6                     l1314:
  4064                           
  4065                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4066  0FA6  3041               	movlw	65
  4067  0FA7  00F1               	movwf	??_LCD_Char+1
  4068  0FA8  30EE               	movlw	238
  4069  0FA9  00F0               	movwf	??_LCD_Char
  4070  0FAA                     u1807:
  4071  0FAA  0BF0               	decfsz	??_LCD_Char,f
  4072  0FAB  2FAA               	goto	u1807
  4073  0FAC  0BF1               	decfsz	??_LCD_Char+1,f
  4074  0FAD  2FAA               	goto	u1807
  4075  0FAE  0000               	nop
  4076  0FAF                     l1316:
  4077                           
  4078                           ;./lcd4bit.h: 38:     RC1 = 0;
  4079  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0FB1  1087               	bcf	7,1	;volatile
  4082  0FB2                     l1318:
  4083                           
  4084                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4085  0FB2  3041               	movlw	65
  4086  0FB3  00F1               	movwf	??_LCD_Char+1
  4087  0FB4  30EE               	movlw	238
  4088  0FB5  00F0               	movwf	??_LCD_Char
  4089  0FB6                     u1817:
  4090  0FB6  0BF0               	decfsz	??_LCD_Char,f
  4091  0FB7  2FB6               	goto	u1817
  4092  0FB8  0BF1               	decfsz	??_LCD_Char+1,f
  4093  0FB9  2FB6               	goto	u1817
  4094  0FBA  0000               	nop
  4095  0FBB                     l56:
  4096  0FBB  0008               	return
  4097  0FBC                     __end_of_LCD_Char:
  4098                           
  4099                           	psect	text19
  4100  0EC9                     __ptext19:	
  4101 ;; *************** function _dht22_read_byte *****************
  4102 ;; Defined at:
  4103 ;;		line 24 in file "./dht11.h"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  i               1    4[COMMON] unsigned char 
  4108 ;;  dht22_byte      1    3[COMMON] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      unsigned char 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4118 ;;      Params:         0       0       0       0       0
  4119 ;;      Locals:         2       0       0       0       0
  4120 ;;      Temps:          3       0       0       0       0
  4121 ;;      Totals:         5       0       0       0       0
  4122 ;;Total ram usage:        5 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_dht22_read
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _dht22_read_byte
  4133  0EC9                     _dht22_read_byte:
  4134  0EC9                     l1628:	
  4135                           ;incstack = 0
  4136                           ; Regs used in _dht22_read_byte: [wreg+status,2+status,0]
  4137                           
  4138                           
  4139                           ;./dht11.h: 26:   uint8_t i = 8, dht22_byte = 0;
  4140  0EC9  3008               	movlw	8
  4141  0ECA  00F0               	movwf	??_dht22_read_byte
  4142  0ECB  0870               	movf	??_dht22_read_byte,w
  4143  0ECC  00F4               	movwf	dht22_read_byte@i
  4144  0ECD                     l1630:
  4145  0ECD  01F3               	clrf	dht22_read_byte@dht22_byte
  4146                           
  4147                           ;./dht11.h: 27:   while(i--)
  4148  0ECE  2EF9               	goto	l1638
  4149  0ECF                     l120:
  4150  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0ED1  1C08               	btfss	8,0	;volatile
  4153  0ED2  2ED4               	goto	u1471
  4154  0ED3  2ED5               	goto	u1470
  4155  0ED4                     u1471:
  4156  0ED4  2ECF               	goto	l120
  4157  0ED5                     u1470:
  4158  0ED5                     l1632:
  4159                           
  4160                           ;./dht11.h: 30:     _delay((unsigned long)((40)*(20000000/4000.0)));
  4161  0ED5  3002               	movlw	2
  4162  0ED6  00F2               	movwf	??_dht22_read_byte+2
  4163  0ED7  3004               	movlw	4
  4164  0ED8  00F1               	movwf	??_dht22_read_byte+1
  4165  0ED9  30BA               	movlw	186
  4166  0EDA  00F0               	movwf	??_dht22_read_byte
  4167  0EDB                     u1827:
  4168  0EDB  0BF0               	decfsz	??_dht22_read_byte,f
  4169  0EDC  2EDB               	goto	u1827
  4170  0EDD  0BF1               	decfsz	??_dht22_read_byte+1,f
  4171  0EDE  2EDB               	goto	u1827
  4172  0EDF  0BF2               	decfsz	??_dht22_read_byte+2,f
  4173  0EE0  2EDB               	goto	u1827
  4174  0EE1  0000               	nop
  4175  0EE2                     l1634:
  4176                           
  4177                           ;./dht11.h: 31:     if( PORTDbits.RD0 )
  4178  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0EE4  1C08               	btfss	8,0	;volatile
  4181  0EE5  2EE7               	goto	u1481
  4182  0EE6  2EE8               	goto	u1480
  4183  0EE7                     u1481:
  4184  0EE7  2EF9               	goto	l1638
  4185  0EE8                     u1480:
  4186  0EE8                     l1636:
  4187                           
  4188                           ;./dht11.h: 32:     {;./dht11.h: 33:       dht22_byte |= (1 << i);
  4189  0EE8  3001               	movlw	1
  4190  0EE9  00F0               	movwf	??_dht22_read_byte
  4191  0EEA  0A74               	incf	dht22_read_byte@i,w
  4192  0EEB  2EEE               	goto	u1494
  4193  0EEC                     u1495:
  4194  0EEC  1003               	clrc
  4195  0EED  0DF0               	rlf	??_dht22_read_byte,f
  4196  0EEE                     u1494:
  4197  0EEE  3EFF               	addlw	-1
  4198  0EEF  1D03               	skipz
  4199  0EF0  2EEC               	goto	u1495
  4200  0EF1  0870               	movf	??_dht22_read_byte,w
  4201  0EF2  00F1               	movwf	??_dht22_read_byte+1
  4202  0EF3  0871               	movf	??_dht22_read_byte+1,w
  4203  0EF4  04F3               	iorwf	dht22_read_byte@dht22_byte,f
  4204  0EF5                     l124:	
  4205                           ;./dht11.h: 34:       while( PORTDbits.RD0 );
  4206                           
  4207  0EF5  1808               	btfsc	8,0	;volatile
  4208  0EF6  2EF8               	goto	u1501
  4209  0EF7  2EF9               	goto	u1500
  4210  0EF8                     u1501:
  4211  0EF8  2EF5               	goto	l124
  4212  0EF9                     u1500:
  4213  0EF9                     l1638:
  4214                           
  4215                           ;./dht11.h: 27:   while(i--)
  4216  0EF9  3001               	movlw	1
  4217  0EFA  02F4               	subwf	dht22_read_byte@i,f
  4218  0EFB  0A74               	incf	dht22_read_byte@i,w
  4219  0EFC  1D03               	btfss	3,2
  4220  0EFD  2EFF               	goto	u1511
  4221  0EFE  2F00               	goto	u1510
  4222  0EFF                     u1511:
  4223  0EFF  2ECF               	goto	l120
  4224  0F00                     u1510:
  4225  0F00                     l1640:
  4226                           
  4227                           ;./dht11.h: 37:   return(dht22_byte);
  4228  0F00  0873               	movf	dht22_read_byte@dht22_byte,w
  4229  0F01                     l128:
  4230  0F01  0008               	return
  4231  0F02                     __end_of_dht22_read_byte:
  4232                           
  4233                           	psect	text20
  4234  0E76                     __ptext20:	
  4235 ;; *************** function ___wmul *****************
  4236 ;; Defined at:
  4237 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  multiplier      2    0[COMMON] unsigned int 
  4240 ;;  multiplicand    2    2[COMMON] unsigned int 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  product         2    4[COMMON] unsigned int 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  2    0[COMMON] unsigned int 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4252 ;;      Params:         4       0       0       0       0
  4253 ;;      Locals:         2       0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0
  4255 ;;      Totals:         6       0       0       0       0
  4256 ;;Total ram usage:        6 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_dht22_read
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           
  4266                           ;psect for function ___wmul
  4267  0E76                     ___wmul:
  4268  0E76                     l1644:	
  4269                           ;incstack = 0
  4270                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4271                           
  4272  0E76  01F4               	clrf	___wmul@product
  4273  0E77  01F5               	clrf	___wmul@product+1
  4274  0E78                     l1646:
  4275  0E78  1C70               	btfss	___wmul@multiplier,0
  4276  0E79  2E7B               	goto	u1521
  4277  0E7A  2E7C               	goto	u1520
  4278  0E7B                     u1521:
  4279  0E7B  2E82               	goto	l264
  4280  0E7C                     u1520:
  4281  0E7C                     l1648:
  4282  0E7C  0872               	movf	___wmul@multiplicand,w
  4283  0E7D  07F4               	addwf	___wmul@product,f
  4284  0E7E  1803               	skipnc
  4285  0E7F  0AF5               	incf	___wmul@product+1,f
  4286  0E80  0873               	movf	___wmul@multiplicand+1,w
  4287  0E81  07F5               	addwf	___wmul@product+1,f
  4288  0E82                     l264:
  4289  0E82  3001               	movlw	1
  4290  0E83                     u1535:
  4291  0E83  1003               	clrc
  4292  0E84  0DF2               	rlf	___wmul@multiplicand,f
  4293  0E85  0DF3               	rlf	___wmul@multiplicand+1,f
  4294  0E86  3EFF               	addlw	-1
  4295  0E87  1D03               	skipz
  4296  0E88  2E83               	goto	u1535
  4297  0E89                     l1650:
  4298  0E89  3001               	movlw	1
  4299  0E8A                     u1545:
  4300  0E8A  1003               	clrc
  4301  0E8B  0CF1               	rrf	___wmul@multiplier+1,f
  4302  0E8C  0CF0               	rrf	___wmul@multiplier,f
  4303  0E8D  3EFF               	addlw	-1
  4304  0E8E  1D03               	skipz
  4305  0E8F  2E8A               	goto	u1545
  4306  0E90                     l1652:
  4307  0E90  0870               	movf	___wmul@multiplier,w
  4308  0E91  0471               	iorwf	___wmul@multiplier+1,w
  4309  0E92  1D03               	btfss	3,2
  4310  0E93  2E95               	goto	u1551
  4311  0E94  2E96               	goto	u1550
  4312  0E95                     u1551:
  4313  0E95  2E78               	goto	l1646
  4314  0E96                     u1550:
  4315  0E96                     l1654:
  4316  0E96  0875               	movf	___wmul@product+1,w
  4317  0E97  00F1               	movwf	?___wmul+1
  4318  0E98  0874               	movf	___wmul@product,w
  4319  0E99  00F0               	movwf	?___wmul
  4320  0E9A                     l266:
  4321  0E9A  0008               	return
  4322  0E9B                     __end_of___wmul:
  4323                           
  4324                           	psect	text21
  4325  0E9B                     __ptext21:	
  4326 ;; *************** function _LCD_init *****************
  4327 ;; Defined at:
  4328 ;;		line 41 in file "./lcd4bit.h"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0, pclath, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0
  4344 ;;      Temps:          2       0       0       0       0
  4345 ;;      Totals:         2       0       0       0       0
  4346 ;;Total ram usage:        2 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 1
  4349 ;; This function calls:
  4350 ;;		_LCD_Command
  4351 ;; This function is called by:
  4352 ;;		_main
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           
  4357                           ;psect for function _LCD_init
  4358  0E9B                     _LCD_init:
  4359  0E9B                     l1658:	
  4360                           ;incstack = 0
  4361                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  4362                           
  4363                           
  4364                           ;./lcd4bit.h: 43:     LCD_Command (0x02);
  4365  0E9B  3002               	movlw	2
  4366  0E9C  120A  158A  273C  120A  158A  	fcall	_LCD_Command
  4367                           
  4368                           ;./lcd4bit.h: 44:     LCD_Command (0x28);
  4369  0EA1  3028               	movlw	40
  4370  0EA2  120A  158A  273C  120A  158A  	fcall	_LCD_Command
  4371                           
  4372                           ;./lcd4bit.h: 45:     LCD_Command (0x80);
  4373  0EA7  3080               	movlw	128
  4374  0EA8  120A  158A  273C  120A  158A  	fcall	_LCD_Command
  4375                           
  4376                           ;./lcd4bit.h: 46:     LCD_Command (0x0C);
  4377  0EAD  300C               	movlw	12
  4378  0EAE  120A  158A  273C  120A  158A  	fcall	_LCD_Command
  4379                           
  4380                           ;./lcd4bit.h: 47:     LCD_Command (0x06);
  4381  0EB3  3006               	movlw	6
  4382  0EB4  120A  158A  273C  120A  158A  	fcall	_LCD_Command
  4383                           
  4384                           ;./lcd4bit.h: 48:     LCD_Command (0x01);
  4385  0EB9  3001               	movlw	1
  4386  0EBA  120A  158A  273C  120A  158A  	fcall	_LCD_Command
  4387  0EBF                     l1660:
  4388                           
  4389                           ;./lcd4bit.h: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4390  0EBF  3041               	movlw	65
  4391  0EC0  00F4               	movwf	??_LCD_init+1
  4392  0EC1  30EE               	movlw	238
  4393  0EC2  00F3               	movwf	??_LCD_init
  4394  0EC3                     u1837:
  4395  0EC3  0BF3               	decfsz	??_LCD_init,f
  4396  0EC4  2EC3               	goto	u1837
  4397  0EC5  0BF4               	decfsz	??_LCD_init+1,f
  4398  0EC6  2EC3               	goto	u1837
  4399  0EC7  0000               	nop
  4400  0EC8                     l59:
  4401  0EC8  0008               	return
  4402  0EC9                     __end_of_LCD_init:
  4403                           
  4404                           	psect	text22
  4405  0F3C                     __ptext22:	
  4406 ;; *************** function _LCD_Command *****************
  4407 ;; Defined at:
  4408 ;;		line 13 in file "./lcd4bit.h"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  cmnd            1    wreg     unsigned char 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  cmnd            1    2[COMMON] unsigned char 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4422 ;;      Params:         0       0       0       0       0
  4423 ;;      Locals:         1       0       0       0       0
  4424 ;;      Temps:          2       0       0       0       0
  4425 ;;      Totals:         3       0       0       0       0
  4426 ;;Total ram usage:        3 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_LCD_init
  4432 ;;		_problem
  4433 ;;		_main
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function _LCD_Command
  4439  0F3C                     _LCD_Command:
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  4443                           ;LCD_Command@cmnd stored from wreg
  4444  0F3C  00F2               	movwf	LCD_Command@cmnd
  4445  0F3D                     l1320:
  4446                           
  4447                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  4448  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  4449  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  4450  0F3F  1007               	bcf	7,0	;volatile
  4451  0F40                     l1322:
  4452                           
  4453                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  4454  0F40  0872               	movf	LCD_Command@cmnd,w
  4455  0F41  0086               	movwf	6	;volatile
  4456  0F42                     l1324:
  4457                           
  4458                           ;./lcd4bit.h: 17:     RC1 = 1;
  4459  0F42  1487               	bsf	7,1	;volatile
  4460                           
  4461                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4462  0F43  3041               	movlw	65
  4463  0F44  00F1               	movwf	??_LCD_Command+1
  4464  0F45  30EE               	movlw	238
  4465  0F46  00F0               	movwf	??_LCD_Command
  4466  0F47                     u1847:
  4467  0F47  0BF0               	decfsz	??_LCD_Command,f
  4468  0F48  2F47               	goto	u1847
  4469  0F49  0BF1               	decfsz	??_LCD_Command+1,f
  4470  0F4A  2F47               	goto	u1847
  4471  0F4B  0000               	nop
  4472  0F4C                     l1326:
  4473                           
  4474                           ;./lcd4bit.h: 19:     RC1 = 0;
  4475  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  4476  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  4477  0F4E  1087               	bcf	7,1	;volatile
  4478                           
  4479                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4480  0F4F  3041               	movlw	65
  4481  0F50  00F1               	movwf	??_LCD_Command+1
  4482  0F51  30EE               	movlw	238
  4483  0F52  00F0               	movwf	??_LCD_Command
  4484  0F53                     u1857:
  4485  0F53  0BF0               	decfsz	??_LCD_Command,f
  4486  0F54  2F53               	goto	u1857
  4487  0F55  0BF1               	decfsz	??_LCD_Command+1,f
  4488  0F56  2F53               	goto	u1857
  4489  0F57  0000               	nop
  4490  0F58                     l1328:
  4491                           
  4492                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  4493  0F58  0872               	movf	LCD_Command@cmnd,w
  4494  0F59  00F0               	movwf	??_LCD_Command
  4495  0F5A  3003               	movlw	3
  4496  0F5B                     u885:
  4497  0F5B  1003               	clrc
  4498  0F5C  0DF0               	rlf	??_LCD_Command,f
  4499  0F5D  3EFF               	addlw	-1
  4500  0F5E  1D03               	skipz
  4501  0F5F  2F5B               	goto	u885
  4502  0F60  1003               	clrc
  4503  0F61  0D70               	rlf	??_LCD_Command,w
  4504  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  4505  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  4506  0F64  0086               	movwf	6	;volatile
  4507  0F65                     l1330:
  4508                           
  4509                           ;./lcd4bit.h: 22:     RC1 = 1;
  4510  0F65  1487               	bsf	7,1	;volatile
  4511  0F66                     l1332:
  4512                           
  4513                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4514  0F66  3041               	movlw	65
  4515  0F67  00F1               	movwf	??_LCD_Command+1
  4516  0F68  30EE               	movlw	238
  4517  0F69  00F0               	movwf	??_LCD_Command
  4518  0F6A                     u1867:
  4519  0F6A  0BF0               	decfsz	??_LCD_Command,f
  4520  0F6B  2F6A               	goto	u1867
  4521  0F6C  0BF1               	decfsz	??_LCD_Command+1,f
  4522  0F6D  2F6A               	goto	u1867
  4523  0F6E  0000               	nop
  4524  0F6F                     l1334:
  4525                           
  4526                           ;./lcd4bit.h: 24:     RC1 = 0;
  4527  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  4528  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  4529  0F71  1087               	bcf	7,1	;volatile
  4530  0F72                     l1336:
  4531                           
  4532                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4533  0F72  3041               	movlw	65
  4534  0F73  00F1               	movwf	??_LCD_Command+1
  4535  0F74  30EE               	movlw	238
  4536  0F75  00F0               	movwf	??_LCD_Command
  4537  0F76                     u1877:
  4538  0F76  0BF0               	decfsz	??_LCD_Command,f
  4539  0F77  2F76               	goto	u1877
  4540  0F78  0BF1               	decfsz	??_LCD_Command+1,f
  4541  0F79  2F76               	goto	u1877
  4542  0F7A  0000               	nop
  4543  0F7B                     l53:
  4544  0F7B  0008               	return
  4545  0F7C                     __end_of_LCD_Command:
  4546                           
  4547                           	psect	text23
  4548  00CF                     __ptext23:	
  4549 ;; *************** function _ADC_Init *****************
  4550 ;; Defined at:
  4551 ;;		line 70 in file "main.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0
  4567 ;;      Temps:          2       0       0       0       0
  4568 ;;      Totals:         2       0       0       0       0
  4569 ;;Total ram usage:        2 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _ADC_Init
  4580  00CF                     _ADC_Init:
  4581  00CF                     l1750:	
  4582                           ;incstack = 0
  4583                           ; Regs used in _ADC_Init: [wreg]
  4584                           
  4585                           
  4586                           ;main.c: 72:     ADCON0 = 0x85;
  4587  00CF  3085               	movlw	133
  4588  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  4589  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  4590  00D2  009F               	movwf	31	;volatile
  4591                           
  4592                           ;main.c: 73:     ADCON1 = 0xC0;
  4593  00D3  30C0               	movlw	192
  4594  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  4595  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  4596  00D6  009F               	movwf	31	;volatile
  4597                           
  4598                           ;main.c: 74:     AV[0]= ((ADRESH<<8)+ADRESL);
  4599  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  4600  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  4601  00D9  081E               	movf	30,w	;volatile
  4602  00DA  00C7               	movwf	_AV+1
  4603  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  4604  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  4605  00DD  081E               	movf	30,w	;volatile
  4606  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  4607  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  4608  00E0  00C6               	movwf	_AV
  4609                           
  4610                           ;main.c: 76:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4611  00E1  3041               	movlw	65
  4612  00E2  00F1               	movwf	??_ADC_Init+1
  4613  00E3  30EE               	movlw	238
  4614  00E4  00F0               	movwf	??_ADC_Init
  4615  00E5                     u1887:
  4616  00E5  0BF0               	decfsz	??_ADC_Init,f
  4617  00E6  28E5               	goto	u1887
  4618  00E7  0BF1               	decfsz	??_ADC_Init+1,f
  4619  00E8  28E5               	goto	u1887
  4620  00E9  0000               	nop
  4621                           
  4622                           ;main.c: 77:     ADCON0 = 0x8D;
  4623  00EA  308D               	movlw	141
  4624  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  4625  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  4626  00ED  009F               	movwf	31	;volatile
  4627                           
  4628                           ;main.c: 78:     ADCON1 = 0xC0;
  4629  00EE  30C0               	movlw	192
  4630  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  4631  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  4632  00F1  009F               	movwf	31	;volatile
  4633                           
  4634                           ;main.c: 79:     AV[1]= ((ADRESH<<8)+ADRESL);
  4635  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  4636  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  4637  00F4  081E               	movf	30,w	;volatile
  4638  00F5  00C9               	movwf	_AV+3
  4639  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  4640  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  4641  00F8  081E               	movf	30,w	;volatile
  4642  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  4643  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  4644  00FB  00C8               	movwf	_AV+2
  4645                           
  4646                           ;main.c: 81:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4647  00FC  3041               	movlw	65
  4648  00FD  00F1               	movwf	??_ADC_Init+1
  4649  00FE  30EE               	movlw	238
  4650  00FF  00F0               	movwf	??_ADC_Init
  4651  0100                     u1897:
  4652  0100  0BF0               	decfsz	??_ADC_Init,f
  4653  0101  2900               	goto	u1897
  4654  0102  0BF1               	decfsz	??_ADC_Init+1,f
  4655  0103  2900               	goto	u1897
  4656  0104  0000               	nop
  4657                           
  4658                           ;main.c: 82:     ADCON0 = 0x95;
  4659  0105  3095               	movlw	149
  4660  0106  1283               	bcf	3,5	;RP0=0, select bank0
  4661  0107  1303               	bcf	3,6	;RP1=0, select bank0
  4662  0108  009F               	movwf	31	;volatile
  4663                           
  4664                           ;main.c: 83:     ADCON1 = 0xC0;
  4665  0109  30C0               	movlw	192
  4666  010A  1683               	bsf	3,5	;RP0=1, select bank1
  4667  010B  1303               	bcf	3,6	;RP1=0, select bank1
  4668  010C  009F               	movwf	31	;volatile
  4669                           
  4670                           ;main.c: 84:     AV[2]= ((ADRESH<<8)+ADRESL);
  4671  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4672  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4673  010F  081E               	movf	30,w	;volatile
  4674  0110  00CB               	movwf	_AV+5
  4675  0111  1683               	bsf	3,5	;RP0=1, select bank1
  4676  0112  1303               	bcf	3,6	;RP1=0, select bank1
  4677  0113  081E               	movf	30,w	;volatile
  4678  0114  1283               	bcf	3,5	;RP0=0, select bank0
  4679  0115  1303               	bcf	3,6	;RP1=0, select bank0
  4680  0116  00CA               	movwf	_AV+4
  4681                           
  4682                           ;main.c: 86:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4683  0117  3041               	movlw	65
  4684  0118  00F1               	movwf	??_ADC_Init+1
  4685  0119  30EE               	movlw	238
  4686  011A  00F0               	movwf	??_ADC_Init
  4687  011B                     u1907:
  4688  011B  0BF0               	decfsz	??_ADC_Init,f
  4689  011C  291B               	goto	u1907
  4690  011D  0BF1               	decfsz	??_ADC_Init+1,f
  4691  011E  291B               	goto	u1907
  4692  011F  0000               	nop
  4693                           
  4694                           ;main.c: 87:     ADCON0 = 0x9D;
  4695  0120  309D               	movlw	157
  4696  0121  1283               	bcf	3,5	;RP0=0, select bank0
  4697  0122  1303               	bcf	3,6	;RP1=0, select bank0
  4698  0123  009F               	movwf	31	;volatile
  4699                           
  4700                           ;main.c: 88:     ADCON1 = 0xC0;
  4701  0124  30C0               	movlw	192
  4702  0125  1683               	bsf	3,5	;RP0=1, select bank1
  4703  0126  1303               	bcf	3,6	;RP1=0, select bank1
  4704  0127  009F               	movwf	31	;volatile
  4705                           
  4706                           ;main.c: 89:     AV[3]= ((ADRESH<<8)+ADRESL);
  4707  0128  1283               	bcf	3,5	;RP0=0, select bank0
  4708  0129  1303               	bcf	3,6	;RP1=0, select bank0
  4709  012A  081E               	movf	30,w	;volatile
  4710  012B  00CD               	movwf	_AV+7
  4711  012C  1683               	bsf	3,5	;RP0=1, select bank1
  4712  012D  1303               	bcf	3,6	;RP1=0, select bank1
  4713  012E  081E               	movf	30,w	;volatile
  4714  012F  1283               	bcf	3,5	;RP0=0, select bank0
  4715  0130  1303               	bcf	3,6	;RP1=0, select bank0
  4716  0131  00CC               	movwf	_AV+6
  4717  0132                     l165:
  4718  0132  0008               	return
  4719  0133                     __end_of_ADC_Init:
  4720  007E                     btemp	set	126	;btemp
  4721  007E                     wtemp0	set	126
  4722                           
  4723                           	psect	idloc
  4724                           
  4725                           ;Config register IDLOC0 @ 0x2000
  4726                           ;	unspecified, using default values
  4727  2000                     	org	8192
  4728  2000  3FFF               	dw	16383
  4729                           
  4730                           ;Config register IDLOC1 @ 0x2001
  4731                           ;	unspecified, using default values
  4732  2001                     	org	8193
  4733  2001  3FFF               	dw	16383
  4734                           
  4735                           ;Config register IDLOC2 @ 0x2002
  4736                           ;	unspecified, using default values
  4737  2002                     	org	8194
  4738  2002  3FFF               	dw	16383
  4739                           
  4740                           ;Config register IDLOC3 @ 0x2003
  4741                           ;	unspecified, using default values
  4742  2003                     	org	8195
  4743  2003  3FFF               	dw	16383
  4744                           
  4745                           	psect	config
  4746                           
  4747                           ;Config register CONFIG @ 0x2007
  4748                           ;	Oscillator Selection bits
  4749                           ;	FOSC = HS, HS oscillator
  4750                           ;	Watchdog Timer Enable bit
  4751                           ;	WDTE = OFF, WDT disabled
  4752                           ;	Power-up Timer Enable bit
  4753                           ;	PWRTE = OFF, PWRT disabled
  4754                           ;	Brown-out Reset Enable bit
  4755                           ;	BOREN = ON, BOR enabled
  4756                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4757                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4758                           ;	Data EEPROM Memory Code Protection bit
  4759                           ;	CPD = OFF, Data EEPROM code protection off
  4760                           ;	Flash Program Memory Write Enable bits
  4761                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4762                           ;	In-Circuit Debugger Mode bit
  4763                           ;	DEBUG = 0x1, unprogrammed default
  4764                           ;	Flash Program Memory Code Protection bit
  4765                           ;	CP = OFF, Code protection off
  4766  2007                     	org	8199
  4767  2007  3FFA               	dw	16378

Data Sizes:
    Strings     41
    Constant    0
    Data        2
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dht22_read@dht22_temp	PTR int  size(1) Largest target is 2
		 -> temperature(BANK0[2]), 

    dht22_read@dht22_humi	PTR unsigned int  size(1) Largest target is 2
		 -> humidity(BANK0[2]), 

    show@s	PTR unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 


Critical Paths under _main in COMMON

    _main->_dht22_read
    _show_multidigits->___awdiv
    _print_serialnumber->_tx_sn
    _tx_sn->___awdiv
    _LCD_num->___aldiv
    ___aldiv->___lmul
    _dht22_read->___wmul
    _dht22_read->_problem
    _problem->_show
    _show->_LCD_Char
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_print_analogvoltages
    _print_serialnumber->_tx_sn
    _print_analogvoltages->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   17681
                                             35 BANK0      3     3      0
                           _ADC_Init
                        _LCD_Command
                           _LCD_init
                         _dht22_read
               _print_analogvoltages
                 _print_serialnumber
                            _ser_int
                   _show_multidigits
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _show_multidigits                                    16    14      2    6157
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_serialnumber                                   0     0      0    6081
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (2) _tx_sn                                               16    14      2    6059
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                 _tx
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _print_analogvoltages                                 5     5      0    4448
                                             30 BANK0      5     5      0
                           _LCD_Char
                            _LCD_num
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_num                                             18    14      4    4202
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (3) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1375
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _dht22_read                                           8     7      1     885
                                              6 COMMON     8     7      1
                             ___wmul
                    _dht22_read_byte
                            _problem
 ---------------------------------------------------------------------------------
 (2) _problem                                              1     1      0     243
                                              5 COMMON     1     1      0
                        _LCD_Command
                               _show
 ---------------------------------------------------------------------------------
 (3) _show                                                 2     2      0     155
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _dht22_read_byte                                      5     5      0      69
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Command
   _LCD_init
     _LCD_Command
   _dht22_read
     ___wmul
     _dht22_read_byte
     _problem
       _LCD_Command
       _show
         _LCD_Char
   _print_analogvoltages
     _LCD_Char
     _LCD_num
       _LCD_Char
       ___aldiv
         ___lmul (ARG)
       ___lmul
       ___lwdiv
       ___lwmod
       _intdigits_chardigits
     _tx
   _print_serialnumber
     _tx
     _tx_sn
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
       _tx
   _ser_int
   _show_multidigits
     _LCD_Char
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      48      12        0.0%
ABS                  0      0      48       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 06 00:16:39 2022

                            pc 0002                   ?_LCD_Command 0070                             l53 0F7B  
                           l62 03FC                             l71 0E44                             l56 0FBB  
                           l81 07E6                             l90 0E28                             l59 0EC8  
                           l68 0E75                             l84 0E35                             _AV 0046  
                           l77 07E6                             l87 0E23                             l89 0E27  
                 ___awdiv@sign 0076                             _sn 0058                             _tx 0E1E  
                           fsr 0004            ___wmul@multiplicand 0072          print_analogvoltages@i 0041  
        print_analogvoltages@j 0042                            l102 0654                            l120 0ECF  
                          l112 002E                            l106 0654                            l131 0420  
                          l124 0EF5                            l141 04C2                            l134 042C  
                          l128 0F01                            l137 0432                            l165 0132  
                          l157 021E                            l430 00CE                            l264 0E82  
                          l168 0E56                            l329 02B5                            l417 0199  
                          l266 0E9A                            l178 0207                            l339 033D  
                          l278 0075                            l536 0FFF                            l546 0F3B  
                          ?_tx 0070                            _RC0 0038                            _RC1 0039  
                          u900 0E27                            u901 0E26                            u910 003C  
                          u911 003B                            u921 0045                            u922 004C  
                          u923 0053                            u950 006D                            u951 006C  
                          u935 0055                            u960 02A8                            u961 02A7  
                          u945 005D                            u890 0E75                            u970 02B9  
                          u875 0F9B                            u891 0E74                            u971 02B8  
                          u980 02D8                            u885 0F5B                            u981 02D7  
                          u995 02DD                            _avv 0051                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0076                            tx@a 0070  
       show_multidigits@digit1 0026         show_multidigits@digit2 0028         show_multidigits@digit3 0024  
       show_multidigits@digit4 0020                           ??_tx 0070                __end_of_LCD_num 03FD  
                         l1310 0F98                           l1302 0F7D                           l1320 0F3D  
                         l1312 0FA5                           l1304 0F80                           l1400 0335  
                         l1330 0F65                           l1322 0F40                           l1314 0FA6  
                         l1306 0F82                           l1410 013D                           l1332 0F66  
                         l1324 0F42                           l1316 0FAF                           l1308 0F8C  
                         l1340 0E58                           l1500 0FE7                           l1420 014E  
                         l1412 013F                           l1404 0133                           l1334 0F6F  
                         l1326 0F4C                           l1318 0FB2                           l1342 0E59  
                         l1350 0030                           l1502 0FED                           l1430 0166  
                         l1422 0154                           l1414 0143                           l1406 0134  
                         l1336 0F72                           l1328 0F58                           l1344 0E65  
                         l1360 006D                           l1352 0038                           l1504 0FEE  
                         l1520 0F16                           l1512 0F02                           l1432 0177  
                         l1424 0157                           l1440 018B                           l1416 0148  
                         l1408 0138                           l1600 05D9                           l1346 0E69  
                         l1370 02B9                           l1354 003C                           l1506 0FF5  
                         l1522 0F1A                           l1514 0F08                           l1530 0F37  
                         l1338 0E36                           l1442 0190                           l1434 017D  
                         l1426 015E                           l1418 014C                           l1450 0077  
                         l1610 0631                           l1602 05DD                           l1620 0017  
                         l1380 02DB                           l1372 02C4                           l1364 02A1  
                         l1356 0053                           l1508 0FFB                           l1524 0F24  
                         l1516 0F0B                           l1540 0385                           l1348 0E1F  
                         l1444 0195                           l1436 017E                           l1428 0162  
                         l1460 008B                           l1452 007B                           l1612 0638  
                         l1604 05F4                           l1700 073C                           l1630 0ECD  
                         l1622 001C                           l1390 0315                           l1382 02E8  
                         l1374 02C8                           l1366 02A4                           l1358 005C  
                         l1526 0F2A                           l1518 0F12                           l1550 03D1  
                         l1542 0398                           l1534 033E                           l1438 0185  
                         l1470 00A3                           l1462 0091                           l1454 0080  
                         l1614 0641                           l1606 0607                           l1710 0799  
                         l1702 0745                           l1640 0F00                           l1632 0ED5  
                         l1624 0023                           l1392 0316                           l1384 02EC  
                         l1376 02D0                           l1368 02A8                           l1528 0F31  
                         l1552 03D7                           l1544 03AF                           l1536 033E  
                         l1480 00C5                           l1472 00AD                           l1464 0094  
                         l1456 0082                           l1448 0076                           l1616 064A  
                         l1608 061E                           l1560 04CC                           l1720 07DC  
                         l1712 07B0                           l1704 076B                           l1800 0222  
                         l1650 0E89                           l1634 0EE2                           l1626 0028  
                         l1618 000B                           l1730 0417                           l1394 031F  
                         l1386 02F5                           l1378 02D8                           l1490 0FC4  
                         l1554 03E0                           l1546 03B3                           l1538 0372  
                         l1482 00CA                           l1474 00B3                           l1466 009B  
                         l1458 0086                           l1570 04FD                           l1562 04D4  
                         l1722 0E29                           l1714 07C3                           l1706 076F  
                         l1810 0249                           l1802 022D                           l1660 0EBF  
                         l1652 0E90                           l1644 0E76                           l1636 0EE8  
                         l1628 0EC9                           l1740 0464                           l1732 041A  
                         l1724 03FE                           l1388 0307                           l1396 0325  
                         l1492 0FC7                           l1556 03E9                           l1548 03CA  
                         l1476 00BA                           l1468 009F                           l1580 0533  
                         l1572 0510                           l1564 04DD                           l1716 07CA  
                         l1708 0786                           l1820 027A                           l1812 024F  
                         l1804 0232                           l1750 00CF                           l1654 0E96  
                         l1646 0E78                           l1638 0EF9                           l1742 0492  
                         l1734 0426                           l1726 0404                           l1398 032A  
                         l1494 0FCE                           l1486 0FBC                           l1478 00C0  
                         l1590 058E                           l1582 0559                           l1574 0517  
                         l1566 04E6                           l1558 04C3                           l1718 07D3  
                         l1670 0678                           l1662 0655                           l1822 0280  
                         l1814 025A                           l1806 0237                           l1648 0E7C  
                         l1744 0497                           l1736 0436                           l1728 040C  
                         l1496 0FD2                           l1488 0FBE                           l1760 019D  
                         l1592 0597                           l1584 055D                           l1568 04F9  
                         l1576 0521                           l1752 0E45                           l1672 068B  
                         l1680 06B3                           l1664 065E                           l1824 0286  
                         l1816 0260                           l1808 0243                           l1658 0E9B  
                         l1746 04A3                           l1738 0445                           l1498 0FD6  
                         l1770 01BC                           l1762 01B3                           l1754 019A  
                         l1586 0574                           l1578 052A                           l1594 05A1  
                         l1690 0706                           l1682 06BC                           l1674 068F  
                         l1666 0666                           l1826 0295                           l1818 026B  
                         l1748 04AA                           l1780 01E1                           l1772 01C7  
                         l1764 01B9                           l1596 05AA                           l1588 0587  
                         l1692 0719                           l1684 06C5                           l1676 06A2  
                         l1668 066F                           l1782 01E7                           l1774 01CE  
                         l1598 05B3                           l1694 0720                           l1686 06EB  
                         l1678 06A9                           l1790 0208                           l1784 01ED  
                         l1776 01D5                           l1696 0729                           l1688 06EF  
                         l1792 020C                           l1786 01FB                           l1778 01DB  
                         l1698 0733                           l1794 0211                           l1788 0201  
                         l1796 0216                           l1798 021B                           STR_1 081B  
                         STR_2 0806                           u1000 02EC                           u1001 02EB  
                         u1020 0307                           u1100 0166                           u1021 0306  
                         u1101 0165                           u1015 02EE                           u1040 0325  
                         u1120 0177                           u1200 00A3                           u1041 0324  
                         u1025 0303                           u1121 0176                           u1201 00A2  
                         u1050 032A                           u1210 00AD                           u1051 0329  
                         u1035 0317                           u1115 0167                           u1211 00AC  
                         u1140 018B                           u1060 0138                           u1141 018A  
                         u1125 0173                           u1061 0137                           u1310 0FFB  
                         u1150 0190                           u1070 0143                           u1230 00C0  
                         u1311 0FFA                           u1151 018F                           u1135 017F  
                         u1071 0142                           u1231 00BF                           u1215 00A9  
                         u1320 0F08                           u1080 0154                           u1240 00C5  
                         u1160 007B                           u1400 04E6                           u1305 0FEF  
                         u1321 0F07                           u1081 0153                           u1241 00C4  
                         u1225 00B4                           u1161 007A                           u1401 04E5  
                         u1250 0FC4                           u1170 0086                           u1410 052A  
                         u1251 0FC3                           u1171 0085                           u1411 0529  
                         u1500 0EF9                           u1340 0F1A                           u1180 0091  
                         u1420 0533                           u1501 0EF8                           u1341 0F19  
                         u1181 0090                           u1421 0532                           u1510 0F00  
                         u1270 0FD6                           u1350 0F24                           u1430 05AA  
                         u1511 0EFF                           u1271 0FD5                           u1351 0F23  
                         u1335 0F0C                           u1095 0158                           u1431 05A9  
                         u1520 0E7C                           u1440 05B3                           u1600 06C5  
                         u1521 0E7B                           u1265 0FC8                           u1441 05B2  
                         u1601 06C4                           u1450 001C                           u1290 0FE7  
                         u1370 0F37                           u1610 073C                           u1451 001B  
                         u1291 0FE6                           u1371 0F36                           u1355 0F20  
                         u1195 0095                           u1611 073B                           u1460 0028  
                         u1700 0207                           u1380 04CC                           u1620 0745  
                         u1461 0027                           u1285 0FD7                           u1365 0F2B  
                         u1701 0206                           u1381 04CB                           u1621 0744  
                         u1550 0E96                           u1470 0ED5                           u1630 0426  
                         u1390 04DD                           u1710 0222                           u1551 0E95  
                         u1535 0E83                           u1471 0ED4                           u1631 0425  
                         u1295 0FE3                           u1391 04DC                           u1711 0221  
                         u1480 0EE8                           u1640 0432                           u1560 065E  
                         u1545 0E8A                           u1481 0EE7                           u1641 0431  
                         u1561 065D                           u1650 0436                           u1570 066F  
                         u1651 0435                           u1571 066E                           u1660 04A3  
                         u1580 0678                           u1661 04A2                           u1581 0677  
                         u1494 0EEE                           u1670 01CE                           u1590 06BC  
                         u1495 0EEC                           u1807 0FAA                           u1671 01CD  
                         u1591 06BB                           u1727 0228                           u1680 01DB  
                         u1817 0FB6                           u1681 01DA                           u1737 0273  
                         u1690 01ED                           u1907 011B                           u1827 0EDB  
                         u1691 01EC                           u1747 028E                           u1837 0EC3  
                         u1757 01F5                           u1847 0F47                           u1767 0408  
                         u1857 0F53                           u1777 0413                           u1867 0F6A  
                         u1787 0F87                           u1877 0F76                           u1797 0F93  
                         u1887 00E5                           u1897 0100                           _RCIF 0065  
       show_multidigits@result 0022                           _TXIF 0064   __end_of_print_analogvoltages 0208  
                         _main 0208                           _show 0E57                           btemp 007E  
             __end_of_ADC_Init 0133                           start 0000               __end_of_LCD_Char 0FBC  
                 LCD_Char@data 0072               dht22_read_byte@i 0074               __end_of_LCD_init 0EC9  
              __end_of___aldiv 033E                          ?_main 0070                __end_of___awdiv 019A  
              __end_of___awmod 00CF                          ?_show 0070                ___awdiv@divisor 0070  
              __end_of___lwdiv 1000                __end_of___lwmod 0F3C                ___awdiv@counter 0075  
                        _RCREG 001A                          _RCSTA 0018        show_multidigits@result1 002A  
                        _SPBRG 0099                          _PORTB 0006                          _TRISB 0086  
                        _TRISC 0087                          _TXREG 0019                          _TXSTA 0098  
          ___lmul@multiplicand 0074                          _tx_sn 04C3                __end_of_ser_int 0E36  
                        pclath 000A             _print_serialnumber 0E45                __end_of_problem 0030  
                        show@s 0074                          status 0003                          wtemp0 007E  
          ?_print_serialnumber 0070                __initialization 07E7                   __end_of_main 02A1  
                 __end_of_show 0E76                         ??_main 0043                         ??_show 0073  
               LCD_num@result1 003A           _intdigits_chardigits 0E36                      ??_LCD_num 007E  
         ??_print_serialnumber 007B                         _ADCON0 001F                         _ADCON1 009F  
                       _ADRESH 001E                         _ADRESL 009E               ___awdiv@dividend 0072  
                       ?_tx_sn 0079                         ___lmul 0030                      ??___aldiv 007D  
                       ___wmul 0E76                      ??___awdiv 0074                      ??___awmod 0074  
                    ??___lwdiv 0074                      ??___lwmod 0074               ___awdiv@quotient 0077  
              ___awmod@divisor 0070                ___awmod@counter 0075           _print_analogvoltages 019A  
         __size_of_LCD_Command 0040          ?_intdigits_chardigits 0070                      ?_ADC_Init 0070  
                    ??_ser_int 0070                      ??_problem 0075      __size_of_show_multidigits 0192  
                    ?_LCD_Char 0070        __end_of__initialization 07FC                      ?_LCD_init 0070  
               __pcstackCOMMON 0070                   __pidataBANK0 0008                     _dht22_read 03FD  
                __end_of_tx_sn 0655          ?_print_analogvoltages 0070                     __end_of_tx 0E29  
                   ??_ADC_Init 0070                        ??_tx_sn 007B                     __pbssBANK0 0046  
               tx_sn@remainder 002C                     ??_LCD_Char 0070                     ??_LCD_init 0073  
                 tx_sn@result1 002A                     __pmaintext 0208       __size_of_dht22_read_byte 0039  
                      ?___lmul 0070                        ?___wmul 0070                 ___lmul@product 0079  
       ??_intdigits_chardigits 0076                        _LCD_num 033E                     __stringtab 0800  
          show_multidigits@val 0079                        ___aldiv 02A1                    ?_dht22_read 0076  
                      ___awdiv 0133                __size_of___lmul 0046                        ___awmod 0076  
              __size_of___wmul 0025                        ___lwdiv 0FBC                        ___lwmod 0F02  
       ??_print_analogvoltages 003E                        __ptext1 0655                        __ptext2 0E29  
                      __ptext3 0E45                        __ptext4 04C3                        __ptext5 0076  
                      __ptext6 0133                        __ptext7 019A                        __ptext8 0E1E  
                      __ptext9 033E                        _message 004E               ___awmod@dividend 0072  
             ___aldiv@dividend 0024                        _ser_int 0E29                        _problem 000A  
                      clrloop0 0E17           end_of_initialization 07FC               _show_multidigits 0655  
             ___aldiv@quotient 002A              ??_dht22_read_byte 0070                      _PORTDbits 0008  
  __size_of_print_serialnumber 0012                      _TRISDbits 0088              __size_of_ADC_Init 0064  
          __size_of_dht22_read 00C6              __size_of_LCD_Char 0040              __size_of_LCD_init 002E  
                ??_LCD_Command 0070                 __end_of___lmul 0076                 __end_of___wmul 0E9B  
          start_initialization 07E7                  LCD_num@digit1 0032                  LCD_num@digit2 0034  
                LCD_num@digit3 0036                     LCD_num@val 002E                  LCD_num@result 0038  
                     ??___lmul 0078                       ??___wmul 0074                    __pdataBANK0 0058  
             LCD_num@remainder 003C            __end_of_LCD_Command 0F7C                       ?_LCD_num 002E  
                    ___latbits 0002                  __pcstackBANK0 0020           dht22_read@dht22_humi 007D  
         dht22_read@dht22_temp 0076                    tx_sn@digit1 0026                    tx_sn@digit2 0028  
                  tx_sn@digit3 0024                    tx_sn@digit4 0020               ___lwdiv@dividend 0072  
                  tx_sn@result 0022                   ??_dht22_read 0077                       ?___aldiv 0020  
                     ?___awdiv 0070                       ?___awmod 0070                       ?___lwdiv 0070  
                     ?___lwmod 0070       __end_of_show_multidigits 07E7                      __pstrings 0800  
    dht22_read_byte@dht22_byte 0073  __size_of_intdigits_chardigits 000F                       _ADC_Init 00CF  
                     ?_ser_int 0070                       ?_problem 0070               ___lwdiv@quotient 0075  
               __size_of_tx_sn 0192                    __size_of_tx 000B             __end_of_dht22_read 04C3  
              ___aldiv@divisor 0020                       _LCD_Char 0F7C                ___aldiv@counter 0028  
               ___wmul@product 0074                       _LCD_init 0E9B                      clear_ram0 0E16  
              _dht22_read_byte 0EC9                       _GO_nDONE 00FA                    _LCD_Command 0F3C  
__size_of_print_analogvoltages 006E                    __stringbase 0805              ___wmul@multiplier 0070  
             __size_of_LCD_num 00BF              ___lmul@multiplier 0070          intdigits_chardigits@a 0070  
        intdigits_chardigits@b 0072          intdigits_chardigits@c 0074               __size_of___aldiv 009D  
             __size_of___awdiv 0067               __size_of___awmod 0059               __size_of___lwdiv 0044  
             __size_of___lwmod 003A             __end_of__stringtab 0806     __end_of_print_serialnumber 0E57  
              ___lwdiv@divisor 0070                ___lwdiv@counter 0077                       __ptext10 0E36  
                     __ptext11 0F02                       __ptext20 0E76                       __ptext12 0FBC  
                     __ptext21 0E9B                       __ptext13 0030                       __ptext22 0F3C  
                     __ptext14 02A1                       __ptext23 00CF                       __ptext15 03FD  
                     __ptext16 000A                       __ptext17 0E57                       __ptext18 0F7C  
                     __ptext19 0EC9               __size_of_ser_int 000D               __size_of_problem 0026  
      __end_of_dht22_read_byte 0F02                  __size_of_main 0099                  __size_of_show 001F  
                     _humidity 0056                LCD_Command@cmnd 0072               ___lwmod@dividend 0072  
                    stringcode 0800                       problem@a 0075      show_multidigits@remainder 002C  
            ?_show_multidigits 0079             ??_show_multidigits 007B                    _temperature 0054  
                     tx_sn@val 0079                ___lwmod@divisor 0070                ___lwmod@counter 0075  
                     stringdir 0800                       stringtab 0800                   ___aldiv@sign 0029  
             ?_dht22_read_byte 0070   __end_of_intdigits_chardigits 0E45  
