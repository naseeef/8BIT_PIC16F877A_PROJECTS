

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 06 14:51:15 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195                           
   196                           	psect	idataBANK0
   197  0E4B                     __pidataBANK0:
   198                           
   199                           ;initializer for _sn
   200  0E4B  3401               	retlw	1
   201  0E4C  3400               	retlw	0
   202  001E                     _ADRESH	set	30
   203  001F                     _ADCON0	set	31
   204  0008                     _PORTDbits	set	8
   205  001A                     _RCREG	set	26
   206  0019                     _TXREG	set	25
   207  0018                     _RCSTA	set	24
   208  0006                     _PORTB	set	6
   209  00FA                     _GO_nDONE	set	250
   210  0065                     _RCIF	set	101
   211  0064                     _TXIF	set	100
   212  0039                     _RC1	set	57
   213  0038                     _RC0	set	56
   214  009E                     _ADRESL	set	158
   215  009F                     _ADCON1	set	159
   216  0088                     _TRISDbits	set	136
   217  0099                     _SPBRG	set	153
   218  0098                     _TXSTA	set	152
   219  0087                     _TRISCbits	set	135
   220  0086                     _TRISBbits	set	134
   221                           
   222                           	psect	strings
   223  0800                     __pstrings:
   224  0800                     stringtab:
   225  0800                     __stringtab:
   226  0800                     stringcode:	
   227                           ;	String table - string pointers are 1 byte each
   228                           
   229  0800                     stringdir:
   230  0800  3008               	movlw	high stringdir
   231  0801  008A               	movwf	10
   232  0802  0804               	movf	4,w
   233  0803  0A84               	incf	4,f
   234  0804  0782               	addwf	2,f
   235  0805                     __stringbase:
   236  0805  3400               	retlw	0
   237  0806                     __end_of__stringtab:
   238  0806                     STR_2:
   239  0806  3448               	retlw	72	;'H'
   240  0807  3475               	retlw	117	;'u'
   241  0808  346D               	retlw	109	;'m'
   242  0809  3469               	retlw	105	;'i'
   243  080A  343A               	retlw	58	;':'
   244  080B  3400               	retlw	0
   245  080C                     STR_1:
   246  080C  3454               	retlw	84	;'T'
   247  080D  3465               	retlw	101	;'e'
   248  080E  346D               	retlw	109	;'m'
   249  080F  3470               	retlw	112	;'p'
   250  0810  343A               	retlw	58	;':'
   251  0811  3400               	retlw	0
   252                           
   253                           	psect	cinit
   254  07E7                     start_initialization:	
   255                           ; #config settings
   256                           
   257  07E7                     __initialization:
   258                           
   259                           ; Initialize objects allocated to BANK0
   260  07E7  120A  158A  264B  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   261  07EC  00E4               	movwf	__pdataBANK0& (0+127)
   262  07ED  120A  158A  264C  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   263  07F2  00E5               	movwf	(__pdataBANK0+1)& (0+127)
   264                           
   265                           ; Clear objects allocated to BANK0
   266  07F3  1383               	bcf	3,7	;select IRP bank0
   267  07F4  3046               	movlw	low __pbssBANK0
   268  07F5  0084               	movwf	4
   269  07F6  3064               	movlw	low (__pbssBANK0+30)
   270  07F7  120A  158A  264D  120A  118A  	fcall	clear_ram0
   271  07FC                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274  07FC                     __end_of__initialization:
   275  07FC  0183               	clrf	3
   276  07FD  120A  118A  28A8   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	bssBANK0
   279  0046                     __pbssBANK0:
   280  0046                     _AV:
   281  0046                     	ds	8
   282  004E                     _message:
   283  004E                     	ds	3
   284  0051                     _avv:
   285  0051                     	ds	3
   286  0054                     _temperature:
   287  0054                     	ds	2
   288  0056                     _humidity:
   289  0056                     	ds	2
   290  0058                     _Sum:
   291  0058                     	ds	2
   292  005A                     _RH:
   293  005A                     	ds	2
   294  005C                     _Temp:
   295  005C                     	ds	2
   296  005E                     _Ch:
   297  005E                     	ds	1
   298  005F                     _RH_byte2:
   299  005F                     	ds	1
   300  0060                     _RH_byte1:
   301  0060                     	ds	1
   302  0061                     _T_byte2:
   303  0061                     	ds	1
   304  0062                     _T_byte1:
   305  0062                     	ds	1
   306  0063                     _Check:
   307  0063                     	ds	1
   308                           
   309                           	psect	dataBANK0
   310  0064                     __pdataBANK0:
   311  0064                     _sn:
   312  0064                     	ds	2
   313                           
   314                           	psect	clrtext
   315  0E4D                     clear_ram0:	
   316                           ;	Called with FSR containing the base address, and
   317                           ;	W with the last address+1
   318                           
   319  0E4D  0064               	clrwdt	;clear the watchdog before getting into this loop
   320  0E4E                     clrloop0:
   321  0E4E  0180               	clrf	0	;clear RAM location pointed to by FSR
   322  0E4F  0A84               	incf	4,f	;increment pointer
   323  0E50  0604               	xorwf	4,w	;XOR with final address
   324  0E51  1903               	btfsc	3,2	;have we reached the end yet?
   325  0E52  3400               	retlw	0	;all done for this memory range, return
   326  0E53  0604               	xorwf	4,w	;XOR again to restore value
   327  0E54  2E4E               	goto	clrloop0	;do the next byte
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_intdigits_chardigits:
   332  0070                     ?_ADC_Init:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_ADC_Init:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_print_serialnumber:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_print_analogvoltages:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_print_dht11data:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_LCD_Command:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ??_LCD_Command:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_LCD_Char:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ??_LCD_Char:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_LCD_init:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_show:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_ser_int:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ??_ser_int:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_tx:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_tx:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_StartSignal:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_StartSignal:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_CheckResponse:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ??_CheckResponse:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_ReadData:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_ReadData:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_main:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?___awdiv:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?___awmod:	
   402                           ; 2 bytes @ 0x0
   403                           
   404  0070                     ?___lwdiv:	
   405                           ; 2 bytes @ 0x0
   406                           
   407  0070                     ?___lwmod:	
   408                           ; 2 bytes @ 0x0
   409                           
   410  0070                     ?___lmul:	
   411                           ; 2 bytes @ 0x0
   412                           
   413  0070                     tx@a:	
   414                           ; 4 bytes @ 0x0
   415                           
   416  0070                     intdigits_chardigits@a:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ___awdiv@divisor:	
   420                           ; 2 bytes @ 0x0
   421                           
   422  0070                     ___awmod@divisor:	
   423                           ; 2 bytes @ 0x0
   424                           
   425  0070                     ___lwdiv@divisor:	
   426                           ; 2 bytes @ 0x0
   427                           
   428  0070                     ___lwmod@divisor:	
   429                           ; 2 bytes @ 0x0
   430                           
   431  0070                     ___lmul@multiplier:	
   432                           ; 2 bytes @ 0x0
   433                           
   434                           
   435                           ; 4 bytes @ 0x0
   436  0070                     	ds	2
   437  0072                     LCD_Command@cmnd:
   438  0072                     LCD_Char@data:	
   439                           ; 1 bytes @ 0x2
   440                           
   441  0072                     ReadData@i:	
   442                           ; 1 bytes @ 0x2
   443                           
   444  0072                     intdigits_chardigits@b:	
   445                           ; 1 bytes @ 0x2
   446                           
   447  0072                     ___awdiv@dividend:	
   448                           ; 2 bytes @ 0x2
   449                           
   450  0072                     ___awmod@dividend:	
   451                           ; 2 bytes @ 0x2
   452                           
   453  0072                     ___lwdiv@dividend:	
   454                           ; 2 bytes @ 0x2
   455                           
   456  0072                     ___lwmod@dividend:	
   457                           ; 2 bytes @ 0x2
   458                           
   459                           
   460                           ; 2 bytes @ 0x2
   461  0072                     	ds	1
   462  0073                     ??_LCD_init:
   463  0073                     ??_show:	
   464                           ; 1 bytes @ 0x3
   465                           
   466  0073                     ReadData@j:	
   467                           ; 1 bytes @ 0x3
   468                           
   469                           
   470                           ; 1 bytes @ 0x3
   471  0073                     	ds	1
   472  0074                     ??___awdiv:
   473  0074                     ??___awmod:	
   474                           ; 1 bytes @ 0x4
   475                           
   476  0074                     ??___lwdiv:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0074                     ??___lwmod:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0074                     show@s:	
   483                           ; 1 bytes @ 0x4
   484                           
   485  0074                     intdigits_chardigits@c:	
   486                           ; 1 bytes @ 0x4
   487                           
   488  0074                     ___lmul@multiplicand:	
   489                           ; 2 bytes @ 0x4
   490                           
   491                           
   492                           ; 4 bytes @ 0x4
   493  0074                     	ds	1
   494  0075                     ___awdiv@counter:
   495  0075                     ___awmod@counter:	
   496                           ; 1 bytes @ 0x5
   497                           
   498  0075                     ___lwmod@counter:	
   499                           ; 1 bytes @ 0x5
   500                           
   501  0075                     ___lwdiv@quotient:	
   502                           ; 1 bytes @ 0x5
   503                           
   504                           
   505                           ; 2 bytes @ 0x5
   506  0075                     	ds	1
   507  0076                     ??_intdigits_chardigits:
   508  0076                     ___awdiv@sign:	
   509                           ; 1 bytes @ 0x6
   510                           
   511  0076                     ___awmod@sign:	
   512                           ; 1 bytes @ 0x6
   513                           
   514                           
   515                           ; 1 bytes @ 0x6
   516  0076                     	ds	1
   517  0077                     ___lwdiv@counter:
   518  0077                     ___awdiv@quotient:	
   519                           ; 1 bytes @ 0x7
   520                           
   521                           
   522                           ; 2 bytes @ 0x7
   523  0077                     	ds	1
   524  0078                     ??___lmul:
   525                           
   526                           ; 1 bytes @ 0x8
   527  0078                     	ds	1
   528  0079                     ?_show_multidigits:
   529  0079                     ?_tx_sn:	
   530                           ; 1 bytes @ 0x9
   531                           
   532  0079                     show_multidigits@val:	
   533                           ; 1 bytes @ 0x9
   534                           
   535  0079                     tx_sn@val:	
   536                           ; 2 bytes @ 0x9
   537                           
   538  0079                     ___lmul@product:	
   539                           ; 2 bytes @ 0x9
   540                           
   541                           
   542                           ; 4 bytes @ 0x9
   543  0079                     	ds	2
   544  007B                     ??_print_serialnumber:
   545  007B                     ??_show_multidigits:	
   546                           ; 1 bytes @ 0xB
   547                           
   548  007B                     ??_tx_sn:	
   549                           ; 1 bytes @ 0xB
   550                           
   551                           
   552                           ; 1 bytes @ 0xB
   553  007B                     	ds	2
   554  007D                     ??___aldiv:
   555                           
   556                           ; 1 bytes @ 0xD
   557  007D                     	ds	1
   558  007E                     ??_LCD_num:
   559                           
   560                           	psect	cstackBANK0
   561  0020                     __pcstackBANK0:	
   562                           ; 1 bytes @ 0xE
   563                           
   564  0020                     ?___aldiv:
   565  0020                     show_multidigits@digit4:	
   566                           ; 4 bytes @ 0x0
   567                           
   568  0020                     tx_sn@digit4:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  0020                     ___aldiv@divisor:	
   572                           ; 2 bytes @ 0x0
   573                           
   574                           
   575                           ; 4 bytes @ 0x0
   576  0020                     	ds	2
   577  0022                     show_multidigits@result:
   578  0022                     tx_sn@result:	
   579                           ; 2 bytes @ 0x2
   580                           
   581                           
   582                           ; 2 bytes @ 0x2
   583  0022                     	ds	2
   584  0024                     show_multidigits@digit3:
   585  0024                     tx_sn@digit3:	
   586                           ; 2 bytes @ 0x4
   587                           
   588  0024                     ___aldiv@dividend:	
   589                           ; 2 bytes @ 0x4
   590                           
   591                           
   592                           ; 4 bytes @ 0x4
   593  0024                     	ds	2
   594  0026                     show_multidigits@digit1:
   595  0026                     tx_sn@digit1:	
   596                           ; 2 bytes @ 0x6
   597                           
   598                           
   599                           ; 2 bytes @ 0x6
   600  0026                     	ds	2
   601  0028                     ___aldiv@counter:
   602  0028                     show_multidigits@digit2:	
   603                           ; 1 bytes @ 0x8
   604                           
   605  0028                     tx_sn@digit2:	
   606                           ; 2 bytes @ 0x8
   607                           
   608                           
   609                           ; 2 bytes @ 0x8
   610  0028                     	ds	1
   611  0029                     ___aldiv@sign:
   612                           
   613                           ; 1 bytes @ 0x9
   614  0029                     	ds	1
   615  002A                     show_multidigits@result1:
   616  002A                     tx_sn@result1:	
   617                           ; 2 bytes @ 0xA
   618                           
   619  002A                     ___aldiv@quotient:	
   620                           ; 2 bytes @ 0xA
   621                           
   622                           
   623                           ; 4 bytes @ 0xA
   624  002A                     	ds	2
   625  002C                     show_multidigits@remainder:
   626  002C                     tx_sn@remainder:	
   627                           ; 2 bytes @ 0xC
   628                           
   629                           
   630                           ; 2 bytes @ 0xC
   631  002C                     	ds	2
   632  002E                     ??_print_dht11data:
   633  002E                     ?_LCD_num:	
   634                           ; 1 bytes @ 0xE
   635                           
   636  002E                     LCD_num@val:	
   637                           ; 1 bytes @ 0xE
   638                           
   639                           
   640                           ; 4 bytes @ 0xE
   641  002E                     	ds	4
   642  0032                     LCD_num@digit1:
   643                           
   644                           ; 2 bytes @ 0x12
   645  0032                     	ds	2
   646  0034                     LCD_num@digit2:
   647                           
   648                           ; 2 bytes @ 0x14
   649  0034                     	ds	2
   650  0036                     LCD_num@digit3:
   651                           
   652                           ; 2 bytes @ 0x16
   653  0036                     	ds	2
   654  0038                     LCD_num@result:
   655                           
   656                           ; 2 bytes @ 0x18
   657  0038                     	ds	2
   658  003A                     LCD_num@result1:
   659                           
   660                           ; 2 bytes @ 0x1A
   661  003A                     	ds	2
   662  003C                     LCD_num@remainder:
   663                           
   664                           ; 2 bytes @ 0x1C
   665  003C                     	ds	2
   666  003E                     ??_print_analogvoltages:
   667                           
   668                           ; 1 bytes @ 0x1E
   669  003E                     	ds	3
   670  0041                     print_analogvoltages@i:
   671                           
   672                           ; 1 bytes @ 0x21
   673  0041                     	ds	1
   674  0042                     print_analogvoltages@j:
   675                           
   676                           ; 1 bytes @ 0x22
   677  0042                     	ds	1
   678  0043                     ??_main:
   679                           
   680                           ; 1 bytes @ 0x23
   681  0043                     	ds	3
   682                           
   683                           	psect	maintext
   684  00A8                     __pmaintext:	
   685 ;;
   686 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   687 ;;
   688 ;; *************** function _main *****************
   689 ;; Defined at:
   690 ;;		line 35 in file "main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : B00/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0
   706 ;;      Temps:          0       3       0       0       0
   707 ;;      Totals:         0       3       0       0       0
   708 ;;Total ram usage:        3 bytes
   709 ;; Hardware stack levels required when called: 3
   710 ;; This function calls:
   711 ;;		_ADC_Init
   712 ;;		_LCD_Command
   713 ;;		_LCD_init
   714 ;;		_print_analogvoltages
   715 ;;		_print_dht11data
   716 ;;		_print_serialnumber
   717 ;;		_ser_int
   718 ;;		_tx
   719 ;; This function is called by:
   720 ;;		Startup code after reset
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _main
   726  00A8                     _main:
   727  00A8                     l1805:	
   728                           ;incstack = 0
   729                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   730                           
   731                           
   732                           ;main.c: 37:     LCD_init();
   733  00A8  120A  158A  26CE  120A  118A  	fcall	_LCD_init
   734                           
   735                           ;main.c: 38:     ser_int();
   736  00AD  120A  158A  2660  120A  118A  	fcall	_ser_int
   737  00B2                     l162:	
   738                           ;main.c: 39:     while (1)
   739                           
   740                           
   741                           ;main.c: 40:     {;main.c: 41:         LCD_Command(0x01);
   742  00B2  3001               	movlw	1
   743  00B3  120A  158A  273E  120A  118A  	fcall	_LCD_Command
   744                           
   745                           ;main.c: 43:         ADC_Init ();
   746  00B8  120A  118A  2158  120A  118A  	fcall	_ADC_Init
   747  00BD                     l1807:
   748                           
   749                           ;main.c: 44:         GO_nDONE=1;
   750  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   751  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   752  00BF  151F               	bsf	31,2	;volatile
   753  00C0                     l163:	
   754                           ;main.c: 45:         while(GO_nDONE==1);
   755                           
   756  00C0  191F               	btfsc	31,2	;volatile
   757  00C1  28C3               	goto	u1611
   758  00C2  28C4               	goto	u1610
   759  00C3                     u1611:
   760  00C3  28C0               	goto	l163
   761  00C4                     u1610:
   762  00C4                     l1809:
   763                           
   764                           ;main.c: 46:         _delay((unsigned long)((10)*(20000000/4000.0)));
   765  00C4  3041               	movlw	65
   766  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   767  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   768  00C7  00C4               	movwf	??_main+1
   769  00C8  30ED               	movlw	237
   770  00C9  00C3               	movwf	??_main
   771  00CA                     u1627:
   772  00CA  0BC3               	decfsz	??_main,f
   773  00CB  28CA               	goto	u1627
   774  00CC  0BC4               	decfsz	??_main+1,f
   775  00CD  28CA               	goto	u1627
   776  00CE  28CF               	nop2
   777  00CF                     l1811:
   778                           
   779                           ;main.c: 49:         print_serialnumber();
   780  00CF  120A  158A  267C  120A  118A  	fcall	_print_serialnumber
   781  00D4                     l1813:
   782                           
   783                           ;main.c: 51:         print_analogvoltages();
   784  00D4  120A  118A  2223  120A  118A  	fcall	_print_analogvoltages
   785  00D9                     l1815:
   786                           
   787                           ;main.c: 54:         print_dht11data();
   788  00D9  120A  118A  23ED  120A  118A  	fcall	_print_dht11data
   789  00DE                     l1817:
   790                           
   791                           ;main.c: 57:         tx(0x0d);
   792  00DE  300D               	movlw	13
   793  00DF  120A  158A  2655  120A  118A  	fcall	_tx
   794                           
   795                           ;main.c: 58:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   796  00E4  301A               	movlw	26
   797  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   798  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   799  00E7  00C5               	movwf	??_main+2
   800  00E8  305E               	movlw	94
   801  00E9  00C4               	movwf	??_main+1
   802  00EA  306D               	movlw	109
   803  00EB  00C3               	movwf	??_main
   804  00EC                     u1637:
   805  00EC  0BC3               	decfsz	??_main,f
   806  00ED  28EC               	goto	u1637
   807  00EE  0BC4               	decfsz	??_main+1,f
   808  00EF  28EC               	goto	u1637
   809  00F0  0BC5               	decfsz	??_main+2,f
   810  00F1  28EC               	goto	u1637
   811  00F2  28F3               	nop2
   812                           
   813                           ;main.c: 59:         sn += 1;
   814  00F3  3001               	movlw	1
   815  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   816  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   817  00F6  07E4               	addwf	_sn,f
   818  00F7  1803               	skipnc
   819  00F8  0AE5               	incf	_sn+1,f
   820  00F9  3000               	movlw	0
   821  00FA  07E5               	addwf	_sn+1,f
   822  00FB  28B2               	goto	l162
   823  00FC  120A  118A  2800   	ljmp	start
   824  00FF                     __end_of_main:
   825                           
   826                           	psect	text1
   827  0E60                     __ptext1:	
   828 ;; *************** function _ser_int *****************
   829 ;; Defined at:
   830 ;;		line 7 in file "./uart.h"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0
   847 ;;      Totals:         0       0       0       0       0
   848 ;;Total ram usage:        0 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _ser_int
   859  0E60                     _ser_int:
   860  0E60                     l1729:	
   861                           ;incstack = 0
   862                           ; Regs used in _ser_int: [wreg]
   863                           
   864                           
   865                           ;./uart.h: 9:  TXSTA= 0x20;
   866  0E60  3020               	movlw	32
   867  0E61  1683               	bsf	3,5	;RP0=1, select bank1
   868  0E62  1303               	bcf	3,6	;RP1=0, select bank1
   869  0E63  0098               	movwf	24	;volatile
   870                           
   871                           ;./uart.h: 10:  RCSTA= 0b10010000;
   872  0E64  3090               	movlw	144
   873  0E65  1283               	bcf	3,5	;RP0=0, select bank0
   874  0E66  1303               	bcf	3,6	;RP1=0, select bank0
   875  0E67  0098               	movwf	24	;volatile
   876                           
   877                           ;./uart.h: 11:  SPBRG=31;
   878  0E68  301F               	movlw	31
   879  0E69  1683               	bsf	3,5	;RP0=1, select bank1
   880  0E6A  1303               	bcf	3,6	;RP1=0, select bank1
   881  0E6B  0099               	movwf	25	;volatile
   882  0E6C                     l86:
   883  0E6C  0008               	return
   884  0E6D                     __end_of_ser_int:
   885                           
   886                           	psect	text2
   887  0E7C                     __ptext2:	
   888 ;; *************** function _print_serialnumber *****************
   889 ;; Defined at:
   890 ;;		line 86 in file "main.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0, pclath, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 2
   911 ;; This function calls:
   912 ;;		_tx
   913 ;;		_tx_sn
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _print_serialnumber
   921  0E7C                     _print_serialnumber:
   922  0E7C                     l1733:	
   923                           ;incstack = 0
   924                           ; Regs used in _print_serialnumber: [wreg+status,2+status,0+pclath+cstack]
   925                           
   926                           
   927                           ;main.c: 88:     tx_sn(sn);
   928  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
   929  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
   930  0E7E  0865               	movf	_sn+1,w
   931  0E7F  00FA               	movwf	tx_sn@val+1
   932  0E80  0864               	movf	_sn,w
   933  0E81  00F9               	movwf	tx_sn@val
   934  0E82  120A  118A  2655  120A  158A  	fcall	_tx_sn
   935                           
   936                           ;main.c: 89:     tx(')');
   937  0E87  3029               	movlw	41
   938  0E88  120A  158A  2655  120A  158A  	fcall	_tx
   939  0E8D                     l174:
   940  0E8D  0008               	return
   941  0E8E                     __end_of_print_serialnumber:
   942                           
   943                           	psect	text3
   944  03ED                     __ptext3:	
   945 ;; *************** function _print_dht11data *****************
   946 ;; Defined at:
   947 ;;		line 116 in file "main.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0       8       0       0       0
   964 ;;      Totals:         0       8       0       0       0
   965 ;;Total ram usage:        8 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 2
   968 ;; This function calls:
   969 ;;		_CheckResponse
   970 ;;		_LCD_Command
   971 ;;		_ReadData
   972 ;;		_StartSignal
   973 ;;		_show
   974 ;;		_show_multidigits
   975 ;;		_tx
   976 ;;		_tx_sn
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function _print_dht11data
   984  03ED                     _print_dht11data:
   985  03ED                     l1771:	
   986                           ;incstack = 0
   987                           ; Regs used in _print_dht11data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   988                           
   989                           
   990                           ;main.c: 118:         StartSignal();
   991  03ED  120A  118A  2004  120A  118A  	fcall	_StartSignal
   992                           
   993                           ;main.c: 119:         CheckResponse();
   994  03F2  120A  158A  26AD  120A  118A  	fcall	_CheckResponse
   995  03F7                     l1773:
   996                           
   997                           ;main.c: 120:         if(Check == 1)
   998  03F7  1283               	bcf	3,5	;RP0=0, select bank0
   999  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1000  03F9  0363               	decf	_Check,w
  1001  03FA  1D03               	btfss	3,2
  1002  03FB  2BFD               	goto	u1591
  1003  03FC  2BFE               	goto	u1590
  1004  03FD                     u1591:
  1005  03FD  2C66               	goto	l1781
  1006  03FE                     u1590:
  1007  03FE                     l1775:
  1008                           
  1009                           ;main.c: 121:         {;main.c: 122:             RH_byte1 = ReadData();
  1010  03FE  120A  158A  27BE  120A  118A  	fcall	_ReadData
  1011  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0405  00AE               	movwf	??_print_dht11data
  1014  0406  082E               	movf	??_print_dht11data,w
  1015  0407  00E0               	movwf	_RH_byte1
  1016                           
  1017                           ;main.c: 123:             RH_byte2 = ReadData();
  1018  0408  120A  158A  27BE  120A  118A  	fcall	_ReadData
  1019  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1020  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1021  040F  00AE               	movwf	??_print_dht11data
  1022  0410  082E               	movf	??_print_dht11data,w
  1023  0411  00DF               	movwf	_RH_byte2
  1024                           
  1025                           ;main.c: 124:             T_byte1 = ReadData();
  1026  0412  120A  158A  27BE  120A  118A  	fcall	_ReadData
  1027  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0419  00AE               	movwf	??_print_dht11data
  1030  041A  082E               	movf	??_print_dht11data,w
  1031  041B  00E2               	movwf	_T_byte1
  1032                           
  1033                           ;main.c: 125:             T_byte2 = ReadData();
  1034  041C  120A  158A  27BE  120A  118A  	fcall	_ReadData
  1035  0421  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0422  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0423  00AE               	movwf	??_print_dht11data
  1038  0424  082E               	movf	??_print_dht11data,w
  1039  0425  00E1               	movwf	_T_byte2
  1040                           
  1041                           ;main.c: 126:             Sum = ReadData();
  1042  0426  120A  158A  27BE  120A  118A  	fcall	_ReadData
  1043  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1044  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1045  042D  00AE               	movwf	??_print_dht11data
  1046  042E  01AF               	clrf	??_print_dht11data+1
  1047  042F  082E               	movf	??_print_dht11data,w
  1048  0430  00D8               	movwf	_Sum
  1049  0431  082F               	movf	??_print_dht11data+1,w
  1050  0432  00D9               	movwf	_Sum+1
  1051  0433                     l1777:
  1052                           
  1053                           ;main.c: 127:             if(Sum == ((RH_byte1+RH_byte2+T_byte1+T_byte2) & 0XFF))
  1054  0433  0860               	movf	_RH_byte1,w
  1055  0434  075F               	addwf	_RH_byte2,w
  1056  0435  00AE               	movwf	??_print_dht11data
  1057  0436  01AF               	clrf	??_print_dht11data+1
  1058  0437  0DAF               	rlf	??_print_dht11data+1,f
  1059  0438  0862               	movf	_T_byte1,w
  1060  0439  072E               	addwf	??_print_dht11data,w
  1061  043A  00B0               	movwf	??_print_dht11data+2
  1062  043B  3000               	movlw	0
  1063  043C  1803               	skipnc
  1064  043D  3001               	movlw	1
  1065  043E  072F               	addwf	??_print_dht11data+1,w
  1066  043F  00B1               	movwf	??_print_dht11data+3
  1067  0440  0861               	movf	_T_byte2,w
  1068  0441  0730               	addwf	??_print_dht11data+2,w
  1069  0442  00B2               	movwf	??_print_dht11data+4
  1070  0443  3000               	movlw	0
  1071  0444  1803               	skipnc
  1072  0445  3001               	movlw	1
  1073  0446  0731               	addwf	??_print_dht11data+3,w
  1074  0447  00B3               	movwf	??_print_dht11data+5
  1075  0448  30FF               	movlw	255
  1076  0449  0532               	andwf	??_print_dht11data+4,w
  1077  044A  00B4               	movwf	??_print_dht11data+6
  1078  044B  3000               	movlw	0
  1079  044C  0533               	andwf	??_print_dht11data+5,w
  1080  044D  00B5               	movwf	??_print_dht11data+7
  1081  044E  0859               	movf	_Sum+1,w
  1082  044F  0635               	xorwf	??_print_dht11data+7,w
  1083  0450  1D03               	skipz
  1084  0451  2C54               	goto	u1605
  1085  0452  0858               	movf	_Sum,w
  1086  0453  0634               	xorwf	??_print_dht11data+6,w
  1087  0454                     u1605:
  1088  0454  1D03               	skipz
  1089  0455  2C57               	goto	u1601
  1090  0456  2C58               	goto	u1600
  1091  0457                     u1601:
  1092  0457  2C66               	goto	l1781
  1093  0458                     u1600:
  1094  0458                     l1779:
  1095                           
  1096                           ;main.c: 128:             {;main.c: 129:                 Temp = T_byte1;
  1097  0458  0862               	movf	_T_byte1,w
  1098  0459  00AE               	movwf	??_print_dht11data
  1099  045A  01AF               	clrf	??_print_dht11data+1
  1100  045B  082E               	movf	??_print_dht11data,w
  1101  045C  00DC               	movwf	_Temp
  1102  045D  082F               	movf	??_print_dht11data+1,w
  1103  045E  00DD               	movwf	_Temp+1
  1104                           
  1105                           ;main.c: 130:                 RH = RH_byte1;
  1106  045F  0860               	movf	_RH_byte1,w
  1107  0460  00AE               	movwf	??_print_dht11data
  1108  0461  01AF               	clrf	??_print_dht11data+1
  1109  0462  082E               	movf	??_print_dht11data,w
  1110  0463  00DA               	movwf	_RH
  1111  0464  082F               	movf	??_print_dht11data+1,w
  1112  0465  00DB               	movwf	_RH+1
  1113  0466                     l1781:
  1114                           
  1115                           ;main.c: 133:         LCD_Command(0xC0);
  1116  0466  30C0               	movlw	192
  1117  0467  120A  158A  273E  120A  118A  	fcall	_LCD_Command
  1118  046C                     l1783:
  1119                           
  1120                           ;main.c: 134:         show("Temp:");
  1121  046C  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1122  046D  120A  158A  268E  120A  118A  	fcall	_show
  1123  0472                     l1785:
  1124                           
  1125                           ;main.c: 135:         LCD_Command(0xC5);
  1126  0472  30C5               	movlw	197
  1127  0473  120A  158A  273E  120A  118A  	fcall	_LCD_Command
  1128  0478                     l1787:
  1129                           
  1130                           ;main.c: 136:         show_multidigits (Temp);
  1131  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1133  047A  085D               	movf	_Temp+1,w
  1134  047B  00FA               	movwf	show_multidigits@val+1
  1135  047C  085C               	movf	_Temp,w
  1136  047D  00F9               	movwf	show_multidigits@val
  1137  047E  120A  118A  24C3  120A  118A  	fcall	_show_multidigits
  1138  0483                     l1789:
  1139                           
  1140                           ;main.c: 137:         tx_sn(Temp);
  1141  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0485  085D               	movf	_Temp+1,w
  1144  0486  00FA               	movwf	tx_sn@val+1
  1145  0487  085C               	movf	_Temp,w
  1146  0488  00F9               	movwf	tx_sn@val
  1147  0489  120A  118A  2655  120A  118A  	fcall	_tx_sn
  1148  048E                     l1791:
  1149                           
  1150                           ;main.c: 138:         tx(',');
  1151  048E  302C               	movlw	44
  1152  048F  120A  158A  2655  120A  118A  	fcall	_tx
  1153  0494                     l1793:
  1154                           
  1155                           ;main.c: 139:         LCD_Command(0xC9);
  1156  0494  30C9               	movlw	201
  1157  0495  120A  158A  273E  120A  118A  	fcall	_LCD_Command
  1158  049A                     l1795:
  1159                           
  1160                           ;main.c: 140:         show("Humi:");
  1161  049A  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1162  049B  120A  158A  268E  120A  118A  	fcall	_show
  1163  04A0                     l1797:
  1164                           
  1165                           ;main.c: 141:         LCD_Command(0xCE);
  1166  04A0  30CE               	movlw	206
  1167  04A1  120A  158A  273E  120A  118A  	fcall	_LCD_Command
  1168  04A6                     l1799:
  1169                           
  1170                           ;main.c: 142:         show_multidigits(RH);
  1171  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1172  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1173  04A8  085B               	movf	_RH+1,w
  1174  04A9  00FA               	movwf	show_multidigits@val+1
  1175  04AA  085A               	movf	_RH,w
  1176  04AB  00F9               	movwf	show_multidigits@val
  1177  04AC  120A  118A  24C3  120A  118A  	fcall	_show_multidigits
  1178  04B1                     l1801:
  1179                           
  1180                           ;main.c: 143:         tx_sn(RH);
  1181  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1182  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1183  04B3  085B               	movf	_RH+1,w
  1184  04B4  00FA               	movwf	tx_sn@val+1
  1185  04B5  085A               	movf	_RH,w
  1186  04B6  00F9               	movwf	tx_sn@val
  1187  04B7  120A  118A  2655  120A  118A  	fcall	_tx_sn
  1188  04BC                     l1803:
  1189                           
  1190                           ;main.c: 144:         tx(',');
  1191  04BC  302C               	movlw	44
  1192  04BD  120A  158A  2655  120A  118A  	fcall	_tx
  1193  04C2                     l189:
  1194  04C2  0008               	return
  1195  04C3                     __end_of_print_dht11data:
  1196                           
  1197                           	psect	text4
  1198  0655                     __ptext4:	
  1199 ;; *************** function _tx_sn *****************
  1200 ;; Defined at:
  1201 ;;		line 27 in file "./uart.h"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  val             2    9[COMMON] unsigned int 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  remainder       2   12[BANK0 ] int 
  1206 ;;  result1         2   10[BANK0 ] int 
  1207 ;;  digit2          2    8[BANK0 ] int 
  1208 ;;  digit1          2    6[BANK0 ] int 
  1209 ;;  digit3          2    4[BANK0 ] int 
  1210 ;;  result          2    2[BANK0 ] int 
  1211 ;;  digit4          2    0[BANK0 ] int 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, pclath, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         2       0       0       0       0
  1222 ;;      Locals:         0      14       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         2      14       0       0       0
  1225 ;;Total ram usage:       16 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 1
  1228 ;; This function calls:
  1229 ;;		___awdiv
  1230 ;;		___awmod
  1231 ;;		___lwdiv
  1232 ;;		___lwmod
  1233 ;;		_tx
  1234 ;; This function is called by:
  1235 ;;		_print_serialnumber
  1236 ;;		_print_dht11data
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _tx_sn
  1242  0655                     _tx_sn:
  1243  0655                     l1619:	
  1244                           ;incstack = 0
  1245                           ; Regs used in _tx_sn: [wreg+status,2+status,0+pclath+cstack]
  1246                           
  1247                           
  1248                           ;./uart.h: 27: void tx_sn (unsigned int val);./uart.h: 28: {;./uart.h: 29:     int remai
      +                          nder, digit1, digit2, digit3, digit4, result, result1;;./uart.h: 30:     if (val<=9)
  1249  0655  3000               	movlw	0
  1250  0656  027A               	subwf	tx_sn@val+1,w
  1251  0657  300A               	movlw	10
  1252  0658  1903               	skipnz
  1253  0659  0279               	subwf	tx_sn@val,w
  1254  065A  1803               	skipnc
  1255  065B  2E5D               	goto	u1401
  1256  065C  2E5E               	goto	u1400
  1257  065D                     u1401:
  1258  065D  2E66               	goto	l1623
  1259  065E                     u1400:
  1260  065E                     l1621:
  1261                           
  1262                           ;./uart.h: 31:     {;./uart.h: 32:        tx(val+0x30);
  1263  065E  0879               	movf	tx_sn@val,w
  1264  065F  3E30               	addlw	48
  1265  0660  120A  158A  2655  120A  118A  	fcall	_tx
  1266                           
  1267                           ;./uart.h: 33:     }
  1268  0665  2FE6               	goto	l108
  1269  0666                     l1623:
  1270  0666  3000               	movlw	0
  1271  0667  027A               	subwf	tx_sn@val+1,w
  1272  0668  300A               	movlw	10
  1273  0669  1903               	skipnz
  1274  066A  0279               	subwf	tx_sn@val,w
  1275  066B  1C03               	skipc
  1276  066C  2E6E               	goto	u1411
  1277  066D  2E6F               	goto	u1410
  1278  066E                     u1411:
  1279  066E  2EB3               	goto	l1637
  1280  066F                     u1410:
  1281  066F                     l1625:
  1282  066F  3000               	movlw	0
  1283  0670  027A               	subwf	tx_sn@val+1,w
  1284  0671  3064               	movlw	100
  1285  0672  1903               	skipnz
  1286  0673  0279               	subwf	tx_sn@val,w
  1287  0674  1803               	skipnc
  1288  0675  2E77               	goto	u1421
  1289  0676  2E78               	goto	u1420
  1290  0677                     u1421:
  1291  0677  2EB3               	goto	l1637
  1292  0678                     u1420:
  1293  0678                     l1627:
  1294                           
  1295                           ;./uart.h: 35:     {;./uart.h: 36:         remainder = val % 10;
  1296  0678  300A               	movlw	10
  1297  0679  00F0               	movwf	___lwmod@divisor
  1298  067A  3000               	movlw	0
  1299  067B  00F1               	movwf	___lwmod@divisor+1
  1300  067C  087A               	movf	tx_sn@val+1,w
  1301  067D  00F3               	movwf	___lwmod@dividend+1
  1302  067E  0879               	movf	tx_sn@val,w
  1303  067F  00F2               	movwf	___lwmod@dividend
  1304  0680  120A  158A  2704  120A  118A  	fcall	___lwmod
  1305  0685  0871               	movf	?___lwmod+1,w
  1306  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0688  00AD               	movwf	tx_sn@remainder+1
  1309  0689  0870               	movf	?___lwmod,w
  1310  068A  00AC               	movwf	tx_sn@remainder
  1311  068B                     l1629:
  1312                           
  1313                           ;./uart.h: 37:         digit1 = remainder;
  1314  068B  082D               	movf	tx_sn@remainder+1,w
  1315  068C  00A7               	movwf	tx_sn@digit1+1
  1316  068D  082C               	movf	tx_sn@remainder,w
  1317  068E  00A6               	movwf	tx_sn@digit1
  1318  068F                     l1631:
  1319                           
  1320                           ;./uart.h: 38:         digit2 = val/10;
  1321  068F  300A               	movlw	10
  1322  0690  00F0               	movwf	___lwdiv@divisor
  1323  0691  3000               	movlw	0
  1324  0692  00F1               	movwf	___lwdiv@divisor+1
  1325  0693  087A               	movf	tx_sn@val+1,w
  1326  0694  00F3               	movwf	___lwdiv@dividend+1
  1327  0695  0879               	movf	tx_sn@val,w
  1328  0696  00F2               	movwf	___lwdiv@dividend
  1329  0697  120A  118A  201E  120A  118A  	fcall	___lwdiv
  1330  069C  0871               	movf	?___lwdiv+1,w
  1331  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1332  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1333  069F  00A9               	movwf	tx_sn@digit2+1
  1334  06A0  0870               	movf	?___lwdiv,w
  1335  06A1  00A8               	movwf	tx_sn@digit2
  1336  06A2                     l1633:
  1337                           
  1338                           ;./uart.h: 39:         tx(digit2+0x30);
  1339  06A2  0828               	movf	tx_sn@digit2,w
  1340  06A3  3E30               	addlw	48
  1341  06A4  120A  158A  2655  120A  118A  	fcall	_tx
  1342  06A9                     l1635:
  1343                           
  1344                           ;./uart.h: 40:         tx(digit1+0x30);
  1345  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1346  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1347  06AB  0826               	movf	tx_sn@digit1,w
  1348  06AC  3E30               	addlw	48
  1349  06AD  120A  158A  2655  120A  118A  	fcall	_tx
  1350                           
  1351                           ;./uart.h: 41:     }
  1352  06B2  2FE6               	goto	l108
  1353  06B3                     l1637:
  1354  06B3  3000               	movlw	0
  1355  06B4  027A               	subwf	tx_sn@val+1,w
  1356  06B5  3064               	movlw	100
  1357  06B6  1903               	skipnz
  1358  06B7  0279               	subwf	tx_sn@val,w
  1359  06B8  1C03               	skipc
  1360  06B9  2EBB               	goto	u1431
  1361  06BA  2EBC               	goto	u1430
  1362  06BB                     u1431:
  1363  06BB  2F33               	goto	l1655
  1364  06BC                     u1430:
  1365  06BC                     l1639:
  1366  06BC  3003               	movlw	3
  1367  06BD  027A               	subwf	tx_sn@val+1,w
  1368  06BE  30E8               	movlw	232
  1369  06BF  1903               	skipnz
  1370  06C0  0279               	subwf	tx_sn@val,w
  1371  06C1  1803               	skipnc
  1372  06C2  2EC4               	goto	u1441
  1373  06C3  2EC5               	goto	u1440
  1374  06C4                     u1441:
  1375  06C4  2F33               	goto	l1655
  1376  06C5                     u1440:
  1377  06C5                     l1641:
  1378                           
  1379                           ;./uart.h: 43:     {;./uart.h: 44:         remainder = val % 10;
  1380  06C5  300A               	movlw	10
  1381  06C6  00F0               	movwf	___lwmod@divisor
  1382  06C7  3000               	movlw	0
  1383  06C8  00F1               	movwf	___lwmod@divisor+1
  1384  06C9  087A               	movf	tx_sn@val+1,w
  1385  06CA  00F3               	movwf	___lwmod@dividend+1
  1386  06CB  0879               	movf	tx_sn@val,w
  1387  06CC  00F2               	movwf	___lwmod@dividend
  1388  06CD  120A  158A  2704  120A  118A  	fcall	___lwmod
  1389  06D2  0871               	movf	?___lwmod+1,w
  1390  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1391  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1392  06D5  00AD               	movwf	tx_sn@remainder+1
  1393  06D6  0870               	movf	?___lwmod,w
  1394  06D7  00AC               	movwf	tx_sn@remainder
  1395                           
  1396                           ;./uart.h: 45:         result1 = val /10;
  1397  06D8  300A               	movlw	10
  1398  06D9  00F0               	movwf	___lwdiv@divisor
  1399  06DA  3000               	movlw	0
  1400  06DB  00F1               	movwf	___lwdiv@divisor+1
  1401  06DC  087A               	movf	tx_sn@val+1,w
  1402  06DD  00F3               	movwf	___lwdiv@dividend+1
  1403  06DE  0879               	movf	tx_sn@val,w
  1404  06DF  00F2               	movwf	___lwdiv@dividend
  1405  06E0  120A  118A  201E  120A  118A  	fcall	___lwdiv
  1406  06E5  0871               	movf	?___lwdiv+1,w
  1407  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1408  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1409  06E8  00AB               	movwf	tx_sn@result1+1
  1410  06E9  0870               	movf	?___lwdiv,w
  1411  06EA  00AA               	movwf	tx_sn@result1
  1412  06EB                     l1643:
  1413                           
  1414                           ;./uart.h: 46:         digit1 = remainder;
  1415  06EB  082D               	movf	tx_sn@remainder+1,w
  1416  06EC  00A7               	movwf	tx_sn@digit1+1
  1417  06ED  082C               	movf	tx_sn@remainder,w
  1418  06EE  00A6               	movwf	tx_sn@digit1
  1419  06EF                     l1645:
  1420                           
  1421                           ;./uart.h: 47:         remainder = result1%10;
  1422  06EF  300A               	movlw	10
  1423  06F0  00F0               	movwf	___awmod@divisor
  1424  06F1  3000               	movlw	0
  1425  06F2  00F1               	movwf	___awmod@divisor+1
  1426  06F3  082B               	movf	tx_sn@result1+1,w
  1427  06F4  00F3               	movwf	___awmod@dividend+1
  1428  06F5  082A               	movf	tx_sn@result1,w
  1429  06F6  00F2               	movwf	___awmod@dividend
  1430  06F7  120A  118A  20FF  120A  118A  	fcall	___awmod
  1431  06FC  0871               	movf	?___awmod+1,w
  1432  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1433  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1434  06FF  00AD               	movwf	tx_sn@remainder+1
  1435  0700  0870               	movf	?___awmod,w
  1436  0701  00AC               	movwf	tx_sn@remainder
  1437                           
  1438                           ;./uart.h: 48:         digit2 = remainder;
  1439  0702  082D               	movf	tx_sn@remainder+1,w
  1440  0703  00A9               	movwf	tx_sn@digit2+1
  1441  0704  082C               	movf	tx_sn@remainder,w
  1442  0705  00A8               	movwf	tx_sn@digit2
  1443  0706                     l1647:
  1444                           
  1445                           ;./uart.h: 49:         digit3 = result1/10;
  1446  0706  300A               	movlw	10
  1447  0707  00F0               	movwf	___awdiv@divisor
  1448  0708  3000               	movlw	0
  1449  0709  00F1               	movwf	___awdiv@divisor+1
  1450  070A  082B               	movf	tx_sn@result1+1,w
  1451  070B  00F3               	movwf	___awdiv@dividend+1
  1452  070C  082A               	movf	tx_sn@result1,w
  1453  070D  00F2               	movwf	___awdiv@dividend
  1454  070E  120A  118A  21BC  120A  118A  	fcall	___awdiv
  1455  0713  0871               	movf	?___awdiv+1,w
  1456  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0716  00A5               	movwf	tx_sn@digit3+1
  1459  0717  0870               	movf	?___awdiv,w
  1460  0718  00A4               	movwf	tx_sn@digit3
  1461  0719                     l1649:
  1462                           
  1463                           ;./uart.h: 50:         tx(digit3+0x30);
  1464  0719  0824               	movf	tx_sn@digit3,w
  1465  071A  3E30               	addlw	48
  1466  071B  120A  158A  2655  120A  118A  	fcall	_tx
  1467  0720                     l1651:
  1468                           
  1469                           ;./uart.h: 51:         tx(digit2+0x30);
  1470  0720  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0721  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0722  0828               	movf	tx_sn@digit2,w
  1473  0723  3E30               	addlw	48
  1474  0724  120A  158A  2655  120A  118A  	fcall	_tx
  1475  0729                     l1653:
  1476                           
  1477                           ;./uart.h: 52:         tx(digit1+0x30);
  1478  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1479  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1480  072B  0826               	movf	tx_sn@digit1,w
  1481  072C  3E30               	addlw	48
  1482  072D  120A  158A  2655  120A  118A  	fcall	_tx
  1483                           
  1484                           ;./uart.h: 53:     }
  1485  0732  2FE6               	goto	l108
  1486  0733                     l1655:
  1487  0733  3003               	movlw	3
  1488  0734  027A               	subwf	tx_sn@val+1,w
  1489  0735  30E8               	movlw	232
  1490  0736  1903               	skipnz
  1491  0737  0279               	subwf	tx_sn@val,w
  1492  0738  1C03               	skipc
  1493  0739  2F3B               	goto	u1451
  1494  073A  2F3C               	goto	u1450
  1495  073B                     u1451:
  1496  073B  2FE6               	goto	l104
  1497  073C                     u1450:
  1498  073C                     l1657:
  1499  073C  3027               	movlw	39
  1500  073D  027A               	subwf	tx_sn@val+1,w
  1501  073E  300F               	movlw	15
  1502  073F  1903               	skipnz
  1503  0740  0279               	subwf	tx_sn@val,w
  1504  0741  1803               	skipnc
  1505  0742  2F44               	goto	u1461
  1506  0743  2F45               	goto	u1460
  1507  0744                     u1461:
  1508  0744  2FE6               	goto	l104
  1509  0745                     u1460:
  1510  0745                     l1659:
  1511                           
  1512                           ;./uart.h: 55:     {;./uart.h: 56:         remainder = val % 10;
  1513  0745  300A               	movlw	10
  1514  0746  00F0               	movwf	___lwmod@divisor
  1515  0747  3000               	movlw	0
  1516  0748  00F1               	movwf	___lwmod@divisor+1
  1517  0749  087A               	movf	tx_sn@val+1,w
  1518  074A  00F3               	movwf	___lwmod@dividend+1
  1519  074B  0879               	movf	tx_sn@val,w
  1520  074C  00F2               	movwf	___lwmod@dividend
  1521  074D  120A  158A  2704  120A  118A  	fcall	___lwmod
  1522  0752  0871               	movf	?___lwmod+1,w
  1523  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0755  00AD               	movwf	tx_sn@remainder+1
  1526  0756  0870               	movf	?___lwmod,w
  1527  0757  00AC               	movwf	tx_sn@remainder
  1528                           
  1529                           ;./uart.h: 57:         result1 = val /10;
  1530  0758  300A               	movlw	10
  1531  0759  00F0               	movwf	___lwdiv@divisor
  1532  075A  3000               	movlw	0
  1533  075B  00F1               	movwf	___lwdiv@divisor+1
  1534  075C  087A               	movf	tx_sn@val+1,w
  1535  075D  00F3               	movwf	___lwdiv@dividend+1
  1536  075E  0879               	movf	tx_sn@val,w
  1537  075F  00F2               	movwf	___lwdiv@dividend
  1538  0760  120A  118A  201E  120A  118A  	fcall	___lwdiv
  1539  0765  0871               	movf	?___lwdiv+1,w
  1540  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0768  00AB               	movwf	tx_sn@result1+1
  1543  0769  0870               	movf	?___lwdiv,w
  1544  076A  00AA               	movwf	tx_sn@result1
  1545  076B                     l1661:
  1546                           
  1547                           ;./uart.h: 58:         digit1 = remainder;
  1548  076B  082D               	movf	tx_sn@remainder+1,w
  1549  076C  00A7               	movwf	tx_sn@digit1+1
  1550  076D  082C               	movf	tx_sn@remainder,w
  1551  076E  00A6               	movwf	tx_sn@digit1
  1552  076F                     l1663:
  1553                           
  1554                           ;./uart.h: 59:         remainder = result1%10;
  1555  076F  300A               	movlw	10
  1556  0770  00F0               	movwf	___awmod@divisor
  1557  0771  3000               	movlw	0
  1558  0772  00F1               	movwf	___awmod@divisor+1
  1559  0773  082B               	movf	tx_sn@result1+1,w
  1560  0774  00F3               	movwf	___awmod@dividend+1
  1561  0775  082A               	movf	tx_sn@result1,w
  1562  0776  00F2               	movwf	___awmod@dividend
  1563  0777  120A  118A  20FF  120A  118A  	fcall	___awmod
  1564  077C  0871               	movf	?___awmod+1,w
  1565  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1566  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1567  077F  00AD               	movwf	tx_sn@remainder+1
  1568  0780  0870               	movf	?___awmod,w
  1569  0781  00AC               	movwf	tx_sn@remainder
  1570                           
  1571                           ;./uart.h: 60:         digit2 = remainder;
  1572  0782  082D               	movf	tx_sn@remainder+1,w
  1573  0783  00A9               	movwf	tx_sn@digit2+1
  1574  0784  082C               	movf	tx_sn@remainder,w
  1575  0785  00A8               	movwf	tx_sn@digit2
  1576  0786                     l1665:
  1577                           
  1578                           ;./uart.h: 61:         result = result1/10;
  1579  0786  300A               	movlw	10
  1580  0787  00F0               	movwf	___awdiv@divisor
  1581  0788  3000               	movlw	0
  1582  0789  00F1               	movwf	___awdiv@divisor+1
  1583  078A  082B               	movf	tx_sn@result1+1,w
  1584  078B  00F3               	movwf	___awdiv@dividend+1
  1585  078C  082A               	movf	tx_sn@result1,w
  1586  078D  00F2               	movwf	___awdiv@dividend
  1587  078E  120A  118A  21BC  120A  118A  	fcall	___awdiv
  1588  0793  0871               	movf	?___awdiv+1,w
  1589  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0796  00A3               	movwf	tx_sn@result+1
  1592  0797  0870               	movf	?___awdiv,w
  1593  0798  00A2               	movwf	tx_sn@result
  1594  0799                     l1667:
  1595                           
  1596                           ;./uart.h: 62:         remainder = result%10;
  1597  0799  300A               	movlw	10
  1598  079A  00F0               	movwf	___awmod@divisor
  1599  079B  3000               	movlw	0
  1600  079C  00F1               	movwf	___awmod@divisor+1
  1601  079D  0823               	movf	tx_sn@result+1,w
  1602  079E  00F3               	movwf	___awmod@dividend+1
  1603  079F  0822               	movf	tx_sn@result,w
  1604  07A0  00F2               	movwf	___awmod@dividend
  1605  07A1  120A  118A  20FF  120A  118A  	fcall	___awmod
  1606  07A6  0871               	movf	?___awmod+1,w
  1607  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1608  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1609  07A9  00AD               	movwf	tx_sn@remainder+1
  1610  07AA  0870               	movf	?___awmod,w
  1611  07AB  00AC               	movwf	tx_sn@remainder
  1612                           
  1613                           ;./uart.h: 63:         digit3=remainder;
  1614  07AC  082D               	movf	tx_sn@remainder+1,w
  1615  07AD  00A5               	movwf	tx_sn@digit3+1
  1616  07AE  082C               	movf	tx_sn@remainder,w
  1617  07AF  00A4               	movwf	tx_sn@digit3
  1618  07B0                     l1669:
  1619                           
  1620                           ;./uart.h: 64:         digit4 = result/10;
  1621  07B0  300A               	movlw	10
  1622  07B1  00F0               	movwf	___awdiv@divisor
  1623  07B2  3000               	movlw	0
  1624  07B3  00F1               	movwf	___awdiv@divisor+1
  1625  07B4  0823               	movf	tx_sn@result+1,w
  1626  07B5  00F3               	movwf	___awdiv@dividend+1
  1627  07B6  0822               	movf	tx_sn@result,w
  1628  07B7  00F2               	movwf	___awdiv@dividend
  1629  07B8  120A  118A  21BC  120A  118A  	fcall	___awdiv
  1630  07BD  0871               	movf	?___awdiv+1,w
  1631  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1632  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1633  07C0  00A1               	movwf	tx_sn@digit4+1
  1634  07C1  0870               	movf	?___awdiv,w
  1635  07C2  00A0               	movwf	tx_sn@digit4
  1636  07C3                     l1671:
  1637                           
  1638                           ;./uart.h: 65:         tx(digit4+0x30);
  1639  07C3  0820               	movf	tx_sn@digit4,w
  1640  07C4  3E30               	addlw	48
  1641  07C5  120A  158A  2655  120A  118A  	fcall	_tx
  1642  07CA                     l1673:
  1643                           
  1644                           ;./uart.h: 66:         tx(digit3+0x30);
  1645  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1646  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1647  07CC  0824               	movf	tx_sn@digit3,w
  1648  07CD  3E30               	addlw	48
  1649  07CE  120A  158A  2655  120A  118A  	fcall	_tx
  1650  07D3                     l1675:
  1651                           
  1652                           ;./uart.h: 67:         tx(digit2+0x30);
  1653  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1654  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1655  07D5  0828               	movf	tx_sn@digit2,w
  1656  07D6  3E30               	addlw	48
  1657  07D7  120A  158A  2655  120A  118A  	fcall	_tx
  1658  07DC                     l1677:
  1659                           
  1660                           ;./uart.h: 68:         tx(digit1+0x30);
  1661  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1662  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1663  07DE  0826               	movf	tx_sn@digit1,w
  1664  07DF  3E30               	addlw	48
  1665  07E0  120A  158A  2655  120A  118A  	fcall	_tx
  1666  07E5  2FE6               	goto	l108
  1667  07E6                     l104:
  1668  07E6                     l108:
  1669  07E6  0008               	return
  1670  07E7                     __end_of_tx_sn:
  1671                           
  1672                           	psect	text5
  1673  04C3                     __ptext5:	
  1674 ;; *************** function _show_multidigits *****************
  1675 ;; Defined at:
  1676 ;;		line 93 in file "./lcd4bit.h"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  val             2    9[COMMON] unsigned int 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  remainder       2   12[BANK0 ] int 
  1681 ;;  result1         2   10[BANK0 ] int 
  1682 ;;  digit2          2    8[BANK0 ] int 
  1683 ;;  digit1          2    6[BANK0 ] int 
  1684 ;;  digit3          2    4[BANK0 ] int 
  1685 ;;  result          2    2[BANK0 ] int 
  1686 ;;  digit4          2    0[BANK0 ] int 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, pclath, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         2       0       0       0       0
  1697 ;;      Locals:         0      14       0       0       0
  1698 ;;      Temps:          0       0       0       0       0
  1699 ;;      Totals:         2      14       0       0       0
  1700 ;;Total ram usage:       16 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 1
  1703 ;; This function calls:
  1704 ;;		_LCD_Char
  1705 ;;		___awdiv
  1706 ;;		___awmod
  1707 ;;		___lwdiv
  1708 ;;		___lwmod
  1709 ;; This function is called by:
  1710 ;;		_print_dht11data
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _show_multidigits
  1716  04C3                     _show_multidigits:
  1717  04C3                     l1559:	
  1718                           ;incstack = 0
  1719                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  1720                           
  1721                           
  1722                           ;./lcd4bit.h: 93: void show_multidigits (unsigned int val);./lcd4bit.h: 94: {;./lcd4bit.
      +                          h: 95:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          96:     if (val<=9)
  1723  04C3  3000               	movlw	0
  1724  04C4  027A               	subwf	show_multidigits@val+1,w
  1725  04C5  300A               	movlw	10
  1726  04C6  1903               	skipnz
  1727  04C7  0279               	subwf	show_multidigits@val,w
  1728  04C8  1803               	skipnc
  1729  04C9  2CCB               	goto	u1331
  1730  04CA  2CCC               	goto	u1330
  1731  04CB                     u1331:
  1732  04CB  2CD4               	goto	l1563
  1733  04CC                     u1330:
  1734  04CC                     l1561:
  1735                           
  1736                           ;./lcd4bit.h: 97:     {;./lcd4bit.h: 98:        LCD_Char(val+0x30);
  1737  04CC  0879               	movf	show_multidigits@val,w
  1738  04CD  3E30               	addlw	48
  1739  04CE  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1740                           
  1741                           ;./lcd4bit.h: 99:     }
  1742  04D3  2E54               	goto	l83
  1743  04D4                     l1563:
  1744  04D4  3000               	movlw	0
  1745  04D5  027A               	subwf	show_multidigits@val+1,w
  1746  04D6  300A               	movlw	10
  1747  04D7  1903               	skipnz
  1748  04D8  0279               	subwf	show_multidigits@val,w
  1749  04D9  1C03               	skipc
  1750  04DA  2CDC               	goto	u1341
  1751  04DB  2CDD               	goto	u1340
  1752  04DC                     u1341:
  1753  04DC  2D21               	goto	l1577
  1754  04DD                     u1340:
  1755  04DD                     l1565:
  1756  04DD  3000               	movlw	0
  1757  04DE  027A               	subwf	show_multidigits@val+1,w
  1758  04DF  3064               	movlw	100
  1759  04E0  1903               	skipnz
  1760  04E1  0279               	subwf	show_multidigits@val,w
  1761  04E2  1803               	skipnc
  1762  04E3  2CE5               	goto	u1351
  1763  04E4  2CE6               	goto	u1350
  1764  04E5                     u1351:
  1765  04E5  2D21               	goto	l1577
  1766  04E6                     u1350:
  1767  04E6                     l1567:
  1768                           
  1769                           ;./lcd4bit.h: 101:     {;./lcd4bit.h: 102:         remainder = val % 10;
  1770  04E6  300A               	movlw	10
  1771  04E7  00F0               	movwf	___lwmod@divisor
  1772  04E8  3000               	movlw	0
  1773  04E9  00F1               	movwf	___lwmod@divisor+1
  1774  04EA  087A               	movf	show_multidigits@val+1,w
  1775  04EB  00F3               	movwf	___lwmod@dividend+1
  1776  04EC  0879               	movf	show_multidigits@val,w
  1777  04ED  00F2               	movwf	___lwmod@dividend
  1778  04EE  120A  158A  2704  120A  118A  	fcall	___lwmod
  1779  04F3  0871               	movf	?___lwmod+1,w
  1780  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1781  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1782  04F6  00AD               	movwf	show_multidigits@remainder+1
  1783  04F7  0870               	movf	?___lwmod,w
  1784  04F8  00AC               	movwf	show_multidigits@remainder
  1785  04F9                     l1569:
  1786                           
  1787                           ;./lcd4bit.h: 103:         digit1 = remainder;
  1788  04F9  082D               	movf	show_multidigits@remainder+1,w
  1789  04FA  00A7               	movwf	show_multidigits@digit1+1
  1790  04FB  082C               	movf	show_multidigits@remainder,w
  1791  04FC  00A6               	movwf	show_multidigits@digit1
  1792  04FD                     l1571:
  1793                           
  1794                           ;./lcd4bit.h: 104:         digit2 = val/10;
  1795  04FD  300A               	movlw	10
  1796  04FE  00F0               	movwf	___lwdiv@divisor
  1797  04FF  3000               	movlw	0
  1798  0500  00F1               	movwf	___lwdiv@divisor+1
  1799  0501  087A               	movf	show_multidigits@val+1,w
  1800  0502  00F3               	movwf	___lwdiv@dividend+1
  1801  0503  0879               	movf	show_multidigits@val,w
  1802  0504  00F2               	movwf	___lwdiv@dividend
  1803  0505  120A  118A  201E  120A  118A  	fcall	___lwdiv
  1804  050A  0871               	movf	?___lwdiv+1,w
  1805  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1806  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1807  050D  00A9               	movwf	show_multidigits@digit2+1
  1808  050E  0870               	movf	?___lwdiv,w
  1809  050F  00A8               	movwf	show_multidigits@digit2
  1810  0510                     l1573:
  1811                           
  1812                           ;./lcd4bit.h: 105:         LCD_Char(digit2+0x30);
  1813  0510  0828               	movf	show_multidigits@digit2,w
  1814  0511  3E30               	addlw	48
  1815  0512  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1816  0517                     l1575:
  1817                           
  1818                           ;./lcd4bit.h: 106:         LCD_Char(digit1+0x30);
  1819  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0519  0826               	movf	show_multidigits@digit1,w
  1822  051A  3E30               	addlw	48
  1823  051B  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1824                           
  1825                           ;./lcd4bit.h: 107:     }
  1826  0520  2E54               	goto	l83
  1827  0521                     l1577:
  1828  0521  3000               	movlw	0
  1829  0522  027A               	subwf	show_multidigits@val+1,w
  1830  0523  3064               	movlw	100
  1831  0524  1903               	skipnz
  1832  0525  0279               	subwf	show_multidigits@val,w
  1833  0526  1C03               	skipc
  1834  0527  2D29               	goto	u1361
  1835  0528  2D2A               	goto	u1360
  1836  0529                     u1361:
  1837  0529  2DA1               	goto	l1595
  1838  052A                     u1360:
  1839  052A                     l1579:
  1840  052A  3003               	movlw	3
  1841  052B  027A               	subwf	show_multidigits@val+1,w
  1842  052C  30E8               	movlw	232
  1843  052D  1903               	skipnz
  1844  052E  0279               	subwf	show_multidigits@val,w
  1845  052F  1803               	skipnc
  1846  0530  2D32               	goto	u1371
  1847  0531  2D33               	goto	u1370
  1848  0532                     u1371:
  1849  0532  2DA1               	goto	l1595
  1850  0533                     u1370:
  1851  0533                     l1581:
  1852                           
  1853                           ;./lcd4bit.h: 109:     {;./lcd4bit.h: 110:         remainder = val % 10;
  1854  0533  300A               	movlw	10
  1855  0534  00F0               	movwf	___lwmod@divisor
  1856  0535  3000               	movlw	0
  1857  0536  00F1               	movwf	___lwmod@divisor+1
  1858  0537  087A               	movf	show_multidigits@val+1,w
  1859  0538  00F3               	movwf	___lwmod@dividend+1
  1860  0539  0879               	movf	show_multidigits@val,w
  1861  053A  00F2               	movwf	___lwmod@dividend
  1862  053B  120A  158A  2704  120A  118A  	fcall	___lwmod
  1863  0540  0871               	movf	?___lwmod+1,w
  1864  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0543  00AD               	movwf	show_multidigits@remainder+1
  1867  0544  0870               	movf	?___lwmod,w
  1868  0545  00AC               	movwf	show_multidigits@remainder
  1869                           
  1870                           ;./lcd4bit.h: 111:         result1 = val /10;
  1871  0546  300A               	movlw	10
  1872  0547  00F0               	movwf	___lwdiv@divisor
  1873  0548  3000               	movlw	0
  1874  0549  00F1               	movwf	___lwdiv@divisor+1
  1875  054A  087A               	movf	show_multidigits@val+1,w
  1876  054B  00F3               	movwf	___lwdiv@dividend+1
  1877  054C  0879               	movf	show_multidigits@val,w
  1878  054D  00F2               	movwf	___lwdiv@dividend
  1879  054E  120A  118A  201E  120A  118A  	fcall	___lwdiv
  1880  0553  0871               	movf	?___lwdiv+1,w
  1881  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0556  00AB               	movwf	show_multidigits@result1+1
  1884  0557  0870               	movf	?___lwdiv,w
  1885  0558  00AA               	movwf	show_multidigits@result1
  1886  0559                     l1583:
  1887                           
  1888                           ;./lcd4bit.h: 112:         digit1 = remainder;
  1889  0559  082D               	movf	show_multidigits@remainder+1,w
  1890  055A  00A7               	movwf	show_multidigits@digit1+1
  1891  055B  082C               	movf	show_multidigits@remainder,w
  1892  055C  00A6               	movwf	show_multidigits@digit1
  1893  055D                     l1585:
  1894                           
  1895                           ;./lcd4bit.h: 113:         remainder = result1%10;
  1896  055D  300A               	movlw	10
  1897  055E  00F0               	movwf	___awmod@divisor
  1898  055F  3000               	movlw	0
  1899  0560  00F1               	movwf	___awmod@divisor+1
  1900  0561  082B               	movf	show_multidigits@result1+1,w
  1901  0562  00F3               	movwf	___awmod@dividend+1
  1902  0563  082A               	movf	show_multidigits@result1,w
  1903  0564  00F2               	movwf	___awmod@dividend
  1904  0565  120A  118A  20FF  120A  118A  	fcall	___awmod
  1905  056A  0871               	movf	?___awmod+1,w
  1906  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1907  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1908  056D  00AD               	movwf	show_multidigits@remainder+1
  1909  056E  0870               	movf	?___awmod,w
  1910  056F  00AC               	movwf	show_multidigits@remainder
  1911                           
  1912                           ;./lcd4bit.h: 114:         digit2 = remainder;
  1913  0570  082D               	movf	show_multidigits@remainder+1,w
  1914  0571  00A9               	movwf	show_multidigits@digit2+1
  1915  0572  082C               	movf	show_multidigits@remainder,w
  1916  0573  00A8               	movwf	show_multidigits@digit2
  1917  0574                     l1587:
  1918                           
  1919                           ;./lcd4bit.h: 115:         digit3 = result1/10;
  1920  0574  300A               	movlw	10
  1921  0575  00F0               	movwf	___awdiv@divisor
  1922  0576  3000               	movlw	0
  1923  0577  00F1               	movwf	___awdiv@divisor+1
  1924  0578  082B               	movf	show_multidigits@result1+1,w
  1925  0579  00F3               	movwf	___awdiv@dividend+1
  1926  057A  082A               	movf	show_multidigits@result1,w
  1927  057B  00F2               	movwf	___awdiv@dividend
  1928  057C  120A  118A  21BC  120A  118A  	fcall	___awdiv
  1929  0581  0871               	movf	?___awdiv+1,w
  1930  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0584  00A5               	movwf	show_multidigits@digit3+1
  1933  0585  0870               	movf	?___awdiv,w
  1934  0586  00A4               	movwf	show_multidigits@digit3
  1935  0587                     l1589:
  1936                           
  1937                           ;./lcd4bit.h: 116:         LCD_Char(digit3+0x30);
  1938  0587  0824               	movf	show_multidigits@digit3,w
  1939  0588  3E30               	addlw	48
  1940  0589  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1941  058E                     l1591:
  1942                           
  1943                           ;./lcd4bit.h: 117:         LCD_Char(digit2+0x30);
  1944  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1945  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0590  0828               	movf	show_multidigits@digit2,w
  1947  0591  3E30               	addlw	48
  1948  0592  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1949  0597                     l1593:
  1950                           
  1951                           ;./lcd4bit.h: 118:         LCD_Char(digit1+0x30);
  1952  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1953  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1954  0599  0826               	movf	show_multidigits@digit1,w
  1955  059A  3E30               	addlw	48
  1956  059B  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1957                           
  1958                           ;./lcd4bit.h: 119:     }
  1959  05A0  2E54               	goto	l83
  1960  05A1                     l1595:
  1961  05A1  3003               	movlw	3
  1962  05A2  027A               	subwf	show_multidigits@val+1,w
  1963  05A3  30E8               	movlw	232
  1964  05A4  1903               	skipnz
  1965  05A5  0279               	subwf	show_multidigits@val,w
  1966  05A6  1C03               	skipc
  1967  05A7  2DA9               	goto	u1381
  1968  05A8  2DAA               	goto	u1380
  1969  05A9                     u1381:
  1970  05A9  2E54               	goto	l79
  1971  05AA                     u1380:
  1972  05AA                     l1597:
  1973  05AA  3027               	movlw	39
  1974  05AB  027A               	subwf	show_multidigits@val+1,w
  1975  05AC  300F               	movlw	15
  1976  05AD  1903               	skipnz
  1977  05AE  0279               	subwf	show_multidigits@val,w
  1978  05AF  1803               	skipnc
  1979  05B0  2DB2               	goto	u1391
  1980  05B1  2DB3               	goto	u1390
  1981  05B2                     u1391:
  1982  05B2  2E54               	goto	l79
  1983  05B3                     u1390:
  1984  05B3                     l1599:
  1985                           
  1986                           ;./lcd4bit.h: 121:     {;./lcd4bit.h: 122:         remainder = val % 10;
  1987  05B3  300A               	movlw	10
  1988  05B4  00F0               	movwf	___lwmod@divisor
  1989  05B5  3000               	movlw	0
  1990  05B6  00F1               	movwf	___lwmod@divisor+1
  1991  05B7  087A               	movf	show_multidigits@val+1,w
  1992  05B8  00F3               	movwf	___lwmod@dividend+1
  1993  05B9  0879               	movf	show_multidigits@val,w
  1994  05BA  00F2               	movwf	___lwmod@dividend
  1995  05BB  120A  158A  2704  120A  118A  	fcall	___lwmod
  1996  05C0  0871               	movf	?___lwmod+1,w
  1997  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1998  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1999  05C3  00AD               	movwf	show_multidigits@remainder+1
  2000  05C4  0870               	movf	?___lwmod,w
  2001  05C5  00AC               	movwf	show_multidigits@remainder
  2002                           
  2003                           ;./lcd4bit.h: 123:         result1 = val /10;
  2004  05C6  300A               	movlw	10
  2005  05C7  00F0               	movwf	___lwdiv@divisor
  2006  05C8  3000               	movlw	0
  2007  05C9  00F1               	movwf	___lwdiv@divisor+1
  2008  05CA  087A               	movf	show_multidigits@val+1,w
  2009  05CB  00F3               	movwf	___lwdiv@dividend+1
  2010  05CC  0879               	movf	show_multidigits@val,w
  2011  05CD  00F2               	movwf	___lwdiv@dividend
  2012  05CE  120A  118A  201E  120A  118A  	fcall	___lwdiv
  2013  05D3  0871               	movf	?___lwdiv+1,w
  2014  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2015  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2016  05D6  00AB               	movwf	show_multidigits@result1+1
  2017  05D7  0870               	movf	?___lwdiv,w
  2018  05D8  00AA               	movwf	show_multidigits@result1
  2019  05D9                     l1601:
  2020                           
  2021                           ;./lcd4bit.h: 124:         digit1 = remainder;
  2022  05D9  082D               	movf	show_multidigits@remainder+1,w
  2023  05DA  00A7               	movwf	show_multidigits@digit1+1
  2024  05DB  082C               	movf	show_multidigits@remainder,w
  2025  05DC  00A6               	movwf	show_multidigits@digit1
  2026  05DD                     l1603:
  2027                           
  2028                           ;./lcd4bit.h: 125:         remainder = result1%10;
  2029  05DD  300A               	movlw	10
  2030  05DE  00F0               	movwf	___awmod@divisor
  2031  05DF  3000               	movlw	0
  2032  05E0  00F1               	movwf	___awmod@divisor+1
  2033  05E1  082B               	movf	show_multidigits@result1+1,w
  2034  05E2  00F3               	movwf	___awmod@dividend+1
  2035  05E3  082A               	movf	show_multidigits@result1,w
  2036  05E4  00F2               	movwf	___awmod@dividend
  2037  05E5  120A  118A  20FF  120A  118A  	fcall	___awmod
  2038  05EA  0871               	movf	?___awmod+1,w
  2039  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2040  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2041  05ED  00AD               	movwf	show_multidigits@remainder+1
  2042  05EE  0870               	movf	?___awmod,w
  2043  05EF  00AC               	movwf	show_multidigits@remainder
  2044                           
  2045                           ;./lcd4bit.h: 126:         digit2 = remainder;
  2046  05F0  082D               	movf	show_multidigits@remainder+1,w
  2047  05F1  00A9               	movwf	show_multidigits@digit2+1
  2048  05F2  082C               	movf	show_multidigits@remainder,w
  2049  05F3  00A8               	movwf	show_multidigits@digit2
  2050  05F4                     l1605:
  2051                           
  2052                           ;./lcd4bit.h: 127:         result = result1/10;
  2053  05F4  300A               	movlw	10
  2054  05F5  00F0               	movwf	___awdiv@divisor
  2055  05F6  3000               	movlw	0
  2056  05F7  00F1               	movwf	___awdiv@divisor+1
  2057  05F8  082B               	movf	show_multidigits@result1+1,w
  2058  05F9  00F3               	movwf	___awdiv@dividend+1
  2059  05FA  082A               	movf	show_multidigits@result1,w
  2060  05FB  00F2               	movwf	___awdiv@dividend
  2061  05FC  120A  118A  21BC  120A  118A  	fcall	___awdiv
  2062  0601  0871               	movf	?___awdiv+1,w
  2063  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0604  00A3               	movwf	show_multidigits@result+1
  2066  0605  0870               	movf	?___awdiv,w
  2067  0606  00A2               	movwf	show_multidigits@result
  2068  0607                     l1607:
  2069                           
  2070                           ;./lcd4bit.h: 128:         remainder = result%10;
  2071  0607  300A               	movlw	10
  2072  0608  00F0               	movwf	___awmod@divisor
  2073  0609  3000               	movlw	0
  2074  060A  00F1               	movwf	___awmod@divisor+1
  2075  060B  0823               	movf	show_multidigits@result+1,w
  2076  060C  00F3               	movwf	___awmod@dividend+1
  2077  060D  0822               	movf	show_multidigits@result,w
  2078  060E  00F2               	movwf	___awmod@dividend
  2079  060F  120A  118A  20FF  120A  118A  	fcall	___awmod
  2080  0614  0871               	movf	?___awmod+1,w
  2081  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0617  00AD               	movwf	show_multidigits@remainder+1
  2084  0618  0870               	movf	?___awmod,w
  2085  0619  00AC               	movwf	show_multidigits@remainder
  2086                           
  2087                           ;./lcd4bit.h: 129:         digit3=remainder;
  2088  061A  082D               	movf	show_multidigits@remainder+1,w
  2089  061B  00A5               	movwf	show_multidigits@digit3+1
  2090  061C  082C               	movf	show_multidigits@remainder,w
  2091  061D  00A4               	movwf	show_multidigits@digit3
  2092  061E                     l1609:
  2093                           
  2094                           ;./lcd4bit.h: 130:         digit4 = result/10;
  2095  061E  300A               	movlw	10
  2096  061F  00F0               	movwf	___awdiv@divisor
  2097  0620  3000               	movlw	0
  2098  0621  00F1               	movwf	___awdiv@divisor+1
  2099  0622  0823               	movf	show_multidigits@result+1,w
  2100  0623  00F3               	movwf	___awdiv@dividend+1
  2101  0624  0822               	movf	show_multidigits@result,w
  2102  0625  00F2               	movwf	___awdiv@dividend
  2103  0626  120A  118A  21BC  120A  118A  	fcall	___awdiv
  2104  062B  0871               	movf	?___awdiv+1,w
  2105  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2106  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2107  062E  00A1               	movwf	show_multidigits@digit4+1
  2108  062F  0870               	movf	?___awdiv,w
  2109  0630  00A0               	movwf	show_multidigits@digit4
  2110  0631                     l1611:
  2111                           
  2112                           ;./lcd4bit.h: 131:         LCD_Char(digit4+0x30);
  2113  0631  0820               	movf	show_multidigits@digit4,w
  2114  0632  3E30               	addlw	48
  2115  0633  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  2116  0638                     l1613:
  2117                           
  2118                           ;./lcd4bit.h: 132:         LCD_Char(digit3+0x30);
  2119  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2121  063A  0824               	movf	show_multidigits@digit3,w
  2122  063B  3E30               	addlw	48
  2123  063C  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  2124  0641                     l1615:
  2125                           
  2126                           ;./lcd4bit.h: 133:         LCD_Char(digit2+0x30);
  2127  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0643  0828               	movf	show_multidigits@digit2,w
  2130  0644  3E30               	addlw	48
  2131  0645  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  2132  064A                     l1617:
  2133                           
  2134                           ;./lcd4bit.h: 134:         LCD_Char(digit1+0x30);
  2135  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2136  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2137  064C  0826               	movf	show_multidigits@digit1,w
  2138  064D  3E30               	addlw	48
  2139  064E  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  2140  0653  2E54               	goto	l83
  2141  0654                     l79:
  2142  0654                     l83:
  2143  0654  0008               	return
  2144  0655                     __end_of_show_multidigits:
  2145                           
  2146                           	psect	text6
  2147  00FF                     __ptext6:	
  2148 ;; *************** function ___awmod *****************
  2149 ;; Defined at:
  2150 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  divisor         2    0[COMMON] int 
  2153 ;;  dividend        2    2[COMMON] int 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  sign            1    6[COMMON] unsigned char 
  2156 ;;  counter         1    5[COMMON] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2    0[COMMON] int 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         4       0       0       0       0
  2167 ;;      Locals:         2       0       0       0       0
  2168 ;;      Temps:          1       0       0       0       0
  2169 ;;      Totals:         7       0       0       0       0
  2170 ;;Total ram usage:        7 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_show_multidigits
  2176 ;;		_tx_sn
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function ___awmod
  2182  00FF                     ___awmod:
  2183  00FF                     l1423:	
  2184                           ;incstack = 0
  2185                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2186                           
  2187  00FF  01F6               	clrf	___awmod@sign
  2188  0100                     l1425:
  2189  0100  1FF3               	btfss	___awmod@dividend+1,7
  2190  0101  2903               	goto	u1091
  2191  0102  2904               	goto	u1090
  2192  0103                     u1091:
  2193  0103  290B               	goto	l1431
  2194  0104                     u1090:
  2195  0104                     l1427:
  2196  0104  09F2               	comf	___awmod@dividend,f
  2197  0105  09F3               	comf	___awmod@dividend+1,f
  2198  0106  0AF2               	incf	___awmod@dividend,f
  2199  0107  1903               	skipnz
  2200  0108  0AF3               	incf	___awmod@dividend+1,f
  2201  0109                     l1429:
  2202  0109  01F6               	clrf	___awmod@sign
  2203  010A  0AF6               	incf	___awmod@sign,f
  2204  010B                     l1431:
  2205  010B  1FF1               	btfss	___awmod@divisor+1,7
  2206  010C  290E               	goto	u1101
  2207  010D  290F               	goto	u1100
  2208  010E                     u1101:
  2209  010E  2914               	goto	l1435
  2210  010F                     u1100:
  2211  010F                     l1433:
  2212  010F  09F0               	comf	___awmod@divisor,f
  2213  0110  09F1               	comf	___awmod@divisor+1,f
  2214  0111  0AF0               	incf	___awmod@divisor,f
  2215  0112  1903               	skipnz
  2216  0113  0AF1               	incf	___awmod@divisor+1,f
  2217  0114                     l1435:
  2218  0114  0870               	movf	___awmod@divisor,w
  2219  0115  0471               	iorwf	___awmod@divisor+1,w
  2220  0116  1903               	btfsc	3,2
  2221  0117  2919               	goto	u1111
  2222  0118  291A               	goto	u1110
  2223  0119                     u1111:
  2224  0119  2949               	goto	l1453
  2225  011A                     u1110:
  2226  011A                     l1437:
  2227  011A  01F5               	clrf	___awmod@counter
  2228  011B  0AF5               	incf	___awmod@counter,f
  2229  011C  2928               	goto	l1443
  2230  011D                     l1439:
  2231  011D  3001               	movlw	1
  2232  011E                     u1125:
  2233  011E  1003               	clrc
  2234  011F  0DF0               	rlf	___awmod@divisor,f
  2235  0120  0DF1               	rlf	___awmod@divisor+1,f
  2236  0121  3EFF               	addlw	-1
  2237  0122  1D03               	skipz
  2238  0123  291E               	goto	u1125
  2239  0124                     l1441:
  2240  0124  3001               	movlw	1
  2241  0125  00F4               	movwf	??___awmod
  2242  0126  0874               	movf	??___awmod,w
  2243  0127  07F5               	addwf	___awmod@counter,f
  2244  0128                     l1443:
  2245  0128  1FF1               	btfss	___awmod@divisor+1,7
  2246  0129  292B               	goto	u1131
  2247  012A  292C               	goto	u1130
  2248  012B                     u1131:
  2249  012B  291D               	goto	l1439
  2250  012C                     u1130:
  2251  012C                     l1445:
  2252  012C  0871               	movf	___awmod@divisor+1,w
  2253  012D  0273               	subwf	___awmod@dividend+1,w
  2254  012E  1D03               	skipz
  2255  012F  2932               	goto	u1145
  2256  0130  0870               	movf	___awmod@divisor,w
  2257  0131  0272               	subwf	___awmod@dividend,w
  2258  0132                     u1145:
  2259  0132  1C03               	skipc
  2260  0133  2935               	goto	u1141
  2261  0134  2936               	goto	u1140
  2262  0135                     u1141:
  2263  0135  293C               	goto	l1449
  2264  0136                     u1140:
  2265  0136                     l1447:
  2266  0136  0870               	movf	___awmod@divisor,w
  2267  0137  02F2               	subwf	___awmod@dividend,f
  2268  0138  0871               	movf	___awmod@divisor+1,w
  2269  0139  1C03               	skipc
  2270  013A  03F3               	decf	___awmod@dividend+1,f
  2271  013B  02F3               	subwf	___awmod@dividend+1,f
  2272  013C                     l1449:
  2273  013C  3001               	movlw	1
  2274  013D                     u1155:
  2275  013D  1003               	clrc
  2276  013E  0CF1               	rrf	___awmod@divisor+1,f
  2277  013F  0CF0               	rrf	___awmod@divisor,f
  2278  0140  3EFF               	addlw	-1
  2279  0141  1D03               	skipz
  2280  0142  293D               	goto	u1155
  2281  0143                     l1451:
  2282  0143  3001               	movlw	1
  2283  0144  02F5               	subwf	___awmod@counter,f
  2284  0145  1D03               	btfss	3,2
  2285  0146  2948               	goto	u1161
  2286  0147  2949               	goto	u1160
  2287  0148                     u1161:
  2288  0148  292C               	goto	l1445
  2289  0149                     u1160:
  2290  0149                     l1453:
  2291  0149  0876               	movf	___awmod@sign,w
  2292  014A  1903               	btfsc	3,2
  2293  014B  294D               	goto	u1171
  2294  014C  294E               	goto	u1170
  2295  014D                     u1171:
  2296  014D  2953               	goto	l1457
  2297  014E                     u1170:
  2298  014E                     l1455:
  2299  014E  09F2               	comf	___awmod@dividend,f
  2300  014F  09F3               	comf	___awmod@dividend+1,f
  2301  0150  0AF2               	incf	___awmod@dividend,f
  2302  0151  1903               	skipnz
  2303  0152  0AF3               	incf	___awmod@dividend+1,f
  2304  0153                     l1457:
  2305  0153  0873               	movf	___awmod@dividend+1,w
  2306  0154  00F1               	movwf	?___awmod+1
  2307  0155  0872               	movf	___awmod@dividend,w
  2308  0156  00F0               	movwf	?___awmod
  2309  0157                     l441:
  2310  0157  0008               	return
  2311  0158                     __end_of___awmod:
  2312                           
  2313                           	psect	text7
  2314  01BC                     __ptext7:	
  2315 ;; *************** function ___awdiv *****************
  2316 ;; Defined at:
  2317 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  divisor         2    0[COMMON] int 
  2320 ;;  dividend        2    2[COMMON] int 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  quotient        2    7[COMMON] int 
  2323 ;;  sign            1    6[COMMON] unsigned char 
  2324 ;;  counter         1    5[COMMON] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  2    0[COMMON] int 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2334 ;;      Params:         4       0       0       0       0
  2335 ;;      Locals:         4       0       0       0       0
  2336 ;;      Temps:          1       0       0       0       0
  2337 ;;      Totals:         9       0       0       0       0
  2338 ;;Total ram usage:        9 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_show_multidigits
  2344 ;;		_tx_sn
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function ___awdiv
  2350  01BC                     ___awdiv:
  2351  01BC                     l1379:	
  2352                           ;incstack = 0
  2353                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2354                           
  2355  01BC  01F6               	clrf	___awdiv@sign
  2356  01BD                     l1381:
  2357  01BD  1FF1               	btfss	___awdiv@divisor+1,7
  2358  01BE  29C0               	goto	u991
  2359  01BF  29C1               	goto	u990
  2360  01C0                     u991:
  2361  01C0  29C8               	goto	l1387
  2362  01C1                     u990:
  2363  01C1                     l1383:
  2364  01C1  09F0               	comf	___awdiv@divisor,f
  2365  01C2  09F1               	comf	___awdiv@divisor+1,f
  2366  01C3  0AF0               	incf	___awdiv@divisor,f
  2367  01C4  1903               	skipnz
  2368  01C5  0AF1               	incf	___awdiv@divisor+1,f
  2369  01C6                     l1385:
  2370  01C6  01F6               	clrf	___awdiv@sign
  2371  01C7  0AF6               	incf	___awdiv@sign,f
  2372  01C8                     l1387:
  2373  01C8  1FF3               	btfss	___awdiv@dividend+1,7
  2374  01C9  29CB               	goto	u1001
  2375  01CA  29CC               	goto	u1000
  2376  01CB                     u1001:
  2377  01CB  29D5               	goto	l1393
  2378  01CC                     u1000:
  2379  01CC                     l1389:
  2380  01CC  09F2               	comf	___awdiv@dividend,f
  2381  01CD  09F3               	comf	___awdiv@dividend+1,f
  2382  01CE  0AF2               	incf	___awdiv@dividend,f
  2383  01CF  1903               	skipnz
  2384  01D0  0AF3               	incf	___awdiv@dividend+1,f
  2385  01D1                     l1391:
  2386  01D1  3001               	movlw	1
  2387  01D2  00F4               	movwf	??___awdiv
  2388  01D3  0874               	movf	??___awdiv,w
  2389  01D4  06F6               	xorwf	___awdiv@sign,f
  2390  01D5                     l1393:
  2391  01D5  01F7               	clrf	___awdiv@quotient
  2392  01D6  01F8               	clrf	___awdiv@quotient+1
  2393  01D7                     l1395:
  2394  01D7  0870               	movf	___awdiv@divisor,w
  2395  01D8  0471               	iorwf	___awdiv@divisor+1,w
  2396  01D9  1903               	btfsc	3,2
  2397  01DA  29DC               	goto	u1011
  2398  01DB  29DD               	goto	u1010
  2399  01DC                     u1011:
  2400  01DC  2A14               	goto	l1415
  2401  01DD                     u1010:
  2402  01DD                     l1397:
  2403  01DD  01F5               	clrf	___awdiv@counter
  2404  01DE  0AF5               	incf	___awdiv@counter,f
  2405  01DF  29EB               	goto	l1403
  2406  01E0                     l1399:
  2407  01E0  3001               	movlw	1
  2408  01E1                     u1025:
  2409  01E1  1003               	clrc
  2410  01E2  0DF0               	rlf	___awdiv@divisor,f
  2411  01E3  0DF1               	rlf	___awdiv@divisor+1,f
  2412  01E4  3EFF               	addlw	-1
  2413  01E5  1D03               	skipz
  2414  01E6  29E1               	goto	u1025
  2415  01E7                     l1401:
  2416  01E7  3001               	movlw	1
  2417  01E8  00F4               	movwf	??___awdiv
  2418  01E9  0874               	movf	??___awdiv,w
  2419  01EA  07F5               	addwf	___awdiv@counter,f
  2420  01EB                     l1403:
  2421  01EB  1FF1               	btfss	___awdiv@divisor+1,7
  2422  01EC  29EE               	goto	u1031
  2423  01ED  29EF               	goto	u1030
  2424  01EE                     u1031:
  2425  01EE  29E0               	goto	l1399
  2426  01EF                     u1030:
  2427  01EF                     l1405:
  2428  01EF  3001               	movlw	1
  2429  01F0                     u1045:
  2430  01F0  1003               	clrc
  2431  01F1  0DF7               	rlf	___awdiv@quotient,f
  2432  01F2  0DF8               	rlf	___awdiv@quotient+1,f
  2433  01F3  3EFF               	addlw	-1
  2434  01F4  1D03               	skipz
  2435  01F5  29F0               	goto	u1045
  2436  01F6  0871               	movf	___awdiv@divisor+1,w
  2437  01F7  0273               	subwf	___awdiv@dividend+1,w
  2438  01F8  1D03               	skipz
  2439  01F9  29FC               	goto	u1055
  2440  01FA  0870               	movf	___awdiv@divisor,w
  2441  01FB  0272               	subwf	___awdiv@dividend,w
  2442  01FC                     u1055:
  2443  01FC  1C03               	skipc
  2444  01FD  29FF               	goto	u1051
  2445  01FE  2A00               	goto	u1050
  2446  01FF                     u1051:
  2447  01FF  2A07               	goto	l1411
  2448  0200                     u1050:
  2449  0200                     l1407:
  2450  0200  0870               	movf	___awdiv@divisor,w
  2451  0201  02F2               	subwf	___awdiv@dividend,f
  2452  0202  0871               	movf	___awdiv@divisor+1,w
  2453  0203  1C03               	skipc
  2454  0204  03F3               	decf	___awdiv@dividend+1,f
  2455  0205  02F3               	subwf	___awdiv@dividend+1,f
  2456  0206                     l1409:
  2457  0206  1477               	bsf	___awdiv@quotient,0
  2458  0207                     l1411:
  2459  0207  3001               	movlw	1
  2460  0208                     u1065:
  2461  0208  1003               	clrc
  2462  0209  0CF1               	rrf	___awdiv@divisor+1,f
  2463  020A  0CF0               	rrf	___awdiv@divisor,f
  2464  020B  3EFF               	addlw	-1
  2465  020C  1D03               	skipz
  2466  020D  2A08               	goto	u1065
  2467  020E                     l1413:
  2468  020E  3001               	movlw	1
  2469  020F  02F5               	subwf	___awdiv@counter,f
  2470  0210  1D03               	btfss	3,2
  2471  0211  2A13               	goto	u1071
  2472  0212  2A14               	goto	u1070
  2473  0213                     u1071:
  2474  0213  29EF               	goto	l1405
  2475  0214                     u1070:
  2476  0214                     l1415:
  2477  0214  0876               	movf	___awdiv@sign,w
  2478  0215  1903               	btfsc	3,2
  2479  0216  2A18               	goto	u1081
  2480  0217  2A19               	goto	u1080
  2481  0218                     u1081:
  2482  0218  2A1E               	goto	l1419
  2483  0219                     u1080:
  2484  0219                     l1417:
  2485  0219  09F7               	comf	___awdiv@quotient,f
  2486  021A  09F8               	comf	___awdiv@quotient+1,f
  2487  021B  0AF7               	incf	___awdiv@quotient,f
  2488  021C  1903               	skipnz
  2489  021D  0AF8               	incf	___awdiv@quotient+1,f
  2490  021E                     l1419:
  2491  021E  0878               	movf	___awdiv@quotient+1,w
  2492  021F  00F1               	movwf	?___awdiv+1
  2493  0220  0877               	movf	___awdiv@quotient,w
  2494  0221  00F0               	movwf	?___awdiv
  2495  0222                     l428:
  2496  0222  0008               	return
  2497  0223                     __end_of___awdiv:
  2498                           
  2499                           	psect	text8
  2500  0E8E                     __ptext8:	
  2501 ;; *************** function _show *****************
  2502 ;; Defined at:
  2503 ;;		line 79 in file "./lcd4bit.h"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  s               1    wreg     PTR unsigned char 
  2506 ;;		 -> STR_2(6), STR_1(6), 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  s               1    4[COMMON] PTR unsigned char 
  2509 ;;		 -> STR_2(6), STR_1(6), 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         1       0       0       0       0
  2521 ;;      Temps:          1       0       0       0       0
  2522 ;;      Totals:         2       0       0       0       0
  2523 ;;Total ram usage:        2 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 1
  2526 ;; This function calls:
  2527 ;;		_LCD_Char
  2528 ;; This function is called by:
  2529 ;;		_print_dht11data
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function _show
  2535  0E8E                     _show:
  2536                           
  2537                           ;incstack = 0
  2538                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2539                           ;show@s stored from wreg
  2540  0E8E  00F4               	movwf	show@s
  2541  0E8F                     l1551:
  2542                           
  2543                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
  2544  0E8F  2EA0               	goto	l1557
  2545  0E90                     l1553:
  2546                           
  2547                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
  2548  0E90  0874               	movf	show@s,w
  2549  0E91  0084               	movwf	4
  2550  0E92  120A  158A  2000  120A  158A  	fcall	stringdir
  2551  0E97  120A  158A  277E  120A  158A  	fcall	_LCD_Char
  2552  0E9C                     l1555:
  2553  0E9C  3001               	movlw	1
  2554  0E9D  00F3               	movwf	??_show
  2555  0E9E  0873               	movf	??_show,w
  2556  0E9F  07F4               	addwf	show@s,f
  2557  0EA0                     l1557:
  2558                           
  2559                           ;./lcd4bit.h: 81:     while(*s) {
  2560  0EA0  0874               	movf	show@s,w
  2561  0EA1  0084               	movwf	4
  2562  0EA2  120A  158A  2000  120A  158A  	fcall	stringdir
  2563  0EA7  3A00               	xorlw	0
  2564  0EA8  1D03               	skipz
  2565  0EA9  2EAB               	goto	u1321
  2566  0EAA  2EAC               	goto	u1320
  2567  0EAB                     u1321:
  2568  0EAB  2E90               	goto	l1553
  2569  0EAC                     u1320:
  2570  0EAC                     l70:
  2571  0EAC  0008               	return
  2572  0EAD                     __end_of_show:
  2573                           
  2574                           	psect	text9
  2575  0004                     __ptext9:	
  2576 ;; *************** function _StartSignal *****************
  2577 ;; Defined at:
  2578 ;;		line 7 in file "./d2h11.h"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0
  2594 ;;      Temps:          2       0       0       0       0
  2595 ;;      Totals:         2       0       0       0       0
  2596 ;;Total ram usage:        2 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_print_dht11data
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _StartSignal
  2607  0004                     _StartSignal:
  2608  0004                     l1679:	
  2609                           ;incstack = 0
  2610                           ; Regs used in _StartSignal: [wreg]
  2611                           
  2612                           
  2613                           ;./d2h11.h: 9:     TRISDbits.TRISD0 = 0;
  2614  0004  1683               	bsf	3,5	;RP0=1, select bank1
  2615  0005  1303               	bcf	3,6	;RP1=0, select bank1
  2616  0006  1008               	bcf	8,0	;volatile
  2617                           
  2618                           ;./d2h11.h: 10:     PORTDbits.RD0 = 0;
  2619  0007  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0008  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0009  1008               	bcf	8,0	;volatile
  2622  000A                     l1681:
  2623                           
  2624                           ;./d2h11.h: 11:     _delay((unsigned long)((25)*(20000000/4000.0)));
  2625  000A  30A3               	movlw	163
  2626  000B  00F1               	movwf	??_StartSignal+1
  2627  000C  3055               	movlw	85
  2628  000D  00F0               	movwf	??_StartSignal
  2629  000E                     u1647:
  2630  000E  0BF0               	decfsz	??_StartSignal,f
  2631  000F  280E               	goto	u1647
  2632  0010  0BF1               	decfsz	??_StartSignal+1,f
  2633  0011  280E               	goto	u1647
  2634  0012                     l1683:
  2635                           
  2636                           ;./d2h11.h: 12:     PORTDbits.RD0 = 1;
  2637  0012  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0013  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0014  1408               	bsf	8,0	;volatile
  2640                           
  2641                           ;./d2h11.h: 13:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  2642  0015  3031               	movlw	49
  2643  0016  00F0               	movwf	??_StartSignal
  2644  0017                     u1657:
  2645  0017  0BF0               	decfsz	??_StartSignal,f
  2646  0018  2817               	goto	u1657
  2647  0019  281A               	nop2
  2648  001A                     l1685:
  2649                           
  2650                           ;./d2h11.h: 14:     TRISDbits.TRISD0 = 1;
  2651  001A  1683               	bsf	3,5	;RP0=1, select bank1
  2652  001B  1303               	bcf	3,6	;RP1=0, select bank1
  2653  001C  1408               	bsf	8,0	;volatile
  2654  001D                     l129:
  2655  001D  0008               	return
  2656  001E                     __end_of_StartSignal:
  2657                           
  2658                           	psect	text10
  2659  0FBE                     __ptext10:	
  2660 ;; *************** function _ReadData *****************
  2661 ;; Defined at:
  2662 ;;		line 32 in file "./d2h11.h"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  j               1    3[COMMON] unsigned char 
  2667 ;;  i               1    2[COMMON] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      unsigned char 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2677 ;;      Params:         0       0       0       0       0
  2678 ;;      Locals:         2       0       0       0       0
  2679 ;;      Temps:          2       0       0       0       0
  2680 ;;      Totals:         4       0       0       0       0
  2681 ;;Total ram usage:        4 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_print_dht11data
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _ReadData
  2692  0FBE                     _ReadData:
  2693  0FBE                     l1701:	
  2694                           ;incstack = 0
  2695                           ; Regs used in _ReadData: [wreg+status,2+status,0]
  2696                           
  2697                           
  2698                           ;./d2h11.h: 34:     char i, j;;./d2h11.h: 35:     for(j = 0; j < 8; j++)
  2699  0FBE  01F3               	clrf	ReadData@j
  2700  0FBF                     l139:
  2701  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2702  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2703  0FC1  1C08               	btfss	8,0	;volatile
  2704  0FC2  2FC4               	goto	u1491
  2705  0FC3  2FC5               	goto	u1490
  2706  0FC4                     u1491:
  2707  0FC4  2FBF               	goto	l139
  2708  0FC5                     u1490:
  2709  0FC5                     l1707:
  2710                           
  2711                           ;./d2h11.h: 38:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  2712  0FC5  3031               	movlw	49
  2713  0FC6  00F0               	movwf	??_ReadData
  2714  0FC7                     u1667:
  2715  0FC7  0BF0               	decfsz	??_ReadData,f
  2716  0FC8  2FC7               	goto	u1667
  2717  0FC9  2FCA               	nop2
  2718  0FCA                     l1709:
  2719                           
  2720                           ;./d2h11.h: 39:         if(PORTDbits.RD0 == 0)
  2721  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0FCC  1808               	btfsc	8,0	;volatile
  2724  0FCD  2FCF               	goto	u1501
  2725  0FCE  2FD0               	goto	u1500
  2726  0FCF                     u1501:
  2727  0FCF  2FE1               	goto	l1713
  2728  0FD0                     u1500:
  2729  0FD0                     l1711:
  2730                           
  2731                           ;./d2h11.h: 40:         i&= ~(1<<(7 - j));
  2732  0FD0  3001               	movlw	1
  2733  0FD1  00F0               	movwf	??_ReadData
  2734  0FD2  0873               	movf	ReadData@j,w
  2735  0FD3  3C07               	sublw	7
  2736  0FD4  3E01               	addlw	1
  2737  0FD5  2FD8               	goto	u1514
  2738  0FD6                     u1515:
  2739  0FD6  1003               	clrc
  2740  0FD7  0DF0               	rlf	??_ReadData,f
  2741  0FD8                     u1514:
  2742  0FD8  3EFF               	addlw	-1
  2743  0FD9  1D03               	skipz
  2744  0FDA  2FD6               	goto	u1515
  2745  0FDB  0870               	movf	??_ReadData,w
  2746  0FDC  3AFF               	xorlw	255
  2747  0FDD  00F1               	movwf	??_ReadData+1
  2748  0FDE  0871               	movf	??_ReadData+1,w
  2749  0FDF  05F2               	andwf	ReadData@i,f
  2750  0FE0  2FF4               	goto	l1715
  2751  0FE1                     l1713:
  2752                           
  2753                           ;./d2h11.h: 42:         {;./d2h11.h: 43:             i|= (1 << (7 - j));
  2754  0FE1  3001               	movlw	1
  2755  0FE2  00F0               	movwf	??_ReadData
  2756  0FE3  0873               	movf	ReadData@j,w
  2757  0FE4  3C07               	sublw	7
  2758  0FE5  3E01               	addlw	1
  2759  0FE6  2FE9               	goto	u1524
  2760  0FE7                     u1525:
  2761  0FE7  1003               	clrc
  2762  0FE8  0DF0               	rlf	??_ReadData,f
  2763  0FE9                     u1524:
  2764  0FE9  3EFF               	addlw	-1
  2765  0FEA  1D03               	skipz
  2766  0FEB  2FE7               	goto	u1525
  2767  0FEC  0870               	movf	??_ReadData,w
  2768  0FED  00F1               	movwf	??_ReadData+1
  2769  0FEE  0871               	movf	??_ReadData+1,w
  2770  0FEF  04F2               	iorwf	ReadData@i,f
  2771  0FF0                     l144:	
  2772                           ;./d2h11.h: 44:             while(PORTDbits.RD0);
  2773                           
  2774  0FF0  1808               	btfsc	8,0	;volatile
  2775  0FF1  2FF3               	goto	u1531
  2776  0FF2  2FF4               	goto	u1530
  2777  0FF3                     u1531:
  2778  0FF3  2FF0               	goto	l144
  2779  0FF4                     u1530:
  2780  0FF4                     l1715:
  2781                           
  2782                           ;./d2h11.h: 46:     }
  2783  0FF4  3001               	movlw	1
  2784  0FF5  00F0               	movwf	??_ReadData
  2785  0FF6  0870               	movf	??_ReadData,w
  2786  0FF7  07F3               	addwf	ReadData@j,f
  2787  0FF8                     l1717:
  2788  0FF8  3008               	movlw	8
  2789  0FF9  0273               	subwf	ReadData@j,w
  2790  0FFA  1C03               	skipc
  2791  0FFB  2FFD               	goto	u1541
  2792  0FFC  2FFE               	goto	u1540
  2793  0FFD                     u1541:
  2794  0FFD  2FBF               	goto	l139
  2795  0FFE                     u1540:
  2796  0FFE                     l1719:
  2797                           
  2798                           ;./d2h11.h: 47:     return i;
  2799  0FFE  0872               	movf	ReadData@i,w
  2800  0FFF                     l147:
  2801  0FFF  0008               	return
  2802  1000                     __end_of_ReadData:
  2803                           
  2804                           	psect	text11
  2805  0EAD                     __ptext11:	
  2806 ;; *************** function _CheckResponse *****************
  2807 ;; Defined at:
  2808 ;;		line 17 in file "./d2h11.h"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2822 ;;      Params:         0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0
  2824 ;;      Temps:          1       0       0       0       0
  2825 ;;      Totals:         1       0       0       0       0
  2826 ;;Total ram usage:        1 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_print_dht11data
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _CheckResponse
  2837  0EAD                     _CheckResponse:
  2838  0EAD                     l1687:	
  2839                           ;incstack = 0
  2840                           ; Regs used in _CheckResponse: [wreg+status,2]
  2841                           
  2842                           
  2843                           ;./d2h11.h: 19:     Check = 0;
  2844  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0EAF  01E3               	clrf	_Check
  2847  0EB0                     l1689:
  2848                           
  2849                           ;./d2h11.h: 20:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  2850  0EB0  3042               	movlw	66
  2851  0EB1  00F0               	movwf	??_CheckResponse
  2852  0EB2                     u1677:
  2853  0EB2  0BF0               	decfsz	??_CheckResponse,f
  2854  0EB3  2EB2               	goto	u1677
  2855  0EB4  0000               	nop
  2856  0EB5                     l1691:
  2857                           
  2858                           ;./d2h11.h: 21:     if (PORTDbits.RD0 == 0)
  2859  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  2861  0EB7  1808               	btfsc	8,0	;volatile
  2862  0EB8  2EBA               	goto	u1471
  2863  0EB9  2EBB               	goto	u1470
  2864  0EBA                     u1471:
  2865  0EBA  2ECD               	goto	l134
  2866  0EBB                     u1470:
  2867  0EBB                     l1693:
  2868                           
  2869                           ;./d2h11.h: 22:     {;./d2h11.h: 23:         _delay((unsigned long)((80)*(20000000/40000
      +                          00.0)));
  2870  0EBB  3085               	movlw	133
  2871  0EBC  00F0               	movwf	??_CheckResponse
  2872  0EBD                     u1687:
  2873  0EBD  0BF0               	decfsz	??_CheckResponse,f
  2874  0EBE  2EBD               	goto	u1687
  2875  0EBF                     l1695:
  2876                           
  2877                           ;./d2h11.h: 24:         if (PORTDbits.RD0 == 1)
  2878  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0EC1  1C08               	btfss	8,0	;volatile
  2881  0EC2  2EC4               	goto	u1481
  2882  0EC3  2EC5               	goto	u1480
  2883  0EC4                     u1481:
  2884  0EC4  2ECD               	goto	l134
  2885  0EC5                     u1480:
  2886  0EC5                     l1697:
  2887                           
  2888                           ;./d2h11.h: 25:         {;./d2h11.h: 26:             _delay((unsigned long)((50)*(200000
      +                          00/4000000.0)));
  2889  0EC5  3053               	movlw	83
  2890  0EC6  00F0               	movwf	??_CheckResponse
  2891  0EC7                     u1697:
  2892  0EC7  0BF0               	decfsz	??_CheckResponse,f
  2893  0EC8  2EC7               	goto	u1697
  2894  0EC9                     l1699:
  2895                           
  2896                           ;./d2h11.h: 27:            Check = 1;
  2897  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0ECB  01E3               	clrf	_Check
  2900  0ECC  0AE3               	incf	_Check,f
  2901  0ECD                     l134:
  2902  0ECD  0008               	return
  2903  0ECE                     __end_of_CheckResponse:
  2904                           
  2905                           	psect	text12
  2906  0223                     __ptext12:	
  2907 ;; *************** function _print_analogvoltages *****************
  2908 ;; Defined at:
  2909 ;;		line 92 in file "main.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  j               1   34[BANK0 ] unsigned char 
  2914 ;;  i               1   33[BANK0 ] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2924 ;;      Params:         0       0       0       0       0
  2925 ;;      Locals:         0       2       0       0       0
  2926 ;;      Temps:          0       3       0       0       0
  2927 ;;      Totals:         0       5       0       0       0
  2928 ;;Total ram usage:        5 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 2
  2931 ;; This function calls:
  2932 ;;		_LCD_Char
  2933 ;;		_LCD_num
  2934 ;;		_tx
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           
  2941                           ;psect for function _print_analogvoltages
  2942  0223                     _print_analogvoltages:
  2943  0223                     l1735:	
  2944                           ;incstack = 0
  2945                           ; Regs used in _print_analogvoltages: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2946                           
  2947                           
  2948                           ;main.c: 94:     for (unsigned char i=0;i<4;i++)
  2949  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0225  01C1               	clrf	print_analogvoltages@i
  2952  0226                     l1741:
  2953                           
  2954                           ;main.c: 95:         {;main.c: 96:             LCD_num(AV[i]);
  2955  0226  0841               	movf	print_analogvoltages@i,w
  2956  0227  00BE               	movwf	??_print_analogvoltages
  2957  0228  073E               	addwf	??_print_analogvoltages,w
  2958  0229  3E46               	addlw	(low (_AV| 0))& (0+255)
  2959  022A  0084               	movwf	4
  2960  022B  1383               	bcf	3,7	;select IRP bank0
  2961  022C  0800               	movf	0,w
  2962  022D  00BF               	movwf	??_print_analogvoltages+1
  2963  022E  0A84               	incf	4,f
  2964  022F  0800               	movf	0,w
  2965  0230  00C0               	movwf	??_print_analogvoltages+2
  2966  0231  083F               	movf	??_print_analogvoltages+1,w
  2967  0232  00AE               	movwf	LCD_num@val
  2968  0233  0840               	movf	??_print_analogvoltages+2,w
  2969  0234  00AF               	movwf	LCD_num@val+1
  2970  0235  01B0               	clrf	LCD_num@val+2
  2971  0236  01B1               	clrf	LCD_num@val+3
  2972  0237  120A  118A  232E  120A  118A  	fcall	_LCD_num
  2973  023C                     l1743:
  2974                           
  2975                           ;main.c: 97:             LCD_Char(' ');
  2976  023C  3020               	movlw	32
  2977  023D  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  2978  0242                     l1745:
  2979                           
  2980                           ;main.c: 98:             for (unsigned char j=0;j<3;j++)
  2981  0242  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0243  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0244  01C2               	clrf	print_analogvoltages@j
  2984  0245                     l1751:
  2985                           
  2986                           ;main.c: 99:             {;main.c: 100:                 tx((avv[j]+0x30));
  2987  0245  0842               	movf	print_analogvoltages@j,w
  2988  0246  3E51               	addlw	(low (_avv| 0))& (0+255)
  2989  0247  0084               	movwf	4
  2990  0248  1383               	bcf	3,7	;select IRP bank0
  2991  0249  0800               	movf	0,w
  2992  024A  3E30               	addlw	48
  2993  024B  120A  158A  2655  120A  118A  	fcall	_tx
  2994  0250                     l1753:
  2995                           
  2996                           ;main.c: 101:                 if (j == 0)
  2997  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0252  0842               	movf	print_analogvoltages@j,w
  3000  0253  1D03               	btfss	3,2
  3001  0254  2A56               	goto	u1551
  3002  0255  2A57               	goto	u1550
  3003  0256                     u1551:
  3004  0256  2A5E               	goto	l1757
  3005  0257                     u1550:
  3006  0257                     l1755:
  3007                           
  3008                           ;main.c: 102:                 {;main.c: 103:                     tx('.');
  3009  0257  302E               	movlw	46
  3010  0258  120A  158A  2655  120A  118A  	fcall	_tx
  3011                           
  3012                           ;main.c: 104:                 }
  3013  025D  2A6A               	goto	l1761
  3014  025E                     l1757:
  3015  025E  3002               	movlw	2
  3016  025F  0642               	xorwf	print_analogvoltages@j,w
  3017  0260  1D03               	btfss	3,2
  3018  0261  2A63               	goto	u1561
  3019  0262  2A64               	goto	u1560
  3020  0263                     u1561:
  3021  0263  2A6A               	goto	l1761
  3022  0264                     u1560:
  3023  0264                     l1759:
  3024                           
  3025                           ;main.c: 106:                 {;main.c: 107:                     tx(',');
  3026  0264  302C               	movlw	44
  3027  0265  120A  158A  2655  120A  118A  	fcall	_tx
  3028  026A                     l1761:
  3029                           
  3030                           ;main.c: 109:             }
  3031  026A  3001               	movlw	1
  3032  026B  1283               	bcf	3,5	;RP0=0, select bank0
  3033  026C  1303               	bcf	3,6	;RP1=0, select bank0
  3034  026D  00BE               	movwf	??_print_analogvoltages
  3035  026E  083E               	movf	??_print_analogvoltages,w
  3036  026F  07C2               	addwf	print_analogvoltages@j,f
  3037  0270                     l1763:
  3038  0270  3003               	movlw	3
  3039  0271  0242               	subwf	print_analogvoltages@j,w
  3040  0272  1C03               	skipc
  3041  0273  2A75               	goto	u1571
  3042  0274  2A76               	goto	u1570
  3043  0275                     u1571:
  3044  0275  2A45               	goto	l1751
  3045  0276                     u1570:
  3046  0276                     l1765:
  3047                           
  3048                           ;main.c: 111:             _delay((unsigned long)((100)*(20000000/4000.0)));
  3049  0276  3003               	movlw	3
  3050  0277  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0278  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0279  00C0               	movwf	??_print_analogvoltages+2
  3053  027A  308A               	movlw	138
  3054  027B  00BF               	movwf	??_print_analogvoltages+1
  3055  027C  3055               	movlw	85
  3056  027D  00BE               	movwf	??_print_analogvoltages
  3057  027E                     u1707:
  3058  027E  0BBE               	decfsz	??_print_analogvoltages,f
  3059  027F  2A7E               	goto	u1707
  3060  0280  0BBF               	decfsz	??_print_analogvoltages+1,f
  3061  0281  2A7E               	goto	u1707
  3062  0282  0BC0               	decfsz	??_print_analogvoltages+2,f
  3063  0283  2A7E               	goto	u1707
  3064  0284                     l1767:
  3065                           
  3066                           ;main.c: 112:         }
  3067  0284  3001               	movlw	1
  3068  0285  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0286  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0287  00BE               	movwf	??_print_analogvoltages
  3071  0288  083E               	movf	??_print_analogvoltages,w
  3072  0289  07C1               	addwf	print_analogvoltages@i,f
  3073  028A                     l1769:
  3074  028A  3004               	movlw	4
  3075  028B  0241               	subwf	print_analogvoltages@i,w
  3076  028C  1C03               	skipc
  3077  028D  2A8F               	goto	u1581
  3078  028E  2A90               	goto	u1580
  3079  028F                     u1581:
  3080  028F  2A26               	goto	l1741
  3081  0290                     u1580:
  3082  0290                     l184:
  3083  0290  0008               	return
  3084  0291                     __end_of_print_analogvoltages:
  3085                           
  3086                           	psect	text13
  3087  0E55                     __ptext13:	
  3088 ;; *************** function _tx *****************
  3089 ;; Defined at:
  3090 ;;		line 14 in file "./uart.h"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  a               1    wreg     unsigned char 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  a               1    0[COMMON] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      unsigned char 
  3097 ;; Registers used:
  3098 ;;		wreg
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3104 ;;      Params:         0       0       0       0       0
  3105 ;;      Locals:         1       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0
  3107 ;;      Totals:         1       0       0       0       0
  3108 ;;Total ram usage:        1 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_tx_sn
  3114 ;;		_main
  3115 ;;		_print_serialnumber
  3116 ;;		_print_analogvoltages
  3117 ;;		_print_dht11data
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function _tx
  3123  0E55                     _tx:
  3124                           
  3125                           ;incstack = 0
  3126                           ; Regs used in _tx: [wreg]
  3127                           ;tx@a stored from wreg
  3128  0E55  00F0               	movwf	tx@a
  3129  0E56                     l1323:
  3130                           
  3131                           ;./uart.h: 14: unsigned char tx(unsigned char a);./uart.h: 15: {;./uart.h: 16:  TXREG=a;
  3132  0E56  0870               	movf	tx@a,w
  3133  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0E59  0099               	movwf	25	;volatile
  3136  0E5A                     l89:	
  3137                           ;./uart.h: 17:  while(!TXIF);
  3138                           
  3139  0E5A  1E0C               	btfss	12,4	;volatile
  3140  0E5B  2E5D               	goto	u831
  3141  0E5C  2E5E               	goto	u830
  3142  0E5D                     u831:
  3143  0E5D  2E5A               	goto	l89
  3144  0E5E                     u830:
  3145  0E5E                     l91:
  3146                           
  3147                           ;./uart.h: 18:  TXIF = 0;
  3148  0E5E  120C               	bcf	12,4	;volatile
  3149  0E5F                     l92:
  3150  0E5F  0008               	return
  3151  0E60                     __end_of_tx:
  3152                           
  3153                           	psect	text14
  3154  032E                     __ptext14:	
  3155 ;; *************** function _LCD_num *****************
  3156 ;; Defined at:
  3157 ;;		line 58 in file "./lcd4bit.h"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  val             4   14[BANK0 ] long 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  remainder       2   28[BANK0 ] unsigned int 
  3162 ;;  result1         2   26[BANK0 ] unsigned int 
  3163 ;;  result          2   24[BANK0 ] unsigned int 
  3164 ;;  digit3          2   22[BANK0 ] unsigned int 
  3165 ;;  digit2          2   20[BANK0 ] unsigned int 
  3166 ;;  digit1          2   18[BANK0 ] unsigned int 
  3167 ;;  calb_val        2    0        int 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0, pclath, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3177 ;;      Params:         0       4       0       0       0
  3178 ;;      Locals:         0      12       0       0       0
  3179 ;;      Temps:          0       0       0       0       0
  3180 ;;      Totals:         0      16       0       0       0
  3181 ;;Total ram usage:       16 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 1
  3184 ;; This function calls:
  3185 ;;		_LCD_Char
  3186 ;;		___aldiv
  3187 ;;		___lmul
  3188 ;;		___lwdiv
  3189 ;;		___lwmod
  3190 ;;		_intdigits_chardigits
  3191 ;; This function is called by:
  3192 ;;		_print_analogvoltages
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _LCD_num
  3198  032E                     _LCD_num:
  3199  032E                     l1527:	
  3200                           ;incstack = 0
  3201                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  3202                           
  3203  032E                     l1529:
  3204                           
  3205                           ;./lcd4bit.h: 61:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 62:     result1;;./lcd4bit.h: 63:     result = ((val*100)/calb_val);
  3206  032E  3000               	movlw	0
  3207  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0331  00A3               	movwf	___aldiv@divisor+3
  3210  0332  3000               	movlw	0
  3211  0333  00A2               	movwf	___aldiv@divisor+2
  3212  0334  3000               	movlw	0
  3213  0335  00A1               	movwf	___aldiv@divisor+1
  3214  0336  30C8               	movlw	200
  3215  0337  00A0               	movwf	___aldiv@divisor
  3216  0338  0831               	movf	LCD_num@val+3,w
  3217  0339  00F3               	movwf	___lmul@multiplier+3
  3218  033A  0830               	movf	LCD_num@val+2,w
  3219  033B  00F2               	movwf	___lmul@multiplier+2
  3220  033C  082F               	movf	LCD_num@val+1,w
  3221  033D  00F1               	movwf	___lmul@multiplier+1
  3222  033E  082E               	movf	LCD_num@val,w
  3223  033F  00F0               	movwf	___lmul@multiplier
  3224  0340  3000               	movlw	0
  3225  0341  00F7               	movwf	___lmul@multiplicand+3
  3226  0342  3000               	movlw	0
  3227  0343  00F6               	movwf	___lmul@multiplicand+2
  3228  0344  3000               	movlw	0
  3229  0345  00F5               	movwf	___lmul@multiplicand+1
  3230  0346  3064               	movlw	100
  3231  0347  00F4               	movwf	___lmul@multiplicand
  3232  0348  120A  118A  2062  120A  118A  	fcall	___lmul
  3233  034D  0873               	movf	?___lmul+3,w
  3234  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3235  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0350  00A7               	movwf	___aldiv@dividend+3
  3237  0351  0872               	movf	?___lmul+2,w
  3238  0352  00A6               	movwf	___aldiv@dividend+2
  3239  0353  0871               	movf	?___lmul+1,w
  3240  0354  00A5               	movwf	___aldiv@dividend+1
  3241  0355  0870               	movf	?___lmul,w
  3242  0356  00A4               	movwf	___aldiv@dividend
  3243  0357  120A  118A  2291  120A  118A  	fcall	___aldiv
  3244  035C  1283               	bcf	3,5	;RP0=0, select bank0
  3245  035D  1303               	bcf	3,6	;RP1=0, select bank0
  3246  035E  0821               	movf	?___aldiv+1,w
  3247  035F  00B9               	movwf	LCD_num@result+1
  3248  0360  0820               	movf	?___aldiv,w
  3249  0361  00B8               	movwf	LCD_num@result
  3250  0362                     l1531:
  3251                           
  3252                           ;./lcd4bit.h: 64:     remainder = result% 10;
  3253  0362  300A               	movlw	10
  3254  0363  00F0               	movwf	___lwmod@divisor
  3255  0364  3000               	movlw	0
  3256  0365  00F1               	movwf	___lwmod@divisor+1
  3257  0366  0839               	movf	LCD_num@result+1,w
  3258  0367  00F3               	movwf	___lwmod@dividend+1
  3259  0368  0838               	movf	LCD_num@result,w
  3260  0369  00F2               	movwf	___lwmod@dividend
  3261  036A  120A  158A  2704  120A  118A  	fcall	___lwmod
  3262  036F  0871               	movf	?___lwmod+1,w
  3263  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0371  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0372  00BD               	movwf	LCD_num@remainder+1
  3266  0373  0870               	movf	?___lwmod,w
  3267  0374  00BC               	movwf	LCD_num@remainder
  3268  0375                     l1533:
  3269                           
  3270                           ;./lcd4bit.h: 65:     result1 = result /10;
  3271  0375  300A               	movlw	10
  3272  0376  00F0               	movwf	___lwdiv@divisor
  3273  0377  3000               	movlw	0
  3274  0378  00F1               	movwf	___lwdiv@divisor+1
  3275  0379  0839               	movf	LCD_num@result+1,w
  3276  037A  00F3               	movwf	___lwdiv@dividend+1
  3277  037B  0838               	movf	LCD_num@result,w
  3278  037C  00F2               	movwf	___lwdiv@dividend
  3279  037D  120A  118A  201E  120A  118A  	fcall	___lwdiv
  3280  0382  0871               	movf	?___lwdiv+1,w
  3281  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3282  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3283  0385  00BB               	movwf	LCD_num@result1+1
  3284  0386  0870               	movf	?___lwdiv,w
  3285  0387  00BA               	movwf	LCD_num@result1
  3286  0388                     l1535:
  3287                           
  3288                           ;./lcd4bit.h: 66:     digit1 = remainder;
  3289  0388  083D               	movf	LCD_num@remainder+1,w
  3290  0389  00B3               	movwf	LCD_num@digit1+1
  3291  038A  083C               	movf	LCD_num@remainder,w
  3292  038B  00B2               	movwf	LCD_num@digit1
  3293                           
  3294                           ;./lcd4bit.h: 67:     remainder = result1%10;
  3295  038C  300A               	movlw	10
  3296  038D  00F0               	movwf	___lwmod@divisor
  3297  038E  3000               	movlw	0
  3298  038F  00F1               	movwf	___lwmod@divisor+1
  3299  0390  083B               	movf	LCD_num@result1+1,w
  3300  0391  00F3               	movwf	___lwmod@dividend+1
  3301  0392  083A               	movf	LCD_num@result1,w
  3302  0393  00F2               	movwf	___lwmod@dividend
  3303  0394  120A  158A  2704  120A  118A  	fcall	___lwmod
  3304  0399  0871               	movf	?___lwmod+1,w
  3305  039A  1283               	bcf	3,5	;RP0=0, select bank0
  3306  039B  1303               	bcf	3,6	;RP1=0, select bank0
  3307  039C  00BD               	movwf	LCD_num@remainder+1
  3308  039D  0870               	movf	?___lwmod,w
  3309  039E  00BC               	movwf	LCD_num@remainder
  3310  039F                     l1537:
  3311                           
  3312                           ;./lcd4bit.h: 68:     digit2 = remainder;
  3313  039F  083D               	movf	LCD_num@remainder+1,w
  3314  03A0  00B5               	movwf	LCD_num@digit2+1
  3315  03A1  083C               	movf	LCD_num@remainder,w
  3316  03A2  00B4               	movwf	LCD_num@digit2
  3317  03A3                     l1539:
  3318                           
  3319                           ;./lcd4bit.h: 69:     remainder = (result1/10);
  3320  03A3  300A               	movlw	10
  3321  03A4  00F0               	movwf	___lwdiv@divisor
  3322  03A5  3000               	movlw	0
  3323  03A6  00F1               	movwf	___lwdiv@divisor+1
  3324  03A7  083B               	movf	LCD_num@result1+1,w
  3325  03A8  00F3               	movwf	___lwdiv@dividend+1
  3326  03A9  083A               	movf	LCD_num@result1,w
  3327  03AA  00F2               	movwf	___lwdiv@dividend
  3328  03AB  120A  118A  201E  120A  118A  	fcall	___lwdiv
  3329  03B0  0871               	movf	?___lwdiv+1,w
  3330  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3331  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3332  03B3  00BD               	movwf	LCD_num@remainder+1
  3333  03B4  0870               	movf	?___lwdiv,w
  3334  03B5  00BC               	movwf	LCD_num@remainder
  3335                           
  3336                           ;./lcd4bit.h: 70:     digit3=remainder;
  3337  03B6  083D               	movf	LCD_num@remainder+1,w
  3338  03B7  00B7               	movwf	LCD_num@digit3+1
  3339  03B8  083C               	movf	LCD_num@remainder,w
  3340  03B9  00B6               	movwf	LCD_num@digit3
  3341  03BA                     l1541:
  3342                           
  3343                           ;./lcd4bit.h: 71:     LCD_Char(digit3+0x30);
  3344  03BA  0836               	movf	LCD_num@digit3,w
  3345  03BB  3E30               	addlw	48
  3346  03BC  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  3347  03C1                     l1543:
  3348                           
  3349                           ;./lcd4bit.h: 72:     LCD_Char('.');
  3350  03C1  302E               	movlw	46
  3351  03C2  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  3352  03C7                     l1545:
  3353                           
  3354                           ;./lcd4bit.h: 73:     LCD_Char(digit2+0x30);
  3355  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  3356  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  3357  03C9  0834               	movf	LCD_num@digit2,w
  3358  03CA  3E30               	addlw	48
  3359  03CB  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  3360  03D0                     l1547:
  3361                           
  3362                           ;./lcd4bit.h: 74:     LCD_Char(digit1+0x30);
  3363  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  3364  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  3365  03D2  0832               	movf	LCD_num@digit1,w
  3366  03D3  3E30               	addlw	48
  3367  03D4  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  3368  03D9                     l1549:
  3369                           
  3370                           ;./lcd4bit.h: 76:     intdigits_chardigits(digit3,digit2,digit1);
  3371  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3372  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3373  03DB  0837               	movf	LCD_num@digit3+1,w
  3374  03DC  00F1               	movwf	intdigits_chardigits@a+1
  3375  03DD  0836               	movf	LCD_num@digit3,w
  3376  03DE  00F0               	movwf	intdigits_chardigits@a
  3377  03DF  0835               	movf	LCD_num@digit2+1,w
  3378  03E0  00F3               	movwf	intdigits_chardigits@b+1
  3379  03E1  0834               	movf	LCD_num@digit2,w
  3380  03E2  00F2               	movwf	intdigits_chardigits@b
  3381  03E3  0833               	movf	LCD_num@digit1+1,w
  3382  03E4  00F5               	movwf	intdigits_chardigits@c+1
  3383  03E5  0832               	movf	LCD_num@digit1,w
  3384  03E6  00F4               	movwf	intdigits_chardigits@c
  3385  03E7  120A  158A  266D  120A  118A  	fcall	_intdigits_chardigits
  3386  03EC                     l64:
  3387  03EC  0008               	return
  3388  03ED                     __end_of_LCD_num:
  3389                           
  3390                           	psect	text15
  3391  0E6D                     __ptext15:	
  3392 ;; *************** function _intdigits_chardigits *****************
  3393 ;; Defined at:
  3394 ;;		line 86 in file "./lcd4bit.h"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  a               2    0[COMMON] unsigned int 
  3397 ;;  b               2    2[COMMON] unsigned int 
  3398 ;;  c               2    4[COMMON] unsigned int 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      unsigned char 
  3403 ;; Registers used:
  3404 ;;		wreg
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3410 ;;      Params:         6       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0
  3412 ;;      Temps:          1       0       0       0       0
  3413 ;;      Totals:         7       0       0       0       0
  3414 ;;Total ram usage:        7 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_LCD_num
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _intdigits_chardigits
  3425  0E6D                     _intdigits_chardigits:
  3426  0E6D                     l1321:	
  3427                           ;incstack = 0
  3428                           ; Regs used in _intdigits_chardigits: [wreg]
  3429                           
  3430                           
  3431                           ;./lcd4bit.h: 86: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 87: {;./lcd4bit.h: 88:     avv[0] = (unsigned char)a;
  3432  0E6D  0870               	movf	intdigits_chardigits@a,w
  3433  0E6E  00F6               	movwf	??_intdigits_chardigits
  3434  0E6F  0876               	movf	??_intdigits_chardigits,w
  3435  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0E72  00D1               	movwf	_avv
  3438                           
  3439                           ;./lcd4bit.h: 89:     avv[1] = (unsigned char)b;
  3440  0E73  0872               	movf	intdigits_chardigits@b,w
  3441  0E74  00F6               	movwf	??_intdigits_chardigits
  3442  0E75  0876               	movf	??_intdigits_chardigits,w
  3443  0E76  00D2               	movwf	_avv+1
  3444                           
  3445                           ;./lcd4bit.h: 90:     avv[2] = (unsigned char)c;
  3446  0E77  0874               	movf	intdigits_chardigits@c,w
  3447  0E78  00F6               	movwf	??_intdigits_chardigits
  3448  0E79  0876               	movf	??_intdigits_chardigits,w
  3449  0E7A  00D3               	movwf	_avv+2
  3450  0E7B                     l73:
  3451  0E7B  0008               	return
  3452  0E7C                     __end_of_intdigits_chardigits:
  3453                           
  3454                           	psect	text16
  3455  0F04                     __ptext16:	
  3456 ;; *************** function ___lwmod *****************
  3457 ;; Defined at:
  3458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  divisor         2    0[COMMON] unsigned int 
  3461 ;;  dividend        2    2[COMMON] unsigned int 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  counter         1    5[COMMON] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  2    0[COMMON] unsigned int 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3473 ;;      Params:         4       0       0       0       0
  3474 ;;      Locals:         1       0       0       0       0
  3475 ;;      Temps:          1       0       0       0       0
  3476 ;;      Totals:         6       0       0       0       0
  3477 ;;Total ram usage:        6 bytes
  3478 ;; Hardware stack levels used: 1
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_LCD_num
  3483 ;;		_show_multidigits
  3484 ;;		_tx_sn
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function ___lwmod
  3490  0F04                     ___lwmod:
  3491  0F04                     l1487:	
  3492                           ;incstack = 0
  3493                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3494                           
  3495  0F04  0870               	movf	___lwmod@divisor,w
  3496  0F05  0471               	iorwf	___lwmod@divisor+1,w
  3497  0F06  1903               	btfsc	3,2
  3498  0F07  2F09               	goto	u1251
  3499  0F08  2F0A               	goto	u1250
  3500  0F09                     u1251:
  3501  0F09  2F39               	goto	l1505
  3502  0F0A                     u1250:
  3503  0F0A                     l1489:
  3504  0F0A  01F5               	clrf	___lwmod@counter
  3505  0F0B  0AF5               	incf	___lwmod@counter,f
  3506  0F0C  2F18               	goto	l1495
  3507  0F0D                     l1491:
  3508  0F0D  3001               	movlw	1
  3509  0F0E                     u1265:
  3510  0F0E  1003               	clrc
  3511  0F0F  0DF0               	rlf	___lwmod@divisor,f
  3512  0F10  0DF1               	rlf	___lwmod@divisor+1,f
  3513  0F11  3EFF               	addlw	-1
  3514  0F12  1D03               	skipz
  3515  0F13  2F0E               	goto	u1265
  3516  0F14                     l1493:
  3517  0F14  3001               	movlw	1
  3518  0F15  00F4               	movwf	??___lwmod
  3519  0F16  0874               	movf	??___lwmod,w
  3520  0F17  07F5               	addwf	___lwmod@counter,f
  3521  0F18                     l1495:
  3522  0F18  1FF1               	btfss	___lwmod@divisor+1,7
  3523  0F19  2F1B               	goto	u1271
  3524  0F1A  2F1C               	goto	u1270
  3525  0F1B                     u1271:
  3526  0F1B  2F0D               	goto	l1491
  3527  0F1C                     u1270:
  3528  0F1C                     l1497:
  3529  0F1C  0871               	movf	___lwmod@divisor+1,w
  3530  0F1D  0273               	subwf	___lwmod@dividend+1,w
  3531  0F1E  1D03               	skipz
  3532  0F1F  2F22               	goto	u1285
  3533  0F20  0870               	movf	___lwmod@divisor,w
  3534  0F21  0272               	subwf	___lwmod@dividend,w
  3535  0F22                     u1285:
  3536  0F22  1C03               	skipc
  3537  0F23  2F25               	goto	u1281
  3538  0F24  2F26               	goto	u1280
  3539  0F25                     u1281:
  3540  0F25  2F2C               	goto	l1501
  3541  0F26                     u1280:
  3542  0F26                     l1499:
  3543  0F26  0870               	movf	___lwmod@divisor,w
  3544  0F27  02F2               	subwf	___lwmod@dividend,f
  3545  0F28  0871               	movf	___lwmod@divisor+1,w
  3546  0F29  1C03               	skipc
  3547  0F2A  03F3               	decf	___lwmod@dividend+1,f
  3548  0F2B  02F3               	subwf	___lwmod@dividend+1,f
  3549  0F2C                     l1501:
  3550  0F2C  3001               	movlw	1
  3551  0F2D                     u1295:
  3552  0F2D  1003               	clrc
  3553  0F2E  0CF1               	rrf	___lwmod@divisor+1,f
  3554  0F2F  0CF0               	rrf	___lwmod@divisor,f
  3555  0F30  3EFF               	addlw	-1
  3556  0F31  1D03               	skipz
  3557  0F32  2F2D               	goto	u1295
  3558  0F33                     l1503:
  3559  0F33  3001               	movlw	1
  3560  0F34  02F5               	subwf	___lwmod@counter,f
  3561  0F35  1D03               	btfss	3,2
  3562  0F36  2F38               	goto	u1301
  3563  0F37  2F39               	goto	u1300
  3564  0F38                     u1301:
  3565  0F38  2F1C               	goto	l1497
  3566  0F39                     u1300:
  3567  0F39                     l1505:
  3568  0F39  0873               	movf	___lwmod@dividend+1,w
  3569  0F3A  00F1               	movwf	?___lwmod+1
  3570  0F3B  0872               	movf	___lwmod@dividend,w
  3571  0F3C  00F0               	movwf	?___lwmod
  3572  0F3D                     l557:
  3573  0F3D  0008               	return
  3574  0F3E                     __end_of___lwmod:
  3575                           
  3576                           	psect	text17
  3577  001E                     __ptext17:	
  3578 ;; *************** function ___lwdiv *****************
  3579 ;; Defined at:
  3580 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  divisor         2    0[COMMON] unsigned int 
  3583 ;;  dividend        2    2[COMMON] unsigned int 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  quotient        2    5[COMMON] unsigned int 
  3586 ;;  counter         1    7[COMMON] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  2    0[COMMON] unsigned int 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         4       0       0       0       0
  3597 ;;      Locals:         3       0       0       0       0
  3598 ;;      Temps:          1       0       0       0       0
  3599 ;;      Totals:         8       0       0       0       0
  3600 ;;Total ram usage:        8 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_LCD_num
  3606 ;;		_show_multidigits
  3607 ;;		_tx_sn
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           
  3612                           ;psect for function ___lwdiv
  3613  001E                     ___lwdiv:
  3614  001E                     l1461:	
  3615                           ;incstack = 0
  3616                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3617                           
  3618  001E  01F5               	clrf	___lwdiv@quotient
  3619  001F  01F6               	clrf	___lwdiv@quotient+1
  3620  0020                     l1463:
  3621  0020  0870               	movf	___lwdiv@divisor,w
  3622  0021  0471               	iorwf	___lwdiv@divisor+1,w
  3623  0022  1903               	btfsc	3,2
  3624  0023  2825               	goto	u1181
  3625  0024  2826               	goto	u1180
  3626  0025                     u1181:
  3627  0025  285D               	goto	l1483
  3628  0026                     u1180:
  3629  0026                     l1465:
  3630  0026  01F7               	clrf	___lwdiv@counter
  3631  0027  0AF7               	incf	___lwdiv@counter,f
  3632  0028  2834               	goto	l1471
  3633  0029                     l1467:
  3634  0029  3001               	movlw	1
  3635  002A                     u1195:
  3636  002A  1003               	clrc
  3637  002B  0DF0               	rlf	___lwdiv@divisor,f
  3638  002C  0DF1               	rlf	___lwdiv@divisor+1,f
  3639  002D  3EFF               	addlw	-1
  3640  002E  1D03               	skipz
  3641  002F  282A               	goto	u1195
  3642  0030                     l1469:
  3643  0030  3001               	movlw	1
  3644  0031  00F4               	movwf	??___lwdiv
  3645  0032  0874               	movf	??___lwdiv,w
  3646  0033  07F7               	addwf	___lwdiv@counter,f
  3647  0034                     l1471:
  3648  0034  1FF1               	btfss	___lwdiv@divisor+1,7
  3649  0035  2837               	goto	u1201
  3650  0036  2838               	goto	u1200
  3651  0037                     u1201:
  3652  0037  2829               	goto	l1467
  3653  0038                     u1200:
  3654  0038                     l1473:
  3655  0038  3001               	movlw	1
  3656  0039                     u1215:
  3657  0039  1003               	clrc
  3658  003A  0DF5               	rlf	___lwdiv@quotient,f
  3659  003B  0DF6               	rlf	___lwdiv@quotient+1,f
  3660  003C  3EFF               	addlw	-1
  3661  003D  1D03               	skipz
  3662  003E  2839               	goto	u1215
  3663  003F  0871               	movf	___lwdiv@divisor+1,w
  3664  0040  0273               	subwf	___lwdiv@dividend+1,w
  3665  0041  1D03               	skipz
  3666  0042  2845               	goto	u1225
  3667  0043  0870               	movf	___lwdiv@divisor,w
  3668  0044  0272               	subwf	___lwdiv@dividend,w
  3669  0045                     u1225:
  3670  0045  1C03               	skipc
  3671  0046  2848               	goto	u1221
  3672  0047  2849               	goto	u1220
  3673  0048                     u1221:
  3674  0048  2850               	goto	l1479
  3675  0049                     u1220:
  3676  0049                     l1475:
  3677  0049  0870               	movf	___lwdiv@divisor,w
  3678  004A  02F2               	subwf	___lwdiv@dividend,f
  3679  004B  0871               	movf	___lwdiv@divisor+1,w
  3680  004C  1C03               	skipc
  3681  004D  03F3               	decf	___lwdiv@dividend+1,f
  3682  004E  02F3               	subwf	___lwdiv@dividend+1,f
  3683  004F                     l1477:
  3684  004F  1475               	bsf	___lwdiv@quotient,0
  3685  0050                     l1479:
  3686  0050  3001               	movlw	1
  3687  0051                     u1235:
  3688  0051  1003               	clrc
  3689  0052  0CF1               	rrf	___lwdiv@divisor+1,f
  3690  0053  0CF0               	rrf	___lwdiv@divisor,f
  3691  0054  3EFF               	addlw	-1
  3692  0055  1D03               	skipz
  3693  0056  2851               	goto	u1235
  3694  0057                     l1481:
  3695  0057  3001               	movlw	1
  3696  0058  02F7               	subwf	___lwdiv@counter,f
  3697  0059  1D03               	btfss	3,2
  3698  005A  285C               	goto	u1241
  3699  005B  285D               	goto	u1240
  3700  005C                     u1241:
  3701  005C  2838               	goto	l1473
  3702  005D                     u1240:
  3703  005D                     l1483:
  3704  005D  0876               	movf	___lwdiv@quotient+1,w
  3705  005E  00F1               	movwf	?___lwdiv+1
  3706  005F  0875               	movf	___lwdiv@quotient,w
  3707  0060  00F0               	movwf	?___lwdiv
  3708  0061                     l547:
  3709  0061  0008               	return
  3710  0062                     __end_of___lwdiv:
  3711                           
  3712                           	psect	text18
  3713  0062                     __ptext18:	
  3714 ;; *************** function ___lmul *****************
  3715 ;; Defined at:
  3716 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  multiplier      4    0[COMMON] unsigned long 
  3719 ;;  multiplicand    4    4[COMMON] unsigned long 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  product         4    9[COMMON] unsigned long 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  4    0[COMMON] unsigned long 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3731 ;;      Params:         8       0       0       0       0
  3732 ;;      Locals:         4       0       0       0       0
  3733 ;;      Temps:          1       0       0       0       0
  3734 ;;      Totals:        13       0       0       0       0
  3735 ;;Total ram usage:       13 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_LCD_num
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           
  3745                           ;psect for function ___lmul
  3746  0062                     ___lmul:
  3747  0062                     l1325:	
  3748                           ;incstack = 0
  3749                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3750                           
  3751  0062  3000               	movlw	0
  3752  0063  00FC               	movwf	___lmul@product+3
  3753  0064  3000               	movlw	0
  3754  0065  00FB               	movwf	___lmul@product+2
  3755  0066  3000               	movlw	0
  3756  0067  00FA               	movwf	___lmul@product+1
  3757  0068  3000               	movlw	0
  3758  0069  00F9               	movwf	___lmul@product
  3759  006A                     l1327:
  3760  006A  1C70               	btfss	___lmul@multiplier,0
  3761  006B  286D               	goto	u841
  3762  006C  286E               	goto	u840
  3763  006D                     u841:
  3764  006D  2885               	goto	l1331
  3765  006E                     u840:
  3766  006E                     l1329:
  3767  006E  0874               	movf	___lmul@multiplicand,w
  3768  006F  07F9               	addwf	___lmul@product,f
  3769  0070  0875               	movf	___lmul@multiplicand+1,w
  3770  0071  1103               	clrz
  3771  0072  1803               	skipnc
  3772  0073  3E01               	addlw	1
  3773  0074  1903               	skipnz
  3774  0075  2877               	goto	u851
  3775  0076  07FA               	addwf	___lmul@product+1,f
  3776  0077                     u851:
  3777  0077  0876               	movf	___lmul@multiplicand+2,w
  3778  0078  1103               	clrz
  3779  0079  1803               	skipnc
  3780  007A  3E01               	addlw	1
  3781  007B  1903               	skipnz
  3782  007C  287E               	goto	u852
  3783  007D  07FB               	addwf	___lmul@product+2,f
  3784  007E                     u852:
  3785  007E  0877               	movf	___lmul@multiplicand+3,w
  3786  007F  1103               	clrz
  3787  0080  1803               	skipnc
  3788  0081  3E01               	addlw	1
  3789  0082  1903               	skipnz
  3790  0083  2885               	goto	u853
  3791  0084  07FC               	addwf	___lmul@product+3,f
  3792  0085                     u853:
  3793  0085                     l1331:
  3794  0085  3001               	movlw	1
  3795  0086  00F8               	movwf	??___lmul
  3796  0087                     u865:
  3797  0087  1003               	clrc
  3798  0088  0DF4               	rlf	___lmul@multiplicand,f
  3799  0089  0DF5               	rlf	___lmul@multiplicand+1,f
  3800  008A  0DF6               	rlf	___lmul@multiplicand+2,f
  3801  008B  0DF7               	rlf	___lmul@multiplicand+3,f
  3802  008C  0BF8               	decfsz	??___lmul,f
  3803  008D  2887               	goto	u865
  3804  008E                     l1333:
  3805  008E  3001               	movlw	1
  3806  008F                     u875:
  3807  008F  1003               	clrc
  3808  0090  0CF3               	rrf	___lmul@multiplier+3,f
  3809  0091  0CF2               	rrf	___lmul@multiplier+2,f
  3810  0092  0CF1               	rrf	___lmul@multiplier+1,f
  3811  0093  0CF0               	rrf	___lmul@multiplier,f
  3812  0094  3EFF               	addlw	-1
  3813  0095  1D03               	skipz
  3814  0096  288F               	goto	u875
  3815  0097  0873               	movf	___lmul@multiplier+3,w
  3816  0098  0472               	iorwf	___lmul@multiplier+2,w
  3817  0099  0471               	iorwf	___lmul@multiplier+1,w
  3818  009A  0470               	iorwf	___lmul@multiplier,w
  3819  009B  1D03               	skipz
  3820  009C  289E               	goto	u881
  3821  009D  289F               	goto	u880
  3822  009E                     u881:
  3823  009E  286A               	goto	l1327
  3824  009F                     u880:
  3825  009F                     l1335:
  3826  009F  087C               	movf	___lmul@product+3,w
  3827  00A0  00F3               	movwf	?___lmul+3
  3828  00A1  087B               	movf	___lmul@product+2,w
  3829  00A2  00F2               	movwf	?___lmul+2
  3830  00A3  087A               	movf	___lmul@product+1,w
  3831  00A4  00F1               	movwf	?___lmul+1
  3832  00A5  0879               	movf	___lmul@product,w
  3833  00A6  00F0               	movwf	?___lmul
  3834  00A7                     l289:
  3835  00A7  0008               	return
  3836  00A8                     __end_of___lmul:
  3837                           
  3838                           	psect	text19
  3839  0291                     __ptext19:	
  3840 ;; *************** function ___aldiv *****************
  3841 ;; Defined at:
  3842 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  divisor         4    0[BANK0 ] long 
  3845 ;;  dividend        4    4[BANK0 ] long 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  quotient        4   10[BANK0 ] long 
  3848 ;;  sign            1    9[BANK0 ] unsigned char 
  3849 ;;  counter         1    8[BANK0 ] unsigned char 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  4    0[BANK0 ] long 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3859 ;;      Params:         0       8       0       0       0
  3860 ;;      Locals:         0       6       0       0       0
  3861 ;;      Temps:          1       0       0       0       0
  3862 ;;      Totals:         1      14       0       0       0
  3863 ;;Total ram usage:       15 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_LCD_num
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           
  3873                           ;psect for function ___aldiv
  3874  0291                     ___aldiv:
  3875  0291                     l1339:	
  3876                           ;incstack = 0
  3877                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3878                           
  3879  0291  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0292  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0293  01A9               	clrf	___aldiv@sign
  3882  0294                     l1341:
  3883  0294  1FA3               	btfss	___aldiv@divisor+3,7
  3884  0295  2A97               	goto	u891
  3885  0296  2A98               	goto	u890
  3886  0297                     u891:
  3887  0297  2AA5               	goto	l340
  3888  0298                     u890:
  3889  0298                     l1343:
  3890  0298  09A0               	comf	___aldiv@divisor,f
  3891  0299  09A1               	comf	___aldiv@divisor+1,f
  3892  029A  09A2               	comf	___aldiv@divisor+2,f
  3893  029B  09A3               	comf	___aldiv@divisor+3,f
  3894  029C  0AA0               	incf	___aldiv@divisor,f
  3895  029D  1903               	skipnz
  3896  029E  0AA1               	incf	___aldiv@divisor+1,f
  3897  029F  1903               	skipnz
  3898  02A0  0AA2               	incf	___aldiv@divisor+2,f
  3899  02A1  1903               	skipnz
  3900  02A2  0AA3               	incf	___aldiv@divisor+3,f
  3901  02A3  01A9               	clrf	___aldiv@sign
  3902  02A4  0AA9               	incf	___aldiv@sign,f
  3903  02A5                     l340:
  3904  02A5  1FA7               	btfss	___aldiv@dividend+3,7
  3905  02A6  2AA8               	goto	u901
  3906  02A7  2AA9               	goto	u900
  3907  02A8                     u901:
  3908  02A8  2AB8               	goto	l1349
  3909  02A9                     u900:
  3910  02A9                     l1345:
  3911  02A9  09A4               	comf	___aldiv@dividend,f
  3912  02AA  09A5               	comf	___aldiv@dividend+1,f
  3913  02AB  09A6               	comf	___aldiv@dividend+2,f
  3914  02AC  09A7               	comf	___aldiv@dividend+3,f
  3915  02AD  0AA4               	incf	___aldiv@dividend,f
  3916  02AE  1903               	skipnz
  3917  02AF  0AA5               	incf	___aldiv@dividend+1,f
  3918  02B0  1903               	skipnz
  3919  02B1  0AA6               	incf	___aldiv@dividend+2,f
  3920  02B2  1903               	skipnz
  3921  02B3  0AA7               	incf	___aldiv@dividend+3,f
  3922  02B4                     l1347:
  3923  02B4  3001               	movlw	1
  3924  02B5  00FD               	movwf	??___aldiv
  3925  02B6  087D               	movf	??___aldiv,w
  3926  02B7  06A9               	xorwf	___aldiv@sign,f
  3927  02B8                     l1349:
  3928  02B8  3000               	movlw	0
  3929  02B9  00AD               	movwf	___aldiv@quotient+3
  3930  02BA  3000               	movlw	0
  3931  02BB  00AC               	movwf	___aldiv@quotient+2
  3932  02BC  3000               	movlw	0
  3933  02BD  00AB               	movwf	___aldiv@quotient+1
  3934  02BE  3000               	movlw	0
  3935  02BF  00AA               	movwf	___aldiv@quotient
  3936  02C0                     l1351:
  3937  02C0  0823               	movf	___aldiv@divisor+3,w
  3938  02C1  0422               	iorwf	___aldiv@divisor+2,w
  3939  02C2  0421               	iorwf	___aldiv@divisor+1,w
  3940  02C3  0420               	iorwf	___aldiv@divisor,w
  3941  02C4  1903               	skipnz
  3942  02C5  2AC7               	goto	u911
  3943  02C6  2AC8               	goto	u910
  3944  02C7                     u911:
  3945  02C7  2B15               	goto	l1371
  3946  02C8                     u910:
  3947  02C8                     l1353:
  3948  02C8  01A8               	clrf	___aldiv@counter
  3949  02C9  0AA8               	incf	___aldiv@counter,f
  3950  02CA  2AD8               	goto	l1357
  3951  02CB                     l1355:
  3952  02CB  3001               	movlw	1
  3953  02CC  00FD               	movwf	??___aldiv
  3954  02CD                     u925:
  3955  02CD  1003               	clrc
  3956  02CE  0DA0               	rlf	___aldiv@divisor,f
  3957  02CF  0DA1               	rlf	___aldiv@divisor+1,f
  3958  02D0  0DA2               	rlf	___aldiv@divisor+2,f
  3959  02D1  0DA3               	rlf	___aldiv@divisor+3,f
  3960  02D2  0BFD               	decfsz	??___aldiv,f
  3961  02D3  2ACD               	goto	u925
  3962  02D4  3001               	movlw	1
  3963  02D5  00FD               	movwf	??___aldiv
  3964  02D6  087D               	movf	??___aldiv,w
  3965  02D7  07A8               	addwf	___aldiv@counter,f
  3966  02D8                     l1357:
  3967  02D8  1FA3               	btfss	___aldiv@divisor+3,7
  3968  02D9  2ADB               	goto	u931
  3969  02DA  2ADC               	goto	u930
  3970  02DB                     u931:
  3971  02DB  2ACB               	goto	l1355
  3972  02DC                     u930:
  3973  02DC                     l1359:
  3974  02DC  3001               	movlw	1
  3975  02DD  00FD               	movwf	??___aldiv
  3976  02DE                     u945:
  3977  02DE  1003               	clrc
  3978  02DF  0DAA               	rlf	___aldiv@quotient,f
  3979  02E0  0DAB               	rlf	___aldiv@quotient+1,f
  3980  02E1  0DAC               	rlf	___aldiv@quotient+2,f
  3981  02E2  0DAD               	rlf	___aldiv@quotient+3,f
  3982  02E3  0BFD               	decfsz	??___aldiv,f
  3983  02E4  2ADE               	goto	u945
  3984  02E5                     l1361:
  3985  02E5  0823               	movf	___aldiv@divisor+3,w
  3986  02E6  0227               	subwf	___aldiv@dividend+3,w
  3987  02E7  1D03               	skipz
  3988  02E8  2AF3               	goto	u955
  3989  02E9  0822               	movf	___aldiv@divisor+2,w
  3990  02EA  0226               	subwf	___aldiv@dividend+2,w
  3991  02EB  1D03               	skipz
  3992  02EC  2AF3               	goto	u955
  3993  02ED  0821               	movf	___aldiv@divisor+1,w
  3994  02EE  0225               	subwf	___aldiv@dividend+1,w
  3995  02EF  1D03               	skipz
  3996  02F0  2AF3               	goto	u955
  3997  02F1  0820               	movf	___aldiv@divisor,w
  3998  02F2  0224               	subwf	___aldiv@dividend,w
  3999  02F3                     u955:
  4000  02F3  1C03               	skipc
  4001  02F4  2AF6               	goto	u951
  4002  02F5  2AF7               	goto	u950
  4003  02F6                     u951:
  4004  02F6  2B06               	goto	l1367
  4005  02F7                     u950:
  4006  02F7                     l1363:
  4007  02F7  0820               	movf	___aldiv@divisor,w
  4008  02F8  02A4               	subwf	___aldiv@dividend,f
  4009  02F9  0821               	movf	___aldiv@divisor+1,w
  4010  02FA  1C03               	skipc
  4011  02FB  0F21               	incfsz	___aldiv@divisor+1,w
  4012  02FC  02A5               	subwf	___aldiv@dividend+1,f
  4013  02FD  0822               	movf	___aldiv@divisor+2,w
  4014  02FE  1C03               	skipc
  4015  02FF  0F22               	incfsz	___aldiv@divisor+2,w
  4016  0300  02A6               	subwf	___aldiv@dividend+2,f
  4017  0301  0823               	movf	___aldiv@divisor+3,w
  4018  0302  1C03               	skipc
  4019  0303  0F23               	incfsz	___aldiv@divisor+3,w
  4020  0304  02A7               	subwf	___aldiv@dividend+3,f
  4021  0305                     l1365:
  4022  0305  142A               	bsf	___aldiv@quotient,0
  4023  0306                     l1367:
  4024  0306  3001               	movlw	1
  4025  0307                     u965:
  4026  0307  1003               	clrc
  4027  0308  0CA3               	rrf	___aldiv@divisor+3,f
  4028  0309  0CA2               	rrf	___aldiv@divisor+2,f
  4029  030A  0CA1               	rrf	___aldiv@divisor+1,f
  4030  030B  0CA0               	rrf	___aldiv@divisor,f
  4031  030C  3EFF               	addlw	-1
  4032  030D  1D03               	skipz
  4033  030E  2B07               	goto	u965
  4034  030F                     l1369:
  4035  030F  3001               	movlw	1
  4036  0310  02A8               	subwf	___aldiv@counter,f
  4037  0311  1D03               	btfss	3,2
  4038  0312  2B14               	goto	u971
  4039  0313  2B15               	goto	u970
  4040  0314                     u971:
  4041  0314  2ADC               	goto	l1359
  4042  0315                     u970:
  4043  0315                     l1371:
  4044  0315  0829               	movf	___aldiv@sign,w
  4045  0316  1903               	btfsc	3,2
  4046  0317  2B19               	goto	u981
  4047  0318  2B1A               	goto	u980
  4048  0319                     u981:
  4049  0319  2B25               	goto	l1375
  4050  031A                     u980:
  4051  031A                     l1373:
  4052  031A  09AA               	comf	___aldiv@quotient,f
  4053  031B  09AB               	comf	___aldiv@quotient+1,f
  4054  031C  09AC               	comf	___aldiv@quotient+2,f
  4055  031D  09AD               	comf	___aldiv@quotient+3,f
  4056  031E  0AAA               	incf	___aldiv@quotient,f
  4057  031F  1903               	skipnz
  4058  0320  0AAB               	incf	___aldiv@quotient+1,f
  4059  0321  1903               	skipnz
  4060  0322  0AAC               	incf	___aldiv@quotient+2,f
  4061  0323  1903               	skipnz
  4062  0324  0AAD               	incf	___aldiv@quotient+3,f
  4063  0325                     l1375:
  4064  0325  082D               	movf	___aldiv@quotient+3,w
  4065  0326  00A3               	movwf	?___aldiv+3
  4066  0327  082C               	movf	___aldiv@quotient+2,w
  4067  0328  00A2               	movwf	?___aldiv+2
  4068  0329  082B               	movf	___aldiv@quotient+1,w
  4069  032A  00A1               	movwf	?___aldiv+1
  4070  032B  082A               	movf	___aldiv@quotient,w
  4071  032C  00A0               	movwf	?___aldiv
  4072  032D                     l350:
  4073  032D  0008               	return
  4074  032E                     __end_of___aldiv:
  4075                           
  4076                           	psect	text20
  4077  0F7E                     __ptext20:	
  4078 ;; *************** function _LCD_Char *****************
  4079 ;; Defined at:
  4080 ;;		line 27 in file "./lcd4bit.h"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  data            1    wreg     unsigned char 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  data            1    2[COMMON] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4094 ;;      Params:         0       0       0       0       0
  4095 ;;      Locals:         1       0       0       0       0
  4096 ;;      Temps:          2       0       0       0       0
  4097 ;;      Totals:         3       0       0       0       0
  4098 ;;Total ram usage:        3 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_LCD_num
  4104 ;;		_show
  4105 ;;		_show_multidigits
  4106 ;;		_print_analogvoltages
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function _LCD_Char
  4112  0F7E                     _LCD_Char:
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  4116                           ;LCD_Char@data stored from wreg
  4117  0F7E  00F2               	movwf	LCD_Char@data
  4118  0F7F                     l1303:
  4119                           
  4120                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  4121  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  4122  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  4123  0F81  1407               	bsf	7,0	;volatile
  4124  0F82                     l1305:
  4125                           
  4126                           ;./lcd4bit.h: 30:     PORTB = data;
  4127  0F82  0872               	movf	LCD_Char@data,w
  4128  0F83  0086               	movwf	6	;volatile
  4129  0F84                     l1307:
  4130                           
  4131                           ;./lcd4bit.h: 31:     RC1 = 1;
  4132  0F84  1487               	bsf	7,1	;volatile
  4133                           
  4134                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4135  0F85  3041               	movlw	65
  4136  0F86  00F1               	movwf	??_LCD_Char+1
  4137  0F87  30EE               	movlw	238
  4138  0F88  00F0               	movwf	??_LCD_Char
  4139  0F89                     u1717:
  4140  0F89  0BF0               	decfsz	??_LCD_Char,f
  4141  0F8A  2F89               	goto	u1717
  4142  0F8B  0BF1               	decfsz	??_LCD_Char+1,f
  4143  0F8C  2F89               	goto	u1717
  4144  0F8D  0000               	nop
  4145  0F8E                     l1309:
  4146                           
  4147                           ;./lcd4bit.h: 33:     RC1 = 0;
  4148  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0F90  1087               	bcf	7,1	;volatile
  4151                           
  4152                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4153  0F91  3041               	movlw	65
  4154  0F92  00F1               	movwf	??_LCD_Char+1
  4155  0F93  30EE               	movlw	238
  4156  0F94  00F0               	movwf	??_LCD_Char
  4157  0F95                     u1727:
  4158  0F95  0BF0               	decfsz	??_LCD_Char,f
  4159  0F96  2F95               	goto	u1727
  4160  0F97  0BF1               	decfsz	??_LCD_Char+1,f
  4161  0F98  2F95               	goto	u1727
  4162  0F99  0000               	nop
  4163  0F9A                     l1311:
  4164                           
  4165                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  4166  0F9A  0872               	movf	LCD_Char@data,w
  4167  0F9B  00F0               	movwf	??_LCD_Char
  4168  0F9C  3003               	movlw	3
  4169  0F9D                     u825:
  4170  0F9D  1003               	clrc
  4171  0F9E  0DF0               	rlf	??_LCD_Char,f
  4172  0F9F  3EFF               	addlw	-1
  4173  0FA0  1D03               	skipz
  4174  0FA1  2F9D               	goto	u825
  4175  0FA2  1003               	clrc
  4176  0FA3  0D70               	rlf	??_LCD_Char,w
  4177  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  4179  0FA6  0086               	movwf	6	;volatile
  4180  0FA7                     l1313:
  4181                           
  4182                           ;./lcd4bit.h: 36:     RC1 = 1;
  4183  0FA7  1487               	bsf	7,1	;volatile
  4184  0FA8                     l1315:
  4185                           
  4186                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4187  0FA8  3041               	movlw	65
  4188  0FA9  00F1               	movwf	??_LCD_Char+1
  4189  0FAA  30EE               	movlw	238
  4190  0FAB  00F0               	movwf	??_LCD_Char
  4191  0FAC                     u1737:
  4192  0FAC  0BF0               	decfsz	??_LCD_Char,f
  4193  0FAD  2FAC               	goto	u1737
  4194  0FAE  0BF1               	decfsz	??_LCD_Char+1,f
  4195  0FAF  2FAC               	goto	u1737
  4196  0FB0  0000               	nop
  4197  0FB1                     l1317:
  4198                           
  4199                           ;./lcd4bit.h: 38:     RC1 = 0;
  4200  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0FB3  1087               	bcf	7,1	;volatile
  4203  0FB4                     l1319:
  4204                           
  4205                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4206  0FB4  3041               	movlw	65
  4207  0FB5  00F1               	movwf	??_LCD_Char+1
  4208  0FB6  30EE               	movlw	238
  4209  0FB7  00F0               	movwf	??_LCD_Char
  4210  0FB8                     u1747:
  4211  0FB8  0BF0               	decfsz	??_LCD_Char,f
  4212  0FB9  2FB8               	goto	u1747
  4213  0FBA  0BF1               	decfsz	??_LCD_Char+1,f
  4214  0FBB  2FB8               	goto	u1747
  4215  0FBC  0000               	nop
  4216  0FBD                     l58:
  4217  0FBD  0008               	return
  4218  0FBE                     __end_of_LCD_Char:
  4219                           
  4220                           	psect	text21
  4221  0ECE                     __ptext21:	
  4222 ;; *************** function _LCD_init *****************
  4223 ;; Defined at:
  4224 ;;		line 41 in file "./lcd4bit.h"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;		None
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, status,0, pclath, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4238 ;;      Params:         0       0       0       0       0
  4239 ;;      Locals:         0       0       0       0       0
  4240 ;;      Temps:          2       0       0       0       0
  4241 ;;      Totals:         2       0       0       0       0
  4242 ;;Total ram usage:        2 bytes
  4243 ;; Hardware stack levels used: 1
  4244 ;; Hardware stack levels required when called: 1
  4245 ;; This function calls:
  4246 ;;		_LCD_Command
  4247 ;; This function is called by:
  4248 ;;		_main
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _LCD_init
  4254  0ECE                     _LCD_init:
  4255  0ECE                     l1723:	
  4256                           ;incstack = 0
  4257                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  4258                           
  4259                           
  4260                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  4261  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  4262  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  4263  0ED0  1386               	bcf	6,7	;volatile
  4264                           
  4265                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  4266  0ED1  1306               	bcf	6,6	;volatile
  4267                           
  4268                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  4269  0ED2  1286               	bcf	6,5	;volatile
  4270                           
  4271                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  4272  0ED3  1206               	bcf	6,4	;volatile
  4273                           
  4274                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  4275  0ED4  1007               	bcf	7,0	;volatile
  4276                           
  4277                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  4278  0ED5  1087               	bcf	7,1	;volatile
  4279  0ED6                     l1725:
  4280                           
  4281                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  4282  0ED6  3002               	movlw	2
  4283  0ED7  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4284                           
  4285                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  4286  0EDC  3028               	movlw	40
  4287  0EDD  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4288                           
  4289                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  4290  0EE2  3080               	movlw	128
  4291  0EE3  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4292                           
  4293                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  4294  0EE8  300C               	movlw	12
  4295  0EE9  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4296                           
  4297                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  4298  0EEE  3006               	movlw	6
  4299  0EEF  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4300                           
  4301                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  4302  0EF4  3001               	movlw	1
  4303  0EF5  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4304  0EFA                     l1727:
  4305                           
  4306                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4307  0EFA  3041               	movlw	65
  4308  0EFB  00F4               	movwf	??_LCD_init+1
  4309  0EFC  30EE               	movlw	238
  4310  0EFD  00F3               	movwf	??_LCD_init
  4311  0EFE                     u1757:
  4312  0EFE  0BF3               	decfsz	??_LCD_init,f
  4313  0EFF  2EFE               	goto	u1757
  4314  0F00  0BF4               	decfsz	??_LCD_init+1,f
  4315  0F01  2EFE               	goto	u1757
  4316  0F02  0000               	nop
  4317  0F03                     l61:
  4318  0F03  0008               	return
  4319  0F04                     __end_of_LCD_init:
  4320                           
  4321                           	psect	text22
  4322  0F3E                     __ptext22:	
  4323 ;; *************** function _LCD_Command *****************
  4324 ;; Defined at:
  4325 ;;		line 13 in file "./lcd4bit.h"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  cmnd            1    wreg     unsigned char 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  cmnd            1    2[COMMON] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4339 ;;      Params:         0       0       0       0       0
  4340 ;;      Locals:         1       0       0       0       0
  4341 ;;      Temps:          2       0       0       0       0
  4342 ;;      Totals:         3       0       0       0       0
  4343 ;;Total ram usage:        3 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_LCD_init
  4349 ;;		_main
  4350 ;;		_print_dht11data
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           
  4355                           ;psect for function _LCD_Command
  4356  0F3E                     _LCD_Command:
  4357                           
  4358                           ;incstack = 0
  4359                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  4360                           ;LCD_Command@cmnd stored from wreg
  4361  0F3E  00F2               	movwf	LCD_Command@cmnd
  4362  0F3F                     l1509:
  4363                           
  4364                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  4365  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  4366  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  4367  0F41  1007               	bcf	7,0	;volatile
  4368  0F42                     l1511:
  4369                           
  4370                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  4371  0F42  0872               	movf	LCD_Command@cmnd,w
  4372  0F43  0086               	movwf	6	;volatile
  4373  0F44                     l1513:
  4374                           
  4375                           ;./lcd4bit.h: 17:     RC1 = 1;
  4376  0F44  1487               	bsf	7,1	;volatile
  4377                           
  4378                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4379  0F45  3041               	movlw	65
  4380  0F46  00F1               	movwf	??_LCD_Command+1
  4381  0F47  30EE               	movlw	238
  4382  0F48  00F0               	movwf	??_LCD_Command
  4383  0F49                     u1767:
  4384  0F49  0BF0               	decfsz	??_LCD_Command,f
  4385  0F4A  2F49               	goto	u1767
  4386  0F4B  0BF1               	decfsz	??_LCD_Command+1,f
  4387  0F4C  2F49               	goto	u1767
  4388  0F4D  0000               	nop
  4389  0F4E                     l1515:
  4390                           
  4391                           ;./lcd4bit.h: 19:     RC1 = 0;
  4392  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  4393  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  4394  0F50  1087               	bcf	7,1	;volatile
  4395                           
  4396                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4397  0F51  3041               	movlw	65
  4398  0F52  00F1               	movwf	??_LCD_Command+1
  4399  0F53  30EE               	movlw	238
  4400  0F54  00F0               	movwf	??_LCD_Command
  4401  0F55                     u1777:
  4402  0F55  0BF0               	decfsz	??_LCD_Command,f
  4403  0F56  2F55               	goto	u1777
  4404  0F57  0BF1               	decfsz	??_LCD_Command+1,f
  4405  0F58  2F55               	goto	u1777
  4406  0F59  0000               	nop
  4407  0F5A                     l1517:
  4408                           
  4409                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  4410  0F5A  0872               	movf	LCD_Command@cmnd,w
  4411  0F5B  00F0               	movwf	??_LCD_Command
  4412  0F5C  3003               	movlw	3
  4413  0F5D                     u1315:
  4414  0F5D  1003               	clrc
  4415  0F5E  0DF0               	rlf	??_LCD_Command,f
  4416  0F5F  3EFF               	addlw	-1
  4417  0F60  1D03               	skipz
  4418  0F61  2F5D               	goto	u1315
  4419  0F62  1003               	clrc
  4420  0F63  0D70               	rlf	??_LCD_Command,w
  4421  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0F66  0086               	movwf	6	;volatile
  4424  0F67                     l1519:
  4425                           
  4426                           ;./lcd4bit.h: 22:     RC1 = 1;
  4427  0F67  1487               	bsf	7,1	;volatile
  4428  0F68                     l1521:
  4429                           
  4430                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4431  0F68  3041               	movlw	65
  4432  0F69  00F1               	movwf	??_LCD_Command+1
  4433  0F6A  30EE               	movlw	238
  4434  0F6B  00F0               	movwf	??_LCD_Command
  4435  0F6C                     u1787:
  4436  0F6C  0BF0               	decfsz	??_LCD_Command,f
  4437  0F6D  2F6C               	goto	u1787
  4438  0F6E  0BF1               	decfsz	??_LCD_Command+1,f
  4439  0F6F  2F6C               	goto	u1787
  4440  0F70  0000               	nop
  4441  0F71                     l1523:
  4442                           
  4443                           ;./lcd4bit.h: 24:     RC1 = 0;
  4444  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  4445  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  4446  0F73  1087               	bcf	7,1	;volatile
  4447  0F74                     l1525:
  4448                           
  4449                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4450  0F74  3041               	movlw	65
  4451  0F75  00F1               	movwf	??_LCD_Command+1
  4452  0F76  30EE               	movlw	238
  4453  0F77  00F0               	movwf	??_LCD_Command
  4454  0F78                     u1797:
  4455  0F78  0BF0               	decfsz	??_LCD_Command,f
  4456  0F79  2F78               	goto	u1797
  4457  0F7A  0BF1               	decfsz	??_LCD_Command+1,f
  4458  0F7B  2F78               	goto	u1797
  4459  0F7C  0000               	nop
  4460  0F7D                     l55:
  4461  0F7D  0008               	return
  4462  0F7E                     __end_of_LCD_Command:
  4463                           
  4464                           	psect	text23
  4465  0158                     __ptext23:	
  4466 ;; *************** function _ADC_Init *****************
  4467 ;; Defined at:
  4468 ;;		line 63 in file "main.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;		None
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;		None
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      void 
  4475 ;; Registers used:
  4476 ;;		wreg
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4482 ;;      Params:         0       0       0       0       0
  4483 ;;      Locals:         0       0       0       0       0
  4484 ;;      Temps:          2       0       0       0       0
  4485 ;;      Totals:         2       0       0       0       0
  4486 ;;Total ram usage:        2 bytes
  4487 ;; Hardware stack levels used: 1
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_main
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function _ADC_Init
  4497  0158                     _ADC_Init:
  4498  0158                     l1731:	
  4499                           ;incstack = 0
  4500                           ; Regs used in _ADC_Init: [wreg]
  4501                           
  4502                           
  4503                           ;main.c: 65:     ADCON0 = 0x85;
  4504  0158  3085               	movlw	133
  4505  0159  1283               	bcf	3,5	;RP0=0, select bank0
  4506  015A  1303               	bcf	3,6	;RP1=0, select bank0
  4507  015B  009F               	movwf	31	;volatile
  4508                           
  4509                           ;main.c: 66:     ADCON1 = 0xC0;
  4510  015C  30C0               	movlw	192
  4511  015D  1683               	bsf	3,5	;RP0=1, select bank1
  4512  015E  1303               	bcf	3,6	;RP1=0, select bank1
  4513  015F  009F               	movwf	31	;volatile
  4514                           
  4515                           ;main.c: 67:     AV[0]= ((ADRESH<<8)+ADRESL);
  4516  0160  1283               	bcf	3,5	;RP0=0, select bank0
  4517  0161  1303               	bcf	3,6	;RP1=0, select bank0
  4518  0162  081E               	movf	30,w	;volatile
  4519  0163  00C7               	movwf	_AV+1
  4520  0164  1683               	bsf	3,5	;RP0=1, select bank1
  4521  0165  1303               	bcf	3,6	;RP1=0, select bank1
  4522  0166  081E               	movf	30,w	;volatile
  4523  0167  1283               	bcf	3,5	;RP0=0, select bank0
  4524  0168  1303               	bcf	3,6	;RP1=0, select bank0
  4525  0169  00C6               	movwf	_AV
  4526                           
  4527                           ;main.c: 69:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4528  016A  3041               	movlw	65
  4529  016B  00F1               	movwf	??_ADC_Init+1
  4530  016C  30EE               	movlw	238
  4531  016D  00F0               	movwf	??_ADC_Init
  4532  016E                     u1807:
  4533  016E  0BF0               	decfsz	??_ADC_Init,f
  4534  016F  296E               	goto	u1807
  4535  0170  0BF1               	decfsz	??_ADC_Init+1,f
  4536  0171  296E               	goto	u1807
  4537  0172  0000               	nop
  4538                           
  4539                           ;main.c: 70:     ADCON0 = 0x8D;
  4540  0173  308D               	movlw	141
  4541  0174  1283               	bcf	3,5	;RP0=0, select bank0
  4542  0175  1303               	bcf	3,6	;RP1=0, select bank0
  4543  0176  009F               	movwf	31	;volatile
  4544                           
  4545                           ;main.c: 71:     ADCON1 = 0xC0;
  4546  0177  30C0               	movlw	192
  4547  0178  1683               	bsf	3,5	;RP0=1, select bank1
  4548  0179  1303               	bcf	3,6	;RP1=0, select bank1
  4549  017A  009F               	movwf	31	;volatile
  4550                           
  4551                           ;main.c: 72:     AV[1]= ((ADRESH<<8)+ADRESL);
  4552  017B  1283               	bcf	3,5	;RP0=0, select bank0
  4553  017C  1303               	bcf	3,6	;RP1=0, select bank0
  4554  017D  081E               	movf	30,w	;volatile
  4555  017E  00C9               	movwf	_AV+3
  4556  017F  1683               	bsf	3,5	;RP0=1, select bank1
  4557  0180  1303               	bcf	3,6	;RP1=0, select bank1
  4558  0181  081E               	movf	30,w	;volatile
  4559  0182  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0183  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0184  00C8               	movwf	_AV+2
  4562                           
  4563                           ;main.c: 74:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4564  0185  3041               	movlw	65
  4565  0186  00F1               	movwf	??_ADC_Init+1
  4566  0187  30EE               	movlw	238
  4567  0188  00F0               	movwf	??_ADC_Init
  4568  0189                     u1817:
  4569  0189  0BF0               	decfsz	??_ADC_Init,f
  4570  018A  2989               	goto	u1817
  4571  018B  0BF1               	decfsz	??_ADC_Init+1,f
  4572  018C  2989               	goto	u1817
  4573  018D  0000               	nop
  4574                           
  4575                           ;main.c: 75:     ADCON0 = 0x95;
  4576  018E  3095               	movlw	149
  4577  018F  1283               	bcf	3,5	;RP0=0, select bank0
  4578  0190  1303               	bcf	3,6	;RP1=0, select bank0
  4579  0191  009F               	movwf	31	;volatile
  4580                           
  4581                           ;main.c: 76:     ADCON1 = 0xC0;
  4582  0192  30C0               	movlw	192
  4583  0193  1683               	bsf	3,5	;RP0=1, select bank1
  4584  0194  1303               	bcf	3,6	;RP1=0, select bank1
  4585  0195  009F               	movwf	31	;volatile
  4586                           
  4587                           ;main.c: 77:     AV[2]= ((ADRESH<<8)+ADRESL);
  4588  0196  1283               	bcf	3,5	;RP0=0, select bank0
  4589  0197  1303               	bcf	3,6	;RP1=0, select bank0
  4590  0198  081E               	movf	30,w	;volatile
  4591  0199  00CB               	movwf	_AV+5
  4592  019A  1683               	bsf	3,5	;RP0=1, select bank1
  4593  019B  1303               	bcf	3,6	;RP1=0, select bank1
  4594  019C  081E               	movf	30,w	;volatile
  4595  019D  1283               	bcf	3,5	;RP0=0, select bank0
  4596  019E  1303               	bcf	3,6	;RP1=0, select bank0
  4597  019F  00CA               	movwf	_AV+4
  4598                           
  4599                           ;main.c: 79:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4600  01A0  3041               	movlw	65
  4601  01A1  00F1               	movwf	??_ADC_Init+1
  4602  01A2  30EE               	movlw	238
  4603  01A3  00F0               	movwf	??_ADC_Init
  4604  01A4                     u1827:
  4605  01A4  0BF0               	decfsz	??_ADC_Init,f
  4606  01A5  29A4               	goto	u1827
  4607  01A6  0BF1               	decfsz	??_ADC_Init+1,f
  4608  01A7  29A4               	goto	u1827
  4609  01A8  0000               	nop
  4610                           
  4611                           ;main.c: 80:     ADCON0 = 0x9D;
  4612  01A9  309D               	movlw	157
  4613  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  4614  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  4615  01AC  009F               	movwf	31	;volatile
  4616                           
  4617                           ;main.c: 81:     ADCON1 = 0xC0;
  4618  01AD  30C0               	movlw	192
  4619  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  4620  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  4621  01B0  009F               	movwf	31	;volatile
  4622                           
  4623                           ;main.c: 82:     AV[3]= ((ADRESH<<8)+ADRESL);
  4624  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  4625  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  4626  01B3  081E               	movf	30,w	;volatile
  4627  01B4  00CD               	movwf	_AV+7
  4628  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  4629  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  4630  01B7  081E               	movf	30,w	;volatile
  4631  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4632  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4633  01BA  00CC               	movwf	_AV+6
  4634  01BB                     l171:
  4635  01BB  0008               	return
  4636  01BC                     __end_of_ADC_Init:
  4637  007E                     btemp	set	126	;btemp
  4638  007E                     wtemp0	set	126
  4639                           
  4640                           	psect	idloc
  4641                           
  4642                           ;Config register IDLOC0 @ 0x2000
  4643                           ;	unspecified, using default values
  4644  2000                     	org	8192
  4645  2000  3FFF               	dw	16383
  4646                           
  4647                           ;Config register IDLOC1 @ 0x2001
  4648                           ;	unspecified, using default values
  4649  2001                     	org	8193
  4650  2001  3FFF               	dw	16383
  4651                           
  4652                           ;Config register IDLOC2 @ 0x2002
  4653                           ;	unspecified, using default values
  4654  2002                     	org	8194
  4655  2002  3FFF               	dw	16383
  4656                           
  4657                           ;Config register IDLOC3 @ 0x2003
  4658                           ;	unspecified, using default values
  4659  2003                     	org	8195
  4660  2003  3FFF               	dw	16383
  4661                           
  4662                           	psect	config
  4663                           
  4664                           ;Config register CONFIG @ 0x2007
  4665                           ;	Oscillator Selection bits
  4666                           ;	FOSC = HS, HS oscillator
  4667                           ;	Watchdog Timer Enable bit
  4668                           ;	WDTE = OFF, WDT disabled
  4669                           ;	Power-up Timer Enable bit
  4670                           ;	PWRTE = OFF, PWRT disabled
  4671                           ;	Brown-out Reset Enable bit
  4672                           ;	BOREN = ON, BOR enabled
  4673                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4674                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4675                           ;	Data EEPROM Memory Code Protection bit
  4676                           ;	CPD = OFF, Data EEPROM code protection off
  4677                           ;	Flash Program Memory Write Enable bits
  4678                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4679                           ;	In-Circuit Debugger Mode bit
  4680                           ;	DEBUG = 0x1, unprogrammed default
  4681                           ;	Flash Program Memory Code Protection bit
  4682                           ;	CP = OFF, Code protection off
  4683  2007                     	org	8199
  4684  2007  3FFA               	dw	16378

Data Sizes:
    Strings     12
    Constant    0
    Data        2
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      70
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _print_serialnumber->_tx_sn
    _print_dht11data->_show_multidigits
    _print_dht11data->_tx_sn
    _tx_sn->___awdiv
    _show_multidigits->___awdiv
    _show->_LCD_Char
    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_print_analogvoltages
    _print_serialnumber->_tx_sn
    _print_dht11data->_show_multidigits
    _print_dht11data->_tx_sn
    _print_analogvoltages->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   23494
                                             35 BANK0      3     3      0
                           _ADC_Init
                        _LCD_Command
                           _LCD_init
               _print_analogvoltages
                    _print_dht11data
                 _print_serialnumber
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_serialnumber                                   0     0      0    6233
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (1) _print_dht11data                                      8     8      0   12703
                                             14 BANK0      8     8      0
                      _CheckResponse
                        _LCD_Command
                           _ReadData
                        _StartSignal
                               _show
                   _show_multidigits
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (2) _tx_sn                                               16    14      2    6211
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _show_multidigits                                    16    14      2    6157
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _show                                                 2     2      0     155
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _StartSignal                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadData                                             4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _CheckResponse                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _print_analogvoltages                                 5     5      0    4448
                                             30 BANK0      5     5      0
                           _LCD_Char
                            _LCD_num
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_num                                             18    14      4    4202
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (3) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1375
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Command
   _LCD_init
     _LCD_Command
   _print_analogvoltages
     _LCD_Char
     _LCD_num
       _LCD_Char
       ___aldiv
         ___lmul (ARG)
       ___lmul
       ___lwdiv
       ___lwmod
       _intdigits_chardigits
     _tx
   _print_dht11data
     _CheckResponse
     _LCD_Command
     _ReadData
     _StartSignal
     _show
       _LCD_Char
     _show_multidigits
       _LCD_Char
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
     _tx
     _tx_sn
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
       _tx
   _print_serialnumber
     _tx
     _tx_sn
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      54      12        0.0%
ABS                  0      0      54       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 06 14:51:15 2022

                            pc 0002                   ?_LCD_Command 0070                             l61 0F03  
                           l70 0EAC                             l55 0F7D                             l64 03EC  
                           l73 0E7B                             l58 0FBD                             l91 0E5E  
                           l83 0654                             l92 0E5F                             _AV 0046  
                           l86 0E6C                             l79 0654                             l89 0E5A  
                           _RH 005A                             _Ch 005E                   ___awdiv@sign 0076  
                           _sn 0064                             _tx 0E55                             fsr 0004  
        print_analogvoltages@i 0041          print_analogvoltages@j 0042                            l104 07E6  
                          l108 07E6                            l134 0ECD                            l144 0FF0  
                          l129 001D                            l162 00B2                            l171 01BB  
                          l147 0FFF                            l139 0FBF                            l163 00C0  
                          l340 02A5                            l350 032D                            l174 0E8D  
                          l184 0290                            l441 0157                            l428 0222  
                          l189 04C2                            l289 00A7                            l547 0061  
                          ?_tx 0070                            l557 0F3D                            _RC0 0038  
                          _RC1 0039                            u900 02A9                            u901 02A8  
                          u910 02C8                            u830 0E5E                            u911 02C7  
                          u831 0E5D                            u840 006E                            u825 0F9D  
                          u841 006D                            u930 02DC                            u931 02DB  
                          u851 0077                            u852 007E                            u925 02CD  
                          u853 0085                            u950 02F7                            u951 02F6  
                          u880 009F                            u945 02DE                            u881 009E  
                          u865 0087                            u970 0315                            u890 0298  
                          u971 0314                            u955 02F3                            u891 0297  
                          u875 008F                            u980 031A                            u981 0319  
                          u965 0307                            u990 01C1                            u991 01C0  
                          _Sum 0058                            _avv 0051                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0076                            tx@a 0070  
       show_multidigits@digit1 0026         show_multidigits@digit2 0028         show_multidigits@digit3 0024  
       show_multidigits@digit4 0020                           ??_tx 0070                __end_of_LCD_num 03ED  
                         l1311 0F9A                           l1303 0F7F                           l1313 0FA7  
                         l1305 0F82                           l1321 0E6D                           l1401 01E7  
                         l1315 0FA8                           l1307 0F84                           l1331 0085  
                         l1323 0E56                           l1411 0207                           l1403 01EB  
                         l1317 0FB1                           l1309 0F8E                           l1341 0294  
                         l1333 008E                           l1325 0062                           l1501 0F2C  
                         l1413 020E                           l1405 01EF                           l1511 0F42  
                         l1319 0FB4                           l1351 02C0                           l1343 0298  
                         l1335 009F                           l1327 006A                           l1503 0F33  
                         l1407 0200                           l1415 0214                           l1431 010B  
                         l1423 00FF                           l1521 0F68                           l1513 0F44  
                         l1361 02E5                           l1353 02C8                           l1345 02A9  
                         l1329 006E                           l1505 0F39                           l1417 0219  
                         l1409 0206                           l1441 0124                           l1433 010F  
                         l1425 0100                           l1601 05D9                           l1523 0F71  
                         l1515 0F4E                           l1363 02F7                           l1355 02CB  
                         l1371 0315                           l1347 02B4                           l1339 0291  
                         l1531 0362                           l1419 021E                           l1451 0143  
                         l1443 0128                           l1435 0114                           l1427 0104  
                         l1611 0631                           l1603 05DD                           l1525 0F74  
                         l1517 0F5A                           l1509 0F3F                           l1373 031A  
                         l1365 0305                           l1357 02D8                           l1349 02B8  
                         l1461 001E                           l1541 03BA                           l1533 0375  
                         l1701 0FBE                           l1381 01BD                           l1445 012C  
                         l1437 011A                           l1453 0149                           l1429 0109  
                         l1613 0638                           l1605 05F4                           l1621 065E  
                         l1519 0F67                           l1375 0325                           l1367 0306  
                         l1359 02DC                           l1471 0034                           l1463 0020  
                         l1543 03C1                           l1535 0388                           l1527 032E  
                         l1711 0FD0                           l1551 0E8F                           l1391 01D1  
                         l1383 01C1                           l1455 014E                           l1447 0136  
                         l1439 011D                           l1615 0641                           l1607 0607  
                         l1631 068F                           l1623 0666                           l1369 030F  
                         l1481 0057                           l1473 0038                           l1465 0026  
                         l1545 03C7                           l1537 039F                           l1529 032E  
                         l1713 0FE1                           l1553 0E90                           l1393 01D5  
                         l1385 01C6                           l1457 0153                           l1449 013C  
                         l1617 064A                           l1609 061E                           l1561 04CC  
                         l1641 06C5                           l1633 06A2                           l1625 066F  
                         l1801 04B1                           l1731 0158                           l1723 0ECE  
                         l1475 0049                           l1467 0029                           l1483 005D  
                         l1491 0F0D                           l1547 03D0                           l1539 03A3  
                         l1715 0FF4                           l1707 0FC5                           l1555 0E9C  
                         l1395 01D7                           l1387 01C8                           l1379 01BC  
                         l1571 04FD                           l1563 04D4                           l1651 0720  
                         l1643 06EB                           l1635 06A9                           l1627 0678  
                         l1619 0655                           l1803 04BC                           l1811 00CF  
                         l1725 0ED6                           l1477 004F                           l1469 0030  
                         l1493 0F14                           l1549 03D9                           l1741 0226  
                         l1717 0FF8                           l1709 0FCA                           l1557 0EA0  
                         l1397 01DD                           l1389 01CC                           l1581 0533  
                         l1573 0510                           l1565 04DD                           l1661 076B  
                         l1653 0729                           l1645 06EF                           l1629 068B  
                         l1637 06B3                           l1733 0E7C                           l1813 00D4  
                         l1805 00A8                           l1727 0EFA                           l1479 0050  
                         l1495 0F18                           l1487 0F04                           l1751 0245  
                         l1743 023C                           l1735 0223                           l1719 0FFE  
                         l1399 01E0                           l1591 058E                           l1583 0559  
                         l1575 0517                           l1567 04E6                           l1559 04C3  
                         l1671 07C3                           l1663 076F                           l1647 0706  
                         l1639 06BC                           l1655 0733                           l1815 00D9  
                         l1807 00BD                           l1497 0F1C                           l1489 0F0A  
                         l1761 026A                           l1753 0250                           l1745 0242  
                         l1681 000A                           l1593 0597                           l1585 055D  
                         l1569 04F9                           l1577 0521                           l1673 07CA  
                         l1665 0786                           l1657 073C                           l1649 0719  
                         l1729 0E60                           l1817 00DE                           l1809 00C4  
                         l1499 0F26                           l1763 0270                           l1755 0257  
                         l1691 0EB5                           l1683 0012                           l1587 0574  
                         l1579 052A                           l1595 05A1                           l1675 07D3  
                         l1667 0799                           l1659 0745                           l1771 03ED  
                         l1765 0276                           l1757 025E                           l1693 0EBB  
                         l1685 001A                           l1597 05AA                           l1589 0587  
                         l1677 07DC                           l1669 07B0                           l1781 0466  
                         l1773 03F7                           l1767 0284                           l1759 0264  
                         l1695 0EBF                           l1687 0EAD                           l1679 0004  
                         l1599 05B3                           l1791 048E                           l1783 046C  
                         l1775 03FE                           l1769 028A                           l1697 0EC5  
                         l1689 0EB0                           l1793 0494                           l1785 0472  
                         l1777 0433                           l1699 0EC9                           l1795 049A  
                         l1787 0478                           l1779 0458                           l1797 04A0  
                         l1789 0483                           l1799 04A6                           STR_1 080C  
                         STR_2 0806                           u1000 01CC                           u1001 01CB  
                         u1010 01DD                           u1011 01DC                           u1100 010F  
                         u1101 010E                           u1030 01EF                           u1110 011A  
                         u1031 01EE                           u1111 0119                           u1200 0038  
                         u1201 0037                           u1025 01E1                           u1050 0200  
                         u1130 012C                           u1051 01FF                           u1131 012B  
                         u1220 0049                           u1300 0F39                           u1140 0136  
                         u1221 0048                           u1301 0F38                           u1045 01F0  
                         u1141 0135                           u1125 011E                           u1070 0214  
                         u1215 0039                           u1071 0213                           u1055 01FC  
                         u1240 005D                           u1320 0EAC                           u1080 0219  
                         u1160 0149                           u1400 065E                           u1241 005C  
                         u1225 0045                           u1321 0EAB                           u1081 0218  
                         u1065 0208                           u1161 0148                           u1145 0132  
                         u1401 065D                           u1250 0F0A                           u1170 014E  
                         u1090 0104                           u1330 04CC                           u1410 066F  
                         u1315 0F5D                           u1235 0051                           u1251 0F09  
                         u1171 014D                           u1155 013D                           u1091 0103  
                         u1331 04CB                           u1411 066E                           u1180 0026  
                         u1500 0FD0                           u1340 04DD                           u1420 0678  
                         u1181 0025                           u1501 0FCF                           u1341 04DC  
                         u1421 0677                           u1270 0F1C                           u1350 04E6  
                         u1430 06BC                           u1271 0F1B                           u1351 04E5  
                         u1431 06BB                           u1280 0F26                           u1360 052A  
                         u1440 06C5                           u1600 0458                           u1281 0F25  
                         u1265 0F0E                           u1361 0529                           u1441 06C4  
                         u1601 0457                           u1530 0FF4                           u1514 0FD8  
                         u1370 0533                           u1450 073C                           u1610 00C4  
                         u1195 002A                           u1531 0FF3                           u1515 0FD6  
                         u1371 0532                           u1451 073B                           u1611 00C3  
                         u1540 0FFE                           u1524 0FE9                           u1380 05AA  
                         u1460 0745                           u1285 0F22                           u1541 0FFD  
                         u1525 0FE7                           u1381 05A9                           u1461 0744  
                         u1605 0454                           u1550 0257                           u1470 0EBB  
                         u1390 05B3                           u1295 0F2D                           u1551 0256  
                         u1471 0EBA                           u1391 05B2                           u1560 0264  
                         u1480 0EC5                           u1561 0263                           u1481 0EC4  
                         u1570 0276                           u1490 0FC5                           u1707 027E  
                         u1571 0275                           u1491 0FC4                           u1627 00CA  
                         u1580 0290                           u1717 0F89                           u1581 028F  
                         u1637 00EC                           u1590 03FE                           u1807 016E  
                         u1727 0F95                           u1647 000E                           u1591 03FD  
                         u1817 0189                           u1737 0FAC                           u1657 0017  
                         u1827 01A4                           u1747 0FB8                           u1667 0FC7  
                         u1757 0EFE                           u1677 0EB2                           u1767 0F49  
                         u1687 0EBD                           u1777 0F55                           u1697 0EC7  
                         u1787 0F6C                           u1797 0F78                           _RCIF 0065  
       show_multidigits@result 0022                           _TXIF 0064   __end_of_print_analogvoltages 0291  
                         _Temp 005C                           _main 00A8                           _show 0E8E  
                         btemp 007E               __end_of_ADC_Init 01BC                           start 0000  
             __end_of_LCD_Char 0FBE                   LCD_Char@data 0072               __end_of_LCD_init 0F04  
              __end_of___aldiv 032E                          ?_main 0070                __end_of___awdiv 0223  
              __end_of___awmod 0158                          ?_show 0070                ___awdiv@divisor 0070  
              __end_of___lwdiv 0062                __end_of___lwmod 0F3E                ___awdiv@counter 0075  
                        _RCREG 001A                          _RCSTA 0018        show_multidigits@result1 002A  
                        _SPBRG 0099                          _PORTB 0006                          _TXREG 0019  
                        _TXSTA 0098                          _Check 0063            ___lmul@multiplicand 0074  
                        _tx_sn 0655                __end_of_ser_int 0E6D                          pclath 000A  
           _print_serialnumber 0E7C                          show@s 0074                          status 0003  
                        wtemp0 007E            ?_print_serialnumber 0070                __initialization 07E7  
                 __end_of_main 00FF                   __end_of_show 0EAD               __end_of_ReadData 1000  
                       ??_main 0043                         ??_show 0073                 LCD_num@result1 003A  
         _intdigits_chardigits 0E6D                      ??_LCD_num 007E           ??_print_serialnumber 007B  
                       _ADCON0 001F                         _ADCON1 009F                         _ADRESH 001E  
                       _ADRESL 009E               ___awdiv@dividend 0072                         ?_tx_sn 0079  
                       ___lmul 0062                      ??___aldiv 007D                      ??___awdiv 0074  
                    ??___awmod 0074                      ??___lwdiv 0074                      ??___lwmod 0074  
             ___awdiv@quotient 0077                ___awmod@divisor 0070                ___awmod@counter 0075  
         _print_analogvoltages 0223           __size_of_LCD_Command 0040          ?_intdigits_chardigits 0070  
       __size_of_CheckResponse 0021                      ?_ADC_Init 0070                      ??_ser_int 0070  
    __size_of_show_multidigits 0192                      ?_LCD_Char 0070        __end_of__initialization 07FC  
                    ?_LCD_init 0070                 __pcstackCOMMON 0070       __size_of_print_dht11data 00D6  
                 __pidataBANK0 0E4B                  ??_StartSignal 0070                  __end_of_tx_sn 07E7  
        ?_print_analogvoltages 0070                     __end_of_tx 0E60                     ??_ADC_Init 0070  
                      ??_tx_sn 007B                     __pbssBANK0 0046                      ?_ReadData 0070  
               tx_sn@remainder 002C                     ??_LCD_Char 0070                     ??_LCD_init 0073  
                _CheckResponse 0EAD                   tx_sn@result1 002A                     __pmaintext 00A8  
                      ?___lmul 0070                 ___lmul@product 0079         ??_intdigits_chardigits 0076  
          __end_of_StartSignal 001E                        _LCD_num 032E                     __stringtab 0800  
          show_multidigits@val 0079                     ??_ReadData 0070                 ?_CheckResponse 0070  
                      _T_byte1 0062                        _T_byte2 0061                        ___aldiv 0291  
                      ___awdiv 01BC                __size_of___lmul 0046                        ___awmod 00FF  
                      ___lwdiv 001E                        ___lwmod 0F04         ??_print_analogvoltages 003E  
                      __ptext1 0E60                        __ptext2 0E7C                        __ptext3 03ED  
                      __ptext4 0655                        __ptext5 04C3                        __ptext6 00FF  
                      __ptext7 01BC                        __ptext8 0E8E                        __ptext9 0004  
            ??_print_dht11data 002E                        _message 004E               ___awmod@dividend 0072  
             ___aldiv@dividend 0024                        _ser_int 0E60                        clrloop0 0E4E  
         end_of_initialization 07FC               _show_multidigits 04C3               ___aldiv@quotient 002A  
                  _StartSignal 0004                      _PORTDbits 0008    __size_of_print_serialnumber 0012  
                    _TRISBbits 0086                      _TRISCbits 0087                      _TRISDbits 0088  
            __size_of_ADC_Init 0064                ??_CheckResponse 0070                      ReadData@i 0072  
                    ReadData@j 0073              __size_of_LCD_Char 0040              __size_of_LCD_init 0036  
                ??_LCD_Command 0070                 __end_of___lmul 00A8            start_initialization 07E7  
                LCD_num@digit1 0032                  LCD_num@digit2 0034                  LCD_num@digit3 0036  
                   LCD_num@val 002E                  LCD_num@result 0038              __size_of_ReadData 0042  
                     ??___lmul 0078                    __pdataBANK0 0064               LCD_num@remainder 003C  
          __end_of_LCD_Command 0F7E                       ?_LCD_num 002E                      ___latbits 0002  
                __pcstackBANK0 0020                    tx_sn@digit1 0026                    tx_sn@digit2 0028  
                  tx_sn@digit3 0024                    tx_sn@digit4 0020               ___lwdiv@dividend 0072  
              _print_dht11data 03ED                    tx_sn@result 0022                       ?___aldiv 0020  
                     ?___awdiv 0070                       ?___awmod 0070                       ?___lwdiv 0070  
                     ?___lwmod 0070       __end_of_show_multidigits 0655                      __pstrings 0800  
__size_of_intdigits_chardigits 000F                       _ADC_Init 0158                       ?_ser_int 0070  
             ___lwdiv@quotient 0075                 __size_of_tx_sn 0192                    __size_of_tx 000B  
              ___aldiv@divisor 0020                       _LCD_Char 0F7E                ___aldiv@counter 0028  
                     _LCD_init 0ECE                      clear_ram0 0E4D                       _GO_nDONE 00FA  
                 ?_StartSignal 0070                    _LCD_Command 0F3E  __size_of_print_analogvoltages 006E  
                  __stringbase 0805                       _RH_byte1 0060                       _RH_byte2 005F  
             __size_of_LCD_num 00BF              ___lmul@multiplier 0070          intdigits_chardigits@a 0070  
        intdigits_chardigits@b 0072          intdigits_chardigits@c 0074        __end_of_print_dht11data 04C3  
                     _ReadData 0FBE               __size_of___aldiv 009D               __size_of___awdiv 0067  
             __size_of___awmod 0059               __size_of___lwdiv 0044               __size_of___lwmod 003A  
           __end_of__stringtab 0806     __end_of_print_serialnumber 0E8E                ___lwdiv@divisor 0070  
              ___lwdiv@counter 0077                       __ptext10 0FBE                       __ptext11 0EAD  
                     __ptext20 0F7E                       __ptext12 0223                       __ptext21 0ECE  
                     __ptext13 0E55                       __ptext22 0F3E                       __ptext14 032E  
                     __ptext23 0158                       __ptext15 0E6D                       __ptext16 0F04  
                     __ptext17 001E                       __ptext18 0062                       __ptext19 0291  
             __size_of_ser_int 000D          __end_of_CheckResponse 0ECE                  __size_of_main 0057  
                __size_of_show 001F                       _humidity 0056                LCD_Command@cmnd 0072  
             ?_print_dht11data 0070               ___lwmod@dividend 0072                      stringcode 0800  
    show_multidigits@remainder 002C              ?_show_multidigits 0079           __size_of_StartSignal 001A  
           ??_show_multidigits 007B                    _temperature 0054                       tx_sn@val 0079  
              ___lwmod@divisor 0070                ___lwmod@counter 0075                       stringdir 0800  
                     stringtab 0800                   ___aldiv@sign 0029   __end_of_intdigits_chardigits 0E7C  
