

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 04 20:59:11 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186                           
   187                           	psect	idataBANK0
   188  016E                     __pidataBANK0:
   189                           
   190                           ;initializer for _sn
   191  016E  3401               	retlw	1
   192  016F  3400               	retlw	0
   193  001E                     _ADRESH	set	30
   194  001F                     _ADCON0	set	31
   195  001A                     _RCREG	set	26
   196  0019                     _TXREG	set	25
   197  0018                     _RCSTA	set	24
   198  0006                     _PORTB	set	6
   199  00FA                     _GO_nDONE	set	250
   200  0065                     _RCIF	set	101
   201  0064                     _TXIF	set	100
   202  0039                     _RC1	set	57
   203  0038                     _RC0	set	56
   204  009E                     _ADRESL	set	158
   205  009F                     _ADCON1	set	159
   206  0087                     _TRISC	set	135
   207  0086                     _TRISB	set	134
   208  0099                     _SPBRG	set	153
   209  0098                     _TXSTA	set	152
   210                           
   211                           	psect	strings
   212  0003                     __pstrings:
   213  0003                     stringtab:
   214  0003                     __stringtab:
   215  0003                     stringcode:	
   216                           ;	String table - string pointers are 1 byte each
   217                           
   218  0003                     stringdir:
   219  0003  3000               	movlw	high stringdir
   220  0004  008A               	movwf	10
   221  0005  0804               	movf	4,w
   222  0006  0A84               	incf	4,f
   223  0007  0782               	addwf	2,f
   224  0008                     __stringbase:
   225  0008  3400               	retlw	0
   226  0009                     __end_of__stringtab:
   227  0009                     STR_1:
   228  0009  3420               	retlw	32	;' '
   229  000A  3400               	retlw	0
   230                           
   231                           	psect	cinit
   232  07E5                     start_initialization:	
   233                           ; #config settings
   234                           
   235  07E5                     __initialization:
   236                           
   237                           ; Initialize objects allocated to BANK0
   238  07E5  120A  118A  216E  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   239  07EA  00CE               	movwf	__pdataBANK0& (0+127)
   240  07EB  120A  118A  216F  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   241  07F0  00CF               	movwf	(__pdataBANK0+1)& (0+127)
   242                           
   243                           ; Clear objects allocated to BANK0
   244  07F1  01C3               	clrf	__pbssBANK0& (0+127)
   245  07F2  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   246  07F3  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   247  07F4  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   248  07F5  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   249  07F6  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   250  07F7  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   251  07F8  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   252  07F9  01CB               	clrf	(__pbssBANK0+8)& (0+127)
   253  07FA  01CC               	clrf	(__pbssBANK0+9)& (0+127)
   254  07FB  01CD               	clrf	(__pbssBANK0+10)& (0+127)
   255  07FC                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  07FC                     __end_of__initialization:
   259  07FC  0183               	clrf	3
   260  07FD  120A  118A  2D89   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssBANK0
   263  0043                     __pbssBANK0:
   264  0043                     _AV:
   265  0043                     	ds	8
   266  004B                     _avv:
   267  004B                     	ds	3
   268                           
   269                           	psect	dataBANK0
   270  004E                     __pdataBANK0:
   271  004E                     _sn:
   272  004E                     	ds	2
   273                           
   274                           	psect	cstackCOMMON
   275  0070                     __pcstackCOMMON:
   276  0070                     ?_intdigits_chardigits:
   277  0070                     ?_ADC_Init:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ??_ADC_Init:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_LCD_Command:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_LCD_Command:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_LCD_Char:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ??_LCD_Char:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_LCD_init:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_ser_int:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ??_ser_int:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_tx:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ??_tx:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_main:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?___awdiv:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?___awmod:	
   317                           ; 2 bytes @ 0x0
   318                           
   319  0070                     ?___lwdiv:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     ?___lwmod:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     ?___lmul:	
   326                           ; 2 bytes @ 0x0
   327                           
   328  0070                     tx@a:	
   329                           ; 4 bytes @ 0x0
   330                           
   331  0070                     intdigits_chardigits@a:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ___awdiv@divisor:	
   335                           ; 2 bytes @ 0x0
   336                           
   337  0070                     ___awmod@divisor:	
   338                           ; 2 bytes @ 0x0
   339                           
   340  0070                     ___lwdiv@divisor:	
   341                           ; 2 bytes @ 0x0
   342                           
   343  0070                     ___lwmod@divisor:	
   344                           ; 2 bytes @ 0x0
   345                           
   346  0070                     ___lmul@multiplier:	
   347                           ; 2 bytes @ 0x0
   348                           
   349                           
   350                           ; 4 bytes @ 0x0
   351  0070                     	ds	2
   352  0072                     LCD_Command@cmnd:
   353  0072                     LCD_Char@data:	
   354                           ; 1 bytes @ 0x2
   355                           
   356  0072                     intdigits_chardigits@b:	
   357                           ; 1 bytes @ 0x2
   358                           
   359  0072                     ___awdiv@dividend:	
   360                           ; 2 bytes @ 0x2
   361                           
   362  0072                     ___awmod@dividend:	
   363                           ; 2 bytes @ 0x2
   364                           
   365  0072                     ___lwdiv@dividend:	
   366                           ; 2 bytes @ 0x2
   367                           
   368  0072                     ___lwmod@dividend:	
   369                           ; 2 bytes @ 0x2
   370                           
   371                           
   372                           ; 2 bytes @ 0x2
   373  0072                     	ds	1
   374  0073                     ??_LCD_init:
   375                           
   376                           ; 1 bytes @ 0x3
   377  0073                     	ds	1
   378  0074                     ??___awdiv:
   379  0074                     ??___awmod:	
   380                           ; 1 bytes @ 0x4
   381                           
   382  0074                     ??___lwdiv:	
   383                           ; 1 bytes @ 0x4
   384                           
   385  0074                     ??___lwmod:	
   386                           ; 1 bytes @ 0x4
   387                           
   388  0074                     intdigits_chardigits@c:	
   389                           ; 1 bytes @ 0x4
   390                           
   391  0074                     ___lmul@multiplicand:	
   392                           ; 2 bytes @ 0x4
   393                           
   394                           
   395                           ; 4 bytes @ 0x4
   396  0074                     	ds	1
   397  0075                     ___awdiv@counter:
   398  0075                     ___awmod@counter:	
   399                           ; 1 bytes @ 0x5
   400                           
   401  0075                     ___lwmod@counter:	
   402                           ; 1 bytes @ 0x5
   403                           
   404  0075                     ___lwdiv@quotient:	
   405                           ; 1 bytes @ 0x5
   406                           
   407                           
   408                           ; 2 bytes @ 0x5
   409  0075                     	ds	1
   410  0076                     ??_intdigits_chardigits:
   411  0076                     ___awdiv@sign:	
   412                           ; 1 bytes @ 0x6
   413                           
   414  0076                     ___awmod@sign:	
   415                           ; 1 bytes @ 0x6
   416                           
   417                           
   418                           ; 1 bytes @ 0x6
   419  0076                     	ds	1
   420  0077                     ___lwdiv@counter:
   421  0077                     ___awdiv@quotient:	
   422                           ; 1 bytes @ 0x7
   423                           
   424                           
   425                           ; 2 bytes @ 0x7
   426  0077                     	ds	1
   427  0078                     ??___lmul:
   428                           
   429                           ; 1 bytes @ 0x8
   430  0078                     	ds	1
   431  0079                     ?_tx_sn:
   432  0079                     tx_sn@val:	
   433                           ; 1 bytes @ 0x9
   434                           
   435  0079                     ___lmul@product:	
   436                           ; 2 bytes @ 0x9
   437                           
   438                           
   439                           ; 4 bytes @ 0x9
   440  0079                     	ds	2
   441  007B                     ??_tx_sn:
   442                           
   443                           ; 1 bytes @ 0xB
   444  007B                     	ds	2
   445  007D                     ??___aldiv:
   446                           
   447                           ; 1 bytes @ 0xD
   448  007D                     	ds	1
   449  007E                     ??_LCD_num:
   450                           
   451                           	psect	cstackBANK0
   452  0020                     __pcstackBANK0:	
   453                           ; 1 bytes @ 0xE
   454                           
   455  0020                     ?___aldiv:
   456  0020                     tx_sn@digit4:	
   457                           ; 4 bytes @ 0x0
   458                           
   459  0020                     ___aldiv@divisor:	
   460                           ; 2 bytes @ 0x0
   461                           
   462                           
   463                           ; 4 bytes @ 0x0
   464  0020                     	ds	2
   465  0022                     tx_sn@result:
   466                           
   467                           ; 2 bytes @ 0x2
   468  0022                     	ds	2
   469  0024                     tx_sn@digit3:
   470  0024                     ___aldiv@dividend:	
   471                           ; 2 bytes @ 0x4
   472                           
   473                           
   474                           ; 4 bytes @ 0x4
   475  0024                     	ds	2
   476  0026                     tx_sn@digit1:
   477                           
   478                           ; 2 bytes @ 0x6
   479  0026                     	ds	2
   480  0028                     ___aldiv@counter:
   481  0028                     tx_sn@digit2:	
   482                           ; 1 bytes @ 0x8
   483                           
   484                           
   485                           ; 2 bytes @ 0x8
   486  0028                     	ds	1
   487  0029                     ___aldiv@sign:
   488                           
   489                           ; 1 bytes @ 0x9
   490  0029                     	ds	1
   491  002A                     tx_sn@result1:
   492  002A                     ___aldiv@quotient:	
   493                           ; 2 bytes @ 0xA
   494                           
   495                           
   496                           ; 4 bytes @ 0xA
   497  002A                     	ds	2
   498  002C                     tx_sn@remainder:
   499                           
   500                           ; 2 bytes @ 0xC
   501  002C                     	ds	2
   502  002E                     ?_LCD_num:
   503  002E                     LCD_num@val:	
   504                           ; 1 bytes @ 0xE
   505                           
   506                           
   507                           ; 4 bytes @ 0xE
   508  002E                     	ds	4
   509  0032                     LCD_num@digit1:
   510                           
   511                           ; 2 bytes @ 0x12
   512  0032                     	ds	2
   513  0034                     LCD_num@digit2:
   514                           
   515                           ; 2 bytes @ 0x14
   516  0034                     	ds	2
   517  0036                     LCD_num@digit3:
   518                           
   519                           ; 2 bytes @ 0x16
   520  0036                     	ds	2
   521  0038                     LCD_num@result:
   522                           
   523                           ; 2 bytes @ 0x18
   524  0038                     	ds	2
   525  003A                     LCD_num@result1:
   526                           
   527                           ; 2 bytes @ 0x1A
   528  003A                     	ds	2
   529  003C                     LCD_num@remainder:
   530                           
   531                           ; 2 bytes @ 0x1C
   532  003C                     	ds	2
   533  003E                     ??_main:
   534                           
   535                           ; 1 bytes @ 0x1E
   536  003E                     	ds	3
   537  0041                     main@i:
   538                           
   539                           ; 1 bytes @ 0x21
   540  0041                     	ds	1
   541  0042                     main@j:
   542                           
   543                           ; 1 bytes @ 0x22
   544  0042                     	ds	1
   545                           
   546                           	psect	maintext
   547  0589                     __pmaintext:	
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 27 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  j               1   34[BANK0 ] unsigned char 
   558 ;;  i               1   33[BANK0 ] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : B00/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       2       0       0       0
   570 ;;      Temps:          0       3       0       0       0
   571 ;;      Totals:         0       5       0       0       0
   572 ;;Total ram usage:        5 bytes
   573 ;; Hardware stack levels required when called: 2
   574 ;; This function calls:
   575 ;;		_ADC_Init
   576 ;;		_LCD_Char
   577 ;;		_LCD_Command
   578 ;;		_LCD_init
   579 ;;		_LCD_num
   580 ;;		_ser_int
   581 ;;		_tx
   582 ;;		_tx_sn
   583 ;; This function is called by:
   584 ;;		Startup code after reset
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _main
   590  0589                     _main:
   591  0589                     l1417:	
   592                           ;incstack = 0
   593                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   594                           
   595                           
   596                           ;main.c: 29:     TRISB =0x00;
   597  0589  1683               	bsf	3,5	;RP0=1, select bank1
   598  058A  1303               	bcf	3,6	;RP1=0, select bank1
   599  058B  0186               	clrf	6	;volatile
   600                           
   601                           ;main.c: 30:     TRISC =0x00;
   602  058C  0187               	clrf	7	;volatile
   603  058D                     l1419:
   604                           
   605                           ;main.c: 32:     LCD_init();
   606  058D  120A  118A  2197  120A  118A  	fcall	_LCD_init
   607  0592                     l1421:
   608                           
   609                           ;main.c: 33:     ser_int();
   610  0592  120A  118A  217B  120A  118A  	fcall	_ser_int
   611  0597                     l1423:
   612                           
   613                           ;main.c: 35:     {;main.c: 36:         ADC_Init ();
   614  0597  120A  118A  2362  120A  118A  	fcall	_ADC_Init
   615  059C                     l1425:
   616                           
   617                           ;main.c: 37:         GO_nDONE=1;
   618  059C  1283               	bcf	3,5	;RP0=0, select bank0
   619  059D  1303               	bcf	3,6	;RP1=0, select bank0
   620  059E  151F               	bsf	31,2	;volatile
   621  059F                     l98:	
   622                           ;main.c: 38:         while(GO_nDONE==1);
   623                           
   624  059F  191F               	btfsc	31,2	;volatile
   625  05A0  2DA2               	goto	u1231
   626  05A1  2DA3               	goto	u1230
   627  05A2                     u1231:
   628  05A2  2D9F               	goto	l98
   629  05A3                     u1230:
   630  05A3                     l1427:
   631                           
   632                           ;main.c: 39:         _delay((unsigned long)((10)*(20000000/4000.0)));
   633  05A3  3041               	movlw	65
   634  05A4  1283               	bcf	3,5	;RP0=0, select bank0
   635  05A5  1303               	bcf	3,6	;RP1=0, select bank0
   636  05A6  00BF               	movwf	??_main+1
   637  05A7  30ED               	movlw	237
   638  05A8  00BE               	movwf	??_main
   639  05A9                     u1287:
   640  05A9  0BBE               	decfsz	??_main,f
   641  05AA  2DA9               	goto	u1287
   642  05AB  0BBF               	decfsz	??_main+1,f
   643  05AC  2DA9               	goto	u1287
   644  05AD  2DAE               	nop2
   645  05AE                     l1429:
   646                           
   647                           ;main.c: 41:         tx_sn(sn);
   648  05AE  1283               	bcf	3,5	;RP0=0, select bank0
   649  05AF  1303               	bcf	3,6	;RP1=0, select bank0
   650  05B0  084F               	movf	_sn+1,w
   651  05B1  00FA               	movwf	tx_sn@val+1
   652  05B2  084E               	movf	_sn,w
   653  05B3  00F9               	movwf	tx_sn@val
   654  05B4  120A  118A  2653  120A  118A  	fcall	_tx_sn
   655  05B9                     l1431:
   656                           
   657                           ;main.c: 42:         tx(')');
   658  05B9  3029               	movlw	41
   659  05BA  120A  118A  2170  120A  118A  	fcall	_tx
   660  05BF                     l1433:
   661                           
   662                           ;main.c: 43:         for (unsigned char i=0;i<4;i++)
   663  05BF  1283               	bcf	3,5	;RP0=0, select bank0
   664  05C0  1303               	bcf	3,6	;RP1=0, select bank0
   665  05C1  01C1               	clrf	main@i
   666  05C2                     l1439:
   667                           
   668                           ;main.c: 44:         {;main.c: 45:             LCD_num(AV[i]);
   669  05C2  0841               	movf	main@i,w
   670  05C3  00BE               	movwf	??_main
   671  05C4  073E               	addwf	??_main,w
   672  05C5  3E43               	addlw	(low (_AV| 0))& (0+255)
   673  05C6  0084               	movwf	4
   674  05C7  1383               	bcf	3,7	;select IRP bank0
   675  05C8  0800               	movf	0,w
   676  05C9  00BF               	movwf	??_main+1
   677  05CA  0A84               	incf	4,f
   678  05CB  0800               	movf	0,w
   679  05CC  00C0               	movwf	??_main+2
   680  05CD  083F               	movf	??_main+1,w
   681  05CE  00AE               	movwf	LCD_num@val
   682  05CF  0840               	movf	??_main+2,w
   683  05D0  00AF               	movwf	LCD_num@val+1
   684  05D1  01B0               	clrf	LCD_num@val+2
   685  05D2  01B1               	clrf	LCD_num@val+3
   686  05D3  120A  118A  24CA  120A  118A  	fcall	_LCD_num
   687  05D8                     l1441:
   688                           
   689                           ;main.c: 46:             LCD_Char(" ");
   690  05D8  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   691  05D9  120A  118A  223F  120A  118A  	fcall	_LCD_Char
   692  05DE                     l1443:
   693                           
   694                           ;main.c: 47:             for (unsigned char j=0;j<3;j++)
   695  05DE  1283               	bcf	3,5	;RP0=0, select bank0
   696  05DF  1303               	bcf	3,6	;RP1=0, select bank0
   697  05E0  01C2               	clrf	main@j
   698  05E1                     l1449:
   699                           
   700                           ;main.c: 48:             {;main.c: 49:                 tx((avv[j]+0x30));
   701  05E1  0842               	movf	main@j,w
   702  05E2  3E4B               	addlw	(low (_avv| 0))& (0+255)
   703  05E3  0084               	movwf	4
   704  05E4  1383               	bcf	3,7	;select IRP bank0
   705  05E5  0800               	movf	0,w
   706  05E6  3E30               	addlw	48
   707  05E7  120A  118A  2170  120A  118A  	fcall	_tx
   708  05EC                     l1451:
   709                           
   710                           ;main.c: 50:                 if (j == 0)
   711  05EC  1283               	bcf	3,5	;RP0=0, select bank0
   712  05ED  1303               	bcf	3,6	;RP1=0, select bank0
   713  05EE  0842               	movf	main@j,w
   714  05EF  1D03               	btfss	3,2
   715  05F0  2DF2               	goto	u1241
   716  05F1  2DF3               	goto	u1240
   717  05F2                     u1241:
   718  05F2  2DFA               	goto	l1455
   719  05F3                     u1240:
   720  05F3                     l1453:
   721                           
   722                           ;main.c: 51:                 {;main.c: 52:                     tx('.');
   723  05F3  302E               	movlw	46
   724  05F4  120A  118A  2170  120A  118A  	fcall	_tx
   725                           
   726                           ;main.c: 53:                 }
   727  05F9  2E06               	goto	l1459
   728  05FA                     l1455:
   729  05FA  3002               	movlw	2
   730  05FB  0642               	xorwf	main@j,w
   731  05FC  1D03               	btfss	3,2
   732  05FD  2DFF               	goto	u1251
   733  05FE  2E00               	goto	u1250
   734  05FF                     u1251:
   735  05FF  2E06               	goto	l1459
   736  0600                     u1250:
   737  0600                     l1457:
   738                           
   739                           ;main.c: 55:                 {;main.c: 56:                     tx(',');
   740  0600  302C               	movlw	44
   741  0601  120A  118A  2170  120A  118A  	fcall	_tx
   742  0606                     l1459:
   743                           
   744                           ;main.c: 58:             }
   745  0606  3001               	movlw	1
   746  0607  1283               	bcf	3,5	;RP0=0, select bank0
   747  0608  1303               	bcf	3,6	;RP1=0, select bank0
   748  0609  00BE               	movwf	??_main
   749  060A  083E               	movf	??_main,w
   750  060B  07C2               	addwf	main@j,f
   751  060C                     l1461:
   752  060C  3003               	movlw	3
   753  060D  0242               	subwf	main@j,w
   754  060E  1C03               	skipc
   755  060F  2E11               	goto	u1261
   756  0610  2E12               	goto	u1260
   757  0611                     u1261:
   758  0611  2DE1               	goto	l1449
   759  0612                     u1260:
   760  0612                     l1463:
   761                           
   762                           ;main.c: 60:             _delay((unsigned long)((100)*(20000000/4000.0)));
   763  0612  3003               	movlw	3
   764  0613  1283               	bcf	3,5	;RP0=0, select bank0
   765  0614  1303               	bcf	3,6	;RP1=0, select bank0
   766  0615  00C0               	movwf	??_main+2
   767  0616  308A               	movlw	138
   768  0617  00BF               	movwf	??_main+1
   769  0618  3055               	movlw	85
   770  0619  00BE               	movwf	??_main
   771  061A                     u1297:
   772  061A  0BBE               	decfsz	??_main,f
   773  061B  2E1A               	goto	u1297
   774  061C  0BBF               	decfsz	??_main+1,f
   775  061D  2E1A               	goto	u1297
   776  061E  0BC0               	decfsz	??_main+2,f
   777  061F  2E1A               	goto	u1297
   778  0620                     l1465:
   779                           
   780                           ;main.c: 61:         }
   781  0620  3001               	movlw	1
   782  0621  1283               	bcf	3,5	;RP0=0, select bank0
   783  0622  1303               	bcf	3,6	;RP1=0, select bank0
   784  0623  00BE               	movwf	??_main
   785  0624  083E               	movf	??_main,w
   786  0625  07C1               	addwf	main@i,f
   787  0626                     l1467:
   788  0626  3004               	movlw	4
   789  0627  0241               	subwf	main@i,w
   790  0628  1C03               	skipc
   791  0629  2E2B               	goto	u1271
   792  062A  2E2C               	goto	u1270
   793  062B                     u1271:
   794  062B  2DC2               	goto	l1439
   795  062C                     u1270:
   796  062C                     l1469:
   797                           
   798                           ;main.c: 63:         tx(0x0d);
   799  062C  300D               	movlw	13
   800  062D  120A  118A  2170  120A  118A  	fcall	_tx
   801                           
   802                           ;main.c: 64:         LCD_Command(0x01);
   803  0632  3001               	movlw	1
   804  0633  120A  118A  21FF  120A  118A  	fcall	_LCD_Command
   805  0638                     l1471:
   806                           
   807                           ;main.c: 65:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   808  0638  301A               	movlw	26
   809  0639  1283               	bcf	3,5	;RP0=0, select bank0
   810  063A  1303               	bcf	3,6	;RP1=0, select bank0
   811  063B  00C0               	movwf	??_main+2
   812  063C  305E               	movlw	94
   813  063D  00BF               	movwf	??_main+1
   814  063E  306D               	movlw	109
   815  063F  00BE               	movwf	??_main
   816  0640                     u1307:
   817  0640  0BBE               	decfsz	??_main,f
   818  0641  2E40               	goto	u1307
   819  0642  0BBF               	decfsz	??_main+1,f
   820  0643  2E40               	goto	u1307
   821  0644  0BC0               	decfsz	??_main+2,f
   822  0645  2E40               	goto	u1307
   823  0646  2E47               	nop2
   824  0647                     l1473:
   825                           
   826                           ;main.c: 66:         sn += 1;
   827  0647  3001               	movlw	1
   828  0648  1283               	bcf	3,5	;RP0=0, select bank0
   829  0649  1303               	bcf	3,6	;RP1=0, select bank0
   830  064A  07CE               	addwf	_sn,f
   831  064B  1803               	skipnc
   832  064C  0ACF               	incf	_sn+1,f
   833  064D  3000               	movlw	0
   834  064E  07CF               	addwf	_sn+1,f
   835  064F  2D97               	goto	l1423
   836  0650  120A  118A  2800   	ljmp	start
   837  0653                     __end_of_main:
   838                           
   839                           	psect	text1
   840  0653                     __ptext1:	
   841 ;; *************** function _tx_sn *****************
   842 ;; Defined at:
   843 ;;		line 27 in file "./uart.h"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  val             2    9[COMMON] unsigned int 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  remainder       2   12[BANK0 ] int 
   848 ;;  result1         2   10[BANK0 ] int 
   849 ;;  digit2          2    8[BANK0 ] int 
   850 ;;  digit1          2    6[BANK0 ] int 
   851 ;;  digit3          2    4[BANK0 ] int 
   852 ;;  result          2    2[BANK0 ] int 
   853 ;;  digit4          2    0[BANK0 ] int 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         2       0       0       0       0
   864 ;;      Locals:         0      14       0       0       0
   865 ;;      Temps:          0       0       0       0       0
   866 ;;      Totals:         2      14       0       0       0
   867 ;;Total ram usage:       16 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 1
   870 ;; This function calls:
   871 ;;		___awdiv
   872 ;;		___awmod
   873 ;;		___lwdiv
   874 ;;		___lwmod
   875 ;;		_tx
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _tx_sn
   883  0653                     _tx_sn:
   884  0653                     l1347:	
   885                           ;incstack = 0
   886                           ; Regs used in _tx_sn: [wreg+status,2+status,0+pclath+cstack]
   887                           
   888                           
   889                           ;./uart.h: 27: void tx_sn (unsigned int val);./uart.h: 28: {;./uart.h: 29:     int remai
      +                          nder, digit1, digit2, digit3, digit4, result, result1;;./uart.h: 30:     if (val<=9)
   890  0653  3000               	movlw	0
   891  0654  027A               	subwf	tx_sn@val+1,w
   892  0655  300A               	movlw	10
   893  0656  1903               	skipnz
   894  0657  0279               	subwf	tx_sn@val,w
   895  0658  1803               	skipnc
   896  0659  2E5B               	goto	u1151
   897  065A  2E5C               	goto	u1150
   898  065B                     u1151:
   899  065B  2E64               	goto	l1351
   900  065C                     u1150:
   901  065C                     l1349:
   902                           
   903                           ;./uart.h: 31:     {;./uart.h: 32:        tx(val+0x30);
   904  065C  0879               	movf	tx_sn@val,w
   905  065D  3E30               	addlw	48
   906  065E  120A  118A  2170  120A  118A  	fcall	_tx
   907                           
   908                           ;./uart.h: 33:     }
   909  0663  2FE4               	goto	l88
   910  0664                     l1351:
   911  0664  3000               	movlw	0
   912  0665  027A               	subwf	tx_sn@val+1,w
   913  0666  300A               	movlw	10
   914  0667  1903               	skipnz
   915  0668  0279               	subwf	tx_sn@val,w
   916  0669  1C03               	skipc
   917  066A  2E6C               	goto	u1161
   918  066B  2E6D               	goto	u1160
   919  066C                     u1161:
   920  066C  2EB1               	goto	l1365
   921  066D                     u1160:
   922  066D                     l1353:
   923  066D  3000               	movlw	0
   924  066E  027A               	subwf	tx_sn@val+1,w
   925  066F  3064               	movlw	100
   926  0670  1903               	skipnz
   927  0671  0279               	subwf	tx_sn@val,w
   928  0672  1803               	skipnc
   929  0673  2E75               	goto	u1171
   930  0674  2E76               	goto	u1170
   931  0675                     u1171:
   932  0675  2EB1               	goto	l1365
   933  0676                     u1170:
   934  0676                     l1355:
   935                           
   936                           ;./uart.h: 35:     {;./uart.h: 36:         remainder = val % 10;
   937  0676  300A               	movlw	10
   938  0677  00F0               	movwf	___lwmod@divisor
   939  0678  3000               	movlw	0
   940  0679  00F1               	movwf	___lwmod@divisor+1
   941  067A  087A               	movf	tx_sn@val+1,w
   942  067B  00F3               	movwf	___lwmod@dividend+1
   943  067C  0879               	movf	tx_sn@val,w
   944  067D  00F2               	movwf	___lwmod@dividend
   945  067E  120A  118A  21C5  120A  118A  	fcall	___lwmod
   946  0683  0871               	movf	?___lwmod+1,w
   947  0684  1283               	bcf	3,5	;RP0=0, select bank0
   948  0685  1303               	bcf	3,6	;RP1=0, select bank0
   949  0686  00AD               	movwf	tx_sn@remainder+1
   950  0687  0870               	movf	?___lwmod,w
   951  0688  00AC               	movwf	tx_sn@remainder
   952  0689                     l1357:
   953                           
   954                           ;./uart.h: 37:         digit1 = remainder;
   955  0689  082D               	movf	tx_sn@remainder+1,w
   956  068A  00A7               	movwf	tx_sn@digit1+1
   957  068B  082C               	movf	tx_sn@remainder,w
   958  068C  00A6               	movwf	tx_sn@digit1
   959  068D                     l1359:
   960                           
   961                           ;./uart.h: 38:         digit2 = val/10;
   962  068D  300A               	movlw	10
   963  068E  00F0               	movwf	___lwdiv@divisor
   964  068F  3000               	movlw	0
   965  0690  00F1               	movwf	___lwdiv@divisor+1
   966  0691  087A               	movf	tx_sn@val+1,w
   967  0692  00F3               	movwf	___lwdiv@dividend+1
   968  0693  0879               	movf	tx_sn@val,w
   969  0694  00F2               	movwf	___lwdiv@dividend
   970  0695  120A  118A  227F  120A  118A  	fcall	___lwdiv
   971  069A  0871               	movf	?___lwdiv+1,w
   972  069B  1283               	bcf	3,5	;RP0=0, select bank0
   973  069C  1303               	bcf	3,6	;RP1=0, select bank0
   974  069D  00A9               	movwf	tx_sn@digit2+1
   975  069E  0870               	movf	?___lwdiv,w
   976  069F  00A8               	movwf	tx_sn@digit2
   977  06A0                     l1361:
   978                           
   979                           ;./uart.h: 39:         tx(digit2+0x30);
   980  06A0  0828               	movf	tx_sn@digit2,w
   981  06A1  3E30               	addlw	48
   982  06A2  120A  118A  2170  120A  118A  	fcall	_tx
   983  06A7                     l1363:
   984                           
   985                           ;./uart.h: 40:         tx(digit1+0x30);
   986  06A7  1283               	bcf	3,5	;RP0=0, select bank0
   987  06A8  1303               	bcf	3,6	;RP1=0, select bank0
   988  06A9  0826               	movf	tx_sn@digit1,w
   989  06AA  3E30               	addlw	48
   990  06AB  120A  118A  2170  120A  118A  	fcall	_tx
   991                           
   992                           ;./uart.h: 41:     }
   993  06B0  2FE4               	goto	l88
   994  06B1                     l1365:
   995  06B1  3000               	movlw	0
   996  06B2  027A               	subwf	tx_sn@val+1,w
   997  06B3  3064               	movlw	100
   998  06B4  1903               	skipnz
   999  06B5  0279               	subwf	tx_sn@val,w
  1000  06B6  1C03               	skipc
  1001  06B7  2EB9               	goto	u1181
  1002  06B8  2EBA               	goto	u1180
  1003  06B9                     u1181:
  1004  06B9  2F31               	goto	l1383
  1005  06BA                     u1180:
  1006  06BA                     l1367:
  1007  06BA  3003               	movlw	3
  1008  06BB  027A               	subwf	tx_sn@val+1,w
  1009  06BC  30E8               	movlw	232
  1010  06BD  1903               	skipnz
  1011  06BE  0279               	subwf	tx_sn@val,w
  1012  06BF  1803               	skipnc
  1013  06C0  2EC2               	goto	u1191
  1014  06C1  2EC3               	goto	u1190
  1015  06C2                     u1191:
  1016  06C2  2F31               	goto	l1383
  1017  06C3                     u1190:
  1018  06C3                     l1369:
  1019                           
  1020                           ;./uart.h: 43:     {;./uart.h: 44:         remainder = val % 10;
  1021  06C3  300A               	movlw	10
  1022  06C4  00F0               	movwf	___lwmod@divisor
  1023  06C5  3000               	movlw	0
  1024  06C6  00F1               	movwf	___lwmod@divisor+1
  1025  06C7  087A               	movf	tx_sn@val+1,w
  1026  06C8  00F3               	movwf	___lwmod@dividend+1
  1027  06C9  0879               	movf	tx_sn@val,w
  1028  06CA  00F2               	movwf	___lwmod@dividend
  1029  06CB  120A  118A  21C5  120A  118A  	fcall	___lwmod
  1030  06D0  0871               	movf	?___lwmod+1,w
  1031  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1032  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  1033  06D3  00AD               	movwf	tx_sn@remainder+1
  1034  06D4  0870               	movf	?___lwmod,w
  1035  06D5  00AC               	movwf	tx_sn@remainder
  1036                           
  1037                           ;./uart.h: 45:         result1 = val /10;
  1038  06D6  300A               	movlw	10
  1039  06D7  00F0               	movwf	___lwdiv@divisor
  1040  06D8  3000               	movlw	0
  1041  06D9  00F1               	movwf	___lwdiv@divisor+1
  1042  06DA  087A               	movf	tx_sn@val+1,w
  1043  06DB  00F3               	movwf	___lwdiv@dividend+1
  1044  06DC  0879               	movf	tx_sn@val,w
  1045  06DD  00F2               	movwf	___lwdiv@dividend
  1046  06DE  120A  118A  227F  120A  118A  	fcall	___lwdiv
  1047  06E3  0871               	movf	?___lwdiv+1,w
  1048  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1049  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1050  06E6  00AB               	movwf	tx_sn@result1+1
  1051  06E7  0870               	movf	?___lwdiv,w
  1052  06E8  00AA               	movwf	tx_sn@result1
  1053  06E9                     l1371:
  1054                           
  1055                           ;./uart.h: 46:         digit1 = remainder;
  1056  06E9  082D               	movf	tx_sn@remainder+1,w
  1057  06EA  00A7               	movwf	tx_sn@digit1+1
  1058  06EB  082C               	movf	tx_sn@remainder,w
  1059  06EC  00A6               	movwf	tx_sn@digit1
  1060  06ED                     l1373:
  1061                           
  1062                           ;./uart.h: 47:         remainder = result1%10;
  1063  06ED  300A               	movlw	10
  1064  06EE  00F0               	movwf	___awmod@divisor
  1065  06EF  3000               	movlw	0
  1066  06F0  00F1               	movwf	___awmod@divisor+1
  1067  06F1  082B               	movf	tx_sn@result1+1,w
  1068  06F2  00F3               	movwf	___awmod@dividend+1
  1069  06F3  082A               	movf	tx_sn@result1,w
  1070  06F4  00F2               	movwf	___awmod@dividend
  1071  06F5  120A  118A  2309  120A  118A  	fcall	___awmod
  1072  06FA  0871               	movf	?___awmod+1,w
  1073  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1074  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1075  06FD  00AD               	movwf	tx_sn@remainder+1
  1076  06FE  0870               	movf	?___awmod,w
  1077  06FF  00AC               	movwf	tx_sn@remainder
  1078                           
  1079                           ;./uart.h: 48:         digit2 = remainder;
  1080  0700  082D               	movf	tx_sn@remainder+1,w
  1081  0701  00A9               	movwf	tx_sn@digit2+1
  1082  0702  082C               	movf	tx_sn@remainder,w
  1083  0703  00A8               	movwf	tx_sn@digit2
  1084  0704                     l1375:
  1085                           
  1086                           ;./uart.h: 49:         digit3 = result1/10;
  1087  0704  300A               	movlw	10
  1088  0705  00F0               	movwf	___awdiv@divisor
  1089  0706  3000               	movlw	0
  1090  0707  00F1               	movwf	___awdiv@divisor+1
  1091  0708  082B               	movf	tx_sn@result1+1,w
  1092  0709  00F3               	movwf	___awdiv@dividend+1
  1093  070A  082A               	movf	tx_sn@result1,w
  1094  070B  00F2               	movwf	___awdiv@dividend
  1095  070C  120A  118A  23C6  120A  118A  	fcall	___awdiv
  1096  0711  0871               	movf	?___awdiv+1,w
  1097  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0714  00A5               	movwf	tx_sn@digit3+1
  1100  0715  0870               	movf	?___awdiv,w
  1101  0716  00A4               	movwf	tx_sn@digit3
  1102  0717                     l1377:
  1103                           
  1104                           ;./uart.h: 50:         tx(digit3+0x30);
  1105  0717  0824               	movf	tx_sn@digit3,w
  1106  0718  3E30               	addlw	48
  1107  0719  120A  118A  2170  120A  118A  	fcall	_tx
  1108  071E                     l1379:
  1109                           
  1110                           ;./uart.h: 51:         tx(digit2+0x30);
  1111  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1112  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0720  0828               	movf	tx_sn@digit2,w
  1114  0721  3E30               	addlw	48
  1115  0722  120A  118A  2170  120A  118A  	fcall	_tx
  1116  0727                     l1381:
  1117                           
  1118                           ;./uart.h: 52:         tx(digit1+0x30);
  1119  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0729  0826               	movf	tx_sn@digit1,w
  1122  072A  3E30               	addlw	48
  1123  072B  120A  118A  2170  120A  118A  	fcall	_tx
  1124                           
  1125                           ;./uart.h: 53:     }
  1126  0730  2FE4               	goto	l88
  1127  0731                     l1383:
  1128  0731  3003               	movlw	3
  1129  0732  027A               	subwf	tx_sn@val+1,w
  1130  0733  30E8               	movlw	232
  1131  0734  1903               	skipnz
  1132  0735  0279               	subwf	tx_sn@val,w
  1133  0736  1C03               	skipc
  1134  0737  2F39               	goto	u1201
  1135  0738  2F3A               	goto	u1200
  1136  0739                     u1201:
  1137  0739  2FE4               	goto	l84
  1138  073A                     u1200:
  1139  073A                     l1385:
  1140  073A  3027               	movlw	39
  1141  073B  027A               	subwf	tx_sn@val+1,w
  1142  073C  300F               	movlw	15
  1143  073D  1903               	skipnz
  1144  073E  0279               	subwf	tx_sn@val,w
  1145  073F  1803               	skipnc
  1146  0740  2F42               	goto	u1211
  1147  0741  2F43               	goto	u1210
  1148  0742                     u1211:
  1149  0742  2FE4               	goto	l84
  1150  0743                     u1210:
  1151  0743                     l1387:
  1152                           
  1153                           ;./uart.h: 55:     {;./uart.h: 56:         remainder = val % 10;
  1154  0743  300A               	movlw	10
  1155  0744  00F0               	movwf	___lwmod@divisor
  1156  0745  3000               	movlw	0
  1157  0746  00F1               	movwf	___lwmod@divisor+1
  1158  0747  087A               	movf	tx_sn@val+1,w
  1159  0748  00F3               	movwf	___lwmod@dividend+1
  1160  0749  0879               	movf	tx_sn@val,w
  1161  074A  00F2               	movwf	___lwmod@dividend
  1162  074B  120A  118A  21C5  120A  118A  	fcall	___lwmod
  1163  0750  0871               	movf	?___lwmod+1,w
  1164  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0753  00AD               	movwf	tx_sn@remainder+1
  1167  0754  0870               	movf	?___lwmod,w
  1168  0755  00AC               	movwf	tx_sn@remainder
  1169                           
  1170                           ;./uart.h: 57:         result1 = val /10;
  1171  0756  300A               	movlw	10
  1172  0757  00F0               	movwf	___lwdiv@divisor
  1173  0758  3000               	movlw	0
  1174  0759  00F1               	movwf	___lwdiv@divisor+1
  1175  075A  087A               	movf	tx_sn@val+1,w
  1176  075B  00F3               	movwf	___lwdiv@dividend+1
  1177  075C  0879               	movf	tx_sn@val,w
  1178  075D  00F2               	movwf	___lwdiv@dividend
  1179  075E  120A  118A  227F  120A  118A  	fcall	___lwdiv
  1180  0763  0871               	movf	?___lwdiv+1,w
  1181  0764  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0765  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0766  00AB               	movwf	tx_sn@result1+1
  1184  0767  0870               	movf	?___lwdiv,w
  1185  0768  00AA               	movwf	tx_sn@result1
  1186  0769                     l1389:
  1187                           
  1188                           ;./uart.h: 58:         digit1 = remainder;
  1189  0769  082D               	movf	tx_sn@remainder+1,w
  1190  076A  00A7               	movwf	tx_sn@digit1+1
  1191  076B  082C               	movf	tx_sn@remainder,w
  1192  076C  00A6               	movwf	tx_sn@digit1
  1193  076D                     l1391:
  1194                           
  1195                           ;./uart.h: 59:         remainder = result1%10;
  1196  076D  300A               	movlw	10
  1197  076E  00F0               	movwf	___awmod@divisor
  1198  076F  3000               	movlw	0
  1199  0770  00F1               	movwf	___awmod@divisor+1
  1200  0771  082B               	movf	tx_sn@result1+1,w
  1201  0772  00F3               	movwf	___awmod@dividend+1
  1202  0773  082A               	movf	tx_sn@result1,w
  1203  0774  00F2               	movwf	___awmod@dividend
  1204  0775  120A  118A  2309  120A  118A  	fcall	___awmod
  1205  077A  0871               	movf	?___awmod+1,w
  1206  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1207  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1208  077D  00AD               	movwf	tx_sn@remainder+1
  1209  077E  0870               	movf	?___awmod,w
  1210  077F  00AC               	movwf	tx_sn@remainder
  1211                           
  1212                           ;./uart.h: 60:         digit2 = remainder;
  1213  0780  082D               	movf	tx_sn@remainder+1,w
  1214  0781  00A9               	movwf	tx_sn@digit2+1
  1215  0782  082C               	movf	tx_sn@remainder,w
  1216  0783  00A8               	movwf	tx_sn@digit2
  1217  0784                     l1393:
  1218                           
  1219                           ;./uart.h: 61:         result = result1/10;
  1220  0784  300A               	movlw	10
  1221  0785  00F0               	movwf	___awdiv@divisor
  1222  0786  3000               	movlw	0
  1223  0787  00F1               	movwf	___awdiv@divisor+1
  1224  0788  082B               	movf	tx_sn@result1+1,w
  1225  0789  00F3               	movwf	___awdiv@dividend+1
  1226  078A  082A               	movf	tx_sn@result1,w
  1227  078B  00F2               	movwf	___awdiv@dividend
  1228  078C  120A  118A  23C6  120A  118A  	fcall	___awdiv
  1229  0791  0871               	movf	?___awdiv+1,w
  1230  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0794  00A3               	movwf	tx_sn@result+1
  1233  0795  0870               	movf	?___awdiv,w
  1234  0796  00A2               	movwf	tx_sn@result
  1235  0797                     l1395:
  1236                           
  1237                           ;./uart.h: 62:         remainder = result%10;
  1238  0797  300A               	movlw	10
  1239  0798  00F0               	movwf	___awmod@divisor
  1240  0799  3000               	movlw	0
  1241  079A  00F1               	movwf	___awmod@divisor+1
  1242  079B  0823               	movf	tx_sn@result+1,w
  1243  079C  00F3               	movwf	___awmod@dividend+1
  1244  079D  0822               	movf	tx_sn@result,w
  1245  079E  00F2               	movwf	___awmod@dividend
  1246  079F  120A  118A  2309  120A  118A  	fcall	___awmod
  1247  07A4  0871               	movf	?___awmod+1,w
  1248  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1249  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1250  07A7  00AD               	movwf	tx_sn@remainder+1
  1251  07A8  0870               	movf	?___awmod,w
  1252  07A9  00AC               	movwf	tx_sn@remainder
  1253                           
  1254                           ;./uart.h: 63:         digit3=remainder;
  1255  07AA  082D               	movf	tx_sn@remainder+1,w
  1256  07AB  00A5               	movwf	tx_sn@digit3+1
  1257  07AC  082C               	movf	tx_sn@remainder,w
  1258  07AD  00A4               	movwf	tx_sn@digit3
  1259  07AE                     l1397:
  1260                           
  1261                           ;./uart.h: 64:         digit4 = result/10;
  1262  07AE  300A               	movlw	10
  1263  07AF  00F0               	movwf	___awdiv@divisor
  1264  07B0  3000               	movlw	0
  1265  07B1  00F1               	movwf	___awdiv@divisor+1
  1266  07B2  0823               	movf	tx_sn@result+1,w
  1267  07B3  00F3               	movwf	___awdiv@dividend+1
  1268  07B4  0822               	movf	tx_sn@result,w
  1269  07B5  00F2               	movwf	___awdiv@dividend
  1270  07B6  120A  118A  23C6  120A  118A  	fcall	___awdiv
  1271  07BB  0871               	movf	?___awdiv+1,w
  1272  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1273  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1274  07BE  00A1               	movwf	tx_sn@digit4+1
  1275  07BF  0870               	movf	?___awdiv,w
  1276  07C0  00A0               	movwf	tx_sn@digit4
  1277  07C1                     l1399:
  1278                           
  1279                           ;./uart.h: 65:         tx(digit4+0x30);
  1280  07C1  0820               	movf	tx_sn@digit4,w
  1281  07C2  3E30               	addlw	48
  1282  07C3  120A  118A  2170  120A  118A  	fcall	_tx
  1283  07C8                     l1401:
  1284                           
  1285                           ;./uart.h: 66:         tx(digit3+0x30);
  1286  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1287  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1288  07CA  0824               	movf	tx_sn@digit3,w
  1289  07CB  3E30               	addlw	48
  1290  07CC  120A  118A  2170  120A  118A  	fcall	_tx
  1291  07D1                     l1403:
  1292                           
  1293                           ;./uart.h: 67:         tx(digit2+0x30);
  1294  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  1295  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  1296  07D3  0828               	movf	tx_sn@digit2,w
  1297  07D4  3E30               	addlw	48
  1298  07D5  120A  118A  2170  120A  118A  	fcall	_tx
  1299  07DA                     l1405:
  1300                           
  1301                           ;./uart.h: 68:         tx(digit1+0x30);
  1302  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1303  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1304  07DC  0826               	movf	tx_sn@digit1,w
  1305  07DD  3E30               	addlw	48
  1306  07DE  120A  118A  2170  120A  118A  	fcall	_tx
  1307  07E3  2FE4               	goto	l88
  1308  07E4                     l84:
  1309  07E4                     l88:
  1310  07E4  0008               	return
  1311  07E5                     __end_of_tx_sn:
  1312                           
  1313                           	psect	text2
  1314  0170                     __ptext2:	
  1315 ;; *************** function _tx *****************
  1316 ;; Defined at:
  1317 ;;		line 14 in file "./uart.h"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  a               1    wreg     unsigned char 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  a               1    0[COMMON] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      unsigned char 
  1324 ;; Registers used:
  1325 ;;		wreg
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         0       0       0       0       0
  1332 ;;      Locals:         1       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0
  1334 ;;      Totals:         1       0       0       0       0
  1335 ;;Total ram usage:        1 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_tx_sn
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _tx
  1347  0170                     _tx:
  1348                           
  1349                           ;incstack = 0
  1350                           ; Regs used in _tx: [wreg]
  1351                           ;tx@a stored from wreg
  1352  0170  00F0               	movwf	tx@a
  1353  0171                     l1131:
  1354                           
  1355                           ;./uart.h: 14: unsigned char tx(unsigned char a);./uart.h: 15: {;./uart.h: 16:  TXREG=a;
  1356  0171  0870               	movf	tx@a,w
  1357  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0174  0099               	movwf	25	;volatile
  1360  0175                     l69:	
  1361                           ;./uart.h: 17:  while(!TXIF);
  1362                           
  1363  0175  1E0C               	btfss	12,4	;volatile
  1364  0176  2978               	goto	u671
  1365  0177  2979               	goto	u670
  1366  0178                     u671:
  1367  0178  2975               	goto	l69
  1368  0179                     u670:
  1369  0179                     l71:
  1370                           
  1371                           ;./uart.h: 18:  TXIF = 0;
  1372  0179  120C               	bcf	12,4	;volatile
  1373  017A                     l72:
  1374  017A  0008               	return
  1375  017B                     __end_of_tx:
  1376                           
  1377                           	psect	text3
  1378  0309                     __ptext3:	
  1379 ;; *************** function ___awmod *****************
  1380 ;; Defined at:
  1381 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  divisor         2    0[COMMON] int 
  1384 ;;  dividend        2    2[COMMON] int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  sign            1    6[COMMON] unsigned char 
  1387 ;;  counter         1    5[COMMON] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  2    0[COMMON] int 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         4       0       0       0       0
  1398 ;;      Locals:         2       0       0       0       0
  1399 ;;      Temps:          1       0       0       0       0
  1400 ;;      Totals:         7       0       0       0       0
  1401 ;;Total ram usage:        7 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_tx_sn
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function ___awmod
  1412  0309                     ___awmod:
  1413  0309                     l1231:	
  1414                           ;incstack = 0
  1415                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1416                           
  1417  0309  01F6               	clrf	___awmod@sign
  1418  030A                     l1233:
  1419  030A  1FF3               	btfss	___awmod@dividend+1,7
  1420  030B  2B0D               	goto	u931
  1421  030C  2B0E               	goto	u930
  1422  030D                     u931:
  1423  030D  2B15               	goto	l1239
  1424  030E                     u930:
  1425  030E                     l1235:
  1426  030E  09F2               	comf	___awmod@dividend,f
  1427  030F  09F3               	comf	___awmod@dividend+1,f
  1428  0310  0AF2               	incf	___awmod@dividend,f
  1429  0311  1903               	skipnz
  1430  0312  0AF3               	incf	___awmod@dividend+1,f
  1431  0313                     l1237:
  1432  0313  01F6               	clrf	___awmod@sign
  1433  0314  0AF6               	incf	___awmod@sign,f
  1434  0315                     l1239:
  1435  0315  1FF1               	btfss	___awmod@divisor+1,7
  1436  0316  2B18               	goto	u941
  1437  0317  2B19               	goto	u940
  1438  0318                     u941:
  1439  0318  2B1E               	goto	l1243
  1440  0319                     u940:
  1441  0319                     l1241:
  1442  0319  09F0               	comf	___awmod@divisor,f
  1443  031A  09F1               	comf	___awmod@divisor+1,f
  1444  031B  0AF0               	incf	___awmod@divisor,f
  1445  031C  1903               	skipnz
  1446  031D  0AF1               	incf	___awmod@divisor+1,f
  1447  031E                     l1243:
  1448  031E  0870               	movf	___awmod@divisor,w
  1449  031F  0471               	iorwf	___awmod@divisor+1,w
  1450  0320  1903               	btfsc	3,2
  1451  0321  2B23               	goto	u951
  1452  0322  2B24               	goto	u950
  1453  0323                     u951:
  1454  0323  2B53               	goto	l1261
  1455  0324                     u950:
  1456  0324                     l1245:
  1457  0324  01F5               	clrf	___awmod@counter
  1458  0325  0AF5               	incf	___awmod@counter,f
  1459  0326  2B32               	goto	l1251
  1460  0327                     l1247:
  1461  0327  3001               	movlw	1
  1462  0328                     u965:
  1463  0328  1003               	clrc
  1464  0329  0DF0               	rlf	___awmod@divisor,f
  1465  032A  0DF1               	rlf	___awmod@divisor+1,f
  1466  032B  3EFF               	addlw	-1
  1467  032C  1D03               	skipz
  1468  032D  2B28               	goto	u965
  1469  032E                     l1249:
  1470  032E  3001               	movlw	1
  1471  032F  00F4               	movwf	??___awmod
  1472  0330  0874               	movf	??___awmod,w
  1473  0331  07F5               	addwf	___awmod@counter,f
  1474  0332                     l1251:
  1475  0332  1FF1               	btfss	___awmod@divisor+1,7
  1476  0333  2B35               	goto	u971
  1477  0334  2B36               	goto	u970
  1478  0335                     u971:
  1479  0335  2B27               	goto	l1247
  1480  0336                     u970:
  1481  0336                     l1253:
  1482  0336  0871               	movf	___awmod@divisor+1,w
  1483  0337  0273               	subwf	___awmod@dividend+1,w
  1484  0338  1D03               	skipz
  1485  0339  2B3C               	goto	u985
  1486  033A  0870               	movf	___awmod@divisor,w
  1487  033B  0272               	subwf	___awmod@dividend,w
  1488  033C                     u985:
  1489  033C  1C03               	skipc
  1490  033D  2B3F               	goto	u981
  1491  033E  2B40               	goto	u980
  1492  033F                     u981:
  1493  033F  2B46               	goto	l1257
  1494  0340                     u980:
  1495  0340                     l1255:
  1496  0340  0870               	movf	___awmod@divisor,w
  1497  0341  02F2               	subwf	___awmod@dividend,f
  1498  0342  0871               	movf	___awmod@divisor+1,w
  1499  0343  1C03               	skipc
  1500  0344  03F3               	decf	___awmod@dividend+1,f
  1501  0345  02F3               	subwf	___awmod@dividend+1,f
  1502  0346                     l1257:
  1503  0346  3001               	movlw	1
  1504  0347                     u995:
  1505  0347  1003               	clrc
  1506  0348  0CF1               	rrf	___awmod@divisor+1,f
  1507  0349  0CF0               	rrf	___awmod@divisor,f
  1508  034A  3EFF               	addlw	-1
  1509  034B  1D03               	skipz
  1510  034C  2B47               	goto	u995
  1511  034D                     l1259:
  1512  034D  3001               	movlw	1
  1513  034E  02F5               	subwf	___awmod@counter,f
  1514  034F  1D03               	btfss	3,2
  1515  0350  2B52               	goto	u1001
  1516  0351  2B53               	goto	u1000
  1517  0352                     u1001:
  1518  0352  2B36               	goto	l1253
  1519  0353                     u1000:
  1520  0353                     l1261:
  1521  0353  0876               	movf	___awmod@sign,w
  1522  0354  1903               	btfsc	3,2
  1523  0355  2B57               	goto	u1011
  1524  0356  2B58               	goto	u1010
  1525  0357                     u1011:
  1526  0357  2B5D               	goto	l1265
  1527  0358                     u1010:
  1528  0358                     l1263:
  1529  0358  09F2               	comf	___awmod@dividend,f
  1530  0359  09F3               	comf	___awmod@dividend+1,f
  1531  035A  0AF2               	incf	___awmod@dividend,f
  1532  035B  1903               	skipnz
  1533  035C  0AF3               	incf	___awmod@dividend+1,f
  1534  035D                     l1265:
  1535  035D  0873               	movf	___awmod@dividend+1,w
  1536  035E  00F1               	movwf	?___awmod+1
  1537  035F  0872               	movf	___awmod@dividend,w
  1538  0360  00F0               	movwf	?___awmod
  1539  0361                     l365:
  1540  0361  0008               	return
  1541  0362                     __end_of___awmod:
  1542                           
  1543                           	psect	text4
  1544  03C6                     __ptext4:	
  1545 ;; *************** function ___awdiv *****************
  1546 ;; Defined at:
  1547 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  divisor         2    0[COMMON] int 
  1550 ;;  dividend        2    2[COMMON] int 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  quotient        2    7[COMMON] int 
  1553 ;;  sign            1    6[COMMON] unsigned char 
  1554 ;;  counter         1    5[COMMON] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  2    0[COMMON] int 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         4       0       0       0       0
  1565 ;;      Locals:         4       0       0       0       0
  1566 ;;      Temps:          1       0       0       0       0
  1567 ;;      Totals:         9       0       0       0       0
  1568 ;;Total ram usage:        9 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_tx_sn
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function ___awdiv
  1579  03C6                     ___awdiv:
  1580  03C6                     l1187:	
  1581                           ;incstack = 0
  1582                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1583                           
  1584  03C6  01F6               	clrf	___awdiv@sign
  1585  03C7                     l1189:
  1586  03C7  1FF1               	btfss	___awdiv@divisor+1,7
  1587  03C8  2BCA               	goto	u831
  1588  03C9  2BCB               	goto	u830
  1589  03CA                     u831:
  1590  03CA  2BD2               	goto	l1195
  1591  03CB                     u830:
  1592  03CB                     l1191:
  1593  03CB  09F0               	comf	___awdiv@divisor,f
  1594  03CC  09F1               	comf	___awdiv@divisor+1,f
  1595  03CD  0AF0               	incf	___awdiv@divisor,f
  1596  03CE  1903               	skipnz
  1597  03CF  0AF1               	incf	___awdiv@divisor+1,f
  1598  03D0                     l1193:
  1599  03D0  01F6               	clrf	___awdiv@sign
  1600  03D1  0AF6               	incf	___awdiv@sign,f
  1601  03D2                     l1195:
  1602  03D2  1FF3               	btfss	___awdiv@dividend+1,7
  1603  03D3  2BD5               	goto	u841
  1604  03D4  2BD6               	goto	u840
  1605  03D5                     u841:
  1606  03D5  2BDF               	goto	l1201
  1607  03D6                     u840:
  1608  03D6                     l1197:
  1609  03D6  09F2               	comf	___awdiv@dividend,f
  1610  03D7  09F3               	comf	___awdiv@dividend+1,f
  1611  03D8  0AF2               	incf	___awdiv@dividend,f
  1612  03D9  1903               	skipnz
  1613  03DA  0AF3               	incf	___awdiv@dividend+1,f
  1614  03DB                     l1199:
  1615  03DB  3001               	movlw	1
  1616  03DC  00F4               	movwf	??___awdiv
  1617  03DD  0874               	movf	??___awdiv,w
  1618  03DE  06F6               	xorwf	___awdiv@sign,f
  1619  03DF                     l1201:
  1620  03DF  01F7               	clrf	___awdiv@quotient
  1621  03E0  01F8               	clrf	___awdiv@quotient+1
  1622  03E1                     l1203:
  1623  03E1  0870               	movf	___awdiv@divisor,w
  1624  03E2  0471               	iorwf	___awdiv@divisor+1,w
  1625  03E3  1903               	btfsc	3,2
  1626  03E4  2BE6               	goto	u851
  1627  03E5  2BE7               	goto	u850
  1628  03E6                     u851:
  1629  03E6  2C1E               	goto	l1223
  1630  03E7                     u850:
  1631  03E7                     l1205:
  1632  03E7  01F5               	clrf	___awdiv@counter
  1633  03E8  0AF5               	incf	___awdiv@counter,f
  1634  03E9  2BF5               	goto	l1211
  1635  03EA                     l1207:
  1636  03EA  3001               	movlw	1
  1637  03EB                     u865:
  1638  03EB  1003               	clrc
  1639  03EC  0DF0               	rlf	___awdiv@divisor,f
  1640  03ED  0DF1               	rlf	___awdiv@divisor+1,f
  1641  03EE  3EFF               	addlw	-1
  1642  03EF  1D03               	skipz
  1643  03F0  2BEB               	goto	u865
  1644  03F1                     l1209:
  1645  03F1  3001               	movlw	1
  1646  03F2  00F4               	movwf	??___awdiv
  1647  03F3  0874               	movf	??___awdiv,w
  1648  03F4  07F5               	addwf	___awdiv@counter,f
  1649  03F5                     l1211:
  1650  03F5  1FF1               	btfss	___awdiv@divisor+1,7
  1651  03F6  2BF8               	goto	u871
  1652  03F7  2BF9               	goto	u870
  1653  03F8                     u871:
  1654  03F8  2BEA               	goto	l1207
  1655  03F9                     u870:
  1656  03F9                     l1213:
  1657  03F9  3001               	movlw	1
  1658  03FA                     u885:
  1659  03FA  1003               	clrc
  1660  03FB  0DF7               	rlf	___awdiv@quotient,f
  1661  03FC  0DF8               	rlf	___awdiv@quotient+1,f
  1662  03FD  3EFF               	addlw	-1
  1663  03FE  1D03               	skipz
  1664  03FF  2BFA               	goto	u885
  1665  0400  0871               	movf	___awdiv@divisor+1,w
  1666  0401  0273               	subwf	___awdiv@dividend+1,w
  1667  0402  1D03               	skipz
  1668  0403  2C06               	goto	u895
  1669  0404  0870               	movf	___awdiv@divisor,w
  1670  0405  0272               	subwf	___awdiv@dividend,w
  1671  0406                     u895:
  1672  0406  1C03               	skipc
  1673  0407  2C09               	goto	u891
  1674  0408  2C0A               	goto	u890
  1675  0409                     u891:
  1676  0409  2C11               	goto	l1219
  1677  040A                     u890:
  1678  040A                     l1215:
  1679  040A  0870               	movf	___awdiv@divisor,w
  1680  040B  02F2               	subwf	___awdiv@dividend,f
  1681  040C  0871               	movf	___awdiv@divisor+1,w
  1682  040D  1C03               	skipc
  1683  040E  03F3               	decf	___awdiv@dividend+1,f
  1684  040F  02F3               	subwf	___awdiv@dividend+1,f
  1685  0410                     l1217:
  1686  0410  1477               	bsf	___awdiv@quotient,0
  1687  0411                     l1219:
  1688  0411  3001               	movlw	1
  1689  0412                     u905:
  1690  0412  1003               	clrc
  1691  0413  0CF1               	rrf	___awdiv@divisor+1,f
  1692  0414  0CF0               	rrf	___awdiv@divisor,f
  1693  0415  3EFF               	addlw	-1
  1694  0416  1D03               	skipz
  1695  0417  2C12               	goto	u905
  1696  0418                     l1221:
  1697  0418  3001               	movlw	1
  1698  0419  02F5               	subwf	___awdiv@counter,f
  1699  041A  1D03               	btfss	3,2
  1700  041B  2C1D               	goto	u911
  1701  041C  2C1E               	goto	u910
  1702  041D                     u911:
  1703  041D  2BF9               	goto	l1213
  1704  041E                     u910:
  1705  041E                     l1223:
  1706  041E  0876               	movf	___awdiv@sign,w
  1707  041F  1903               	btfsc	3,2
  1708  0420  2C22               	goto	u921
  1709  0421  2C23               	goto	u920
  1710  0422                     u921:
  1711  0422  2C28               	goto	l1227
  1712  0423                     u920:
  1713  0423                     l1225:
  1714  0423  09F7               	comf	___awdiv@quotient,f
  1715  0424  09F8               	comf	___awdiv@quotient+1,f
  1716  0425  0AF7               	incf	___awdiv@quotient,f
  1717  0426  1903               	skipnz
  1718  0427  0AF8               	incf	___awdiv@quotient+1,f
  1719  0428                     l1227:
  1720  0428  0878               	movf	___awdiv@quotient+1,w
  1721  0429  00F1               	movwf	?___awdiv+1
  1722  042A  0877               	movf	___awdiv@quotient,w
  1723  042B  00F0               	movwf	?___awdiv
  1724  042C                     l352:
  1725  042C  0008               	return
  1726  042D                     __end_of___awdiv:
  1727                           
  1728                           	psect	text5
  1729  017B                     __ptext5:	
  1730 ;; *************** function _ser_int *****************
  1731 ;; Defined at:
  1732 ;;		line 7 in file "./uart.h"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function _ser_int
  1761  017B                     _ser_int:
  1762  017B                     l1345:	
  1763                           ;incstack = 0
  1764                           ; Regs used in _ser_int: [wreg]
  1765                           
  1766                           
  1767                           ;./uart.h: 9:  TXSTA= 0x20;
  1768  017B  3020               	movlw	32
  1769  017C  1683               	bsf	3,5	;RP0=1, select bank1
  1770  017D  1303               	bcf	3,6	;RP1=0, select bank1
  1771  017E  0098               	movwf	24	;volatile
  1772                           
  1773                           ;./uart.h: 10:  RCSTA= 0b10010000;
  1774  017F  3090               	movlw	144
  1775  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1776  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1777  0182  0098               	movwf	24	;volatile
  1778                           
  1779                           ;./uart.h: 11:  SPBRG=31;
  1780  0183  301F               	movlw	31
  1781  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1782  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1783  0186  0099               	movwf	25	;volatile
  1784  0187                     l66:
  1785  0187  0008               	return
  1786  0188                     __end_of_ser_int:
  1787                           
  1788                           	psect	text6
  1789  04CA                     __ptext6:	
  1790 ;; *************** function _LCD_num *****************
  1791 ;; Defined at:
  1792 ;;		line 50 in file "./lcd4bit.h"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  val             4   14[BANK0 ] long 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  remainder       2   28[BANK0 ] unsigned int 
  1797 ;;  result1         2   26[BANK0 ] unsigned int 
  1798 ;;  result          2   24[BANK0 ] unsigned int 
  1799 ;;  digit3          2   22[BANK0 ] unsigned int 
  1800 ;;  digit2          2   20[BANK0 ] unsigned int 
  1801 ;;  digit1          2   18[BANK0 ] unsigned int 
  1802 ;;  calb_val        2    0        int 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0, pclath, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         0       4       0       0       0
  1813 ;;      Locals:         0      12       0       0       0
  1814 ;;      Temps:          0       0       0       0       0
  1815 ;;      Totals:         0      16       0       0       0
  1816 ;;Total ram usage:       16 bytes
  1817 ;; Hardware stack levels used: 1
  1818 ;; Hardware stack levels required when called: 1
  1819 ;; This function calls:
  1820 ;;		_LCD_Char
  1821 ;;		___aldiv
  1822 ;;		___lmul
  1823 ;;		___lwdiv
  1824 ;;		___lwmod
  1825 ;;		_intdigits_chardigits
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           
  1832                           ;psect for function _LCD_num
  1833  04CA                     _LCD_num:
  1834  04CA                     l1321:	
  1835                           ;incstack = 0
  1836                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  1837                           
  1838  04CA                     l1323:
  1839                           
  1840                           ;./lcd4bit.h: 53:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 54:     result1;;./lcd4bit.h: 55:     result = ((val*100)/calb_val);
  1841  04CA  3000               	movlw	0
  1842  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1843  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1844  04CD  00A3               	movwf	___aldiv@divisor+3
  1845  04CE  3000               	movlw	0
  1846  04CF  00A2               	movwf	___aldiv@divisor+2
  1847  04D0  3000               	movlw	0
  1848  04D1  00A1               	movwf	___aldiv@divisor+1
  1849  04D2  30C8               	movlw	200
  1850  04D3  00A0               	movwf	___aldiv@divisor
  1851  04D4  0831               	movf	LCD_num@val+3,w
  1852  04D5  00F3               	movwf	___lmul@multiplier+3
  1853  04D6  0830               	movf	LCD_num@val+2,w
  1854  04D7  00F2               	movwf	___lmul@multiplier+2
  1855  04D8  082F               	movf	LCD_num@val+1,w
  1856  04D9  00F1               	movwf	___lmul@multiplier+1
  1857  04DA  082E               	movf	LCD_num@val,w
  1858  04DB  00F0               	movwf	___lmul@multiplier
  1859  04DC  3000               	movlw	0
  1860  04DD  00F7               	movwf	___lmul@multiplicand+3
  1861  04DE  3000               	movlw	0
  1862  04DF  00F6               	movwf	___lmul@multiplicand+2
  1863  04E0  3000               	movlw	0
  1864  04E1  00F5               	movwf	___lmul@multiplicand+1
  1865  04E2  3064               	movlw	100
  1866  04E3  00F4               	movwf	___lmul@multiplicand
  1867  04E4  120A  118A  22C3  120A  118A  	fcall	___lmul
  1868  04E9  0873               	movf	?___lmul+3,w
  1869  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  1870  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  1871  04EC  00A7               	movwf	___aldiv@dividend+3
  1872  04ED  0872               	movf	?___lmul+2,w
  1873  04EE  00A6               	movwf	___aldiv@dividend+2
  1874  04EF  0871               	movf	?___lmul+1,w
  1875  04F0  00A5               	movwf	___aldiv@dividend+1
  1876  04F1  0870               	movf	?___lmul,w
  1877  04F2  00A4               	movwf	___aldiv@dividend
  1878  04F3  120A  118A  242D  120A  118A  	fcall	___aldiv
  1879  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1880  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1881  04FA  0821               	movf	?___aldiv+1,w
  1882  04FB  00B9               	movwf	LCD_num@result+1
  1883  04FC  0820               	movf	?___aldiv,w
  1884  04FD  00B8               	movwf	LCD_num@result
  1885  04FE                     l1325:
  1886                           
  1887                           ;./lcd4bit.h: 56:     remainder = result% 10;
  1888  04FE  300A               	movlw	10
  1889  04FF  00F0               	movwf	___lwmod@divisor
  1890  0500  3000               	movlw	0
  1891  0501  00F1               	movwf	___lwmod@divisor+1
  1892  0502  0839               	movf	LCD_num@result+1,w
  1893  0503  00F3               	movwf	___lwmod@dividend+1
  1894  0504  0838               	movf	LCD_num@result,w
  1895  0505  00F2               	movwf	___lwmod@dividend
  1896  0506  120A  118A  21C5  120A  118A  	fcall	___lwmod
  1897  050B  0871               	movf	?___lwmod+1,w
  1898  050C  1283               	bcf	3,5	;RP0=0, select bank0
  1899  050D  1303               	bcf	3,6	;RP1=0, select bank0
  1900  050E  00BD               	movwf	LCD_num@remainder+1
  1901  050F  0870               	movf	?___lwmod,w
  1902  0510  00BC               	movwf	LCD_num@remainder
  1903  0511                     l1327:
  1904                           
  1905                           ;./lcd4bit.h: 57:     result1 = result /10;
  1906  0511  300A               	movlw	10
  1907  0512  00F0               	movwf	___lwdiv@divisor
  1908  0513  3000               	movlw	0
  1909  0514  00F1               	movwf	___lwdiv@divisor+1
  1910  0515  0839               	movf	LCD_num@result+1,w
  1911  0516  00F3               	movwf	___lwdiv@dividend+1
  1912  0517  0838               	movf	LCD_num@result,w
  1913  0518  00F2               	movwf	___lwdiv@dividend
  1914  0519  120A  118A  227F  120A  118A  	fcall	___lwdiv
  1915  051E  0871               	movf	?___lwdiv+1,w
  1916  051F  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0520  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0521  00BB               	movwf	LCD_num@result1+1
  1919  0522  0870               	movf	?___lwdiv,w
  1920  0523  00BA               	movwf	LCD_num@result1
  1921  0524                     l1329:
  1922                           
  1923                           ;./lcd4bit.h: 58:     digit1 = remainder;
  1924  0524  083D               	movf	LCD_num@remainder+1,w
  1925  0525  00B3               	movwf	LCD_num@digit1+1
  1926  0526  083C               	movf	LCD_num@remainder,w
  1927  0527  00B2               	movwf	LCD_num@digit1
  1928                           
  1929                           ;./lcd4bit.h: 59:     remainder = result1%10;
  1930  0528  300A               	movlw	10
  1931  0529  00F0               	movwf	___lwmod@divisor
  1932  052A  3000               	movlw	0
  1933  052B  00F1               	movwf	___lwmod@divisor+1
  1934  052C  083B               	movf	LCD_num@result1+1,w
  1935  052D  00F3               	movwf	___lwmod@dividend+1
  1936  052E  083A               	movf	LCD_num@result1,w
  1937  052F  00F2               	movwf	___lwmod@dividend
  1938  0530  120A  118A  21C5  120A  118A  	fcall	___lwmod
  1939  0535  0871               	movf	?___lwmod+1,w
  1940  0536  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0537  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0538  00BD               	movwf	LCD_num@remainder+1
  1943  0539  0870               	movf	?___lwmod,w
  1944  053A  00BC               	movwf	LCD_num@remainder
  1945  053B                     l1331:
  1946                           
  1947                           ;./lcd4bit.h: 60:     digit2 = remainder;
  1948  053B  083D               	movf	LCD_num@remainder+1,w
  1949  053C  00B5               	movwf	LCD_num@digit2+1
  1950  053D  083C               	movf	LCD_num@remainder,w
  1951  053E  00B4               	movwf	LCD_num@digit2
  1952  053F                     l1333:
  1953                           
  1954                           ;./lcd4bit.h: 61:     remainder = (result1/10);
  1955  053F  300A               	movlw	10
  1956  0540  00F0               	movwf	___lwdiv@divisor
  1957  0541  3000               	movlw	0
  1958  0542  00F1               	movwf	___lwdiv@divisor+1
  1959  0543  083B               	movf	LCD_num@result1+1,w
  1960  0544  00F3               	movwf	___lwdiv@dividend+1
  1961  0545  083A               	movf	LCD_num@result1,w
  1962  0546  00F2               	movwf	___lwdiv@dividend
  1963  0547  120A  118A  227F  120A  118A  	fcall	___lwdiv
  1964  054C  0871               	movf	?___lwdiv+1,w
  1965  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1966  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1967  054F  00BD               	movwf	LCD_num@remainder+1
  1968  0550  0870               	movf	?___lwdiv,w
  1969  0551  00BC               	movwf	LCD_num@remainder
  1970                           
  1971                           ;./lcd4bit.h: 62:     digit3=remainder;
  1972  0552  083D               	movf	LCD_num@remainder+1,w
  1973  0553  00B7               	movwf	LCD_num@digit3+1
  1974  0554  083C               	movf	LCD_num@remainder,w
  1975  0555  00B6               	movwf	LCD_num@digit3
  1976  0556                     l1335:
  1977                           
  1978                           ;./lcd4bit.h: 63:     LCD_Char(digit3+0x30);
  1979  0556  0836               	movf	LCD_num@digit3,w
  1980  0557  3E30               	addlw	48
  1981  0558  120A  118A  223F  120A  118A  	fcall	_LCD_Char
  1982  055D                     l1337:
  1983                           
  1984                           ;./lcd4bit.h: 64:     LCD_Char('.');
  1985  055D  302E               	movlw	46
  1986  055E  120A  118A  223F  120A  118A  	fcall	_LCD_Char
  1987  0563                     l1339:
  1988                           
  1989                           ;./lcd4bit.h: 65:     LCD_Char(digit2+0x30);
  1990  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0565  0834               	movf	LCD_num@digit2,w
  1993  0566  3E30               	addlw	48
  1994  0567  120A  118A  223F  120A  118A  	fcall	_LCD_Char
  1995  056C                     l1341:
  1996                           
  1997                           ;./lcd4bit.h: 66:     LCD_Char(digit1+0x30);
  1998  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1999  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2000  056E  0832               	movf	LCD_num@digit1,w
  2001  056F  3E30               	addlw	48
  2002  0570  120A  118A  223F  120A  118A  	fcall	_LCD_Char
  2003  0575                     l1343:
  2004                           
  2005                           ;./lcd4bit.h: 68:     intdigits_chardigits(digit3,digit2,digit1);
  2006  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2008  0577  0837               	movf	LCD_num@digit3+1,w
  2009  0578  00F1               	movwf	intdigits_chardigits@a+1
  2010  0579  0836               	movf	LCD_num@digit3,w
  2011  057A  00F0               	movwf	intdigits_chardigits@a
  2012  057B  0835               	movf	LCD_num@digit2+1,w
  2013  057C  00F3               	movwf	intdigits_chardigits@b+1
  2014  057D  0834               	movf	LCD_num@digit2,w
  2015  057E  00F2               	movwf	intdigits_chardigits@b
  2016  057F  0833               	movf	LCD_num@digit1+1,w
  2017  0580  00F5               	movwf	intdigits_chardigits@c+1
  2018  0581  0832               	movf	LCD_num@digit1,w
  2019  0582  00F4               	movwf	intdigits_chardigits@c
  2020  0583  120A  118A  2188  120A  118A  	fcall	_intdigits_chardigits
  2021  0588                     l54:
  2022  0588  0008               	return
  2023  0589                     __end_of_LCD_num:
  2024                           
  2025                           	psect	text7
  2026  0188                     __ptext7:	
  2027 ;; *************** function _intdigits_chardigits *****************
  2028 ;; Defined at:
  2029 ;;		line 78 in file "./lcd4bit.h"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  a               2    0[COMMON] unsigned int 
  2032 ;;  b               2    2[COMMON] unsigned int 
  2033 ;;  c               2    4[COMMON] unsigned int 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      unsigned char 
  2038 ;; Registers used:
  2039 ;;		wreg
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2045 ;;      Params:         6       0       0       0       0
  2046 ;;      Locals:         0       0       0       0       0
  2047 ;;      Temps:          1       0       0       0       0
  2048 ;;      Totals:         7       0       0       0       0
  2049 ;;Total ram usage:        7 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_LCD_num
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _intdigits_chardigits
  2060  0188                     _intdigits_chardigits:
  2061  0188                     l1129:	
  2062                           ;incstack = 0
  2063                           ; Regs used in _intdigits_chardigits: [wreg]
  2064                           
  2065                           
  2066                           ;./lcd4bit.h: 78: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 79: {;./lcd4bit.h: 80:     avv[0] = (unsigned char)a;
  2067  0188  0870               	movf	intdigits_chardigits@a,w
  2068  0189  00F6               	movwf	??_intdigits_chardigits
  2069  018A  0876               	movf	??_intdigits_chardigits,w
  2070  018B  1283               	bcf	3,5	;RP0=0, select bank0
  2071  018C  1303               	bcf	3,6	;RP1=0, select bank0
  2072  018D  00CB               	movwf	_avv
  2073                           
  2074                           ;./lcd4bit.h: 81:     avv[1] = (unsigned char)b;
  2075  018E  0872               	movf	intdigits_chardigits@b,w
  2076  018F  00F6               	movwf	??_intdigits_chardigits
  2077  0190  0876               	movf	??_intdigits_chardigits,w
  2078  0191  00CC               	movwf	_avv+1
  2079                           
  2080                           ;./lcd4bit.h: 82:     avv[2] = (unsigned char)c;
  2081  0192  0874               	movf	intdigits_chardigits@c,w
  2082  0193  00F6               	movwf	??_intdigits_chardigits
  2083  0194  0876               	movf	??_intdigits_chardigits,w
  2084  0195  00CD               	movwf	_avv+2
  2085  0196                     l63:
  2086  0196  0008               	return
  2087  0197                     __end_of_intdigits_chardigits:
  2088                           
  2089                           	psect	text8
  2090  01C5                     __ptext8:	
  2091 ;; *************** function ___lwmod *****************
  2092 ;; Defined at:
  2093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  divisor         2    0[COMMON] unsigned int 
  2096 ;;  dividend        2    2[COMMON] unsigned int 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  counter         1    5[COMMON] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  2    0[COMMON] unsigned int 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         4       0       0       0       0
  2109 ;;      Locals:         1       0       0       0       0
  2110 ;;      Temps:          1       0       0       0       0
  2111 ;;      Totals:         6       0       0       0       0
  2112 ;;Total ram usage:        6 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_LCD_num
  2118 ;;		_tx_sn
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function ___lwmod
  2124  01C5                     ___lwmod:
  2125  01C5                     l1295:	
  2126                           ;incstack = 0
  2127                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2128                           
  2129  01C5  0870               	movf	___lwmod@divisor,w
  2130  01C6  0471               	iorwf	___lwmod@divisor+1,w
  2131  01C7  1903               	btfsc	3,2
  2132  01C8  29CA               	goto	u1091
  2133  01C9  29CB               	goto	u1090
  2134  01CA                     u1091:
  2135  01CA  29FA               	goto	l1313
  2136  01CB                     u1090:
  2137  01CB                     l1297:
  2138  01CB  01F5               	clrf	___lwmod@counter
  2139  01CC  0AF5               	incf	___lwmod@counter,f
  2140  01CD  29D9               	goto	l1303
  2141  01CE                     l1299:
  2142  01CE  3001               	movlw	1
  2143  01CF                     u1105:
  2144  01CF  1003               	clrc
  2145  01D0  0DF0               	rlf	___lwmod@divisor,f
  2146  01D1  0DF1               	rlf	___lwmod@divisor+1,f
  2147  01D2  3EFF               	addlw	-1
  2148  01D3  1D03               	skipz
  2149  01D4  29CF               	goto	u1105
  2150  01D5                     l1301:
  2151  01D5  3001               	movlw	1
  2152  01D6  00F4               	movwf	??___lwmod
  2153  01D7  0874               	movf	??___lwmod,w
  2154  01D8  07F5               	addwf	___lwmod@counter,f
  2155  01D9                     l1303:
  2156  01D9  1FF1               	btfss	___lwmod@divisor+1,7
  2157  01DA  29DC               	goto	u1111
  2158  01DB  29DD               	goto	u1110
  2159  01DC                     u1111:
  2160  01DC  29CE               	goto	l1299
  2161  01DD                     u1110:
  2162  01DD                     l1305:
  2163  01DD  0871               	movf	___lwmod@divisor+1,w
  2164  01DE  0273               	subwf	___lwmod@dividend+1,w
  2165  01DF  1D03               	skipz
  2166  01E0  29E3               	goto	u1125
  2167  01E1  0870               	movf	___lwmod@divisor,w
  2168  01E2  0272               	subwf	___lwmod@dividend,w
  2169  01E3                     u1125:
  2170  01E3  1C03               	skipc
  2171  01E4  29E6               	goto	u1121
  2172  01E5  29E7               	goto	u1120
  2173  01E6                     u1121:
  2174  01E6  29ED               	goto	l1309
  2175  01E7                     u1120:
  2176  01E7                     l1307:
  2177  01E7  0870               	movf	___lwmod@divisor,w
  2178  01E8  02F2               	subwf	___lwmod@dividend,f
  2179  01E9  0871               	movf	___lwmod@divisor+1,w
  2180  01EA  1C03               	skipc
  2181  01EB  03F3               	decf	___lwmod@dividend+1,f
  2182  01EC  02F3               	subwf	___lwmod@dividend+1,f
  2183  01ED                     l1309:
  2184  01ED  3001               	movlw	1
  2185  01EE                     u1135:
  2186  01EE  1003               	clrc
  2187  01EF  0CF1               	rrf	___lwmod@divisor+1,f
  2188  01F0  0CF0               	rrf	___lwmod@divisor,f
  2189  01F1  3EFF               	addlw	-1
  2190  01F2  1D03               	skipz
  2191  01F3  29EE               	goto	u1135
  2192  01F4                     l1311:
  2193  01F4  3001               	movlw	1
  2194  01F5  02F5               	subwf	___lwmod@counter,f
  2195  01F6  1D03               	btfss	3,2
  2196  01F7  29F9               	goto	u1141
  2197  01F8  29FA               	goto	u1140
  2198  01F9                     u1141:
  2199  01F9  29DD               	goto	l1305
  2200  01FA                     u1140:
  2201  01FA                     l1313:
  2202  01FA  0873               	movf	___lwmod@dividend+1,w
  2203  01FB  00F1               	movwf	?___lwmod+1
  2204  01FC  0872               	movf	___lwmod@dividend,w
  2205  01FD  00F0               	movwf	?___lwmod
  2206  01FE                     l481:
  2207  01FE  0008               	return
  2208  01FF                     __end_of___lwmod:
  2209                           
  2210                           	psect	text9
  2211  027F                     __ptext9:	
  2212 ;; *************** function ___lwdiv *****************
  2213 ;; Defined at:
  2214 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  divisor         2    0[COMMON] unsigned int 
  2217 ;;  dividend        2    2[COMMON] unsigned int 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  quotient        2    5[COMMON] unsigned int 
  2220 ;;  counter         1    7[COMMON] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  2    0[COMMON] unsigned int 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2230 ;;      Params:         4       0       0       0       0
  2231 ;;      Locals:         3       0       0       0       0
  2232 ;;      Temps:          1       0       0       0       0
  2233 ;;      Totals:         8       0       0       0       0
  2234 ;;Total ram usage:        8 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_LCD_num
  2240 ;;		_tx_sn
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function ___lwdiv
  2246  027F                     ___lwdiv:
  2247  027F                     l1269:	
  2248                           ;incstack = 0
  2249                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2250                           
  2251  027F  01F5               	clrf	___lwdiv@quotient
  2252  0280  01F6               	clrf	___lwdiv@quotient+1
  2253  0281                     l1271:
  2254  0281  0870               	movf	___lwdiv@divisor,w
  2255  0282  0471               	iorwf	___lwdiv@divisor+1,w
  2256  0283  1903               	btfsc	3,2
  2257  0284  2A86               	goto	u1021
  2258  0285  2A87               	goto	u1020
  2259  0286                     u1021:
  2260  0286  2ABE               	goto	l1291
  2261  0287                     u1020:
  2262  0287                     l1273:
  2263  0287  01F7               	clrf	___lwdiv@counter
  2264  0288  0AF7               	incf	___lwdiv@counter,f
  2265  0289  2A95               	goto	l1279
  2266  028A                     l1275:
  2267  028A  3001               	movlw	1
  2268  028B                     u1035:
  2269  028B  1003               	clrc
  2270  028C  0DF0               	rlf	___lwdiv@divisor,f
  2271  028D  0DF1               	rlf	___lwdiv@divisor+1,f
  2272  028E  3EFF               	addlw	-1
  2273  028F  1D03               	skipz
  2274  0290  2A8B               	goto	u1035
  2275  0291                     l1277:
  2276  0291  3001               	movlw	1
  2277  0292  00F4               	movwf	??___lwdiv
  2278  0293  0874               	movf	??___lwdiv,w
  2279  0294  07F7               	addwf	___lwdiv@counter,f
  2280  0295                     l1279:
  2281  0295  1FF1               	btfss	___lwdiv@divisor+1,7
  2282  0296  2A98               	goto	u1041
  2283  0297  2A99               	goto	u1040
  2284  0298                     u1041:
  2285  0298  2A8A               	goto	l1275
  2286  0299                     u1040:
  2287  0299                     l1281:
  2288  0299  3001               	movlw	1
  2289  029A                     u1055:
  2290  029A  1003               	clrc
  2291  029B  0DF5               	rlf	___lwdiv@quotient,f
  2292  029C  0DF6               	rlf	___lwdiv@quotient+1,f
  2293  029D  3EFF               	addlw	-1
  2294  029E  1D03               	skipz
  2295  029F  2A9A               	goto	u1055
  2296  02A0  0871               	movf	___lwdiv@divisor+1,w
  2297  02A1  0273               	subwf	___lwdiv@dividend+1,w
  2298  02A2  1D03               	skipz
  2299  02A3  2AA6               	goto	u1065
  2300  02A4  0870               	movf	___lwdiv@divisor,w
  2301  02A5  0272               	subwf	___lwdiv@dividend,w
  2302  02A6                     u1065:
  2303  02A6  1C03               	skipc
  2304  02A7  2AA9               	goto	u1061
  2305  02A8  2AAA               	goto	u1060
  2306  02A9                     u1061:
  2307  02A9  2AB1               	goto	l1287
  2308  02AA                     u1060:
  2309  02AA                     l1283:
  2310  02AA  0870               	movf	___lwdiv@divisor,w
  2311  02AB  02F2               	subwf	___lwdiv@dividend,f
  2312  02AC  0871               	movf	___lwdiv@divisor+1,w
  2313  02AD  1C03               	skipc
  2314  02AE  03F3               	decf	___lwdiv@dividend+1,f
  2315  02AF  02F3               	subwf	___lwdiv@dividend+1,f
  2316  02B0                     l1285:
  2317  02B0  1475               	bsf	___lwdiv@quotient,0
  2318  02B1                     l1287:
  2319  02B1  3001               	movlw	1
  2320  02B2                     u1075:
  2321  02B2  1003               	clrc
  2322  02B3  0CF1               	rrf	___lwdiv@divisor+1,f
  2323  02B4  0CF0               	rrf	___lwdiv@divisor,f
  2324  02B5  3EFF               	addlw	-1
  2325  02B6  1D03               	skipz
  2326  02B7  2AB2               	goto	u1075
  2327  02B8                     l1289:
  2328  02B8  3001               	movlw	1
  2329  02B9  02F7               	subwf	___lwdiv@counter,f
  2330  02BA  1D03               	btfss	3,2
  2331  02BB  2ABD               	goto	u1081
  2332  02BC  2ABE               	goto	u1080
  2333  02BD                     u1081:
  2334  02BD  2A99               	goto	l1281
  2335  02BE                     u1080:
  2336  02BE                     l1291:
  2337  02BE  0876               	movf	___lwdiv@quotient+1,w
  2338  02BF  00F1               	movwf	?___lwdiv+1
  2339  02C0  0875               	movf	___lwdiv@quotient,w
  2340  02C1  00F0               	movwf	?___lwdiv
  2341  02C2                     l471:
  2342  02C2  0008               	return
  2343  02C3                     __end_of___lwdiv:
  2344                           
  2345                           	psect	text10
  2346  02C3                     __ptext10:	
  2347 ;; *************** function ___lmul *****************
  2348 ;; Defined at:
  2349 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  multiplier      4    0[COMMON] unsigned long 
  2352 ;;  multiplicand    4    4[COMMON] unsigned long 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  product         4    9[COMMON] unsigned long 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  4    0[COMMON] unsigned long 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2364 ;;      Params:         8       0       0       0       0
  2365 ;;      Locals:         4       0       0       0       0
  2366 ;;      Temps:          1       0       0       0       0
  2367 ;;      Totals:        13       0       0       0       0
  2368 ;;Total ram usage:       13 bytes
  2369 ;; Hardware stack levels used: 1
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_LCD_num
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function ___lmul
  2379  02C3                     ___lmul:
  2380  02C3                     l1133:	
  2381                           ;incstack = 0
  2382                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2383                           
  2384  02C3  3000               	movlw	0
  2385  02C4  00FC               	movwf	___lmul@product+3
  2386  02C5  3000               	movlw	0
  2387  02C6  00FB               	movwf	___lmul@product+2
  2388  02C7  3000               	movlw	0
  2389  02C8  00FA               	movwf	___lmul@product+1
  2390  02C9  3000               	movlw	0
  2391  02CA  00F9               	movwf	___lmul@product
  2392  02CB                     l1135:
  2393  02CB  1C70               	btfss	___lmul@multiplier,0
  2394  02CC  2ACE               	goto	u681
  2395  02CD  2ACF               	goto	u680
  2396  02CE                     u681:
  2397  02CE  2AE6               	goto	l1139
  2398  02CF                     u680:
  2399  02CF                     l1137:
  2400  02CF  0874               	movf	___lmul@multiplicand,w
  2401  02D0  07F9               	addwf	___lmul@product,f
  2402  02D1  0875               	movf	___lmul@multiplicand+1,w
  2403  02D2  1103               	clrz
  2404  02D3  1803               	skipnc
  2405  02D4  3E01               	addlw	1
  2406  02D5  1903               	skipnz
  2407  02D6  2AD8               	goto	u691
  2408  02D7  07FA               	addwf	___lmul@product+1,f
  2409  02D8                     u691:
  2410  02D8  0876               	movf	___lmul@multiplicand+2,w
  2411  02D9  1103               	clrz
  2412  02DA  1803               	skipnc
  2413  02DB  3E01               	addlw	1
  2414  02DC  1903               	skipnz
  2415  02DD  2ADF               	goto	u692
  2416  02DE  07FB               	addwf	___lmul@product+2,f
  2417  02DF                     u692:
  2418  02DF  0877               	movf	___lmul@multiplicand+3,w
  2419  02E0  1103               	clrz
  2420  02E1  1803               	skipnc
  2421  02E2  3E01               	addlw	1
  2422  02E3  1903               	skipnz
  2423  02E4  2AE6               	goto	u693
  2424  02E5  07FC               	addwf	___lmul@product+3,f
  2425  02E6                     u693:
  2426  02E6                     l1139:
  2427  02E6  3001               	movlw	1
  2428  02E7  00F8               	movwf	??___lmul
  2429  02E8                     u705:
  2430  02E8  1003               	clrc
  2431  02E9  0DF4               	rlf	___lmul@multiplicand,f
  2432  02EA  0DF5               	rlf	___lmul@multiplicand+1,f
  2433  02EB  0DF6               	rlf	___lmul@multiplicand+2,f
  2434  02EC  0DF7               	rlf	___lmul@multiplicand+3,f
  2435  02ED  0BF8               	decfsz	??___lmul,f
  2436  02EE  2AE8               	goto	u705
  2437  02EF                     l1141:
  2438  02EF  3001               	movlw	1
  2439  02F0                     u715:
  2440  02F0  1003               	clrc
  2441  02F1  0CF3               	rrf	___lmul@multiplier+3,f
  2442  02F2  0CF2               	rrf	___lmul@multiplier+2,f
  2443  02F3  0CF1               	rrf	___lmul@multiplier+1,f
  2444  02F4  0CF0               	rrf	___lmul@multiplier,f
  2445  02F5  3EFF               	addlw	-1
  2446  02F6  1D03               	skipz
  2447  02F7  2AF0               	goto	u715
  2448  02F8  0873               	movf	___lmul@multiplier+3,w
  2449  02F9  0472               	iorwf	___lmul@multiplier+2,w
  2450  02FA  0471               	iorwf	___lmul@multiplier+1,w
  2451  02FB  0470               	iorwf	___lmul@multiplier,w
  2452  02FC  1D03               	skipz
  2453  02FD  2AFF               	goto	u721
  2454  02FE  2B00               	goto	u720
  2455  02FF                     u721:
  2456  02FF  2ACB               	goto	l1135
  2457  0300                     u720:
  2458  0300                     l1143:
  2459  0300  087C               	movf	___lmul@product+3,w
  2460  0301  00F3               	movwf	?___lmul+3
  2461  0302  087B               	movf	___lmul@product+2,w
  2462  0303  00F2               	movwf	?___lmul+2
  2463  0304  087A               	movf	___lmul@product+1,w
  2464  0305  00F1               	movwf	?___lmul+1
  2465  0306  0879               	movf	___lmul@product,w
  2466  0307  00F0               	movwf	?___lmul
  2467  0308                     l213:
  2468  0308  0008               	return
  2469  0309                     __end_of___lmul:
  2470                           
  2471                           	psect	text11
  2472  042D                     __ptext11:	
  2473 ;; *************** function ___aldiv *****************
  2474 ;; Defined at:
  2475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  divisor         4    0[BANK0 ] long 
  2478 ;;  dividend        4    4[BANK0 ] long 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  quotient        4   10[BANK0 ] long 
  2481 ;;  sign            1    9[BANK0 ] unsigned char 
  2482 ;;  counter         1    8[BANK0 ] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  4    0[BANK0 ] long 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       8       0       0       0
  2493 ;;      Locals:         0       6       0       0       0
  2494 ;;      Temps:          1       0       0       0       0
  2495 ;;      Totals:         1      14       0       0       0
  2496 ;;Total ram usage:       15 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_LCD_num
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function ___aldiv
  2507  042D                     ___aldiv:
  2508  042D                     l1147:	
  2509                           ;incstack = 0
  2510                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2511                           
  2512  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2513  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2514  042F  01A9               	clrf	___aldiv@sign
  2515  0430                     l1149:
  2516  0430  1FA3               	btfss	___aldiv@divisor+3,7
  2517  0431  2C33               	goto	u731
  2518  0432  2C34               	goto	u730
  2519  0433                     u731:
  2520  0433  2C41               	goto	l264
  2521  0434                     u730:
  2522  0434                     l1151:
  2523  0434  09A0               	comf	___aldiv@divisor,f
  2524  0435  09A1               	comf	___aldiv@divisor+1,f
  2525  0436  09A2               	comf	___aldiv@divisor+2,f
  2526  0437  09A3               	comf	___aldiv@divisor+3,f
  2527  0438  0AA0               	incf	___aldiv@divisor,f
  2528  0439  1903               	skipnz
  2529  043A  0AA1               	incf	___aldiv@divisor+1,f
  2530  043B  1903               	skipnz
  2531  043C  0AA2               	incf	___aldiv@divisor+2,f
  2532  043D  1903               	skipnz
  2533  043E  0AA3               	incf	___aldiv@divisor+3,f
  2534  043F  01A9               	clrf	___aldiv@sign
  2535  0440  0AA9               	incf	___aldiv@sign,f
  2536  0441                     l264:
  2537  0441  1FA7               	btfss	___aldiv@dividend+3,7
  2538  0442  2C44               	goto	u741
  2539  0443  2C45               	goto	u740
  2540  0444                     u741:
  2541  0444  2C54               	goto	l1157
  2542  0445                     u740:
  2543  0445                     l1153:
  2544  0445  09A4               	comf	___aldiv@dividend,f
  2545  0446  09A5               	comf	___aldiv@dividend+1,f
  2546  0447  09A6               	comf	___aldiv@dividend+2,f
  2547  0448  09A7               	comf	___aldiv@dividend+3,f
  2548  0449  0AA4               	incf	___aldiv@dividend,f
  2549  044A  1903               	skipnz
  2550  044B  0AA5               	incf	___aldiv@dividend+1,f
  2551  044C  1903               	skipnz
  2552  044D  0AA6               	incf	___aldiv@dividend+2,f
  2553  044E  1903               	skipnz
  2554  044F  0AA7               	incf	___aldiv@dividend+3,f
  2555  0450                     l1155:
  2556  0450  3001               	movlw	1
  2557  0451  00FD               	movwf	??___aldiv
  2558  0452  087D               	movf	??___aldiv,w
  2559  0453  06A9               	xorwf	___aldiv@sign,f
  2560  0454                     l1157:
  2561  0454  3000               	movlw	0
  2562  0455  00AD               	movwf	___aldiv@quotient+3
  2563  0456  3000               	movlw	0
  2564  0457  00AC               	movwf	___aldiv@quotient+2
  2565  0458  3000               	movlw	0
  2566  0459  00AB               	movwf	___aldiv@quotient+1
  2567  045A  3000               	movlw	0
  2568  045B  00AA               	movwf	___aldiv@quotient
  2569  045C                     l1159:
  2570  045C  0823               	movf	___aldiv@divisor+3,w
  2571  045D  0422               	iorwf	___aldiv@divisor+2,w
  2572  045E  0421               	iorwf	___aldiv@divisor+1,w
  2573  045F  0420               	iorwf	___aldiv@divisor,w
  2574  0460  1903               	skipnz
  2575  0461  2C63               	goto	u751
  2576  0462  2C64               	goto	u750
  2577  0463                     u751:
  2578  0463  2CB1               	goto	l1179
  2579  0464                     u750:
  2580  0464                     l1161:
  2581  0464  01A8               	clrf	___aldiv@counter
  2582  0465  0AA8               	incf	___aldiv@counter,f
  2583  0466  2C74               	goto	l1165
  2584  0467                     l1163:
  2585  0467  3001               	movlw	1
  2586  0468  00FD               	movwf	??___aldiv
  2587  0469                     u765:
  2588  0469  1003               	clrc
  2589  046A  0DA0               	rlf	___aldiv@divisor,f
  2590  046B  0DA1               	rlf	___aldiv@divisor+1,f
  2591  046C  0DA2               	rlf	___aldiv@divisor+2,f
  2592  046D  0DA3               	rlf	___aldiv@divisor+3,f
  2593  046E  0BFD               	decfsz	??___aldiv,f
  2594  046F  2C69               	goto	u765
  2595  0470  3001               	movlw	1
  2596  0471  00FD               	movwf	??___aldiv
  2597  0472  087D               	movf	??___aldiv,w
  2598  0473  07A8               	addwf	___aldiv@counter,f
  2599  0474                     l1165:
  2600  0474  1FA3               	btfss	___aldiv@divisor+3,7
  2601  0475  2C77               	goto	u771
  2602  0476  2C78               	goto	u770
  2603  0477                     u771:
  2604  0477  2C67               	goto	l1163
  2605  0478                     u770:
  2606  0478                     l1167:
  2607  0478  3001               	movlw	1
  2608  0479  00FD               	movwf	??___aldiv
  2609  047A                     u785:
  2610  047A  1003               	clrc
  2611  047B  0DAA               	rlf	___aldiv@quotient,f
  2612  047C  0DAB               	rlf	___aldiv@quotient+1,f
  2613  047D  0DAC               	rlf	___aldiv@quotient+2,f
  2614  047E  0DAD               	rlf	___aldiv@quotient+3,f
  2615  047F  0BFD               	decfsz	??___aldiv,f
  2616  0480  2C7A               	goto	u785
  2617  0481                     l1169:
  2618  0481  0823               	movf	___aldiv@divisor+3,w
  2619  0482  0227               	subwf	___aldiv@dividend+3,w
  2620  0483  1D03               	skipz
  2621  0484  2C8F               	goto	u795
  2622  0485  0822               	movf	___aldiv@divisor+2,w
  2623  0486  0226               	subwf	___aldiv@dividend+2,w
  2624  0487  1D03               	skipz
  2625  0488  2C8F               	goto	u795
  2626  0489  0821               	movf	___aldiv@divisor+1,w
  2627  048A  0225               	subwf	___aldiv@dividend+1,w
  2628  048B  1D03               	skipz
  2629  048C  2C8F               	goto	u795
  2630  048D  0820               	movf	___aldiv@divisor,w
  2631  048E  0224               	subwf	___aldiv@dividend,w
  2632  048F                     u795:
  2633  048F  1C03               	skipc
  2634  0490  2C92               	goto	u791
  2635  0491  2C93               	goto	u790
  2636  0492                     u791:
  2637  0492  2CA2               	goto	l1175
  2638  0493                     u790:
  2639  0493                     l1171:
  2640  0493  0820               	movf	___aldiv@divisor,w
  2641  0494  02A4               	subwf	___aldiv@dividend,f
  2642  0495  0821               	movf	___aldiv@divisor+1,w
  2643  0496  1C03               	skipc
  2644  0497  0F21               	incfsz	___aldiv@divisor+1,w
  2645  0498  02A5               	subwf	___aldiv@dividend+1,f
  2646  0499  0822               	movf	___aldiv@divisor+2,w
  2647  049A  1C03               	skipc
  2648  049B  0F22               	incfsz	___aldiv@divisor+2,w
  2649  049C  02A6               	subwf	___aldiv@dividend+2,f
  2650  049D  0823               	movf	___aldiv@divisor+3,w
  2651  049E  1C03               	skipc
  2652  049F  0F23               	incfsz	___aldiv@divisor+3,w
  2653  04A0  02A7               	subwf	___aldiv@dividend+3,f
  2654  04A1                     l1173:
  2655  04A1  142A               	bsf	___aldiv@quotient,0
  2656  04A2                     l1175:
  2657  04A2  3001               	movlw	1
  2658  04A3                     u805:
  2659  04A3  1003               	clrc
  2660  04A4  0CA3               	rrf	___aldiv@divisor+3,f
  2661  04A5  0CA2               	rrf	___aldiv@divisor+2,f
  2662  04A6  0CA1               	rrf	___aldiv@divisor+1,f
  2663  04A7  0CA0               	rrf	___aldiv@divisor,f
  2664  04A8  3EFF               	addlw	-1
  2665  04A9  1D03               	skipz
  2666  04AA  2CA3               	goto	u805
  2667  04AB                     l1177:
  2668  04AB  3001               	movlw	1
  2669  04AC  02A8               	subwf	___aldiv@counter,f
  2670  04AD  1D03               	btfss	3,2
  2671  04AE  2CB0               	goto	u811
  2672  04AF  2CB1               	goto	u810
  2673  04B0                     u811:
  2674  04B0  2C78               	goto	l1167
  2675  04B1                     u810:
  2676  04B1                     l1179:
  2677  04B1  0829               	movf	___aldiv@sign,w
  2678  04B2  1903               	btfsc	3,2
  2679  04B3  2CB5               	goto	u821
  2680  04B4  2CB6               	goto	u820
  2681  04B5                     u821:
  2682  04B5  2CC1               	goto	l1183
  2683  04B6                     u820:
  2684  04B6                     l1181:
  2685  04B6  09AA               	comf	___aldiv@quotient,f
  2686  04B7  09AB               	comf	___aldiv@quotient+1,f
  2687  04B8  09AC               	comf	___aldiv@quotient+2,f
  2688  04B9  09AD               	comf	___aldiv@quotient+3,f
  2689  04BA  0AAA               	incf	___aldiv@quotient,f
  2690  04BB  1903               	skipnz
  2691  04BC  0AAB               	incf	___aldiv@quotient+1,f
  2692  04BD  1903               	skipnz
  2693  04BE  0AAC               	incf	___aldiv@quotient+2,f
  2694  04BF  1903               	skipnz
  2695  04C0  0AAD               	incf	___aldiv@quotient+3,f
  2696  04C1                     l1183:
  2697  04C1  082D               	movf	___aldiv@quotient+3,w
  2698  04C2  00A3               	movwf	?___aldiv+3
  2699  04C3  082C               	movf	___aldiv@quotient+2,w
  2700  04C4  00A2               	movwf	?___aldiv+2
  2701  04C5  082B               	movf	___aldiv@quotient+1,w
  2702  04C6  00A1               	movwf	?___aldiv+1
  2703  04C7  082A               	movf	___aldiv@quotient,w
  2704  04C8  00A0               	movwf	?___aldiv
  2705  04C9                     l274:
  2706  04C9  0008               	return
  2707  04CA                     __end_of___aldiv:
  2708                           
  2709                           	psect	text12
  2710  023F                     __ptext12:	
  2711 ;; *************** function _LCD_Char *****************
  2712 ;; Defined at:
  2713 ;;		line 26 in file "./lcd4bit.h"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  data            1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  data            1    2[COMMON] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         0       0       0       0       0
  2728 ;;      Locals:         1       0       0       0       0
  2729 ;;      Temps:          2       0       0       0       0
  2730 ;;      Totals:         3       0       0       0       0
  2731 ;;Total ram usage:        3 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_LCD_num
  2737 ;;		_main
  2738 ;;		_show
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           
  2743                           ;psect for function _LCD_Char
  2744  023F                     _LCD_Char:
  2745                           
  2746                           ;incstack = 0
  2747                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  2748                           ;LCD_Char@data stored from wreg
  2749  023F  00F2               	movwf	LCD_Char@data
  2750  0240                     l1111:
  2751                           
  2752                           ;./lcd4bit.h: 26: void LCD_Char (unsigned char data);./lcd4bit.h: 27: {;./lcd4bit.h: 28:
      +                               RC0 = 1;
  2753  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0242  1407               	bsf	7,0	;volatile
  2756  0243                     l1113:
  2757                           
  2758                           ;./lcd4bit.h: 29:     PORTB = data;
  2759  0243  0872               	movf	LCD_Char@data,w
  2760  0244  0086               	movwf	6	;volatile
  2761  0245                     l1115:
  2762                           
  2763                           ;./lcd4bit.h: 30:     RC1 = 1;
  2764  0245  1487               	bsf	7,1	;volatile
  2765                           
  2766                           ;./lcd4bit.h: 31:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2767  0246  3041               	movlw	65
  2768  0247  00F1               	movwf	??_LCD_Char+1
  2769  0248  30EE               	movlw	238
  2770  0249  00F0               	movwf	??_LCD_Char
  2771  024A                     u1317:
  2772  024A  0BF0               	decfsz	??_LCD_Char,f
  2773  024B  2A4A               	goto	u1317
  2774  024C  0BF1               	decfsz	??_LCD_Char+1,f
  2775  024D  2A4A               	goto	u1317
  2776  024E  0000               	nop
  2777  024F                     l1117:
  2778                           
  2779                           ;./lcd4bit.h: 32:     RC1 = 0;
  2780  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0251  1087               	bcf	7,1	;volatile
  2783                           
  2784                           ;./lcd4bit.h: 33:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2785  0252  3041               	movlw	65
  2786  0253  00F1               	movwf	??_LCD_Char+1
  2787  0254  30EE               	movlw	238
  2788  0255  00F0               	movwf	??_LCD_Char
  2789  0256                     u1327:
  2790  0256  0BF0               	decfsz	??_LCD_Char,f
  2791  0257  2A56               	goto	u1327
  2792  0258  0BF1               	decfsz	??_LCD_Char+1,f
  2793  0259  2A56               	goto	u1327
  2794  025A  0000               	nop
  2795  025B                     l1119:
  2796                           
  2797                           ;./lcd4bit.h: 34:     PORTB = (data<<4);
  2798  025B  0872               	movf	LCD_Char@data,w
  2799  025C  00F0               	movwf	??_LCD_Char
  2800  025D  3003               	movlw	3
  2801  025E                     u665:
  2802  025E  1003               	clrc
  2803  025F  0DF0               	rlf	??_LCD_Char,f
  2804  0260  3EFF               	addlw	-1
  2805  0261  1D03               	skipz
  2806  0262  2A5E               	goto	u665
  2807  0263  1003               	clrc
  2808  0264  0D70               	rlf	??_LCD_Char,w
  2809  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0267  0086               	movwf	6	;volatile
  2812  0268                     l1121:
  2813                           
  2814                           ;./lcd4bit.h: 35:     RC1 = 1;
  2815  0268  1487               	bsf	7,1	;volatile
  2816  0269                     l1123:
  2817                           
  2818                           ;./lcd4bit.h: 36:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2819  0269  3041               	movlw	65
  2820  026A  00F1               	movwf	??_LCD_Char+1
  2821  026B  30EE               	movlw	238
  2822  026C  00F0               	movwf	??_LCD_Char
  2823  026D                     u1337:
  2824  026D  0BF0               	decfsz	??_LCD_Char,f
  2825  026E  2A6D               	goto	u1337
  2826  026F  0BF1               	decfsz	??_LCD_Char+1,f
  2827  0270  2A6D               	goto	u1337
  2828  0271  0000               	nop
  2829  0272                     l1125:
  2830                           
  2831                           ;./lcd4bit.h: 37:     RC1 = 0;
  2832  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0274  1087               	bcf	7,1	;volatile
  2835  0275                     l1127:
  2836                           
  2837                           ;./lcd4bit.h: 38:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2838  0275  3041               	movlw	65
  2839  0276  00F1               	movwf	??_LCD_Char+1
  2840  0277  30EE               	movlw	238
  2841  0278  00F0               	movwf	??_LCD_Char
  2842  0279                     u1347:
  2843  0279  0BF0               	decfsz	??_LCD_Char,f
  2844  027A  2A79               	goto	u1347
  2845  027B  0BF1               	decfsz	??_LCD_Char+1,f
  2846  027C  2A79               	goto	u1347
  2847  027D  0000               	nop
  2848  027E                     l48:
  2849  027E  0008               	return
  2850  027F                     __end_of_LCD_Char:
  2851                           
  2852                           	psect	text13
  2853  0197                     __ptext13:	
  2854 ;; *************** function _LCD_init *****************
  2855 ;; Defined at:
  2856 ;;		line 40 in file "./lcd4bit.h"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0
  2872 ;;      Temps:          2       0       0       0       0
  2873 ;;      Totals:         2       0       0       0       0
  2874 ;;Total ram usage:        2 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 1
  2877 ;; This function calls:
  2878 ;;		_LCD_Command
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _LCD_init
  2886  0197                     _LCD_init:
  2887  0197                     l1317:	
  2888                           ;incstack = 0
  2889                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2890                           
  2891                           
  2892                           ;./lcd4bit.h: 42:     LCD_Command (0x02);
  2893  0197  3002               	movlw	2
  2894  0198  120A  118A  21FF  120A  118A  	fcall	_LCD_Command
  2895                           
  2896                           ;./lcd4bit.h: 43:     LCD_Command (0x28);
  2897  019D  3028               	movlw	40
  2898  019E  120A  118A  21FF  120A  118A  	fcall	_LCD_Command
  2899                           
  2900                           ;./lcd4bit.h: 44:     LCD_Command (0x80);
  2901  01A3  3080               	movlw	128
  2902  01A4  120A  118A  21FF  120A  118A  	fcall	_LCD_Command
  2903                           
  2904                           ;./lcd4bit.h: 45:     LCD_Command (0x0C);
  2905  01A9  300C               	movlw	12
  2906  01AA  120A  118A  21FF  120A  118A  	fcall	_LCD_Command
  2907                           
  2908                           ;./lcd4bit.h: 46:     LCD_Command (0x06);
  2909  01AF  3006               	movlw	6
  2910  01B0  120A  118A  21FF  120A  118A  	fcall	_LCD_Command
  2911                           
  2912                           ;./lcd4bit.h: 47:     LCD_Command (0x01);
  2913  01B5  3001               	movlw	1
  2914  01B6  120A  118A  21FF  120A  118A  	fcall	_LCD_Command
  2915  01BB                     l1319:
  2916                           
  2917                           ;./lcd4bit.h: 48:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2918  01BB  3041               	movlw	65
  2919  01BC  00F4               	movwf	??_LCD_init+1
  2920  01BD  30EE               	movlw	238
  2921  01BE  00F3               	movwf	??_LCD_init
  2922  01BF                     u1357:
  2923  01BF  0BF3               	decfsz	??_LCD_init,f
  2924  01C0  29BF               	goto	u1357
  2925  01C1  0BF4               	decfsz	??_LCD_init+1,f
  2926  01C2  29BF               	goto	u1357
  2927  01C3  0000               	nop
  2928  01C4                     l51:
  2929  01C4  0008               	return
  2930  01C5                     __end_of_LCD_init:
  2931                           
  2932                           	psect	text14
  2933  01FF                     __ptext14:	
  2934 ;; *************** function _LCD_Command *****************
  2935 ;; Defined at:
  2936 ;;		line 12 in file "./lcd4bit.h"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  cmnd            1    wreg     unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  cmnd            1    2[COMMON] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       0       0       0       0
  2951 ;;      Locals:         1       0       0       0       0
  2952 ;;      Temps:          2       0       0       0       0
  2953 ;;      Totals:         3       0       0       0       0
  2954 ;;Total ram usage:        3 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_LCD_init
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _LCD_Command
  2966  01FF                     _LCD_Command:
  2967                           
  2968                           ;incstack = 0
  2969                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2970                           ;LCD_Command@cmnd stored from wreg
  2971  01FF  00F2               	movwf	LCD_Command@cmnd
  2972  0200                     l1093:
  2973                           
  2974                           ;./lcd4bit.h: 12: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 13: {;./lcd4bit.h: 
      +                          14:     RC0 = 0;
  2975  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0202  1007               	bcf	7,0	;volatile
  2978  0203                     l1095:
  2979                           
  2980                           ;./lcd4bit.h: 15:     PORTB = cmnd;
  2981  0203  0872               	movf	LCD_Command@cmnd,w
  2982  0204  0086               	movwf	6	;volatile
  2983  0205                     l1097:
  2984                           
  2985                           ;./lcd4bit.h: 16:     RC1 = 1;
  2986  0205  1487               	bsf	7,1	;volatile
  2987                           
  2988                           ;./lcd4bit.h: 17:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2989  0206  3041               	movlw	65
  2990  0207  00F1               	movwf	??_LCD_Command+1
  2991  0208  30EE               	movlw	238
  2992  0209  00F0               	movwf	??_LCD_Command
  2993  020A                     u1367:
  2994  020A  0BF0               	decfsz	??_LCD_Command,f
  2995  020B  2A0A               	goto	u1367
  2996  020C  0BF1               	decfsz	??_LCD_Command+1,f
  2997  020D  2A0A               	goto	u1367
  2998  020E  0000               	nop
  2999  020F                     l1099:
  3000                           
  3001                           ;./lcd4bit.h: 18:     RC1 = 0;
  3002  020F  1283               	bcf	3,5	;RP0=0, select bank0
  3003  0210  1303               	bcf	3,6	;RP1=0, select bank0
  3004  0211  1087               	bcf	7,1	;volatile
  3005                           
  3006                           ;./lcd4bit.h: 19:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3007  0212  3041               	movlw	65
  3008  0213  00F1               	movwf	??_LCD_Command+1
  3009  0214  30EE               	movlw	238
  3010  0215  00F0               	movwf	??_LCD_Command
  3011  0216                     u1377:
  3012  0216  0BF0               	decfsz	??_LCD_Command,f
  3013  0217  2A16               	goto	u1377
  3014  0218  0BF1               	decfsz	??_LCD_Command+1,f
  3015  0219  2A16               	goto	u1377
  3016  021A  0000               	nop
  3017  021B                     l1101:
  3018                           
  3019                           ;./lcd4bit.h: 20:     PORTB = (cmnd<<4);
  3020  021B  0872               	movf	LCD_Command@cmnd,w
  3021  021C  00F0               	movwf	??_LCD_Command
  3022  021D  3003               	movlw	3
  3023  021E                     u655:
  3024  021E  1003               	clrc
  3025  021F  0DF0               	rlf	??_LCD_Command,f
  3026  0220  3EFF               	addlw	-1
  3027  0221  1D03               	skipz
  3028  0222  2A1E               	goto	u655
  3029  0223  1003               	clrc
  3030  0224  0D70               	rlf	??_LCD_Command,w
  3031  0225  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0226  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0227  0086               	movwf	6	;volatile
  3034  0228                     l1103:
  3035                           
  3036                           ;./lcd4bit.h: 21:     RC1 = 1;
  3037  0228  1487               	bsf	7,1	;volatile
  3038  0229                     l1105:
  3039                           
  3040                           ;./lcd4bit.h: 22:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3041  0229  3041               	movlw	65
  3042  022A  00F1               	movwf	??_LCD_Command+1
  3043  022B  30EE               	movlw	238
  3044  022C  00F0               	movwf	??_LCD_Command
  3045  022D                     u1387:
  3046  022D  0BF0               	decfsz	??_LCD_Command,f
  3047  022E  2A2D               	goto	u1387
  3048  022F  0BF1               	decfsz	??_LCD_Command+1,f
  3049  0230  2A2D               	goto	u1387
  3050  0231  0000               	nop
  3051  0232                     l1107:
  3052                           
  3053                           ;./lcd4bit.h: 23:     RC1 = 0;
  3054  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3055  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0234  1087               	bcf	7,1	;volatile
  3057  0235                     l1109:
  3058                           
  3059                           ;./lcd4bit.h: 24:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3060  0235  3041               	movlw	65
  3061  0236  00F1               	movwf	??_LCD_Command+1
  3062  0237  30EE               	movlw	238
  3063  0238  00F0               	movwf	??_LCD_Command
  3064  0239                     u1397:
  3065  0239  0BF0               	decfsz	??_LCD_Command,f
  3066  023A  2A39               	goto	u1397
  3067  023B  0BF1               	decfsz	??_LCD_Command+1,f
  3068  023C  2A39               	goto	u1397
  3069  023D  0000               	nop
  3070  023E                     l45:
  3071  023E  0008               	return
  3072  023F                     __end_of_LCD_Command:
  3073                           
  3074                           	psect	text15
  3075  0362                     __ptext15:	
  3076 ;; *************** function _ADC_Init *****************
  3077 ;; Defined at:
  3078 ;;		line 70 in file "main.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0
  3094 ;;      Temps:          2       0       0       0       0
  3095 ;;      Totals:         2       0       0       0       0
  3096 ;;Total ram usage:        2 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_main
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _ADC_Init
  3107  0362                     _ADC_Init:
  3108  0362                     l1407:	
  3109                           ;incstack = 0
  3110                           ; Regs used in _ADC_Init: [wreg]
  3111                           
  3112                           
  3113                           ;main.c: 72:     ADCON0 = 0x85;
  3114  0362  3085               	movlw	133
  3115  0363  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0364  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0365  009F               	movwf	31	;volatile
  3118                           
  3119                           ;main.c: 73:     ADCON1 = 0xC0;
  3120  0366  30C0               	movlw	192
  3121  0367  1683               	bsf	3,5	;RP0=1, select bank1
  3122  0368  1303               	bcf	3,6	;RP1=0, select bank1
  3123  0369  009F               	movwf	31	;volatile
  3124                           
  3125                           ;main.c: 74:     AV[0]= ((ADRESH<<8)+ADRESL);
  3126  036A  1283               	bcf	3,5	;RP0=0, select bank0
  3127  036B  1303               	bcf	3,6	;RP1=0, select bank0
  3128  036C  081E               	movf	30,w	;volatile
  3129  036D  00C4               	movwf	_AV+1
  3130  036E  1683               	bsf	3,5	;RP0=1, select bank1
  3131  036F  1303               	bcf	3,6	;RP1=0, select bank1
  3132  0370  081E               	movf	30,w	;volatile
  3133  0371  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0372  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0373  00C3               	movwf	_AV
  3136                           
  3137                           ;main.c: 76:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3138  0374  3041               	movlw	65
  3139  0375  00F1               	movwf	??_ADC_Init+1
  3140  0376  30EE               	movlw	238
  3141  0377  00F0               	movwf	??_ADC_Init
  3142  0378                     u1407:
  3143  0378  0BF0               	decfsz	??_ADC_Init,f
  3144  0379  2B78               	goto	u1407
  3145  037A  0BF1               	decfsz	??_ADC_Init+1,f
  3146  037B  2B78               	goto	u1407
  3147  037C  0000               	nop
  3148                           
  3149                           ;main.c: 77:     ADCON0 = 0x8D;
  3150  037D  308D               	movlw	141
  3151  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3152  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0380  009F               	movwf	31	;volatile
  3154                           
  3155                           ;main.c: 78:     ADCON1 = 0xC0;
  3156  0381  30C0               	movlw	192
  3157  0382  1683               	bsf	3,5	;RP0=1, select bank1
  3158  0383  1303               	bcf	3,6	;RP1=0, select bank1
  3159  0384  009F               	movwf	31	;volatile
  3160                           
  3161                           ;main.c: 79:     AV[1]= ((ADRESH<<8)+ADRESL);
  3162  0385  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0386  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0387  081E               	movf	30,w	;volatile
  3165  0388  00C6               	movwf	_AV+3
  3166  0389  1683               	bsf	3,5	;RP0=1, select bank1
  3167  038A  1303               	bcf	3,6	;RP1=0, select bank1
  3168  038B  081E               	movf	30,w	;volatile
  3169  038C  1283               	bcf	3,5	;RP0=0, select bank0
  3170  038D  1303               	bcf	3,6	;RP1=0, select bank0
  3171  038E  00C5               	movwf	_AV+2
  3172                           
  3173                           ;main.c: 81:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3174  038F  3041               	movlw	65
  3175  0390  00F1               	movwf	??_ADC_Init+1
  3176  0391  30EE               	movlw	238
  3177  0392  00F0               	movwf	??_ADC_Init
  3178  0393                     u1417:
  3179  0393  0BF0               	decfsz	??_ADC_Init,f
  3180  0394  2B93               	goto	u1417
  3181  0395  0BF1               	decfsz	??_ADC_Init+1,f
  3182  0396  2B93               	goto	u1417
  3183  0397  0000               	nop
  3184                           
  3185                           ;main.c: 82:     ADCON0 = 0x95;
  3186  0398  3095               	movlw	149
  3187  0399  1283               	bcf	3,5	;RP0=0, select bank0
  3188  039A  1303               	bcf	3,6	;RP1=0, select bank0
  3189  039B  009F               	movwf	31	;volatile
  3190                           
  3191                           ;main.c: 83:     ADCON1 = 0xC0;
  3192  039C  30C0               	movlw	192
  3193  039D  1683               	bsf	3,5	;RP0=1, select bank1
  3194  039E  1303               	bcf	3,6	;RP1=0, select bank1
  3195  039F  009F               	movwf	31	;volatile
  3196                           
  3197                           ;main.c: 84:     AV[2]= ((ADRESH<<8)+ADRESL);
  3198  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  3199  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  3200  03A2  081E               	movf	30,w	;volatile
  3201  03A3  00C8               	movwf	_AV+5
  3202  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  3203  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  3204  03A6  081E               	movf	30,w	;volatile
  3205  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  3206  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  3207  03A9  00C7               	movwf	_AV+4
  3208                           
  3209                           ;main.c: 86:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3210  03AA  3041               	movlw	65
  3211  03AB  00F1               	movwf	??_ADC_Init+1
  3212  03AC  30EE               	movlw	238
  3213  03AD  00F0               	movwf	??_ADC_Init
  3214  03AE                     u1427:
  3215  03AE  0BF0               	decfsz	??_ADC_Init,f
  3216  03AF  2BAE               	goto	u1427
  3217  03B0  0BF1               	decfsz	??_ADC_Init+1,f
  3218  03B1  2BAE               	goto	u1427
  3219  03B2  0000               	nop
  3220                           
  3221                           ;main.c: 87:     ADCON0 = 0x9D;
  3222  03B3  309D               	movlw	157
  3223  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  3224  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  3225  03B6  009F               	movwf	31	;volatile
  3226                           
  3227                           ;main.c: 88:     ADCON1 = 0xC0;
  3228  03B7  30C0               	movlw	192
  3229  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  3230  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  3231  03BA  009F               	movwf	31	;volatile
  3232                           
  3233                           ;main.c: 89:     AV[3]= ((ADRESH<<8)+ADRESL);
  3234  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3235  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3236  03BD  081E               	movf	30,w	;volatile
  3237  03BE  00CA               	movwf	_AV+7
  3238  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  3239  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  3240  03C1  081E               	movf	30,w	;volatile
  3241  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3242  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3243  03C4  00C9               	movwf	_AV+6
  3244  03C5                     l113:
  3245  03C5  0008               	return
  3246  03C6                     __end_of_ADC_Init:
  3247  007E                     btemp	set	126	;btemp
  3248  007E                     wtemp0	set	126
  3249                           
  3250                           	psect	idloc
  3251                           
  3252                           ;Config register IDLOC0 @ 0x2000
  3253                           ;	unspecified, using default values
  3254  2000                     	org	8192
  3255  2000  3FFF               	dw	16383
  3256                           
  3257                           ;Config register IDLOC1 @ 0x2001
  3258                           ;	unspecified, using default values
  3259  2001                     	org	8193
  3260  2001  3FFF               	dw	16383
  3261                           
  3262                           ;Config register IDLOC2 @ 0x2002
  3263                           ;	unspecified, using default values
  3264  2002                     	org	8194
  3265  2002  3FFF               	dw	16383
  3266                           
  3267                           ;Config register IDLOC3 @ 0x2003
  3268                           ;	unspecified, using default values
  3269  2003                     	org	8195
  3270  2003  3FFF               	dw	16383
  3271                           
  3272                           	psect	config
  3273                           
  3274                           ;Config register CONFIG @ 0x2007
  3275                           ;	Oscillator Selection bits
  3276                           ;	FOSC = HS, HS oscillator
  3277                           ;	Watchdog Timer Enable bit
  3278                           ;	WDTE = OFF, WDT disabled
  3279                           ;	Power-up Timer Enable bit
  3280                           ;	PWRTE = OFF, PWRT disabled
  3281                           ;	Brown-out Reset Enable bit
  3282                           ;	BOREN = ON, BOR enabled
  3283                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3284                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3285                           ;	Data EEPROM Memory Code Protection bit
  3286                           ;	CPD = OFF, Data EEPROM code protection off
  3287                           ;	Flash Program Memory Write Enable bits
  3288                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3289                           ;	In-Circuit Debugger Mode bit
  3290                           ;	DEBUG = 0x1, unprogrammed default
  3291                           ;	Flash Program Memory Code Protection bit
  3292                           ;	CP = OFF, Code protection off
  3293  2007                     	org	8199
  3294  2007  3FFA               	dw	16378

Data Sizes:
    Strings     2
    Constant    0
    Data        2
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _tx_sn->___awdiv
    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    7859
                                             30 BANK0      5     5      0
                           _ADC_Init
                           _LCD_Char
                        _LCD_Command
                           _LCD_init
                            _LCD_num
                            _ser_int
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (1) _tx_sn                                               16    14      2    4235
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_num                                             18    14      4    3290
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (2) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     919
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     922
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Char
   _LCD_Command
   _LCD_init
     _LCD_Command
   _LCD_num
     _LCD_Char
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
     ___lwmod
     _intdigits_chardigits
   _ser_int
   _tx
   _tx_sn
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 04 20:59:11 2022

                            pc 0002                   ?_LCD_Command 0070                             l51 01C4  
                           l45 023E                             l54 0588                             l63 0196  
                           l71 0179                             l48 027E                             l72 017A  
                           l66 0187                             l84 07E4                             _AV 0043  
                           l69 0175                             l88 07E4                             l98 059F  
                 ___awdiv@sign 0076                             _sn 004E                             _tx 0170  
                           fsr 0004                            l113 03C5                            l213 0308  
                          l264 0441                            l352 042C                            l274 04C9  
                          l365 0361                            l471 02C2                            l481 01FE  
                          ?_tx 0070                            _RC0 0038                            _RC1 0039  
                          u720 0300                            u721 02FF                            u705 02E8  
                          u810 04B1                            u730 0434                            u811 04B0  
                          u731 0433                            u715 02F0                            u820 04B6  
                          u740 0445                            u821 04B5                            u805 04A3  
                          u741 0444                            u750 0464                            u910 041E  
                          u830 03CB                            u670 0179                            u655 021E  
                          u751 0463                            u911 041D                            u831 03CA  
                          u671 0178                            u680 02CF                            u920 0423  
                          u840 03D6                            u665 025E                            u681 02CE  
                          u921 0422                            u905 0412                            u841 03D5  
                          u770 0478                            u850 03E7                            u930 030E  
                          u771 0477                            u691 02D8                            u851 03E6  
                          u931 030D                            u692 02DF                            u940 0319  
                          u765 0469                            u693 02E6                            u941 0318  
                          u790 0493                            u870 03F9                            u950 0324  
                          u791 0492                            u871 03F8                            u951 0323  
                          u785 047A                            u865 03EB                            u890 040A  
                          u970 0336                            u795 048F                            u891 0409  
                          u971 0335                            u980 0340                            u885 03FA  
                          u981 033F                            u965 0328                            u895 0406  
                          u985 033C                            u995 0347                            _avv 004B  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0076  
                          tx@a 0070                           ??_tx 0070                __end_of_LCD_num 0589  
                         l1101 021B                           l1103 0228                           l1111 0240  
                         l1105 0229                           l1121 0268                           l1113 0243  
                         l1201 03DF                           l1107 0232                           l1123 0269  
                         l1115 0245                           l1211 03F5                           l1203 03E1  
                         l1131 0171                           l1109 0235                           l1125 0272  
                         l1117 024F                           l1141 02EF                           l1133 02C3  
                         l1301 01D5                           l1221 0418                           l1213 03F9  
                         l1205 03E7                           l1127 0275                           l1119 025B  
                         l1151 0434                           l1143 0300                           l1135 02CB  
                         l1311 01F4                           l1303 01D9                           l1215 040A  
                         l1207 03EA                           l1223 041E                           l1231 0309  
                         l1161 0464                           l1153 0445                           l1137 02CF  
                         l1305 01DD                           l1313 01FA                           l1129 0188  
                         l1321 04CA                           l1225 0423                           l1217 0410  
                         l1209 03F1                           l1241 0319                           l1233 030A  
                         l1401 07C8                           l1171 0493                           l1163 0467  
                         l1155 0450                           l1147 042D                           l1139 02E6  
                         l1307 01E7                           l1331 053B                           l1323 04CA  
                         l1227 0428                           l1219 0411                           l1251 0332  
                         l1243 031E                           l1235 030E                           l1403 07D1  
                         l1093 0200                           l1317 0197                           l1181 04B6  
                         l1173 04A1                           l1165 0474                           l1157 0454  
                         l1149 0430                           l1309 01ED                           l1341 056C  
                         l1333 053F                           l1325 04FE                           l1253 0336  
                         l1245 0324                           l1261 0353                           l1237 0313  
                         l1405 07DA                           l1421 0592                           l1407 0362  
                         l1095 0203                           l1319 01BB                           l1183 04C1  
                         l1175 04A2                           l1167 0478                           l1159 045C  
                         l1271 0281                           l1343 0575                           l1335 0556  
                         l1327 0511                           l1191 03CB                           l1263 0358  
                         l1255 0340                           l1247 0327                           l1239 0315  
                         l1351 0664                           l1431 05B9                           l1423 0597  
                         l1097 0205                           l1177 04AB                           l1169 0481  
                         l1281 0299                           l1273 0287                           l1337 055D  
                         l1329 0524                           l1345 017B                           l1193 03D0  
                         l1265 035D                           l1257 0346                           l1249 032E  
                         l1361 06A0                           l1353 066D                           l1441 05D8  
                         l1433 05BF                           l1425 059C                           l1417 0589  
                         l1099 020F                           l1179 04B1                           l1283 02AA  
                         l1275 028A                           l1291 02BE                           l1339 0563  
                         l1195 03D2                           l1187 03C6                           l1259 034D  
                         l1371 06E9                           l1363 06A7                           l1355 0676  
                         l1347 0653                           l1451 05EC                           l1443 05DE  
                         l1427 05A3                           l1419 058D                           l1285 02B0  
                         l1277 0291                           l1269 027F                           l1197 03D6  
                         l1189 03C7                           l1381 0727                           l1373 06ED  
                         l1357 0689                           l1365 06B1                           l1349 065C  
                         l1461 060C                           l1453 05F3                           l1429 05AE  
                         l1287 02B1                           l1279 0295                           l1295 01C5  
                         l1199 03DB                           l1391 076D                           l1375 0704  
                         l1367 06BA                           l1383 0731                           l1359 068D  
                         l1471 0638                           l1463 0612                           l1455 05FA  
                         l1439 05C2                           l1289 02B8                           l1297 01CB  
                         l1393 0784                           l1385 073A                           l1377 0717  
                         l1369 06C3                           l1473 0647                           l1465 0620  
                         l1457 0600                           l1449 05E1                           l1299 01CE  
                         l1395 0797                           l1387 0743                           l1379 071E  
                         l1467 0626                           l1459 0606                           l1397 07AE  
                         l1389 0769                           l1469 062C                           l1399 07C1  
                         STR_1 0009                           u1000 0353                           u1001 0352  
                         u1010 0358                           u1011 0357                           u1020 0287  
                         u1021 0286                           u1110 01DD                           u1111 01DC  
                         u1040 0299                           u1120 01E7                           u1200 073A  
                         u1041 0298                           u1121 01E6                           u1105 01CF  
                         u1201 0739                           u1210 0743                           u1035 028B  
                         u1211 0742                           u1060 02AA                           u1140 01FA  
                         u1061 02A9                           u1141 01F9                           u1125 01E3  
                         u1150 065C                           u1230 05A3                           u1055 029A  
                         u1135 01EE                           u1151 065B                           u1231 05A2  
                         u1080 02BE                           u1160 066D                           u1240 05F3  
                         u1081 02BD                           u1065 02A6                           u1161 066C  
                         u1241 05F2                           u1090 01CB                           u1170 0676  
                         u1250 0600                           u1075 02B2                           u1091 01CA  
                         u1171 0675                           u1307 0640                           u1251 05FF  
                         u1180 06BA                           u1260 0612                           u1317 024A  
                         u1181 06B9                           u1261 0611                           u1190 06C3  
                         u1270 062C                           u1407 0378                           u1327 0256  
                         u1191 06C2                           u1271 062B                           u1417 0393  
                         u1337 026D                           u1427 03AE                           u1347 0279  
                         u1357 01BF                           u1367 020A                           u1287 05A9  
                         u1377 0216                           u1297 061A                           u1387 022D  
                         u1397 0239                           _RCIF 0065                           _TXIF 0064  
                         _main 0589                           btemp 007E               __end_of_ADC_Init 03C6  
                         start 0000               __end_of_LCD_Char 027F                   LCD_Char@data 0072  
             __end_of_LCD_init 01C5                __end_of___aldiv 04CA                          ?_main 0070  
              __end_of___awdiv 042D                __end_of___awmod 0362                ___awdiv@divisor 0070  
              __end_of___lwdiv 02C3                __end_of___lwmod 01FF                ___awdiv@counter 0075  
                        _RCREG 001A                          _RCSTA 0018                          _SPBRG 0099  
                        _PORTB 0006                          _TRISB 0086                          _TRISC 0087  
                        _TXREG 0019                          _TXSTA 0098            ___lmul@multiplicand 0074  
                        main@i 0041                          main@j 0042                          _tx_sn 0653  
              __end_of_ser_int 0188                          pclath 000A                          status 0003  
                        wtemp0 007E                __initialization 07E5                   __end_of_main 0653  
                       ??_main 003E                 LCD_num@result1 003A           _intdigits_chardigits 0188  
                    ??_LCD_num 007E                         _ADCON0 001F                         _ADCON1 009F  
                       _ADRESH 001E                         _ADRESL 009E               ___awdiv@dividend 0072  
                       ?_tx_sn 0079                         ___lmul 02C3                      ??___aldiv 007D  
                    ??___awdiv 0074                      ??___awmod 0074                      ??___lwdiv 0074  
                    ??___lwmod 0074               ___awdiv@quotient 0077                ___awmod@divisor 0070  
              ___awmod@counter 0075           __size_of_LCD_Command 0040          ?_intdigits_chardigits 0070  
                    ?_ADC_Init 0070                      ??_ser_int 0070                      ?_LCD_Char 0070  
      __end_of__initialization 07FC                      ?_LCD_init 0070                 __pcstackCOMMON 0070  
                 __pidataBANK0 016E                  __end_of_tx_sn 07E5                     __end_of_tx 017B  
                   ??_ADC_Init 0070                        ??_tx_sn 007B                     __pbssBANK0 0043  
               tx_sn@remainder 002C                     ??_LCD_Char 0070                     ??_LCD_init 0073  
                 tx_sn@result1 002A                     __pmaintext 0589                        ?___lmul 0070  
               ___lmul@product 0079         ??_intdigits_chardigits 0076                        _LCD_num 04CA  
                   __stringtab 0003                        ___aldiv 042D                        ___awdiv 03C6  
              __size_of___lmul 0046                        ___awmod 0309                        ___lwdiv 027F  
                      ___lwmod 01C5                        __ptext1 0653                        __ptext2 0170  
                      __ptext3 0309                        __ptext4 03C6                        __ptext5 017B  
                      __ptext6 04CA                        __ptext7 0188                        __ptext8 01C5  
                      __ptext9 027F               ___awmod@dividend 0072               ___aldiv@dividend 0024  
                      _ser_int 017B           end_of_initialization 07FC               ___aldiv@quotient 002A  
            __size_of_ADC_Init 0064              __size_of_LCD_Char 0040              __size_of_LCD_init 002E  
                ??_LCD_Command 0070                 __end_of___lmul 0309            start_initialization 07E5  
                LCD_num@digit1 0032                  LCD_num@digit2 0034                  LCD_num@digit3 0036  
                   LCD_num@val 002E                  LCD_num@result 0038                       ??___lmul 0078  
                  __pdataBANK0 004E               LCD_num@remainder 003C            __end_of_LCD_Command 023F  
                     ?_LCD_num 002E                      ___latbits 0002                  __pcstackBANK0 0020  
                  tx_sn@digit1 0026                    tx_sn@digit2 0028                    tx_sn@digit3 0024  
                  tx_sn@digit4 0020               ___lwdiv@dividend 0072                    tx_sn@result 0022  
                     ?___aldiv 0020                       ?___awdiv 0070                       ?___awmod 0070  
                     ?___lwdiv 0070                       ?___lwmod 0070                      __pstrings 0003  
__size_of_intdigits_chardigits 000F                       _ADC_Init 0362                       ?_ser_int 0070  
             ___lwdiv@quotient 0075                 __size_of_tx_sn 0192                    __size_of_tx 000B  
              ___aldiv@divisor 0020                       _LCD_Char 023F                ___aldiv@counter 0028  
                     _LCD_init 0197                       _GO_nDONE 00FA                    _LCD_Command 01FF  
                  __stringbase 0008               __size_of_LCD_num 00BF              ___lmul@multiplier 0070  
        intdigits_chardigits@a 0070          intdigits_chardigits@b 0072          intdigits_chardigits@c 0074  
             __size_of___aldiv 009D               __size_of___awdiv 0067               __size_of___awmod 0059  
             __size_of___lwdiv 0044               __size_of___lwmod 003A             __end_of__stringtab 0009  
              ___lwdiv@divisor 0070                ___lwdiv@counter 0077                       __ptext10 02C3  
                     __ptext11 042D                       __ptext12 023F                       __ptext13 0197  
                     __ptext14 01FF                       __ptext15 0362               __size_of_ser_int 000D  
                __size_of_main 00CA                LCD_Command@cmnd 0072               ___lwmod@dividend 0072  
                    stringcode 0003                       tx_sn@val 0079                ___lwmod@divisor 0070  
              ___lwmod@counter 0075                       stringdir 0003                       stringtab 0003  
                 ___aldiv@sign 0029   __end_of_intdigits_chardigits 0197  
