

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 04 13:16:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  001E                     _ADRESH	set	30
   180  001F                     _ADCON0	set	31
   181  001A                     _RCREG	set	26
   182  0019                     _TXREG	set	25
   183  0018                     _RCSTA	set	24
   184  0006                     _PORTB	set	6
   185  00FA                     _GO_nDONE	set	250
   186  0065                     _RCIF	set	101
   187  0064                     _TXIF	set	100
   188  0039                     _RC1	set	57
   189  0038                     _RC0	set	56
   190  009E                     _ADRESL	set	158
   191  009F                     _ADCON1	set	159
   192  0087                     _TRISC	set	135
   193  0086                     _TRISB	set	134
   194  0099                     _SPBRG	set	153
   195  0098                     _TXSTA	set	152
   196                           
   197                           	psect	cinit
   198  07F2                     start_initialization:	
   199                           ; #config settings
   200                           
   201  07F2                     __initialization:
   202                           
   203                           ; Clear objects allocated to BANK0
   204  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   205  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   206  07F4  01C3               	clrf	__pbssBANK0& (0+127)
   207  07F5  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   208  07F6  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   209  07F7  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   210  07F8  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   211  07F9  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   212  07FA  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   213  07FB  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   214  07FC                     end_of_initialization:	
   215                           ;End of C runtime variable initialization code
   216                           
   217  07FC                     __end_of__initialization:
   218  07FC  0183               	clrf	3
   219  07FD  120A  118A  2E25   	ljmp	_main	;jump to C main() function
   220                           
   221                           	psect	bssBANK0
   222  0043                     __pbssBANK0:
   223  0043                     _AV:
   224  0043                     	ds	8
   225                           
   226                           	psect	cstackCOMMON
   227  0070                     __pcstackCOMMON:
   228  0070                     ?_ADC_Init:
   229  0070                     ??_ADC_Init:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_LCD_Command:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ??_LCD_Command:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_LCD_Char:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ??_LCD_Char:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_LCD_init:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_ser_int:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_ser_int:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_tx:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??_tx:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_main:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?___lwdiv:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?___lwmod:	
   266                           ; 2 bytes @ 0x0
   267                           
   268  0070                     ?___lmul:	
   269                           ; 2 bytes @ 0x0
   270                           
   271  0070                     tx@a:	
   272                           ; 4 bytes @ 0x0
   273                           
   274  0070                     ___lwdiv@divisor:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ___lwmod@divisor:	
   278                           ; 2 bytes @ 0x0
   279                           
   280  0070                     ___lmul@multiplier:	
   281                           ; 2 bytes @ 0x0
   282                           
   283                           
   284                           ; 4 bytes @ 0x0
   285  0070                     	ds	2
   286  0072                     LCD_Command@cmnd:
   287  0072                     LCD_Char@data:	
   288                           ; 1 bytes @ 0x2
   289                           
   290  0072                     ___lwdiv@dividend:	
   291                           ; 1 bytes @ 0x2
   292                           
   293  0072                     ___lwmod@dividend:	
   294                           ; 2 bytes @ 0x2
   295                           
   296                           
   297                           ; 2 bytes @ 0x2
   298  0072                     	ds	1
   299  0073                     ??_LCD_init:
   300                           
   301                           ; 1 bytes @ 0x3
   302  0073                     	ds	1
   303  0074                     ??___lwdiv:
   304  0074                     ??___lwmod:	
   305                           ; 1 bytes @ 0x4
   306                           
   307  0074                     ___lmul@multiplicand:	
   308                           ; 1 bytes @ 0x4
   309                           
   310                           
   311                           ; 4 bytes @ 0x4
   312  0074                     	ds	1
   313  0075                     ___lwmod@counter:
   314  0075                     ___lwdiv@quotient:	
   315                           ; 1 bytes @ 0x5
   316                           
   317                           
   318                           ; 2 bytes @ 0x5
   319  0075                     	ds	2
   320  0077                     ___lwdiv@counter:
   321                           
   322                           ; 1 bytes @ 0x7
   323  0077                     	ds	1
   324  0078                     ??___lmul:
   325                           
   326                           ; 1 bytes @ 0x8
   327  0078                     	ds	1
   328  0079                     ___lmul@product:
   329                           
   330                           ; 4 bytes @ 0x9
   331  0079                     	ds	4
   332  007D                     ??___aldiv:
   333                           
   334                           ; 1 bytes @ 0xD
   335  007D                     	ds	1
   336  007E                     ??_LCD_num:
   337                           
   338                           	psect	cstackBANK0
   339  0020                     __pcstackBANK0:	
   340                           ; 1 bytes @ 0xE
   341                           
   342  0020                     ?___aldiv:
   343  0020                     ___aldiv@divisor:	
   344                           ; 4 bytes @ 0x0
   345                           
   346                           
   347                           ; 4 bytes @ 0x0
   348  0020                     	ds	4
   349  0024                     ___aldiv@dividend:
   350                           
   351                           ; 4 bytes @ 0x4
   352  0024                     	ds	4
   353  0028                     ___aldiv@counter:
   354                           
   355                           ; 1 bytes @ 0x8
   356  0028                     	ds	1
   357  0029                     ___aldiv@sign:
   358                           
   359                           ; 1 bytes @ 0x9
   360  0029                     	ds	1
   361  002A                     ___aldiv@quotient:
   362                           
   363                           ; 4 bytes @ 0xA
   364  002A                     	ds	4
   365  002E                     ?_LCD_num:
   366  002E                     LCD_num@val:	
   367                           ; 1 bytes @ 0xE
   368                           
   369                           
   370                           ; 4 bytes @ 0xE
   371  002E                     	ds	4
   372  0032                     LCD_num@digit1:
   373                           
   374                           ; 2 bytes @ 0x12
   375  0032                     	ds	2
   376  0034                     LCD_num@digit2:
   377                           
   378                           ; 2 bytes @ 0x14
   379  0034                     	ds	2
   380  0036                     LCD_num@digit3:
   381                           
   382                           ; 2 bytes @ 0x16
   383  0036                     	ds	2
   384  0038                     LCD_num@result:
   385                           
   386                           ; 2 bytes @ 0x18
   387  0038                     	ds	2
   388  003A                     LCD_num@result1:
   389                           
   390                           ; 2 bytes @ 0x1A
   391  003A                     	ds	2
   392  003C                     LCD_num@remainder:
   393                           
   394                           ; 2 bytes @ 0x1C
   395  003C                     	ds	2
   396  003E                     ??_main:
   397                           
   398                           ; 1 bytes @ 0x1E
   399  003E                     	ds	3
   400  0041                     main@i:
   401                           
   402                           ; 2 bytes @ 0x21
   403  0041                     	ds	2
   404                           
   405                           	psect	maintext
   406  0625                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 28 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  i               2   33[BANK0 ] int 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       2       0       0       0
   428 ;;      Temps:          0       3       0       0       0
   429 ;;      Totals:         0       5       0       0       0
   430 ;;Total ram usage:        5 bytes
   431 ;; Hardware stack levels required when called: 2
   432 ;; This function calls:
   433 ;;		_ADC_Init
   434 ;;		_LCD_Command
   435 ;;		_LCD_init
   436 ;;		_LCD_num
   437 ;;		_ser_int
   438 ;;		_tx
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _main
   446  0625                     _main:
   447  0625                     l1075:	
   448                           ;incstack = 0
   449                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   450                           
   451                           
   452                           ;main.c: 30:     TRISB =0x00;
   453  0625  1683               	bsf	3,5	;RP0=1, select bank1
   454  0626  1303               	bcf	3,6	;RP1=0, select bank1
   455  0627  0186               	clrf	6	;volatile
   456                           
   457                           ;main.c: 31:     TRISC =0x00;
   458  0628  0187               	clrf	7	;volatile
   459  0629                     l1077:
   460                           
   461                           ;main.c: 33:     LCD_init();
   462  0629  120A  118A  244F  120A  118A  	fcall	_LCD_init
   463  062E                     l1079:
   464                           
   465                           ;main.c: 34:     ser_int();
   466  062E  120A  118A  2442  120A  118A  	fcall	_ser_int
   467  0633                     l1081:
   468                           
   469                           ;main.c: 36:     {;main.c: 37:         ADC_Init ();
   470  0633  120A  118A  25C1  120A  118A  	fcall	_ADC_Init
   471  0638                     l1083:
   472                           
   473                           ;main.c: 38:         GO_nDONE=1;
   474  0638  1283               	bcf	3,5	;RP0=0, select bank0
   475  0639  1303               	bcf	3,6	;RP1=0, select bank0
   476  063A  151F               	bsf	31,2	;volatile
   477  063B                     l79:	
   478                           ;main.c: 39:         while(GO_nDONE==1);
   479                           
   480  063B  191F               	btfsc	31,2	;volatile
   481  063C  2E3E               	goto	u681
   482  063D  2E3F               	goto	u680
   483  063E                     u681:
   484  063E  2E3B               	goto	l79
   485  063F                     u680:
   486  063F                     l1085:
   487                           
   488                           ;main.c: 40:         _delay((unsigned long)((10)*(20000000/4000.0)));
   489  063F  3041               	movlw	65
   490  0640  1283               	bcf	3,5	;RP0=0, select bank0
   491  0641  1303               	bcf	3,6	;RP1=0, select bank0
   492  0642  00BF               	movwf	??_main+1
   493  0643  30ED               	movlw	237
   494  0644  00BE               	movwf	??_main
   495  0645                     u707:
   496  0645  0BBE               	decfsz	??_main,f
   497  0646  2E45               	goto	u707
   498  0647  0BBF               	decfsz	??_main+1,f
   499  0648  2E45               	goto	u707
   500  0649  2E4A               	nop2
   501  064A                     l1087:
   502                           
   503                           ;main.c: 42:         for (int i=0;i<4;i++)
   504  064A  1283               	bcf	3,5	;RP0=0, select bank0
   505  064B  1303               	bcf	3,6	;RP1=0, select bank0
   506  064C  01C1               	clrf	main@i
   507  064D  01C2               	clrf	main@i+1
   508  064E                     l1093:
   509                           
   510                           ;main.c: 43:         {;main.c: 44:             LCD_num(AV[i]);
   511  064E  1283               	bcf	3,5	;RP0=0, select bank0
   512  064F  1303               	bcf	3,6	;RP1=0, select bank0
   513  0650  0841               	movf	main@i,w
   514  0651  00BE               	movwf	??_main
   515  0652  073E               	addwf	??_main,w
   516  0653  3E43               	addlw	(low (_AV| 0))& (0+255)
   517  0654  0084               	movwf	4
   518  0655  1383               	bcf	3,7	;select IRP bank0
   519  0656  0800               	movf	0,w
   520  0657  00BF               	movwf	??_main+1
   521  0658  0A84               	incf	4,f
   522  0659  0800               	movf	0,w
   523  065A  00C0               	movwf	??_main+2
   524  065B  083F               	movf	??_main+1,w
   525  065C  00AE               	movwf	LCD_num@val
   526  065D  0840               	movf	??_main+2,w
   527  065E  00AF               	movwf	LCD_num@val+1
   528  065F  01B0               	clrf	LCD_num@val+2
   529  0660  01B1               	clrf	LCD_num@val+3
   530  0661  120A  118A  2746  120A  118A  	fcall	_LCD_num
   531  0666                     l1095:
   532                           
   533                           ;main.c: 45:             tx('a');
   534  0666  3061               	movlw	97
   535  0667  120A  118A  2437  120A  118A  	fcall	_tx
   536  066C                     l1097:
   537                           
   538                           ;main.c: 46:             _delay((unsigned long)((500)*(20000000/4000.0)));
   539  066C  300D               	movlw	13
   540  066D  1283               	bcf	3,5	;RP0=0, select bank0
   541  066E  1303               	bcf	3,6	;RP1=0, select bank0
   542  066F  00C0               	movwf	??_main+2
   543  0670  30AF               	movlw	175
   544  0671  00BF               	movwf	??_main+1
   545  0672  30B5               	movlw	181
   546  0673  00BE               	movwf	??_main
   547  0674                     u717:
   548  0674  0BBE               	decfsz	??_main,f
   549  0675  2E74               	goto	u717
   550  0676  0BBF               	decfsz	??_main+1,f
   551  0677  2E74               	goto	u717
   552  0678  0BC0               	decfsz	??_main+2,f
   553  0679  2E74               	goto	u717
   554  067A  2E7B               	nop2
   555  067B                     l1099:
   556                           
   557                           ;main.c: 47:         }
   558  067B  3001               	movlw	1
   559  067C  1283               	bcf	3,5	;RP0=0, select bank0
   560  067D  1303               	bcf	3,6	;RP1=0, select bank0
   561  067E  07C1               	addwf	main@i,f
   562  067F  1803               	skipnc
   563  0680  0AC2               	incf	main@i+1,f
   564  0681  3000               	movlw	0
   565  0682  07C2               	addwf	main@i+1,f
   566  0683                     l1101:
   567  0683  0842               	movf	main@i+1,w
   568  0684  3A80               	xorlw	128
   569  0685  00FF               	movwf	btemp+1
   570  0686  3080               	movlw	128
   571  0687  027F               	subwf	btemp+1,w
   572  0688  1D03               	skipz
   573  0689  2E8C               	goto	u695
   574  068A  3004               	movlw	4
   575  068B  0241               	subwf	main@i,w
   576  068C                     u695:
   577  068C  1C03               	skipc
   578  068D  2E8F               	goto	u691
   579  068E  2E90               	goto	u690
   580  068F                     u691:
   581  068F  2E4E               	goto	l1093
   582  0690                     u690:
   583  0690                     l1103:
   584                           
   585                           ;main.c: 48:         LCD_Command(0x01);
   586  0690  3001               	movlw	1
   587  0691  120A  118A  24B7  120A  118A  	fcall	_LCD_Command
   588  0696                     l1105:
   589                           
   590                           ;main.c: 49:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   591  0696  301A               	movlw	26
   592  0697  1283               	bcf	3,5	;RP0=0, select bank0
   593  0698  1303               	bcf	3,6	;RP1=0, select bank0
   594  0699  00C0               	movwf	??_main+2
   595  069A  305E               	movlw	94
   596  069B  00BF               	movwf	??_main+1
   597  069C  306D               	movlw	109
   598  069D  00BE               	movwf	??_main
   599  069E                     u727:
   600  069E  0BBE               	decfsz	??_main,f
   601  069F  2E9E               	goto	u727
   602  06A0  0BBF               	decfsz	??_main+1,f
   603  06A1  2E9E               	goto	u727
   604  06A2  0BC0               	decfsz	??_main+2,f
   605  06A3  2E9E               	goto	u727
   606  06A4  2EA5               	nop2
   607  06A5  2E33               	goto	l1081
   608  06A6  120A  118A  2800   	ljmp	start
   609  06A9                     __end_of_main:
   610                           
   611                           	psect	text1
   612  0437                     __ptext1:	
   613 ;; *************** function _tx *****************
   614 ;; Defined at:
   615 ;;		line 13 in file "./uart.h"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  a               1    wreg     unsigned char 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  a               1    0[COMMON] unsigned char 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      unsigned char 
   622 ;; Registers used:
   623 ;;		wreg
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         1       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0
   632 ;;      Totals:         1       0       0       0       0
   633 ;;Total ram usage:        1 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _tx
   644  0437                     _tx:
   645                           
   646                           ;incstack = 0
   647                           ; Regs used in _tx: [wreg]
   648                           ;tx@a stored from wreg
   649  0437  00F0               	movwf	tx@a
   650  0438                     l1063:
   651                           
   652                           ;./uart.h: 13: unsigned char tx(unsigned char a);./uart.h: 14: {;./uart.h: 15:  TXREG=a;
   653  0438  0870               	movf	tx@a,w
   654  0439  1283               	bcf	3,5	;RP0=0, select bank0
   655  043A  1303               	bcf	3,6	;RP1=0, select bank0
   656  043B  0099               	movwf	25	;volatile
   657  043C                     l62:	
   658                           ;./uart.h: 16:  while(!TXIF);
   659                           
   660  043C  1E0C               	btfss	12,4	;volatile
   661  043D  2C3F               	goto	u661
   662  043E  2C40               	goto	u660
   663  043F                     u661:
   664  043F  2C3C               	goto	l62
   665  0440                     u660:
   666  0440                     l64:
   667                           
   668                           ;./uart.h: 17:  TXIF = 0;
   669  0440  120C               	bcf	12,4	;volatile
   670  0441                     l65:
   671  0441  0008               	return
   672  0442                     __end_of_tx:
   673                           
   674                           	psect	text2
   675  0442                     __ptext2:	
   676 ;; *************** function _ser_int *****************
   677 ;; Defined at:
   678 ;;		line 6 in file "./uart.h"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _ser_int
   707  0442                     _ser_int:
   708  0442                     l1061:	
   709                           ;incstack = 0
   710                           ; Regs used in _ser_int: [wreg]
   711                           
   712                           
   713                           ;./uart.h: 8:  TXSTA= 0x20;
   714  0442  3020               	movlw	32
   715  0443  1683               	bsf	3,5	;RP0=1, select bank1
   716  0444  1303               	bcf	3,6	;RP1=0, select bank1
   717  0445  0098               	movwf	24	;volatile
   718                           
   719                           ;./uart.h: 9:  RCSTA= 0b10010000;
   720  0446  3090               	movlw	144
   721  0447  1283               	bcf	3,5	;RP0=0, select bank0
   722  0448  1303               	bcf	3,6	;RP1=0, select bank0
   723  0449  0098               	movwf	24	;volatile
   724                           
   725                           ;./uart.h: 10:  SPBRG=31;
   726  044A  301F               	movlw	31
   727  044B  1683               	bsf	3,5	;RP0=1, select bank1
   728  044C  1303               	bcf	3,6	;RP1=0, select bank1
   729  044D  0099               	movwf	25	;volatile
   730  044E                     l59:
   731  044E  0008               	return
   732  044F                     __end_of_ser_int:
   733                           
   734                           	psect	text3
   735  0746                     __ptext3:	
   736 ;; *************** function _LCD_num *****************
   737 ;; Defined at:
   738 ;;		line 47 in file "./lcd4bit.h"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  val             4   14[BANK0 ] long 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  remainder       2   28[BANK0 ] unsigned int 
   743 ;;  result1         2   26[BANK0 ] unsigned int 
   744 ;;  result          2   24[BANK0 ] unsigned int 
   745 ;;  digit3          2   22[BANK0 ] unsigned int 
   746 ;;  digit2          2   20[BANK0 ] unsigned int 
   747 ;;  digit1          2   18[BANK0 ] unsigned int 
   748 ;;  calb_val        2    0        int 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       4       0       0       0
   759 ;;      Locals:         0      12       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0      16       0       0       0
   762 ;;Total ram usage:       16 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 1
   765 ;; This function calls:
   766 ;;		_LCD_Char
   767 ;;		___aldiv
   768 ;;		___lmul
   769 ;;		___lwdiv
   770 ;;		___lwmod
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _LCD_num
   778  0746                     _LCD_num:
   779  0746                     l1039:	
   780                           ;incstack = 0
   781                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
   782                           
   783  0746                     l1041:
   784                           
   785                           ;./lcd4bit.h: 50:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 51:     result1;;./lcd4bit.h: 52:     result = ((val*100)/calb_val);
   786  0746  3000               	movlw	0
   787  0747  1283               	bcf	3,5	;RP0=0, select bank0
   788  0748  1303               	bcf	3,6	;RP1=0, select bank0
   789  0749  00A3               	movwf	___aldiv@divisor+3
   790  074A  3000               	movlw	0
   791  074B  00A2               	movwf	___aldiv@divisor+2
   792  074C  3000               	movlw	0
   793  074D  00A1               	movwf	___aldiv@divisor+1
   794  074E  30C8               	movlw	200
   795  074F  00A0               	movwf	___aldiv@divisor
   796  0750  0831               	movf	LCD_num@val+3,w
   797  0751  00F3               	movwf	___lmul@multiplier+3
   798  0752  0830               	movf	LCD_num@val+2,w
   799  0753  00F2               	movwf	___lmul@multiplier+2
   800  0754  082F               	movf	LCD_num@val+1,w
   801  0755  00F1               	movwf	___lmul@multiplier+1
   802  0756  082E               	movf	LCD_num@val,w
   803  0757  00F0               	movwf	___lmul@multiplier
   804  0758  3000               	movlw	0
   805  0759  00F7               	movwf	___lmul@multiplicand+3
   806  075A  3000               	movlw	0
   807  075B  00F6               	movwf	___lmul@multiplicand+2
   808  075C  3000               	movlw	0
   809  075D  00F5               	movwf	___lmul@multiplicand+1
   810  075E  3064               	movlw	100
   811  075F  00F4               	movwf	___lmul@multiplicand
   812  0760  120A  118A  257B  120A  118A  	fcall	___lmul
   813  0765  0873               	movf	?___lmul+3,w
   814  0766  1283               	bcf	3,5	;RP0=0, select bank0
   815  0767  1303               	bcf	3,6	;RP1=0, select bank0
   816  0768  00A7               	movwf	___aldiv@dividend+3
   817  0769  0872               	movf	?___lmul+2,w
   818  076A  00A6               	movwf	___aldiv@dividend+2
   819  076B  0871               	movf	?___lmul+1,w
   820  076C  00A5               	movwf	___aldiv@dividend+1
   821  076D  0870               	movf	?___lmul,w
   822  076E  00A4               	movwf	___aldiv@dividend
   823  076F  120A  118A  26A9  120A  118A  	fcall	___aldiv
   824  0774  1283               	bcf	3,5	;RP0=0, select bank0
   825  0775  1303               	bcf	3,6	;RP1=0, select bank0
   826  0776  0821               	movf	?___aldiv+1,w
   827  0777  00B9               	movwf	LCD_num@result+1
   828  0778  0820               	movf	?___aldiv,w
   829  0779  00B8               	movwf	LCD_num@result
   830  077A                     l1043:
   831                           
   832                           ;./lcd4bit.h: 53:     remainder = result% 10;
   833  077A  300A               	movlw	10
   834  077B  00F0               	movwf	___lwmod@divisor
   835  077C  3000               	movlw	0
   836  077D  00F1               	movwf	___lwmod@divisor+1
   837  077E  0839               	movf	LCD_num@result+1,w
   838  077F  00F3               	movwf	___lwmod@dividend+1
   839  0780  0838               	movf	LCD_num@result,w
   840  0781  00F2               	movwf	___lwmod@dividend
   841  0782  120A  118A  247D  120A  118A  	fcall	___lwmod
   842  0787  0871               	movf	?___lwmod+1,w
   843  0788  1283               	bcf	3,5	;RP0=0, select bank0
   844  0789  1303               	bcf	3,6	;RP1=0, select bank0
   845  078A  00BD               	movwf	LCD_num@remainder+1
   846  078B  0870               	movf	?___lwmod,w
   847  078C  00BC               	movwf	LCD_num@remainder
   848  078D                     l1045:
   849                           
   850                           ;./lcd4bit.h: 54:     result1 = result /10;
   851  078D  300A               	movlw	10
   852  078E  00F0               	movwf	___lwdiv@divisor
   853  078F  3000               	movlw	0
   854  0790  00F1               	movwf	___lwdiv@divisor+1
   855  0791  0839               	movf	LCD_num@result+1,w
   856  0792  00F3               	movwf	___lwdiv@dividend+1
   857  0793  0838               	movf	LCD_num@result,w
   858  0794  00F2               	movwf	___lwdiv@dividend
   859  0795  120A  118A  2537  120A  118A  	fcall	___lwdiv
   860  079A  0871               	movf	?___lwdiv+1,w
   861  079B  1283               	bcf	3,5	;RP0=0, select bank0
   862  079C  1303               	bcf	3,6	;RP1=0, select bank0
   863  079D  00BB               	movwf	LCD_num@result1+1
   864  079E  0870               	movf	?___lwdiv,w
   865  079F  00BA               	movwf	LCD_num@result1
   866  07A0                     l1047:
   867                           
   868                           ;./lcd4bit.h: 55:     digit1 = remainder;
   869  07A0  083D               	movf	LCD_num@remainder+1,w
   870  07A1  00B3               	movwf	LCD_num@digit1+1
   871  07A2  083C               	movf	LCD_num@remainder,w
   872  07A3  00B2               	movwf	LCD_num@digit1
   873                           
   874                           ;./lcd4bit.h: 56:     remainder = result1%10;
   875  07A4  300A               	movlw	10
   876  07A5  00F0               	movwf	___lwmod@divisor
   877  07A6  3000               	movlw	0
   878  07A7  00F1               	movwf	___lwmod@divisor+1
   879  07A8  083B               	movf	LCD_num@result1+1,w
   880  07A9  00F3               	movwf	___lwmod@dividend+1
   881  07AA  083A               	movf	LCD_num@result1,w
   882  07AB  00F2               	movwf	___lwmod@dividend
   883  07AC  120A  118A  247D  120A  118A  	fcall	___lwmod
   884  07B1  0871               	movf	?___lwmod+1,w
   885  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   886  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   887  07B4  00BD               	movwf	LCD_num@remainder+1
   888  07B5  0870               	movf	?___lwmod,w
   889  07B6  00BC               	movwf	LCD_num@remainder
   890  07B7                     l1049:
   891                           
   892                           ;./lcd4bit.h: 57:     digit2 = remainder;
   893  07B7  083D               	movf	LCD_num@remainder+1,w
   894  07B8  00B5               	movwf	LCD_num@digit2+1
   895  07B9  083C               	movf	LCD_num@remainder,w
   896  07BA  00B4               	movwf	LCD_num@digit2
   897  07BB                     l1051:
   898                           
   899                           ;./lcd4bit.h: 58:     remainder = (result1/10);
   900  07BB  300A               	movlw	10
   901  07BC  00F0               	movwf	___lwdiv@divisor
   902  07BD  3000               	movlw	0
   903  07BE  00F1               	movwf	___lwdiv@divisor+1
   904  07BF  083B               	movf	LCD_num@result1+1,w
   905  07C0  00F3               	movwf	___lwdiv@dividend+1
   906  07C1  083A               	movf	LCD_num@result1,w
   907  07C2  00F2               	movwf	___lwdiv@dividend
   908  07C3  120A  118A  2537  120A  118A  	fcall	___lwdiv
   909  07C8  0871               	movf	?___lwdiv+1,w
   910  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   911  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   912  07CB  00BD               	movwf	LCD_num@remainder+1
   913  07CC  0870               	movf	?___lwdiv,w
   914  07CD  00BC               	movwf	LCD_num@remainder
   915                           
   916                           ;./lcd4bit.h: 59:     digit3=remainder;
   917  07CE  083D               	movf	LCD_num@remainder+1,w
   918  07CF  00B7               	movwf	LCD_num@digit3+1
   919  07D0  083C               	movf	LCD_num@remainder,w
   920  07D1  00B6               	movwf	LCD_num@digit3
   921  07D2                     l1053:
   922                           
   923                           ;./lcd4bit.h: 60:     LCD_Char(digit3+0x30);
   924  07D2  0836               	movf	LCD_num@digit3,w
   925  07D3  3E30               	addlw	48
   926  07D4  120A  118A  24F7  120A  118A  	fcall	_LCD_Char
   927  07D9                     l1055:
   928                           
   929                           ;./lcd4bit.h: 61:     LCD_Char('.');
   930  07D9  302E               	movlw	46
   931  07DA  120A  118A  24F7  120A  118A  	fcall	_LCD_Char
   932  07DF                     l1057:
   933                           
   934                           ;./lcd4bit.h: 62:     LCD_Char(digit2+0x30);
   935  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   936  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   937  07E1  0834               	movf	LCD_num@digit2,w
   938  07E2  3E30               	addlw	48
   939  07E3  120A  118A  24F7  120A  118A  	fcall	_LCD_Char
   940  07E8                     l1059:
   941                           
   942                           ;./lcd4bit.h: 63:     LCD_Char(digit1+0x30);
   943  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   944  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   945  07EA  0832               	movf	LCD_num@digit1,w
   946  07EB  3E30               	addlw	48
   947  07EC  120A  118A  24F7  120A  118A  	fcall	_LCD_Char
   948  07F1                     l50:
   949  07F1  0008               	return
   950  07F2                     __end_of_LCD_num:
   951                           
   952                           	psect	text4
   953  047D                     __ptext4:	
   954 ;; *************** function ___lwmod *****************
   955 ;; Defined at:
   956 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  divisor         2    0[COMMON] unsigned int 
   959 ;;  dividend        2    2[COMMON] unsigned int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  counter         1    5[COMMON] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  2    0[COMMON] unsigned int 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         4       0       0       0       0
   972 ;;      Locals:         1       0       0       0       0
   973 ;;      Temps:          1       0       0       0       0
   974 ;;      Totals:         6       0       0       0       0
   975 ;;Total ram usage:        6 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_LCD_num
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function ___lwmod
   986  047D                     ___lwmod:
   987  047D                     l1013:	
   988                           ;incstack = 0
   989                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   990                           
   991  047D  0870               	movf	___lwmod@divisor,w
   992  047E  0471               	iorwf	___lwmod@divisor+1,w
   993  047F  1903               	btfsc	3,2
   994  0480  2C82               	goto	u601
   995  0481  2C83               	goto	u600
   996  0482                     u601:
   997  0482  2CB2               	goto	l1031
   998  0483                     u600:
   999  0483                     l1015:
  1000  0483  01F5               	clrf	___lwmod@counter
  1001  0484  0AF5               	incf	___lwmod@counter,f
  1002  0485  2C91               	goto	l1021
  1003  0486                     l1017:
  1004  0486  3001               	movlw	1
  1005  0487                     u615:
  1006  0487  1003               	clrc
  1007  0488  0DF0               	rlf	___lwmod@divisor,f
  1008  0489  0DF1               	rlf	___lwmod@divisor+1,f
  1009  048A  3EFF               	addlw	-1
  1010  048B  1D03               	skipz
  1011  048C  2C87               	goto	u615
  1012  048D                     l1019:
  1013  048D  3001               	movlw	1
  1014  048E  00F4               	movwf	??___lwmod
  1015  048F  0874               	movf	??___lwmod,w
  1016  0490  07F5               	addwf	___lwmod@counter,f
  1017  0491                     l1021:
  1018  0491  1FF1               	btfss	___lwmod@divisor+1,7
  1019  0492  2C94               	goto	u621
  1020  0493  2C95               	goto	u620
  1021  0494                     u621:
  1022  0494  2C86               	goto	l1017
  1023  0495                     u620:
  1024  0495                     l1023:
  1025  0495  0871               	movf	___lwmod@divisor+1,w
  1026  0496  0273               	subwf	___lwmod@dividend+1,w
  1027  0497  1D03               	skipz
  1028  0498  2C9B               	goto	u635
  1029  0499  0870               	movf	___lwmod@divisor,w
  1030  049A  0272               	subwf	___lwmod@dividend,w
  1031  049B                     u635:
  1032  049B  1C03               	skipc
  1033  049C  2C9E               	goto	u631
  1034  049D  2C9F               	goto	u630
  1035  049E                     u631:
  1036  049E  2CA5               	goto	l1027
  1037  049F                     u630:
  1038  049F                     l1025:
  1039  049F  0870               	movf	___lwmod@divisor,w
  1040  04A0  02F2               	subwf	___lwmod@dividend,f
  1041  04A1  0871               	movf	___lwmod@divisor+1,w
  1042  04A2  1C03               	skipc
  1043  04A3  03F3               	decf	___lwmod@dividend+1,f
  1044  04A4  02F3               	subwf	___lwmod@dividend+1,f
  1045  04A5                     l1027:
  1046  04A5  3001               	movlw	1
  1047  04A6                     u645:
  1048  04A6  1003               	clrc
  1049  04A7  0CF1               	rrf	___lwmod@divisor+1,f
  1050  04A8  0CF0               	rrf	___lwmod@divisor,f
  1051  04A9  3EFF               	addlw	-1
  1052  04AA  1D03               	skipz
  1053  04AB  2CA6               	goto	u645
  1054  04AC                     l1029:
  1055  04AC  3001               	movlw	1
  1056  04AD  02F5               	subwf	___lwmod@counter,f
  1057  04AE  1D03               	btfss	3,2
  1058  04AF  2CB1               	goto	u651
  1059  04B0  2CB2               	goto	u650
  1060  04B1                     u651:
  1061  04B1  2C95               	goto	l1023
  1062  04B2                     u650:
  1063  04B2                     l1031:
  1064  04B2  0873               	movf	___lwmod@dividend+1,w
  1065  04B3  00F1               	movwf	?___lwmod+1
  1066  04B4  0872               	movf	___lwmod@dividend,w
  1067  04B5  00F0               	movwf	?___lwmod
  1068  04B6                     l457:
  1069  04B6  0008               	return
  1070  04B7                     __end_of___lwmod:
  1071                           
  1072                           	psect	text5
  1073  0537                     __ptext5:	
  1074 ;; *************** function ___lwdiv *****************
  1075 ;; Defined at:
  1076 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  divisor         2    0[COMMON] unsigned int 
  1079 ;;  dividend        2    2[COMMON] unsigned int 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  quotient        2    5[COMMON] unsigned int 
  1082 ;;  counter         1    7[COMMON] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2    0[COMMON] unsigned int 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         4       0       0       0       0
  1093 ;;      Locals:         3       0       0       0       0
  1094 ;;      Temps:          1       0       0       0       0
  1095 ;;      Totals:         8       0       0       0       0
  1096 ;;Total ram usage:        8 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_LCD_num
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function ___lwdiv
  1107  0537                     ___lwdiv:
  1108  0537                     l987:	
  1109                           ;incstack = 0
  1110                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1111                           
  1112  0537  01F5               	clrf	___lwdiv@quotient
  1113  0538  01F6               	clrf	___lwdiv@quotient+1
  1114  0539                     l989:
  1115  0539  0870               	movf	___lwdiv@divisor,w
  1116  053A  0471               	iorwf	___lwdiv@divisor+1,w
  1117  053B  1903               	btfsc	3,2
  1118  053C  2D3E               	goto	u531
  1119  053D  2D3F               	goto	u530
  1120  053E                     u531:
  1121  053E  2D76               	goto	l1009
  1122  053F                     u530:
  1123  053F                     l991:
  1124  053F  01F7               	clrf	___lwdiv@counter
  1125  0540  0AF7               	incf	___lwdiv@counter,f
  1126  0541  2D4D               	goto	l997
  1127  0542                     l993:
  1128  0542  3001               	movlw	1
  1129  0543                     u545:
  1130  0543  1003               	clrc
  1131  0544  0DF0               	rlf	___lwdiv@divisor,f
  1132  0545  0DF1               	rlf	___lwdiv@divisor+1,f
  1133  0546  3EFF               	addlw	-1
  1134  0547  1D03               	skipz
  1135  0548  2D43               	goto	u545
  1136  0549                     l995:
  1137  0549  3001               	movlw	1
  1138  054A  00F4               	movwf	??___lwdiv
  1139  054B  0874               	movf	??___lwdiv,w
  1140  054C  07F7               	addwf	___lwdiv@counter,f
  1141  054D                     l997:
  1142  054D  1FF1               	btfss	___lwdiv@divisor+1,7
  1143  054E  2D50               	goto	u551
  1144  054F  2D51               	goto	u550
  1145  0550                     u551:
  1146  0550  2D42               	goto	l993
  1147  0551                     u550:
  1148  0551                     l999:
  1149  0551  3001               	movlw	1
  1150  0552                     u565:
  1151  0552  1003               	clrc
  1152  0553  0DF5               	rlf	___lwdiv@quotient,f
  1153  0554  0DF6               	rlf	___lwdiv@quotient+1,f
  1154  0555  3EFF               	addlw	-1
  1155  0556  1D03               	skipz
  1156  0557  2D52               	goto	u565
  1157  0558  0871               	movf	___lwdiv@divisor+1,w
  1158  0559  0273               	subwf	___lwdiv@dividend+1,w
  1159  055A  1D03               	skipz
  1160  055B  2D5E               	goto	u575
  1161  055C  0870               	movf	___lwdiv@divisor,w
  1162  055D  0272               	subwf	___lwdiv@dividend,w
  1163  055E                     u575:
  1164  055E  1C03               	skipc
  1165  055F  2D61               	goto	u571
  1166  0560  2D62               	goto	u570
  1167  0561                     u571:
  1168  0561  2D69               	goto	l1005
  1169  0562                     u570:
  1170  0562                     l1001:
  1171  0562  0870               	movf	___lwdiv@divisor,w
  1172  0563  02F2               	subwf	___lwdiv@dividend,f
  1173  0564  0871               	movf	___lwdiv@divisor+1,w
  1174  0565  1C03               	skipc
  1175  0566  03F3               	decf	___lwdiv@dividend+1,f
  1176  0567  02F3               	subwf	___lwdiv@dividend+1,f
  1177  0568                     l1003:
  1178  0568  1475               	bsf	___lwdiv@quotient,0
  1179  0569                     l1005:
  1180  0569  3001               	movlw	1
  1181  056A                     u585:
  1182  056A  1003               	clrc
  1183  056B  0CF1               	rrf	___lwdiv@divisor+1,f
  1184  056C  0CF0               	rrf	___lwdiv@divisor,f
  1185  056D  3EFF               	addlw	-1
  1186  056E  1D03               	skipz
  1187  056F  2D6A               	goto	u585
  1188  0570                     l1007:
  1189  0570  3001               	movlw	1
  1190  0571  02F7               	subwf	___lwdiv@counter,f
  1191  0572  1D03               	btfss	3,2
  1192  0573  2D75               	goto	u591
  1193  0574  2D76               	goto	u590
  1194  0575                     u591:
  1195  0575  2D51               	goto	l999
  1196  0576                     u590:
  1197  0576                     l1009:
  1198  0576  0876               	movf	___lwdiv@quotient+1,w
  1199  0577  00F1               	movwf	?___lwdiv+1
  1200  0578  0875               	movf	___lwdiv@quotient,w
  1201  0579  00F0               	movwf	?___lwdiv
  1202  057A                     l447:
  1203  057A  0008               	return
  1204  057B                     __end_of___lwdiv:
  1205                           
  1206                           	psect	text6
  1207  057B                     __ptext6:	
  1208 ;; *************** function ___lmul *****************
  1209 ;; Defined at:
  1210 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  multiplier      4    0[COMMON] unsigned long 
  1213 ;;  multiplicand    4    4[COMMON] unsigned long 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  product         4    9[COMMON] unsigned long 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  4    0[COMMON] unsigned long 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         8       0       0       0       0
  1226 ;;      Locals:         4       0       0       0       0
  1227 ;;      Temps:          1       0       0       0       0
  1228 ;;      Totals:        13       0       0       0       0
  1229 ;;Total ram usage:       13 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_LCD_num
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function ___lmul
  1240  057B                     ___lmul:
  1241  057B                     l933:	
  1242                           ;incstack = 0
  1243                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1244                           
  1245  057B  3000               	movlw	0
  1246  057C  00FC               	movwf	___lmul@product+3
  1247  057D  3000               	movlw	0
  1248  057E  00FB               	movwf	___lmul@product+2
  1249  057F  3000               	movlw	0
  1250  0580  00FA               	movwf	___lmul@product+1
  1251  0581  3000               	movlw	0
  1252  0582  00F9               	movwf	___lmul@product
  1253  0583                     l935:
  1254  0583  1C70               	btfss	___lmul@multiplier,0
  1255  0584  2D86               	goto	u381
  1256  0585  2D87               	goto	u380
  1257  0586                     u381:
  1258  0586  2D9E               	goto	l939
  1259  0587                     u380:
  1260  0587                     l937:
  1261  0587  0874               	movf	___lmul@multiplicand,w
  1262  0588  07F9               	addwf	___lmul@product,f
  1263  0589  0875               	movf	___lmul@multiplicand+1,w
  1264  058A  1103               	clrz
  1265  058B  1803               	skipnc
  1266  058C  3E01               	addlw	1
  1267  058D  1903               	skipnz
  1268  058E  2D90               	goto	u391
  1269  058F  07FA               	addwf	___lmul@product+1,f
  1270  0590                     u391:
  1271  0590  0876               	movf	___lmul@multiplicand+2,w
  1272  0591  1103               	clrz
  1273  0592  1803               	skipnc
  1274  0593  3E01               	addlw	1
  1275  0594  1903               	skipnz
  1276  0595  2D97               	goto	u392
  1277  0596  07FB               	addwf	___lmul@product+2,f
  1278  0597                     u392:
  1279  0597  0877               	movf	___lmul@multiplicand+3,w
  1280  0598  1103               	clrz
  1281  0599  1803               	skipnc
  1282  059A  3E01               	addlw	1
  1283  059B  1903               	skipnz
  1284  059C  2D9E               	goto	u393
  1285  059D  07FC               	addwf	___lmul@product+3,f
  1286  059E                     u393:
  1287  059E                     l939:
  1288  059E  3001               	movlw	1
  1289  059F  00F8               	movwf	??___lmul
  1290  05A0                     u405:
  1291  05A0  1003               	clrc
  1292  05A1  0DF4               	rlf	___lmul@multiplicand,f
  1293  05A2  0DF5               	rlf	___lmul@multiplicand+1,f
  1294  05A3  0DF6               	rlf	___lmul@multiplicand+2,f
  1295  05A4  0DF7               	rlf	___lmul@multiplicand+3,f
  1296  05A5  0BF8               	decfsz	??___lmul,f
  1297  05A6  2DA0               	goto	u405
  1298  05A7                     l941:
  1299  05A7  3001               	movlw	1
  1300  05A8                     u415:
  1301  05A8  1003               	clrc
  1302  05A9  0CF3               	rrf	___lmul@multiplier+3,f
  1303  05AA  0CF2               	rrf	___lmul@multiplier+2,f
  1304  05AB  0CF1               	rrf	___lmul@multiplier+1,f
  1305  05AC  0CF0               	rrf	___lmul@multiplier,f
  1306  05AD  3EFF               	addlw	-1
  1307  05AE  1D03               	skipz
  1308  05AF  2DA8               	goto	u415
  1309  05B0  0873               	movf	___lmul@multiplier+3,w
  1310  05B1  0472               	iorwf	___lmul@multiplier+2,w
  1311  05B2  0471               	iorwf	___lmul@multiplier+1,w
  1312  05B3  0470               	iorwf	___lmul@multiplier,w
  1313  05B4  1D03               	skipz
  1314  05B5  2DB7               	goto	u421
  1315  05B6  2DB8               	goto	u420
  1316  05B7                     u421:
  1317  05B7  2D83               	goto	l935
  1318  05B8                     u420:
  1319  05B8                     l943:
  1320  05B8  087C               	movf	___lmul@product+3,w
  1321  05B9  00F3               	movwf	?___lmul+3
  1322  05BA  087B               	movf	___lmul@product+2,w
  1323  05BB  00F2               	movwf	?___lmul+2
  1324  05BC  087A               	movf	___lmul@product+1,w
  1325  05BD  00F1               	movwf	?___lmul+1
  1326  05BE  0879               	movf	___lmul@product,w
  1327  05BF  00F0               	movwf	?___lmul
  1328  05C0                     l189:
  1329  05C0  0008               	return
  1330  05C1                     __end_of___lmul:
  1331                           
  1332                           	psect	text7
  1333  06A9                     __ptext7:	
  1334 ;; *************** function ___aldiv *****************
  1335 ;; Defined at:
  1336 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  divisor         4    0[BANK0 ] long 
  1339 ;;  dividend        4    4[BANK0 ] long 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  quotient        4   10[BANK0 ] long 
  1342 ;;  sign            1    9[BANK0 ] unsigned char 
  1343 ;;  counter         1    8[BANK0 ] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  4    0[BANK0 ] long 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       8       0       0       0
  1354 ;;      Locals:         0       6       0       0       0
  1355 ;;      Temps:          1       0       0       0       0
  1356 ;;      Totals:         1      14       0       0       0
  1357 ;;Total ram usage:       15 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_LCD_num
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function ___aldiv
  1368  06A9                     ___aldiv:
  1369  06A9                     l947:	
  1370                           ;incstack = 0
  1371                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1372                           
  1373  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1374  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1375  06AB  01A9               	clrf	___aldiv@sign
  1376  06AC                     l949:
  1377  06AC  1FA3               	btfss	___aldiv@divisor+3,7
  1378  06AD  2EAF               	goto	u431
  1379  06AE  2EB0               	goto	u430
  1380  06AF                     u431:
  1381  06AF  2EBD               	goto	l240
  1382  06B0                     u430:
  1383  06B0                     l951:
  1384  06B0  09A0               	comf	___aldiv@divisor,f
  1385  06B1  09A1               	comf	___aldiv@divisor+1,f
  1386  06B2  09A2               	comf	___aldiv@divisor+2,f
  1387  06B3  09A3               	comf	___aldiv@divisor+3,f
  1388  06B4  0AA0               	incf	___aldiv@divisor,f
  1389  06B5  1903               	skipnz
  1390  06B6  0AA1               	incf	___aldiv@divisor+1,f
  1391  06B7  1903               	skipnz
  1392  06B8  0AA2               	incf	___aldiv@divisor+2,f
  1393  06B9  1903               	skipnz
  1394  06BA  0AA3               	incf	___aldiv@divisor+3,f
  1395  06BB  01A9               	clrf	___aldiv@sign
  1396  06BC  0AA9               	incf	___aldiv@sign,f
  1397  06BD                     l240:
  1398  06BD  1FA7               	btfss	___aldiv@dividend+3,7
  1399  06BE  2EC0               	goto	u441
  1400  06BF  2EC1               	goto	u440
  1401  06C0                     u441:
  1402  06C0  2ED0               	goto	l957
  1403  06C1                     u440:
  1404  06C1                     l953:
  1405  06C1  09A4               	comf	___aldiv@dividend,f
  1406  06C2  09A5               	comf	___aldiv@dividend+1,f
  1407  06C3  09A6               	comf	___aldiv@dividend+2,f
  1408  06C4  09A7               	comf	___aldiv@dividend+3,f
  1409  06C5  0AA4               	incf	___aldiv@dividend,f
  1410  06C6  1903               	skipnz
  1411  06C7  0AA5               	incf	___aldiv@dividend+1,f
  1412  06C8  1903               	skipnz
  1413  06C9  0AA6               	incf	___aldiv@dividend+2,f
  1414  06CA  1903               	skipnz
  1415  06CB  0AA7               	incf	___aldiv@dividend+3,f
  1416  06CC                     l955:
  1417  06CC  3001               	movlw	1
  1418  06CD  00FD               	movwf	??___aldiv
  1419  06CE  087D               	movf	??___aldiv,w
  1420  06CF  06A9               	xorwf	___aldiv@sign,f
  1421  06D0                     l957:
  1422  06D0  3000               	movlw	0
  1423  06D1  00AD               	movwf	___aldiv@quotient+3
  1424  06D2  3000               	movlw	0
  1425  06D3  00AC               	movwf	___aldiv@quotient+2
  1426  06D4  3000               	movlw	0
  1427  06D5  00AB               	movwf	___aldiv@quotient+1
  1428  06D6  3000               	movlw	0
  1429  06D7  00AA               	movwf	___aldiv@quotient
  1430  06D8                     l959:
  1431  06D8  0823               	movf	___aldiv@divisor+3,w
  1432  06D9  0422               	iorwf	___aldiv@divisor+2,w
  1433  06DA  0421               	iorwf	___aldiv@divisor+1,w
  1434  06DB  0420               	iorwf	___aldiv@divisor,w
  1435  06DC  1903               	skipnz
  1436  06DD  2EDF               	goto	u451
  1437  06DE  2EE0               	goto	u450
  1438  06DF                     u451:
  1439  06DF  2F2D               	goto	l979
  1440  06E0                     u450:
  1441  06E0                     l961:
  1442  06E0  01A8               	clrf	___aldiv@counter
  1443  06E1  0AA8               	incf	___aldiv@counter,f
  1444  06E2  2EF0               	goto	l965
  1445  06E3                     l963:
  1446  06E3  3001               	movlw	1
  1447  06E4  00FD               	movwf	??___aldiv
  1448  06E5                     u465:
  1449  06E5  1003               	clrc
  1450  06E6  0DA0               	rlf	___aldiv@divisor,f
  1451  06E7  0DA1               	rlf	___aldiv@divisor+1,f
  1452  06E8  0DA2               	rlf	___aldiv@divisor+2,f
  1453  06E9  0DA3               	rlf	___aldiv@divisor+3,f
  1454  06EA  0BFD               	decfsz	??___aldiv,f
  1455  06EB  2EE5               	goto	u465
  1456  06EC  3001               	movlw	1
  1457  06ED  00FD               	movwf	??___aldiv
  1458  06EE  087D               	movf	??___aldiv,w
  1459  06EF  07A8               	addwf	___aldiv@counter,f
  1460  06F0                     l965:
  1461  06F0  1FA3               	btfss	___aldiv@divisor+3,7
  1462  06F1  2EF3               	goto	u471
  1463  06F2  2EF4               	goto	u470
  1464  06F3                     u471:
  1465  06F3  2EE3               	goto	l963
  1466  06F4                     u470:
  1467  06F4                     l967:
  1468  06F4  3001               	movlw	1
  1469  06F5  00FD               	movwf	??___aldiv
  1470  06F6                     u485:
  1471  06F6  1003               	clrc
  1472  06F7  0DAA               	rlf	___aldiv@quotient,f
  1473  06F8  0DAB               	rlf	___aldiv@quotient+1,f
  1474  06F9  0DAC               	rlf	___aldiv@quotient+2,f
  1475  06FA  0DAD               	rlf	___aldiv@quotient+3,f
  1476  06FB  0BFD               	decfsz	??___aldiv,f
  1477  06FC  2EF6               	goto	u485
  1478  06FD                     l969:
  1479  06FD  0823               	movf	___aldiv@divisor+3,w
  1480  06FE  0227               	subwf	___aldiv@dividend+3,w
  1481  06FF  1D03               	skipz
  1482  0700  2F0B               	goto	u495
  1483  0701  0822               	movf	___aldiv@divisor+2,w
  1484  0702  0226               	subwf	___aldiv@dividend+2,w
  1485  0703  1D03               	skipz
  1486  0704  2F0B               	goto	u495
  1487  0705  0821               	movf	___aldiv@divisor+1,w
  1488  0706  0225               	subwf	___aldiv@dividend+1,w
  1489  0707  1D03               	skipz
  1490  0708  2F0B               	goto	u495
  1491  0709  0820               	movf	___aldiv@divisor,w
  1492  070A  0224               	subwf	___aldiv@dividend,w
  1493  070B                     u495:
  1494  070B  1C03               	skipc
  1495  070C  2F0E               	goto	u491
  1496  070D  2F0F               	goto	u490
  1497  070E                     u491:
  1498  070E  2F1E               	goto	l975
  1499  070F                     u490:
  1500  070F                     l971:
  1501  070F  0820               	movf	___aldiv@divisor,w
  1502  0710  02A4               	subwf	___aldiv@dividend,f
  1503  0711  0821               	movf	___aldiv@divisor+1,w
  1504  0712  1C03               	skipc
  1505  0713  0F21               	incfsz	___aldiv@divisor+1,w
  1506  0714  02A5               	subwf	___aldiv@dividend+1,f
  1507  0715  0822               	movf	___aldiv@divisor+2,w
  1508  0716  1C03               	skipc
  1509  0717  0F22               	incfsz	___aldiv@divisor+2,w
  1510  0718  02A6               	subwf	___aldiv@dividend+2,f
  1511  0719  0823               	movf	___aldiv@divisor+3,w
  1512  071A  1C03               	skipc
  1513  071B  0F23               	incfsz	___aldiv@divisor+3,w
  1514  071C  02A7               	subwf	___aldiv@dividend+3,f
  1515  071D                     l973:
  1516  071D  142A               	bsf	___aldiv@quotient,0
  1517  071E                     l975:
  1518  071E  3001               	movlw	1
  1519  071F                     u505:
  1520  071F  1003               	clrc
  1521  0720  0CA3               	rrf	___aldiv@divisor+3,f
  1522  0721  0CA2               	rrf	___aldiv@divisor+2,f
  1523  0722  0CA1               	rrf	___aldiv@divisor+1,f
  1524  0723  0CA0               	rrf	___aldiv@divisor,f
  1525  0724  3EFF               	addlw	-1
  1526  0725  1D03               	skipz
  1527  0726  2F1F               	goto	u505
  1528  0727                     l977:
  1529  0727  3001               	movlw	1
  1530  0728  02A8               	subwf	___aldiv@counter,f
  1531  0729  1D03               	btfss	3,2
  1532  072A  2F2C               	goto	u511
  1533  072B  2F2D               	goto	u510
  1534  072C                     u511:
  1535  072C  2EF4               	goto	l967
  1536  072D                     u510:
  1537  072D                     l979:
  1538  072D  0829               	movf	___aldiv@sign,w
  1539  072E  1903               	btfsc	3,2
  1540  072F  2F31               	goto	u521
  1541  0730  2F32               	goto	u520
  1542  0731                     u521:
  1543  0731  2F3D               	goto	l983
  1544  0732                     u520:
  1545  0732                     l981:
  1546  0732  09AA               	comf	___aldiv@quotient,f
  1547  0733  09AB               	comf	___aldiv@quotient+1,f
  1548  0734  09AC               	comf	___aldiv@quotient+2,f
  1549  0735  09AD               	comf	___aldiv@quotient+3,f
  1550  0736  0AAA               	incf	___aldiv@quotient,f
  1551  0737  1903               	skipnz
  1552  0738  0AAB               	incf	___aldiv@quotient+1,f
  1553  0739  1903               	skipnz
  1554  073A  0AAC               	incf	___aldiv@quotient+2,f
  1555  073B  1903               	skipnz
  1556  073C  0AAD               	incf	___aldiv@quotient+3,f
  1557  073D                     l983:
  1558  073D  082D               	movf	___aldiv@quotient+3,w
  1559  073E  00A3               	movwf	?___aldiv+3
  1560  073F  082C               	movf	___aldiv@quotient+2,w
  1561  0740  00A2               	movwf	?___aldiv+2
  1562  0741  082B               	movf	___aldiv@quotient+1,w
  1563  0742  00A1               	movwf	?___aldiv+1
  1564  0743  082A               	movf	___aldiv@quotient,w
  1565  0744  00A0               	movwf	?___aldiv
  1566  0745                     l250:
  1567  0745  0008               	return
  1568  0746                     __end_of___aldiv:
  1569                           
  1570                           	psect	text8
  1571  04F7                     __ptext8:	
  1572 ;; *************** function _LCD_Char *****************
  1573 ;; Defined at:
  1574 ;;		line 23 in file "./lcd4bit.h"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  data            1    wreg     unsigned char 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  data            1    2[COMMON] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1588 ;;      Params:         0       0       0       0       0
  1589 ;;      Locals:         1       0       0       0       0
  1590 ;;      Temps:          2       0       0       0       0
  1591 ;;      Totals:         3       0       0       0       0
  1592 ;;Total ram usage:        3 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_LCD_num
  1598 ;;		_show
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _LCD_Char
  1604  04F7                     _LCD_Char:
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1608                           ;LCD_Char@data stored from wreg
  1609  04F7  00F2               	movwf	LCD_Char@data
  1610  04F8                     l915:
  1611                           
  1612                           ;./lcd4bit.h: 23: void LCD_Char (unsigned char data);./lcd4bit.h: 24: {;./lcd4bit.h: 25:
      +                               RC0 = 1;
  1613  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1614  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1615  04FA  1407               	bsf	7,0	;volatile
  1616  04FB                     l917:
  1617                           
  1618                           ;./lcd4bit.h: 26:     PORTB = data;
  1619  04FB  0872               	movf	LCD_Char@data,w
  1620  04FC  0086               	movwf	6	;volatile
  1621  04FD                     l919:
  1622                           
  1623                           ;./lcd4bit.h: 27:     RC1 = 1;
  1624  04FD  1487               	bsf	7,1	;volatile
  1625                           
  1626                           ;./lcd4bit.h: 28:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1627  04FE  3041               	movlw	65
  1628  04FF  00F1               	movwf	??_LCD_Char+1
  1629  0500  30EE               	movlw	238
  1630  0501  00F0               	movwf	??_LCD_Char
  1631  0502                     u737:
  1632  0502  0BF0               	decfsz	??_LCD_Char,f
  1633  0503  2D02               	goto	u737
  1634  0504  0BF1               	decfsz	??_LCD_Char+1,f
  1635  0505  2D02               	goto	u737
  1636  0506  0000               	nop
  1637  0507                     l921:
  1638                           
  1639                           ;./lcd4bit.h: 29:     RC1 = 0;
  1640  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0509  1087               	bcf	7,1	;volatile
  1643                           
  1644                           ;./lcd4bit.h: 30:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1645  050A  3041               	movlw	65
  1646  050B  00F1               	movwf	??_LCD_Char+1
  1647  050C  30EE               	movlw	238
  1648  050D  00F0               	movwf	??_LCD_Char
  1649  050E                     u747:
  1650  050E  0BF0               	decfsz	??_LCD_Char,f
  1651  050F  2D0E               	goto	u747
  1652  0510  0BF1               	decfsz	??_LCD_Char+1,f
  1653  0511  2D0E               	goto	u747
  1654  0512  0000               	nop
  1655  0513                     l923:
  1656                           
  1657                           ;./lcd4bit.h: 31:     PORTB = (data<<4);
  1658  0513  0872               	movf	LCD_Char@data,w
  1659  0514  00F0               	movwf	??_LCD_Char
  1660  0515  3003               	movlw	3
  1661  0516                     u375:
  1662  0516  1003               	clrc
  1663  0517  0DF0               	rlf	??_LCD_Char,f
  1664  0518  3EFF               	addlw	-1
  1665  0519  1D03               	skipz
  1666  051A  2D16               	goto	u375
  1667  051B  1003               	clrc
  1668  051C  0D70               	rlf	??_LCD_Char,w
  1669  051D  1283               	bcf	3,5	;RP0=0, select bank0
  1670  051E  1303               	bcf	3,6	;RP1=0, select bank0
  1671  051F  0086               	movwf	6	;volatile
  1672  0520                     l925:
  1673                           
  1674                           ;./lcd4bit.h: 32:     RC1 = 1;
  1675  0520  1487               	bsf	7,1	;volatile
  1676  0521                     l927:
  1677                           
  1678                           ;./lcd4bit.h: 33:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1679  0521  3041               	movlw	65
  1680  0522  00F1               	movwf	??_LCD_Char+1
  1681  0523  30EE               	movlw	238
  1682  0524  00F0               	movwf	??_LCD_Char
  1683  0525                     u757:
  1684  0525  0BF0               	decfsz	??_LCD_Char,f
  1685  0526  2D25               	goto	u757
  1686  0527  0BF1               	decfsz	??_LCD_Char+1,f
  1687  0528  2D25               	goto	u757
  1688  0529  0000               	nop
  1689  052A                     l929:
  1690                           
  1691                           ;./lcd4bit.h: 34:     RC1 = 0;
  1692  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1693  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1694  052C  1087               	bcf	7,1	;volatile
  1695  052D                     l931:
  1696                           
  1697                           ;./lcd4bit.h: 35:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1698  052D  3041               	movlw	65
  1699  052E  00F1               	movwf	??_LCD_Char+1
  1700  052F  30EE               	movlw	238
  1701  0530  00F0               	movwf	??_LCD_Char
  1702  0531                     u767:
  1703  0531  0BF0               	decfsz	??_LCD_Char,f
  1704  0532  2D31               	goto	u767
  1705  0533  0BF1               	decfsz	??_LCD_Char+1,f
  1706  0534  2D31               	goto	u767
  1707  0535  0000               	nop
  1708  0536                     l44:
  1709  0536  0008               	return
  1710  0537                     __end_of_LCD_Char:
  1711                           
  1712                           	psect	text9
  1713  044F                     __ptext9:	
  1714 ;; *************** function _LCD_init *****************
  1715 ;; Defined at:
  1716 ;;		line 37 in file "./lcd4bit.h"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0
  1732 ;;      Temps:          2       0       0       0       0
  1733 ;;      Totals:         2       0       0       0       0
  1734 ;;Total ram usage:        2 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 1
  1737 ;; This function calls:
  1738 ;;		_LCD_Command
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _LCD_init
  1746  044F                     _LCD_init:
  1747  044F                     l1035:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1750                           
  1751                           
  1752                           ;./lcd4bit.h: 39:     LCD_Command (0x02);
  1753  044F  3002               	movlw	2
  1754  0450  120A  118A  24B7  120A  118A  	fcall	_LCD_Command
  1755                           
  1756                           ;./lcd4bit.h: 40:     LCD_Command (0x28);
  1757  0455  3028               	movlw	40
  1758  0456  120A  118A  24B7  120A  118A  	fcall	_LCD_Command
  1759                           
  1760                           ;./lcd4bit.h: 41:     LCD_Command (0x80);
  1761  045B  3080               	movlw	128
  1762  045C  120A  118A  24B7  120A  118A  	fcall	_LCD_Command
  1763                           
  1764                           ;./lcd4bit.h: 42:     LCD_Command (0x0C);
  1765  0461  300C               	movlw	12
  1766  0462  120A  118A  24B7  120A  118A  	fcall	_LCD_Command
  1767                           
  1768                           ;./lcd4bit.h: 43:     LCD_Command (0x06);
  1769  0467  3006               	movlw	6
  1770  0468  120A  118A  24B7  120A  118A  	fcall	_LCD_Command
  1771                           
  1772                           ;./lcd4bit.h: 44:     LCD_Command (0x01);
  1773  046D  3001               	movlw	1
  1774  046E  120A  118A  24B7  120A  118A  	fcall	_LCD_Command
  1775  0473                     l1037:
  1776                           
  1777                           ;./lcd4bit.h: 45:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1778  0473  3041               	movlw	65
  1779  0474  00F4               	movwf	??_LCD_init+1
  1780  0475  30EE               	movlw	238
  1781  0476  00F3               	movwf	??_LCD_init
  1782  0477                     u777:
  1783  0477  0BF3               	decfsz	??_LCD_init,f
  1784  0478  2C77               	goto	u777
  1785  0479  0BF4               	decfsz	??_LCD_init+1,f
  1786  047A  2C77               	goto	u777
  1787  047B  0000               	nop
  1788  047C                     l47:
  1789  047C  0008               	return
  1790  047D                     __end_of_LCD_init:
  1791                           
  1792                           	psect	text10
  1793  04B7                     __ptext10:	
  1794 ;; *************** function _LCD_Command *****************
  1795 ;; Defined at:
  1796 ;;		line 9 in file "./lcd4bit.h"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  cmnd            1    wreg     unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  cmnd            1    2[COMMON] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       0       0       0       0
  1811 ;;      Locals:         1       0       0       0       0
  1812 ;;      Temps:          2       0       0       0       0
  1813 ;;      Totals:         3       0       0       0       0
  1814 ;;Total ram usage:        3 bytes
  1815 ;; Hardware stack levels used: 1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_LCD_init
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _LCD_Command
  1826  04B7                     _LCD_Command:
  1827                           
  1828                           ;incstack = 0
  1829                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  1830                           ;LCD_Command@cmnd stored from wreg
  1831  04B7  00F2               	movwf	LCD_Command@cmnd
  1832  04B8                     l897:
  1833                           
  1834                           ;./lcd4bit.h: 9: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 10: {;./lcd4bit.h: 1
      +                          1:     RC0 = 0;
  1835  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1836  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1837  04BA  1007               	bcf	7,0	;volatile
  1838  04BB                     l899:
  1839                           
  1840                           ;./lcd4bit.h: 12:     PORTB = cmnd;
  1841  04BB  0872               	movf	LCD_Command@cmnd,w
  1842  04BC  0086               	movwf	6	;volatile
  1843  04BD                     l901:
  1844                           
  1845                           ;./lcd4bit.h: 13:     RC1 = 1;
  1846  04BD  1487               	bsf	7,1	;volatile
  1847                           
  1848                           ;./lcd4bit.h: 14:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1849  04BE  3041               	movlw	65
  1850  04BF  00F1               	movwf	??_LCD_Command+1
  1851  04C0  30EE               	movlw	238
  1852  04C1  00F0               	movwf	??_LCD_Command
  1853  04C2                     u787:
  1854  04C2  0BF0               	decfsz	??_LCD_Command,f
  1855  04C3  2CC2               	goto	u787
  1856  04C4  0BF1               	decfsz	??_LCD_Command+1,f
  1857  04C5  2CC2               	goto	u787
  1858  04C6  0000               	nop
  1859  04C7                     l903:
  1860                           
  1861                           ;./lcd4bit.h: 15:     RC1 = 0;
  1862  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1863  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1864  04C9  1087               	bcf	7,1	;volatile
  1865                           
  1866                           ;./lcd4bit.h: 16:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1867  04CA  3041               	movlw	65
  1868  04CB  00F1               	movwf	??_LCD_Command+1
  1869  04CC  30EE               	movlw	238
  1870  04CD  00F0               	movwf	??_LCD_Command
  1871  04CE                     u797:
  1872  04CE  0BF0               	decfsz	??_LCD_Command,f
  1873  04CF  2CCE               	goto	u797
  1874  04D0  0BF1               	decfsz	??_LCD_Command+1,f
  1875  04D1  2CCE               	goto	u797
  1876  04D2  0000               	nop
  1877  04D3                     l905:
  1878                           
  1879                           ;./lcd4bit.h: 17:     PORTB = (cmnd<<4);
  1880  04D3  0872               	movf	LCD_Command@cmnd,w
  1881  04D4  00F0               	movwf	??_LCD_Command
  1882  04D5  3003               	movlw	3
  1883  04D6                     u365:
  1884  04D6  1003               	clrc
  1885  04D7  0DF0               	rlf	??_LCD_Command,f
  1886  04D8  3EFF               	addlw	-1
  1887  04D9  1D03               	skipz
  1888  04DA  2CD6               	goto	u365
  1889  04DB  1003               	clrc
  1890  04DC  0D70               	rlf	??_LCD_Command,w
  1891  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1892  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1893  04DF  0086               	movwf	6	;volatile
  1894  04E0                     l907:
  1895                           
  1896                           ;./lcd4bit.h: 18:     RC1 = 1;
  1897  04E0  1487               	bsf	7,1	;volatile
  1898  04E1                     l909:
  1899                           
  1900                           ;./lcd4bit.h: 19:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1901  04E1  3041               	movlw	65
  1902  04E2  00F1               	movwf	??_LCD_Command+1
  1903  04E3  30EE               	movlw	238
  1904  04E4  00F0               	movwf	??_LCD_Command
  1905  04E5                     u807:
  1906  04E5  0BF0               	decfsz	??_LCD_Command,f
  1907  04E6  2CE5               	goto	u807
  1908  04E7  0BF1               	decfsz	??_LCD_Command+1,f
  1909  04E8  2CE5               	goto	u807
  1910  04E9  0000               	nop
  1911  04EA                     l911:
  1912                           
  1913                           ;./lcd4bit.h: 20:     RC1 = 0;
  1914  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  1915  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  1916  04EC  1087               	bcf	7,1	;volatile
  1917  04ED                     l913:
  1918                           
  1919                           ;./lcd4bit.h: 21:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1920  04ED  3041               	movlw	65
  1921  04EE  00F1               	movwf	??_LCD_Command+1
  1922  04EF  30EE               	movlw	238
  1923  04F0  00F0               	movwf	??_LCD_Command
  1924  04F1                     u817:
  1925  04F1  0BF0               	decfsz	??_LCD_Command,f
  1926  04F2  2CF1               	goto	u817
  1927  04F3  0BF1               	decfsz	??_LCD_Command+1,f
  1928  04F4  2CF1               	goto	u817
  1929  04F5  0000               	nop
  1930  04F6                     l41:
  1931  04F6  0008               	return
  1932  04F7                     __end_of_LCD_Command:
  1933                           
  1934                           	psect	text11
  1935  05C1                     __ptext11:	
  1936 ;; *************** function _ADC_Init *****************
  1937 ;; Defined at:
  1938 ;;		line 53 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0
  1954 ;;      Temps:          2       0       0       0       0
  1955 ;;      Totals:         2       0       0       0       0
  1956 ;;Total ram usage:        2 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           
  1966                           ;psect for function _ADC_Init
  1967  05C1                     _ADC_Init:
  1968  05C1                     l1065:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _ADC_Init: [wreg]
  1971                           
  1972                           
  1973                           ;main.c: 55:     ADCON0 = 0x85;
  1974  05C1  3085               	movlw	133
  1975  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1976  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1977  05C4  009F               	movwf	31	;volatile
  1978                           
  1979                           ;main.c: 56:     ADCON1 = 0xC0;
  1980  05C5  30C0               	movlw	192
  1981  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  1982  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  1983  05C8  009F               	movwf	31	;volatile
  1984                           
  1985                           ;main.c: 57:     AV[0]= ((ADRESH<<8)+ADRESL);
  1986  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1987  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1988  05CB  081E               	movf	30,w	;volatile
  1989  05CC  00C4               	movwf	_AV+1
  1990  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  1991  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  1992  05CF  081E               	movf	30,w	;volatile
  1993  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1994  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1995  05D2  00C3               	movwf	_AV
  1996                           
  1997                           ;main.c: 59:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1998  05D3  3041               	movlw	65
  1999  05D4  00F1               	movwf	??_ADC_Init+1
  2000  05D5  30EE               	movlw	238
  2001  05D6  00F0               	movwf	??_ADC_Init
  2002  05D7                     u827:
  2003  05D7  0BF0               	decfsz	??_ADC_Init,f
  2004  05D8  2DD7               	goto	u827
  2005  05D9  0BF1               	decfsz	??_ADC_Init+1,f
  2006  05DA  2DD7               	goto	u827
  2007  05DB  0000               	nop
  2008                           
  2009                           ;main.c: 60:     ADCON0 = 0x8D;
  2010  05DC  308D               	movlw	141
  2011  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2012  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2013  05DF  009F               	movwf	31	;volatile
  2014                           
  2015                           ;main.c: 61:     ADCON1 = 0xC0;
  2016  05E0  30C0               	movlw	192
  2017  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  2018  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  2019  05E3  009F               	movwf	31	;volatile
  2020                           
  2021                           ;main.c: 62:     AV[1]= ((ADRESH<<8)+ADRESL);
  2022  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2023  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2024  05E6  081E               	movf	30,w	;volatile
  2025  05E7  00C6               	movwf	_AV+3
  2026  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  2027  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  2028  05EA  081E               	movf	30,w	;volatile
  2029  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2030  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2031  05ED  00C5               	movwf	_AV+2
  2032                           
  2033                           ;main.c: 64:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2034  05EE  3041               	movlw	65
  2035  05EF  00F1               	movwf	??_ADC_Init+1
  2036  05F0  30EE               	movlw	238
  2037  05F1  00F0               	movwf	??_ADC_Init
  2038  05F2                     u837:
  2039  05F2  0BF0               	decfsz	??_ADC_Init,f
  2040  05F3  2DF2               	goto	u837
  2041  05F4  0BF1               	decfsz	??_ADC_Init+1,f
  2042  05F5  2DF2               	goto	u837
  2043  05F6  0000               	nop
  2044                           
  2045                           ;main.c: 65:     ADCON0 = 0x95;
  2046  05F7  3095               	movlw	149
  2047  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  2048  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  2049  05FA  009F               	movwf	31	;volatile
  2050                           
  2051                           ;main.c: 66:     ADCON1 = 0xC0;
  2052  05FB  30C0               	movlw	192
  2053  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  2054  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  2055  05FE  009F               	movwf	31	;volatile
  2056                           
  2057                           ;main.c: 67:     AV[2]= ((ADRESH<<8)+ADRESL);
  2058  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0601  081E               	movf	30,w	;volatile
  2061  0602  00C8               	movwf	_AV+5
  2062  0603  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0604  1303               	bcf	3,6	;RP1=0, select bank1
  2064  0605  081E               	movf	30,w	;volatile
  2065  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0608  00C7               	movwf	_AV+4
  2068                           
  2069                           ;main.c: 69:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2070  0609  3041               	movlw	65
  2071  060A  00F1               	movwf	??_ADC_Init+1
  2072  060B  30EE               	movlw	238
  2073  060C  00F0               	movwf	??_ADC_Init
  2074  060D                     u847:
  2075  060D  0BF0               	decfsz	??_ADC_Init,f
  2076  060E  2E0D               	goto	u847
  2077  060F  0BF1               	decfsz	??_ADC_Init+1,f
  2078  0610  2E0D               	goto	u847
  2079  0611  0000               	nop
  2080                           
  2081                           ;main.c: 70:     ADCON0 = 0x9D;
  2082  0612  309D               	movlw	157
  2083  0613  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0614  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0615  009F               	movwf	31	;volatile
  2086                           
  2087                           ;main.c: 71:     ADCON1 = 0xC0;
  2088  0616  30C0               	movlw	192
  2089  0617  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0618  1303               	bcf	3,6	;RP1=0, select bank1
  2091  0619  009F               	movwf	31	;volatile
  2092                           
  2093                           ;main.c: 72:     AV[3]= ((ADRESH<<8)+ADRESL);
  2094  061A  1283               	bcf	3,5	;RP0=0, select bank0
  2095  061B  1303               	bcf	3,6	;RP1=0, select bank0
  2096  061C  081E               	movf	30,w	;volatile
  2097  061D  00CA               	movwf	_AV+7
  2098  061E  1683               	bsf	3,5	;RP0=1, select bank1
  2099  061F  1303               	bcf	3,6	;RP1=0, select bank1
  2100  0620  081E               	movf	30,w	;volatile
  2101  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0623  00C9               	movwf	_AV+6
  2104  0624                     l89:
  2105  0624  0008               	return
  2106  0625                     __end_of_ADC_Init:
  2107  007E                     btemp	set	126	;btemp
  2108  007E                     wtemp0	set	126
  2109                           
  2110                           	psect	idloc
  2111                           
  2112                           ;Config register IDLOC0 @ 0x2000
  2113                           ;	unspecified, using default values
  2114  2000                     	org	8192
  2115  2000  3FFF               	dw	16383
  2116                           
  2117                           ;Config register IDLOC1 @ 0x2001
  2118                           ;	unspecified, using default values
  2119  2001                     	org	8193
  2120  2001  3FFF               	dw	16383
  2121                           
  2122                           ;Config register IDLOC2 @ 0x2002
  2123                           ;	unspecified, using default values
  2124  2002                     	org	8194
  2125  2002  3FFF               	dw	16383
  2126                           
  2127                           ;Config register IDLOC3 @ 0x2003
  2128                           ;	unspecified, using default values
  2129  2003                     	org	8195
  2130  2003  3FFF               	dw	16383
  2131                           
  2132                           	psect	config
  2133                           
  2134                           ;Config register CONFIG @ 0x2007
  2135                           ;	Oscillator Selection bits
  2136                           ;	FOSC = HS, HS oscillator
  2137                           ;	Watchdog Timer Enable bit
  2138                           ;	WDTE = OFF, WDT disabled
  2139                           ;	Power-up Timer Enable bit
  2140                           ;	PWRTE = OFF, PWRT disabled
  2141                           ;	Brown-out Reset Enable bit
  2142                           ;	BOREN = ON, BOR enabled
  2143                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2144                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2145                           ;	Data EEPROM Memory Code Protection bit
  2146                           ;	CPD = OFF, Data EEPROM code protection off
  2147                           ;	Flash Program Memory Write Enable bits
  2148                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2149                           ;	In-Circuit Debugger Mode bit
  2150                           ;	DEBUG = 0x1, unprogrammed default
  2151                           ;	Flash Program Memory Code Protection bit
  2152                           ;	CP = OFF, Code protection off
  2153  2007                     	org	8199
  2154  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2196
                                             30 BANK0      5     5      0
                           _ADC_Init
                        _LCD_Command
                           _LCD_init
                            _LCD_num
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_num                                             18    14      4    2018
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Command
   _LCD_init
     _LCD_Command
   _LCD_num
     _LCD_Char
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
     ___lwmod
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 04 13:16:27 2022

           ?_LCD_Command 0070                       l41 04F6                       l50 07F1  
                     l44 0536                       l62 043C                       l47 047C  
                     l64 0440                       l65 0441                       l59 044E  
                     _AV 0043                       l79 063B                       l89 0624  
                     _tx 0437                      l240 06BD                      l250 0745  
                    l189 05C0                      l447 057A                      l457 04B6  
                    ?_tx 0070                      l901 04BD                      l911 04EA  
                    l903 04C7                      l913 04ED                      l905 04D3  
                    l921 0507                      l907 04E0                      l931 052D  
                    l923 0513                      l915 04F8                      l909 04E1  
                    l925 0520                      l917 04FB                      l941 05A7  
                    l933 057B                      l927 0521                      l919 04FD  
                    l951 06B0                      l943 05B8                      l935 0583  
                    l929 052A                      l961 06E0                      l953 06C1  
                    l937 0587                      l971 070F                      l963 06E3  
                    l955 06CC                      l947 06A9                      l939 059E  
                    l981 0732                      l973 071D                      l965 06F0  
                    l957 06D0                      l949 06AC                      l983 073D  
                    l975 071E                      l967 06F4                      l959 06D8  
                    l991 053F                      l897 04B8                      l977 0727  
                    l969 06FD                      l993 0542                      l899 04BB  
                    l979 072D                      l995 0549                      l987 0537  
                    l997 054D                      l989 0539                      l999 0551  
                    _RC0 0038                      _RC1 0039                      u420 05B8  
                    u421 05B7                      u405 05A0                      u510 072D  
                    u430 06B0                      u511 072C                      u431 06AF  
                    u415 05A8                      u520 0732                      u440 06C1  
                    u600 0483                      u521 0731                      u505 071F  
                    u441 06C0                      u601 0482                      u450 06E0  
                    u530 053F                      u451 06DF                      u531 053E  
                    u380 0587                      u620 0495                      u365 04D6  
                    u381 0586                      u621 0494                      u470 06F4  
                    u550 0551                      u630 049F                      u375 0516  
                    u471 06F3                      u391 0590                      u551 0550  
                    u631 049E                      u615 0487                      u392 0597  
                    u465 06E5                      u393 059E                      u545 0543  
                    u490 070F                      u570 0562                      u650 04B2  
                    u491 070E                      u571 0561                      u651 04B1  
                    u635 049B                      u707 0645                      u660 0440  
                    u485 06F6                      u565 0552                      u645 04A6  
                    u661 043F                      u717 0674                      u590 0576  
                    u807 04E5                      u495 070B                      u591 0575  
                    u575 055E                      u727 069E                      u680 063F  
                    u817 04F1                      u737 0502                      u585 056A  
                    u681 063E                      u690 0690                      u827 05D7  
                    u747 050E                      u691 068F                      u837 05F2  
                    u757 0525                      u847 060D                      u767 0531  
                    u695 068C                      u777 0477                      u787 04C2  
                    u797 04CE                      fsr0 0004                      indf 0000  
                    tx@a 0070                     ??_tx 0070          __end_of_LCD_num 07F2  
                   l1001 0562                     l1003 0568                     l1005 0569  
                   l1021 0491                     l1013 047D                     l1101 0683  
                   l1007 0570                     l1023 0495                     l1015 0483  
                   l1031 04B2                     l1103 0690                     l1009 0576  
                   l1025 049F                     l1017 0486                     l1041 0746  
                   l1105 0696                     l1035 044F                     l1027 04A5  
                   l1019 048D                     l1051 07BB                     l1043 077A  
                   l1037 0473                     l1029 04AC                     l1053 07D2  
                   l1045 078D                     l1061 0442                     l1055 07D9  
                   l1047 07A0                     l1039 0746                     l1063 0438  
                   l1065 05C1                     l1057 07DF                     l1049 07B7  
                   l1081 0633                     l1059 07E8                     l1083 0638  
                   l1075 0625                     l1093 064E                     l1085 063F  
                   l1077 0629                     l1095 0666                     l1087 064A  
                   l1079 062E                     l1097 066C                     l1099 067B  
                   _RCIF 0065                     _TXIF 0064                     _main 0625  
                   btemp 007E         __end_of_ADC_Init 0625                     start 0000  
       __end_of_LCD_Char 0537             LCD_Char@data 0072         __end_of_LCD_init 047D  
        __end_of___aldiv 0746                    ?_main 0070          __end_of___lwdiv 057B  
        __end_of___lwmod 04B7                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087                    _TXREG 0019                    _TXSTA 0098  
    ___lmul@multiplicand 0074                    main@i 0041          __end_of_ser_int 044F  
                  status 0003                    wtemp0 007E          __initialization 07F2  
           __end_of_main 06A9                   ??_main 003E           LCD_num@result1 003A  
              ??_LCD_num 007E                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   ___lmul 057B  
              ??___aldiv 007D                ??___lwdiv 0074                ??___lwmod 0074  
   __size_of_LCD_Command 0040                ?_ADC_Init 0070                ??_ser_int 0070  
              ?_LCD_Char 0070  __end_of__initialization 07FC                ?_LCD_init 0070  
         __pcstackCOMMON 0070               __end_of_tx 0442               ??_ADC_Init 0070  
             __pbssBANK0 0043               ??_LCD_Char 0070               ??_LCD_init 0073  
             __pmaintext 0625                  ?___lmul 0070           ___lmul@product 0079  
                _LCD_num 0746                  ___aldiv 06A9          __size_of___lmul 0046  
                ___lwdiv 0537                  ___lwmod 047D                  __ptext1 0437  
                __ptext2 0442                  __ptext3 0746                  __ptext4 047D  
                __ptext5 0537                  __ptext6 057B                  __ptext7 06A9  
                __ptext8 04F7                  __ptext9 044F         ___aldiv@dividend 0024  
                _ser_int 0442     end_of_initialization 07FC         ___aldiv@quotient 002A  
      __size_of_ADC_Init 0064        __size_of_LCD_Char 0040        __size_of_LCD_init 002E  
          ??_LCD_Command 0070           __end_of___lmul 05C1      start_initialization 07F2  
          LCD_num@digit1 0032            LCD_num@digit2 0034            LCD_num@digit3 0036  
             LCD_num@val 002E            LCD_num@result 0038                 ??___lmul 0078  
       LCD_num@remainder 003C      __end_of_LCD_Command 04F7                 ?_LCD_num 002E  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___aldiv 0020                 ?___lwdiv 0070                 ?___lwmod 0070  
               _ADC_Init 05C1                 ?_ser_int 0070         ___lwdiv@quotient 0075  
            __size_of_tx 000B          ___aldiv@divisor 0020                 _LCD_Char 04F7  
        ___aldiv@counter 0028                 _LCD_init 044F                 _GO_nDONE 00FA  
            _LCD_Command 04B7         __size_of_LCD_num 00AC        ___lmul@multiplier 0070  
       __size_of___aldiv 009D         __size_of___lwdiv 0044         __size_of___lwmod 003A  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 04B7  
               __ptext11 05C1         __size_of_ser_int 000D            __size_of_main 0084  
        LCD_Command@cmnd 0072         ___lwmod@dividend 0072          ___lwmod@divisor 0070  
        ___lwmod@counter 0075             ___aldiv@sign 0029  
