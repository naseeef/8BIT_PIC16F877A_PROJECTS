

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 06 13:58:37 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194                           
   195                           	psect	idataBANK0
   196  0E46                     __pidataBANK0:
   197                           
   198                           ;initializer for _sn
   199  0E46  3401               	retlw	1
   200  0E47  3400               	retlw	0
   201  001E                     _ADRESH	set	30
   202  001F                     _ADCON0	set	31
   203  0008                     _PORTDbits	set	8
   204  001A                     _RCREG	set	26
   205  0019                     _TXREG	set	25
   206  0018                     _RCSTA	set	24
   207  0006                     _PORTB	set	6
   208  00FA                     _GO_nDONE	set	250
   209  0065                     _RCIF	set	101
   210  0064                     _TXIF	set	100
   211  0039                     _RC1	set	57
   212  0038                     _RC0	set	56
   213  009E                     _ADRESL	set	158
   214  009F                     _ADCON1	set	159
   215  0087                     _TRISC	set	135
   216  0086                     _TRISB	set	134
   217  0088                     _TRISDbits	set	136
   218  0099                     _SPBRG	set	153
   219  0098                     _TXSTA	set	152
   220                           
   221                           	psect	strings
   222  0800                     __pstrings:
   223  0800                     stringtab:
   224  0800                     __stringtab:
   225  0800                     stringcode:	
   226                           ;	String table - string pointers are 1 byte each
   227                           
   228  0800                     stringdir:
   229  0800  3008               	movlw	high stringdir
   230  0801  008A               	movwf	10
   231  0802  0804               	movf	4,w
   232  0803  0A84               	incf	4,f
   233  0804  0782               	addwf	2,f
   234  0805                     __stringbase:
   235  0805  3400               	retlw	0
   236  0806                     __end_of__stringtab:
   237  0806                     STR_2:
   238  0806  3448               	retlw	72	;'H'
   239  0807  3475               	retlw	117	;'u'
   240  0808  346D               	retlw	109	;'m'
   241  0809  3469               	retlw	105	;'i'
   242  080A  343A               	retlw	58	;':'
   243  080B  3400               	retlw	0
   244  080C                     STR_1:
   245  080C  3454               	retlw	84	;'T'
   246  080D  3465               	retlw	101	;'e'
   247  080E  346D               	retlw	109	;'m'
   248  080F  3470               	retlw	112	;'p'
   249  0810  343A               	retlw	58	;':'
   250  0811  3400               	retlw	0
   251                           
   252                           	psect	cinit
   253  07E7                     start_initialization:	
   254                           ; #config settings
   255                           
   256  07E7                     __initialization:
   257                           
   258                           ; Initialize objects allocated to BANK0
   259  07E7  120A  158A  2646  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   260  07EC  00E9               	movwf	__pdataBANK0& (0+127)
   261  07ED  120A  158A  2647  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   262  07F2  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   263                           
   264                           ; Clear objects allocated to BANK0
   265  07F3  1383               	bcf	3,7	;select IRP bank0
   266  07F4  304B               	movlw	low __pbssBANK0
   267  07F5  0084               	movwf	4
   268  07F6  3069               	movlw	low (__pbssBANK0+30)
   269  07F7  120A  158A  2648  120A  118A  	fcall	clear_ram0
   270  07FC                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  07FC                     __end_of__initialization:
   274  07FC  0183               	clrf	3
   275  07FD  120A  118A  2B89   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	bssBANK0
   278  004B                     __pbssBANK0:
   279  004B                     _AV:
   280  004B                     	ds	8
   281  0053                     _message:
   282  0053                     	ds	3
   283  0056                     _avv:
   284  0056                     	ds	3
   285  0059                     _temperature:
   286  0059                     	ds	2
   287  005B                     _humidity:
   288  005B                     	ds	2
   289  005D                     _Sum:
   290  005D                     	ds	2
   291  005F                     _RH:
   292  005F                     	ds	2
   293  0061                     _Temp:
   294  0061                     	ds	2
   295  0063                     _Ch:
   296  0063                     	ds	1
   297  0064                     _RH_byte2:
   298  0064                     	ds	1
   299  0065                     _RH_byte1:
   300  0065                     	ds	1
   301  0066                     _T_byte2:
   302  0066                     	ds	1
   303  0067                     _T_byte1:
   304  0067                     	ds	1
   305  0068                     _Check:
   306  0068                     	ds	1
   307                           
   308                           	psect	dataBANK0
   309  0069                     __pdataBANK0:
   310  0069                     _sn:
   311  0069                     	ds	2
   312                           
   313                           	psect	clrtext
   314  0E48                     clear_ram0:	
   315                           ;	Called with FSR containing the base address, and
   316                           ;	W with the last address+1
   317                           
   318  0E48  0064               	clrwdt	;clear the watchdog before getting into this loop
   319  0E49                     clrloop0:
   320  0E49  0180               	clrf	0	;clear RAM location pointed to by FSR
   321  0E4A  0A84               	incf	4,f	;increment pointer
   322  0E4B  0604               	xorwf	4,w	;XOR with final address
   323  0E4C  1903               	btfsc	3,2	;have we reached the end yet?
   324  0E4D  3400               	retlw	0	;all done for this memory range, return
   325  0E4E  0604               	xorwf	4,w	;XOR again to restore value
   326  0E4F  2E49               	goto	clrloop0	;do the next byte
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:
   330  0070                     ?_intdigits_chardigits:
   331  0070                     ?_ADC_Init:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_ADC_Init:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_print_serialnumber:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_print_analogvoltages:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_LCD_Command:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ??_LCD_Command:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_LCD_Char:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_LCD_Char:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_LCD_init:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_show:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_ser_int:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_ser_int:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_tx:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ??_tx:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_StartSignal:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ??_StartSignal:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_CheckResponse:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ??_CheckResponse:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_ReadData:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_ReadData:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_main:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?___awdiv:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?___awmod:	
   398                           ; 2 bytes @ 0x0
   399                           
   400  0070                     ?___lwdiv:	
   401                           ; 2 bytes @ 0x0
   402                           
   403  0070                     ?___lwmod:	
   404                           ; 2 bytes @ 0x0
   405                           
   406  0070                     ?___lmul:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0070                     tx@a:	
   410                           ; 4 bytes @ 0x0
   411                           
   412  0070                     intdigits_chardigits@a:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ___awdiv@divisor:	
   416                           ; 2 bytes @ 0x0
   417                           
   418  0070                     ___awmod@divisor:	
   419                           ; 2 bytes @ 0x0
   420                           
   421  0070                     ___lwdiv@divisor:	
   422                           ; 2 bytes @ 0x0
   423                           
   424  0070                     ___lwmod@divisor:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ___lmul@multiplier:	
   428                           ; 2 bytes @ 0x0
   429                           
   430                           
   431                           ; 4 bytes @ 0x0
   432  0070                     	ds	2
   433  0072                     LCD_Command@cmnd:
   434  0072                     LCD_Char@data:	
   435                           ; 1 bytes @ 0x2
   436                           
   437  0072                     ReadData@i:	
   438                           ; 1 bytes @ 0x2
   439                           
   440  0072                     intdigits_chardigits@b:	
   441                           ; 1 bytes @ 0x2
   442                           
   443  0072                     ___awdiv@dividend:	
   444                           ; 2 bytes @ 0x2
   445                           
   446  0072                     ___awmod@dividend:	
   447                           ; 2 bytes @ 0x2
   448                           
   449  0072                     ___lwdiv@dividend:	
   450                           ; 2 bytes @ 0x2
   451                           
   452  0072                     ___lwmod@dividend:	
   453                           ; 2 bytes @ 0x2
   454                           
   455                           
   456                           ; 2 bytes @ 0x2
   457  0072                     	ds	1
   458  0073                     ??_LCD_init:
   459  0073                     ??_show:	
   460                           ; 1 bytes @ 0x3
   461                           
   462  0073                     ReadData@j:	
   463                           ; 1 bytes @ 0x3
   464                           
   465                           
   466                           ; 1 bytes @ 0x3
   467  0073                     	ds	1
   468  0074                     ??___awdiv:
   469  0074                     ??___awmod:	
   470                           ; 1 bytes @ 0x4
   471                           
   472  0074                     ??___lwdiv:	
   473                           ; 1 bytes @ 0x4
   474                           
   475  0074                     ??___lwmod:	
   476                           ; 1 bytes @ 0x4
   477                           
   478  0074                     show@s:	
   479                           ; 1 bytes @ 0x4
   480                           
   481  0074                     intdigits_chardigits@c:	
   482                           ; 1 bytes @ 0x4
   483                           
   484  0074                     ___lmul@multiplicand:	
   485                           ; 2 bytes @ 0x4
   486                           
   487                           
   488                           ; 4 bytes @ 0x4
   489  0074                     	ds	1
   490  0075                     ___awdiv@counter:
   491  0075                     ___awmod@counter:	
   492                           ; 1 bytes @ 0x5
   493                           
   494  0075                     ___lwmod@counter:	
   495                           ; 1 bytes @ 0x5
   496                           
   497  0075                     ___lwdiv@quotient:	
   498                           ; 1 bytes @ 0x5
   499                           
   500                           
   501                           ; 2 bytes @ 0x5
   502  0075                     	ds	1
   503  0076                     ??_intdigits_chardigits:
   504  0076                     ___awdiv@sign:	
   505                           ; 1 bytes @ 0x6
   506                           
   507  0076                     ___awmod@sign:	
   508                           ; 1 bytes @ 0x6
   509                           
   510                           
   511                           ; 1 bytes @ 0x6
   512  0076                     	ds	1
   513  0077                     ___lwdiv@counter:
   514  0077                     ___awdiv@quotient:	
   515                           ; 1 bytes @ 0x7
   516                           
   517                           
   518                           ; 2 bytes @ 0x7
   519  0077                     	ds	1
   520  0078                     ??___lmul:
   521                           
   522                           ; 1 bytes @ 0x8
   523  0078                     	ds	1
   524  0079                     ?_show_multidigits:
   525  0079                     ?_tx_sn:	
   526                           ; 1 bytes @ 0x9
   527                           
   528  0079                     show_multidigits@val:	
   529                           ; 1 bytes @ 0x9
   530                           
   531  0079                     tx_sn@val:	
   532                           ; 2 bytes @ 0x9
   533                           
   534  0079                     ___lmul@product:	
   535                           ; 2 bytes @ 0x9
   536                           
   537                           
   538                           ; 4 bytes @ 0x9
   539  0079                     	ds	2
   540  007B                     ??_print_serialnumber:
   541  007B                     ??_show_multidigits:	
   542                           ; 1 bytes @ 0xB
   543                           
   544  007B                     ??_tx_sn:	
   545                           ; 1 bytes @ 0xB
   546                           
   547                           
   548                           ; 1 bytes @ 0xB
   549  007B                     	ds	2
   550  007D                     ??___aldiv:
   551                           
   552                           ; 1 bytes @ 0xD
   553  007D                     	ds	1
   554  007E                     ??_LCD_num:
   555                           
   556                           	psect	cstackBANK0
   557  0020                     __pcstackBANK0:	
   558                           ; 1 bytes @ 0xE
   559                           
   560  0020                     ?___aldiv:
   561  0020                     show_multidigits@digit4:	
   562                           ; 4 bytes @ 0x0
   563                           
   564  0020                     tx_sn@digit4:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0020                     ___aldiv@divisor:	
   568                           ; 2 bytes @ 0x0
   569                           
   570                           
   571                           ; 4 bytes @ 0x0
   572  0020                     	ds	2
   573  0022                     show_multidigits@result:
   574  0022                     tx_sn@result:	
   575                           ; 2 bytes @ 0x2
   576                           
   577                           
   578                           ; 2 bytes @ 0x2
   579  0022                     	ds	2
   580  0024                     show_multidigits@digit3:
   581  0024                     tx_sn@digit3:	
   582                           ; 2 bytes @ 0x4
   583                           
   584  0024                     ___aldiv@dividend:	
   585                           ; 2 bytes @ 0x4
   586                           
   587                           
   588                           ; 4 bytes @ 0x4
   589  0024                     	ds	2
   590  0026                     show_multidigits@digit1:
   591  0026                     tx_sn@digit1:	
   592                           ; 2 bytes @ 0x6
   593                           
   594                           
   595                           ; 2 bytes @ 0x6
   596  0026                     	ds	2
   597  0028                     ___aldiv@counter:
   598  0028                     show_multidigits@digit2:	
   599                           ; 1 bytes @ 0x8
   600                           
   601  0028                     tx_sn@digit2:	
   602                           ; 2 bytes @ 0x8
   603                           
   604                           
   605                           ; 2 bytes @ 0x8
   606  0028                     	ds	1
   607  0029                     ___aldiv@sign:
   608                           
   609                           ; 1 bytes @ 0x9
   610  0029                     	ds	1
   611  002A                     show_multidigits@result1:
   612  002A                     tx_sn@result1:	
   613                           ; 2 bytes @ 0xA
   614                           
   615  002A                     ___aldiv@quotient:	
   616                           ; 2 bytes @ 0xA
   617                           
   618                           
   619                           ; 4 bytes @ 0xA
   620  002A                     	ds	2
   621  002C                     show_multidigits@remainder:
   622  002C                     tx_sn@remainder:	
   623                           ; 2 bytes @ 0xC
   624                           
   625                           
   626                           ; 2 bytes @ 0xC
   627  002C                     	ds	2
   628  002E                     ?_LCD_num:
   629  002E                     LCD_num@val:	
   630                           ; 1 bytes @ 0xE
   631                           
   632                           
   633                           ; 4 bytes @ 0xE
   634  002E                     	ds	4
   635  0032                     LCD_num@digit1:
   636                           
   637                           ; 2 bytes @ 0x12
   638  0032                     	ds	2
   639  0034                     LCD_num@digit2:
   640                           
   641                           ; 2 bytes @ 0x14
   642  0034                     	ds	2
   643  0036                     LCD_num@digit3:
   644                           
   645                           ; 2 bytes @ 0x16
   646  0036                     	ds	2
   647  0038                     LCD_num@result:
   648                           
   649                           ; 2 bytes @ 0x18
   650  0038                     	ds	2
   651  003A                     LCD_num@result1:
   652                           
   653                           ; 2 bytes @ 0x1A
   654  003A                     	ds	2
   655  003C                     LCD_num@remainder:
   656                           
   657                           ; 2 bytes @ 0x1C
   658  003C                     	ds	2
   659  003E                     ??_print_analogvoltages:
   660                           
   661                           ; 1 bytes @ 0x1E
   662  003E                     	ds	3
   663  0041                     print_analogvoltages@i:
   664                           
   665                           ; 1 bytes @ 0x21
   666  0041                     	ds	1
   667  0042                     print_analogvoltages@j:
   668                           
   669                           ; 1 bytes @ 0x22
   670  0042                     	ds	1
   671  0043                     ??_main:
   672                           
   673                           ; 1 bytes @ 0x23
   674  0043                     	ds	8
   675                           
   676                           	psect	maintext
   677  0389                     __pmaintext:	
   678 ;;
   679 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   680 ;;
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 34 in file "main.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : B00/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0
   699 ;;      Temps:          0       8       0       0       0
   700 ;;      Totals:         0       8       0       0       0
   701 ;;Total ram usage:        8 bytes
   702 ;; Hardware stack levels required when called: 3
   703 ;; This function calls:
   704 ;;		_ADC_Init
   705 ;;		_CheckResponse
   706 ;;		_LCD_Command
   707 ;;		_LCD_init
   708 ;;		_ReadData
   709 ;;		_StartSignal
   710 ;;		_print_analogvoltages
   711 ;;		_print_serialnumber
   712 ;;		_ser_int
   713 ;;		_show
   714 ;;		_show_multidigits
   715 ;;		_tx
   716 ;;		_tx_sn
   717 ;; This function is called by:
   718 ;;		Startup code after reset
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           
   723                           ;psect for function _main
   724  0389                     _main:
   725  0389                     l1770:	
   726                           ;incstack = 0
   727                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   728                           
   729                           
   730                           ;main.c: 36:     TRISB =0x00;
   731  0389  1683               	bsf	3,5	;RP0=1, select bank1
   732  038A  1303               	bcf	3,6	;RP1=0, select bank1
   733  038B  0186               	clrf	6	;volatile
   734                           
   735                           ;main.c: 37:     TRISC =0x00;
   736  038C  0187               	clrf	7	;volatile
   737  038D                     l1772:
   738                           
   739                           ;main.c: 39:     LCD_init();
   740  038D  120A  158A  26D6  120A  118A  	fcall	_LCD_init
   741  0392                     l1774:
   742                           
   743                           ;main.c: 40:     ser_int();
   744  0392  120A  118A  2004  120A  118A  	fcall	_ser_int
   745  0397                     l1776:
   746                           
   747                           ;main.c: 42:     {;main.c: 43:         ADC_Init ();
   748  0397  120A  118A  20F4  120A  118A  	fcall	_ADC_Init
   749  039C                     l1778:
   750                           
   751                           ;main.c: 44:         GO_nDONE=1;
   752  039C  1283               	bcf	3,5	;RP0=0, select bank0
   753  039D  1303               	bcf	3,6	;RP1=0, select bank0
   754  039E  151F               	bsf	31,2	;volatile
   755  039F                     l161:	
   756                           ;main.c: 45:         while(GO_nDONE==1);
   757                           
   758  039F  191F               	btfsc	31,2	;volatile
   759  03A0  2BA2               	goto	u1591
   760  03A1  2BA3               	goto	u1590
   761  03A2                     u1591:
   762  03A2  2B9F               	goto	l161
   763  03A3                     u1590:
   764  03A3                     l1780:
   765                           
   766                           ;main.c: 46:         _delay((unsigned long)((10)*(20000000/4000.0)));
   767  03A3  3041               	movlw	65
   768  03A4  1283               	bcf	3,5	;RP0=0, select bank0
   769  03A5  1303               	bcf	3,6	;RP1=0, select bank0
   770  03A6  00C4               	movwf	??_main+1
   771  03A7  30ED               	movlw	237
   772  03A8  00C3               	movwf	??_main
   773  03A9                     u1627:
   774  03A9  0BC3               	decfsz	??_main,f
   775  03AA  2BA9               	goto	u1627
   776  03AB  0BC4               	decfsz	??_main+1,f
   777  03AC  2BA9               	goto	u1627
   778  03AD  2BAE               	nop2
   779  03AE                     l1782:
   780                           
   781                           ;main.c: 49:         print_serialnumber();
   782  03AE  120A  158A  266A  120A  118A  	fcall	_print_serialnumber
   783  03B3                     l1784:
   784                           
   785                           ;main.c: 51:         print_analogvoltages();
   786  03B3  120A  118A  21BF  120A  118A  	fcall	_print_analogvoltages
   787  03B8                     l1786:
   788                           
   789                           ;main.c: 54:         StartSignal();
   790  03B8  120A  158A  267C  120A  118A  	fcall	_StartSignal
   791  03BD                     l1788:
   792                           
   793                           ;main.c: 55:         CheckResponse();
   794  03BD  120A  158A  26B5  120A  118A  	fcall	_CheckResponse
   795  03C2                     l1790:
   796                           
   797                           ;main.c: 56:         if(Check == 1)
   798  03C2  1283               	bcf	3,5	;RP0=0, select bank0
   799  03C3  1303               	bcf	3,6	;RP1=0, select bank0
   800  03C4  0368               	decf	_Check,w
   801  03C5  1D03               	btfss	3,2
   802  03C6  2BC8               	goto	u1601
   803  03C7  2BC9               	goto	u1600
   804  03C8                     u1601:
   805  03C8  2C31               	goto	l1798
   806  03C9                     u1600:
   807  03C9                     l1792:
   808                           
   809                           ;main.c: 57:         {;main.c: 58:             RH_byte1 = ReadData();
   810  03C9  120A  158A  27BE  120A  118A  	fcall	_ReadData
   811  03CE  1283               	bcf	3,5	;RP0=0, select bank0
   812  03CF  1303               	bcf	3,6	;RP1=0, select bank0
   813  03D0  00C3               	movwf	??_main
   814  03D1  0843               	movf	??_main,w
   815  03D2  00E5               	movwf	_RH_byte1
   816                           
   817                           ;main.c: 59:             RH_byte2 = ReadData();
   818  03D3  120A  158A  27BE  120A  118A  	fcall	_ReadData
   819  03D8  1283               	bcf	3,5	;RP0=0, select bank0
   820  03D9  1303               	bcf	3,6	;RP1=0, select bank0
   821  03DA  00C3               	movwf	??_main
   822  03DB  0843               	movf	??_main,w
   823  03DC  00E4               	movwf	_RH_byte2
   824                           
   825                           ;main.c: 60:             T_byte1 = ReadData();
   826  03DD  120A  158A  27BE  120A  118A  	fcall	_ReadData
   827  03E2  1283               	bcf	3,5	;RP0=0, select bank0
   828  03E3  1303               	bcf	3,6	;RP1=0, select bank0
   829  03E4  00C3               	movwf	??_main
   830  03E5  0843               	movf	??_main,w
   831  03E6  00E7               	movwf	_T_byte1
   832                           
   833                           ;main.c: 61:             T_byte2 = ReadData();
   834  03E7  120A  158A  27BE  120A  118A  	fcall	_ReadData
   835  03EC  1283               	bcf	3,5	;RP0=0, select bank0
   836  03ED  1303               	bcf	3,6	;RP1=0, select bank0
   837  03EE  00C3               	movwf	??_main
   838  03EF  0843               	movf	??_main,w
   839  03F0  00E6               	movwf	_T_byte2
   840                           
   841                           ;main.c: 62:             Sum = ReadData();
   842  03F1  120A  158A  27BE  120A  118A  	fcall	_ReadData
   843  03F6  1283               	bcf	3,5	;RP0=0, select bank0
   844  03F7  1303               	bcf	3,6	;RP1=0, select bank0
   845  03F8  00C3               	movwf	??_main
   846  03F9  01C4               	clrf	??_main+1
   847  03FA  0843               	movf	??_main,w
   848  03FB  00DD               	movwf	_Sum
   849  03FC  0844               	movf	??_main+1,w
   850  03FD  00DE               	movwf	_Sum+1
   851  03FE                     l1794:
   852                           
   853                           ;main.c: 63:             if(Sum == ((RH_byte1+RH_byte2+T_byte1+T_byte2) & 0XFF))
   854  03FE  0865               	movf	_RH_byte1,w
   855  03FF  0764               	addwf	_RH_byte2,w
   856  0400  00C3               	movwf	??_main
   857  0401  01C4               	clrf	??_main+1
   858  0402  0DC4               	rlf	??_main+1,f
   859  0403  0867               	movf	_T_byte1,w
   860  0404  0743               	addwf	??_main,w
   861  0405  00C5               	movwf	??_main+2
   862  0406  3000               	movlw	0
   863  0407  1803               	skipnc
   864  0408  3001               	movlw	1
   865  0409  0744               	addwf	??_main+1,w
   866  040A  00C6               	movwf	??_main+3
   867  040B  0866               	movf	_T_byte2,w
   868  040C  0745               	addwf	??_main+2,w
   869  040D  00C7               	movwf	??_main+4
   870  040E  3000               	movlw	0
   871  040F  1803               	skipnc
   872  0410  3001               	movlw	1
   873  0411  0746               	addwf	??_main+3,w
   874  0412  00C8               	movwf	??_main+5
   875  0413  30FF               	movlw	255
   876  0414  0547               	andwf	??_main+4,w
   877  0415  00C9               	movwf	??_main+6
   878  0416  3000               	movlw	0
   879  0417  0548               	andwf	??_main+5,w
   880  0418  00CA               	movwf	??_main+7
   881  0419  085E               	movf	_Sum+1,w
   882  041A  064A               	xorwf	??_main+7,w
   883  041B  1D03               	skipz
   884  041C  2C1F               	goto	u1615
   885  041D  085D               	movf	_Sum,w
   886  041E  0649               	xorwf	??_main+6,w
   887  041F                     u1615:
   888  041F  1D03               	skipz
   889  0420  2C22               	goto	u1611
   890  0421  2C23               	goto	u1610
   891  0422                     u1611:
   892  0422  2C31               	goto	l1798
   893  0423                     u1610:
   894  0423                     l1796:
   895                           
   896                           ;main.c: 64:             {;main.c: 65:                 Temp = T_byte1;
   897  0423  0867               	movf	_T_byte1,w
   898  0424  00C3               	movwf	??_main
   899  0425  01C4               	clrf	??_main+1
   900  0426  0843               	movf	??_main,w
   901  0427  00E1               	movwf	_Temp
   902  0428  0844               	movf	??_main+1,w
   903  0429  00E2               	movwf	_Temp+1
   904                           
   905                           ;main.c: 66:                 RH = RH_byte1;
   906  042A  0865               	movf	_RH_byte1,w
   907  042B  00C3               	movwf	??_main
   908  042C  01C4               	clrf	??_main+1
   909  042D  0843               	movf	??_main,w
   910  042E  00DF               	movwf	_RH
   911  042F  0844               	movf	??_main+1,w
   912  0430  00E0               	movwf	_RH+1
   913  0431                     l1798:
   914                           
   915                           ;main.c: 69:         LCD_Command(0xC0);
   916  0431  30C0               	movlw	192
   917  0432  120A  158A  273E  120A  118A  	fcall	_LCD_Command
   918  0437                     l1800:
   919                           
   920                           ;main.c: 70:         show("Temp:");
   921  0437  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   922  0438  120A  158A  2696  120A  118A  	fcall	_show
   923  043D                     l1802:
   924                           
   925                           ;main.c: 71:         LCD_Command(0xC5);
   926  043D  30C5               	movlw	197
   927  043E  120A  158A  273E  120A  118A  	fcall	_LCD_Command
   928  0443                     l1804:
   929                           
   930                           ;main.c: 72:         show_multidigits (Temp);
   931  0443  1283               	bcf	3,5	;RP0=0, select bank0
   932  0444  1303               	bcf	3,6	;RP1=0, select bank0
   933  0445  0862               	movf	_Temp+1,w
   934  0446  00FA               	movwf	show_multidigits@val+1
   935  0447  0861               	movf	_Temp,w
   936  0448  00F9               	movwf	show_multidigits@val
   937  0449  120A  118A  2655  120A  118A  	fcall	_show_multidigits
   938  044E                     l1806:
   939                           
   940                           ;main.c: 73:         tx_sn(Temp);
   941  044E  1283               	bcf	3,5	;RP0=0, select bank0
   942  044F  1303               	bcf	3,6	;RP1=0, select bank0
   943  0450  0862               	movf	_Temp+1,w
   944  0451  00FA               	movwf	tx_sn@val+1
   945  0452  0861               	movf	_Temp,w
   946  0453  00F9               	movwf	tx_sn@val
   947  0454  120A  118A  24C3  120A  118A  	fcall	_tx_sn
   948  0459                     l1808:
   949                           
   950                           ;main.c: 74:         tx(',');
   951  0459  302C               	movlw	44
   952  045A  120A  158A  2650  120A  118A  	fcall	_tx
   953  045F                     l1810:
   954                           
   955                           ;main.c: 75:         LCD_Command(0xC9);
   956  045F  30C9               	movlw	201
   957  0460  120A  158A  273E  120A  118A  	fcall	_LCD_Command
   958  0465                     l1812:
   959                           
   960                           ;main.c: 76:         show("Humi:");
   961  0465  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   962  0466  120A  158A  2696  120A  118A  	fcall	_show
   963  046B                     l1814:
   964                           
   965                           ;main.c: 77:         LCD_Command(0xCE);
   966  046B  30CE               	movlw	206
   967  046C  120A  158A  273E  120A  118A  	fcall	_LCD_Command
   968  0471                     l1816:
   969                           
   970                           ;main.c: 78:         show_multidigits(RH);
   971  0471  1283               	bcf	3,5	;RP0=0, select bank0
   972  0472  1303               	bcf	3,6	;RP1=0, select bank0
   973  0473  0860               	movf	_RH+1,w
   974  0474  00FA               	movwf	show_multidigits@val+1
   975  0475  085F               	movf	_RH,w
   976  0476  00F9               	movwf	show_multidigits@val
   977  0477  120A  118A  2655  120A  118A  	fcall	_show_multidigits
   978  047C                     l1818:
   979                           
   980                           ;main.c: 79:         tx_sn(RH);
   981  047C  1283               	bcf	3,5	;RP0=0, select bank0
   982  047D  1303               	bcf	3,6	;RP1=0, select bank0
   983  047E  0860               	movf	_RH+1,w
   984  047F  00FA               	movwf	tx_sn@val+1
   985  0480  085F               	movf	_RH,w
   986  0481  00F9               	movwf	tx_sn@val
   987  0482  120A  118A  24C3  120A  118A  	fcall	_tx_sn
   988  0487                     l1820:
   989                           
   990                           ;main.c: 80:         tx(',');
   991  0487  302C               	movlw	44
   992  0488  120A  158A  2650  120A  118A  	fcall	_tx
   993                           
   994                           ;main.c: 81:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   995  048D  301A               	movlw	26
   996  048E  1283               	bcf	3,5	;RP0=0, select bank0
   997  048F  1303               	bcf	3,6	;RP1=0, select bank0
   998  0490  00C5               	movwf	??_main+2
   999  0491  305E               	movlw	94
  1000  0492  00C4               	movwf	??_main+1
  1001  0493  306D               	movlw	109
  1002  0494  00C3               	movwf	??_main
  1003  0495                     u1637:
  1004  0495  0BC3               	decfsz	??_main,f
  1005  0496  2C95               	goto	u1637
  1006  0497  0BC4               	decfsz	??_main+1,f
  1007  0498  2C95               	goto	u1637
  1008  0499  0BC5               	decfsz	??_main+2,f
  1009  049A  2C95               	goto	u1637
  1010  049B  2C9C               	nop2
  1011  049C                     l1822:
  1012                           
  1013                           ;main.c: 84:         tx(0x0d);
  1014  049C  300D               	movlw	13
  1015  049D  120A  158A  2650  120A  118A  	fcall	_tx
  1016  04A2                     l1824:
  1017                           
  1018                           ;main.c: 85:         LCD_Command(0x01);
  1019  04A2  3001               	movlw	1
  1020  04A3  120A  158A  273E  120A  118A  	fcall	_LCD_Command
  1021                           
  1022                           ;main.c: 86:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1023  04A8  301A               	movlw	26
  1024  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1025  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1026  04AB  00C5               	movwf	??_main+2
  1027  04AC  305E               	movlw	94
  1028  04AD  00C4               	movwf	??_main+1
  1029  04AE  306D               	movlw	109
  1030  04AF  00C3               	movwf	??_main
  1031  04B0                     u1647:
  1032  04B0  0BC3               	decfsz	??_main,f
  1033  04B1  2CB0               	goto	u1647
  1034  04B2  0BC4               	decfsz	??_main+1,f
  1035  04B3  2CB0               	goto	u1647
  1036  04B4  0BC5               	decfsz	??_main+2,f
  1037  04B5  2CB0               	goto	u1647
  1038  04B6  2CB7               	nop2
  1039                           
  1040                           ;main.c: 87:         sn += 1;
  1041  04B7  3001               	movlw	1
  1042  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1043  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1044  04BA  07E9               	addwf	_sn,f
  1045  04BB  1803               	skipnc
  1046  04BC  0AEA               	incf	_sn+1,f
  1047  04BD  3000               	movlw	0
  1048  04BE  07EA               	addwf	_sn+1,f
  1049  04BF  2B97               	goto	l1776
  1050  04C0  120A  118A  2800   	ljmp	start
  1051  04C3                     __end_of_main:
  1052                           
  1053                           	psect	text1
  1054  0655                     __ptext1:	
  1055 ;; *************** function _show_multidigits *****************
  1056 ;; Defined at:
  1057 ;;		line 86 in file "./lcd4bit.h"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  val             2    9[COMMON] unsigned int 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  remainder       2   12[BANK0 ] int 
  1062 ;;  result1         2   10[BANK0 ] int 
  1063 ;;  digit2          2    8[BANK0 ] int 
  1064 ;;  digit1          2    6[BANK0 ] int 
  1065 ;;  digit3          2    4[BANK0 ] int 
  1066 ;;  result          2    2[BANK0 ] int 
  1067 ;;  digit4          2    0[BANK0 ] int 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         2       0       0       0       0
  1078 ;;      Locals:         0      14       0       0       0
  1079 ;;      Temps:          0       0       0       0       0
  1080 ;;      Totals:         2      14       0       0       0
  1081 ;;Total ram usage:       16 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 1
  1084 ;; This function calls:
  1085 ;;		_LCD_Char
  1086 ;;		___awdiv
  1087 ;;		___awmod
  1088 ;;		___lwdiv
  1089 ;;		___lwmod
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           
  1096                           ;psect for function _show_multidigits
  1097  0655                     _show_multidigits:
  1098  0655                     l1624:	
  1099                           ;incstack = 0
  1100                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  1101                           
  1102                           
  1103                           ;./lcd4bit.h: 86: void show_multidigits (unsigned int val);./lcd4bit.h: 87: {;./lcd4bit.
      +                          h: 88:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          89:     if (val<=9)
  1104  0655  3000               	movlw	0
  1105  0656  027A               	subwf	show_multidigits@val+1,w
  1106  0657  300A               	movlw	10
  1107  0658  1903               	skipnz
  1108  0659  0279               	subwf	show_multidigits@val,w
  1109  065A  1803               	skipnc
  1110  065B  2E5D               	goto	u1401
  1111  065C  2E5E               	goto	u1400
  1112  065D                     u1401:
  1113  065D  2E66               	goto	l1628
  1114  065E                     u1400:
  1115  065E                     l1626:
  1116                           
  1117                           ;./lcd4bit.h: 90:     {;./lcd4bit.h: 91:        LCD_Char(val+0x30);
  1118  065E  0879               	movf	show_multidigits@val,w
  1119  065F  3E30               	addlw	48
  1120  0660  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1121                           
  1122                           ;./lcd4bit.h: 92:     }
  1123  0665  2FE6               	goto	l81
  1124  0666                     l1628:
  1125  0666  3000               	movlw	0
  1126  0667  027A               	subwf	show_multidigits@val+1,w
  1127  0668  300A               	movlw	10
  1128  0669  1903               	skipnz
  1129  066A  0279               	subwf	show_multidigits@val,w
  1130  066B  1C03               	skipc
  1131  066C  2E6E               	goto	u1411
  1132  066D  2E6F               	goto	u1410
  1133  066E                     u1411:
  1134  066E  2EB3               	goto	l1642
  1135  066F                     u1410:
  1136  066F                     l1630:
  1137  066F  3000               	movlw	0
  1138  0670  027A               	subwf	show_multidigits@val+1,w
  1139  0671  3064               	movlw	100
  1140  0672  1903               	skipnz
  1141  0673  0279               	subwf	show_multidigits@val,w
  1142  0674  1803               	skipnc
  1143  0675  2E77               	goto	u1421
  1144  0676  2E78               	goto	u1420
  1145  0677                     u1421:
  1146  0677  2EB3               	goto	l1642
  1147  0678                     u1420:
  1148  0678                     l1632:
  1149                           
  1150                           ;./lcd4bit.h: 94:     {;./lcd4bit.h: 95:         remainder = val % 10;
  1151  0678  300A               	movlw	10
  1152  0679  00F0               	movwf	___lwmod@divisor
  1153  067A  3000               	movlw	0
  1154  067B  00F1               	movwf	___lwmod@divisor+1
  1155  067C  087A               	movf	show_multidigits@val+1,w
  1156  067D  00F3               	movwf	___lwmod@dividend+1
  1157  067E  0879               	movf	show_multidigits@val,w
  1158  067F  00F2               	movwf	___lwmod@dividend
  1159  0680  120A  158A  2704  120A  118A  	fcall	___lwmod
  1160  0685  0871               	movf	?___lwmod+1,w
  1161  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0688  00AD               	movwf	show_multidigits@remainder+1
  1164  0689  0870               	movf	?___lwmod,w
  1165  068A  00AC               	movwf	show_multidigits@remainder
  1166  068B                     l1634:
  1167                           
  1168                           ;./lcd4bit.h: 96:         digit1 = remainder;
  1169  068B  082D               	movf	show_multidigits@remainder+1,w
  1170  068C  00A7               	movwf	show_multidigits@digit1+1
  1171  068D  082C               	movf	show_multidigits@remainder,w
  1172  068E  00A6               	movwf	show_multidigits@digit1
  1173  068F                     l1636:
  1174                           
  1175                           ;./lcd4bit.h: 97:         digit2 = val/10;
  1176  068F  300A               	movlw	10
  1177  0690  00F0               	movwf	___lwdiv@divisor
  1178  0691  3000               	movlw	0
  1179  0692  00F1               	movwf	___lwdiv@divisor+1
  1180  0693  087A               	movf	show_multidigits@val+1,w
  1181  0694  00F3               	movwf	___lwdiv@dividend+1
  1182  0695  0879               	movf	show_multidigits@val,w
  1183  0696  00F2               	movwf	___lwdiv@dividend
  1184  0697  120A  118A  2011  120A  118A  	fcall	___lwdiv
  1185  069C  0871               	movf	?___lwdiv+1,w
  1186  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1187  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1188  069F  00A9               	movwf	show_multidigits@digit2+1
  1189  06A0  0870               	movf	?___lwdiv,w
  1190  06A1  00A8               	movwf	show_multidigits@digit2
  1191  06A2                     l1638:
  1192                           
  1193                           ;./lcd4bit.h: 98:         LCD_Char(digit2+0x30);
  1194  06A2  0828               	movf	show_multidigits@digit2,w
  1195  06A3  3E30               	addlw	48
  1196  06A4  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1197  06A9                     l1640:
  1198                           
  1199                           ;./lcd4bit.h: 99:         LCD_Char(digit1+0x30);
  1200  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1201  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1202  06AB  0826               	movf	show_multidigits@digit1,w
  1203  06AC  3E30               	addlw	48
  1204  06AD  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1205                           
  1206                           ;./lcd4bit.h: 100:     }
  1207  06B2  2FE6               	goto	l81
  1208  06B3                     l1642:
  1209  06B3  3000               	movlw	0
  1210  06B4  027A               	subwf	show_multidigits@val+1,w
  1211  06B5  3064               	movlw	100
  1212  06B6  1903               	skipnz
  1213  06B7  0279               	subwf	show_multidigits@val,w
  1214  06B8  1C03               	skipc
  1215  06B9  2EBB               	goto	u1431
  1216  06BA  2EBC               	goto	u1430
  1217  06BB                     u1431:
  1218  06BB  2F33               	goto	l1660
  1219  06BC                     u1430:
  1220  06BC                     l1644:
  1221  06BC  3003               	movlw	3
  1222  06BD  027A               	subwf	show_multidigits@val+1,w
  1223  06BE  30E8               	movlw	232
  1224  06BF  1903               	skipnz
  1225  06C0  0279               	subwf	show_multidigits@val,w
  1226  06C1  1803               	skipnc
  1227  06C2  2EC4               	goto	u1441
  1228  06C3  2EC5               	goto	u1440
  1229  06C4                     u1441:
  1230  06C4  2F33               	goto	l1660
  1231  06C5                     u1440:
  1232  06C5                     l1646:
  1233                           
  1234                           ;./lcd4bit.h: 102:     {;./lcd4bit.h: 103:         remainder = val % 10;
  1235  06C5  300A               	movlw	10
  1236  06C6  00F0               	movwf	___lwmod@divisor
  1237  06C7  3000               	movlw	0
  1238  06C8  00F1               	movwf	___lwmod@divisor+1
  1239  06C9  087A               	movf	show_multidigits@val+1,w
  1240  06CA  00F3               	movwf	___lwmod@dividend+1
  1241  06CB  0879               	movf	show_multidigits@val,w
  1242  06CC  00F2               	movwf	___lwmod@dividend
  1243  06CD  120A  158A  2704  120A  118A  	fcall	___lwmod
  1244  06D2  0871               	movf	?___lwmod+1,w
  1245  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1246  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1247  06D5  00AD               	movwf	show_multidigits@remainder+1
  1248  06D6  0870               	movf	?___lwmod,w
  1249  06D7  00AC               	movwf	show_multidigits@remainder
  1250                           
  1251                           ;./lcd4bit.h: 104:         result1 = val /10;
  1252  06D8  300A               	movlw	10
  1253  06D9  00F0               	movwf	___lwdiv@divisor
  1254  06DA  3000               	movlw	0
  1255  06DB  00F1               	movwf	___lwdiv@divisor+1
  1256  06DC  087A               	movf	show_multidigits@val+1,w
  1257  06DD  00F3               	movwf	___lwdiv@dividend+1
  1258  06DE  0879               	movf	show_multidigits@val,w
  1259  06DF  00F2               	movwf	___lwdiv@dividend
  1260  06E0  120A  118A  2011  120A  118A  	fcall	___lwdiv
  1261  06E5  0871               	movf	?___lwdiv+1,w
  1262  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1263  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1264  06E8  00AB               	movwf	show_multidigits@result1+1
  1265  06E9  0870               	movf	?___lwdiv,w
  1266  06EA  00AA               	movwf	show_multidigits@result1
  1267  06EB                     l1648:
  1268                           
  1269                           ;./lcd4bit.h: 105:         digit1 = remainder;
  1270  06EB  082D               	movf	show_multidigits@remainder+1,w
  1271  06EC  00A7               	movwf	show_multidigits@digit1+1
  1272  06ED  082C               	movf	show_multidigits@remainder,w
  1273  06EE  00A6               	movwf	show_multidigits@digit1
  1274  06EF                     l1650:
  1275                           
  1276                           ;./lcd4bit.h: 106:         remainder = result1%10;
  1277  06EF  300A               	movlw	10
  1278  06F0  00F0               	movwf	___awmod@divisor
  1279  06F1  3000               	movlw	0
  1280  06F2  00F1               	movwf	___awmod@divisor+1
  1281  06F3  082B               	movf	show_multidigits@result1+1,w
  1282  06F4  00F3               	movwf	___awmod@dividend+1
  1283  06F5  082A               	movf	show_multidigits@result1,w
  1284  06F6  00F2               	movwf	___awmod@dividend
  1285  06F7  120A  118A  209B  120A  118A  	fcall	___awmod
  1286  06FC  0871               	movf	?___awmod+1,w
  1287  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1288  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1289  06FF  00AD               	movwf	show_multidigits@remainder+1
  1290  0700  0870               	movf	?___awmod,w
  1291  0701  00AC               	movwf	show_multidigits@remainder
  1292                           
  1293                           ;./lcd4bit.h: 107:         digit2 = remainder;
  1294  0702  082D               	movf	show_multidigits@remainder+1,w
  1295  0703  00A9               	movwf	show_multidigits@digit2+1
  1296  0704  082C               	movf	show_multidigits@remainder,w
  1297  0705  00A8               	movwf	show_multidigits@digit2
  1298  0706                     l1652:
  1299                           
  1300                           ;./lcd4bit.h: 108:         digit3 = result1/10;
  1301  0706  300A               	movlw	10
  1302  0707  00F0               	movwf	___awdiv@divisor
  1303  0708  3000               	movlw	0
  1304  0709  00F1               	movwf	___awdiv@divisor+1
  1305  070A  082B               	movf	show_multidigits@result1+1,w
  1306  070B  00F3               	movwf	___awdiv@dividend+1
  1307  070C  082A               	movf	show_multidigits@result1,w
  1308  070D  00F2               	movwf	___awdiv@dividend
  1309  070E  120A  118A  2158  120A  118A  	fcall	___awdiv
  1310  0713  0871               	movf	?___awdiv+1,w
  1311  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0716  00A5               	movwf	show_multidigits@digit3+1
  1314  0717  0870               	movf	?___awdiv,w
  1315  0718  00A4               	movwf	show_multidigits@digit3
  1316  0719                     l1654:
  1317                           
  1318                           ;./lcd4bit.h: 109:         LCD_Char(digit3+0x30);
  1319  0719  0824               	movf	show_multidigits@digit3,w
  1320  071A  3E30               	addlw	48
  1321  071B  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1322  0720                     l1656:
  1323                           
  1324                           ;./lcd4bit.h: 110:         LCD_Char(digit2+0x30);
  1325  0720  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0721  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0722  0828               	movf	show_multidigits@digit2,w
  1328  0723  3E30               	addlw	48
  1329  0724  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1330  0729                     l1658:
  1331                           
  1332                           ;./lcd4bit.h: 111:         LCD_Char(digit1+0x30);
  1333  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1334  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1335  072B  0826               	movf	show_multidigits@digit1,w
  1336  072C  3E30               	addlw	48
  1337  072D  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1338                           
  1339                           ;./lcd4bit.h: 112:     }
  1340  0732  2FE6               	goto	l81
  1341  0733                     l1660:
  1342  0733  3003               	movlw	3
  1343  0734  027A               	subwf	show_multidigits@val+1,w
  1344  0735  30E8               	movlw	232
  1345  0736  1903               	skipnz
  1346  0737  0279               	subwf	show_multidigits@val,w
  1347  0738  1C03               	skipc
  1348  0739  2F3B               	goto	u1451
  1349  073A  2F3C               	goto	u1450
  1350  073B                     u1451:
  1351  073B  2FE6               	goto	l77
  1352  073C                     u1450:
  1353  073C                     l1662:
  1354  073C  3027               	movlw	39
  1355  073D  027A               	subwf	show_multidigits@val+1,w
  1356  073E  300F               	movlw	15
  1357  073F  1903               	skipnz
  1358  0740  0279               	subwf	show_multidigits@val,w
  1359  0741  1803               	skipnc
  1360  0742  2F44               	goto	u1461
  1361  0743  2F45               	goto	u1460
  1362  0744                     u1461:
  1363  0744  2FE6               	goto	l77
  1364  0745                     u1460:
  1365  0745                     l1664:
  1366                           
  1367                           ;./lcd4bit.h: 114:     {;./lcd4bit.h: 115:         remainder = val % 10;
  1368  0745  300A               	movlw	10
  1369  0746  00F0               	movwf	___lwmod@divisor
  1370  0747  3000               	movlw	0
  1371  0748  00F1               	movwf	___lwmod@divisor+1
  1372  0749  087A               	movf	show_multidigits@val+1,w
  1373  074A  00F3               	movwf	___lwmod@dividend+1
  1374  074B  0879               	movf	show_multidigits@val,w
  1375  074C  00F2               	movwf	___lwmod@dividend
  1376  074D  120A  158A  2704  120A  118A  	fcall	___lwmod
  1377  0752  0871               	movf	?___lwmod+1,w
  1378  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0755  00AD               	movwf	show_multidigits@remainder+1
  1381  0756  0870               	movf	?___lwmod,w
  1382  0757  00AC               	movwf	show_multidigits@remainder
  1383                           
  1384                           ;./lcd4bit.h: 116:         result1 = val /10;
  1385  0758  300A               	movlw	10
  1386  0759  00F0               	movwf	___lwdiv@divisor
  1387  075A  3000               	movlw	0
  1388  075B  00F1               	movwf	___lwdiv@divisor+1
  1389  075C  087A               	movf	show_multidigits@val+1,w
  1390  075D  00F3               	movwf	___lwdiv@dividend+1
  1391  075E  0879               	movf	show_multidigits@val,w
  1392  075F  00F2               	movwf	___lwdiv@dividend
  1393  0760  120A  118A  2011  120A  118A  	fcall	___lwdiv
  1394  0765  0871               	movf	?___lwdiv+1,w
  1395  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0768  00AB               	movwf	show_multidigits@result1+1
  1398  0769  0870               	movf	?___lwdiv,w
  1399  076A  00AA               	movwf	show_multidigits@result1
  1400  076B                     l1666:
  1401                           
  1402                           ;./lcd4bit.h: 117:         digit1 = remainder;
  1403  076B  082D               	movf	show_multidigits@remainder+1,w
  1404  076C  00A7               	movwf	show_multidigits@digit1+1
  1405  076D  082C               	movf	show_multidigits@remainder,w
  1406  076E  00A6               	movwf	show_multidigits@digit1
  1407  076F                     l1668:
  1408                           
  1409                           ;./lcd4bit.h: 118:         remainder = result1%10;
  1410  076F  300A               	movlw	10
  1411  0770  00F0               	movwf	___awmod@divisor
  1412  0771  3000               	movlw	0
  1413  0772  00F1               	movwf	___awmod@divisor+1
  1414  0773  082B               	movf	show_multidigits@result1+1,w
  1415  0774  00F3               	movwf	___awmod@dividend+1
  1416  0775  082A               	movf	show_multidigits@result1,w
  1417  0776  00F2               	movwf	___awmod@dividend
  1418  0777  120A  118A  209B  120A  118A  	fcall	___awmod
  1419  077C  0871               	movf	?___awmod+1,w
  1420  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1421  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1422  077F  00AD               	movwf	show_multidigits@remainder+1
  1423  0780  0870               	movf	?___awmod,w
  1424  0781  00AC               	movwf	show_multidigits@remainder
  1425                           
  1426                           ;./lcd4bit.h: 119:         digit2 = remainder;
  1427  0782  082D               	movf	show_multidigits@remainder+1,w
  1428  0783  00A9               	movwf	show_multidigits@digit2+1
  1429  0784  082C               	movf	show_multidigits@remainder,w
  1430  0785  00A8               	movwf	show_multidigits@digit2
  1431  0786                     l1670:
  1432                           
  1433                           ;./lcd4bit.h: 120:         result = result1/10;
  1434  0786  300A               	movlw	10
  1435  0787  00F0               	movwf	___awdiv@divisor
  1436  0788  3000               	movlw	0
  1437  0789  00F1               	movwf	___awdiv@divisor+1
  1438  078A  082B               	movf	show_multidigits@result1+1,w
  1439  078B  00F3               	movwf	___awdiv@dividend+1
  1440  078C  082A               	movf	show_multidigits@result1,w
  1441  078D  00F2               	movwf	___awdiv@dividend
  1442  078E  120A  118A  2158  120A  118A  	fcall	___awdiv
  1443  0793  0871               	movf	?___awdiv+1,w
  1444  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0796  00A3               	movwf	show_multidigits@result+1
  1447  0797  0870               	movf	?___awdiv,w
  1448  0798  00A2               	movwf	show_multidigits@result
  1449  0799                     l1672:
  1450                           
  1451                           ;./lcd4bit.h: 121:         remainder = result%10;
  1452  0799  300A               	movlw	10
  1453  079A  00F0               	movwf	___awmod@divisor
  1454  079B  3000               	movlw	0
  1455  079C  00F1               	movwf	___awmod@divisor+1
  1456  079D  0823               	movf	show_multidigits@result+1,w
  1457  079E  00F3               	movwf	___awmod@dividend+1
  1458  079F  0822               	movf	show_multidigits@result,w
  1459  07A0  00F2               	movwf	___awmod@dividend
  1460  07A1  120A  118A  209B  120A  118A  	fcall	___awmod
  1461  07A6  0871               	movf	?___awmod+1,w
  1462  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1463  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1464  07A9  00AD               	movwf	show_multidigits@remainder+1
  1465  07AA  0870               	movf	?___awmod,w
  1466  07AB  00AC               	movwf	show_multidigits@remainder
  1467                           
  1468                           ;./lcd4bit.h: 122:         digit3=remainder;
  1469  07AC  082D               	movf	show_multidigits@remainder+1,w
  1470  07AD  00A5               	movwf	show_multidigits@digit3+1
  1471  07AE  082C               	movf	show_multidigits@remainder,w
  1472  07AF  00A4               	movwf	show_multidigits@digit3
  1473  07B0                     l1674:
  1474                           
  1475                           ;./lcd4bit.h: 123:         digit4 = result/10;
  1476  07B0  300A               	movlw	10
  1477  07B1  00F0               	movwf	___awdiv@divisor
  1478  07B2  3000               	movlw	0
  1479  07B3  00F1               	movwf	___awdiv@divisor+1
  1480  07B4  0823               	movf	show_multidigits@result+1,w
  1481  07B5  00F3               	movwf	___awdiv@dividend+1
  1482  07B6  0822               	movf	show_multidigits@result,w
  1483  07B7  00F2               	movwf	___awdiv@dividend
  1484  07B8  120A  118A  2158  120A  118A  	fcall	___awdiv
  1485  07BD  0871               	movf	?___awdiv+1,w
  1486  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1487  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1488  07C0  00A1               	movwf	show_multidigits@digit4+1
  1489  07C1  0870               	movf	?___awdiv,w
  1490  07C2  00A0               	movwf	show_multidigits@digit4
  1491  07C3                     l1676:
  1492                           
  1493                           ;./lcd4bit.h: 124:         LCD_Char(digit4+0x30);
  1494  07C3  0820               	movf	show_multidigits@digit4,w
  1495  07C4  3E30               	addlw	48
  1496  07C5  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1497  07CA                     l1678:
  1498                           
  1499                           ;./lcd4bit.h: 125:         LCD_Char(digit3+0x30);
  1500  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1501  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1502  07CC  0824               	movf	show_multidigits@digit3,w
  1503  07CD  3E30               	addlw	48
  1504  07CE  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1505  07D3                     l1680:
  1506                           
  1507                           ;./lcd4bit.h: 126:         LCD_Char(digit2+0x30);
  1508  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1509  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1510  07D5  0828               	movf	show_multidigits@digit2,w
  1511  07D6  3E30               	addlw	48
  1512  07D7  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1513  07DC                     l1682:
  1514                           
  1515                           ;./lcd4bit.h: 127:         LCD_Char(digit1+0x30);
  1516  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1517  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1518  07DE  0826               	movf	show_multidigits@digit1,w
  1519  07DF  3E30               	addlw	48
  1520  07E0  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  1521  07E5  2FE6               	goto	l81
  1522  07E6                     l77:
  1523  07E6                     l81:
  1524  07E6  0008               	return
  1525  07E7                     __end_of_show_multidigits:
  1526                           
  1527                           	psect	text2
  1528  0E96                     __ptext2:	
  1529 ;; *************** function _show *****************
  1530 ;; Defined at:
  1531 ;;		line 72 in file "./lcd4bit.h"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  s               1    wreg     PTR unsigned char 
  1534 ;;		 -> STR_2(6), STR_1(6), 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  s               1    4[COMMON] PTR unsigned char 
  1537 ;;		 -> STR_2(6), STR_1(6), 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0
  1549 ;;      Temps:          1       0       0       0       0
  1550 ;;      Totals:         2       0       0       0       0
  1551 ;;Total ram usage:        2 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 1
  1554 ;; This function calls:
  1555 ;;		_LCD_Char
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _show
  1563  0E96                     _show:
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1567                           ;show@s stored from wreg
  1568  0E96  00F4               	movwf	show@s
  1569  0E97                     l1616:
  1570                           
  1571                           ;./lcd4bit.h: 72: void show(unsigned char *s);./lcd4bit.h: 73: {;./lcd4bit.h: 74:     wh
      +                          ile(*s) {
  1572  0E97  2EA8               	goto	l1622
  1573  0E98                     l1618:
  1574                           
  1575                           ;./lcd4bit.h: 75:         LCD_Char(*s++);
  1576  0E98  0874               	movf	show@s,w
  1577  0E99  0084               	movwf	4
  1578  0E9A  120A  158A  2000  120A  158A  	fcall	stringdir
  1579  0E9F  120A  158A  277E  120A  158A  	fcall	_LCD_Char
  1580  0EA4                     l1620:
  1581  0EA4  3001               	movlw	1
  1582  0EA5  00F3               	movwf	??_show
  1583  0EA6  0873               	movf	??_show,w
  1584  0EA7  07F4               	addwf	show@s,f
  1585  0EA8                     l1622:
  1586                           
  1587                           ;./lcd4bit.h: 74:     while(*s) {
  1588  0EA8  0874               	movf	show@s,w
  1589  0EA9  0084               	movwf	4
  1590  0EAA  120A  158A  2000  120A  158A  	fcall	stringdir
  1591  0EAF  3A00               	xorlw	0
  1592  0EB0  1D03               	skipz
  1593  0EB1  2EB3               	goto	u1391
  1594  0EB2  2EB4               	goto	u1390
  1595  0EB3                     u1391:
  1596  0EB3  2E98               	goto	l1618
  1597  0EB4                     u1390:
  1598  0EB4                     l68:
  1599  0EB4  0008               	return
  1600  0EB5                     __end_of_show:
  1601                           
  1602                           	psect	text3
  1603  0004                     __ptext3:	
  1604 ;; *************** function _ser_int *****************
  1605 ;; Defined at:
  1606 ;;		line 7 in file "./uart.h"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _ser_int
  1635  0004                     _ser_int:
  1636  0004                     l1684:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _ser_int: [wreg]
  1639                           
  1640                           
  1641                           ;./uart.h: 9:  TXSTA= 0x20;
  1642  0004  3020               	movlw	32
  1643  0005  1683               	bsf	3,5	;RP0=1, select bank1
  1644  0006  1303               	bcf	3,6	;RP1=0, select bank1
  1645  0007  0098               	movwf	24	;volatile
  1646                           
  1647                           ;./uart.h: 10:  RCSTA= 0b10010000;
  1648  0008  3090               	movlw	144
  1649  0009  1283               	bcf	3,5	;RP0=0, select bank0
  1650  000A  1303               	bcf	3,6	;RP1=0, select bank0
  1651  000B  0098               	movwf	24	;volatile
  1652                           
  1653                           ;./uart.h: 11:  SPBRG=31;
  1654  000C  301F               	movlw	31
  1655  000D  1683               	bsf	3,5	;RP0=1, select bank1
  1656  000E  1303               	bcf	3,6	;RP1=0, select bank1
  1657  000F  0099               	movwf	25	;volatile
  1658  0010                     l84:
  1659  0010  0008               	return
  1660  0011                     __end_of_ser_int:
  1661                           
  1662                           	psect	text4
  1663  0E6A                     __ptext4:	
  1664 ;; *************** function _print_serialnumber *****************
  1665 ;; Defined at:
  1666 ;;		line 114 in file "main.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 2
  1687 ;; This function calls:
  1688 ;;		_tx
  1689 ;;		_tx_sn
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           
  1696                           ;psect for function _print_serialnumber
  1697  0E6A                     _print_serialnumber:
  1698  0E6A                     l1732:	
  1699                           ;incstack = 0
  1700                           ; Regs used in _print_serialnumber: [wreg+status,2+status,0+pclath+cstack]
  1701                           
  1702                           
  1703                           ;main.c: 116:     tx_sn(sn);
  1704  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  1706  0E6C  086A               	movf	_sn+1,w
  1707  0E6D  00FA               	movwf	tx_sn@val+1
  1708  0E6E  0869               	movf	_sn,w
  1709  0E6F  00F9               	movwf	tx_sn@val
  1710  0E70  120A  118A  24C3  120A  158A  	fcall	_tx_sn
  1711                           
  1712                           ;main.c: 117:     tx(')');
  1713  0E75  3029               	movlw	41
  1714  0E76  120A  158A  2650  120A  158A  	fcall	_tx
  1715  0E7B                     l174:
  1716  0E7B  0008               	return
  1717  0E7C                     __end_of_print_serialnumber:
  1718                           
  1719                           	psect	text5
  1720  04C3                     __ptext5:	
  1721 ;; *************** function _tx_sn *****************
  1722 ;; Defined at:
  1723 ;;		line 27 in file "./uart.h"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  val             2    9[COMMON] unsigned int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  remainder       2   12[BANK0 ] int 
  1728 ;;  result1         2   10[BANK0 ] int 
  1729 ;;  digit2          2    8[BANK0 ] int 
  1730 ;;  digit1          2    6[BANK0 ] int 
  1731 ;;  digit3          2    4[BANK0 ] int 
  1732 ;;  result          2    2[BANK0 ] int 
  1733 ;;  digit4          2    0[BANK0 ] int 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, pclath, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         2       0       0       0       0
  1744 ;;      Locals:         0      14       0       0       0
  1745 ;;      Temps:          0       0       0       0       0
  1746 ;;      Totals:         2      14       0       0       0
  1747 ;;Total ram usage:       16 bytes
  1748 ;; Hardware stack levels used: 1
  1749 ;; Hardware stack levels required when called: 1
  1750 ;; This function calls:
  1751 ;;		___awdiv
  1752 ;;		___awmod
  1753 ;;		___lwdiv
  1754 ;;		___lwmod
  1755 ;;		_tx
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;;		_print_serialnumber
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _tx_sn
  1764  04C3                     _tx_sn:
  1765  04C3                     l1552:	
  1766                           ;incstack = 0
  1767                           ; Regs used in _tx_sn: [wreg+status,2+status,0+pclath+cstack]
  1768                           
  1769                           
  1770                           ;./uart.h: 27: void tx_sn (unsigned int val);./uart.h: 28: {;./uart.h: 29:     int remai
      +                          nder, digit1, digit2, digit3, digit4, result, result1;;./uart.h: 30:     if (val<=9)
  1771  04C3  3000               	movlw	0
  1772  04C4  027A               	subwf	tx_sn@val+1,w
  1773  04C5  300A               	movlw	10
  1774  04C6  1903               	skipnz
  1775  04C7  0279               	subwf	tx_sn@val,w
  1776  04C8  1803               	skipnc
  1777  04C9  2CCB               	goto	u1321
  1778  04CA  2CCC               	goto	u1320
  1779  04CB                     u1321:
  1780  04CB  2CD4               	goto	l1556
  1781  04CC                     u1320:
  1782  04CC                     l1554:
  1783                           
  1784                           ;./uart.h: 31:     {;./uart.h: 32:        tx(val+0x30);
  1785  04CC  0879               	movf	tx_sn@val,w
  1786  04CD  3E30               	addlw	48
  1787  04CE  120A  158A  2650  120A  118A  	fcall	_tx
  1788                           
  1789                           ;./uart.h: 33:     }
  1790  04D3  2E54               	goto	l106
  1791  04D4                     l1556:
  1792  04D4  3000               	movlw	0
  1793  04D5  027A               	subwf	tx_sn@val+1,w
  1794  04D6  300A               	movlw	10
  1795  04D7  1903               	skipnz
  1796  04D8  0279               	subwf	tx_sn@val,w
  1797  04D9  1C03               	skipc
  1798  04DA  2CDC               	goto	u1331
  1799  04DB  2CDD               	goto	u1330
  1800  04DC                     u1331:
  1801  04DC  2D21               	goto	l1570
  1802  04DD                     u1330:
  1803  04DD                     l1558:
  1804  04DD  3000               	movlw	0
  1805  04DE  027A               	subwf	tx_sn@val+1,w
  1806  04DF  3064               	movlw	100
  1807  04E0  1903               	skipnz
  1808  04E1  0279               	subwf	tx_sn@val,w
  1809  04E2  1803               	skipnc
  1810  04E3  2CE5               	goto	u1341
  1811  04E4  2CE6               	goto	u1340
  1812  04E5                     u1341:
  1813  04E5  2D21               	goto	l1570
  1814  04E6                     u1340:
  1815  04E6                     l1560:
  1816                           
  1817                           ;./uart.h: 35:     {;./uart.h: 36:         remainder = val % 10;
  1818  04E6  300A               	movlw	10
  1819  04E7  00F0               	movwf	___lwmod@divisor
  1820  04E8  3000               	movlw	0
  1821  04E9  00F1               	movwf	___lwmod@divisor+1
  1822  04EA  087A               	movf	tx_sn@val+1,w
  1823  04EB  00F3               	movwf	___lwmod@dividend+1
  1824  04EC  0879               	movf	tx_sn@val,w
  1825  04ED  00F2               	movwf	___lwmod@dividend
  1826  04EE  120A  158A  2704  120A  118A  	fcall	___lwmod
  1827  04F3  0871               	movf	?___lwmod+1,w
  1828  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1829  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1830  04F6  00AD               	movwf	tx_sn@remainder+1
  1831  04F7  0870               	movf	?___lwmod,w
  1832  04F8  00AC               	movwf	tx_sn@remainder
  1833  04F9                     l1562:
  1834                           
  1835                           ;./uart.h: 37:         digit1 = remainder;
  1836  04F9  082D               	movf	tx_sn@remainder+1,w
  1837  04FA  00A7               	movwf	tx_sn@digit1+1
  1838  04FB  082C               	movf	tx_sn@remainder,w
  1839  04FC  00A6               	movwf	tx_sn@digit1
  1840  04FD                     l1564:
  1841                           
  1842                           ;./uart.h: 38:         digit2 = val/10;
  1843  04FD  300A               	movlw	10
  1844  04FE  00F0               	movwf	___lwdiv@divisor
  1845  04FF  3000               	movlw	0
  1846  0500  00F1               	movwf	___lwdiv@divisor+1
  1847  0501  087A               	movf	tx_sn@val+1,w
  1848  0502  00F3               	movwf	___lwdiv@dividend+1
  1849  0503  0879               	movf	tx_sn@val,w
  1850  0504  00F2               	movwf	___lwdiv@dividend
  1851  0505  120A  118A  2011  120A  118A  	fcall	___lwdiv
  1852  050A  0871               	movf	?___lwdiv+1,w
  1853  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1854  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1855  050D  00A9               	movwf	tx_sn@digit2+1
  1856  050E  0870               	movf	?___lwdiv,w
  1857  050F  00A8               	movwf	tx_sn@digit2
  1858  0510                     l1566:
  1859                           
  1860                           ;./uart.h: 39:         tx(digit2+0x30);
  1861  0510  0828               	movf	tx_sn@digit2,w
  1862  0511  3E30               	addlw	48
  1863  0512  120A  158A  2650  120A  118A  	fcall	_tx
  1864  0517                     l1568:
  1865                           
  1866                           ;./uart.h: 40:         tx(digit1+0x30);
  1867  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0519  0826               	movf	tx_sn@digit1,w
  1870  051A  3E30               	addlw	48
  1871  051B  120A  158A  2650  120A  118A  	fcall	_tx
  1872                           
  1873                           ;./uart.h: 41:     }
  1874  0520  2E54               	goto	l106
  1875  0521                     l1570:
  1876  0521  3000               	movlw	0
  1877  0522  027A               	subwf	tx_sn@val+1,w
  1878  0523  3064               	movlw	100
  1879  0524  1903               	skipnz
  1880  0525  0279               	subwf	tx_sn@val,w
  1881  0526  1C03               	skipc
  1882  0527  2D29               	goto	u1351
  1883  0528  2D2A               	goto	u1350
  1884  0529                     u1351:
  1885  0529  2DA1               	goto	l1588
  1886  052A                     u1350:
  1887  052A                     l1572:
  1888  052A  3003               	movlw	3
  1889  052B  027A               	subwf	tx_sn@val+1,w
  1890  052C  30E8               	movlw	232
  1891  052D  1903               	skipnz
  1892  052E  0279               	subwf	tx_sn@val,w
  1893  052F  1803               	skipnc
  1894  0530  2D32               	goto	u1361
  1895  0531  2D33               	goto	u1360
  1896  0532                     u1361:
  1897  0532  2DA1               	goto	l1588
  1898  0533                     u1360:
  1899  0533                     l1574:
  1900                           
  1901                           ;./uart.h: 43:     {;./uart.h: 44:         remainder = val % 10;
  1902  0533  300A               	movlw	10
  1903  0534  00F0               	movwf	___lwmod@divisor
  1904  0535  3000               	movlw	0
  1905  0536  00F1               	movwf	___lwmod@divisor+1
  1906  0537  087A               	movf	tx_sn@val+1,w
  1907  0538  00F3               	movwf	___lwmod@dividend+1
  1908  0539  0879               	movf	tx_sn@val,w
  1909  053A  00F2               	movwf	___lwmod@dividend
  1910  053B  120A  158A  2704  120A  118A  	fcall	___lwmod
  1911  0540  0871               	movf	?___lwmod+1,w
  1912  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0543  00AD               	movwf	tx_sn@remainder+1
  1915  0544  0870               	movf	?___lwmod,w
  1916  0545  00AC               	movwf	tx_sn@remainder
  1917                           
  1918                           ;./uart.h: 45:         result1 = val /10;
  1919  0546  300A               	movlw	10
  1920  0547  00F0               	movwf	___lwdiv@divisor
  1921  0548  3000               	movlw	0
  1922  0549  00F1               	movwf	___lwdiv@divisor+1
  1923  054A  087A               	movf	tx_sn@val+1,w
  1924  054B  00F3               	movwf	___lwdiv@dividend+1
  1925  054C  0879               	movf	tx_sn@val,w
  1926  054D  00F2               	movwf	___lwdiv@dividend
  1927  054E  120A  118A  2011  120A  118A  	fcall	___lwdiv
  1928  0553  0871               	movf	?___lwdiv+1,w
  1929  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0556  00AB               	movwf	tx_sn@result1+1
  1932  0557  0870               	movf	?___lwdiv,w
  1933  0558  00AA               	movwf	tx_sn@result1
  1934  0559                     l1576:
  1935                           
  1936                           ;./uart.h: 46:         digit1 = remainder;
  1937  0559  082D               	movf	tx_sn@remainder+1,w
  1938  055A  00A7               	movwf	tx_sn@digit1+1
  1939  055B  082C               	movf	tx_sn@remainder,w
  1940  055C  00A6               	movwf	tx_sn@digit1
  1941  055D                     l1578:
  1942                           
  1943                           ;./uart.h: 47:         remainder = result1%10;
  1944  055D  300A               	movlw	10
  1945  055E  00F0               	movwf	___awmod@divisor
  1946  055F  3000               	movlw	0
  1947  0560  00F1               	movwf	___awmod@divisor+1
  1948  0561  082B               	movf	tx_sn@result1+1,w
  1949  0562  00F3               	movwf	___awmod@dividend+1
  1950  0563  082A               	movf	tx_sn@result1,w
  1951  0564  00F2               	movwf	___awmod@dividend
  1952  0565  120A  118A  209B  120A  118A  	fcall	___awmod
  1953  056A  0871               	movf	?___awmod+1,w
  1954  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1955  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1956  056D  00AD               	movwf	tx_sn@remainder+1
  1957  056E  0870               	movf	?___awmod,w
  1958  056F  00AC               	movwf	tx_sn@remainder
  1959                           
  1960                           ;./uart.h: 48:         digit2 = remainder;
  1961  0570  082D               	movf	tx_sn@remainder+1,w
  1962  0571  00A9               	movwf	tx_sn@digit2+1
  1963  0572  082C               	movf	tx_sn@remainder,w
  1964  0573  00A8               	movwf	tx_sn@digit2
  1965  0574                     l1580:
  1966                           
  1967                           ;./uart.h: 49:         digit3 = result1/10;
  1968  0574  300A               	movlw	10
  1969  0575  00F0               	movwf	___awdiv@divisor
  1970  0576  3000               	movlw	0
  1971  0577  00F1               	movwf	___awdiv@divisor+1
  1972  0578  082B               	movf	tx_sn@result1+1,w
  1973  0579  00F3               	movwf	___awdiv@dividend+1
  1974  057A  082A               	movf	tx_sn@result1,w
  1975  057B  00F2               	movwf	___awdiv@dividend
  1976  057C  120A  118A  2158  120A  118A  	fcall	___awdiv
  1977  0581  0871               	movf	?___awdiv+1,w
  1978  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0584  00A5               	movwf	tx_sn@digit3+1
  1981  0585  0870               	movf	?___awdiv,w
  1982  0586  00A4               	movwf	tx_sn@digit3
  1983  0587                     l1582:
  1984                           
  1985                           ;./uart.h: 50:         tx(digit3+0x30);
  1986  0587  0824               	movf	tx_sn@digit3,w
  1987  0588  3E30               	addlw	48
  1988  0589  120A  158A  2650  120A  118A  	fcall	_tx
  1989  058E                     l1584:
  1990                           
  1991                           ;./uart.h: 51:         tx(digit2+0x30);
  1992  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1993  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0590  0828               	movf	tx_sn@digit2,w
  1995  0591  3E30               	addlw	48
  1996  0592  120A  158A  2650  120A  118A  	fcall	_tx
  1997  0597                     l1586:
  1998                           
  1999                           ;./uart.h: 52:         tx(digit1+0x30);
  2000  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0599  0826               	movf	tx_sn@digit1,w
  2003  059A  3E30               	addlw	48
  2004  059B  120A  158A  2650  120A  118A  	fcall	_tx
  2005                           
  2006                           ;./uart.h: 53:     }
  2007  05A0  2E54               	goto	l106
  2008  05A1                     l1588:
  2009  05A1  3003               	movlw	3
  2010  05A2  027A               	subwf	tx_sn@val+1,w
  2011  05A3  30E8               	movlw	232
  2012  05A4  1903               	skipnz
  2013  05A5  0279               	subwf	tx_sn@val,w
  2014  05A6  1C03               	skipc
  2015  05A7  2DA9               	goto	u1371
  2016  05A8  2DAA               	goto	u1370
  2017  05A9                     u1371:
  2018  05A9  2E54               	goto	l102
  2019  05AA                     u1370:
  2020  05AA                     l1590:
  2021  05AA  3027               	movlw	39
  2022  05AB  027A               	subwf	tx_sn@val+1,w
  2023  05AC  300F               	movlw	15
  2024  05AD  1903               	skipnz
  2025  05AE  0279               	subwf	tx_sn@val,w
  2026  05AF  1803               	skipnc
  2027  05B0  2DB2               	goto	u1381
  2028  05B1  2DB3               	goto	u1380
  2029  05B2                     u1381:
  2030  05B2  2E54               	goto	l102
  2031  05B3                     u1380:
  2032  05B3                     l1592:
  2033                           
  2034                           ;./uart.h: 55:     {;./uart.h: 56:         remainder = val % 10;
  2035  05B3  300A               	movlw	10
  2036  05B4  00F0               	movwf	___lwmod@divisor
  2037  05B5  3000               	movlw	0
  2038  05B6  00F1               	movwf	___lwmod@divisor+1
  2039  05B7  087A               	movf	tx_sn@val+1,w
  2040  05B8  00F3               	movwf	___lwmod@dividend+1
  2041  05B9  0879               	movf	tx_sn@val,w
  2042  05BA  00F2               	movwf	___lwmod@dividend
  2043  05BB  120A  158A  2704  120A  118A  	fcall	___lwmod
  2044  05C0  0871               	movf	?___lwmod+1,w
  2045  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2046  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2047  05C3  00AD               	movwf	tx_sn@remainder+1
  2048  05C4  0870               	movf	?___lwmod,w
  2049  05C5  00AC               	movwf	tx_sn@remainder
  2050                           
  2051                           ;./uart.h: 57:         result1 = val /10;
  2052  05C6  300A               	movlw	10
  2053  05C7  00F0               	movwf	___lwdiv@divisor
  2054  05C8  3000               	movlw	0
  2055  05C9  00F1               	movwf	___lwdiv@divisor+1
  2056  05CA  087A               	movf	tx_sn@val+1,w
  2057  05CB  00F3               	movwf	___lwdiv@dividend+1
  2058  05CC  0879               	movf	tx_sn@val,w
  2059  05CD  00F2               	movwf	___lwdiv@dividend
  2060  05CE  120A  118A  2011  120A  118A  	fcall	___lwdiv
  2061  05D3  0871               	movf	?___lwdiv+1,w
  2062  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2063  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2064  05D6  00AB               	movwf	tx_sn@result1+1
  2065  05D7  0870               	movf	?___lwdiv,w
  2066  05D8  00AA               	movwf	tx_sn@result1
  2067  05D9                     l1594:
  2068                           
  2069                           ;./uart.h: 58:         digit1 = remainder;
  2070  05D9  082D               	movf	tx_sn@remainder+1,w
  2071  05DA  00A7               	movwf	tx_sn@digit1+1
  2072  05DB  082C               	movf	tx_sn@remainder,w
  2073  05DC  00A6               	movwf	tx_sn@digit1
  2074  05DD                     l1596:
  2075                           
  2076                           ;./uart.h: 59:         remainder = result1%10;
  2077  05DD  300A               	movlw	10
  2078  05DE  00F0               	movwf	___awmod@divisor
  2079  05DF  3000               	movlw	0
  2080  05E0  00F1               	movwf	___awmod@divisor+1
  2081  05E1  082B               	movf	tx_sn@result1+1,w
  2082  05E2  00F3               	movwf	___awmod@dividend+1
  2083  05E3  082A               	movf	tx_sn@result1,w
  2084  05E4  00F2               	movwf	___awmod@dividend
  2085  05E5  120A  118A  209B  120A  118A  	fcall	___awmod
  2086  05EA  0871               	movf	?___awmod+1,w
  2087  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2088  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2089  05ED  00AD               	movwf	tx_sn@remainder+1
  2090  05EE  0870               	movf	?___awmod,w
  2091  05EF  00AC               	movwf	tx_sn@remainder
  2092                           
  2093                           ;./uart.h: 60:         digit2 = remainder;
  2094  05F0  082D               	movf	tx_sn@remainder+1,w
  2095  05F1  00A9               	movwf	tx_sn@digit2+1
  2096  05F2  082C               	movf	tx_sn@remainder,w
  2097  05F3  00A8               	movwf	tx_sn@digit2
  2098  05F4                     l1598:
  2099                           
  2100                           ;./uart.h: 61:         result = result1/10;
  2101  05F4  300A               	movlw	10
  2102  05F5  00F0               	movwf	___awdiv@divisor
  2103  05F6  3000               	movlw	0
  2104  05F7  00F1               	movwf	___awdiv@divisor+1
  2105  05F8  082B               	movf	tx_sn@result1+1,w
  2106  05F9  00F3               	movwf	___awdiv@dividend+1
  2107  05FA  082A               	movf	tx_sn@result1,w
  2108  05FB  00F2               	movwf	___awdiv@dividend
  2109  05FC  120A  118A  2158  120A  118A  	fcall	___awdiv
  2110  0601  0871               	movf	?___awdiv+1,w
  2111  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0604  00A3               	movwf	tx_sn@result+1
  2114  0605  0870               	movf	?___awdiv,w
  2115  0606  00A2               	movwf	tx_sn@result
  2116  0607                     l1600:
  2117                           
  2118                           ;./uart.h: 62:         remainder = result%10;
  2119  0607  300A               	movlw	10
  2120  0608  00F0               	movwf	___awmod@divisor
  2121  0609  3000               	movlw	0
  2122  060A  00F1               	movwf	___awmod@divisor+1
  2123  060B  0823               	movf	tx_sn@result+1,w
  2124  060C  00F3               	movwf	___awmod@dividend+1
  2125  060D  0822               	movf	tx_sn@result,w
  2126  060E  00F2               	movwf	___awmod@dividend
  2127  060F  120A  118A  209B  120A  118A  	fcall	___awmod
  2128  0614  0871               	movf	?___awmod+1,w
  2129  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2130  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2131  0617  00AD               	movwf	tx_sn@remainder+1
  2132  0618  0870               	movf	?___awmod,w
  2133  0619  00AC               	movwf	tx_sn@remainder
  2134                           
  2135                           ;./uart.h: 63:         digit3=remainder;
  2136  061A  082D               	movf	tx_sn@remainder+1,w
  2137  061B  00A5               	movwf	tx_sn@digit3+1
  2138  061C  082C               	movf	tx_sn@remainder,w
  2139  061D  00A4               	movwf	tx_sn@digit3
  2140  061E                     l1602:
  2141                           
  2142                           ;./uart.h: 64:         digit4 = result/10;
  2143  061E  300A               	movlw	10
  2144  061F  00F0               	movwf	___awdiv@divisor
  2145  0620  3000               	movlw	0
  2146  0621  00F1               	movwf	___awdiv@divisor+1
  2147  0622  0823               	movf	tx_sn@result+1,w
  2148  0623  00F3               	movwf	___awdiv@dividend+1
  2149  0624  0822               	movf	tx_sn@result,w
  2150  0625  00F2               	movwf	___awdiv@dividend
  2151  0626  120A  118A  2158  120A  118A  	fcall	___awdiv
  2152  062B  0871               	movf	?___awdiv+1,w
  2153  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2154  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2155  062E  00A1               	movwf	tx_sn@digit4+1
  2156  062F  0870               	movf	?___awdiv,w
  2157  0630  00A0               	movwf	tx_sn@digit4
  2158  0631                     l1604:
  2159                           
  2160                           ;./uart.h: 65:         tx(digit4+0x30);
  2161  0631  0820               	movf	tx_sn@digit4,w
  2162  0632  3E30               	addlw	48
  2163  0633  120A  158A  2650  120A  118A  	fcall	_tx
  2164  0638                     l1606:
  2165                           
  2166                           ;./uart.h: 66:         tx(digit3+0x30);
  2167  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2169  063A  0824               	movf	tx_sn@digit3,w
  2170  063B  3E30               	addlw	48
  2171  063C  120A  158A  2650  120A  118A  	fcall	_tx
  2172  0641                     l1608:
  2173                           
  2174                           ;./uart.h: 67:         tx(digit2+0x30);
  2175  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0643  0828               	movf	tx_sn@digit2,w
  2178  0644  3E30               	addlw	48
  2179  0645  120A  158A  2650  120A  118A  	fcall	_tx
  2180  064A                     l1610:
  2181                           
  2182                           ;./uart.h: 68:         tx(digit1+0x30);
  2183  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2184  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2185  064C  0826               	movf	tx_sn@digit1,w
  2186  064D  3E30               	addlw	48
  2187  064E  120A  158A  2650  120A  118A  	fcall	_tx
  2188  0653  2E54               	goto	l106
  2189  0654                     l102:
  2190  0654                     l106:
  2191  0654  0008               	return
  2192  0655                     __end_of_tx_sn:
  2193                           
  2194                           	psect	text6
  2195  009B                     __ptext6:	
  2196 ;; *************** function ___awmod *****************
  2197 ;; Defined at:
  2198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  divisor         2    0[COMMON] int 
  2201 ;;  dividend        2    2[COMMON] int 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  sign            1    6[COMMON] unsigned char 
  2204 ;;  counter         1    5[COMMON] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  2    0[COMMON] int 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         4       0       0       0       0
  2215 ;;      Locals:         2       0       0       0       0
  2216 ;;      Temps:          1       0       0       0       0
  2217 ;;      Totals:         7       0       0       0       0
  2218 ;;Total ram usage:        7 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_show_multidigits
  2224 ;;		_tx_sn
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function ___awmod
  2230  009B                     ___awmod:
  2231  009B                     l1424:	
  2232                           ;incstack = 0
  2233                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2234                           
  2235  009B  01F6               	clrf	___awmod@sign
  2236  009C                     l1426:
  2237  009C  1FF3               	btfss	___awmod@dividend+1,7
  2238  009D  289F               	goto	u1091
  2239  009E  28A0               	goto	u1090
  2240  009F                     u1091:
  2241  009F  28A7               	goto	l1432
  2242  00A0                     u1090:
  2243  00A0                     l1428:
  2244  00A0  09F2               	comf	___awmod@dividend,f
  2245  00A1  09F3               	comf	___awmod@dividend+1,f
  2246  00A2  0AF2               	incf	___awmod@dividend,f
  2247  00A3  1903               	skipnz
  2248  00A4  0AF3               	incf	___awmod@dividend+1,f
  2249  00A5                     l1430:
  2250  00A5  01F6               	clrf	___awmod@sign
  2251  00A6  0AF6               	incf	___awmod@sign,f
  2252  00A7                     l1432:
  2253  00A7  1FF1               	btfss	___awmod@divisor+1,7
  2254  00A8  28AA               	goto	u1101
  2255  00A9  28AB               	goto	u1100
  2256  00AA                     u1101:
  2257  00AA  28B0               	goto	l1436
  2258  00AB                     u1100:
  2259  00AB                     l1434:
  2260  00AB  09F0               	comf	___awmod@divisor,f
  2261  00AC  09F1               	comf	___awmod@divisor+1,f
  2262  00AD  0AF0               	incf	___awmod@divisor,f
  2263  00AE  1903               	skipnz
  2264  00AF  0AF1               	incf	___awmod@divisor+1,f
  2265  00B0                     l1436:
  2266  00B0  0870               	movf	___awmod@divisor,w
  2267  00B1  0471               	iorwf	___awmod@divisor+1,w
  2268  00B2  1903               	btfsc	3,2
  2269  00B3  28B5               	goto	u1111
  2270  00B4  28B6               	goto	u1110
  2271  00B5                     u1111:
  2272  00B5  28E5               	goto	l1454
  2273  00B6                     u1110:
  2274  00B6                     l1438:
  2275  00B6  01F5               	clrf	___awmod@counter
  2276  00B7  0AF5               	incf	___awmod@counter,f
  2277  00B8  28C4               	goto	l1444
  2278  00B9                     l1440:
  2279  00B9  3001               	movlw	1
  2280  00BA                     u1125:
  2281  00BA  1003               	clrc
  2282  00BB  0DF0               	rlf	___awmod@divisor,f
  2283  00BC  0DF1               	rlf	___awmod@divisor+1,f
  2284  00BD  3EFF               	addlw	-1
  2285  00BE  1D03               	skipz
  2286  00BF  28BA               	goto	u1125
  2287  00C0                     l1442:
  2288  00C0  3001               	movlw	1
  2289  00C1  00F4               	movwf	??___awmod
  2290  00C2  0874               	movf	??___awmod,w
  2291  00C3  07F5               	addwf	___awmod@counter,f
  2292  00C4                     l1444:
  2293  00C4  1FF1               	btfss	___awmod@divisor+1,7
  2294  00C5  28C7               	goto	u1131
  2295  00C6  28C8               	goto	u1130
  2296  00C7                     u1131:
  2297  00C7  28B9               	goto	l1440
  2298  00C8                     u1130:
  2299  00C8                     l1446:
  2300  00C8  0871               	movf	___awmod@divisor+1,w
  2301  00C9  0273               	subwf	___awmod@dividend+1,w
  2302  00CA  1D03               	skipz
  2303  00CB  28CE               	goto	u1145
  2304  00CC  0870               	movf	___awmod@divisor,w
  2305  00CD  0272               	subwf	___awmod@dividend,w
  2306  00CE                     u1145:
  2307  00CE  1C03               	skipc
  2308  00CF  28D1               	goto	u1141
  2309  00D0  28D2               	goto	u1140
  2310  00D1                     u1141:
  2311  00D1  28D8               	goto	l1450
  2312  00D2                     u1140:
  2313  00D2                     l1448:
  2314  00D2  0870               	movf	___awmod@divisor,w
  2315  00D3  02F2               	subwf	___awmod@dividend,f
  2316  00D4  0871               	movf	___awmod@divisor+1,w
  2317  00D5  1C03               	skipc
  2318  00D6  03F3               	decf	___awmod@dividend+1,f
  2319  00D7  02F3               	subwf	___awmod@dividend+1,f
  2320  00D8                     l1450:
  2321  00D8  3001               	movlw	1
  2322  00D9                     u1155:
  2323  00D9  1003               	clrc
  2324  00DA  0CF1               	rrf	___awmod@divisor+1,f
  2325  00DB  0CF0               	rrf	___awmod@divisor,f
  2326  00DC  3EFF               	addlw	-1
  2327  00DD  1D03               	skipz
  2328  00DE  28D9               	goto	u1155
  2329  00DF                     l1452:
  2330  00DF  3001               	movlw	1
  2331  00E0  02F5               	subwf	___awmod@counter,f
  2332  00E1  1D03               	btfss	3,2
  2333  00E2  28E4               	goto	u1161
  2334  00E3  28E5               	goto	u1160
  2335  00E4                     u1161:
  2336  00E4  28C8               	goto	l1446
  2337  00E5                     u1160:
  2338  00E5                     l1454:
  2339  00E5  0876               	movf	___awmod@sign,w
  2340  00E6  1903               	btfsc	3,2
  2341  00E7  28E9               	goto	u1171
  2342  00E8  28EA               	goto	u1170
  2343  00E9                     u1171:
  2344  00E9  28EF               	goto	l1458
  2345  00EA                     u1170:
  2346  00EA                     l1456:
  2347  00EA  09F2               	comf	___awmod@dividend,f
  2348  00EB  09F3               	comf	___awmod@dividend+1,f
  2349  00EC  0AF2               	incf	___awmod@dividend,f
  2350  00ED  1903               	skipnz
  2351  00EE  0AF3               	incf	___awmod@dividend+1,f
  2352  00EF                     l1458:
  2353  00EF  0873               	movf	___awmod@dividend+1,w
  2354  00F0  00F1               	movwf	?___awmod+1
  2355  00F1  0872               	movf	___awmod@dividend,w
  2356  00F2  00F0               	movwf	?___awmod
  2357  00F3                     l436:
  2358  00F3  0008               	return
  2359  00F4                     __end_of___awmod:
  2360                           
  2361                           	psect	text7
  2362  0158                     __ptext7:	
  2363 ;; *************** function ___awdiv *****************
  2364 ;; Defined at:
  2365 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  divisor         2    0[COMMON] int 
  2368 ;;  dividend        2    2[COMMON] int 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  quotient        2    7[COMMON] int 
  2371 ;;  sign            1    6[COMMON] unsigned char 
  2372 ;;  counter         1    5[COMMON] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  2    0[COMMON] int 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         4       0       0       0       0
  2383 ;;      Locals:         4       0       0       0       0
  2384 ;;      Temps:          1       0       0       0       0
  2385 ;;      Totals:         9       0       0       0       0
  2386 ;;Total ram usage:        9 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_show_multidigits
  2392 ;;		_tx_sn
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function ___awdiv
  2398  0158                     ___awdiv:
  2399  0158                     l1380:	
  2400                           ;incstack = 0
  2401                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2402                           
  2403  0158  01F6               	clrf	___awdiv@sign
  2404  0159                     l1382:
  2405  0159  1FF1               	btfss	___awdiv@divisor+1,7
  2406  015A  295C               	goto	u991
  2407  015B  295D               	goto	u990
  2408  015C                     u991:
  2409  015C  2964               	goto	l1388
  2410  015D                     u990:
  2411  015D                     l1384:
  2412  015D  09F0               	comf	___awdiv@divisor,f
  2413  015E  09F1               	comf	___awdiv@divisor+1,f
  2414  015F  0AF0               	incf	___awdiv@divisor,f
  2415  0160  1903               	skipnz
  2416  0161  0AF1               	incf	___awdiv@divisor+1,f
  2417  0162                     l1386:
  2418  0162  01F6               	clrf	___awdiv@sign
  2419  0163  0AF6               	incf	___awdiv@sign,f
  2420  0164                     l1388:
  2421  0164  1FF3               	btfss	___awdiv@dividend+1,7
  2422  0165  2967               	goto	u1001
  2423  0166  2968               	goto	u1000
  2424  0167                     u1001:
  2425  0167  2971               	goto	l1394
  2426  0168                     u1000:
  2427  0168                     l1390:
  2428  0168  09F2               	comf	___awdiv@dividend,f
  2429  0169  09F3               	comf	___awdiv@dividend+1,f
  2430  016A  0AF2               	incf	___awdiv@dividend,f
  2431  016B  1903               	skipnz
  2432  016C  0AF3               	incf	___awdiv@dividend+1,f
  2433  016D                     l1392:
  2434  016D  3001               	movlw	1
  2435  016E  00F4               	movwf	??___awdiv
  2436  016F  0874               	movf	??___awdiv,w
  2437  0170  06F6               	xorwf	___awdiv@sign,f
  2438  0171                     l1394:
  2439  0171  01F7               	clrf	___awdiv@quotient
  2440  0172  01F8               	clrf	___awdiv@quotient+1
  2441  0173                     l1396:
  2442  0173  0870               	movf	___awdiv@divisor,w
  2443  0174  0471               	iorwf	___awdiv@divisor+1,w
  2444  0175  1903               	btfsc	3,2
  2445  0176  2978               	goto	u1011
  2446  0177  2979               	goto	u1010
  2447  0178                     u1011:
  2448  0178  29B0               	goto	l1416
  2449  0179                     u1010:
  2450  0179                     l1398:
  2451  0179  01F5               	clrf	___awdiv@counter
  2452  017A  0AF5               	incf	___awdiv@counter,f
  2453  017B  2987               	goto	l1404
  2454  017C                     l1400:
  2455  017C  3001               	movlw	1
  2456  017D                     u1025:
  2457  017D  1003               	clrc
  2458  017E  0DF0               	rlf	___awdiv@divisor,f
  2459  017F  0DF1               	rlf	___awdiv@divisor+1,f
  2460  0180  3EFF               	addlw	-1
  2461  0181  1D03               	skipz
  2462  0182  297D               	goto	u1025
  2463  0183                     l1402:
  2464  0183  3001               	movlw	1
  2465  0184  00F4               	movwf	??___awdiv
  2466  0185  0874               	movf	??___awdiv,w
  2467  0186  07F5               	addwf	___awdiv@counter,f
  2468  0187                     l1404:
  2469  0187  1FF1               	btfss	___awdiv@divisor+1,7
  2470  0188  298A               	goto	u1031
  2471  0189  298B               	goto	u1030
  2472  018A                     u1031:
  2473  018A  297C               	goto	l1400
  2474  018B                     u1030:
  2475  018B                     l1406:
  2476  018B  3001               	movlw	1
  2477  018C                     u1045:
  2478  018C  1003               	clrc
  2479  018D  0DF7               	rlf	___awdiv@quotient,f
  2480  018E  0DF8               	rlf	___awdiv@quotient+1,f
  2481  018F  3EFF               	addlw	-1
  2482  0190  1D03               	skipz
  2483  0191  298C               	goto	u1045
  2484  0192  0871               	movf	___awdiv@divisor+1,w
  2485  0193  0273               	subwf	___awdiv@dividend+1,w
  2486  0194  1D03               	skipz
  2487  0195  2998               	goto	u1055
  2488  0196  0870               	movf	___awdiv@divisor,w
  2489  0197  0272               	subwf	___awdiv@dividend,w
  2490  0198                     u1055:
  2491  0198  1C03               	skipc
  2492  0199  299B               	goto	u1051
  2493  019A  299C               	goto	u1050
  2494  019B                     u1051:
  2495  019B  29A3               	goto	l1412
  2496  019C                     u1050:
  2497  019C                     l1408:
  2498  019C  0870               	movf	___awdiv@divisor,w
  2499  019D  02F2               	subwf	___awdiv@dividend,f
  2500  019E  0871               	movf	___awdiv@divisor+1,w
  2501  019F  1C03               	skipc
  2502  01A0  03F3               	decf	___awdiv@dividend+1,f
  2503  01A1  02F3               	subwf	___awdiv@dividend+1,f
  2504  01A2                     l1410:
  2505  01A2  1477               	bsf	___awdiv@quotient,0
  2506  01A3                     l1412:
  2507  01A3  3001               	movlw	1
  2508  01A4                     u1065:
  2509  01A4  1003               	clrc
  2510  01A5  0CF1               	rrf	___awdiv@divisor+1,f
  2511  01A6  0CF0               	rrf	___awdiv@divisor,f
  2512  01A7  3EFF               	addlw	-1
  2513  01A8  1D03               	skipz
  2514  01A9  29A4               	goto	u1065
  2515  01AA                     l1414:
  2516  01AA  3001               	movlw	1
  2517  01AB  02F5               	subwf	___awdiv@counter,f
  2518  01AC  1D03               	btfss	3,2
  2519  01AD  29AF               	goto	u1071
  2520  01AE  29B0               	goto	u1070
  2521  01AF                     u1071:
  2522  01AF  298B               	goto	l1406
  2523  01B0                     u1070:
  2524  01B0                     l1416:
  2525  01B0  0876               	movf	___awdiv@sign,w
  2526  01B1  1903               	btfsc	3,2
  2527  01B2  29B4               	goto	u1081
  2528  01B3  29B5               	goto	u1080
  2529  01B4                     u1081:
  2530  01B4  29BA               	goto	l1420
  2531  01B5                     u1080:
  2532  01B5                     l1418:
  2533  01B5  09F7               	comf	___awdiv@quotient,f
  2534  01B6  09F8               	comf	___awdiv@quotient+1,f
  2535  01B7  0AF7               	incf	___awdiv@quotient,f
  2536  01B8  1903               	skipnz
  2537  01B9  0AF8               	incf	___awdiv@quotient+1,f
  2538  01BA                     l1420:
  2539  01BA  0878               	movf	___awdiv@quotient+1,w
  2540  01BB  00F1               	movwf	?___awdiv+1
  2541  01BC  0877               	movf	___awdiv@quotient,w
  2542  01BD  00F0               	movwf	?___awdiv
  2543  01BE                     l423:
  2544  01BE  0008               	return
  2545  01BF                     __end_of___awdiv:
  2546                           
  2547                           	psect	text8
  2548  01BF                     __ptext8:	
  2549 ;; *************** function _print_analogvoltages *****************
  2550 ;; Defined at:
  2551 ;;		line 120 in file "main.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  j               1   34[BANK0 ] unsigned char 
  2556 ;;  i               1   33[BANK0 ] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         0       2       0       0       0
  2568 ;;      Temps:          0       3       0       0       0
  2569 ;;      Totals:         0       5       0       0       0
  2570 ;;Total ram usage:        5 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 2
  2573 ;; This function calls:
  2574 ;;		_LCD_Char
  2575 ;;		_LCD_num
  2576 ;;		_tx
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _print_analogvoltages
  2584  01BF                     _print_analogvoltages:
  2585  01BF                     l1734:	
  2586                           ;incstack = 0
  2587                           ; Regs used in _print_analogvoltages: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2588                           
  2589                           
  2590                           ;main.c: 122:     for (unsigned char i=0;i<4;i++)
  2591  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2592  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2593  01C1  01C1               	clrf	print_analogvoltages@i
  2594  01C2                     l1740:
  2595                           
  2596                           ;main.c: 123:         {;main.c: 124:             LCD_num(AV[i]);
  2597  01C2  0841               	movf	print_analogvoltages@i,w
  2598  01C3  00BE               	movwf	??_print_analogvoltages
  2599  01C4  073E               	addwf	??_print_analogvoltages,w
  2600  01C5  3E4B               	addlw	(low (_AV| 0))& (0+255)
  2601  01C6  0084               	movwf	4
  2602  01C7  1383               	bcf	3,7	;select IRP bank0
  2603  01C8  0800               	movf	0,w
  2604  01C9  00BF               	movwf	??_print_analogvoltages+1
  2605  01CA  0A84               	incf	4,f
  2606  01CB  0800               	movf	0,w
  2607  01CC  00C0               	movwf	??_print_analogvoltages+2
  2608  01CD  083F               	movf	??_print_analogvoltages+1,w
  2609  01CE  00AE               	movwf	LCD_num@val
  2610  01CF  0840               	movf	??_print_analogvoltages+2,w
  2611  01D0  00AF               	movwf	LCD_num@val+1
  2612  01D1  01B0               	clrf	LCD_num@val+2
  2613  01D2  01B1               	clrf	LCD_num@val+3
  2614  01D3  120A  118A  22CA  120A  118A  	fcall	_LCD_num
  2615  01D8                     l1742:
  2616                           
  2617                           ;main.c: 125:             LCD_Char(' ');
  2618  01D8  3020               	movlw	32
  2619  01D9  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  2620  01DE                     l1744:
  2621                           
  2622                           ;main.c: 126:             for (unsigned char j=0;j<3;j++)
  2623  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2624  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2625  01E0  01C2               	clrf	print_analogvoltages@j
  2626  01E1                     l1750:
  2627                           
  2628                           ;main.c: 127:             {;main.c: 128:                 tx((avv[j]+0x30));
  2629  01E1  0842               	movf	print_analogvoltages@j,w
  2630  01E2  3E56               	addlw	(low (_avv| 0))& (0+255)
  2631  01E3  0084               	movwf	4
  2632  01E4  1383               	bcf	3,7	;select IRP bank0
  2633  01E5  0800               	movf	0,w
  2634  01E6  3E30               	addlw	48
  2635  01E7  120A  158A  2650  120A  118A  	fcall	_tx
  2636  01EC                     l1752:
  2637                           
  2638                           ;main.c: 129:                 if (j == 0)
  2639  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2640  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2641  01EE  0842               	movf	print_analogvoltages@j,w
  2642  01EF  1D03               	btfss	3,2
  2643  01F0  29F2               	goto	u1551
  2644  01F1  29F3               	goto	u1550
  2645  01F2                     u1551:
  2646  01F2  29FA               	goto	l1756
  2647  01F3                     u1550:
  2648  01F3                     l1754:
  2649                           
  2650                           ;main.c: 130:                 {;main.c: 131:                     tx('.');
  2651  01F3  302E               	movlw	46
  2652  01F4  120A  158A  2650  120A  118A  	fcall	_tx
  2653                           
  2654                           ;main.c: 132:                 }
  2655  01F9  2A06               	goto	l1760
  2656  01FA                     l1756:
  2657  01FA  3002               	movlw	2
  2658  01FB  0642               	xorwf	print_analogvoltages@j,w
  2659  01FC  1D03               	btfss	3,2
  2660  01FD  29FF               	goto	u1561
  2661  01FE  2A00               	goto	u1560
  2662  01FF                     u1561:
  2663  01FF  2A06               	goto	l1760
  2664  0200                     u1560:
  2665  0200                     l1758:
  2666                           
  2667                           ;main.c: 134:                 {;main.c: 135:                     tx(',');
  2668  0200  302C               	movlw	44
  2669  0201  120A  158A  2650  120A  118A  	fcall	_tx
  2670  0206                     l1760:
  2671                           
  2672                           ;main.c: 137:             }
  2673  0206  3001               	movlw	1
  2674  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0209  00BE               	movwf	??_print_analogvoltages
  2677  020A  083E               	movf	??_print_analogvoltages,w
  2678  020B  07C2               	addwf	print_analogvoltages@j,f
  2679  020C                     l1762:
  2680  020C  3003               	movlw	3
  2681  020D  0242               	subwf	print_analogvoltages@j,w
  2682  020E  1C03               	skipc
  2683  020F  2A11               	goto	u1571
  2684  0210  2A12               	goto	u1570
  2685  0211                     u1571:
  2686  0211  29E1               	goto	l1750
  2687  0212                     u1570:
  2688  0212                     l1764:
  2689                           
  2690                           ;main.c: 139:             _delay((unsigned long)((100)*(20000000/4000.0)));
  2691  0212  3003               	movlw	3
  2692  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2693  0214  1303               	bcf	3,6	;RP1=0, select bank0
  2694  0215  00C0               	movwf	??_print_analogvoltages+2
  2695  0216  308A               	movlw	138
  2696  0217  00BF               	movwf	??_print_analogvoltages+1
  2697  0218  3055               	movlw	85
  2698  0219  00BE               	movwf	??_print_analogvoltages
  2699  021A                     u1657:
  2700  021A  0BBE               	decfsz	??_print_analogvoltages,f
  2701  021B  2A1A               	goto	u1657
  2702  021C  0BBF               	decfsz	??_print_analogvoltages+1,f
  2703  021D  2A1A               	goto	u1657
  2704  021E  0BC0               	decfsz	??_print_analogvoltages+2,f
  2705  021F  2A1A               	goto	u1657
  2706  0220                     l1766:
  2707                           
  2708                           ;main.c: 140:         }
  2709  0220  3001               	movlw	1
  2710  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0223  00BE               	movwf	??_print_analogvoltages
  2713  0224  083E               	movf	??_print_analogvoltages,w
  2714  0225  07C1               	addwf	print_analogvoltages@i,f
  2715  0226                     l1768:
  2716  0226  3004               	movlw	4
  2717  0227  0241               	subwf	print_analogvoltages@i,w
  2718  0228  1C03               	skipc
  2719  0229  2A2B               	goto	u1581
  2720  022A  2A2C               	goto	u1580
  2721  022B                     u1581:
  2722  022B  29C2               	goto	l1740
  2723  022C                     u1580:
  2724  022C                     l184:
  2725  022C  0008               	return
  2726  022D                     __end_of_print_analogvoltages:
  2727                           
  2728                           	psect	text9
  2729  0E50                     __ptext9:	
  2730 ;; *************** function _tx *****************
  2731 ;; Defined at:
  2732 ;;		line 14 in file "./uart.h"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  a               1    wreg     unsigned char 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  a               1    0[COMMON] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      unsigned char 
  2739 ;; Registers used:
  2740 ;;		wreg
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       0       0       0       0
  2747 ;;      Locals:         1       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0
  2749 ;;      Totals:         1       0       0       0       0
  2750 ;;Total ram usage:        1 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_tx_sn
  2756 ;;		_main
  2757 ;;		_print_serialnumber
  2758 ;;		_print_analogvoltages
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function _tx
  2764  0E50                     _tx:
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in _tx: [wreg]
  2768                           ;tx@a stored from wreg
  2769  0E50  00F0               	movwf	tx@a
  2770  0E51                     l1324:
  2771                           
  2772                           ;./uart.h: 14: unsigned char tx(unsigned char a);./uart.h: 15: {;./uart.h: 16:  TXREG=a;
  2773  0E51  0870               	movf	tx@a,w
  2774  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0E54  0099               	movwf	25	;volatile
  2777  0E55                     l87:	
  2778                           ;./uart.h: 17:  while(!TXIF);
  2779                           
  2780  0E55  1E0C               	btfss	12,4	;volatile
  2781  0E56  2E58               	goto	u831
  2782  0E57  2E59               	goto	u830
  2783  0E58                     u831:
  2784  0E58  2E55               	goto	l87
  2785  0E59                     u830:
  2786  0E59                     l89:
  2787                           
  2788                           ;./uart.h: 18:  TXIF = 0;
  2789  0E59  120C               	bcf	12,4	;volatile
  2790  0E5A                     l90:
  2791  0E5A  0008               	return
  2792  0E5B                     __end_of_tx:
  2793                           
  2794                           	psect	text10
  2795  02CA                     __ptext10:	
  2796 ;; *************** function _LCD_num *****************
  2797 ;; Defined at:
  2798 ;;		line 51 in file "./lcd4bit.h"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  val             4   14[BANK0 ] long 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  remainder       2   28[BANK0 ] unsigned int 
  2803 ;;  result1         2   26[BANK0 ] unsigned int 
  2804 ;;  result          2   24[BANK0 ] unsigned int 
  2805 ;;  digit3          2   22[BANK0 ] unsigned int 
  2806 ;;  digit2          2   20[BANK0 ] unsigned int 
  2807 ;;  digit1          2   18[BANK0 ] unsigned int 
  2808 ;;  calb_val        2    0        int 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, pclath, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         0       4       0       0       0
  2819 ;;      Locals:         0      12       0       0       0
  2820 ;;      Temps:          0       0       0       0       0
  2821 ;;      Totals:         0      16       0       0       0
  2822 ;;Total ram usage:       16 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 1
  2825 ;; This function calls:
  2826 ;;		_LCD_Char
  2827 ;;		___aldiv
  2828 ;;		___lmul
  2829 ;;		___lwdiv
  2830 ;;		___lwmod
  2831 ;;		_intdigits_chardigits
  2832 ;; This function is called by:
  2833 ;;		_print_analogvoltages
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _LCD_num
  2839  02CA                     _LCD_num:
  2840  02CA                     l1528:	
  2841                           ;incstack = 0
  2842                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  2843                           
  2844  02CA                     l1530:
  2845                           
  2846                           ;./lcd4bit.h: 54:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 55:     result1;;./lcd4bit.h: 56:     result = ((val*100)/calb_val);
  2847  02CA  3000               	movlw	0
  2848  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2849  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2850  02CD  00A3               	movwf	___aldiv@divisor+3
  2851  02CE  3000               	movlw	0
  2852  02CF  00A2               	movwf	___aldiv@divisor+2
  2853  02D0  3000               	movlw	0
  2854  02D1  00A1               	movwf	___aldiv@divisor+1
  2855  02D2  30C8               	movlw	200
  2856  02D3  00A0               	movwf	___aldiv@divisor
  2857  02D4  0831               	movf	LCD_num@val+3,w
  2858  02D5  00F3               	movwf	___lmul@multiplier+3
  2859  02D6  0830               	movf	LCD_num@val+2,w
  2860  02D7  00F2               	movwf	___lmul@multiplier+2
  2861  02D8  082F               	movf	LCD_num@val+1,w
  2862  02D9  00F1               	movwf	___lmul@multiplier+1
  2863  02DA  082E               	movf	LCD_num@val,w
  2864  02DB  00F0               	movwf	___lmul@multiplier
  2865  02DC  3000               	movlw	0
  2866  02DD  00F7               	movwf	___lmul@multiplicand+3
  2867  02DE  3000               	movlw	0
  2868  02DF  00F6               	movwf	___lmul@multiplicand+2
  2869  02E0  3000               	movlw	0
  2870  02E1  00F5               	movwf	___lmul@multiplicand+1
  2871  02E2  3064               	movlw	100
  2872  02E3  00F4               	movwf	___lmul@multiplicand
  2873  02E4  120A  118A  2055  120A  118A  	fcall	___lmul
  2874  02E9  0873               	movf	?___lmul+3,w
  2875  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2876  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2877  02EC  00A7               	movwf	___aldiv@dividend+3
  2878  02ED  0872               	movf	?___lmul+2,w
  2879  02EE  00A6               	movwf	___aldiv@dividend+2
  2880  02EF  0871               	movf	?___lmul+1,w
  2881  02F0  00A5               	movwf	___aldiv@dividend+1
  2882  02F1  0870               	movf	?___lmul,w
  2883  02F2  00A4               	movwf	___aldiv@dividend
  2884  02F3  120A  118A  222D  120A  118A  	fcall	___aldiv
  2885  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2886  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2887  02FA  0821               	movf	?___aldiv+1,w
  2888  02FB  00B9               	movwf	LCD_num@result+1
  2889  02FC  0820               	movf	?___aldiv,w
  2890  02FD  00B8               	movwf	LCD_num@result
  2891  02FE                     l1532:
  2892                           
  2893                           ;./lcd4bit.h: 57:     remainder = result% 10;
  2894  02FE  300A               	movlw	10
  2895  02FF  00F0               	movwf	___lwmod@divisor
  2896  0300  3000               	movlw	0
  2897  0301  00F1               	movwf	___lwmod@divisor+1
  2898  0302  0839               	movf	LCD_num@result+1,w
  2899  0303  00F3               	movwf	___lwmod@dividend+1
  2900  0304  0838               	movf	LCD_num@result,w
  2901  0305  00F2               	movwf	___lwmod@dividend
  2902  0306  120A  158A  2704  120A  118A  	fcall	___lwmod
  2903  030B  0871               	movf	?___lwmod+1,w
  2904  030C  1283               	bcf	3,5	;RP0=0, select bank0
  2905  030D  1303               	bcf	3,6	;RP1=0, select bank0
  2906  030E  00BD               	movwf	LCD_num@remainder+1
  2907  030F  0870               	movf	?___lwmod,w
  2908  0310  00BC               	movwf	LCD_num@remainder
  2909  0311                     l1534:
  2910                           
  2911                           ;./lcd4bit.h: 58:     result1 = result /10;
  2912  0311  300A               	movlw	10
  2913  0312  00F0               	movwf	___lwdiv@divisor
  2914  0313  3000               	movlw	0
  2915  0314  00F1               	movwf	___lwdiv@divisor+1
  2916  0315  0839               	movf	LCD_num@result+1,w
  2917  0316  00F3               	movwf	___lwdiv@dividend+1
  2918  0317  0838               	movf	LCD_num@result,w
  2919  0318  00F2               	movwf	___lwdiv@dividend
  2920  0319  120A  118A  2011  120A  118A  	fcall	___lwdiv
  2921  031E  0871               	movf	?___lwdiv+1,w
  2922  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0321  00BB               	movwf	LCD_num@result1+1
  2925  0322  0870               	movf	?___lwdiv,w
  2926  0323  00BA               	movwf	LCD_num@result1
  2927  0324                     l1536:
  2928                           
  2929                           ;./lcd4bit.h: 59:     digit1 = remainder;
  2930  0324  083D               	movf	LCD_num@remainder+1,w
  2931  0325  00B3               	movwf	LCD_num@digit1+1
  2932  0326  083C               	movf	LCD_num@remainder,w
  2933  0327  00B2               	movwf	LCD_num@digit1
  2934                           
  2935                           ;./lcd4bit.h: 60:     remainder = result1%10;
  2936  0328  300A               	movlw	10
  2937  0329  00F0               	movwf	___lwmod@divisor
  2938  032A  3000               	movlw	0
  2939  032B  00F1               	movwf	___lwmod@divisor+1
  2940  032C  083B               	movf	LCD_num@result1+1,w
  2941  032D  00F3               	movwf	___lwmod@dividend+1
  2942  032E  083A               	movf	LCD_num@result1,w
  2943  032F  00F2               	movwf	___lwmod@dividend
  2944  0330  120A  158A  2704  120A  118A  	fcall	___lwmod
  2945  0335  0871               	movf	?___lwmod+1,w
  2946  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0338  00BD               	movwf	LCD_num@remainder+1
  2949  0339  0870               	movf	?___lwmod,w
  2950  033A  00BC               	movwf	LCD_num@remainder
  2951  033B                     l1538:
  2952                           
  2953                           ;./lcd4bit.h: 61:     digit2 = remainder;
  2954  033B  083D               	movf	LCD_num@remainder+1,w
  2955  033C  00B5               	movwf	LCD_num@digit2+1
  2956  033D  083C               	movf	LCD_num@remainder,w
  2957  033E  00B4               	movwf	LCD_num@digit2
  2958  033F                     l1540:
  2959                           
  2960                           ;./lcd4bit.h: 62:     remainder = (result1/10);
  2961  033F  300A               	movlw	10
  2962  0340  00F0               	movwf	___lwdiv@divisor
  2963  0341  3000               	movlw	0
  2964  0342  00F1               	movwf	___lwdiv@divisor+1
  2965  0343  083B               	movf	LCD_num@result1+1,w
  2966  0344  00F3               	movwf	___lwdiv@dividend+1
  2967  0345  083A               	movf	LCD_num@result1,w
  2968  0346  00F2               	movwf	___lwdiv@dividend
  2969  0347  120A  118A  2011  120A  118A  	fcall	___lwdiv
  2970  034C  0871               	movf	?___lwdiv+1,w
  2971  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2972  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2973  034F  00BD               	movwf	LCD_num@remainder+1
  2974  0350  0870               	movf	?___lwdiv,w
  2975  0351  00BC               	movwf	LCD_num@remainder
  2976                           
  2977                           ;./lcd4bit.h: 63:     digit3=remainder;
  2978  0352  083D               	movf	LCD_num@remainder+1,w
  2979  0353  00B7               	movwf	LCD_num@digit3+1
  2980  0354  083C               	movf	LCD_num@remainder,w
  2981  0355  00B6               	movwf	LCD_num@digit3
  2982  0356                     l1542:
  2983                           
  2984                           ;./lcd4bit.h: 64:     LCD_Char(digit3+0x30);
  2985  0356  0836               	movf	LCD_num@digit3,w
  2986  0357  3E30               	addlw	48
  2987  0358  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  2988  035D                     l1544:
  2989                           
  2990                           ;./lcd4bit.h: 65:     LCD_Char('.');
  2991  035D  302E               	movlw	46
  2992  035E  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  2993  0363                     l1546:
  2994                           
  2995                           ;./lcd4bit.h: 66:     LCD_Char(digit2+0x30);
  2996  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2998  0365  0834               	movf	LCD_num@digit2,w
  2999  0366  3E30               	addlw	48
  3000  0367  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  3001  036C                     l1548:
  3002                           
  3003                           ;./lcd4bit.h: 67:     LCD_Char(digit1+0x30);
  3004  036C  1283               	bcf	3,5	;RP0=0, select bank0
  3005  036D  1303               	bcf	3,6	;RP1=0, select bank0
  3006  036E  0832               	movf	LCD_num@digit1,w
  3007  036F  3E30               	addlw	48
  3008  0370  120A  158A  277E  120A  118A  	fcall	_LCD_Char
  3009  0375                     l1550:
  3010                           
  3011                           ;./lcd4bit.h: 69:     intdigits_chardigits(digit3,digit2,digit1);
  3012  0375  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0376  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0377  0837               	movf	LCD_num@digit3+1,w
  3015  0378  00F1               	movwf	intdigits_chardigits@a+1
  3016  0379  0836               	movf	LCD_num@digit3,w
  3017  037A  00F0               	movwf	intdigits_chardigits@a
  3018  037B  0835               	movf	LCD_num@digit2+1,w
  3019  037C  00F3               	movwf	intdigits_chardigits@b+1
  3020  037D  0834               	movf	LCD_num@digit2,w
  3021  037E  00F2               	movwf	intdigits_chardigits@b
  3022  037F  0833               	movf	LCD_num@digit1+1,w
  3023  0380  00F5               	movwf	intdigits_chardigits@c+1
  3024  0381  0832               	movf	LCD_num@digit1,w
  3025  0382  00F4               	movwf	intdigits_chardigits@c
  3026  0383  120A  158A  265B  120A  118A  	fcall	_intdigits_chardigits
  3027  0388                     l62:
  3028  0388  0008               	return
  3029  0389                     __end_of_LCD_num:
  3030                           
  3031                           	psect	text11
  3032  0E5B                     __ptext11:	
  3033 ;; *************** function _intdigits_chardigits *****************
  3034 ;; Defined at:
  3035 ;;		line 79 in file "./lcd4bit.h"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  a               2    0[COMMON] unsigned int 
  3038 ;;  b               2    2[COMMON] unsigned int 
  3039 ;;  c               2    4[COMMON] unsigned int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      unsigned char 
  3044 ;; Registers used:
  3045 ;;		wreg
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3051 ;;      Params:         6       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0
  3053 ;;      Temps:          1       0       0       0       0
  3054 ;;      Totals:         7       0       0       0       0
  3055 ;;Total ram usage:        7 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_LCD_num
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _intdigits_chardigits
  3066  0E5B                     _intdigits_chardigits:
  3067  0E5B                     l1322:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _intdigits_chardigits: [wreg]
  3070                           
  3071                           
  3072                           ;./lcd4bit.h: 79: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     avv[0] = (unsigned char)a;
  3073  0E5B  0870               	movf	intdigits_chardigits@a,w
  3074  0E5C  00F6               	movwf	??_intdigits_chardigits
  3075  0E5D  0876               	movf	??_intdigits_chardigits,w
  3076  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0E60  00D6               	movwf	_avv
  3079                           
  3080                           ;./lcd4bit.h: 82:     avv[1] = (unsigned char)b;
  3081  0E61  0872               	movf	intdigits_chardigits@b,w
  3082  0E62  00F6               	movwf	??_intdigits_chardigits
  3083  0E63  0876               	movf	??_intdigits_chardigits,w
  3084  0E64  00D7               	movwf	_avv+1
  3085                           
  3086                           ;./lcd4bit.h: 83:     avv[2] = (unsigned char)c;
  3087  0E65  0874               	movf	intdigits_chardigits@c,w
  3088  0E66  00F6               	movwf	??_intdigits_chardigits
  3089  0E67  0876               	movf	??_intdigits_chardigits,w
  3090  0E68  00D8               	movwf	_avv+2
  3091  0E69                     l71:
  3092  0E69  0008               	return
  3093  0E6A                     __end_of_intdigits_chardigits:
  3094                           
  3095                           	psect	text12
  3096  0F04                     __ptext12:	
  3097 ;; *************** function ___lwmod *****************
  3098 ;; Defined at:
  3099 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  divisor         2    0[COMMON] unsigned int 
  3102 ;;  dividend        2    2[COMMON] unsigned int 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  counter         1    5[COMMON] unsigned char 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  2    0[COMMON] unsigned int 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3114 ;;      Params:         4       0       0       0       0
  3115 ;;      Locals:         1       0       0       0       0
  3116 ;;      Temps:          1       0       0       0       0
  3117 ;;      Totals:         6       0       0       0       0
  3118 ;;Total ram usage:        6 bytes
  3119 ;; Hardware stack levels used: 1
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_LCD_num
  3124 ;;		_show_multidigits
  3125 ;;		_tx_sn
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function ___lwmod
  3131  0F04                     ___lwmod:
  3132  0F04                     l1488:	
  3133                           ;incstack = 0
  3134                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3135                           
  3136  0F04  0870               	movf	___lwmod@divisor,w
  3137  0F05  0471               	iorwf	___lwmod@divisor+1,w
  3138  0F06  1903               	btfsc	3,2
  3139  0F07  2F09               	goto	u1251
  3140  0F08  2F0A               	goto	u1250
  3141  0F09                     u1251:
  3142  0F09  2F39               	goto	l1506
  3143  0F0A                     u1250:
  3144  0F0A                     l1490:
  3145  0F0A  01F5               	clrf	___lwmod@counter
  3146  0F0B  0AF5               	incf	___lwmod@counter,f
  3147  0F0C  2F18               	goto	l1496
  3148  0F0D                     l1492:
  3149  0F0D  3001               	movlw	1
  3150  0F0E                     u1265:
  3151  0F0E  1003               	clrc
  3152  0F0F  0DF0               	rlf	___lwmod@divisor,f
  3153  0F10  0DF1               	rlf	___lwmod@divisor+1,f
  3154  0F11  3EFF               	addlw	-1
  3155  0F12  1D03               	skipz
  3156  0F13  2F0E               	goto	u1265
  3157  0F14                     l1494:
  3158  0F14  3001               	movlw	1
  3159  0F15  00F4               	movwf	??___lwmod
  3160  0F16  0874               	movf	??___lwmod,w
  3161  0F17  07F5               	addwf	___lwmod@counter,f
  3162  0F18                     l1496:
  3163  0F18  1FF1               	btfss	___lwmod@divisor+1,7
  3164  0F19  2F1B               	goto	u1271
  3165  0F1A  2F1C               	goto	u1270
  3166  0F1B                     u1271:
  3167  0F1B  2F0D               	goto	l1492
  3168  0F1C                     u1270:
  3169  0F1C                     l1498:
  3170  0F1C  0871               	movf	___lwmod@divisor+1,w
  3171  0F1D  0273               	subwf	___lwmod@dividend+1,w
  3172  0F1E  1D03               	skipz
  3173  0F1F  2F22               	goto	u1285
  3174  0F20  0870               	movf	___lwmod@divisor,w
  3175  0F21  0272               	subwf	___lwmod@dividend,w
  3176  0F22                     u1285:
  3177  0F22  1C03               	skipc
  3178  0F23  2F25               	goto	u1281
  3179  0F24  2F26               	goto	u1280
  3180  0F25                     u1281:
  3181  0F25  2F2C               	goto	l1502
  3182  0F26                     u1280:
  3183  0F26                     l1500:
  3184  0F26  0870               	movf	___lwmod@divisor,w
  3185  0F27  02F2               	subwf	___lwmod@dividend,f
  3186  0F28  0871               	movf	___lwmod@divisor+1,w
  3187  0F29  1C03               	skipc
  3188  0F2A  03F3               	decf	___lwmod@dividend+1,f
  3189  0F2B  02F3               	subwf	___lwmod@dividend+1,f
  3190  0F2C                     l1502:
  3191  0F2C  3001               	movlw	1
  3192  0F2D                     u1295:
  3193  0F2D  1003               	clrc
  3194  0F2E  0CF1               	rrf	___lwmod@divisor+1,f
  3195  0F2F  0CF0               	rrf	___lwmod@divisor,f
  3196  0F30  3EFF               	addlw	-1
  3197  0F31  1D03               	skipz
  3198  0F32  2F2D               	goto	u1295
  3199  0F33                     l1504:
  3200  0F33  3001               	movlw	1
  3201  0F34  02F5               	subwf	___lwmod@counter,f
  3202  0F35  1D03               	btfss	3,2
  3203  0F36  2F38               	goto	u1301
  3204  0F37  2F39               	goto	u1300
  3205  0F38                     u1301:
  3206  0F38  2F1C               	goto	l1498
  3207  0F39                     u1300:
  3208  0F39                     l1506:
  3209  0F39  0873               	movf	___lwmod@dividend+1,w
  3210  0F3A  00F1               	movwf	?___lwmod+1
  3211  0F3B  0872               	movf	___lwmod@dividend,w
  3212  0F3C  00F0               	movwf	?___lwmod
  3213  0F3D                     l552:
  3214  0F3D  0008               	return
  3215  0F3E                     __end_of___lwmod:
  3216                           
  3217                           	psect	text13
  3218  0011                     __ptext13:	
  3219 ;; *************** function ___lwdiv *****************
  3220 ;; Defined at:
  3221 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  divisor         2    0[COMMON] unsigned int 
  3224 ;;  dividend        2    2[COMMON] unsigned int 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  quotient        2    5[COMMON] unsigned int 
  3227 ;;  counter         1    7[COMMON] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2    0[COMMON] unsigned int 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3237 ;;      Params:         4       0       0       0       0
  3238 ;;      Locals:         3       0       0       0       0
  3239 ;;      Temps:          1       0       0       0       0
  3240 ;;      Totals:         8       0       0       0       0
  3241 ;;Total ram usage:        8 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_LCD_num
  3247 ;;		_show_multidigits
  3248 ;;		_tx_sn
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function ___lwdiv
  3254  0011                     ___lwdiv:
  3255  0011                     l1462:	
  3256                           ;incstack = 0
  3257                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3258                           
  3259  0011  01F5               	clrf	___lwdiv@quotient
  3260  0012  01F6               	clrf	___lwdiv@quotient+1
  3261  0013                     l1464:
  3262  0013  0870               	movf	___lwdiv@divisor,w
  3263  0014  0471               	iorwf	___lwdiv@divisor+1,w
  3264  0015  1903               	btfsc	3,2
  3265  0016  2818               	goto	u1181
  3266  0017  2819               	goto	u1180
  3267  0018                     u1181:
  3268  0018  2850               	goto	l1484
  3269  0019                     u1180:
  3270  0019                     l1466:
  3271  0019  01F7               	clrf	___lwdiv@counter
  3272  001A  0AF7               	incf	___lwdiv@counter,f
  3273  001B  2827               	goto	l1472
  3274  001C                     l1468:
  3275  001C  3001               	movlw	1
  3276  001D                     u1195:
  3277  001D  1003               	clrc
  3278  001E  0DF0               	rlf	___lwdiv@divisor,f
  3279  001F  0DF1               	rlf	___lwdiv@divisor+1,f
  3280  0020  3EFF               	addlw	-1
  3281  0021  1D03               	skipz
  3282  0022  281D               	goto	u1195
  3283  0023                     l1470:
  3284  0023  3001               	movlw	1
  3285  0024  00F4               	movwf	??___lwdiv
  3286  0025  0874               	movf	??___lwdiv,w
  3287  0026  07F7               	addwf	___lwdiv@counter,f
  3288  0027                     l1472:
  3289  0027  1FF1               	btfss	___lwdiv@divisor+1,7
  3290  0028  282A               	goto	u1201
  3291  0029  282B               	goto	u1200
  3292  002A                     u1201:
  3293  002A  281C               	goto	l1468
  3294  002B                     u1200:
  3295  002B                     l1474:
  3296  002B  3001               	movlw	1
  3297  002C                     u1215:
  3298  002C  1003               	clrc
  3299  002D  0DF5               	rlf	___lwdiv@quotient,f
  3300  002E  0DF6               	rlf	___lwdiv@quotient+1,f
  3301  002F  3EFF               	addlw	-1
  3302  0030  1D03               	skipz
  3303  0031  282C               	goto	u1215
  3304  0032  0871               	movf	___lwdiv@divisor+1,w
  3305  0033  0273               	subwf	___lwdiv@dividend+1,w
  3306  0034  1D03               	skipz
  3307  0035  2838               	goto	u1225
  3308  0036  0870               	movf	___lwdiv@divisor,w
  3309  0037  0272               	subwf	___lwdiv@dividend,w
  3310  0038                     u1225:
  3311  0038  1C03               	skipc
  3312  0039  283B               	goto	u1221
  3313  003A  283C               	goto	u1220
  3314  003B                     u1221:
  3315  003B  2843               	goto	l1480
  3316  003C                     u1220:
  3317  003C                     l1476:
  3318  003C  0870               	movf	___lwdiv@divisor,w
  3319  003D  02F2               	subwf	___lwdiv@dividend,f
  3320  003E  0871               	movf	___lwdiv@divisor+1,w
  3321  003F  1C03               	skipc
  3322  0040  03F3               	decf	___lwdiv@dividend+1,f
  3323  0041  02F3               	subwf	___lwdiv@dividend+1,f
  3324  0042                     l1478:
  3325  0042  1475               	bsf	___lwdiv@quotient,0
  3326  0043                     l1480:
  3327  0043  3001               	movlw	1
  3328  0044                     u1235:
  3329  0044  1003               	clrc
  3330  0045  0CF1               	rrf	___lwdiv@divisor+1,f
  3331  0046  0CF0               	rrf	___lwdiv@divisor,f
  3332  0047  3EFF               	addlw	-1
  3333  0048  1D03               	skipz
  3334  0049  2844               	goto	u1235
  3335  004A                     l1482:
  3336  004A  3001               	movlw	1
  3337  004B  02F7               	subwf	___lwdiv@counter,f
  3338  004C  1D03               	btfss	3,2
  3339  004D  284F               	goto	u1241
  3340  004E  2850               	goto	u1240
  3341  004F                     u1241:
  3342  004F  282B               	goto	l1474
  3343  0050                     u1240:
  3344  0050                     l1484:
  3345  0050  0876               	movf	___lwdiv@quotient+1,w
  3346  0051  00F1               	movwf	?___lwdiv+1
  3347  0052  0875               	movf	___lwdiv@quotient,w
  3348  0053  00F0               	movwf	?___lwdiv
  3349  0054                     l542:
  3350  0054  0008               	return
  3351  0055                     __end_of___lwdiv:
  3352                           
  3353                           	psect	text14
  3354  0055                     __ptext14:	
  3355 ;; *************** function ___lmul *****************
  3356 ;; Defined at:
  3357 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  multiplier      4    0[COMMON] unsigned long 
  3360 ;;  multiplicand    4    4[COMMON] unsigned long 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  product         4    9[COMMON] unsigned long 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  4    0[COMMON] unsigned long 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3372 ;;      Params:         8       0       0       0       0
  3373 ;;      Locals:         4       0       0       0       0
  3374 ;;      Temps:          1       0       0       0       0
  3375 ;;      Totals:        13       0       0       0       0
  3376 ;;Total ram usage:       13 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_LCD_num
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function ___lmul
  3387  0055                     ___lmul:
  3388  0055                     l1326:	
  3389                           ;incstack = 0
  3390                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3391                           
  3392  0055  3000               	movlw	0
  3393  0056  00FC               	movwf	___lmul@product+3
  3394  0057  3000               	movlw	0
  3395  0058  00FB               	movwf	___lmul@product+2
  3396  0059  3000               	movlw	0
  3397  005A  00FA               	movwf	___lmul@product+1
  3398  005B  3000               	movlw	0
  3399  005C  00F9               	movwf	___lmul@product
  3400  005D                     l1328:
  3401  005D  1C70               	btfss	___lmul@multiplier,0
  3402  005E  2860               	goto	u841
  3403  005F  2861               	goto	u840
  3404  0060                     u841:
  3405  0060  2878               	goto	l1332
  3406  0061                     u840:
  3407  0061                     l1330:
  3408  0061  0874               	movf	___lmul@multiplicand,w
  3409  0062  07F9               	addwf	___lmul@product,f
  3410  0063  0875               	movf	___lmul@multiplicand+1,w
  3411  0064  1103               	clrz
  3412  0065  1803               	skipnc
  3413  0066  3E01               	addlw	1
  3414  0067  1903               	skipnz
  3415  0068  286A               	goto	u851
  3416  0069  07FA               	addwf	___lmul@product+1,f
  3417  006A                     u851:
  3418  006A  0876               	movf	___lmul@multiplicand+2,w
  3419  006B  1103               	clrz
  3420  006C  1803               	skipnc
  3421  006D  3E01               	addlw	1
  3422  006E  1903               	skipnz
  3423  006F  2871               	goto	u852
  3424  0070  07FB               	addwf	___lmul@product+2,f
  3425  0071                     u852:
  3426  0071  0877               	movf	___lmul@multiplicand+3,w
  3427  0072  1103               	clrz
  3428  0073  1803               	skipnc
  3429  0074  3E01               	addlw	1
  3430  0075  1903               	skipnz
  3431  0076  2878               	goto	u853
  3432  0077  07FC               	addwf	___lmul@product+3,f
  3433  0078                     u853:
  3434  0078                     l1332:
  3435  0078  3001               	movlw	1
  3436  0079  00F8               	movwf	??___lmul
  3437  007A                     u865:
  3438  007A  1003               	clrc
  3439  007B  0DF4               	rlf	___lmul@multiplicand,f
  3440  007C  0DF5               	rlf	___lmul@multiplicand+1,f
  3441  007D  0DF6               	rlf	___lmul@multiplicand+2,f
  3442  007E  0DF7               	rlf	___lmul@multiplicand+3,f
  3443  007F  0BF8               	decfsz	??___lmul,f
  3444  0080  287A               	goto	u865
  3445  0081                     l1334:
  3446  0081  3001               	movlw	1
  3447  0082                     u875:
  3448  0082  1003               	clrc
  3449  0083  0CF3               	rrf	___lmul@multiplier+3,f
  3450  0084  0CF2               	rrf	___lmul@multiplier+2,f
  3451  0085  0CF1               	rrf	___lmul@multiplier+1,f
  3452  0086  0CF0               	rrf	___lmul@multiplier,f
  3453  0087  3EFF               	addlw	-1
  3454  0088  1D03               	skipz
  3455  0089  2882               	goto	u875
  3456  008A  0873               	movf	___lmul@multiplier+3,w
  3457  008B  0472               	iorwf	___lmul@multiplier+2,w
  3458  008C  0471               	iorwf	___lmul@multiplier+1,w
  3459  008D  0470               	iorwf	___lmul@multiplier,w
  3460  008E  1D03               	skipz
  3461  008F  2891               	goto	u881
  3462  0090  2892               	goto	u880
  3463  0091                     u881:
  3464  0091  285D               	goto	l1328
  3465  0092                     u880:
  3466  0092                     l1336:
  3467  0092  087C               	movf	___lmul@product+3,w
  3468  0093  00F3               	movwf	?___lmul+3
  3469  0094  087B               	movf	___lmul@product+2,w
  3470  0095  00F2               	movwf	?___lmul+2
  3471  0096  087A               	movf	___lmul@product+1,w
  3472  0097  00F1               	movwf	?___lmul+1
  3473  0098  0879               	movf	___lmul@product,w
  3474  0099  00F0               	movwf	?___lmul
  3475  009A                     l284:
  3476  009A  0008               	return
  3477  009B                     __end_of___lmul:
  3478                           
  3479                           	psect	text15
  3480  022D                     __ptext15:	
  3481 ;; *************** function ___aldiv *****************
  3482 ;; Defined at:
  3483 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  divisor         4    0[BANK0 ] long 
  3486 ;;  dividend        4    4[BANK0 ] long 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  quotient        4   10[BANK0 ] long 
  3489 ;;  sign            1    9[BANK0 ] unsigned char 
  3490 ;;  counter         1    8[BANK0 ] unsigned char 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  4    0[BANK0 ] long 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2, status,0
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3500 ;;      Params:         0       8       0       0       0
  3501 ;;      Locals:         0       6       0       0       0
  3502 ;;      Temps:          1       0       0       0       0
  3503 ;;      Totals:         1      14       0       0       0
  3504 ;;Total ram usage:       15 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_LCD_num
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           
  3514                           ;psect for function ___aldiv
  3515  022D                     ___aldiv:
  3516  022D                     l1340:	
  3517                           ;incstack = 0
  3518                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3519                           
  3520  022D  1283               	bcf	3,5	;RP0=0, select bank0
  3521  022E  1303               	bcf	3,6	;RP1=0, select bank0
  3522  022F  01A9               	clrf	___aldiv@sign
  3523  0230                     l1342:
  3524  0230  1FA3               	btfss	___aldiv@divisor+3,7
  3525  0231  2A33               	goto	u891
  3526  0232  2A34               	goto	u890
  3527  0233                     u891:
  3528  0233  2A41               	goto	l335
  3529  0234                     u890:
  3530  0234                     l1344:
  3531  0234  09A0               	comf	___aldiv@divisor,f
  3532  0235  09A1               	comf	___aldiv@divisor+1,f
  3533  0236  09A2               	comf	___aldiv@divisor+2,f
  3534  0237  09A3               	comf	___aldiv@divisor+3,f
  3535  0238  0AA0               	incf	___aldiv@divisor,f
  3536  0239  1903               	skipnz
  3537  023A  0AA1               	incf	___aldiv@divisor+1,f
  3538  023B  1903               	skipnz
  3539  023C  0AA2               	incf	___aldiv@divisor+2,f
  3540  023D  1903               	skipnz
  3541  023E  0AA3               	incf	___aldiv@divisor+3,f
  3542  023F  01A9               	clrf	___aldiv@sign
  3543  0240  0AA9               	incf	___aldiv@sign,f
  3544  0241                     l335:
  3545  0241  1FA7               	btfss	___aldiv@dividend+3,7
  3546  0242  2A44               	goto	u901
  3547  0243  2A45               	goto	u900
  3548  0244                     u901:
  3549  0244  2A54               	goto	l1350
  3550  0245                     u900:
  3551  0245                     l1346:
  3552  0245  09A4               	comf	___aldiv@dividend,f
  3553  0246  09A5               	comf	___aldiv@dividend+1,f
  3554  0247  09A6               	comf	___aldiv@dividend+2,f
  3555  0248  09A7               	comf	___aldiv@dividend+3,f
  3556  0249  0AA4               	incf	___aldiv@dividend,f
  3557  024A  1903               	skipnz
  3558  024B  0AA5               	incf	___aldiv@dividend+1,f
  3559  024C  1903               	skipnz
  3560  024D  0AA6               	incf	___aldiv@dividend+2,f
  3561  024E  1903               	skipnz
  3562  024F  0AA7               	incf	___aldiv@dividend+3,f
  3563  0250                     l1348:
  3564  0250  3001               	movlw	1
  3565  0251  00FD               	movwf	??___aldiv
  3566  0252  087D               	movf	??___aldiv,w
  3567  0253  06A9               	xorwf	___aldiv@sign,f
  3568  0254                     l1350:
  3569  0254  3000               	movlw	0
  3570  0255  00AD               	movwf	___aldiv@quotient+3
  3571  0256  3000               	movlw	0
  3572  0257  00AC               	movwf	___aldiv@quotient+2
  3573  0258  3000               	movlw	0
  3574  0259  00AB               	movwf	___aldiv@quotient+1
  3575  025A  3000               	movlw	0
  3576  025B  00AA               	movwf	___aldiv@quotient
  3577  025C                     l1352:
  3578  025C  0823               	movf	___aldiv@divisor+3,w
  3579  025D  0422               	iorwf	___aldiv@divisor+2,w
  3580  025E  0421               	iorwf	___aldiv@divisor+1,w
  3581  025F  0420               	iorwf	___aldiv@divisor,w
  3582  0260  1903               	skipnz
  3583  0261  2A63               	goto	u911
  3584  0262  2A64               	goto	u910
  3585  0263                     u911:
  3586  0263  2AB1               	goto	l1372
  3587  0264                     u910:
  3588  0264                     l1354:
  3589  0264  01A8               	clrf	___aldiv@counter
  3590  0265  0AA8               	incf	___aldiv@counter,f
  3591  0266  2A74               	goto	l1358
  3592  0267                     l1356:
  3593  0267  3001               	movlw	1
  3594  0268  00FD               	movwf	??___aldiv
  3595  0269                     u925:
  3596  0269  1003               	clrc
  3597  026A  0DA0               	rlf	___aldiv@divisor,f
  3598  026B  0DA1               	rlf	___aldiv@divisor+1,f
  3599  026C  0DA2               	rlf	___aldiv@divisor+2,f
  3600  026D  0DA3               	rlf	___aldiv@divisor+3,f
  3601  026E  0BFD               	decfsz	??___aldiv,f
  3602  026F  2A69               	goto	u925
  3603  0270  3001               	movlw	1
  3604  0271  00FD               	movwf	??___aldiv
  3605  0272  087D               	movf	??___aldiv,w
  3606  0273  07A8               	addwf	___aldiv@counter,f
  3607  0274                     l1358:
  3608  0274  1FA3               	btfss	___aldiv@divisor+3,7
  3609  0275  2A77               	goto	u931
  3610  0276  2A78               	goto	u930
  3611  0277                     u931:
  3612  0277  2A67               	goto	l1356
  3613  0278                     u930:
  3614  0278                     l1360:
  3615  0278  3001               	movlw	1
  3616  0279  00FD               	movwf	??___aldiv
  3617  027A                     u945:
  3618  027A  1003               	clrc
  3619  027B  0DAA               	rlf	___aldiv@quotient,f
  3620  027C  0DAB               	rlf	___aldiv@quotient+1,f
  3621  027D  0DAC               	rlf	___aldiv@quotient+2,f
  3622  027E  0DAD               	rlf	___aldiv@quotient+3,f
  3623  027F  0BFD               	decfsz	??___aldiv,f
  3624  0280  2A7A               	goto	u945
  3625  0281                     l1362:
  3626  0281  0823               	movf	___aldiv@divisor+3,w
  3627  0282  0227               	subwf	___aldiv@dividend+3,w
  3628  0283  1D03               	skipz
  3629  0284  2A8F               	goto	u955
  3630  0285  0822               	movf	___aldiv@divisor+2,w
  3631  0286  0226               	subwf	___aldiv@dividend+2,w
  3632  0287  1D03               	skipz
  3633  0288  2A8F               	goto	u955
  3634  0289  0821               	movf	___aldiv@divisor+1,w
  3635  028A  0225               	subwf	___aldiv@dividend+1,w
  3636  028B  1D03               	skipz
  3637  028C  2A8F               	goto	u955
  3638  028D  0820               	movf	___aldiv@divisor,w
  3639  028E  0224               	subwf	___aldiv@dividend,w
  3640  028F                     u955:
  3641  028F  1C03               	skipc
  3642  0290  2A92               	goto	u951
  3643  0291  2A93               	goto	u950
  3644  0292                     u951:
  3645  0292  2AA2               	goto	l1368
  3646  0293                     u950:
  3647  0293                     l1364:
  3648  0293  0820               	movf	___aldiv@divisor,w
  3649  0294  02A4               	subwf	___aldiv@dividend,f
  3650  0295  0821               	movf	___aldiv@divisor+1,w
  3651  0296  1C03               	skipc
  3652  0297  0F21               	incfsz	___aldiv@divisor+1,w
  3653  0298  02A5               	subwf	___aldiv@dividend+1,f
  3654  0299  0822               	movf	___aldiv@divisor+2,w
  3655  029A  1C03               	skipc
  3656  029B  0F22               	incfsz	___aldiv@divisor+2,w
  3657  029C  02A6               	subwf	___aldiv@dividend+2,f
  3658  029D  0823               	movf	___aldiv@divisor+3,w
  3659  029E  1C03               	skipc
  3660  029F  0F23               	incfsz	___aldiv@divisor+3,w
  3661  02A0  02A7               	subwf	___aldiv@dividend+3,f
  3662  02A1                     l1366:
  3663  02A1  142A               	bsf	___aldiv@quotient,0
  3664  02A2                     l1368:
  3665  02A2  3001               	movlw	1
  3666  02A3                     u965:
  3667  02A3  1003               	clrc
  3668  02A4  0CA3               	rrf	___aldiv@divisor+3,f
  3669  02A5  0CA2               	rrf	___aldiv@divisor+2,f
  3670  02A6  0CA1               	rrf	___aldiv@divisor+1,f
  3671  02A7  0CA0               	rrf	___aldiv@divisor,f
  3672  02A8  3EFF               	addlw	-1
  3673  02A9  1D03               	skipz
  3674  02AA  2AA3               	goto	u965
  3675  02AB                     l1370:
  3676  02AB  3001               	movlw	1
  3677  02AC  02A8               	subwf	___aldiv@counter,f
  3678  02AD  1D03               	btfss	3,2
  3679  02AE  2AB0               	goto	u971
  3680  02AF  2AB1               	goto	u970
  3681  02B0                     u971:
  3682  02B0  2A78               	goto	l1360
  3683  02B1                     u970:
  3684  02B1                     l1372:
  3685  02B1  0829               	movf	___aldiv@sign,w
  3686  02B2  1903               	btfsc	3,2
  3687  02B3  2AB5               	goto	u981
  3688  02B4  2AB6               	goto	u980
  3689  02B5                     u981:
  3690  02B5  2AC1               	goto	l1376
  3691  02B6                     u980:
  3692  02B6                     l1374:
  3693  02B6  09AA               	comf	___aldiv@quotient,f
  3694  02B7  09AB               	comf	___aldiv@quotient+1,f
  3695  02B8  09AC               	comf	___aldiv@quotient+2,f
  3696  02B9  09AD               	comf	___aldiv@quotient+3,f
  3697  02BA  0AAA               	incf	___aldiv@quotient,f
  3698  02BB  1903               	skipnz
  3699  02BC  0AAB               	incf	___aldiv@quotient+1,f
  3700  02BD  1903               	skipnz
  3701  02BE  0AAC               	incf	___aldiv@quotient+2,f
  3702  02BF  1903               	skipnz
  3703  02C0  0AAD               	incf	___aldiv@quotient+3,f
  3704  02C1                     l1376:
  3705  02C1  082D               	movf	___aldiv@quotient+3,w
  3706  02C2  00A3               	movwf	?___aldiv+3
  3707  02C3  082C               	movf	___aldiv@quotient+2,w
  3708  02C4  00A2               	movwf	?___aldiv+2
  3709  02C5  082B               	movf	___aldiv@quotient+1,w
  3710  02C6  00A1               	movwf	?___aldiv+1
  3711  02C7  082A               	movf	___aldiv@quotient,w
  3712  02C8  00A0               	movwf	?___aldiv
  3713  02C9                     l345:
  3714  02C9  0008               	return
  3715  02CA                     __end_of___aldiv:
  3716                           
  3717                           	psect	text16
  3718  0F7E                     __ptext16:	
  3719 ;; *************** function _LCD_Char *****************
  3720 ;; Defined at:
  3721 ;;		line 27 in file "./lcd4bit.h"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  data            1    wreg     unsigned char 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  data            1    2[COMMON] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3735 ;;      Params:         0       0       0       0       0
  3736 ;;      Locals:         1       0       0       0       0
  3737 ;;      Temps:          2       0       0       0       0
  3738 ;;      Totals:         3       0       0       0       0
  3739 ;;Total ram usage:        3 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_LCD_num
  3745 ;;		_show
  3746 ;;		_show_multidigits
  3747 ;;		_print_analogvoltages
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function _LCD_Char
  3753  0F7E                     _LCD_Char:
  3754                           
  3755                           ;incstack = 0
  3756                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3757                           ;LCD_Char@data stored from wreg
  3758  0F7E  00F2               	movwf	LCD_Char@data
  3759  0F7F                     l1304:
  3760                           
  3761                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  3762  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0F81  1407               	bsf	7,0	;volatile
  3765  0F82                     l1306:
  3766                           
  3767                           ;./lcd4bit.h: 30:     PORTB = data;
  3768  0F82  0872               	movf	LCD_Char@data,w
  3769  0F83  0086               	movwf	6	;volatile
  3770  0F84                     l1308:
  3771                           
  3772                           ;./lcd4bit.h: 31:     RC1 = 1;
  3773  0F84  1487               	bsf	7,1	;volatile
  3774                           
  3775                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3776  0F85  3041               	movlw	65
  3777  0F86  00F1               	movwf	??_LCD_Char+1
  3778  0F87  30EE               	movlw	238
  3779  0F88  00F0               	movwf	??_LCD_Char
  3780  0F89                     u1667:
  3781  0F89  0BF0               	decfsz	??_LCD_Char,f
  3782  0F8A  2F89               	goto	u1667
  3783  0F8B  0BF1               	decfsz	??_LCD_Char+1,f
  3784  0F8C  2F89               	goto	u1667
  3785  0F8D  0000               	nop
  3786  0F8E                     l1310:
  3787                           
  3788                           ;./lcd4bit.h: 33:     RC1 = 0;
  3789  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  3790  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  3791  0F90  1087               	bcf	7,1	;volatile
  3792                           
  3793                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3794  0F91  3041               	movlw	65
  3795  0F92  00F1               	movwf	??_LCD_Char+1
  3796  0F93  30EE               	movlw	238
  3797  0F94  00F0               	movwf	??_LCD_Char
  3798  0F95                     u1677:
  3799  0F95  0BF0               	decfsz	??_LCD_Char,f
  3800  0F96  2F95               	goto	u1677
  3801  0F97  0BF1               	decfsz	??_LCD_Char+1,f
  3802  0F98  2F95               	goto	u1677
  3803  0F99  0000               	nop
  3804  0F9A                     l1312:
  3805                           
  3806                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  3807  0F9A  0872               	movf	LCD_Char@data,w
  3808  0F9B  00F0               	movwf	??_LCD_Char
  3809  0F9C  3003               	movlw	3
  3810  0F9D                     u825:
  3811  0F9D  1003               	clrc
  3812  0F9E  0DF0               	rlf	??_LCD_Char,f
  3813  0F9F  3EFF               	addlw	-1
  3814  0FA0  1D03               	skipz
  3815  0FA1  2F9D               	goto	u825
  3816  0FA2  1003               	clrc
  3817  0FA3  0D70               	rlf	??_LCD_Char,w
  3818  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0FA6  0086               	movwf	6	;volatile
  3821  0FA7                     l1314:
  3822                           
  3823                           ;./lcd4bit.h: 36:     RC1 = 1;
  3824  0FA7  1487               	bsf	7,1	;volatile
  3825  0FA8                     l1316:
  3826                           
  3827                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3828  0FA8  3041               	movlw	65
  3829  0FA9  00F1               	movwf	??_LCD_Char+1
  3830  0FAA  30EE               	movlw	238
  3831  0FAB  00F0               	movwf	??_LCD_Char
  3832  0FAC                     u1687:
  3833  0FAC  0BF0               	decfsz	??_LCD_Char,f
  3834  0FAD  2FAC               	goto	u1687
  3835  0FAE  0BF1               	decfsz	??_LCD_Char+1,f
  3836  0FAF  2FAC               	goto	u1687
  3837  0FB0  0000               	nop
  3838  0FB1                     l1318:
  3839                           
  3840                           ;./lcd4bit.h: 38:     RC1 = 0;
  3841  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  3842  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  3843  0FB3  1087               	bcf	7,1	;volatile
  3844  0FB4                     l1320:
  3845                           
  3846                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3847  0FB4  3041               	movlw	65
  3848  0FB5  00F1               	movwf	??_LCD_Char+1
  3849  0FB6  30EE               	movlw	238
  3850  0FB7  00F0               	movwf	??_LCD_Char
  3851  0FB8                     u1697:
  3852  0FB8  0BF0               	decfsz	??_LCD_Char,f
  3853  0FB9  2FB8               	goto	u1697
  3854  0FBA  0BF1               	decfsz	??_LCD_Char+1,f
  3855  0FBB  2FB8               	goto	u1697
  3856  0FBC  0000               	nop
  3857  0FBD                     l56:
  3858  0FBD  0008               	return
  3859  0FBE                     __end_of_LCD_Char:
  3860                           
  3861                           	psect	text17
  3862  0E7C                     __ptext17:	
  3863 ;; *************** function _StartSignal *****************
  3864 ;; Defined at:
  3865 ;;		line 7 in file "./d2h11.h"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3879 ;;      Params:         0       0       0       0       0
  3880 ;;      Locals:         0       0       0       0       0
  3881 ;;      Temps:          2       0       0       0       0
  3882 ;;      Totals:         2       0       0       0       0
  3883 ;;Total ram usage:        2 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_main
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           
  3893                           ;psect for function _StartSignal
  3894  0E7C                     _StartSignal:
  3895  0E7C                     l1686:	
  3896                           ;incstack = 0
  3897                           ; Regs used in _StartSignal: [wreg]
  3898                           
  3899                           
  3900                           ;./d2h11.h: 9:     TRISDbits.TRISD0 = 0;
  3901  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  3902  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  3903  0E7E  1008               	bcf	8,0	;volatile
  3904                           
  3905                           ;./d2h11.h: 10:     PORTDbits.RD0 = 0;
  3906  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0E81  1008               	bcf	8,0	;volatile
  3909  0E82                     l1688:
  3910                           
  3911                           ;./d2h11.h: 11:     _delay((unsigned long)((25)*(20000000/4000.0)));
  3912  0E82  30A3               	movlw	163
  3913  0E83  00F1               	movwf	??_StartSignal+1
  3914  0E84  3055               	movlw	85
  3915  0E85  00F0               	movwf	??_StartSignal
  3916  0E86                     u1707:
  3917  0E86  0BF0               	decfsz	??_StartSignal,f
  3918  0E87  2E86               	goto	u1707
  3919  0E88  0BF1               	decfsz	??_StartSignal+1,f
  3920  0E89  2E86               	goto	u1707
  3921  0E8A                     l1690:
  3922                           
  3923                           ;./d2h11.h: 12:     PORTDbits.RD0 = 1;
  3924  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0E8C  1408               	bsf	8,0	;volatile
  3927                           
  3928                           ;./d2h11.h: 13:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  3929  0E8D  3031               	movlw	49
  3930  0E8E  00F0               	movwf	??_StartSignal
  3931  0E8F                     u1717:
  3932  0E8F  0BF0               	decfsz	??_StartSignal,f
  3933  0E90  2E8F               	goto	u1717
  3934  0E91  2E92               	nop2
  3935  0E92                     l1692:
  3936                           
  3937                           ;./d2h11.h: 14:     TRISDbits.TRISD0 = 1;
  3938  0E92  1683               	bsf	3,5	;RP0=1, select bank1
  3939  0E93  1303               	bcf	3,6	;RP1=0, select bank1
  3940  0E94  1408               	bsf	8,0	;volatile
  3941  0E95                     l127:
  3942  0E95  0008               	return
  3943  0E96                     __end_of_StartSignal:
  3944                           
  3945                           	psect	text18
  3946  0FBE                     __ptext18:	
  3947 ;; *************** function _ReadData *****************
  3948 ;; Defined at:
  3949 ;;		line 32 in file "./d2h11.h"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  j               1    3[COMMON] unsigned char 
  3954 ;;  i               1    2[COMMON] unsigned char 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      unsigned char 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3964 ;;      Params:         0       0       0       0       0
  3965 ;;      Locals:         2       0       0       0       0
  3966 ;;      Temps:          2       0       0       0       0
  3967 ;;      Totals:         4       0       0       0       0
  3968 ;;Total ram usage:        4 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_main
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function _ReadData
  3979  0FBE                     _ReadData:
  3980  0FBE                     l1708:	
  3981                           ;incstack = 0
  3982                           ; Regs used in _ReadData: [wreg+status,2+status,0]
  3983                           
  3984                           
  3985                           ;./d2h11.h: 34:     char i, j;;./d2h11.h: 35:     for(j = 0; j < 8; j++)
  3986  0FBE  01F3               	clrf	ReadData@j
  3987  0FBF                     l137:
  3988  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  3989  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  3990  0FC1  1C08               	btfss	8,0	;volatile
  3991  0FC2  2FC4               	goto	u1491
  3992  0FC3  2FC5               	goto	u1490
  3993  0FC4                     u1491:
  3994  0FC4  2FBF               	goto	l137
  3995  0FC5                     u1490:
  3996  0FC5                     l1714:
  3997                           
  3998                           ;./d2h11.h: 38:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  3999  0FC5  3031               	movlw	49
  4000  0FC6  00F0               	movwf	??_ReadData
  4001  0FC7                     u1727:
  4002  0FC7  0BF0               	decfsz	??_ReadData,f
  4003  0FC8  2FC7               	goto	u1727
  4004  0FC9  2FCA               	nop2
  4005  0FCA                     l1716:
  4006                           
  4007                           ;./d2h11.h: 39:         if(PORTDbits.RD0 == 0)
  4008  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0FCC  1808               	btfsc	8,0	;volatile
  4011  0FCD  2FCF               	goto	u1501
  4012  0FCE  2FD0               	goto	u1500
  4013  0FCF                     u1501:
  4014  0FCF  2FE1               	goto	l1720
  4015  0FD0                     u1500:
  4016  0FD0                     l1718:
  4017                           
  4018                           ;./d2h11.h: 40:         i&= ~(1<<(7 - j));
  4019  0FD0  3001               	movlw	1
  4020  0FD1  00F0               	movwf	??_ReadData
  4021  0FD2  0873               	movf	ReadData@j,w
  4022  0FD3  3C07               	sublw	7
  4023  0FD4  3E01               	addlw	1
  4024  0FD5  2FD8               	goto	u1514
  4025  0FD6                     u1515:
  4026  0FD6  1003               	clrc
  4027  0FD7  0DF0               	rlf	??_ReadData,f
  4028  0FD8                     u1514:
  4029  0FD8  3EFF               	addlw	-1
  4030  0FD9  1D03               	skipz
  4031  0FDA  2FD6               	goto	u1515
  4032  0FDB  0870               	movf	??_ReadData,w
  4033  0FDC  3AFF               	xorlw	255
  4034  0FDD  00F1               	movwf	??_ReadData+1
  4035  0FDE  0871               	movf	??_ReadData+1,w
  4036  0FDF  05F2               	andwf	ReadData@i,f
  4037  0FE0  2FF4               	goto	l1722
  4038  0FE1                     l1720:
  4039                           
  4040                           ;./d2h11.h: 42:         {;./d2h11.h: 43:             i|= (1 << (7 - j));
  4041  0FE1  3001               	movlw	1
  4042  0FE2  00F0               	movwf	??_ReadData
  4043  0FE3  0873               	movf	ReadData@j,w
  4044  0FE4  3C07               	sublw	7
  4045  0FE5  3E01               	addlw	1
  4046  0FE6  2FE9               	goto	u1524
  4047  0FE7                     u1525:
  4048  0FE7  1003               	clrc
  4049  0FE8  0DF0               	rlf	??_ReadData,f
  4050  0FE9                     u1524:
  4051  0FE9  3EFF               	addlw	-1
  4052  0FEA  1D03               	skipz
  4053  0FEB  2FE7               	goto	u1525
  4054  0FEC  0870               	movf	??_ReadData,w
  4055  0FED  00F1               	movwf	??_ReadData+1
  4056  0FEE  0871               	movf	??_ReadData+1,w
  4057  0FEF  04F2               	iorwf	ReadData@i,f
  4058  0FF0                     l142:	
  4059                           ;./d2h11.h: 44:             while(PORTDbits.RD0);
  4060                           
  4061  0FF0  1808               	btfsc	8,0	;volatile
  4062  0FF1  2FF3               	goto	u1531
  4063  0FF2  2FF4               	goto	u1530
  4064  0FF3                     u1531:
  4065  0FF3  2FF0               	goto	l142
  4066  0FF4                     u1530:
  4067  0FF4                     l1722:
  4068                           
  4069                           ;./d2h11.h: 46:     }
  4070  0FF4  3001               	movlw	1
  4071  0FF5  00F0               	movwf	??_ReadData
  4072  0FF6  0870               	movf	??_ReadData,w
  4073  0FF7  07F3               	addwf	ReadData@j,f
  4074  0FF8                     l1724:
  4075  0FF8  3008               	movlw	8
  4076  0FF9  0273               	subwf	ReadData@j,w
  4077  0FFA  1C03               	skipc
  4078  0FFB  2FFD               	goto	u1541
  4079  0FFC  2FFE               	goto	u1540
  4080  0FFD                     u1541:
  4081  0FFD  2FBF               	goto	l137
  4082  0FFE                     u1540:
  4083  0FFE                     l1726:
  4084                           
  4085                           ;./d2h11.h: 47:     return i;
  4086  0FFE  0872               	movf	ReadData@i,w
  4087  0FFF                     l145:
  4088  0FFF  0008               	return
  4089  1000                     __end_of_ReadData:
  4090                           
  4091                           	psect	text19
  4092  0ED6                     __ptext19:	
  4093 ;; *************** function _LCD_init *****************
  4094 ;; Defined at:
  4095 ;;		line 41 in file "./lcd4bit.h"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0, pclath, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4109 ;;      Params:         0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0
  4111 ;;      Temps:          2       0       0       0       0
  4112 ;;      Totals:         2       0       0       0       0
  4113 ;;Total ram usage:        2 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; Hardware stack levels required when called: 1
  4116 ;; This function calls:
  4117 ;;		_LCD_Command
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           
  4124                           ;psect for function _LCD_init
  4125  0ED6                     _LCD_init:
  4126  0ED6                     l1612:	
  4127                           ;incstack = 0
  4128                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  4129                           
  4130                           
  4131                           ;./lcd4bit.h: 43:     LCD_Command (0x02);
  4132  0ED6  3002               	movlw	2
  4133  0ED7  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4134                           
  4135                           ;./lcd4bit.h: 44:     LCD_Command (0x28);
  4136  0EDC  3028               	movlw	40
  4137  0EDD  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4138                           
  4139                           ;./lcd4bit.h: 45:     LCD_Command (0x80);
  4140  0EE2  3080               	movlw	128
  4141  0EE3  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4142                           
  4143                           ;./lcd4bit.h: 46:     LCD_Command (0x0C);
  4144  0EE8  300C               	movlw	12
  4145  0EE9  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4146                           
  4147                           ;./lcd4bit.h: 47:     LCD_Command (0x06);
  4148  0EEE  3006               	movlw	6
  4149  0EEF  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4150                           
  4151                           ;./lcd4bit.h: 48:     LCD_Command (0x01);
  4152  0EF4  3001               	movlw	1
  4153  0EF5  120A  158A  273E  120A  158A  	fcall	_LCD_Command
  4154  0EFA                     l1614:
  4155                           
  4156                           ;./lcd4bit.h: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4157  0EFA  3041               	movlw	65
  4158  0EFB  00F4               	movwf	??_LCD_init+1
  4159  0EFC  30EE               	movlw	238
  4160  0EFD  00F3               	movwf	??_LCD_init
  4161  0EFE                     u1737:
  4162  0EFE  0BF3               	decfsz	??_LCD_init,f
  4163  0EFF  2EFE               	goto	u1737
  4164  0F00  0BF4               	decfsz	??_LCD_init+1,f
  4165  0F01  2EFE               	goto	u1737
  4166  0F02  0000               	nop
  4167  0F03                     l59:
  4168  0F03  0008               	return
  4169  0F04                     __end_of_LCD_init:
  4170                           
  4171                           	psect	text20
  4172  0F3E                     __ptext20:	
  4173 ;; *************** function _LCD_Command *****************
  4174 ;; Defined at:
  4175 ;;		line 13 in file "./lcd4bit.h"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  cmnd            1    wreg     unsigned char 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  cmnd            1    2[COMMON] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4189 ;;      Params:         0       0       0       0       0
  4190 ;;      Locals:         1       0       0       0       0
  4191 ;;      Temps:          2       0       0       0       0
  4192 ;;      Totals:         3       0       0       0       0
  4193 ;;Total ram usage:        3 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_LCD_init
  4199 ;;		_main
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           
  4204                           ;psect for function _LCD_Command
  4205  0F3E                     _LCD_Command:
  4206                           
  4207                           ;incstack = 0
  4208                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  4209                           ;LCD_Command@cmnd stored from wreg
  4210  0F3E  00F2               	movwf	LCD_Command@cmnd
  4211  0F3F                     l1510:
  4212                           
  4213                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  4214  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  4215  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  4216  0F41  1007               	bcf	7,0	;volatile
  4217  0F42                     l1512:
  4218                           
  4219                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  4220  0F42  0872               	movf	LCD_Command@cmnd,w
  4221  0F43  0086               	movwf	6	;volatile
  4222  0F44                     l1514:
  4223                           
  4224                           ;./lcd4bit.h: 17:     RC1 = 1;
  4225  0F44  1487               	bsf	7,1	;volatile
  4226                           
  4227                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4228  0F45  3041               	movlw	65
  4229  0F46  00F1               	movwf	??_LCD_Command+1
  4230  0F47  30EE               	movlw	238
  4231  0F48  00F0               	movwf	??_LCD_Command
  4232  0F49                     u1747:
  4233  0F49  0BF0               	decfsz	??_LCD_Command,f
  4234  0F4A  2F49               	goto	u1747
  4235  0F4B  0BF1               	decfsz	??_LCD_Command+1,f
  4236  0F4C  2F49               	goto	u1747
  4237  0F4D  0000               	nop
  4238  0F4E                     l1516:
  4239                           
  4240                           ;./lcd4bit.h: 19:     RC1 = 0;
  4241  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  4242  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  4243  0F50  1087               	bcf	7,1	;volatile
  4244                           
  4245                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4246  0F51  3041               	movlw	65
  4247  0F52  00F1               	movwf	??_LCD_Command+1
  4248  0F53  30EE               	movlw	238
  4249  0F54  00F0               	movwf	??_LCD_Command
  4250  0F55                     u1757:
  4251  0F55  0BF0               	decfsz	??_LCD_Command,f
  4252  0F56  2F55               	goto	u1757
  4253  0F57  0BF1               	decfsz	??_LCD_Command+1,f
  4254  0F58  2F55               	goto	u1757
  4255  0F59  0000               	nop
  4256  0F5A                     l1518:
  4257                           
  4258                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  4259  0F5A  0872               	movf	LCD_Command@cmnd,w
  4260  0F5B  00F0               	movwf	??_LCD_Command
  4261  0F5C  3003               	movlw	3
  4262  0F5D                     u1315:
  4263  0F5D  1003               	clrc
  4264  0F5E  0DF0               	rlf	??_LCD_Command,f
  4265  0F5F  3EFF               	addlw	-1
  4266  0F60  1D03               	skipz
  4267  0F61  2F5D               	goto	u1315
  4268  0F62  1003               	clrc
  4269  0F63  0D70               	rlf	??_LCD_Command,w
  4270  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  4271  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  4272  0F66  0086               	movwf	6	;volatile
  4273  0F67                     l1520:
  4274                           
  4275                           ;./lcd4bit.h: 22:     RC1 = 1;
  4276  0F67  1487               	bsf	7,1	;volatile
  4277  0F68                     l1522:
  4278                           
  4279                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4280  0F68  3041               	movlw	65
  4281  0F69  00F1               	movwf	??_LCD_Command+1
  4282  0F6A  30EE               	movlw	238
  4283  0F6B  00F0               	movwf	??_LCD_Command
  4284  0F6C                     u1767:
  4285  0F6C  0BF0               	decfsz	??_LCD_Command,f
  4286  0F6D  2F6C               	goto	u1767
  4287  0F6E  0BF1               	decfsz	??_LCD_Command+1,f
  4288  0F6F  2F6C               	goto	u1767
  4289  0F70  0000               	nop
  4290  0F71                     l1524:
  4291                           
  4292                           ;./lcd4bit.h: 24:     RC1 = 0;
  4293  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  4294  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  4295  0F73  1087               	bcf	7,1	;volatile
  4296  0F74                     l1526:
  4297                           
  4298                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4299  0F74  3041               	movlw	65
  4300  0F75  00F1               	movwf	??_LCD_Command+1
  4301  0F76  30EE               	movlw	238
  4302  0F77  00F0               	movwf	??_LCD_Command
  4303  0F78                     u1777:
  4304  0F78  0BF0               	decfsz	??_LCD_Command,f
  4305  0F79  2F78               	goto	u1777
  4306  0F7A  0BF1               	decfsz	??_LCD_Command+1,f
  4307  0F7B  2F78               	goto	u1777
  4308  0F7C  0000               	nop
  4309  0F7D                     l53:
  4310  0F7D  0008               	return
  4311  0F7E                     __end_of_LCD_Command:
  4312                           
  4313                           	psect	text21
  4314  0EB5                     __ptext21:	
  4315 ;; *************** function _CheckResponse *****************
  4316 ;; Defined at:
  4317 ;;		line 17 in file "./d2h11.h"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4331 ;;      Params:         0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0
  4333 ;;      Temps:          1       0       0       0       0
  4334 ;;      Totals:         1       0       0       0       0
  4335 ;;Total ram usage:        1 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _CheckResponse
  4346  0EB5                     _CheckResponse:
  4347  0EB5                     l1694:	
  4348                           ;incstack = 0
  4349                           ; Regs used in _CheckResponse: [wreg+status,2]
  4350                           
  4351                           
  4352                           ;./d2h11.h: 19:     Check = 0;
  4353  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  4354  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  4355  0EB7  01E8               	clrf	_Check
  4356  0EB8                     l1696:
  4357                           
  4358                           ;./d2h11.h: 20:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  4359  0EB8  3042               	movlw	66
  4360  0EB9  00F0               	movwf	??_CheckResponse
  4361  0EBA                     u1787:
  4362  0EBA  0BF0               	decfsz	??_CheckResponse,f
  4363  0EBB  2EBA               	goto	u1787
  4364  0EBC  0000               	nop
  4365  0EBD                     l1698:
  4366                           
  4367                           ;./d2h11.h: 21:     if (PORTDbits.RD0 == 0)
  4368  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  4370  0EBF  1808               	btfsc	8,0	;volatile
  4371  0EC0  2EC2               	goto	u1471
  4372  0EC1  2EC3               	goto	u1470
  4373  0EC2                     u1471:
  4374  0EC2  2ED5               	goto	l132
  4375  0EC3                     u1470:
  4376  0EC3                     l1700:
  4377                           
  4378                           ;./d2h11.h: 22:     {;./d2h11.h: 23:         _delay((unsigned long)((80)*(20000000/40000
      +                          00.0)));
  4379  0EC3  3085               	movlw	133
  4380  0EC4  00F0               	movwf	??_CheckResponse
  4381  0EC5                     u1797:
  4382  0EC5  0BF0               	decfsz	??_CheckResponse,f
  4383  0EC6  2EC5               	goto	u1797
  4384  0EC7                     l1702:
  4385                           
  4386                           ;./d2h11.h: 24:         if (PORTDbits.RD0 == 1)
  4387  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0EC9  1C08               	btfss	8,0	;volatile
  4390  0ECA  2ECC               	goto	u1481
  4391  0ECB  2ECD               	goto	u1480
  4392  0ECC                     u1481:
  4393  0ECC  2ED5               	goto	l132
  4394  0ECD                     u1480:
  4395  0ECD                     l1704:
  4396                           
  4397                           ;./d2h11.h: 25:         {;./d2h11.h: 26:             _delay((unsigned long)((50)*(200000
      +                          00/4000000.0)));
  4398  0ECD  3053               	movlw	83
  4399  0ECE  00F0               	movwf	??_CheckResponse
  4400  0ECF                     u1807:
  4401  0ECF  0BF0               	decfsz	??_CheckResponse,f
  4402  0ED0  2ECF               	goto	u1807
  4403  0ED1                     l1706:
  4404                           
  4405                           ;./d2h11.h: 27:            Check = 1;
  4406  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  4408  0ED3  01E8               	clrf	_Check
  4409  0ED4  0AE8               	incf	_Check,f
  4410  0ED5                     l132:
  4411  0ED5  0008               	return
  4412  0ED6                     __end_of_CheckResponse:
  4413                           
  4414                           	psect	text22
  4415  00F4                     __ptext22:	
  4416 ;; *************** function _ADC_Init *****************
  4417 ;; Defined at:
  4418 ;;		line 91 in file "main.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;		None
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;		None
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      void 
  4425 ;; Registers used:
  4426 ;;		wreg
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4432 ;;      Params:         0       0       0       0       0
  4433 ;;      Locals:         0       0       0       0       0
  4434 ;;      Temps:          2       0       0       0       0
  4435 ;;      Totals:         2       0       0       0       0
  4436 ;;Total ram usage:        2 bytes
  4437 ;; Hardware stack levels used: 1
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _ADC_Init
  4447  00F4                     _ADC_Init:
  4448  00F4                     l1730:	
  4449                           ;incstack = 0
  4450                           ; Regs used in _ADC_Init: [wreg]
  4451                           
  4452                           
  4453                           ;main.c: 93:     ADCON0 = 0x85;
  4454  00F4  3085               	movlw	133
  4455  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  4456  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  4457  00F7  009F               	movwf	31	;volatile
  4458                           
  4459                           ;main.c: 94:     ADCON1 = 0xC0;
  4460  00F8  30C0               	movlw	192
  4461  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  4462  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  4463  00FB  009F               	movwf	31	;volatile
  4464                           
  4465                           ;main.c: 95:     AV[0]= ((ADRESH<<8)+ADRESL);
  4466  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  4467  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  4468  00FE  081E               	movf	30,w	;volatile
  4469  00FF  00CC               	movwf	_AV+1
  4470  0100  1683               	bsf	3,5	;RP0=1, select bank1
  4471  0101  1303               	bcf	3,6	;RP1=0, select bank1
  4472  0102  081E               	movf	30,w	;volatile
  4473  0103  1283               	bcf	3,5	;RP0=0, select bank0
  4474  0104  1303               	bcf	3,6	;RP1=0, select bank0
  4475  0105  00CB               	movwf	_AV
  4476                           
  4477                           ;main.c: 97:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4478  0106  3041               	movlw	65
  4479  0107  00F1               	movwf	??_ADC_Init+1
  4480  0108  30EE               	movlw	238
  4481  0109  00F0               	movwf	??_ADC_Init
  4482  010A                     u1817:
  4483  010A  0BF0               	decfsz	??_ADC_Init,f
  4484  010B  290A               	goto	u1817
  4485  010C  0BF1               	decfsz	??_ADC_Init+1,f
  4486  010D  290A               	goto	u1817
  4487  010E  0000               	nop
  4488                           
  4489                           ;main.c: 98:     ADCON0 = 0x8D;
  4490  010F  308D               	movlw	141
  4491  0110  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0111  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0112  009F               	movwf	31	;volatile
  4494                           
  4495                           ;main.c: 99:     ADCON1 = 0xC0;
  4496  0113  30C0               	movlw	192
  4497  0114  1683               	bsf	3,5	;RP0=1, select bank1
  4498  0115  1303               	bcf	3,6	;RP1=0, select bank1
  4499  0116  009F               	movwf	31	;volatile
  4500                           
  4501                           ;main.c: 100:     AV[1]= ((ADRESH<<8)+ADRESL);
  4502  0117  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0118  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0119  081E               	movf	30,w	;volatile
  4505  011A  00CE               	movwf	_AV+3
  4506  011B  1683               	bsf	3,5	;RP0=1, select bank1
  4507  011C  1303               	bcf	3,6	;RP1=0, select bank1
  4508  011D  081E               	movf	30,w	;volatile
  4509  011E  1283               	bcf	3,5	;RP0=0, select bank0
  4510  011F  1303               	bcf	3,6	;RP1=0, select bank0
  4511  0120  00CD               	movwf	_AV+2
  4512                           
  4513                           ;main.c: 102:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4514  0121  3041               	movlw	65
  4515  0122  00F1               	movwf	??_ADC_Init+1
  4516  0123  30EE               	movlw	238
  4517  0124  00F0               	movwf	??_ADC_Init
  4518  0125                     u1827:
  4519  0125  0BF0               	decfsz	??_ADC_Init,f
  4520  0126  2925               	goto	u1827
  4521  0127  0BF1               	decfsz	??_ADC_Init+1,f
  4522  0128  2925               	goto	u1827
  4523  0129  0000               	nop
  4524                           
  4525                           ;main.c: 103:     ADCON0 = 0x95;
  4526  012A  3095               	movlw	149
  4527  012B  1283               	bcf	3,5	;RP0=0, select bank0
  4528  012C  1303               	bcf	3,6	;RP1=0, select bank0
  4529  012D  009F               	movwf	31	;volatile
  4530                           
  4531                           ;main.c: 104:     ADCON1 = 0xC0;
  4532  012E  30C0               	movlw	192
  4533  012F  1683               	bsf	3,5	;RP0=1, select bank1
  4534  0130  1303               	bcf	3,6	;RP1=0, select bank1
  4535  0131  009F               	movwf	31	;volatile
  4536                           
  4537                           ;main.c: 105:     AV[2]= ((ADRESH<<8)+ADRESL);
  4538  0132  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0133  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0134  081E               	movf	30,w	;volatile
  4541  0135  00D0               	movwf	_AV+5
  4542  0136  1683               	bsf	3,5	;RP0=1, select bank1
  4543  0137  1303               	bcf	3,6	;RP1=0, select bank1
  4544  0138  081E               	movf	30,w	;volatile
  4545  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4546  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4547  013B  00CF               	movwf	_AV+4
  4548                           
  4549                           ;main.c: 107:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4550  013C  3041               	movlw	65
  4551  013D  00F1               	movwf	??_ADC_Init+1
  4552  013E  30EE               	movlw	238
  4553  013F  00F0               	movwf	??_ADC_Init
  4554  0140                     u1837:
  4555  0140  0BF0               	decfsz	??_ADC_Init,f
  4556  0141  2940               	goto	u1837
  4557  0142  0BF1               	decfsz	??_ADC_Init+1,f
  4558  0143  2940               	goto	u1837
  4559  0144  0000               	nop
  4560                           
  4561                           ;main.c: 108:     ADCON0 = 0x9D;
  4562  0145  309D               	movlw	157
  4563  0146  1283               	bcf	3,5	;RP0=0, select bank0
  4564  0147  1303               	bcf	3,6	;RP1=0, select bank0
  4565  0148  009F               	movwf	31	;volatile
  4566                           
  4567                           ;main.c: 109:     ADCON1 = 0xC0;
  4568  0149  30C0               	movlw	192
  4569  014A  1683               	bsf	3,5	;RP0=1, select bank1
  4570  014B  1303               	bcf	3,6	;RP1=0, select bank1
  4571  014C  009F               	movwf	31	;volatile
  4572                           
  4573                           ;main.c: 110:     AV[3]= ((ADRESH<<8)+ADRESL);
  4574  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4575  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4576  014F  081E               	movf	30,w	;volatile
  4577  0150  00D2               	movwf	_AV+7
  4578  0151  1683               	bsf	3,5	;RP0=1, select bank1
  4579  0152  1303               	bcf	3,6	;RP1=0, select bank1
  4580  0153  081E               	movf	30,w	;volatile
  4581  0154  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0155  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0156  00D1               	movwf	_AV+6
  4584  0157                     l171:
  4585  0157  0008               	return
  4586  0158                     __end_of_ADC_Init:
  4587  007E                     btemp	set	126	;btemp
  4588  007E                     wtemp0	set	126
  4589                           
  4590                           	psect	idloc
  4591                           
  4592                           ;Config register IDLOC0 @ 0x2000
  4593                           ;	unspecified, using default values
  4594  2000                     	org	8192
  4595  2000  3FFF               	dw	16383
  4596                           
  4597                           ;Config register IDLOC1 @ 0x2001
  4598                           ;	unspecified, using default values
  4599  2001                     	org	8193
  4600  2001  3FFF               	dw	16383
  4601                           
  4602                           ;Config register IDLOC2 @ 0x2002
  4603                           ;	unspecified, using default values
  4604  2002                     	org	8194
  4605  2002  3FFF               	dw	16383
  4606                           
  4607                           ;Config register IDLOC3 @ 0x2003
  4608                           ;	unspecified, using default values
  4609  2003                     	org	8195
  4610  2003  3FFF               	dw	16383
  4611                           
  4612                           	psect	config
  4613                           
  4614                           ;Config register CONFIG @ 0x2007
  4615                           ;	Oscillator Selection bits
  4616                           ;	FOSC = HS, HS oscillator
  4617                           ;	Watchdog Timer Enable bit
  4618                           ;	WDTE = OFF, WDT disabled
  4619                           ;	Power-up Timer Enable bit
  4620                           ;	PWRTE = OFF, PWRT disabled
  4621                           ;	Brown-out Reset Enable bit
  4622                           ;	BOREN = ON, BOR enabled
  4623                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4624                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4625                           ;	Data EEPROM Memory Code Protection bit
  4626                           ;	CPD = OFF, Data EEPROM code protection off
  4627                           ;	Flash Program Memory Write Enable bits
  4628                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4629                           ;	In-Circuit Debugger Mode bit
  4630                           ;	DEBUG = 0x1, unprogrammed default
  4631                           ;	Flash Program Memory Code Protection bit
  4632                           ;	CP = OFF, Code protection off
  4633  2007                     	org	8199
  4634  2007  3FFA               	dw	16378

Data Sizes:
    Strings     12
    Constant    0
    Data        2
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _show_multidigits->___awdiv
    _show->_LCD_Char
    _print_serialnumber->_tx_sn
    _tx_sn->___awdiv
    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_print_analogvoltages
    _print_serialnumber->_tx_sn
    _print_analogvoltages->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   23428
                                             35 BANK0      8     8      0
                           _ADC_Init
                      _CheckResponse
                        _LCD_Command
                           _LCD_init
                           _ReadData
                        _StartSignal
               _print_analogvoltages
                 _print_serialnumber
                            _ser_int
                               _show
                   _show_multidigits
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (1) _show_multidigits                                    16    14      2    6157
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     155
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_serialnumber                                   0     0      0    6233
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (1) _tx_sn                                               16    14      2    6211
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                 _tx
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _print_analogvoltages                                 5     5      0    4448
                                             30 BANK0      5     5      0
                           _LCD_Char
                            _LCD_num
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_num                                             18    14      4    4202
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (3) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1375
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _StartSignal                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ReadData                                             4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _CheckResponse                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _CheckResponse
   _LCD_Command
   _LCD_init
     _LCD_Command
   _ReadData
   _StartSignal
   _print_analogvoltages
     _LCD_Char
     _LCD_num
       _LCD_Char
       ___aldiv
         ___lmul (ARG)
       ___lmul
       ___lwdiv
       ___lwmod
       _intdigits_chardigits
     _tx
   _print_serialnumber
     _tx
     _tx_sn
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
       _tx
   _ser_int
   _show
     _LCD_Char
   _show_multidigits
     _LCD_Char
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _tx
   _tx_sn

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2B      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 06 13:58:37 2022

                            pc 0002                   ?_LCD_Command 0070                             l53 0F7D  
                           l62 0388                             l71 0E69                             l56 0FBD  
                           l81 07E6                             l90 0E5A                             l59 0F03  
                           l84 0010                             l68 0EB4                             _AV 004B  
                           l77 07E6                             l87 0E55                             l89 0E59  
                           _RH 005F                             _Ch 0063                   ___awdiv@sign 0076  
                           _sn 0069                             _tx 0E50                             fsr 0004  
        print_analogvoltages@i 0041          print_analogvoltages@j 0042                            l102 0654  
                          l106 0654                            l132 0ED5                            l142 0FF0  
                          l127 0E95                            l145 0FFF                            l137 0FBF  
                          l161 039F                            l171 0157                            l174 0E7B  
                          l335 0241                            l423 01BE                            l184 022C  
                          l345 02C9                            l284 009A                            l436 00F3  
                          l542 0054                            l552 0F3D                            ?_tx 0070  
                          _RC0 0038                            _RC1 0039                            u900 0245  
                          u901 0244                            u910 0264                            u830 0E59  
                          u911 0263                            u831 0E58                            u840 0061  
                          u825 0F9D                            u841 0060                            u930 0278  
                          u931 0277                            u851 006A                            u852 0071  
                          u925 0269                            u853 0078                            u950 0293  
                          u951 0292                            u880 0092                            u945 027A  
                          u881 0091                            u865 007A                            u970 02B1  
                          u890 0234                            u971 02B0                            u955 028F  
                          u891 0233                            u875 0082                            u980 02B6  
                          u981 02B5                            u965 02A3                            u990 015D  
                          u991 015C                            _Sum 005D                            _avv 0056  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0076  
                          tx@a 0070         show_multidigits@digit1 0026         show_multidigits@digit2 0028  
       show_multidigits@digit3 0024         show_multidigits@digit4 0020                           ??_tx 0070  
              __end_of_LCD_num 0389                           l1310 0F8E                           l1320 0FB4  
                         l1312 0F9A                           l1304 0F7F                           l1400 017C  
                         l1314 0FA7                           l1306 0F82                           l1330 0061  
                         l1322 0E5B                           l1410 01A2                           l1402 0183  
                         l1316 0FA8                           l1308 0F84                           l1340 022D  
                         l1332 0078                           l1500 0F26                           l1324 0E51  
                         l1420 01BA                           l1412 01A3                           l1404 0187  
                         l1510 0F3F                           l1318 0FB1                           l1350 0254  
                         l1342 0230                           l1334 0081                           l1326 0055  
                         l1502 0F2C                           l1414 01AA                           l1406 018B  
                         l1430 00A5                           l1520 0F67                           l1512 0F42  
                         l1360 0278                           l1352 025C                           l1344 0234  
                         l1336 0092                           l1328 005D                           l1504 0F33  
                         l1408 019C                           l1416 01B0                           l1440 00B9  
                         l1432 00A7                           l1424 009B                           l1600 0607  
                         l1522 0F68                           l1514 0F44                           l1370 02AB  
                         l1362 0281                           l1354 0264                           l1346 0245  
                         l1506 0F39                           l1530 02CA                           l1418 01B5  
                         l1450 00D8                           l1442 00C0                           l1434 00AB  
                         l1426 009C                           l1610 064A                           l1602 061E  
                         l1700 0EC3                           l1524 0F71                           l1516 0F4E  
                         l1612 0ED6                           l1364 0293                           l1356 0267  
                         l1372 02B1                           l1348 0250                           l1540 033F  
                         l1532 02FE                           l1380 0158                           l1452 00DF  
                         l1444 00C4                           l1436 00B0                           l1428 00A0  
                         l1604 0631                           l1620 0EA4                           l1702 0EC7  
                         l1526 0F74                           l1518 0F5A                           l1614 0EFA  
                         l1374 02B6                           l1366 02A1                           l1358 0274  
                         l1470 0023                           l1462 0011                           l1550 0375  
                         l1542 0356                           l1534 0311                           l1390 0168  
                         l1382 0159                           l1446 00C8                           l1438 00B6  
                         l1454 00E5                           l1606 0638                           l1622 0EA8  
                         l1630 066F                           l1704 0ECD                           l1720 0FE1  
                         l1376 02C1                           l1368 02A2                           l1480 0043  
                         l1472 0027                           l1464 0013                           l1544 035D  
                         l1536 0324                           l1528 02CA                           l1392 016D  
                         l1384 015D                           l1456 00EA                           l1448 00D2  
                         l1608 0641                           l1560 04E6                           l1552 04C3  
                         l1616 0E97                           l1640 06A9                           l1632 0678  
                         l1624 0655                           l1800 0437                           l1730 00F4  
                         l1706 0ED1                           l1722 0FF4                           l1714 0FC5  
                         l1482 004A                           l1474 002B                           l1466 0019  
                         l1490 0F0A                           l1546 0363                           l1538 033B  
                         l1394 0171                           l1386 0162                           l1458 00EF  
                         l1562 04F9                           l1570 0521                           l1554 04CC  
                         l1618 0E98                           l1650 06EF                           l1634 068B  
                         l1642 06B3                           l1626 065E                           l1810 045F  
                         l1802 043D                           l1724 0FF8                           l1716 0FCA  
                         l1708 0FBE                           l1476 003C                           l1468 001C  
                         l1484 0050                           l1492 0F0D                           l1548 036C  
                         l1740 01C2                           l1396 0173                           l1388 0164  
                         l1580 0574                           l1572 052A                           l1564 04FD  
                         l1556 04D4                           l1732 0E6A                           l1652 0706  
                         l1644 06BC                           l1660 0733                           l1636 068F  
                         l1628 0666                           l1820 0487                           l1812 0465  
                         l1804 0443                           l1726 0FFE                           l1718 0FD0  
                         l1478 0042                           l1494 0F14                           l1750 01E1  
                         l1742 01D8                           l1734 01BF                           l1398 0179  
                         l1590 05AA                           l1582 0587                           l1574 0533  
                         l1566 0510                           l1558 04DD                           l1670 0786  
                         l1662 073C                           l1654 0719                           l1646 06C5  
                         l1638 06A2                           l1822 049C                           l1814 046B  
                         l1806 044E                           l1496 0F18                           l1488 0F04  
                         l1760 0206                           l1752 01EC                           l1744 01DE  
                         l1592 05B3                           l1584 058E                           l1576 0559  
                         l1568 0517                           l1680 07D3                           l1672 0799  
                         l1664 0745                           l1656 0720                           l1648 06EB  
                         l1824 04A2                           l1816 0471                           l1808 0459  
                         l1690 0E8A                           l1498 0F1C                           l1762 020C  
                         l1754 01F3                           l1594 05D9                           l1586 0597  
                         l1578 055D                           l1682 07DC                           l1674 07B0  
                         l1666 076B                           l1658 0729                           l1818 047C  
                         l1770 0389                           l1692 0E92                           l1764 0212  
                         l1756 01FA                           l1596 05DD                           l1588 05A1  
                         l1684 0004                           l1676 07C3                           l1668 076F  
                         l1780 03A3                           l1772 038D                           l1694 0EB5  
                         l1686 0E7C                           l1766 0220                           l1758 0200  
                         l1598 05F4                           l1678 07CA                           l1790 03C2  
                         l1782 03AE                           l1774 0392                           l1696 0EB8  
                         l1688 0E82                           l1768 0226                           l1792 03C9  
                         l1784 03B3                           l1776 0397                           l1698 0EBD  
                         l1794 03FE                           l1786 03B8                           l1778 039C  
                         l1796 0423                           l1788 03BD                           l1798 0431  
                         STR_1 080C                           STR_2 0806                           u1000 0168  
                         u1001 0167                           u1010 0179                           u1011 0178  
                         u1100 00AB                           u1101 00AA                           u1030 018B  
                         u1110 00B6                           u1031 018A                           u1111 00B5  
                         u1200 002B                           u1201 002A                           u1025 017D  
                         u1050 019C                           u1130 00C8                           u1051 019B  
                         u1131 00C7                           u1220 003C                           u1300 0F39  
                         u1140 00D2                           u1221 003B                           u1301 0F38  
                         u1045 018C                           u1141 00D1                           u1125 00BA  
                         u1070 01B0                           u1215 002C                           u1071 01AF  
                         u1055 0198                           u1240 0050                           u1080 01B5  
                         u1160 00E5                           u1320 04CC                           u1400 065E  
                         u1241 004F                           u1225 0038                           u1081 01B4  
                         u1065 01A4                           u1161 00E4                           u1145 00CE  
                         u1321 04CB                           u1401 065D                           u1250 0F0A  
                         u1170 00EA                           u1090 00A0                           u1330 04DD  
                         u1410 066F                           u1315 0F5D                           u1235 0044  
                         u1251 0F09                           u1171 00E9                           u1155 00D9  
                         u1091 009F                           u1331 04DC                           u1411 066E  
                         u1500 0FD0                           u1180 0019                           u1340 04E6  
                         u1420 0678                           u1501 0FCF                           u1181 0018  
                         u1341 04E5                           u1421 0677                           u1270 0F1C  
                         u1350 052A                           u1430 06BC                           u1271 0F1B  
                         u1351 0529                           u1431 06BB                           u1280 0F26  
                         u1360 0533                           u1440 06C5                           u1600 03C9  
                         u1281 0F25                           u1265 0F0E                           u1361 0532  
                         u1441 06C4                           u1601 03C8                           u1530 0FF4  
                         u1514 0FD8                           u1370 05AA                           u1450 073C  
                         u1610 0423                           u1531 0FF3                           u1515 0FD6  
                         u1195 001D                           u1371 05A9                           u1451 073B  
                         u1611 0422                           u1540 0FFE                           u1524 0FE9  
                         u1380 05B3                           u1460 0745                           u1541 0FFD  
                         u1525 0FE7                           u1285 0F22                           u1381 05B2  
                         u1461 0744                           u1470 0EC3                           u1550 01F3  
                         u1390 0EB4                           u1471 0EC2                           u1295 0F2D  
                         u1551 01F2                           u1391 0EB3                           u1615 041F  
                         u1480 0ECD                           u1560 0200                           u1481 0ECC  
                         u1561 01FF                           u1490 0FC5                           u1570 0212  
                         u1491 0FC4                           u1707 0E86                           u1571 0211  
                         u1627 03A9                           u1580 022C                           u1717 0E8F  
                         u1581 022B                           u1637 0495                           u1590 03A3  
                         u1807 0ECF                           u1727 0FC7                           u1647 04B0  
                         u1591 03A2                           u1817 010A                           u1737 0EFE  
                         u1657 021A                           u1827 0125                           u1747 0F49  
                         u1667 0F89                           u1837 0140                           u1757 0F55  
                         u1677 0F95                           u1767 0F6C                           u1687 0FAC  
                         u1777 0F78                           u1697 0FB8                           u1787 0EBA  
                         u1797 0EC5                           _RCIF 0065         show_multidigits@result 0022  
                         _TXIF 0064   __end_of_print_analogvoltages 022D                           _Temp 0061  
                         _main 0389                           _show 0E96                           btemp 007E  
             __end_of_ADC_Init 0158                           start 0000               __end_of_LCD_Char 0FBE  
                 LCD_Char@data 0072               __end_of_LCD_init 0F04                __end_of___aldiv 02CA  
                        ?_main 0070                __end_of___awdiv 01BF                __end_of___awmod 00F4  
                        ?_show 0070                ___awdiv@divisor 0070                __end_of___lwdiv 0055  
              __end_of___lwmod 0F3E                ___awdiv@counter 0075                          _RCREG 001A  
                        _RCSTA 0018        show_multidigits@result1 002A                          _SPBRG 0099  
                        _PORTB 0006                          _TRISB 0086                          _TRISC 0087  
                        _TXREG 0019                          _TXSTA 0098                          _Check 0068  
          ___lmul@multiplicand 0074                          _tx_sn 04C3                __end_of_ser_int 0011  
                        pclath 000A             _print_serialnumber 0E6A                          show@s 0074  
                        status 0003                          wtemp0 007E            ?_print_serialnumber 0070  
              __initialization 07E7                   __end_of_main 04C3                   __end_of_show 0EB5  
             __end_of_ReadData 1000                         ??_main 0043                         ??_show 0073  
               LCD_num@result1 003A           _intdigits_chardigits 0E5B                      ??_LCD_num 007E  
         ??_print_serialnumber 007B                         _ADCON0 001F                         _ADCON1 009F  
                       _ADRESH 001E                         _ADRESL 009E               ___awdiv@dividend 0072  
                       ?_tx_sn 0079                         ___lmul 0055                      ??___aldiv 007D  
                    ??___awdiv 0074                      ??___awmod 0074                      ??___lwdiv 0074  
                    ??___lwmod 0074               ___awdiv@quotient 0077                ___awmod@divisor 0070  
              ___awmod@counter 0075           _print_analogvoltages 01BF           __size_of_LCD_Command 0040  
        ?_intdigits_chardigits 0070         __size_of_CheckResponse 0021                      ?_ADC_Init 0070  
                    ??_ser_int 0070      __size_of_show_multidigits 0192                      ?_LCD_Char 0070  
      __end_of__initialization 07FC                      ?_LCD_init 0070                 __pcstackCOMMON 0070  
                 __pidataBANK0 0E46                  ??_StartSignal 0070                  __end_of_tx_sn 0655  
        ?_print_analogvoltages 0070                     __end_of_tx 0E5B                     ??_ADC_Init 0070  
                      ??_tx_sn 007B                     __pbssBANK0 004B                      ?_ReadData 0070  
               tx_sn@remainder 002C                     ??_LCD_Char 0070                     ??_LCD_init 0073  
                _CheckResponse 0EB5                   tx_sn@result1 002A                     __pmaintext 0389  
                      ?___lmul 0070                 ___lmul@product 0079         ??_intdigits_chardigits 0076  
          __end_of_StartSignal 0E96                        _LCD_num 02CA                     __stringtab 0800  
          show_multidigits@val 0079                     ??_ReadData 0070                 ?_CheckResponse 0070  
                      _T_byte1 0067                        _T_byte2 0066                        ___aldiv 022D  
                      ___awdiv 0158                __size_of___lmul 0046                        ___awmod 009B  
                      ___lwdiv 0011                        ___lwmod 0F04         ??_print_analogvoltages 003E  
                      __ptext1 0655                        __ptext2 0E96                        __ptext3 0004  
                      __ptext4 0E6A                        __ptext5 04C3                        __ptext6 009B  
                      __ptext7 0158                        __ptext8 01BF                        __ptext9 0E50  
                      _message 0053               ___awmod@dividend 0072               ___aldiv@dividend 0024  
                      _ser_int 0004                        clrloop0 0E49           end_of_initialization 07FC  
             _show_multidigits 0655               ___aldiv@quotient 002A                    _StartSignal 0E7C  
                    _PORTDbits 0008    __size_of_print_serialnumber 0012                      _TRISDbits 0088  
            __size_of_ADC_Init 0064                ??_CheckResponse 0070                      ReadData@i 0072  
                    ReadData@j 0073              __size_of_LCD_Char 0040              __size_of_LCD_init 002E  
                ??_LCD_Command 0070                 __end_of___lmul 009B            start_initialization 07E7  
                LCD_num@digit1 0032                  LCD_num@digit2 0034                  LCD_num@digit3 0036  
                   LCD_num@val 002E                  LCD_num@result 0038              __size_of_ReadData 0042  
                     ??___lmul 0078                    __pdataBANK0 0069               LCD_num@remainder 003C  
          __end_of_LCD_Command 0F7E                       ?_LCD_num 002E                      ___latbits 0002  
                __pcstackBANK0 0020                    tx_sn@digit1 0026                    tx_sn@digit2 0028  
                  tx_sn@digit3 0024                    tx_sn@digit4 0020               ___lwdiv@dividend 0072  
                  tx_sn@result 0022                       ?___aldiv 0020                       ?___awdiv 0070  
                     ?___awmod 0070                       ?___lwdiv 0070                       ?___lwmod 0070  
     __end_of_show_multidigits 07E7                      __pstrings 0800  __size_of_intdigits_chardigits 000F  
                     _ADC_Init 00F4                       ?_ser_int 0070               ___lwdiv@quotient 0075  
               __size_of_tx_sn 0192                    __size_of_tx 000B                ___aldiv@divisor 0020  
                     _LCD_Char 0F7E                ___aldiv@counter 0028                       _LCD_init 0ED6  
                    clear_ram0 0E48                       _GO_nDONE 00FA                   ?_StartSignal 0070  
                  _LCD_Command 0F3E  __size_of_print_analogvoltages 006E                    __stringbase 0805  
                     _RH_byte1 0065                       _RH_byte2 0064               __size_of_LCD_num 00BF  
            ___lmul@multiplier 0070          intdigits_chardigits@a 0070          intdigits_chardigits@b 0072  
        intdigits_chardigits@c 0074                       _ReadData 0FBE               __size_of___aldiv 009D  
             __size_of___awdiv 0067               __size_of___awmod 0059               __size_of___lwdiv 0044  
             __size_of___lwmod 003A             __end_of__stringtab 0806     __end_of_print_serialnumber 0E7C  
              ___lwdiv@divisor 0070                ___lwdiv@counter 0077                       __ptext10 02CA  
                     __ptext11 0E5B                       __ptext20 0F3E                       __ptext12 0F04  
                     __ptext21 0EB5                       __ptext13 0011                       __ptext22 00F4  
                     __ptext14 0055                       __ptext15 022D                       __ptext16 0F7E  
                     __ptext17 0E7C                       __ptext18 0FBE                       __ptext19 0ED6  
             __size_of_ser_int 000D          __end_of_CheckResponse 0ED6                  __size_of_main 013A  
                __size_of_show 001F                       _humidity 005B                LCD_Command@cmnd 0072  
             ___lwmod@dividend 0072                      stringcode 0800      show_multidigits@remainder 002C  
            ?_show_multidigits 0079           __size_of_StartSignal 001A             ??_show_multidigits 007B  
                  _temperature 0059                       tx_sn@val 0079                ___lwmod@divisor 0070  
              ___lwmod@counter 0075                       stringdir 0800                       stringtab 0800  
                 ___aldiv@sign 0029   __end_of_intdigits_chardigits 0E6A  
