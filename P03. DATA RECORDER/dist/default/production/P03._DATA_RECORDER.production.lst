

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 05 15:25:28 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190                           
   191                           	psect	idataBANK0
   192  0EDA                     __pidataBANK0:
   193                           
   194                           ;initializer for _sn
   195  0EDA  3401               	retlw	1
   196  0EDB  3400               	retlw	0
   197  001E                     _ADRESH	set	30
   198  001F                     _ADCON0	set	31
   199  0008                     _PORTD	set	8
   200  001A                     _RCREG	set	26
   201  0019                     _TXREG	set	25
   202  0018                     _RCSTA	set	24
   203  0006                     _PORTB	set	6
   204  00FA                     _GO_nDONE	set	250
   205  0040                     _RD0	set	64
   206  0065                     _RCIF	set	101
   207  0064                     _TXIF	set	100
   208  0039                     _RC1	set	57
   209  0038                     _RC0	set	56
   210  009E                     _ADRESL	set	158
   211  009F                     _ADCON1	set	159
   212  0087                     _TRISC	set	135
   213  0086                     _TRISB	set	134
   214  0088                     _TRISD	set	136
   215  0099                     _SPBRG	set	153
   216  0098                     _TXSTA	set	152
   217                           
   218                           	psect	strings
   219  0003                     __pstrings:
   220  0003                     stringtab:
   221  0003                     __stringtab:
   222  0003                     stringcode:	
   223                           ;	String table - string pointers are 1 byte each
   224                           
   225  0003                     stringdir:
   226  0003  3000               	movlw	high stringdir
   227  0004  008A               	movwf	10
   228  0005  0804               	movf	4,w
   229  0006  0A84               	incf	4,f
   230  0007  0782               	addwf	2,f
   231  0008                     __stringbase:
   232  0008  3400               	retlw	0
   233  0009                     __end_of__stringtab:
   234  0009                     STR_1:
   235  0009  3420               	retlw	32	;' '
   236  000A  3400               	retlw	0
   237                           
   238                           	psect	cinit
   239  07E7                     start_initialization:	
   240                           ; #config settings
   241                           
   242  07E7                     __initialization:
   243                           
   244                           ; Initialize objects allocated to BANK0
   245  07E7  120A  158A  26DA  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   246  07EC  00D6               	movwf	__pdataBANK0& (0+127)
   247  07ED  120A  158A  26DB  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   248  07F2  00D7               	movwf	(__pdataBANK0+1)& (0+127)
   249                           
   250                           ; Clear objects allocated to BANK0
   251  07F3  1383               	bcf	3,7	;select IRP bank0
   252  07F4  3043               	movlw	low __pbssBANK0
   253  07F5  0084               	movwf	4
   254  07F6  3056               	movlw	low (__pbssBANK0+19)
   255  07F7  120A  158A  26DC  120A  118A  	fcall	clear_ram0
   256  07FC                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  07FC                     __end_of__initialization:
   260  07FC  0183               	clrf	3
   261  07FD  120A  118A  2B67   	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	bssBANK0
   264  0043                     __pbssBANK0:
   265  0043                     _AV:
   266  0043                     	ds	8
   267  004B                     _avv:
   268  004B                     	ds	3
   269  004E                     _Summation:
   270  004E                     	ds	1
   271  004F                     _check_bit:
   272  004F                     	ds	1
   273  0050                     _Temp_byte_2:
   274  0050                     	ds	1
   275  0051                     _Temp_byte_1:
   276  0051                     	ds	1
   277  0052                     _RH_byte_2:
   278  0052                     	ds	1
   279  0053                     _RH_byte_1:
   280  0053                     	ds	1
   281  0054                     _Temp:
   282  0054                     	ds	1
   283  0055                     _Humidity:
   284  0055                     	ds	1
   285                           
   286                           	psect	dataBANK0
   287  0056                     __pdataBANK0:
   288  0056                     _sn:
   289  0056                     	ds	2
   290                           
   291                           	psect	clrtext
   292  0EDC                     clear_ram0:	
   293                           ;	Called with FSR containing the base address, and
   294                           ;	W with the last address+1
   295                           
   296  0EDC  0064               	clrwdt	;clear the watchdog before getting into this loop
   297  0EDD                     clrloop0:
   298  0EDD  0180               	clrf	0	;clear RAM location pointed to by FSR
   299  0EDE  0A84               	incf	4,f	;increment pointer
   300  0EDF  0604               	xorwf	4,w	;XOR with final address
   301  0EE0  1903               	btfsc	3,2	;have we reached the end yet?
   302  0EE1  3400               	retlw	0	;all done for this memory range, return
   303  0EE2  0604               	xorwf	4,w	;XOR again to restore value
   304  0EE3  2EDD               	goto	clrloop0	;do the next byte
   305                           
   306                           	psect	cstackCOMMON
   307  0070                     __pcstackCOMMON:
   308  0070                     ?_intdigits_chardigits:
   309  0070                     ?_ADC_Init:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ??_ADC_Init:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_LCD_Command:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ??_LCD_Command:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_LCD_Char:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ??_LCD_Char:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_LCD_init:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_ser_int:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ??_ser_int:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_tx:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_tx:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_dht11_init:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_dht11_init:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_read_dht11:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_read_dht11:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?___awdiv:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?___awmod:	
   361                           ; 2 bytes @ 0x0
   362                           
   363  0070                     ?___lwdiv:	
   364                           ; 2 bytes @ 0x0
   365                           
   366  0070                     ?___lwmod:	
   367                           ; 2 bytes @ 0x0
   368                           
   369  0070                     ?___lmul:	
   370                           ; 2 bytes @ 0x0
   371                           
   372  0070                     tx@a:	
   373                           ; 4 bytes @ 0x0
   374                           
   375  0070                     intdigits_chardigits@a:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ___awdiv@divisor:	
   379                           ; 2 bytes @ 0x0
   380                           
   381  0070                     ___awmod@divisor:	
   382                           ; 2 bytes @ 0x0
   383                           
   384  0070                     ___lwdiv@divisor:	
   385                           ; 2 bytes @ 0x0
   386                           
   387  0070                     ___lwmod@divisor:	
   388                           ; 2 bytes @ 0x0
   389                           
   390  0070                     ___lmul@multiplier:	
   391                           ; 2 bytes @ 0x0
   392                           
   393                           
   394                           ; 4 bytes @ 0x0
   395  0070                     	ds	2
   396  0072                     LCD_Command@cmnd:
   397  0072                     LCD_Char@data:	
   398                           ; 1 bytes @ 0x2
   399                           
   400  0072                     read_dht11@data:	
   401                           ; 1 bytes @ 0x2
   402                           
   403  0072                     intdigits_chardigits@b:	
   404                           ; 1 bytes @ 0x2
   405                           
   406  0072                     ___awdiv@dividend:	
   407                           ; 2 bytes @ 0x2
   408                           
   409  0072                     ___awmod@dividend:	
   410                           ; 2 bytes @ 0x2
   411                           
   412  0072                     ___lwdiv@dividend:	
   413                           ; 2 bytes @ 0x2
   414                           
   415  0072                     ___lwmod@dividend:	
   416                           ; 2 bytes @ 0x2
   417                           
   418                           
   419                           ; 2 bytes @ 0x2
   420  0072                     	ds	1
   421  0073                     ??_LCD_init:
   422  0073                     read_dht11@for_count:	
   423                           ; 1 bytes @ 0x3
   424                           
   425                           
   426                           ; 1 bytes @ 0x3
   427  0073                     	ds	1
   428  0074                     ??___awdiv:
   429  0074                     ??___awmod:	
   430                           ; 1 bytes @ 0x4
   431                           
   432  0074                     ??___lwdiv:	
   433                           ; 1 bytes @ 0x4
   434                           
   435  0074                     ??___lwmod:	
   436                           ; 1 bytes @ 0x4
   437                           
   438  0074                     intdigits_chardigits@c:	
   439                           ; 1 bytes @ 0x4
   440                           
   441  0074                     ___lmul@multiplicand:	
   442                           ; 2 bytes @ 0x4
   443                           
   444                           
   445                           ; 4 bytes @ 0x4
   446  0074                     	ds	1
   447  0075                     ___awdiv@counter:
   448  0075                     ___awmod@counter:	
   449                           ; 1 bytes @ 0x5
   450                           
   451  0075                     ___lwmod@counter:	
   452                           ; 1 bytes @ 0x5
   453                           
   454  0075                     ___lwdiv@quotient:	
   455                           ; 1 bytes @ 0x5
   456                           
   457                           
   458                           ; 2 bytes @ 0x5
   459  0075                     	ds	1
   460  0076                     ??_intdigits_chardigits:
   461  0076                     ___awdiv@sign:	
   462                           ; 1 bytes @ 0x6
   463                           
   464  0076                     ___awmod@sign:	
   465                           ; 1 bytes @ 0x6
   466                           
   467                           
   468                           ; 1 bytes @ 0x6
   469  0076                     	ds	1
   470  0077                     ___lwdiv@counter:
   471  0077                     ___awdiv@quotient:	
   472                           ; 1 bytes @ 0x7
   473                           
   474                           
   475                           ; 2 bytes @ 0x7
   476  0077                     	ds	1
   477  0078                     ??___lmul:
   478                           
   479                           ; 1 bytes @ 0x8
   480  0078                     	ds	1
   481  0079                     ?_show_multidigits:
   482  0079                     ?_tx_sn:	
   483                           ; 1 bytes @ 0x9
   484                           
   485  0079                     show_multidigits@val:	
   486                           ; 1 bytes @ 0x9
   487                           
   488  0079                     tx_sn@val:	
   489                           ; 2 bytes @ 0x9
   490                           
   491  0079                     ___lmul@product:	
   492                           ; 2 bytes @ 0x9
   493                           
   494                           
   495                           ; 4 bytes @ 0x9
   496  0079                     	ds	2
   497  007B                     ??_show_multidigits:
   498  007B                     ??_tx_sn:	
   499                           ; 1 bytes @ 0xB
   500                           
   501                           
   502                           ; 1 bytes @ 0xB
   503  007B                     	ds	2
   504  007D                     ??___aldiv:
   505                           
   506                           ; 1 bytes @ 0xD
   507  007D                     	ds	1
   508  007E                     ??_LCD_num:
   509                           
   510                           	psect	cstackBANK0
   511  0020                     __pcstackBANK0:	
   512                           ; 1 bytes @ 0xE
   513                           
   514  0020                     ?___aldiv:
   515  0020                     show_multidigits@digit4:	
   516                           ; 4 bytes @ 0x0
   517                           
   518  0020                     tx_sn@digit4:	
   519                           ; 2 bytes @ 0x0
   520                           
   521  0020                     ___aldiv@divisor:	
   522                           ; 2 bytes @ 0x0
   523                           
   524                           
   525                           ; 4 bytes @ 0x0
   526  0020                     	ds	2
   527  0022                     show_multidigits@result:
   528  0022                     tx_sn@result:	
   529                           ; 2 bytes @ 0x2
   530                           
   531                           
   532                           ; 2 bytes @ 0x2
   533  0022                     	ds	2
   534  0024                     show_multidigits@digit3:
   535  0024                     tx_sn@digit3:	
   536                           ; 2 bytes @ 0x4
   537                           
   538  0024                     ___aldiv@dividend:	
   539                           ; 2 bytes @ 0x4
   540                           
   541                           
   542                           ; 4 bytes @ 0x4
   543  0024                     	ds	2
   544  0026                     show_multidigits@digit1:
   545  0026                     tx_sn@digit1:	
   546                           ; 2 bytes @ 0x6
   547                           
   548                           
   549                           ; 2 bytes @ 0x6
   550  0026                     	ds	2
   551  0028                     ___aldiv@counter:
   552  0028                     show_multidigits@digit2:	
   553                           ; 1 bytes @ 0x8
   554                           
   555  0028                     tx_sn@digit2:	
   556                           ; 2 bytes @ 0x8
   557                           
   558                           
   559                           ; 2 bytes @ 0x8
   560  0028                     	ds	1
   561  0029                     ___aldiv@sign:
   562                           
   563                           ; 1 bytes @ 0x9
   564  0029                     	ds	1
   565  002A                     show_multidigits@result1:
   566  002A                     tx_sn@result1:	
   567                           ; 2 bytes @ 0xA
   568                           
   569  002A                     ___aldiv@quotient:	
   570                           ; 2 bytes @ 0xA
   571                           
   572                           
   573                           ; 4 bytes @ 0xA
   574  002A                     	ds	2
   575  002C                     show_multidigits@remainder:
   576  002C                     tx_sn@remainder:	
   577                           ; 2 bytes @ 0xC
   578                           
   579                           
   580                           ; 2 bytes @ 0xC
   581  002C                     	ds	2
   582  002E                     ?_LCD_num:
   583  002E                     LCD_num@val:	
   584                           ; 1 bytes @ 0xE
   585                           
   586                           
   587                           ; 4 bytes @ 0xE
   588  002E                     	ds	4
   589  0032                     LCD_num@digit1:
   590                           
   591                           ; 2 bytes @ 0x12
   592  0032                     	ds	2
   593  0034                     LCD_num@digit2:
   594                           
   595                           ; 2 bytes @ 0x14
   596  0034                     	ds	2
   597  0036                     LCD_num@digit3:
   598                           
   599                           ; 2 bytes @ 0x16
   600  0036                     	ds	2
   601  0038                     LCD_num@result:
   602                           
   603                           ; 2 bytes @ 0x18
   604  0038                     	ds	2
   605  003A                     LCD_num@result1:
   606                           
   607                           ; 2 bytes @ 0x1A
   608  003A                     	ds	2
   609  003C                     LCD_num@remainder:
   610                           
   611                           ; 2 bytes @ 0x1C
   612  003C                     	ds	2
   613  003E                     ??_main:
   614                           
   615                           ; 1 bytes @ 0x1E
   616  003E                     	ds	3
   617  0041                     main@i:
   618                           
   619                           ; 1 bytes @ 0x21
   620  0041                     	ds	1
   621  0042                     main@j:
   622                           
   623                           ; 1 bytes @ 0x22
   624  0042                     	ds	1
   625                           
   626                           	psect	maintext
   627  0367                     __pmaintext:	
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 30 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  j               1   34[BANK0 ] unsigned char 
   638 ;;  i               1   33[BANK0 ] unsigned char 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : B00/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       2       0       0       0
   650 ;;      Temps:          0       3       0       0       0
   651 ;;      Totals:         0       5       0       0       0
   652 ;;Total ram usage:        5 bytes
   653 ;; Hardware stack levels required when called: 2
   654 ;; This function calls:
   655 ;;		_ADC_Init
   656 ;;		_LCD_Char
   657 ;;		_LCD_Command
   658 ;;		_LCD_init
   659 ;;		_LCD_num
   660 ;;		_dht11_init
   661 ;;		_read_dht11
   662 ;;		_ser_int
   663 ;;		_show_multidigits
   664 ;;		_tx
   665 ;;		_tx_sn
   666 ;; This function is called by:
   667 ;;		Startup code after reset
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _main
   673  0367                     _main:
   674  0367                     l1695:	
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   677                           
   678                           
   679                           ;main.c: 32:     TRISB =0x00;
   680  0367  1683               	bsf	3,5	;RP0=1, select bank1
   681  0368  1303               	bcf	3,6	;RP1=0, select bank1
   682  0369  0186               	clrf	6	;volatile
   683                           
   684                           ;main.c: 33:     TRISC =0x00;
   685  036A  0187               	clrf	7	;volatile
   686  036B                     l1697:
   687                           
   688                           ;main.c: 34:     TRISD =0x01;
   689  036B  3001               	movlw	1
   690  036C  0088               	movwf	8	;volatile
   691  036D                     l1699:
   692                           
   693                           ;main.c: 36:     LCD_init();
   694  036D  120A  158A  2718  120A  118A  	fcall	_LCD_init
   695  0372                     l1701:
   696                           
   697                           ;main.c: 37:     ser_int();
   698  0372  120A  158A  26EF  120A  118A  	fcall	_ser_int
   699  0377                     l1703:
   700                           
   701                           ;main.c: 39:     {;main.c: 40:         ADC_Init ();
   702  0377  120A  118A  2140  120A  118A  	fcall	_ADC_Init
   703  037C                     l1705:
   704                           
   705                           ;main.c: 41:         GO_nDONE=1;
   706  037C  1283               	bcf	3,5	;RP0=0, select bank0
   707  037D  1303               	bcf	3,6	;RP1=0, select bank0
   708  037E  151F               	bsf	31,2	;volatile
   709  037F                     l151:	
   710                           ;main.c: 42:         while(GO_nDONE==1);
   711                           
   712  037F  191F               	btfsc	31,2	;volatile
   713  0380  2B82               	goto	u1541
   714  0381  2B83               	goto	u1540
   715  0382                     u1541:
   716  0382  2B7F               	goto	l151
   717  0383                     u1540:
   718  0383                     l1707:
   719                           
   720                           ;main.c: 43:         _delay((unsigned long)((10)*(20000000/4000.0)));
   721  0383  3041               	movlw	65
   722  0384  1283               	bcf	3,5	;RP0=0, select bank0
   723  0385  1303               	bcf	3,6	;RP1=0, select bank0
   724  0386  00BF               	movwf	??_main+1
   725  0387  30ED               	movlw	237
   726  0388  00BE               	movwf	??_main
   727  0389                     u1607:
   728  0389  0BBE               	decfsz	??_main,f
   729  038A  2B89               	goto	u1607
   730  038B  0BBF               	decfsz	??_main+1,f
   731  038C  2B89               	goto	u1607
   732  038D  2B8E               	nop2
   733  038E                     l1709:
   734                           
   735                           ;main.c: 45:         tx_sn(sn);
   736  038E  1283               	bcf	3,5	;RP0=0, select bank0
   737  038F  1303               	bcf	3,6	;RP1=0, select bank0
   738  0390  0857               	movf	_sn+1,w
   739  0391  00FA               	movwf	tx_sn@val+1
   740  0392  0856               	movf	_sn,w
   741  0393  00F9               	movwf	tx_sn@val
   742  0394  120A  118A  2655  120A  118A  	fcall	_tx_sn
   743  0399                     l1711:
   744                           
   745                           ;main.c: 46:         tx(')');
   746  0399  3029               	movlw	41
   747  039A  120A  158A  26E4  120A  118A  	fcall	_tx
   748  039F                     l1713:
   749                           
   750                           ;main.c: 49:         for (unsigned char i=0;i<4;i++)
   751  039F  1283               	bcf	3,5	;RP0=0, select bank0
   752  03A0  1303               	bcf	3,6	;RP1=0, select bank0
   753  03A1  01C1               	clrf	main@i
   754  03A2                     l1719:
   755                           
   756                           ;main.c: 50:         {;main.c: 51:             LCD_num(AV[i]);
   757  03A2  0841               	movf	main@i,w
   758  03A3  00BE               	movwf	??_main
   759  03A4  073E               	addwf	??_main,w
   760  03A5  3E43               	addlw	(low (_AV| 0))& (0+255)
   761  03A6  0084               	movwf	4
   762  03A7  1383               	bcf	3,7	;select IRP bank0
   763  03A8  0800               	movf	0,w
   764  03A9  00BF               	movwf	??_main+1
   765  03AA  0A84               	incf	4,f
   766  03AB  0800               	movf	0,w
   767  03AC  00C0               	movwf	??_main+2
   768  03AD  083F               	movf	??_main+1,w
   769  03AE  00AE               	movwf	LCD_num@val
   770  03AF  0840               	movf	??_main+2,w
   771  03B0  00AF               	movwf	LCD_num@val+1
   772  03B1  01B0               	clrf	LCD_num@val+2
   773  03B2  01B1               	clrf	LCD_num@val+3
   774  03B3  120A  118A  22A8  120A  118A  	fcall	_LCD_num
   775  03B8                     l1721:
   776                           
   777                           ;main.c: 52:             LCD_Char(" ");
   778  03B8  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   779  03B9  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
   780  03BE                     l1723:
   781                           
   782                           ;main.c: 53:             for (unsigned char j=0;j<3;j++)
   783  03BE  1283               	bcf	3,5	;RP0=0, select bank0
   784  03BF  1303               	bcf	3,6	;RP1=0, select bank0
   785  03C0  01C2               	clrf	main@j
   786  03C1                     l1729:
   787                           
   788                           ;main.c: 54:             {;main.c: 55:                 tx((avv[j]+0x30));
   789  03C1  0842               	movf	main@j,w
   790  03C2  3E4B               	addlw	(low (_avv| 0))& (0+255)
   791  03C3  0084               	movwf	4
   792  03C4  1383               	bcf	3,7	;select IRP bank0
   793  03C5  0800               	movf	0,w
   794  03C6  3E30               	addlw	48
   795  03C7  120A  158A  26E4  120A  118A  	fcall	_tx
   796  03CC                     l1731:
   797                           
   798                           ;main.c: 56:                 if (j == 0)
   799  03CC  1283               	bcf	3,5	;RP0=0, select bank0
   800  03CD  1303               	bcf	3,6	;RP1=0, select bank0
   801  03CE  0842               	movf	main@j,w
   802  03CF  1D03               	btfss	3,2
   803  03D0  2BD2               	goto	u1551
   804  03D1  2BD3               	goto	u1550
   805  03D2                     u1551:
   806  03D2  2BDA               	goto	l1735
   807  03D3                     u1550:
   808  03D3                     l1733:
   809                           
   810                           ;main.c: 57:                 {;main.c: 58:                     tx('.');
   811  03D3  302E               	movlw	46
   812  03D4  120A  158A  26E4  120A  118A  	fcall	_tx
   813                           
   814                           ;main.c: 59:                 }
   815  03D9  2BE6               	goto	l1739
   816  03DA                     l1735:
   817  03DA  3002               	movlw	2
   818  03DB  0642               	xorwf	main@j,w
   819  03DC  1D03               	btfss	3,2
   820  03DD  2BDF               	goto	u1561
   821  03DE  2BE0               	goto	u1560
   822  03DF                     u1561:
   823  03DF  2BE6               	goto	l1739
   824  03E0                     u1560:
   825  03E0                     l1737:
   826                           
   827                           ;main.c: 61:                 {;main.c: 62:                     tx(',');
   828  03E0  302C               	movlw	44
   829  03E1  120A  158A  26E4  120A  118A  	fcall	_tx
   830  03E6                     l1739:
   831                           
   832                           ;main.c: 64:             }
   833  03E6  3001               	movlw	1
   834  03E7  1283               	bcf	3,5	;RP0=0, select bank0
   835  03E8  1303               	bcf	3,6	;RP1=0, select bank0
   836  03E9  00BE               	movwf	??_main
   837  03EA  083E               	movf	??_main,w
   838  03EB  07C2               	addwf	main@j,f
   839  03EC                     l1741:
   840  03EC  3003               	movlw	3
   841  03ED  0242               	subwf	main@j,w
   842  03EE  1C03               	skipc
   843  03EF  2BF1               	goto	u1571
   844  03F0  2BF2               	goto	u1570
   845  03F1                     u1571:
   846  03F1  2BC1               	goto	l1729
   847  03F2                     u1570:
   848  03F2                     l1743:
   849                           
   850                           ;main.c: 66:             _delay((unsigned long)((100)*(20000000/4000.0)));
   851  03F2  3003               	movlw	3
   852  03F3  1283               	bcf	3,5	;RP0=0, select bank0
   853  03F4  1303               	bcf	3,6	;RP1=0, select bank0
   854  03F5  00C0               	movwf	??_main+2
   855  03F6  308A               	movlw	138
   856  03F7  00BF               	movwf	??_main+1
   857  03F8  3055               	movlw	85
   858  03F9  00BE               	movwf	??_main
   859  03FA                     u1617:
   860  03FA  0BBE               	decfsz	??_main,f
   861  03FB  2BFA               	goto	u1617
   862  03FC  0BBF               	decfsz	??_main+1,f
   863  03FD  2BFA               	goto	u1617
   864  03FE  0BC0               	decfsz	??_main+2,f
   865  03FF  2BFA               	goto	u1617
   866  0400                     l1745:
   867                           
   868                           ;main.c: 67:         }
   869  0400  3001               	movlw	1
   870  0401  1283               	bcf	3,5	;RP0=0, select bank0
   871  0402  1303               	bcf	3,6	;RP1=0, select bank0
   872  0403  00BE               	movwf	??_main
   873  0404  083E               	movf	??_main,w
   874  0405  07C1               	addwf	main@i,f
   875  0406                     l1747:
   876  0406  3004               	movlw	4
   877  0407  0241               	subwf	main@i,w
   878  0408  1C03               	skipc
   879  0409  2C0B               	goto	u1581
   880  040A  2C0C               	goto	u1580
   881  040B                     u1581:
   882  040B  2BA2               	goto	l1719
   883  040C                     u1580:
   884  040C                     l1749:
   885                           
   886                           ;main.c: 73:         dht11_init();
   887  040C  120A  158A  26FC  120A  118A  	fcall	_dht11_init
   888  0411                     l1751:
   889                           
   890                           ;main.c: 75:         check_bit = 1;
   891  0411  1283               	bcf	3,5	;RP0=0, select bank0
   892  0412  1303               	bcf	3,6	;RP1=0, select bank0
   893  0413  01CF               	clrf	_check_bit
   894  0414  0ACF               	incf	_check_bit,f
   895  0415                     l1753:
   896                           
   897                           ;main.c: 76:         if(check_bit == 1)
   898  0415  034F               	decf	_check_bit,w
   899  0416  1D03               	btfss	3,2
   900  0417  2C19               	goto	u1591
   901  0418  2C1A               	goto	u1590
   902  0419                     u1591:
   903  0419  2C9C               	goto	l161
   904  041A                     u1590:
   905  041A                     l1755:
   906                           
   907                           ;main.c: 77:         {;main.c: 78:             LCD_Command(0x01);
   908  041A  3001               	movlw	1
   909  041B  120A  158A  2780  120A  118A  	fcall	_LCD_Command
   910                           
   911                           ;main.c: 79:             LCD_Command(0x80);
   912  0420  3080               	movlw	128
   913  0421  120A  158A  2780  120A  118A  	fcall	_LCD_Command
   914                           
   915                           ;main.c: 80:             show_multidigits(check_bit);
   916  0426  1283               	bcf	3,5	;RP0=0, select bank0
   917  0427  1303               	bcf	3,6	;RP1=0, select bank0
   918  0428  084F               	movf	_check_bit,w
   919  0429  00BE               	movwf	??_main
   920  042A  01BF               	clrf	??_main+1
   921  042B  083E               	movf	??_main,w
   922  042C  00F9               	movwf	show_multidigits@val
   923  042D  083F               	movf	??_main+1,w
   924  042E  00FA               	movwf	show_multidigits@val+1
   925  042F  120A  118A  24C3  120A  118A  	fcall	_show_multidigits
   926                           
   927                           ;main.c: 81:             RH_byte_1 = read_dht11();
   928  0434  120A  118A  201B  120A  118A  	fcall	_read_dht11
   929  0439  1283               	bcf	3,5	;RP0=0, select bank0
   930  043A  1303               	bcf	3,6	;RP1=0, select bank0
   931  043B  00BE               	movwf	??_main
   932  043C  083E               	movf	??_main,w
   933  043D  00D3               	movwf	_RH_byte_1
   934                           
   935                           ;main.c: 82:             RH_byte_2 = read_dht11();
   936  043E  120A  118A  201B  120A  118A  	fcall	_read_dht11
   937  0443  1283               	bcf	3,5	;RP0=0, select bank0
   938  0444  1303               	bcf	3,6	;RP1=0, select bank0
   939  0445  00BE               	movwf	??_main
   940  0446  083E               	movf	??_main,w
   941  0447  00D2               	movwf	_RH_byte_2
   942                           
   943                           ;main.c: 83:             Temp_byte_1 = read_dht11();
   944  0448  120A  118A  201B  120A  118A  	fcall	_read_dht11
   945  044D  1283               	bcf	3,5	;RP0=0, select bank0
   946  044E  1303               	bcf	3,6	;RP1=0, select bank0
   947  044F  00BE               	movwf	??_main
   948  0450  083E               	movf	??_main,w
   949  0451  00D1               	movwf	_Temp_byte_1
   950                           
   951                           ;main.c: 84:             Temp_byte_2 = read_dht11();
   952  0452  120A  118A  201B  120A  118A  	fcall	_read_dht11
   953  0457  1283               	bcf	3,5	;RP0=0, select bank0
   954  0458  1303               	bcf	3,6	;RP1=0, select bank0
   955  0459  00BE               	movwf	??_main
   956  045A  083E               	movf	??_main,w
   957  045B  00D0               	movwf	_Temp_byte_2
   958                           
   959                           ;main.c: 85:             Summation = read_dht11();
   960  045C  120A  118A  201B  120A  118A  	fcall	_read_dht11
   961  0461  1283               	bcf	3,5	;RP0=0, select bank0
   962  0462  1303               	bcf	3,6	;RP1=0, select bank0
   963  0463  00BE               	movwf	??_main
   964  0464  083E               	movf	??_main,w
   965  0465  00CE               	movwf	_Summation
   966  0466                     l1757:
   967                           
   968                           ;main.c: 89:                 Humidity = Temp_byte_1;
   969  0466  0851               	movf	_Temp_byte_1,w
   970  0467  00BE               	movwf	??_main
   971  0468  083E               	movf	??_main,w
   972  0469  00D5               	movwf	_Humidity
   973  046A                     l1759:
   974                           
   975                           ;main.c: 90:                 Temp = RH_byte_1;
   976  046A  0853               	movf	_RH_byte_1,w
   977  046B  00BE               	movwf	??_main
   978  046C  083E               	movf	??_main,w
   979  046D  00D4               	movwf	_Temp
   980                           
   981                           ;main.c: 92:                 LCD_Command(0x01);
   982  046E  3001               	movlw	1
   983  046F  120A  158A  2780  120A  118A  	fcall	_LCD_Command
   984                           
   985                           ;main.c: 93:                 LCD_Command(0x80);
   986  0474  3080               	movlw	128
   987  0475  120A  158A  2780  120A  118A  	fcall	_LCD_Command
   988                           
   989                           ;main.c: 94:                 show_multidigits(Humidity);
   990  047A  1283               	bcf	3,5	;RP0=0, select bank0
   991  047B  1303               	bcf	3,6	;RP1=0, select bank0
   992  047C  0855               	movf	_Humidity,w
   993  047D  00BE               	movwf	??_main
   994  047E  01BF               	clrf	??_main+1
   995  047F  083E               	movf	??_main,w
   996  0480  00F9               	movwf	show_multidigits@val
   997  0481  083F               	movf	??_main+1,w
   998  0482  00FA               	movwf	show_multidigits@val+1
   999  0483  120A  118A  24C3  120A  118A  	fcall	_show_multidigits
  1000                           
  1001                           ;main.c: 95:                 LCD_Command(0xC0);
  1002  0488  30C0               	movlw	192
  1003  0489  120A  158A  2780  120A  118A  	fcall	_LCD_Command
  1004                           
  1005                           ;main.c: 96:                 show_multidigits(Temp);
  1006  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1007  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0490  0854               	movf	_Temp,w
  1009  0491  00BE               	movwf	??_main
  1010  0492  01BF               	clrf	??_main+1
  1011  0493  083E               	movf	??_main,w
  1012  0494  00F9               	movwf	show_multidigits@val
  1013  0495  083F               	movf	??_main+1,w
  1014  0496  00FA               	movwf	show_multidigits@val+1
  1015  0497  120A  118A  24C3  120A  118A  	fcall	_show_multidigits
  1016  049C                     l161:	
  1017                           ;main.c: 98:         }
  1018                           
  1019                           
  1020                           ;main.c: 101:         tx(0x0d);
  1021  049C  300D               	movlw	13
  1022  049D  120A  158A  26E4  120A  118A  	fcall	_tx
  1023                           
  1024                           ;main.c: 102:         LCD_Command(0x01);
  1025  04A2  3001               	movlw	1
  1026  04A3  120A  158A  2780  120A  118A  	fcall	_LCD_Command
  1027  04A8                     l1761:
  1028                           
  1029                           ;main.c: 103:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1030  04A8  301A               	movlw	26
  1031  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1032  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1033  04AB  00C0               	movwf	??_main+2
  1034  04AC  305E               	movlw	94
  1035  04AD  00BF               	movwf	??_main+1
  1036  04AE  306D               	movlw	109
  1037  04AF  00BE               	movwf	??_main
  1038  04B0                     u1627:
  1039  04B0  0BBE               	decfsz	??_main,f
  1040  04B1  2CB0               	goto	u1627
  1041  04B2  0BBF               	decfsz	??_main+1,f
  1042  04B3  2CB0               	goto	u1627
  1043  04B4  0BC0               	decfsz	??_main+2,f
  1044  04B5  2CB0               	goto	u1627
  1045  04B6  2CB7               	nop2
  1046  04B7                     l1763:
  1047                           
  1048                           ;main.c: 104:         sn += 1;
  1049  04B7  3001               	movlw	1
  1050  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1051  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1052  04BA  07D6               	addwf	_sn,f
  1053  04BB  1803               	skipnc
  1054  04BC  0AD7               	incf	_sn+1,f
  1055  04BD  3000               	movlw	0
  1056  04BE  07D7               	addwf	_sn+1,f
  1057  04BF  2B77               	goto	l1703
  1058  04C0  120A  118A  2800   	ljmp	start
  1059  04C3                     __end_of_main:
  1060                           
  1061                           	psect	text1
  1062  0655                     __ptext1:	
  1063 ;; *************** function _tx_sn *****************
  1064 ;; Defined at:
  1065 ;;		line 27 in file "./uart.h"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  val             2    9[COMMON] unsigned int 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  remainder       2   12[BANK0 ] int 
  1070 ;;  result1         2   10[BANK0 ] int 
  1071 ;;  digit2          2    8[BANK0 ] int 
  1072 ;;  digit1          2    6[BANK0 ] int 
  1073 ;;  digit3          2    4[BANK0 ] int 
  1074 ;;  result          2    2[BANK0 ] int 
  1075 ;;  digit4          2    0[BANK0 ] int 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0, pclath, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         2       0       0       0       0
  1086 ;;      Locals:         0      14       0       0       0
  1087 ;;      Temps:          0       0       0       0       0
  1088 ;;      Totals:         2      14       0       0       0
  1089 ;;Total ram usage:       16 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 1
  1092 ;; This function calls:
  1093 ;;		___awdiv
  1094 ;;		___awmod
  1095 ;;		___lwdiv
  1096 ;;		___lwmod
  1097 ;;		_tx
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _tx_sn
  1105  0655                     _tx_sn:
  1106  0655                     l1579:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _tx_sn: [wreg+status,2+status,0+pclath+cstack]
  1109                           
  1110                           
  1111                           ;./uart.h: 27: void tx_sn (unsigned int val);./uart.h: 28: {;./uart.h: 29:     int remai
      +                          nder, digit1, digit2, digit3, digit4, result, result1;;./uart.h: 30:     if (val<=9)
  1112  0655  3000               	movlw	0
  1113  0656  027A               	subwf	tx_sn@val+1,w
  1114  0657  300A               	movlw	10
  1115  0658  1903               	skipnz
  1116  0659  0279               	subwf	tx_sn@val,w
  1117  065A  1803               	skipnc
  1118  065B  2E5D               	goto	u1381
  1119  065C  2E5E               	goto	u1380
  1120  065D                     u1381:
  1121  065D  2E66               	goto	l1583
  1122  065E                     u1380:
  1123  065E                     l1581:
  1124                           
  1125                           ;./uart.h: 31:     {;./uart.h: 32:        tx(val+0x30);
  1126  065E  0879               	movf	tx_sn@val,w
  1127  065F  3E30               	addlw	48
  1128  0660  120A  158A  26E4  120A  118A  	fcall	_tx
  1129                           
  1130                           ;./uart.h: 33:     }
  1131  0665  2FE6               	goto	l104
  1132  0666                     l1583:
  1133  0666  3000               	movlw	0
  1134  0667  027A               	subwf	tx_sn@val+1,w
  1135  0668  300A               	movlw	10
  1136  0669  1903               	skipnz
  1137  066A  0279               	subwf	tx_sn@val,w
  1138  066B  1C03               	skipc
  1139  066C  2E6E               	goto	u1391
  1140  066D  2E6F               	goto	u1390
  1141  066E                     u1391:
  1142  066E  2EB3               	goto	l1597
  1143  066F                     u1390:
  1144  066F                     l1585:
  1145  066F  3000               	movlw	0
  1146  0670  027A               	subwf	tx_sn@val+1,w
  1147  0671  3064               	movlw	100
  1148  0672  1903               	skipnz
  1149  0673  0279               	subwf	tx_sn@val,w
  1150  0674  1803               	skipnc
  1151  0675  2E77               	goto	u1401
  1152  0676  2E78               	goto	u1400
  1153  0677                     u1401:
  1154  0677  2EB3               	goto	l1597
  1155  0678                     u1400:
  1156  0678                     l1587:
  1157                           
  1158                           ;./uart.h: 35:     {;./uart.h: 36:         remainder = val % 10;
  1159  0678  300A               	movlw	10
  1160  0679  00F0               	movwf	___lwmod@divisor
  1161  067A  3000               	movlw	0
  1162  067B  00F1               	movwf	___lwmod@divisor+1
  1163  067C  087A               	movf	tx_sn@val+1,w
  1164  067D  00F3               	movwf	___lwmod@dividend+1
  1165  067E  0879               	movf	tx_sn@val,w
  1166  067F  00F2               	movwf	___lwmod@dividend
  1167  0680  120A  158A  2746  120A  118A  	fcall	___lwmod
  1168  0685  0871               	movf	?___lwmod+1,w
  1169  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0688  00AD               	movwf	tx_sn@remainder+1
  1172  0689  0870               	movf	?___lwmod,w
  1173  068A  00AC               	movwf	tx_sn@remainder
  1174  068B                     l1589:
  1175                           
  1176                           ;./uart.h: 37:         digit1 = remainder;
  1177  068B  082D               	movf	tx_sn@remainder+1,w
  1178  068C  00A7               	movwf	tx_sn@digit1+1
  1179  068D  082C               	movf	tx_sn@remainder,w
  1180  068E  00A6               	movwf	tx_sn@digit1
  1181  068F                     l1591:
  1182                           
  1183                           ;./uart.h: 38:         digit2 = val/10;
  1184  068F  300A               	movlw	10
  1185  0690  00F0               	movwf	___lwdiv@divisor
  1186  0691  3000               	movlw	0
  1187  0692  00F1               	movwf	___lwdiv@divisor+1
  1188  0693  087A               	movf	tx_sn@val+1,w
  1189  0694  00F3               	movwf	___lwdiv@dividend+1
  1190  0695  0879               	movf	tx_sn@val,w
  1191  0696  00F2               	movwf	___lwdiv@dividend
  1192  0697  120A  118A  205D  120A  118A  	fcall	___lwdiv
  1193  069C  0871               	movf	?___lwdiv+1,w
  1194  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1195  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1196  069F  00A9               	movwf	tx_sn@digit2+1
  1197  06A0  0870               	movf	?___lwdiv,w
  1198  06A1  00A8               	movwf	tx_sn@digit2
  1199  06A2                     l1593:
  1200                           
  1201                           ;./uart.h: 39:         tx(digit2+0x30);
  1202  06A2  0828               	movf	tx_sn@digit2,w
  1203  06A3  3E30               	addlw	48
  1204  06A4  120A  158A  26E4  120A  118A  	fcall	_tx
  1205  06A9                     l1595:
  1206                           
  1207                           ;./uart.h: 40:         tx(digit1+0x30);
  1208  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1209  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1210  06AB  0826               	movf	tx_sn@digit1,w
  1211  06AC  3E30               	addlw	48
  1212  06AD  120A  158A  26E4  120A  118A  	fcall	_tx
  1213                           
  1214                           ;./uart.h: 41:     }
  1215  06B2  2FE6               	goto	l104
  1216  06B3                     l1597:
  1217  06B3  3000               	movlw	0
  1218  06B4  027A               	subwf	tx_sn@val+1,w
  1219  06B5  3064               	movlw	100
  1220  06B6  1903               	skipnz
  1221  06B7  0279               	subwf	tx_sn@val,w
  1222  06B8  1C03               	skipc
  1223  06B9  2EBB               	goto	u1411
  1224  06BA  2EBC               	goto	u1410
  1225  06BB                     u1411:
  1226  06BB  2F33               	goto	l1615
  1227  06BC                     u1410:
  1228  06BC                     l1599:
  1229  06BC  3003               	movlw	3
  1230  06BD  027A               	subwf	tx_sn@val+1,w
  1231  06BE  30E8               	movlw	232
  1232  06BF  1903               	skipnz
  1233  06C0  0279               	subwf	tx_sn@val,w
  1234  06C1  1803               	skipnc
  1235  06C2  2EC4               	goto	u1421
  1236  06C3  2EC5               	goto	u1420
  1237  06C4                     u1421:
  1238  06C4  2F33               	goto	l1615
  1239  06C5                     u1420:
  1240  06C5                     l1601:
  1241                           
  1242                           ;./uart.h: 43:     {;./uart.h: 44:         remainder = val % 10;
  1243  06C5  300A               	movlw	10
  1244  06C6  00F0               	movwf	___lwmod@divisor
  1245  06C7  3000               	movlw	0
  1246  06C8  00F1               	movwf	___lwmod@divisor+1
  1247  06C9  087A               	movf	tx_sn@val+1,w
  1248  06CA  00F3               	movwf	___lwmod@dividend+1
  1249  06CB  0879               	movf	tx_sn@val,w
  1250  06CC  00F2               	movwf	___lwmod@dividend
  1251  06CD  120A  158A  2746  120A  118A  	fcall	___lwmod
  1252  06D2  0871               	movf	?___lwmod+1,w
  1253  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1254  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1255  06D5  00AD               	movwf	tx_sn@remainder+1
  1256  06D6  0870               	movf	?___lwmod,w
  1257  06D7  00AC               	movwf	tx_sn@remainder
  1258                           
  1259                           ;./uart.h: 45:         result1 = val /10;
  1260  06D8  300A               	movlw	10
  1261  06D9  00F0               	movwf	___lwdiv@divisor
  1262  06DA  3000               	movlw	0
  1263  06DB  00F1               	movwf	___lwdiv@divisor+1
  1264  06DC  087A               	movf	tx_sn@val+1,w
  1265  06DD  00F3               	movwf	___lwdiv@dividend+1
  1266  06DE  0879               	movf	tx_sn@val,w
  1267  06DF  00F2               	movwf	___lwdiv@dividend
  1268  06E0  120A  118A  205D  120A  118A  	fcall	___lwdiv
  1269  06E5  0871               	movf	?___lwdiv+1,w
  1270  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1271  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1272  06E8  00AB               	movwf	tx_sn@result1+1
  1273  06E9  0870               	movf	?___lwdiv,w
  1274  06EA  00AA               	movwf	tx_sn@result1
  1275  06EB                     l1603:
  1276                           
  1277                           ;./uart.h: 46:         digit1 = remainder;
  1278  06EB  082D               	movf	tx_sn@remainder+1,w
  1279  06EC  00A7               	movwf	tx_sn@digit1+1
  1280  06ED  082C               	movf	tx_sn@remainder,w
  1281  06EE  00A6               	movwf	tx_sn@digit1
  1282  06EF                     l1605:
  1283                           
  1284                           ;./uart.h: 47:         remainder = result1%10;
  1285  06EF  300A               	movlw	10
  1286  06F0  00F0               	movwf	___awmod@divisor
  1287  06F1  3000               	movlw	0
  1288  06F2  00F1               	movwf	___awmod@divisor+1
  1289  06F3  082B               	movf	tx_sn@result1+1,w
  1290  06F4  00F3               	movwf	___awmod@dividend+1
  1291  06F5  082A               	movf	tx_sn@result1,w
  1292  06F6  00F2               	movwf	___awmod@dividend
  1293  06F7  120A  118A  20E7  120A  118A  	fcall	___awmod
  1294  06FC  0871               	movf	?___awmod+1,w
  1295  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1296  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1297  06FF  00AD               	movwf	tx_sn@remainder+1
  1298  0700  0870               	movf	?___awmod,w
  1299  0701  00AC               	movwf	tx_sn@remainder
  1300                           
  1301                           ;./uart.h: 48:         digit2 = remainder;
  1302  0702  082D               	movf	tx_sn@remainder+1,w
  1303  0703  00A9               	movwf	tx_sn@digit2+1
  1304  0704  082C               	movf	tx_sn@remainder,w
  1305  0705  00A8               	movwf	tx_sn@digit2
  1306  0706                     l1607:
  1307                           
  1308                           ;./uart.h: 49:         digit3 = result1/10;
  1309  0706  300A               	movlw	10
  1310  0707  00F0               	movwf	___awdiv@divisor
  1311  0708  3000               	movlw	0
  1312  0709  00F1               	movwf	___awdiv@divisor+1
  1313  070A  082B               	movf	tx_sn@result1+1,w
  1314  070B  00F3               	movwf	___awdiv@dividend+1
  1315  070C  082A               	movf	tx_sn@result1,w
  1316  070D  00F2               	movwf	___awdiv@dividend
  1317  070E  120A  118A  21A4  120A  118A  	fcall	___awdiv
  1318  0713  0871               	movf	?___awdiv+1,w
  1319  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0716  00A5               	movwf	tx_sn@digit3+1
  1322  0717  0870               	movf	?___awdiv,w
  1323  0718  00A4               	movwf	tx_sn@digit3
  1324  0719                     l1609:
  1325                           
  1326                           ;./uart.h: 50:         tx(digit3+0x30);
  1327  0719  0824               	movf	tx_sn@digit3,w
  1328  071A  3E30               	addlw	48
  1329  071B  120A  158A  26E4  120A  118A  	fcall	_tx
  1330  0720                     l1611:
  1331                           
  1332                           ;./uart.h: 51:         tx(digit2+0x30);
  1333  0720  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0721  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0722  0828               	movf	tx_sn@digit2,w
  1336  0723  3E30               	addlw	48
  1337  0724  120A  158A  26E4  120A  118A  	fcall	_tx
  1338  0729                     l1613:
  1339                           
  1340                           ;./uart.h: 52:         tx(digit1+0x30);
  1341  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1342  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1343  072B  0826               	movf	tx_sn@digit1,w
  1344  072C  3E30               	addlw	48
  1345  072D  120A  158A  26E4  120A  118A  	fcall	_tx
  1346                           
  1347                           ;./uart.h: 53:     }
  1348  0732  2FE6               	goto	l104
  1349  0733                     l1615:
  1350  0733  3003               	movlw	3
  1351  0734  027A               	subwf	tx_sn@val+1,w
  1352  0735  30E8               	movlw	232
  1353  0736  1903               	skipnz
  1354  0737  0279               	subwf	tx_sn@val,w
  1355  0738  1C03               	skipc
  1356  0739  2F3B               	goto	u1431
  1357  073A  2F3C               	goto	u1430
  1358  073B                     u1431:
  1359  073B  2FE6               	goto	l100
  1360  073C                     u1430:
  1361  073C                     l1617:
  1362  073C  3027               	movlw	39
  1363  073D  027A               	subwf	tx_sn@val+1,w
  1364  073E  300F               	movlw	15
  1365  073F  1903               	skipnz
  1366  0740  0279               	subwf	tx_sn@val,w
  1367  0741  1803               	skipnc
  1368  0742  2F44               	goto	u1441
  1369  0743  2F45               	goto	u1440
  1370  0744                     u1441:
  1371  0744  2FE6               	goto	l100
  1372  0745                     u1440:
  1373  0745                     l1619:
  1374                           
  1375                           ;./uart.h: 55:     {;./uart.h: 56:         remainder = val % 10;
  1376  0745  300A               	movlw	10
  1377  0746  00F0               	movwf	___lwmod@divisor
  1378  0747  3000               	movlw	0
  1379  0748  00F1               	movwf	___lwmod@divisor+1
  1380  0749  087A               	movf	tx_sn@val+1,w
  1381  074A  00F3               	movwf	___lwmod@dividend+1
  1382  074B  0879               	movf	tx_sn@val,w
  1383  074C  00F2               	movwf	___lwmod@dividend
  1384  074D  120A  158A  2746  120A  118A  	fcall	___lwmod
  1385  0752  0871               	movf	?___lwmod+1,w
  1386  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0755  00AD               	movwf	tx_sn@remainder+1
  1389  0756  0870               	movf	?___lwmod,w
  1390  0757  00AC               	movwf	tx_sn@remainder
  1391                           
  1392                           ;./uart.h: 57:         result1 = val /10;
  1393  0758  300A               	movlw	10
  1394  0759  00F0               	movwf	___lwdiv@divisor
  1395  075A  3000               	movlw	0
  1396  075B  00F1               	movwf	___lwdiv@divisor+1
  1397  075C  087A               	movf	tx_sn@val+1,w
  1398  075D  00F3               	movwf	___lwdiv@dividend+1
  1399  075E  0879               	movf	tx_sn@val,w
  1400  075F  00F2               	movwf	___lwdiv@dividend
  1401  0760  120A  118A  205D  120A  118A  	fcall	___lwdiv
  1402  0765  0871               	movf	?___lwdiv+1,w
  1403  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0768  00AB               	movwf	tx_sn@result1+1
  1406  0769  0870               	movf	?___lwdiv,w
  1407  076A  00AA               	movwf	tx_sn@result1
  1408  076B                     l1621:
  1409                           
  1410                           ;./uart.h: 58:         digit1 = remainder;
  1411  076B  082D               	movf	tx_sn@remainder+1,w
  1412  076C  00A7               	movwf	tx_sn@digit1+1
  1413  076D  082C               	movf	tx_sn@remainder,w
  1414  076E  00A6               	movwf	tx_sn@digit1
  1415  076F                     l1623:
  1416                           
  1417                           ;./uart.h: 59:         remainder = result1%10;
  1418  076F  300A               	movlw	10
  1419  0770  00F0               	movwf	___awmod@divisor
  1420  0771  3000               	movlw	0
  1421  0772  00F1               	movwf	___awmod@divisor+1
  1422  0773  082B               	movf	tx_sn@result1+1,w
  1423  0774  00F3               	movwf	___awmod@dividend+1
  1424  0775  082A               	movf	tx_sn@result1,w
  1425  0776  00F2               	movwf	___awmod@dividend
  1426  0777  120A  118A  20E7  120A  118A  	fcall	___awmod
  1427  077C  0871               	movf	?___awmod+1,w
  1428  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1429  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1430  077F  00AD               	movwf	tx_sn@remainder+1
  1431  0780  0870               	movf	?___awmod,w
  1432  0781  00AC               	movwf	tx_sn@remainder
  1433                           
  1434                           ;./uart.h: 60:         digit2 = remainder;
  1435  0782  082D               	movf	tx_sn@remainder+1,w
  1436  0783  00A9               	movwf	tx_sn@digit2+1
  1437  0784  082C               	movf	tx_sn@remainder,w
  1438  0785  00A8               	movwf	tx_sn@digit2
  1439  0786                     l1625:
  1440                           
  1441                           ;./uart.h: 61:         result = result1/10;
  1442  0786  300A               	movlw	10
  1443  0787  00F0               	movwf	___awdiv@divisor
  1444  0788  3000               	movlw	0
  1445  0789  00F1               	movwf	___awdiv@divisor+1
  1446  078A  082B               	movf	tx_sn@result1+1,w
  1447  078B  00F3               	movwf	___awdiv@dividend+1
  1448  078C  082A               	movf	tx_sn@result1,w
  1449  078D  00F2               	movwf	___awdiv@dividend
  1450  078E  120A  118A  21A4  120A  118A  	fcall	___awdiv
  1451  0793  0871               	movf	?___awdiv+1,w
  1452  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0796  00A3               	movwf	tx_sn@result+1
  1455  0797  0870               	movf	?___awdiv,w
  1456  0798  00A2               	movwf	tx_sn@result
  1457  0799                     l1627:
  1458                           
  1459                           ;./uart.h: 62:         remainder = result%10;
  1460  0799  300A               	movlw	10
  1461  079A  00F0               	movwf	___awmod@divisor
  1462  079B  3000               	movlw	0
  1463  079C  00F1               	movwf	___awmod@divisor+1
  1464  079D  0823               	movf	tx_sn@result+1,w
  1465  079E  00F3               	movwf	___awmod@dividend+1
  1466  079F  0822               	movf	tx_sn@result,w
  1467  07A0  00F2               	movwf	___awmod@dividend
  1468  07A1  120A  118A  20E7  120A  118A  	fcall	___awmod
  1469  07A6  0871               	movf	?___awmod+1,w
  1470  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1471  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1472  07A9  00AD               	movwf	tx_sn@remainder+1
  1473  07AA  0870               	movf	?___awmod,w
  1474  07AB  00AC               	movwf	tx_sn@remainder
  1475                           
  1476                           ;./uart.h: 63:         digit3=remainder;
  1477  07AC  082D               	movf	tx_sn@remainder+1,w
  1478  07AD  00A5               	movwf	tx_sn@digit3+1
  1479  07AE  082C               	movf	tx_sn@remainder,w
  1480  07AF  00A4               	movwf	tx_sn@digit3
  1481  07B0                     l1629:
  1482                           
  1483                           ;./uart.h: 64:         digit4 = result/10;
  1484  07B0  300A               	movlw	10
  1485  07B1  00F0               	movwf	___awdiv@divisor
  1486  07B2  3000               	movlw	0
  1487  07B3  00F1               	movwf	___awdiv@divisor+1
  1488  07B4  0823               	movf	tx_sn@result+1,w
  1489  07B5  00F3               	movwf	___awdiv@dividend+1
  1490  07B6  0822               	movf	tx_sn@result,w
  1491  07B7  00F2               	movwf	___awdiv@dividend
  1492  07B8  120A  118A  21A4  120A  118A  	fcall	___awdiv
  1493  07BD  0871               	movf	?___awdiv+1,w
  1494  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1495  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1496  07C0  00A1               	movwf	tx_sn@digit4+1
  1497  07C1  0870               	movf	?___awdiv,w
  1498  07C2  00A0               	movwf	tx_sn@digit4
  1499  07C3                     l1631:
  1500                           
  1501                           ;./uart.h: 65:         tx(digit4+0x30);
  1502  07C3  0820               	movf	tx_sn@digit4,w
  1503  07C4  3E30               	addlw	48
  1504  07C5  120A  158A  26E4  120A  118A  	fcall	_tx
  1505  07CA                     l1633:
  1506                           
  1507                           ;./uart.h: 66:         tx(digit3+0x30);
  1508  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1509  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1510  07CC  0824               	movf	tx_sn@digit3,w
  1511  07CD  3E30               	addlw	48
  1512  07CE  120A  158A  26E4  120A  118A  	fcall	_tx
  1513  07D3                     l1635:
  1514                           
  1515                           ;./uart.h: 67:         tx(digit2+0x30);
  1516  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1517  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1518  07D5  0828               	movf	tx_sn@digit2,w
  1519  07D6  3E30               	addlw	48
  1520  07D7  120A  158A  26E4  120A  118A  	fcall	_tx
  1521  07DC                     l1637:
  1522                           
  1523                           ;./uart.h: 68:         tx(digit1+0x30);
  1524  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1525  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1526  07DE  0826               	movf	tx_sn@digit1,w
  1527  07DF  3E30               	addlw	48
  1528  07E0  120A  158A  26E4  120A  118A  	fcall	_tx
  1529  07E5  2FE6               	goto	l104
  1530  07E6                     l100:
  1531  07E6                     l104:
  1532  07E6  0008               	return
  1533  07E7                     __end_of_tx_sn:
  1534                           
  1535                           	psect	text2
  1536  0EE4                     __ptext2:	
  1537 ;; *************** function _tx *****************
  1538 ;; Defined at:
  1539 ;;		line 14 in file "./uart.h"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  a               1    wreg     unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  a               1    0[COMMON] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      unsigned char 
  1546 ;; Registers used:
  1547 ;;		wreg
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         1       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0
  1556 ;;      Totals:         1       0       0       0       0
  1557 ;;Total ram usage:        1 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_tx_sn
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _tx
  1569  0EE4                     _tx:
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _tx: [wreg]
  1573                           ;tx@a stored from wreg
  1574  0EE4  00F0               	movwf	tx@a
  1575  0EE5                     l1303:
  1576                           
  1577                           ;./uart.h: 14: unsigned char tx(unsigned char a);./uart.h: 15: {;./uart.h: 16:  TXREG=a;
  1578  0EE5  0870               	movf	tx@a,w
  1579  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0EE8  0099               	movwf	25	;volatile
  1582  0EE9                     l85:	
  1583                           ;./uart.h: 17:  while(!TXIF);
  1584                           
  1585  0EE9  1E0C               	btfss	12,4	;volatile
  1586  0EEA  2EEC               	goto	u831
  1587  0EEB  2EED               	goto	u830
  1588  0EEC                     u831:
  1589  0EEC  2EE9               	goto	l85
  1590  0EED                     u830:
  1591  0EED                     l87:
  1592                           
  1593                           ;./uart.h: 18:  TXIF = 0;
  1594  0EED  120C               	bcf	12,4	;volatile
  1595  0EEE                     l88:
  1596  0EEE  0008               	return
  1597  0EEF                     __end_of_tx:
  1598                           
  1599                           	psect	text3
  1600  04C3                     __ptext3:	
  1601 ;; *************** function _show_multidigits *****************
  1602 ;; Defined at:
  1603 ;;		line 86 in file "./lcd4bit.h"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  val             2    9[COMMON] unsigned int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  remainder       2   12[BANK0 ] int 
  1608 ;;  result1         2   10[BANK0 ] int 
  1609 ;;  digit2          2    8[BANK0 ] int 
  1610 ;;  digit1          2    6[BANK0 ] int 
  1611 ;;  digit3          2    4[BANK0 ] int 
  1612 ;;  result          2    2[BANK0 ] int 
  1613 ;;  digit4          2    0[BANK0 ] int 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         2       0       0       0       0
  1624 ;;      Locals:         0      14       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         2      14       0       0       0
  1627 ;;Total ram usage:       16 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 1
  1630 ;; This function calls:
  1631 ;;		_LCD_Char
  1632 ;;		___awdiv
  1633 ;;		___awmod
  1634 ;;		___lwdiv
  1635 ;;		___lwmod
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           
  1642                           ;psect for function _show_multidigits
  1643  04C3                     _show_multidigits:
  1644  04C3                     l1517:	
  1645                           ;incstack = 0
  1646                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  1647                           
  1648                           
  1649                           ;./lcd4bit.h: 86: void show_multidigits (unsigned int val);./lcd4bit.h: 87: {;./lcd4bit.
      +                          h: 88:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          89:     if (val<=9)
  1650  04C3  3000               	movlw	0
  1651  04C4  027A               	subwf	show_multidigits@val+1,w
  1652  04C5  300A               	movlw	10
  1653  04C6  1903               	skipnz
  1654  04C7  0279               	subwf	show_multidigits@val,w
  1655  04C8  1803               	skipnc
  1656  04C9  2CCB               	goto	u1311
  1657  04CA  2CCC               	goto	u1310
  1658  04CB                     u1311:
  1659  04CB  2CD4               	goto	l1521
  1660  04CC                     u1310:
  1661  04CC                     l1519:
  1662                           
  1663                           ;./lcd4bit.h: 90:     {;./lcd4bit.h: 91:        LCD_Char(val+0x30);
  1664  04CC  0879               	movf	show_multidigits@val,w
  1665  04CD  3E30               	addlw	48
  1666  04CE  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  1667                           
  1668                           ;./lcd4bit.h: 92:     }
  1669  04D3  2E54               	goto	l79
  1670  04D4                     l1521:
  1671  04D4  3000               	movlw	0
  1672  04D5  027A               	subwf	show_multidigits@val+1,w
  1673  04D6  300A               	movlw	10
  1674  04D7  1903               	skipnz
  1675  04D8  0279               	subwf	show_multidigits@val,w
  1676  04D9  1C03               	skipc
  1677  04DA  2CDC               	goto	u1321
  1678  04DB  2CDD               	goto	u1320
  1679  04DC                     u1321:
  1680  04DC  2D21               	goto	l1535
  1681  04DD                     u1320:
  1682  04DD                     l1523:
  1683  04DD  3000               	movlw	0
  1684  04DE  027A               	subwf	show_multidigits@val+1,w
  1685  04DF  3064               	movlw	100
  1686  04E0  1903               	skipnz
  1687  04E1  0279               	subwf	show_multidigits@val,w
  1688  04E2  1803               	skipnc
  1689  04E3  2CE5               	goto	u1331
  1690  04E4  2CE6               	goto	u1330
  1691  04E5                     u1331:
  1692  04E5  2D21               	goto	l1535
  1693  04E6                     u1330:
  1694  04E6                     l1525:
  1695                           
  1696                           ;./lcd4bit.h: 94:     {;./lcd4bit.h: 95:         remainder = val % 10;
  1697  04E6  300A               	movlw	10
  1698  04E7  00F0               	movwf	___lwmod@divisor
  1699  04E8  3000               	movlw	0
  1700  04E9  00F1               	movwf	___lwmod@divisor+1
  1701  04EA  087A               	movf	show_multidigits@val+1,w
  1702  04EB  00F3               	movwf	___lwmod@dividend+1
  1703  04EC  0879               	movf	show_multidigits@val,w
  1704  04ED  00F2               	movwf	___lwmod@dividend
  1705  04EE  120A  158A  2746  120A  118A  	fcall	___lwmod
  1706  04F3  0871               	movf	?___lwmod+1,w
  1707  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1708  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1709  04F6  00AD               	movwf	show_multidigits@remainder+1
  1710  04F7  0870               	movf	?___lwmod,w
  1711  04F8  00AC               	movwf	show_multidigits@remainder
  1712  04F9                     l1527:
  1713                           
  1714                           ;./lcd4bit.h: 96:         digit1 = remainder;
  1715  04F9  082D               	movf	show_multidigits@remainder+1,w
  1716  04FA  00A7               	movwf	show_multidigits@digit1+1
  1717  04FB  082C               	movf	show_multidigits@remainder,w
  1718  04FC  00A6               	movwf	show_multidigits@digit1
  1719  04FD                     l1529:
  1720                           
  1721                           ;./lcd4bit.h: 97:         digit2 = val/10;
  1722  04FD  300A               	movlw	10
  1723  04FE  00F0               	movwf	___lwdiv@divisor
  1724  04FF  3000               	movlw	0
  1725  0500  00F1               	movwf	___lwdiv@divisor+1
  1726  0501  087A               	movf	show_multidigits@val+1,w
  1727  0502  00F3               	movwf	___lwdiv@dividend+1
  1728  0503  0879               	movf	show_multidigits@val,w
  1729  0504  00F2               	movwf	___lwdiv@dividend
  1730  0505  120A  118A  205D  120A  118A  	fcall	___lwdiv
  1731  050A  0871               	movf	?___lwdiv+1,w
  1732  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1733  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1734  050D  00A9               	movwf	show_multidigits@digit2+1
  1735  050E  0870               	movf	?___lwdiv,w
  1736  050F  00A8               	movwf	show_multidigits@digit2
  1737  0510                     l1531:
  1738                           
  1739                           ;./lcd4bit.h: 98:         LCD_Char(digit2+0x48);
  1740  0510  0828               	movf	show_multidigits@digit2,w
  1741  0511  3E48               	addlw	72
  1742  0512  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  1743  0517                     l1533:
  1744                           
  1745                           ;./lcd4bit.h: 99:         LCD_Char(digit1+0x48);
  1746  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0519  0826               	movf	show_multidigits@digit1,w
  1749  051A  3E48               	addlw	72
  1750  051B  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  1751                           
  1752                           ;./lcd4bit.h: 100:     }
  1753  0520  2E54               	goto	l79
  1754  0521                     l1535:
  1755  0521  3000               	movlw	0
  1756  0522  027A               	subwf	show_multidigits@val+1,w
  1757  0523  3064               	movlw	100
  1758  0524  1903               	skipnz
  1759  0525  0279               	subwf	show_multidigits@val,w
  1760  0526  1C03               	skipc
  1761  0527  2D29               	goto	u1341
  1762  0528  2D2A               	goto	u1340
  1763  0529                     u1341:
  1764  0529  2DA1               	goto	l1553
  1765  052A                     u1340:
  1766  052A                     l1537:
  1767  052A  3003               	movlw	3
  1768  052B  027A               	subwf	show_multidigits@val+1,w
  1769  052C  30E8               	movlw	232
  1770  052D  1903               	skipnz
  1771  052E  0279               	subwf	show_multidigits@val,w
  1772  052F  1803               	skipnc
  1773  0530  2D32               	goto	u1351
  1774  0531  2D33               	goto	u1350
  1775  0532                     u1351:
  1776  0532  2DA1               	goto	l1553
  1777  0533                     u1350:
  1778  0533                     l1539:
  1779                           
  1780                           ;./lcd4bit.h: 102:     {;./lcd4bit.h: 103:         remainder = val % 10;
  1781  0533  300A               	movlw	10
  1782  0534  00F0               	movwf	___lwmod@divisor
  1783  0535  3000               	movlw	0
  1784  0536  00F1               	movwf	___lwmod@divisor+1
  1785  0537  087A               	movf	show_multidigits@val+1,w
  1786  0538  00F3               	movwf	___lwmod@dividend+1
  1787  0539  0879               	movf	show_multidigits@val,w
  1788  053A  00F2               	movwf	___lwmod@dividend
  1789  053B  120A  158A  2746  120A  118A  	fcall	___lwmod
  1790  0540  0871               	movf	?___lwmod+1,w
  1791  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0543  00AD               	movwf	show_multidigits@remainder+1
  1794  0544  0870               	movf	?___lwmod,w
  1795  0545  00AC               	movwf	show_multidigits@remainder
  1796                           
  1797                           ;./lcd4bit.h: 104:         result1 = val /10;
  1798  0546  300A               	movlw	10
  1799  0547  00F0               	movwf	___lwdiv@divisor
  1800  0548  3000               	movlw	0
  1801  0549  00F1               	movwf	___lwdiv@divisor+1
  1802  054A  087A               	movf	show_multidigits@val+1,w
  1803  054B  00F3               	movwf	___lwdiv@dividend+1
  1804  054C  0879               	movf	show_multidigits@val,w
  1805  054D  00F2               	movwf	___lwdiv@dividend
  1806  054E  120A  118A  205D  120A  118A  	fcall	___lwdiv
  1807  0553  0871               	movf	?___lwdiv+1,w
  1808  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1809  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1810  0556  00AB               	movwf	show_multidigits@result1+1
  1811  0557  0870               	movf	?___lwdiv,w
  1812  0558  00AA               	movwf	show_multidigits@result1
  1813  0559                     l1541:
  1814                           
  1815                           ;./lcd4bit.h: 105:         digit1 = remainder;
  1816  0559  082D               	movf	show_multidigits@remainder+1,w
  1817  055A  00A7               	movwf	show_multidigits@digit1+1
  1818  055B  082C               	movf	show_multidigits@remainder,w
  1819  055C  00A6               	movwf	show_multidigits@digit1
  1820  055D                     l1543:
  1821                           
  1822                           ;./lcd4bit.h: 106:         remainder = result1%10;
  1823  055D  300A               	movlw	10
  1824  055E  00F0               	movwf	___awmod@divisor
  1825  055F  3000               	movlw	0
  1826  0560  00F1               	movwf	___awmod@divisor+1
  1827  0561  082B               	movf	show_multidigits@result1+1,w
  1828  0562  00F3               	movwf	___awmod@dividend+1
  1829  0563  082A               	movf	show_multidigits@result1,w
  1830  0564  00F2               	movwf	___awmod@dividend
  1831  0565  120A  118A  20E7  120A  118A  	fcall	___awmod
  1832  056A  0871               	movf	?___awmod+1,w
  1833  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1834  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1835  056D  00AD               	movwf	show_multidigits@remainder+1
  1836  056E  0870               	movf	?___awmod,w
  1837  056F  00AC               	movwf	show_multidigits@remainder
  1838                           
  1839                           ;./lcd4bit.h: 107:         digit2 = remainder;
  1840  0570  082D               	movf	show_multidigits@remainder+1,w
  1841  0571  00A9               	movwf	show_multidigits@digit2+1
  1842  0572  082C               	movf	show_multidigits@remainder,w
  1843  0573  00A8               	movwf	show_multidigits@digit2
  1844  0574                     l1545:
  1845                           
  1846                           ;./lcd4bit.h: 108:         digit3 = result1/10;
  1847  0574  300A               	movlw	10
  1848  0575  00F0               	movwf	___awdiv@divisor
  1849  0576  3000               	movlw	0
  1850  0577  00F1               	movwf	___awdiv@divisor+1
  1851  0578  082B               	movf	show_multidigits@result1+1,w
  1852  0579  00F3               	movwf	___awdiv@dividend+1
  1853  057A  082A               	movf	show_multidigits@result1,w
  1854  057B  00F2               	movwf	___awdiv@dividend
  1855  057C  120A  118A  21A4  120A  118A  	fcall	___awdiv
  1856  0581  0871               	movf	?___awdiv+1,w
  1857  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0584  00A5               	movwf	show_multidigits@digit3+1
  1860  0585  0870               	movf	?___awdiv,w
  1861  0586  00A4               	movwf	show_multidigits@digit3
  1862  0587                     l1547:
  1863                           
  1864                           ;./lcd4bit.h: 109:         LCD_Char(digit3+0x30);
  1865  0587  0824               	movf	show_multidigits@digit3,w
  1866  0588  3E30               	addlw	48
  1867  0589  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  1868  058E                     l1549:
  1869                           
  1870                           ;./lcd4bit.h: 110:         LCD_Char(digit2+0x30);
  1871  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1872  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0590  0828               	movf	show_multidigits@digit2,w
  1874  0591  3E30               	addlw	48
  1875  0592  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  1876  0597                     l1551:
  1877                           
  1878                           ;./lcd4bit.h: 111:         LCD_Char(digit1+0x30);
  1879  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0599  0826               	movf	show_multidigits@digit1,w
  1882  059A  3E30               	addlw	48
  1883  059B  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  1884                           
  1885                           ;./lcd4bit.h: 112:     }
  1886  05A0  2E54               	goto	l79
  1887  05A1                     l1553:
  1888  05A1  3003               	movlw	3
  1889  05A2  027A               	subwf	show_multidigits@val+1,w
  1890  05A3  30E8               	movlw	232
  1891  05A4  1903               	skipnz
  1892  05A5  0279               	subwf	show_multidigits@val,w
  1893  05A6  1C03               	skipc
  1894  05A7  2DA9               	goto	u1361
  1895  05A8  2DAA               	goto	u1360
  1896  05A9                     u1361:
  1897  05A9  2E54               	goto	l75
  1898  05AA                     u1360:
  1899  05AA                     l1555:
  1900  05AA  3027               	movlw	39
  1901  05AB  027A               	subwf	show_multidigits@val+1,w
  1902  05AC  300F               	movlw	15
  1903  05AD  1903               	skipnz
  1904  05AE  0279               	subwf	show_multidigits@val,w
  1905  05AF  1803               	skipnc
  1906  05B0  2DB2               	goto	u1371
  1907  05B1  2DB3               	goto	u1370
  1908  05B2                     u1371:
  1909  05B2  2E54               	goto	l75
  1910  05B3                     u1370:
  1911  05B3                     l1557:
  1912                           
  1913                           ;./lcd4bit.h: 114:     {;./lcd4bit.h: 115:         remainder = val % 10;
  1914  05B3  300A               	movlw	10
  1915  05B4  00F0               	movwf	___lwmod@divisor
  1916  05B5  3000               	movlw	0
  1917  05B6  00F1               	movwf	___lwmod@divisor+1
  1918  05B7  087A               	movf	show_multidigits@val+1,w
  1919  05B8  00F3               	movwf	___lwmod@dividend+1
  1920  05B9  0879               	movf	show_multidigits@val,w
  1921  05BA  00F2               	movwf	___lwmod@dividend
  1922  05BB  120A  158A  2746  120A  118A  	fcall	___lwmod
  1923  05C0  0871               	movf	?___lwmod+1,w
  1924  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1925  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1926  05C3  00AD               	movwf	show_multidigits@remainder+1
  1927  05C4  0870               	movf	?___lwmod,w
  1928  05C5  00AC               	movwf	show_multidigits@remainder
  1929                           
  1930                           ;./lcd4bit.h: 116:         result1 = val /10;
  1931  05C6  300A               	movlw	10
  1932  05C7  00F0               	movwf	___lwdiv@divisor
  1933  05C8  3000               	movlw	0
  1934  05C9  00F1               	movwf	___lwdiv@divisor+1
  1935  05CA  087A               	movf	show_multidigits@val+1,w
  1936  05CB  00F3               	movwf	___lwdiv@dividend+1
  1937  05CC  0879               	movf	show_multidigits@val,w
  1938  05CD  00F2               	movwf	___lwdiv@dividend
  1939  05CE  120A  118A  205D  120A  118A  	fcall	___lwdiv
  1940  05D3  0871               	movf	?___lwdiv+1,w
  1941  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1942  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1943  05D6  00AB               	movwf	show_multidigits@result1+1
  1944  05D7  0870               	movf	?___lwdiv,w
  1945  05D8  00AA               	movwf	show_multidigits@result1
  1946  05D9                     l1559:
  1947                           
  1948                           ;./lcd4bit.h: 117:         digit1 = remainder;
  1949  05D9  082D               	movf	show_multidigits@remainder+1,w
  1950  05DA  00A7               	movwf	show_multidigits@digit1+1
  1951  05DB  082C               	movf	show_multidigits@remainder,w
  1952  05DC  00A6               	movwf	show_multidigits@digit1
  1953  05DD                     l1561:
  1954                           
  1955                           ;./lcd4bit.h: 118:         remainder = result1%10;
  1956  05DD  300A               	movlw	10
  1957  05DE  00F0               	movwf	___awmod@divisor
  1958  05DF  3000               	movlw	0
  1959  05E0  00F1               	movwf	___awmod@divisor+1
  1960  05E1  082B               	movf	show_multidigits@result1+1,w
  1961  05E2  00F3               	movwf	___awmod@dividend+1
  1962  05E3  082A               	movf	show_multidigits@result1,w
  1963  05E4  00F2               	movwf	___awmod@dividend
  1964  05E5  120A  118A  20E7  120A  118A  	fcall	___awmod
  1965  05EA  0871               	movf	?___awmod+1,w
  1966  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1967  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1968  05ED  00AD               	movwf	show_multidigits@remainder+1
  1969  05EE  0870               	movf	?___awmod,w
  1970  05EF  00AC               	movwf	show_multidigits@remainder
  1971                           
  1972                           ;./lcd4bit.h: 119:         digit2 = remainder;
  1973  05F0  082D               	movf	show_multidigits@remainder+1,w
  1974  05F1  00A9               	movwf	show_multidigits@digit2+1
  1975  05F2  082C               	movf	show_multidigits@remainder,w
  1976  05F3  00A8               	movwf	show_multidigits@digit2
  1977  05F4                     l1563:
  1978                           
  1979                           ;./lcd4bit.h: 120:         result = result1/10;
  1980  05F4  300A               	movlw	10
  1981  05F5  00F0               	movwf	___awdiv@divisor
  1982  05F6  3000               	movlw	0
  1983  05F7  00F1               	movwf	___awdiv@divisor+1
  1984  05F8  082B               	movf	show_multidigits@result1+1,w
  1985  05F9  00F3               	movwf	___awdiv@dividend+1
  1986  05FA  082A               	movf	show_multidigits@result1,w
  1987  05FB  00F2               	movwf	___awdiv@dividend
  1988  05FC  120A  118A  21A4  120A  118A  	fcall	___awdiv
  1989  0601  0871               	movf	?___awdiv+1,w
  1990  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0604  00A3               	movwf	show_multidigits@result+1
  1993  0605  0870               	movf	?___awdiv,w
  1994  0606  00A2               	movwf	show_multidigits@result
  1995  0607                     l1565:
  1996                           
  1997                           ;./lcd4bit.h: 121:         remainder = result%10;
  1998  0607  300A               	movlw	10
  1999  0608  00F0               	movwf	___awmod@divisor
  2000  0609  3000               	movlw	0
  2001  060A  00F1               	movwf	___awmod@divisor+1
  2002  060B  0823               	movf	show_multidigits@result+1,w
  2003  060C  00F3               	movwf	___awmod@dividend+1
  2004  060D  0822               	movf	show_multidigits@result,w
  2005  060E  00F2               	movwf	___awmod@dividend
  2006  060F  120A  118A  20E7  120A  118A  	fcall	___awmod
  2007  0614  0871               	movf	?___awmod+1,w
  2008  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0617  00AD               	movwf	show_multidigits@remainder+1
  2011  0618  0870               	movf	?___awmod,w
  2012  0619  00AC               	movwf	show_multidigits@remainder
  2013                           
  2014                           ;./lcd4bit.h: 122:         digit3=remainder;
  2015  061A  082D               	movf	show_multidigits@remainder+1,w
  2016  061B  00A5               	movwf	show_multidigits@digit3+1
  2017  061C  082C               	movf	show_multidigits@remainder,w
  2018  061D  00A4               	movwf	show_multidigits@digit3
  2019  061E                     l1567:
  2020                           
  2021                           ;./lcd4bit.h: 123:         digit4 = result/10;
  2022  061E  300A               	movlw	10
  2023  061F  00F0               	movwf	___awdiv@divisor
  2024  0620  3000               	movlw	0
  2025  0621  00F1               	movwf	___awdiv@divisor+1
  2026  0622  0823               	movf	show_multidigits@result+1,w
  2027  0623  00F3               	movwf	___awdiv@dividend+1
  2028  0624  0822               	movf	show_multidigits@result,w
  2029  0625  00F2               	movwf	___awdiv@dividend
  2030  0626  120A  118A  21A4  120A  118A  	fcall	___awdiv
  2031  062B  0871               	movf	?___awdiv+1,w
  2032  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2033  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2034  062E  00A1               	movwf	show_multidigits@digit4+1
  2035  062F  0870               	movf	?___awdiv,w
  2036  0630  00A0               	movwf	show_multidigits@digit4
  2037  0631                     l1569:
  2038                           
  2039                           ;./lcd4bit.h: 124:         LCD_Char(digit4+0x30);
  2040  0631  0820               	movf	show_multidigits@digit4,w
  2041  0632  3E30               	addlw	48
  2042  0633  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  2043  0638                     l1571:
  2044                           
  2045                           ;./lcd4bit.h: 125:         LCD_Char(digit3+0x30);
  2046  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2048  063A  0824               	movf	show_multidigits@digit3,w
  2049  063B  3E30               	addlw	48
  2050  063C  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  2051  0641                     l1573:
  2052                           
  2053                           ;./lcd4bit.h: 126:         LCD_Char(digit2+0x30);
  2054  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0643  0828               	movf	show_multidigits@digit2,w
  2057  0644  3E30               	addlw	48
  2058  0645  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  2059  064A                     l1575:
  2060                           
  2061                           ;./lcd4bit.h: 127:         LCD_Char(digit1+0x30);
  2062  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2063  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2064  064C  0826               	movf	show_multidigits@digit1,w
  2065  064D  3E30               	addlw	48
  2066  064E  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  2067  0653  2E54               	goto	l79
  2068  0654                     l75:
  2069  0654                     l79:
  2070  0654  0008               	return
  2071  0655                     __end_of_show_multidigits:
  2072                           
  2073                           	psect	text4
  2074  00E7                     __ptext4:	
  2075 ;; *************** function ___awmod *****************
  2076 ;; Defined at:
  2077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  divisor         2    0[COMMON] int 
  2080 ;;  dividend        2    2[COMMON] int 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  sign            1    6[COMMON] unsigned char 
  2083 ;;  counter         1    5[COMMON] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2    0[COMMON] int 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         4       0       0       0       0
  2094 ;;      Locals:         2       0       0       0       0
  2095 ;;      Temps:          1       0       0       0       0
  2096 ;;      Totals:         7       0       0       0       0
  2097 ;;Total ram usage:        7 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_show_multidigits
  2103 ;;		_tx_sn
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function ___awmod
  2109  00E7                     ___awmod:
  2110  00E7                     l1403:	
  2111                           ;incstack = 0
  2112                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2113                           
  2114  00E7  01F6               	clrf	___awmod@sign
  2115  00E8                     l1405:
  2116  00E8  1FF3               	btfss	___awmod@dividend+1,7
  2117  00E9  28EB               	goto	u1091
  2118  00EA  28EC               	goto	u1090
  2119  00EB                     u1091:
  2120  00EB  28F3               	goto	l1411
  2121  00EC                     u1090:
  2122  00EC                     l1407:
  2123  00EC  09F2               	comf	___awmod@dividend,f
  2124  00ED  09F3               	comf	___awmod@dividend+1,f
  2125  00EE  0AF2               	incf	___awmod@dividend,f
  2126  00EF  1903               	skipnz
  2127  00F0  0AF3               	incf	___awmod@dividend+1,f
  2128  00F1                     l1409:
  2129  00F1  01F6               	clrf	___awmod@sign
  2130  00F2  0AF6               	incf	___awmod@sign,f
  2131  00F3                     l1411:
  2132  00F3  1FF1               	btfss	___awmod@divisor+1,7
  2133  00F4  28F6               	goto	u1101
  2134  00F5  28F7               	goto	u1100
  2135  00F6                     u1101:
  2136  00F6  28FC               	goto	l1415
  2137  00F7                     u1100:
  2138  00F7                     l1413:
  2139  00F7  09F0               	comf	___awmod@divisor,f
  2140  00F8  09F1               	comf	___awmod@divisor+1,f
  2141  00F9  0AF0               	incf	___awmod@divisor,f
  2142  00FA  1903               	skipnz
  2143  00FB  0AF1               	incf	___awmod@divisor+1,f
  2144  00FC                     l1415:
  2145  00FC  0870               	movf	___awmod@divisor,w
  2146  00FD  0471               	iorwf	___awmod@divisor+1,w
  2147  00FE  1903               	btfsc	3,2
  2148  00FF  2901               	goto	u1111
  2149  0100  2902               	goto	u1110
  2150  0101                     u1111:
  2151  0101  2931               	goto	l1433
  2152  0102                     u1110:
  2153  0102                     l1417:
  2154  0102  01F5               	clrf	___awmod@counter
  2155  0103  0AF5               	incf	___awmod@counter,f
  2156  0104  2910               	goto	l1423
  2157  0105                     l1419:
  2158  0105  3001               	movlw	1
  2159  0106                     u1125:
  2160  0106  1003               	clrc
  2161  0107  0DF0               	rlf	___awmod@divisor,f
  2162  0108  0DF1               	rlf	___awmod@divisor+1,f
  2163  0109  3EFF               	addlw	-1
  2164  010A  1D03               	skipz
  2165  010B  2906               	goto	u1125
  2166  010C                     l1421:
  2167  010C  3001               	movlw	1
  2168  010D  00F4               	movwf	??___awmod
  2169  010E  0874               	movf	??___awmod,w
  2170  010F  07F5               	addwf	___awmod@counter,f
  2171  0110                     l1423:
  2172  0110  1FF1               	btfss	___awmod@divisor+1,7
  2173  0111  2913               	goto	u1131
  2174  0112  2914               	goto	u1130
  2175  0113                     u1131:
  2176  0113  2905               	goto	l1419
  2177  0114                     u1130:
  2178  0114                     l1425:
  2179  0114  0871               	movf	___awmod@divisor+1,w
  2180  0115  0273               	subwf	___awmod@dividend+1,w
  2181  0116  1D03               	skipz
  2182  0117  291A               	goto	u1145
  2183  0118  0870               	movf	___awmod@divisor,w
  2184  0119  0272               	subwf	___awmod@dividend,w
  2185  011A                     u1145:
  2186  011A  1C03               	skipc
  2187  011B  291D               	goto	u1141
  2188  011C  291E               	goto	u1140
  2189  011D                     u1141:
  2190  011D  2924               	goto	l1429
  2191  011E                     u1140:
  2192  011E                     l1427:
  2193  011E  0870               	movf	___awmod@divisor,w
  2194  011F  02F2               	subwf	___awmod@dividend,f
  2195  0120  0871               	movf	___awmod@divisor+1,w
  2196  0121  1C03               	skipc
  2197  0122  03F3               	decf	___awmod@dividend+1,f
  2198  0123  02F3               	subwf	___awmod@dividend+1,f
  2199  0124                     l1429:
  2200  0124  3001               	movlw	1
  2201  0125                     u1155:
  2202  0125  1003               	clrc
  2203  0126  0CF1               	rrf	___awmod@divisor+1,f
  2204  0127  0CF0               	rrf	___awmod@divisor,f
  2205  0128  3EFF               	addlw	-1
  2206  0129  1D03               	skipz
  2207  012A  2925               	goto	u1155
  2208  012B                     l1431:
  2209  012B  3001               	movlw	1
  2210  012C  02F5               	subwf	___awmod@counter,f
  2211  012D  1D03               	btfss	3,2
  2212  012E  2930               	goto	u1161
  2213  012F  2931               	goto	u1160
  2214  0130                     u1161:
  2215  0130  2914               	goto	l1425
  2216  0131                     u1160:
  2217  0131                     l1433:
  2218  0131  0876               	movf	___awmod@sign,w
  2219  0132  1903               	btfsc	3,2
  2220  0133  2935               	goto	u1171
  2221  0134  2936               	goto	u1170
  2222  0135                     u1171:
  2223  0135  293B               	goto	l1437
  2224  0136                     u1170:
  2225  0136                     l1435:
  2226  0136  09F2               	comf	___awmod@dividend,f
  2227  0137  09F3               	comf	___awmod@dividend+1,f
  2228  0138  0AF2               	incf	___awmod@dividend,f
  2229  0139  1903               	skipnz
  2230  013A  0AF3               	incf	___awmod@dividend+1,f
  2231  013B                     l1437:
  2232  013B  0873               	movf	___awmod@dividend+1,w
  2233  013C  00F1               	movwf	?___awmod+1
  2234  013D  0872               	movf	___awmod@dividend,w
  2235  013E  00F0               	movwf	?___awmod
  2236  013F                     l419:
  2237  013F  0008               	return
  2238  0140                     __end_of___awmod:
  2239                           
  2240                           	psect	text5
  2241  01A4                     __ptext5:	
  2242 ;; *************** function ___awdiv *****************
  2243 ;; Defined at:
  2244 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  divisor         2    0[COMMON] int 
  2247 ;;  dividend        2    2[COMMON] int 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  quotient        2    7[COMMON] int 
  2250 ;;  sign            1    6[COMMON] unsigned char 
  2251 ;;  counter         1    5[COMMON] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  2    0[COMMON] int 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2261 ;;      Params:         4       0       0       0       0
  2262 ;;      Locals:         4       0       0       0       0
  2263 ;;      Temps:          1       0       0       0       0
  2264 ;;      Totals:         9       0       0       0       0
  2265 ;;Total ram usage:        9 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_show_multidigits
  2271 ;;		_tx_sn
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function ___awdiv
  2277  01A4                     ___awdiv:
  2278  01A4                     l1359:	
  2279                           ;incstack = 0
  2280                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2281                           
  2282  01A4  01F6               	clrf	___awdiv@sign
  2283  01A5                     l1361:
  2284  01A5  1FF1               	btfss	___awdiv@divisor+1,7
  2285  01A6  29A8               	goto	u991
  2286  01A7  29A9               	goto	u990
  2287  01A8                     u991:
  2288  01A8  29B0               	goto	l1367
  2289  01A9                     u990:
  2290  01A9                     l1363:
  2291  01A9  09F0               	comf	___awdiv@divisor,f
  2292  01AA  09F1               	comf	___awdiv@divisor+1,f
  2293  01AB  0AF0               	incf	___awdiv@divisor,f
  2294  01AC  1903               	skipnz
  2295  01AD  0AF1               	incf	___awdiv@divisor+1,f
  2296  01AE                     l1365:
  2297  01AE  01F6               	clrf	___awdiv@sign
  2298  01AF  0AF6               	incf	___awdiv@sign,f
  2299  01B0                     l1367:
  2300  01B0  1FF3               	btfss	___awdiv@dividend+1,7
  2301  01B1  29B3               	goto	u1001
  2302  01B2  29B4               	goto	u1000
  2303  01B3                     u1001:
  2304  01B3  29BD               	goto	l1373
  2305  01B4                     u1000:
  2306  01B4                     l1369:
  2307  01B4  09F2               	comf	___awdiv@dividend,f
  2308  01B5  09F3               	comf	___awdiv@dividend+1,f
  2309  01B6  0AF2               	incf	___awdiv@dividend,f
  2310  01B7  1903               	skipnz
  2311  01B8  0AF3               	incf	___awdiv@dividend+1,f
  2312  01B9                     l1371:
  2313  01B9  3001               	movlw	1
  2314  01BA  00F4               	movwf	??___awdiv
  2315  01BB  0874               	movf	??___awdiv,w
  2316  01BC  06F6               	xorwf	___awdiv@sign,f
  2317  01BD                     l1373:
  2318  01BD  01F7               	clrf	___awdiv@quotient
  2319  01BE  01F8               	clrf	___awdiv@quotient+1
  2320  01BF                     l1375:
  2321  01BF  0870               	movf	___awdiv@divisor,w
  2322  01C0  0471               	iorwf	___awdiv@divisor+1,w
  2323  01C1  1903               	btfsc	3,2
  2324  01C2  29C4               	goto	u1011
  2325  01C3  29C5               	goto	u1010
  2326  01C4                     u1011:
  2327  01C4  29FC               	goto	l1395
  2328  01C5                     u1010:
  2329  01C5                     l1377:
  2330  01C5  01F5               	clrf	___awdiv@counter
  2331  01C6  0AF5               	incf	___awdiv@counter,f
  2332  01C7  29D3               	goto	l1383
  2333  01C8                     l1379:
  2334  01C8  3001               	movlw	1
  2335  01C9                     u1025:
  2336  01C9  1003               	clrc
  2337  01CA  0DF0               	rlf	___awdiv@divisor,f
  2338  01CB  0DF1               	rlf	___awdiv@divisor+1,f
  2339  01CC  3EFF               	addlw	-1
  2340  01CD  1D03               	skipz
  2341  01CE  29C9               	goto	u1025
  2342  01CF                     l1381:
  2343  01CF  3001               	movlw	1
  2344  01D0  00F4               	movwf	??___awdiv
  2345  01D1  0874               	movf	??___awdiv,w
  2346  01D2  07F5               	addwf	___awdiv@counter,f
  2347  01D3                     l1383:
  2348  01D3  1FF1               	btfss	___awdiv@divisor+1,7
  2349  01D4  29D6               	goto	u1031
  2350  01D5  29D7               	goto	u1030
  2351  01D6                     u1031:
  2352  01D6  29C8               	goto	l1379
  2353  01D7                     u1030:
  2354  01D7                     l1385:
  2355  01D7  3001               	movlw	1
  2356  01D8                     u1045:
  2357  01D8  1003               	clrc
  2358  01D9  0DF7               	rlf	___awdiv@quotient,f
  2359  01DA  0DF8               	rlf	___awdiv@quotient+1,f
  2360  01DB  3EFF               	addlw	-1
  2361  01DC  1D03               	skipz
  2362  01DD  29D8               	goto	u1045
  2363  01DE  0871               	movf	___awdiv@divisor+1,w
  2364  01DF  0273               	subwf	___awdiv@dividend+1,w
  2365  01E0  1D03               	skipz
  2366  01E1  29E4               	goto	u1055
  2367  01E2  0870               	movf	___awdiv@divisor,w
  2368  01E3  0272               	subwf	___awdiv@dividend,w
  2369  01E4                     u1055:
  2370  01E4  1C03               	skipc
  2371  01E5  29E7               	goto	u1051
  2372  01E6  29E8               	goto	u1050
  2373  01E7                     u1051:
  2374  01E7  29EF               	goto	l1391
  2375  01E8                     u1050:
  2376  01E8                     l1387:
  2377  01E8  0870               	movf	___awdiv@divisor,w
  2378  01E9  02F2               	subwf	___awdiv@dividend,f
  2379  01EA  0871               	movf	___awdiv@divisor+1,w
  2380  01EB  1C03               	skipc
  2381  01EC  03F3               	decf	___awdiv@dividend+1,f
  2382  01ED  02F3               	subwf	___awdiv@dividend+1,f
  2383  01EE                     l1389:
  2384  01EE  1477               	bsf	___awdiv@quotient,0
  2385  01EF                     l1391:
  2386  01EF  3001               	movlw	1
  2387  01F0                     u1065:
  2388  01F0  1003               	clrc
  2389  01F1  0CF1               	rrf	___awdiv@divisor+1,f
  2390  01F2  0CF0               	rrf	___awdiv@divisor,f
  2391  01F3  3EFF               	addlw	-1
  2392  01F4  1D03               	skipz
  2393  01F5  29F0               	goto	u1065
  2394  01F6                     l1393:
  2395  01F6  3001               	movlw	1
  2396  01F7  02F5               	subwf	___awdiv@counter,f
  2397  01F8  1D03               	btfss	3,2
  2398  01F9  29FB               	goto	u1071
  2399  01FA  29FC               	goto	u1070
  2400  01FB                     u1071:
  2401  01FB  29D7               	goto	l1385
  2402  01FC                     u1070:
  2403  01FC                     l1395:
  2404  01FC  0876               	movf	___awdiv@sign,w
  2405  01FD  1903               	btfsc	3,2
  2406  01FE  2A00               	goto	u1081
  2407  01FF  2A01               	goto	u1080
  2408  0200                     u1081:
  2409  0200  2A06               	goto	l1399
  2410  0201                     u1080:
  2411  0201                     l1397:
  2412  0201  09F7               	comf	___awdiv@quotient,f
  2413  0202  09F8               	comf	___awdiv@quotient+1,f
  2414  0203  0AF7               	incf	___awdiv@quotient,f
  2415  0204  1903               	skipnz
  2416  0205  0AF8               	incf	___awdiv@quotient+1,f
  2417  0206                     l1399:
  2418  0206  0878               	movf	___awdiv@quotient+1,w
  2419  0207  00F1               	movwf	?___awdiv+1
  2420  0208  0877               	movf	___awdiv@quotient,w
  2421  0209  00F0               	movwf	?___awdiv
  2422  020A                     l406:
  2423  020A  0008               	return
  2424  020B                     __end_of___awdiv:
  2425                           
  2426                           	psect	text6
  2427  0EEF                     __ptext6:	
  2428 ;; *************** function _ser_int *****************
  2429 ;; Defined at:
  2430 ;;		line 7 in file "./uart.h"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2444 ;;      Params:         0       0       0       0       0
  2445 ;;      Locals:         0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0
  2447 ;;      Totals:         0       0       0       0       0
  2448 ;;Total ram usage:        0 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function _ser_int
  2459  0EEF                     _ser_int:
  2460  0EEF                     l1577:	
  2461                           ;incstack = 0
  2462                           ; Regs used in _ser_int: [wreg]
  2463                           
  2464                           
  2465                           ;./uart.h: 9:  TXSTA= 0x20;
  2466  0EEF  3020               	movlw	32
  2467  0EF0  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0EF1  1303               	bcf	3,6	;RP1=0, select bank1
  2469  0EF2  0098               	movwf	24	;volatile
  2470                           
  2471                           ;./uart.h: 10:  RCSTA= 0b10010000;
  2472  0EF3  3090               	movlw	144
  2473  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0EF6  0098               	movwf	24	;volatile
  2476                           
  2477                           ;./uart.h: 11:  SPBRG=31;
  2478  0EF7  301F               	movlw	31
  2479  0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  2480  0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  2481  0EFA  0099               	movwf	25	;volatile
  2482  0EFB                     l82:
  2483  0EFB  0008               	return
  2484  0EFC                     __end_of_ser_int:
  2485                           
  2486                           	psect	text7
  2487  001B                     __ptext7:	
  2488 ;; *************** function _read_dht11 *****************
  2489 ;; Defined at:
  2490 ;;		line 51 in file "./dht11.h"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  for_count       1    3[COMMON] unsigned char 
  2495 ;;  data            1    2[COMMON] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      unsigned char 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         0       0       0       0       0
  2506 ;;      Locals:         2       0       0       0       0
  2507 ;;      Temps:          2       0       0       0       0
  2508 ;;      Totals:         4       0       0       0       0
  2509 ;;Total ram usage:        4 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           
  2519                           ;psect for function _read_dht11
  2520  001B                     _read_dht11:
  2521  001B                     l1649:	
  2522                           ;incstack = 0
  2523                           ; Regs used in _read_dht11: [wreg+status,2+status,0]
  2524                           
  2525                           
  2526                           ;./dht11.h: 53:     char data, for_count;;./dht11.h: 54:     for(for_count = 0; for_coun
      +                          t < 8; for_count++)
  2527  001B  01F3               	clrf	read_dht11@for_count
  2528  001C                     l133:
  2529  001C  1283               	bcf	3,5	;RP0=0, select bank0
  2530  001D  1303               	bcf	3,6	;RP1=0, select bank0
  2531  001E  1C08               	btfss	8,0	;volatile
  2532  001F  2821               	goto	u1451
  2533  0020  2822               	goto	u1450
  2534  0021                     u1451:
  2535  0021  281C               	goto	l133
  2536  0022                     u1450:
  2537  0022                     l1655:
  2538                           
  2539                           ;./dht11.h: 58:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  2540  0022  3031               	movlw	49
  2541  0023  00F0               	movwf	??_read_dht11
  2542  0024                     u1637:
  2543  0024  0BF0               	decfsz	??_read_dht11,f
  2544  0025  2824               	goto	u1637
  2545  0026  2827               	nop2
  2546  0027                     l1657:
  2547                           
  2548                           ;./dht11.h: 60:         if(RD0 == 0)
  2549  0027  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0028  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0029  1808               	btfsc	8,0	;volatile
  2552  002A  282C               	goto	u1461
  2553  002B  282D               	goto	u1460
  2554  002C                     u1461:
  2555  002C  283E               	goto	l1661
  2556  002D                     u1460:
  2557  002D                     l1659:
  2558                           
  2559                           ;./dht11.h: 61:         {;./dht11.h: 62:             data&= ~(1<<(7 - for_count));
  2560  002D  3001               	movlw	1
  2561  002E  00F0               	movwf	??_read_dht11
  2562  002F  0873               	movf	read_dht11@for_count,w
  2563  0030  3C07               	sublw	7
  2564  0031  3E01               	addlw	1
  2565  0032  2835               	goto	u1474
  2566  0033                     u1475:
  2567  0033  1003               	clrc
  2568  0034  0DF0               	rlf	??_read_dht11,f
  2569  0035                     u1474:
  2570  0035  3EFF               	addlw	-1
  2571  0036  1D03               	skipz
  2572  0037  2833               	goto	u1475
  2573  0038  0870               	movf	??_read_dht11,w
  2574  0039  3AFF               	xorlw	255
  2575  003A  00F1               	movwf	??_read_dht11+1
  2576  003B  0871               	movf	??_read_dht11+1,w
  2577  003C  05F2               	andwf	read_dht11@data,f
  2578                           
  2579                           ;./dht11.h: 63:         }
  2580  003D  2851               	goto	l1663
  2581  003E                     l1661:
  2582                           
  2583                           ;./dht11.h: 65:         {;./dht11.h: 66:             data|= (1 << (7 - for_count));
  2584  003E  3001               	movlw	1
  2585  003F  00F0               	movwf	??_read_dht11
  2586  0040  0873               	movf	read_dht11@for_count,w
  2587  0041  3C07               	sublw	7
  2588  0042  3E01               	addlw	1
  2589  0043  2846               	goto	u1484
  2590  0044                     u1485:
  2591  0044  1003               	clrc
  2592  0045  0DF0               	rlf	??_read_dht11,f
  2593  0046                     u1484:
  2594  0046  3EFF               	addlw	-1
  2595  0047  1D03               	skipz
  2596  0048  2844               	goto	u1485
  2597  0049  0870               	movf	??_read_dht11,w
  2598  004A  00F1               	movwf	??_read_dht11+1
  2599  004B  0871               	movf	??_read_dht11+1,w
  2600  004C  04F2               	iorwf	read_dht11@data,f
  2601  004D                     l138:	
  2602                           ;./dht11.h: 68:             while(RD0);
  2603                           
  2604  004D  1808               	btfsc	8,0	;volatile
  2605  004E  2850               	goto	u1491
  2606  004F  2851               	goto	u1490
  2607  0050                     u1491:
  2608  0050  284D               	goto	l138
  2609  0051                     u1490:
  2610  0051                     l1663:
  2611                           
  2612                           ;./dht11.h: 70:     }
  2613  0051  3001               	movlw	1
  2614  0052  00F0               	movwf	??_read_dht11
  2615  0053  0870               	movf	??_read_dht11,w
  2616  0054  07F3               	addwf	read_dht11@for_count,f
  2617  0055                     l1665:
  2618  0055  3008               	movlw	8
  2619  0056  0273               	subwf	read_dht11@for_count,w
  2620  0057  1C03               	skipc
  2621  0058  285A               	goto	u1501
  2622  0059  285B               	goto	u1500
  2623  005A                     u1501:
  2624  005A  281C               	goto	l133
  2625  005B                     u1500:
  2626  005B                     l1667:
  2627                           
  2628                           ;./dht11.h: 71:     return data;
  2629  005B  0872               	movf	read_dht11@data,w
  2630  005C                     l141:
  2631  005C  0008               	return
  2632  005D                     __end_of_read_dht11:
  2633                           
  2634                           	psect	text8
  2635  0EFC                     __ptext8:	
  2636 ;; *************** function _dht11_init *****************
  2637 ;; Defined at:
  2638 ;;		line 24 in file "./dht11.h"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0
  2654 ;;      Temps:          2       0       0       0       0
  2655 ;;      Totals:         2       0       0       0       0
  2656 ;;Total ram usage:        2 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           
  2666                           ;psect for function _dht11_init
  2667  0EFC                     _dht11_init:
  2668  0EFC                     l1639:	
  2669                           ;incstack = 0
  2670                           ; Regs used in _dht11_init: [wreg+status,2]
  2671                           
  2672                           
  2673                           ;./dht11.h: 26:     TRISD = 0;
  2674  0EFC  1683               	bsf	3,5	;RP0=1, select bank1
  2675  0EFD  1303               	bcf	3,6	;RP1=0, select bank1
  2676  0EFE  0188               	clrf	8	;volatile
  2677                           
  2678                           ;./dht11.h: 27:     PORTD = 0;
  2679  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0F01  0188               	clrf	8	;volatile
  2682  0F02                     l1641:
  2683                           
  2684                           ;./dht11.h: 28:     _delay((unsigned long)((18)*(20000000/4000.0)));
  2685  0F02  3075               	movlw	117
  2686  0F03  00F1               	movwf	??_dht11_init+1
  2687  0F04  30E1               	movlw	225
  2688  0F05  00F0               	movwf	??_dht11_init
  2689  0F06                     u1647:
  2690  0F06  0BF0               	decfsz	??_dht11_init,f
  2691  0F07  2F06               	goto	u1647
  2692  0F08  0BF1               	decfsz	??_dht11_init+1,f
  2693  0F09  2F06               	goto	u1647
  2694  0F0A                     l1643:
  2695                           
  2696                           ;./dht11.h: 29:     PORTD = 0xFF;
  2697  0F0A  30FF               	movlw	255
  2698  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0F0D  0088               	movwf	8	;volatile
  2701  0F0E                     l1645:
  2702                           
  2703                           ;./dht11.h: 30:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  2704  0F0E  3031               	movlw	49
  2705  0F0F  00F0               	movwf	??_dht11_init
  2706  0F10                     u1657:
  2707  0F10  0BF0               	decfsz	??_dht11_init,f
  2708  0F11  2F10               	goto	u1657
  2709  0F12  2F13               	nop2
  2710  0F13                     l1647:
  2711                           
  2712                           ;./dht11.h: 31:     TRISD = 0xFF;
  2713  0F13  30FF               	movlw	255
  2714  0F14  1683               	bsf	3,5	;RP0=1, select bank1
  2715  0F15  1303               	bcf	3,6	;RP1=0, select bank1
  2716  0F16  0088               	movwf	8	;volatile
  2717  0F17                     l123:
  2718  0F17  0008               	return
  2719  0F18                     __end_of_dht11_init:
  2720                           
  2721                           	psect	text9
  2722  02A8                     __ptext9:	
  2723 ;; *************** function _LCD_num *****************
  2724 ;; Defined at:
  2725 ;;		line 51 in file "./lcd4bit.h"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  val             4   14[BANK0 ] long 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  remainder       2   28[BANK0 ] unsigned int 
  2730 ;;  result1         2   26[BANK0 ] unsigned int 
  2731 ;;  result          2   24[BANK0 ] unsigned int 
  2732 ;;  digit3          2   22[BANK0 ] unsigned int 
  2733 ;;  digit2          2   20[BANK0 ] unsigned int 
  2734 ;;  digit1          2   18[BANK0 ] unsigned int 
  2735 ;;  calb_val        2    0        int 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, pclath, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2745 ;;      Params:         0       4       0       0       0
  2746 ;;      Locals:         0      12       0       0       0
  2747 ;;      Temps:          0       0       0       0       0
  2748 ;;      Totals:         0      16       0       0       0
  2749 ;;Total ram usage:       16 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 1
  2752 ;; This function calls:
  2753 ;;		_LCD_Char
  2754 ;;		___aldiv
  2755 ;;		___lmul
  2756 ;;		___lwdiv
  2757 ;;		___lwmod
  2758 ;;		_intdigits_chardigits
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function _LCD_num
  2766  02A8                     _LCD_num:
  2767  02A8                     l1493:	
  2768                           ;incstack = 0
  2769                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  2770                           
  2771  02A8                     l1495:
  2772                           
  2773                           ;./lcd4bit.h: 54:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 55:     result1;;./lcd4bit.h: 56:     result = ((val*100)/calb_val);
  2774  02A8  3000               	movlw	0
  2775  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2776  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2777  02AB  00A3               	movwf	___aldiv@divisor+3
  2778  02AC  3000               	movlw	0
  2779  02AD  00A2               	movwf	___aldiv@divisor+2
  2780  02AE  3000               	movlw	0
  2781  02AF  00A1               	movwf	___aldiv@divisor+1
  2782  02B0  30C8               	movlw	200
  2783  02B1  00A0               	movwf	___aldiv@divisor
  2784  02B2  0831               	movf	LCD_num@val+3,w
  2785  02B3  00F3               	movwf	___lmul@multiplier+3
  2786  02B4  0830               	movf	LCD_num@val+2,w
  2787  02B5  00F2               	movwf	___lmul@multiplier+2
  2788  02B6  082F               	movf	LCD_num@val+1,w
  2789  02B7  00F1               	movwf	___lmul@multiplier+1
  2790  02B8  082E               	movf	LCD_num@val,w
  2791  02B9  00F0               	movwf	___lmul@multiplier
  2792  02BA  3000               	movlw	0
  2793  02BB  00F7               	movwf	___lmul@multiplicand+3
  2794  02BC  3000               	movlw	0
  2795  02BD  00F6               	movwf	___lmul@multiplicand+2
  2796  02BE  3000               	movlw	0
  2797  02BF  00F5               	movwf	___lmul@multiplicand+1
  2798  02C0  3064               	movlw	100
  2799  02C1  00F4               	movwf	___lmul@multiplicand
  2800  02C2  120A  118A  20A1  120A  118A  	fcall	___lmul
  2801  02C7  0873               	movf	?___lmul+3,w
  2802  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2803  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2804  02CA  00A7               	movwf	___aldiv@dividend+3
  2805  02CB  0872               	movf	?___lmul+2,w
  2806  02CC  00A6               	movwf	___aldiv@dividend+2
  2807  02CD  0871               	movf	?___lmul+1,w
  2808  02CE  00A5               	movwf	___aldiv@dividend+1
  2809  02CF  0870               	movf	?___lmul,w
  2810  02D0  00A4               	movwf	___aldiv@dividend
  2811  02D1  120A  118A  220B  120A  118A  	fcall	___aldiv
  2812  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2813  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2814  02D8  0821               	movf	?___aldiv+1,w
  2815  02D9  00B9               	movwf	LCD_num@result+1
  2816  02DA  0820               	movf	?___aldiv,w
  2817  02DB  00B8               	movwf	LCD_num@result
  2818  02DC                     l1497:
  2819                           
  2820                           ;./lcd4bit.h: 57:     remainder = result% 10;
  2821  02DC  300A               	movlw	10
  2822  02DD  00F0               	movwf	___lwmod@divisor
  2823  02DE  3000               	movlw	0
  2824  02DF  00F1               	movwf	___lwmod@divisor+1
  2825  02E0  0839               	movf	LCD_num@result+1,w
  2826  02E1  00F3               	movwf	___lwmod@dividend+1
  2827  02E2  0838               	movf	LCD_num@result,w
  2828  02E3  00F2               	movwf	___lwmod@dividend
  2829  02E4  120A  158A  2746  120A  118A  	fcall	___lwmod
  2830  02E9  0871               	movf	?___lwmod+1,w
  2831  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2832  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2833  02EC  00BD               	movwf	LCD_num@remainder+1
  2834  02ED  0870               	movf	?___lwmod,w
  2835  02EE  00BC               	movwf	LCD_num@remainder
  2836  02EF                     l1499:
  2837                           
  2838                           ;./lcd4bit.h: 58:     result1 = result /10;
  2839  02EF  300A               	movlw	10
  2840  02F0  00F0               	movwf	___lwdiv@divisor
  2841  02F1  3000               	movlw	0
  2842  02F2  00F1               	movwf	___lwdiv@divisor+1
  2843  02F3  0839               	movf	LCD_num@result+1,w
  2844  02F4  00F3               	movwf	___lwdiv@dividend+1
  2845  02F5  0838               	movf	LCD_num@result,w
  2846  02F6  00F2               	movwf	___lwdiv@dividend
  2847  02F7  120A  118A  205D  120A  118A  	fcall	___lwdiv
  2848  02FC  0871               	movf	?___lwdiv+1,w
  2849  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2850  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2851  02FF  00BB               	movwf	LCD_num@result1+1
  2852  0300  0870               	movf	?___lwdiv,w
  2853  0301  00BA               	movwf	LCD_num@result1
  2854  0302                     l1501:
  2855                           
  2856                           ;./lcd4bit.h: 59:     digit1 = remainder;
  2857  0302  083D               	movf	LCD_num@remainder+1,w
  2858  0303  00B3               	movwf	LCD_num@digit1+1
  2859  0304  083C               	movf	LCD_num@remainder,w
  2860  0305  00B2               	movwf	LCD_num@digit1
  2861                           
  2862                           ;./lcd4bit.h: 60:     remainder = result1%10;
  2863  0306  300A               	movlw	10
  2864  0307  00F0               	movwf	___lwmod@divisor
  2865  0308  3000               	movlw	0
  2866  0309  00F1               	movwf	___lwmod@divisor+1
  2867  030A  083B               	movf	LCD_num@result1+1,w
  2868  030B  00F3               	movwf	___lwmod@dividend+1
  2869  030C  083A               	movf	LCD_num@result1,w
  2870  030D  00F2               	movwf	___lwmod@dividend
  2871  030E  120A  158A  2746  120A  118A  	fcall	___lwmod
  2872  0313  0871               	movf	?___lwmod+1,w
  2873  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0316  00BD               	movwf	LCD_num@remainder+1
  2876  0317  0870               	movf	?___lwmod,w
  2877  0318  00BC               	movwf	LCD_num@remainder
  2878  0319                     l1503:
  2879                           
  2880                           ;./lcd4bit.h: 61:     digit2 = remainder;
  2881  0319  083D               	movf	LCD_num@remainder+1,w
  2882  031A  00B5               	movwf	LCD_num@digit2+1
  2883  031B  083C               	movf	LCD_num@remainder,w
  2884  031C  00B4               	movwf	LCD_num@digit2
  2885  031D                     l1505:
  2886                           
  2887                           ;./lcd4bit.h: 62:     remainder = (result1/10);
  2888  031D  300A               	movlw	10
  2889  031E  00F0               	movwf	___lwdiv@divisor
  2890  031F  3000               	movlw	0
  2891  0320  00F1               	movwf	___lwdiv@divisor+1
  2892  0321  083B               	movf	LCD_num@result1+1,w
  2893  0322  00F3               	movwf	___lwdiv@dividend+1
  2894  0323  083A               	movf	LCD_num@result1,w
  2895  0324  00F2               	movwf	___lwdiv@dividend
  2896  0325  120A  118A  205D  120A  118A  	fcall	___lwdiv
  2897  032A  0871               	movf	?___lwdiv+1,w
  2898  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2899  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2900  032D  00BD               	movwf	LCD_num@remainder+1
  2901  032E  0870               	movf	?___lwdiv,w
  2902  032F  00BC               	movwf	LCD_num@remainder
  2903                           
  2904                           ;./lcd4bit.h: 63:     digit3=remainder;
  2905  0330  083D               	movf	LCD_num@remainder+1,w
  2906  0331  00B7               	movwf	LCD_num@digit3+1
  2907  0332  083C               	movf	LCD_num@remainder,w
  2908  0333  00B6               	movwf	LCD_num@digit3
  2909  0334                     l1507:
  2910                           
  2911                           ;./lcd4bit.h: 64:     LCD_Char(digit3+0x30);
  2912  0334  0836               	movf	LCD_num@digit3,w
  2913  0335  3E30               	addlw	48
  2914  0336  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  2915  033B                     l1509:
  2916                           
  2917                           ;./lcd4bit.h: 65:     LCD_Char('.');
  2918  033B  302E               	movlw	46
  2919  033C  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  2920  0341                     l1511:
  2921                           
  2922                           ;./lcd4bit.h: 66:     LCD_Char(digit2+0x30);
  2923  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0343  0834               	movf	LCD_num@digit2,w
  2926  0344  3E30               	addlw	48
  2927  0345  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  2928  034A                     l1513:
  2929                           
  2930                           ;./lcd4bit.h: 67:     LCD_Char(digit1+0x30);
  2931  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2932  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2933  034C  0832               	movf	LCD_num@digit1,w
  2934  034D  3E30               	addlw	48
  2935  034E  120A  158A  27C0  120A  118A  	fcall	_LCD_Char
  2936  0353                     l1515:
  2937                           
  2938                           ;./lcd4bit.h: 69:     intdigits_chardigits(digit3,digit2,digit1);
  2939  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0355  0837               	movf	LCD_num@digit3+1,w
  2942  0356  00F1               	movwf	intdigits_chardigits@a+1
  2943  0357  0836               	movf	LCD_num@digit3,w
  2944  0358  00F0               	movwf	intdigits_chardigits@a
  2945  0359  0835               	movf	LCD_num@digit2+1,w
  2946  035A  00F3               	movwf	intdigits_chardigits@b+1
  2947  035B  0834               	movf	LCD_num@digit2,w
  2948  035C  00F2               	movwf	intdigits_chardigits@b
  2949  035D  0833               	movf	LCD_num@digit1+1,w
  2950  035E  00F5               	movwf	intdigits_chardigits@c+1
  2951  035F  0832               	movf	LCD_num@digit1,w
  2952  0360  00F4               	movwf	intdigits_chardigits@c
  2953  0361  120A  118A  200C  120A  118A  	fcall	_intdigits_chardigits
  2954  0366                     l60:
  2955  0366  0008               	return
  2956  0367                     __end_of_LCD_num:
  2957                           
  2958                           	psect	text10
  2959  000C                     __ptext10:	
  2960 ;; *************** function _intdigits_chardigits *****************
  2961 ;; Defined at:
  2962 ;;		line 79 in file "./lcd4bit.h"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  a               2    0[COMMON] unsigned int 
  2965 ;;  b               2    2[COMMON] unsigned int 
  2966 ;;  c               2    4[COMMON] unsigned int 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      unsigned char 
  2971 ;; Registers used:
  2972 ;;		wreg
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         6       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0
  2980 ;;      Temps:          1       0       0       0       0
  2981 ;;      Totals:         7       0       0       0       0
  2982 ;;Total ram usage:        7 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_LCD_num
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function _intdigits_chardigits
  2993  000C                     _intdigits_chardigits:
  2994  000C                     l1301:	
  2995                           ;incstack = 0
  2996                           ; Regs used in _intdigits_chardigits: [wreg]
  2997                           
  2998                           
  2999                           ;./lcd4bit.h: 79: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     avv[0] = (unsigned char)a;
  3000  000C  0870               	movf	intdigits_chardigits@a,w
  3001  000D  00F6               	movwf	??_intdigits_chardigits
  3002  000E  0876               	movf	??_intdigits_chardigits,w
  3003  000F  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0010  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0011  00CB               	movwf	_avv
  3006                           
  3007                           ;./lcd4bit.h: 82:     avv[1] = (unsigned char)b;
  3008  0012  0872               	movf	intdigits_chardigits@b,w
  3009  0013  00F6               	movwf	??_intdigits_chardigits
  3010  0014  0876               	movf	??_intdigits_chardigits,w
  3011  0015  00CC               	movwf	_avv+1
  3012                           
  3013                           ;./lcd4bit.h: 83:     avv[2] = (unsigned char)c;
  3014  0016  0874               	movf	intdigits_chardigits@c,w
  3015  0017  00F6               	movwf	??_intdigits_chardigits
  3016  0018  0876               	movf	??_intdigits_chardigits,w
  3017  0019  00CD               	movwf	_avv+2
  3018  001A                     l69:
  3019  001A  0008               	return
  3020  001B                     __end_of_intdigits_chardigits:
  3021                           
  3022                           	psect	text11
  3023  0F46                     __ptext11:	
  3024 ;; *************** function ___lwmod *****************
  3025 ;; Defined at:
  3026 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  divisor         2    0[COMMON] unsigned int 
  3029 ;;  dividend        2    2[COMMON] unsigned int 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  counter         1    5[COMMON] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  2    0[COMMON] unsigned int 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         4       0       0       0       0
  3042 ;;      Locals:         1       0       0       0       0
  3043 ;;      Temps:          1       0       0       0       0
  3044 ;;      Totals:         6       0       0       0       0
  3045 ;;Total ram usage:        6 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_LCD_num
  3051 ;;		_show_multidigits
  3052 ;;		_tx_sn
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           
  3057                           ;psect for function ___lwmod
  3058  0F46                     ___lwmod:
  3059  0F46                     l1467:	
  3060                           ;incstack = 0
  3061                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3062                           
  3063  0F46  0870               	movf	___lwmod@divisor,w
  3064  0F47  0471               	iorwf	___lwmod@divisor+1,w
  3065  0F48  1903               	btfsc	3,2
  3066  0F49  2F4B               	goto	u1251
  3067  0F4A  2F4C               	goto	u1250
  3068  0F4B                     u1251:
  3069  0F4B  2F7B               	goto	l1485
  3070  0F4C                     u1250:
  3071  0F4C                     l1469:
  3072  0F4C  01F5               	clrf	___lwmod@counter
  3073  0F4D  0AF5               	incf	___lwmod@counter,f
  3074  0F4E  2F5A               	goto	l1475
  3075  0F4F                     l1471:
  3076  0F4F  3001               	movlw	1
  3077  0F50                     u1265:
  3078  0F50  1003               	clrc
  3079  0F51  0DF0               	rlf	___lwmod@divisor,f
  3080  0F52  0DF1               	rlf	___lwmod@divisor+1,f
  3081  0F53  3EFF               	addlw	-1
  3082  0F54  1D03               	skipz
  3083  0F55  2F50               	goto	u1265
  3084  0F56                     l1473:
  3085  0F56  3001               	movlw	1
  3086  0F57  00F4               	movwf	??___lwmod
  3087  0F58  0874               	movf	??___lwmod,w
  3088  0F59  07F5               	addwf	___lwmod@counter,f
  3089  0F5A                     l1475:
  3090  0F5A  1FF1               	btfss	___lwmod@divisor+1,7
  3091  0F5B  2F5D               	goto	u1271
  3092  0F5C  2F5E               	goto	u1270
  3093  0F5D                     u1271:
  3094  0F5D  2F4F               	goto	l1471
  3095  0F5E                     u1270:
  3096  0F5E                     l1477:
  3097  0F5E  0871               	movf	___lwmod@divisor+1,w
  3098  0F5F  0273               	subwf	___lwmod@dividend+1,w
  3099  0F60  1D03               	skipz
  3100  0F61  2F64               	goto	u1285
  3101  0F62  0870               	movf	___lwmod@divisor,w
  3102  0F63  0272               	subwf	___lwmod@dividend,w
  3103  0F64                     u1285:
  3104  0F64  1C03               	skipc
  3105  0F65  2F67               	goto	u1281
  3106  0F66  2F68               	goto	u1280
  3107  0F67                     u1281:
  3108  0F67  2F6E               	goto	l1481
  3109  0F68                     u1280:
  3110  0F68                     l1479:
  3111  0F68  0870               	movf	___lwmod@divisor,w
  3112  0F69  02F2               	subwf	___lwmod@dividend,f
  3113  0F6A  0871               	movf	___lwmod@divisor+1,w
  3114  0F6B  1C03               	skipc
  3115  0F6C  03F3               	decf	___lwmod@dividend+1,f
  3116  0F6D  02F3               	subwf	___lwmod@dividend+1,f
  3117  0F6E                     l1481:
  3118  0F6E  3001               	movlw	1
  3119  0F6F                     u1295:
  3120  0F6F  1003               	clrc
  3121  0F70  0CF1               	rrf	___lwmod@divisor+1,f
  3122  0F71  0CF0               	rrf	___lwmod@divisor,f
  3123  0F72  3EFF               	addlw	-1
  3124  0F73  1D03               	skipz
  3125  0F74  2F6F               	goto	u1295
  3126  0F75                     l1483:
  3127  0F75  3001               	movlw	1
  3128  0F76  02F5               	subwf	___lwmod@counter,f
  3129  0F77  1D03               	btfss	3,2
  3130  0F78  2F7A               	goto	u1301
  3131  0F79  2F7B               	goto	u1300
  3132  0F7A                     u1301:
  3133  0F7A  2F5E               	goto	l1477
  3134  0F7B                     u1300:
  3135  0F7B                     l1485:
  3136  0F7B  0873               	movf	___lwmod@dividend+1,w
  3137  0F7C  00F1               	movwf	?___lwmod+1
  3138  0F7D  0872               	movf	___lwmod@dividend,w
  3139  0F7E  00F0               	movwf	?___lwmod
  3140  0F7F                     l535:
  3141  0F7F  0008               	return
  3142  0F80                     __end_of___lwmod:
  3143                           
  3144                           	psect	text12
  3145  005D                     __ptext12:	
  3146 ;; *************** function ___lwdiv *****************
  3147 ;; Defined at:
  3148 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  divisor         2    0[COMMON] unsigned int 
  3151 ;;  dividend        2    2[COMMON] unsigned int 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  quotient        2    5[COMMON] unsigned int 
  3154 ;;  counter         1    7[COMMON] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  2    0[COMMON] unsigned int 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3164 ;;      Params:         4       0       0       0       0
  3165 ;;      Locals:         3       0       0       0       0
  3166 ;;      Temps:          1       0       0       0       0
  3167 ;;      Totals:         8       0       0       0       0
  3168 ;;Total ram usage:        8 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_LCD_num
  3174 ;;		_show_multidigits
  3175 ;;		_tx_sn
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function ___lwdiv
  3181  005D                     ___lwdiv:
  3182  005D                     l1441:	
  3183                           ;incstack = 0
  3184                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3185                           
  3186  005D  01F5               	clrf	___lwdiv@quotient
  3187  005E  01F6               	clrf	___lwdiv@quotient+1
  3188  005F                     l1443:
  3189  005F  0870               	movf	___lwdiv@divisor,w
  3190  0060  0471               	iorwf	___lwdiv@divisor+1,w
  3191  0061  1903               	btfsc	3,2
  3192  0062  2864               	goto	u1181
  3193  0063  2865               	goto	u1180
  3194  0064                     u1181:
  3195  0064  289C               	goto	l1463
  3196  0065                     u1180:
  3197  0065                     l1445:
  3198  0065  01F7               	clrf	___lwdiv@counter
  3199  0066  0AF7               	incf	___lwdiv@counter,f
  3200  0067  2873               	goto	l1451
  3201  0068                     l1447:
  3202  0068  3001               	movlw	1
  3203  0069                     u1195:
  3204  0069  1003               	clrc
  3205  006A  0DF0               	rlf	___lwdiv@divisor,f
  3206  006B  0DF1               	rlf	___lwdiv@divisor+1,f
  3207  006C  3EFF               	addlw	-1
  3208  006D  1D03               	skipz
  3209  006E  2869               	goto	u1195
  3210  006F                     l1449:
  3211  006F  3001               	movlw	1
  3212  0070  00F4               	movwf	??___lwdiv
  3213  0071  0874               	movf	??___lwdiv,w
  3214  0072  07F7               	addwf	___lwdiv@counter,f
  3215  0073                     l1451:
  3216  0073  1FF1               	btfss	___lwdiv@divisor+1,7
  3217  0074  2876               	goto	u1201
  3218  0075  2877               	goto	u1200
  3219  0076                     u1201:
  3220  0076  2868               	goto	l1447
  3221  0077                     u1200:
  3222  0077                     l1453:
  3223  0077  3001               	movlw	1
  3224  0078                     u1215:
  3225  0078  1003               	clrc
  3226  0079  0DF5               	rlf	___lwdiv@quotient,f
  3227  007A  0DF6               	rlf	___lwdiv@quotient+1,f
  3228  007B  3EFF               	addlw	-1
  3229  007C  1D03               	skipz
  3230  007D  2878               	goto	u1215
  3231  007E  0871               	movf	___lwdiv@divisor+1,w
  3232  007F  0273               	subwf	___lwdiv@dividend+1,w
  3233  0080  1D03               	skipz
  3234  0081  2884               	goto	u1225
  3235  0082  0870               	movf	___lwdiv@divisor,w
  3236  0083  0272               	subwf	___lwdiv@dividend,w
  3237  0084                     u1225:
  3238  0084  1C03               	skipc
  3239  0085  2887               	goto	u1221
  3240  0086  2888               	goto	u1220
  3241  0087                     u1221:
  3242  0087  288F               	goto	l1459
  3243  0088                     u1220:
  3244  0088                     l1455:
  3245  0088  0870               	movf	___lwdiv@divisor,w
  3246  0089  02F2               	subwf	___lwdiv@dividend,f
  3247  008A  0871               	movf	___lwdiv@divisor+1,w
  3248  008B  1C03               	skipc
  3249  008C  03F3               	decf	___lwdiv@dividend+1,f
  3250  008D  02F3               	subwf	___lwdiv@dividend+1,f
  3251  008E                     l1457:
  3252  008E  1475               	bsf	___lwdiv@quotient,0
  3253  008F                     l1459:
  3254  008F  3001               	movlw	1
  3255  0090                     u1235:
  3256  0090  1003               	clrc
  3257  0091  0CF1               	rrf	___lwdiv@divisor+1,f
  3258  0092  0CF0               	rrf	___lwdiv@divisor,f
  3259  0093  3EFF               	addlw	-1
  3260  0094  1D03               	skipz
  3261  0095  2890               	goto	u1235
  3262  0096                     l1461:
  3263  0096  3001               	movlw	1
  3264  0097  02F7               	subwf	___lwdiv@counter,f
  3265  0098  1D03               	btfss	3,2
  3266  0099  289B               	goto	u1241
  3267  009A  289C               	goto	u1240
  3268  009B                     u1241:
  3269  009B  2877               	goto	l1453
  3270  009C                     u1240:
  3271  009C                     l1463:
  3272  009C  0876               	movf	___lwdiv@quotient+1,w
  3273  009D  00F1               	movwf	?___lwdiv+1
  3274  009E  0875               	movf	___lwdiv@quotient,w
  3275  009F  00F0               	movwf	?___lwdiv
  3276  00A0                     l525:
  3277  00A0  0008               	return
  3278  00A1                     __end_of___lwdiv:
  3279                           
  3280                           	psect	text13
  3281  00A1                     __ptext13:	
  3282 ;; *************** function ___lmul *****************
  3283 ;; Defined at:
  3284 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  multiplier      4    0[COMMON] unsigned long 
  3287 ;;  multiplicand    4    4[COMMON] unsigned long 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  product         4    9[COMMON] unsigned long 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  4    0[COMMON] unsigned long 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         8       0       0       0       0
  3300 ;;      Locals:         4       0       0       0       0
  3301 ;;      Temps:          1       0       0       0       0
  3302 ;;      Totals:        13       0       0       0       0
  3303 ;;Total ram usage:       13 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_LCD_num
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function ___lmul
  3314  00A1                     ___lmul:
  3315  00A1                     l1305:	
  3316                           ;incstack = 0
  3317                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3318                           
  3319  00A1  3000               	movlw	0
  3320  00A2  00FC               	movwf	___lmul@product+3
  3321  00A3  3000               	movlw	0
  3322  00A4  00FB               	movwf	___lmul@product+2
  3323  00A5  3000               	movlw	0
  3324  00A6  00FA               	movwf	___lmul@product+1
  3325  00A7  3000               	movlw	0
  3326  00A8  00F9               	movwf	___lmul@product
  3327  00A9                     l1307:
  3328  00A9  1C70               	btfss	___lmul@multiplier,0
  3329  00AA  28AC               	goto	u841
  3330  00AB  28AD               	goto	u840
  3331  00AC                     u841:
  3332  00AC  28C4               	goto	l1311
  3333  00AD                     u840:
  3334  00AD                     l1309:
  3335  00AD  0874               	movf	___lmul@multiplicand,w
  3336  00AE  07F9               	addwf	___lmul@product,f
  3337  00AF  0875               	movf	___lmul@multiplicand+1,w
  3338  00B0  1103               	clrz
  3339  00B1  1803               	skipnc
  3340  00B2  3E01               	addlw	1
  3341  00B3  1903               	skipnz
  3342  00B4  28B6               	goto	u851
  3343  00B5  07FA               	addwf	___lmul@product+1,f
  3344  00B6                     u851:
  3345  00B6  0876               	movf	___lmul@multiplicand+2,w
  3346  00B7  1103               	clrz
  3347  00B8  1803               	skipnc
  3348  00B9  3E01               	addlw	1
  3349  00BA  1903               	skipnz
  3350  00BB  28BD               	goto	u852
  3351  00BC  07FB               	addwf	___lmul@product+2,f
  3352  00BD                     u852:
  3353  00BD  0877               	movf	___lmul@multiplicand+3,w
  3354  00BE  1103               	clrz
  3355  00BF  1803               	skipnc
  3356  00C0  3E01               	addlw	1
  3357  00C1  1903               	skipnz
  3358  00C2  28C4               	goto	u853
  3359  00C3  07FC               	addwf	___lmul@product+3,f
  3360  00C4                     u853:
  3361  00C4                     l1311:
  3362  00C4  3001               	movlw	1
  3363  00C5  00F8               	movwf	??___lmul
  3364  00C6                     u865:
  3365  00C6  1003               	clrc
  3366  00C7  0DF4               	rlf	___lmul@multiplicand,f
  3367  00C8  0DF5               	rlf	___lmul@multiplicand+1,f
  3368  00C9  0DF6               	rlf	___lmul@multiplicand+2,f
  3369  00CA  0DF7               	rlf	___lmul@multiplicand+3,f
  3370  00CB  0BF8               	decfsz	??___lmul,f
  3371  00CC  28C6               	goto	u865
  3372  00CD                     l1313:
  3373  00CD  3001               	movlw	1
  3374  00CE                     u875:
  3375  00CE  1003               	clrc
  3376  00CF  0CF3               	rrf	___lmul@multiplier+3,f
  3377  00D0  0CF2               	rrf	___lmul@multiplier+2,f
  3378  00D1  0CF1               	rrf	___lmul@multiplier+1,f
  3379  00D2  0CF0               	rrf	___lmul@multiplier,f
  3380  00D3  3EFF               	addlw	-1
  3381  00D4  1D03               	skipz
  3382  00D5  28CE               	goto	u875
  3383  00D6  0873               	movf	___lmul@multiplier+3,w
  3384  00D7  0472               	iorwf	___lmul@multiplier+2,w
  3385  00D8  0471               	iorwf	___lmul@multiplier+1,w
  3386  00D9  0470               	iorwf	___lmul@multiplier,w
  3387  00DA  1D03               	skipz
  3388  00DB  28DD               	goto	u881
  3389  00DC  28DE               	goto	u880
  3390  00DD                     u881:
  3391  00DD  28A9               	goto	l1307
  3392  00DE                     u880:
  3393  00DE                     l1315:
  3394  00DE  087C               	movf	___lmul@product+3,w
  3395  00DF  00F3               	movwf	?___lmul+3
  3396  00E0  087B               	movf	___lmul@product+2,w
  3397  00E1  00F2               	movwf	?___lmul+2
  3398  00E2  087A               	movf	___lmul@product+1,w
  3399  00E3  00F1               	movwf	?___lmul+1
  3400  00E4  0879               	movf	___lmul@product,w
  3401  00E5  00F0               	movwf	?___lmul
  3402  00E6                     l267:
  3403  00E6  0008               	return
  3404  00E7                     __end_of___lmul:
  3405                           
  3406                           	psect	text14
  3407  020B                     __ptext14:	
  3408 ;; *************** function ___aldiv *****************
  3409 ;; Defined at:
  3410 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  divisor         4    0[BANK0 ] long 
  3413 ;;  dividend        4    4[BANK0 ] long 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  quotient        4   10[BANK0 ] long 
  3416 ;;  sign            1    9[BANK0 ] unsigned char 
  3417 ;;  counter         1    8[BANK0 ] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  4    0[BANK0 ] long 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2, status,0
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3427 ;;      Params:         0       8       0       0       0
  3428 ;;      Locals:         0       6       0       0       0
  3429 ;;      Temps:          1       0       0       0       0
  3430 ;;      Totals:         1      14       0       0       0
  3431 ;;Total ram usage:       15 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_LCD_num
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function ___aldiv
  3442  020B                     ___aldiv:
  3443  020B                     l1319:	
  3444                           ;incstack = 0
  3445                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3446                           
  3447  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3448  020C  1303               	bcf	3,6	;RP1=0, select bank0
  3449  020D  01A9               	clrf	___aldiv@sign
  3450  020E                     l1321:
  3451  020E  1FA3               	btfss	___aldiv@divisor+3,7
  3452  020F  2A11               	goto	u891
  3453  0210  2A12               	goto	u890
  3454  0211                     u891:
  3455  0211  2A1F               	goto	l318
  3456  0212                     u890:
  3457  0212                     l1323:
  3458  0212  09A0               	comf	___aldiv@divisor,f
  3459  0213  09A1               	comf	___aldiv@divisor+1,f
  3460  0214  09A2               	comf	___aldiv@divisor+2,f
  3461  0215  09A3               	comf	___aldiv@divisor+3,f
  3462  0216  0AA0               	incf	___aldiv@divisor,f
  3463  0217  1903               	skipnz
  3464  0218  0AA1               	incf	___aldiv@divisor+1,f
  3465  0219  1903               	skipnz
  3466  021A  0AA2               	incf	___aldiv@divisor+2,f
  3467  021B  1903               	skipnz
  3468  021C  0AA3               	incf	___aldiv@divisor+3,f
  3469  021D  01A9               	clrf	___aldiv@sign
  3470  021E  0AA9               	incf	___aldiv@sign,f
  3471  021F                     l318:
  3472  021F  1FA7               	btfss	___aldiv@dividend+3,7
  3473  0220  2A22               	goto	u901
  3474  0221  2A23               	goto	u900
  3475  0222                     u901:
  3476  0222  2A32               	goto	l1329
  3477  0223                     u900:
  3478  0223                     l1325:
  3479  0223  09A4               	comf	___aldiv@dividend,f
  3480  0224  09A5               	comf	___aldiv@dividend+1,f
  3481  0225  09A6               	comf	___aldiv@dividend+2,f
  3482  0226  09A7               	comf	___aldiv@dividend+3,f
  3483  0227  0AA4               	incf	___aldiv@dividend,f
  3484  0228  1903               	skipnz
  3485  0229  0AA5               	incf	___aldiv@dividend+1,f
  3486  022A  1903               	skipnz
  3487  022B  0AA6               	incf	___aldiv@dividend+2,f
  3488  022C  1903               	skipnz
  3489  022D  0AA7               	incf	___aldiv@dividend+3,f
  3490  022E                     l1327:
  3491  022E  3001               	movlw	1
  3492  022F  00FD               	movwf	??___aldiv
  3493  0230  087D               	movf	??___aldiv,w
  3494  0231  06A9               	xorwf	___aldiv@sign,f
  3495  0232                     l1329:
  3496  0232  3000               	movlw	0
  3497  0233  00AD               	movwf	___aldiv@quotient+3
  3498  0234  3000               	movlw	0
  3499  0235  00AC               	movwf	___aldiv@quotient+2
  3500  0236  3000               	movlw	0
  3501  0237  00AB               	movwf	___aldiv@quotient+1
  3502  0238  3000               	movlw	0
  3503  0239  00AA               	movwf	___aldiv@quotient
  3504  023A                     l1331:
  3505  023A  0823               	movf	___aldiv@divisor+3,w
  3506  023B  0422               	iorwf	___aldiv@divisor+2,w
  3507  023C  0421               	iorwf	___aldiv@divisor+1,w
  3508  023D  0420               	iorwf	___aldiv@divisor,w
  3509  023E  1903               	skipnz
  3510  023F  2A41               	goto	u911
  3511  0240  2A42               	goto	u910
  3512  0241                     u911:
  3513  0241  2A8F               	goto	l1351
  3514  0242                     u910:
  3515  0242                     l1333:
  3516  0242  01A8               	clrf	___aldiv@counter
  3517  0243  0AA8               	incf	___aldiv@counter,f
  3518  0244  2A52               	goto	l1337
  3519  0245                     l1335:
  3520  0245  3001               	movlw	1
  3521  0246  00FD               	movwf	??___aldiv
  3522  0247                     u925:
  3523  0247  1003               	clrc
  3524  0248  0DA0               	rlf	___aldiv@divisor,f
  3525  0249  0DA1               	rlf	___aldiv@divisor+1,f
  3526  024A  0DA2               	rlf	___aldiv@divisor+2,f
  3527  024B  0DA3               	rlf	___aldiv@divisor+3,f
  3528  024C  0BFD               	decfsz	??___aldiv,f
  3529  024D  2A47               	goto	u925
  3530  024E  3001               	movlw	1
  3531  024F  00FD               	movwf	??___aldiv
  3532  0250  087D               	movf	??___aldiv,w
  3533  0251  07A8               	addwf	___aldiv@counter,f
  3534  0252                     l1337:
  3535  0252  1FA3               	btfss	___aldiv@divisor+3,7
  3536  0253  2A55               	goto	u931
  3537  0254  2A56               	goto	u930
  3538  0255                     u931:
  3539  0255  2A45               	goto	l1335
  3540  0256                     u930:
  3541  0256                     l1339:
  3542  0256  3001               	movlw	1
  3543  0257  00FD               	movwf	??___aldiv
  3544  0258                     u945:
  3545  0258  1003               	clrc
  3546  0259  0DAA               	rlf	___aldiv@quotient,f
  3547  025A  0DAB               	rlf	___aldiv@quotient+1,f
  3548  025B  0DAC               	rlf	___aldiv@quotient+2,f
  3549  025C  0DAD               	rlf	___aldiv@quotient+3,f
  3550  025D  0BFD               	decfsz	??___aldiv,f
  3551  025E  2A58               	goto	u945
  3552  025F                     l1341:
  3553  025F  0823               	movf	___aldiv@divisor+3,w
  3554  0260  0227               	subwf	___aldiv@dividend+3,w
  3555  0261  1D03               	skipz
  3556  0262  2A6D               	goto	u955
  3557  0263  0822               	movf	___aldiv@divisor+2,w
  3558  0264  0226               	subwf	___aldiv@dividend+2,w
  3559  0265  1D03               	skipz
  3560  0266  2A6D               	goto	u955
  3561  0267  0821               	movf	___aldiv@divisor+1,w
  3562  0268  0225               	subwf	___aldiv@dividend+1,w
  3563  0269  1D03               	skipz
  3564  026A  2A6D               	goto	u955
  3565  026B  0820               	movf	___aldiv@divisor,w
  3566  026C  0224               	subwf	___aldiv@dividend,w
  3567  026D                     u955:
  3568  026D  1C03               	skipc
  3569  026E  2A70               	goto	u951
  3570  026F  2A71               	goto	u950
  3571  0270                     u951:
  3572  0270  2A80               	goto	l1347
  3573  0271                     u950:
  3574  0271                     l1343:
  3575  0271  0820               	movf	___aldiv@divisor,w
  3576  0272  02A4               	subwf	___aldiv@dividend,f
  3577  0273  0821               	movf	___aldiv@divisor+1,w
  3578  0274  1C03               	skipc
  3579  0275  0F21               	incfsz	___aldiv@divisor+1,w
  3580  0276  02A5               	subwf	___aldiv@dividend+1,f
  3581  0277  0822               	movf	___aldiv@divisor+2,w
  3582  0278  1C03               	skipc
  3583  0279  0F22               	incfsz	___aldiv@divisor+2,w
  3584  027A  02A6               	subwf	___aldiv@dividend+2,f
  3585  027B  0823               	movf	___aldiv@divisor+3,w
  3586  027C  1C03               	skipc
  3587  027D  0F23               	incfsz	___aldiv@divisor+3,w
  3588  027E  02A7               	subwf	___aldiv@dividend+3,f
  3589  027F                     l1345:
  3590  027F  142A               	bsf	___aldiv@quotient,0
  3591  0280                     l1347:
  3592  0280  3001               	movlw	1
  3593  0281                     u965:
  3594  0281  1003               	clrc
  3595  0282  0CA3               	rrf	___aldiv@divisor+3,f
  3596  0283  0CA2               	rrf	___aldiv@divisor+2,f
  3597  0284  0CA1               	rrf	___aldiv@divisor+1,f
  3598  0285  0CA0               	rrf	___aldiv@divisor,f
  3599  0286  3EFF               	addlw	-1
  3600  0287  1D03               	skipz
  3601  0288  2A81               	goto	u965
  3602  0289                     l1349:
  3603  0289  3001               	movlw	1
  3604  028A  02A8               	subwf	___aldiv@counter,f
  3605  028B  1D03               	btfss	3,2
  3606  028C  2A8E               	goto	u971
  3607  028D  2A8F               	goto	u970
  3608  028E                     u971:
  3609  028E  2A56               	goto	l1339
  3610  028F                     u970:
  3611  028F                     l1351:
  3612  028F  0829               	movf	___aldiv@sign,w
  3613  0290  1903               	btfsc	3,2
  3614  0291  2A93               	goto	u981
  3615  0292  2A94               	goto	u980
  3616  0293                     u981:
  3617  0293  2A9F               	goto	l1355
  3618  0294                     u980:
  3619  0294                     l1353:
  3620  0294  09AA               	comf	___aldiv@quotient,f
  3621  0295  09AB               	comf	___aldiv@quotient+1,f
  3622  0296  09AC               	comf	___aldiv@quotient+2,f
  3623  0297  09AD               	comf	___aldiv@quotient+3,f
  3624  0298  0AAA               	incf	___aldiv@quotient,f
  3625  0299  1903               	skipnz
  3626  029A  0AAB               	incf	___aldiv@quotient+1,f
  3627  029B  1903               	skipnz
  3628  029C  0AAC               	incf	___aldiv@quotient+2,f
  3629  029D  1903               	skipnz
  3630  029E  0AAD               	incf	___aldiv@quotient+3,f
  3631  029F                     l1355:
  3632  029F  082D               	movf	___aldiv@quotient+3,w
  3633  02A0  00A3               	movwf	?___aldiv+3
  3634  02A1  082C               	movf	___aldiv@quotient+2,w
  3635  02A2  00A2               	movwf	?___aldiv+2
  3636  02A3  082B               	movf	___aldiv@quotient+1,w
  3637  02A4  00A1               	movwf	?___aldiv+1
  3638  02A5  082A               	movf	___aldiv@quotient,w
  3639  02A6  00A0               	movwf	?___aldiv
  3640  02A7                     l328:
  3641  02A7  0008               	return
  3642  02A8                     __end_of___aldiv:
  3643                           
  3644                           	psect	text15
  3645  0FC0                     __ptext15:	
  3646 ;; *************** function _LCD_Char *****************
  3647 ;; Defined at:
  3648 ;;		line 27 in file "./lcd4bit.h"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  data            1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  data            1    2[COMMON] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3662 ;;      Params:         0       0       0       0       0
  3663 ;;      Locals:         1       0       0       0       0
  3664 ;;      Temps:          2       0       0       0       0
  3665 ;;      Totals:         3       0       0       0       0
  3666 ;;Total ram usage:        3 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_LCD_num
  3672 ;;		_show_multidigits
  3673 ;;		_main
  3674 ;;		_show
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           
  3679                           ;psect for function _LCD_Char
  3680  0FC0                     _LCD_Char:
  3681                           
  3682                           ;incstack = 0
  3683                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3684                           ;LCD_Char@data stored from wreg
  3685  0FC0  00F2               	movwf	LCD_Char@data
  3686  0FC1                     l1283:
  3687                           
  3688                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  3689  0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  3690  0FC2  1303               	bcf	3,6	;RP1=0, select bank0
  3691  0FC3  1407               	bsf	7,0	;volatile
  3692  0FC4                     l1285:
  3693                           
  3694                           ;./lcd4bit.h: 30:     PORTB = data;
  3695  0FC4  0872               	movf	LCD_Char@data,w
  3696  0FC5  0086               	movwf	6	;volatile
  3697  0FC6                     l1287:
  3698                           
  3699                           ;./lcd4bit.h: 31:     RC1 = 1;
  3700  0FC6  1487               	bsf	7,1	;volatile
  3701                           
  3702                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3703  0FC7  3041               	movlw	65
  3704  0FC8  00F1               	movwf	??_LCD_Char+1
  3705  0FC9  30EE               	movlw	238
  3706  0FCA  00F0               	movwf	??_LCD_Char
  3707  0FCB                     u1667:
  3708  0FCB  0BF0               	decfsz	??_LCD_Char,f
  3709  0FCC  2FCB               	goto	u1667
  3710  0FCD  0BF1               	decfsz	??_LCD_Char+1,f
  3711  0FCE  2FCB               	goto	u1667
  3712  0FCF  0000               	nop
  3713  0FD0                     l1289:
  3714                           
  3715                           ;./lcd4bit.h: 33:     RC1 = 0;
  3716  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0FD2  1087               	bcf	7,1	;volatile
  3719                           
  3720                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3721  0FD3  3041               	movlw	65
  3722  0FD4  00F1               	movwf	??_LCD_Char+1
  3723  0FD5  30EE               	movlw	238
  3724  0FD6  00F0               	movwf	??_LCD_Char
  3725  0FD7                     u1677:
  3726  0FD7  0BF0               	decfsz	??_LCD_Char,f
  3727  0FD8  2FD7               	goto	u1677
  3728  0FD9  0BF1               	decfsz	??_LCD_Char+1,f
  3729  0FDA  2FD7               	goto	u1677
  3730  0FDB  0000               	nop
  3731  0FDC                     l1291:
  3732                           
  3733                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  3734  0FDC  0872               	movf	LCD_Char@data,w
  3735  0FDD  00F0               	movwf	??_LCD_Char
  3736  0FDE  3003               	movlw	3
  3737  0FDF                     u825:
  3738  0FDF  1003               	clrc
  3739  0FE0  0DF0               	rlf	??_LCD_Char,f
  3740  0FE1  3EFF               	addlw	-1
  3741  0FE2  1D03               	skipz
  3742  0FE3  2FDF               	goto	u825
  3743  0FE4  1003               	clrc
  3744  0FE5  0D70               	rlf	??_LCD_Char,w
  3745  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  3747  0FE8  0086               	movwf	6	;volatile
  3748  0FE9                     l1293:
  3749                           
  3750                           ;./lcd4bit.h: 36:     RC1 = 1;
  3751  0FE9  1487               	bsf	7,1	;volatile
  3752  0FEA                     l1295:
  3753                           
  3754                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3755  0FEA  3041               	movlw	65
  3756  0FEB  00F1               	movwf	??_LCD_Char+1
  3757  0FEC  30EE               	movlw	238
  3758  0FED  00F0               	movwf	??_LCD_Char
  3759  0FEE                     u1687:
  3760  0FEE  0BF0               	decfsz	??_LCD_Char,f
  3761  0FEF  2FEE               	goto	u1687
  3762  0FF0  0BF1               	decfsz	??_LCD_Char+1,f
  3763  0FF1  2FEE               	goto	u1687
  3764  0FF2  0000               	nop
  3765  0FF3                     l1297:
  3766                           
  3767                           ;./lcd4bit.h: 38:     RC1 = 0;
  3768  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  3769  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  3770  0FF5  1087               	bcf	7,1	;volatile
  3771  0FF6                     l1299:
  3772                           
  3773                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3774  0FF6  3041               	movlw	65
  3775  0FF7  00F1               	movwf	??_LCD_Char+1
  3776  0FF8  30EE               	movlw	238
  3777  0FF9  00F0               	movwf	??_LCD_Char
  3778  0FFA                     u1697:
  3779  0FFA  0BF0               	decfsz	??_LCD_Char,f
  3780  0FFB  2FFA               	goto	u1697
  3781  0FFC  0BF1               	decfsz	??_LCD_Char+1,f
  3782  0FFD  2FFA               	goto	u1697
  3783  0FFE  0000               	nop
  3784  0FFF                     l54:
  3785  0FFF  0008               	return
  3786  1000                     __end_of_LCD_Char:
  3787                           
  3788                           	psect	text16
  3789  0F18                     __ptext16:	
  3790 ;; *************** function _LCD_init *****************
  3791 ;; Defined at:
  3792 ;;		line 41 in file "./lcd4bit.h"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, pclath, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3806 ;;      Params:         0       0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0
  3808 ;;      Temps:          2       0       0       0       0
  3809 ;;      Totals:         2       0       0       0       0
  3810 ;;Total ram usage:        2 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 1
  3813 ;; This function calls:
  3814 ;;		_LCD_Command
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _LCD_init
  3822  0F18                     _LCD_init:
  3823  0F18                     l1489:	
  3824                           ;incstack = 0
  3825                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3826                           
  3827                           
  3828                           ;./lcd4bit.h: 43:     LCD_Command (0x02);
  3829  0F18  3002               	movlw	2
  3830  0F19  120A  158A  2780  120A  158A  	fcall	_LCD_Command
  3831                           
  3832                           ;./lcd4bit.h: 44:     LCD_Command (0x28);
  3833  0F1E  3028               	movlw	40
  3834  0F1F  120A  158A  2780  120A  158A  	fcall	_LCD_Command
  3835                           
  3836                           ;./lcd4bit.h: 45:     LCD_Command (0x80);
  3837  0F24  3080               	movlw	128
  3838  0F25  120A  158A  2780  120A  158A  	fcall	_LCD_Command
  3839                           
  3840                           ;./lcd4bit.h: 46:     LCD_Command (0x0C);
  3841  0F2A  300C               	movlw	12
  3842  0F2B  120A  158A  2780  120A  158A  	fcall	_LCD_Command
  3843                           
  3844                           ;./lcd4bit.h: 47:     LCD_Command (0x06);
  3845  0F30  3006               	movlw	6
  3846  0F31  120A  158A  2780  120A  158A  	fcall	_LCD_Command
  3847                           
  3848                           ;./lcd4bit.h: 48:     LCD_Command (0x01);
  3849  0F36  3001               	movlw	1
  3850  0F37  120A  158A  2780  120A  158A  	fcall	_LCD_Command
  3851  0F3C                     l1491:
  3852                           
  3853                           ;./lcd4bit.h: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3854  0F3C  3041               	movlw	65
  3855  0F3D  00F4               	movwf	??_LCD_init+1
  3856  0F3E  30EE               	movlw	238
  3857  0F3F  00F3               	movwf	??_LCD_init
  3858  0F40                     u1707:
  3859  0F40  0BF3               	decfsz	??_LCD_init,f
  3860  0F41  2F40               	goto	u1707
  3861  0F42  0BF4               	decfsz	??_LCD_init+1,f
  3862  0F43  2F40               	goto	u1707
  3863  0F44  0000               	nop
  3864  0F45                     l57:
  3865  0F45  0008               	return
  3866  0F46                     __end_of_LCD_init:
  3867                           
  3868                           	psect	text17
  3869  0F80                     __ptext17:	
  3870 ;; *************** function _LCD_Command *****************
  3871 ;; Defined at:
  3872 ;;		line 13 in file "./lcd4bit.h"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  cmnd            1    wreg     unsigned char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  cmnd            1    2[COMMON] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3886 ;;      Params:         0       0       0       0       0
  3887 ;;      Locals:         1       0       0       0       0
  3888 ;;      Temps:          2       0       0       0       0
  3889 ;;      Totals:         3       0       0       0       0
  3890 ;;Total ram usage:        3 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_LCD_init
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function _LCD_Command
  3902  0F80                     _LCD_Command:
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  3906                           ;LCD_Command@cmnd stored from wreg
  3907  0F80  00F2               	movwf	LCD_Command@cmnd
  3908  0F81                     l1265:
  3909                           
  3910                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  3911  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  3913  0F83  1007               	bcf	7,0	;volatile
  3914  0F84                     l1267:
  3915                           
  3916                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  3917  0F84  0872               	movf	LCD_Command@cmnd,w
  3918  0F85  0086               	movwf	6	;volatile
  3919  0F86                     l1269:
  3920                           
  3921                           ;./lcd4bit.h: 17:     RC1 = 1;
  3922  0F86  1487               	bsf	7,1	;volatile
  3923                           
  3924                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3925  0F87  3041               	movlw	65
  3926  0F88  00F1               	movwf	??_LCD_Command+1
  3927  0F89  30EE               	movlw	238
  3928  0F8A  00F0               	movwf	??_LCD_Command
  3929  0F8B                     u1717:
  3930  0F8B  0BF0               	decfsz	??_LCD_Command,f
  3931  0F8C  2F8B               	goto	u1717
  3932  0F8D  0BF1               	decfsz	??_LCD_Command+1,f
  3933  0F8E  2F8B               	goto	u1717
  3934  0F8F  0000               	nop
  3935  0F90                     l1271:
  3936                           
  3937                           ;./lcd4bit.h: 19:     RC1 = 0;
  3938  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  3939  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  3940  0F92  1087               	bcf	7,1	;volatile
  3941                           
  3942                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3943  0F93  3041               	movlw	65
  3944  0F94  00F1               	movwf	??_LCD_Command+1
  3945  0F95  30EE               	movlw	238
  3946  0F96  00F0               	movwf	??_LCD_Command
  3947  0F97                     u1727:
  3948  0F97  0BF0               	decfsz	??_LCD_Command,f
  3949  0F98  2F97               	goto	u1727
  3950  0F99  0BF1               	decfsz	??_LCD_Command+1,f
  3951  0F9A  2F97               	goto	u1727
  3952  0F9B  0000               	nop
  3953  0F9C                     l1273:
  3954                           
  3955                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  3956  0F9C  0872               	movf	LCD_Command@cmnd,w
  3957  0F9D  00F0               	movwf	??_LCD_Command
  3958  0F9E  3003               	movlw	3
  3959  0F9F                     u815:
  3960  0F9F  1003               	clrc
  3961  0FA0  0DF0               	rlf	??_LCD_Command,f
  3962  0FA1  3EFF               	addlw	-1
  3963  0FA2  1D03               	skipz
  3964  0FA3  2F9F               	goto	u815
  3965  0FA4  1003               	clrc
  3966  0FA5  0D70               	rlf	??_LCD_Command,w
  3967  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0FA8  0086               	movwf	6	;volatile
  3970  0FA9                     l1275:
  3971                           
  3972                           ;./lcd4bit.h: 22:     RC1 = 1;
  3973  0FA9  1487               	bsf	7,1	;volatile
  3974  0FAA                     l1277:
  3975                           
  3976                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3977  0FAA  3041               	movlw	65
  3978  0FAB  00F1               	movwf	??_LCD_Command+1
  3979  0FAC  30EE               	movlw	238
  3980  0FAD  00F0               	movwf	??_LCD_Command
  3981  0FAE                     u1737:
  3982  0FAE  0BF0               	decfsz	??_LCD_Command,f
  3983  0FAF  2FAE               	goto	u1737
  3984  0FB0  0BF1               	decfsz	??_LCD_Command+1,f
  3985  0FB1  2FAE               	goto	u1737
  3986  0FB2  0000               	nop
  3987  0FB3                     l1279:
  3988                           
  3989                           ;./lcd4bit.h: 24:     RC1 = 0;
  3990  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3991  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3992  0FB5  1087               	bcf	7,1	;volatile
  3993  0FB6                     l1281:
  3994                           
  3995                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3996  0FB6  3041               	movlw	65
  3997  0FB7  00F1               	movwf	??_LCD_Command+1
  3998  0FB8  30EE               	movlw	238
  3999  0FB9  00F0               	movwf	??_LCD_Command
  4000  0FBA                     u1747:
  4001  0FBA  0BF0               	decfsz	??_LCD_Command,f
  4002  0FBB  2FBA               	goto	u1747
  4003  0FBC  0BF1               	decfsz	??_LCD_Command+1,f
  4004  0FBD  2FBA               	goto	u1747
  4005  0FBE  0000               	nop
  4006  0FBF                     l51:
  4007  0FBF  0008               	return
  4008  0FC0                     __end_of_LCD_Command:
  4009                           
  4010                           	psect	text18
  4011  0140                     __ptext18:	
  4012 ;; *************** function _ADC_Init *****************
  4013 ;; Defined at:
  4014 ;;		line 108 in file "main.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		wreg
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0
  4030 ;;      Temps:          2       0       0       0       0
  4031 ;;      Totals:         2       0       0       0       0
  4032 ;;Total ram usage:        2 bytes
  4033 ;; Hardware stack levels used: 1
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_main
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           
  4042                           ;psect for function _ADC_Init
  4043  0140                     _ADC_Init:
  4044  0140                     l1671:	
  4045                           ;incstack = 0
  4046                           ; Regs used in _ADC_Init: [wreg]
  4047                           
  4048                           
  4049                           ;main.c: 110:     ADCON0 = 0x85;
  4050  0140  3085               	movlw	133
  4051  0141  1283               	bcf	3,5	;RP0=0, select bank0
  4052  0142  1303               	bcf	3,6	;RP1=0, select bank0
  4053  0143  009F               	movwf	31	;volatile
  4054                           
  4055                           ;main.c: 111:     ADCON1 = 0xC0;
  4056  0144  30C0               	movlw	192
  4057  0145  1683               	bsf	3,5	;RP0=1, select bank1
  4058  0146  1303               	bcf	3,6	;RP1=0, select bank1
  4059  0147  009F               	movwf	31	;volatile
  4060                           
  4061                           ;main.c: 112:     AV[0]= ((ADRESH<<8)+ADRESL);
  4062  0148  1283               	bcf	3,5	;RP0=0, select bank0
  4063  0149  1303               	bcf	3,6	;RP1=0, select bank0
  4064  014A  081E               	movf	30,w	;volatile
  4065  014B  00C4               	movwf	_AV+1
  4066  014C  1683               	bsf	3,5	;RP0=1, select bank1
  4067  014D  1303               	bcf	3,6	;RP1=0, select bank1
  4068  014E  081E               	movf	30,w	;volatile
  4069  014F  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0150  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0151  00C3               	movwf	_AV
  4072                           
  4073                           ;main.c: 114:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4074  0152  3041               	movlw	65
  4075  0153  00F1               	movwf	??_ADC_Init+1
  4076  0154  30EE               	movlw	238
  4077  0155  00F0               	movwf	??_ADC_Init
  4078  0156                     u1757:
  4079  0156  0BF0               	decfsz	??_ADC_Init,f
  4080  0157  2956               	goto	u1757
  4081  0158  0BF1               	decfsz	??_ADC_Init+1,f
  4082  0159  2956               	goto	u1757
  4083  015A  0000               	nop
  4084                           
  4085                           ;main.c: 115:     ADCON0 = 0x8D;
  4086  015B  308D               	movlw	141
  4087  015C  1283               	bcf	3,5	;RP0=0, select bank0
  4088  015D  1303               	bcf	3,6	;RP1=0, select bank0
  4089  015E  009F               	movwf	31	;volatile
  4090                           
  4091                           ;main.c: 116:     ADCON1 = 0xC0;
  4092  015F  30C0               	movlw	192
  4093  0160  1683               	bsf	3,5	;RP0=1, select bank1
  4094  0161  1303               	bcf	3,6	;RP1=0, select bank1
  4095  0162  009F               	movwf	31	;volatile
  4096                           
  4097                           ;main.c: 117:     AV[1]= ((ADRESH<<8)+ADRESL);
  4098  0163  1283               	bcf	3,5	;RP0=0, select bank0
  4099  0164  1303               	bcf	3,6	;RP1=0, select bank0
  4100  0165  081E               	movf	30,w	;volatile
  4101  0166  00C6               	movwf	_AV+3
  4102  0167  1683               	bsf	3,5	;RP0=1, select bank1
  4103  0168  1303               	bcf	3,6	;RP1=0, select bank1
  4104  0169  081E               	movf	30,w	;volatile
  4105  016A  1283               	bcf	3,5	;RP0=0, select bank0
  4106  016B  1303               	bcf	3,6	;RP1=0, select bank0
  4107  016C  00C5               	movwf	_AV+2
  4108                           
  4109                           ;main.c: 119:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4110  016D  3041               	movlw	65
  4111  016E  00F1               	movwf	??_ADC_Init+1
  4112  016F  30EE               	movlw	238
  4113  0170  00F0               	movwf	??_ADC_Init
  4114  0171                     u1767:
  4115  0171  0BF0               	decfsz	??_ADC_Init,f
  4116  0172  2971               	goto	u1767
  4117  0173  0BF1               	decfsz	??_ADC_Init+1,f
  4118  0174  2971               	goto	u1767
  4119  0175  0000               	nop
  4120                           
  4121                           ;main.c: 120:     ADCON0 = 0x95;
  4122  0176  3095               	movlw	149
  4123  0177  1283               	bcf	3,5	;RP0=0, select bank0
  4124  0178  1303               	bcf	3,6	;RP1=0, select bank0
  4125  0179  009F               	movwf	31	;volatile
  4126                           
  4127                           ;main.c: 121:     ADCON1 = 0xC0;
  4128  017A  30C0               	movlw	192
  4129  017B  1683               	bsf	3,5	;RP0=1, select bank1
  4130  017C  1303               	bcf	3,6	;RP1=0, select bank1
  4131  017D  009F               	movwf	31	;volatile
  4132                           
  4133                           ;main.c: 122:     AV[2]= ((ADRESH<<8)+ADRESL);
  4134  017E  1283               	bcf	3,5	;RP0=0, select bank0
  4135  017F  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0180  081E               	movf	30,w	;volatile
  4137  0181  00C8               	movwf	_AV+5
  4138  0182  1683               	bsf	3,5	;RP0=1, select bank1
  4139  0183  1303               	bcf	3,6	;RP1=0, select bank1
  4140  0184  081E               	movf	30,w	;volatile
  4141  0185  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0186  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0187  00C7               	movwf	_AV+4
  4144                           
  4145                           ;main.c: 124:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4146  0188  3041               	movlw	65
  4147  0189  00F1               	movwf	??_ADC_Init+1
  4148  018A  30EE               	movlw	238
  4149  018B  00F0               	movwf	??_ADC_Init
  4150  018C                     u1777:
  4151  018C  0BF0               	decfsz	??_ADC_Init,f
  4152  018D  298C               	goto	u1777
  4153  018E  0BF1               	decfsz	??_ADC_Init+1,f
  4154  018F  298C               	goto	u1777
  4155  0190  0000               	nop
  4156                           
  4157                           ;main.c: 125:     ADCON0 = 0x9D;
  4158  0191  309D               	movlw	157
  4159  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4160  0193  1303               	bcf	3,6	;RP1=0, select bank0
  4161  0194  009F               	movwf	31	;volatile
  4162                           
  4163                           ;main.c: 126:     ADCON1 = 0xC0;
  4164  0195  30C0               	movlw	192
  4165  0196  1683               	bsf	3,5	;RP0=1, select bank1
  4166  0197  1303               	bcf	3,6	;RP1=0, select bank1
  4167  0198  009F               	movwf	31	;volatile
  4168                           
  4169                           ;main.c: 127:     AV[3]= ((ADRESH<<8)+ADRESL);
  4170  0199  1283               	bcf	3,5	;RP0=0, select bank0
  4171  019A  1303               	bcf	3,6	;RP1=0, select bank0
  4172  019B  081E               	movf	30,w	;volatile
  4173  019C  00CA               	movwf	_AV+7
  4174  019D  1683               	bsf	3,5	;RP0=1, select bank1
  4175  019E  1303               	bcf	3,6	;RP1=0, select bank1
  4176  019F  081E               	movf	30,w	;volatile
  4177  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  4178  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  4179  01A2  00C9               	movwf	_AV+6
  4180  01A3                     l167:
  4181  01A3  0008               	return
  4182  01A4                     __end_of_ADC_Init:
  4183  007E                     btemp	set	126	;btemp
  4184  007E                     wtemp0	set	126
  4185                           
  4186                           	psect	idloc
  4187                           
  4188                           ;Config register IDLOC0 @ 0x2000
  4189                           ;	unspecified, using default values
  4190  2000                     	org	8192
  4191  2000  3FFF               	dw	16383
  4192                           
  4193                           ;Config register IDLOC1 @ 0x2001
  4194                           ;	unspecified, using default values
  4195  2001                     	org	8193
  4196  2001  3FFF               	dw	16383
  4197                           
  4198                           ;Config register IDLOC2 @ 0x2002
  4199                           ;	unspecified, using default values
  4200  2002                     	org	8194
  4201  2002  3FFF               	dw	16383
  4202                           
  4203                           ;Config register IDLOC3 @ 0x2003
  4204                           ;	unspecified, using default values
  4205  2003                     	org	8195
  4206  2003  3FFF               	dw	16383
  4207                           
  4208                           	psect	config
  4209                           
  4210                           ;Config register CONFIG @ 0x2007
  4211                           ;	Oscillator Selection bits
  4212                           ;	FOSC = HS, HS oscillator
  4213                           ;	Watchdog Timer Enable bit
  4214                           ;	WDTE = OFF, WDT disabled
  4215                           ;	Power-up Timer Enable bit
  4216                           ;	PWRTE = OFF, PWRT disabled
  4217                           ;	Brown-out Reset Enable bit
  4218                           ;	BOREN = ON, BOR enabled
  4219                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4220                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4221                           ;	Data EEPROM Memory Code Protection bit
  4222                           ;	CPD = OFF, Data EEPROM code protection off
  4223                           ;	Flash Program Memory Write Enable bits
  4224                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4225                           ;	In-Circuit Debugger Mode bit
  4226                           ;	DEBUG = 0x1, unprogrammed default
  4227                           ;	Flash Program Memory Code Protection bit
  4228                           ;	CP = OFF, Code protection off
  4229  2007                     	org	8199
  4230  2007  3FFA               	dw	16378

Data Sizes:
    Strings     2
    Constant    0
    Data        2
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _tx_sn->___awdiv
    _show_multidigits->___awdiv
    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   16942
                                             30 BANK0      5     5      0
                           _ADC_Init
                           _LCD_Char
                        _LCD_Command
                           _LCD_init
                            _LCD_num
                         _dht11_init
                         _read_dht11
                            _ser_int
                   _show_multidigits
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (1) _tx_sn                                               16    14      2    6059
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _show_multidigits                                    16    14      2    6233
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_dht11                                           4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _dht11_init                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_num                                             18    14      4    4202
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (2) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1375
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Char
   _LCD_Command
   _LCD_init
     _LCD_Command
   _LCD_num
     _LCD_Char
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
     ___lwmod
     _intdigits_chardigits
   _dht11_init
   _read_dht11
   _ser_int
   _show_multidigits
     _LCD_Char
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _tx
   _tx_sn
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 05 15:25:28 2022

                            pc 0002                   ?_LCD_Command 0070                             l51 0FBF  
                           l60 0366                             l54 0FFF                             l57 0F45  
                           l82 0EFB                             l75 0654                             _AV 0043  
                           l69 001A                             l85 0EE9                             l79 0654  
                           l87 0EED                             l88 0EEE                   ___awdiv@sign 0076  
                           _sn 0056                             _tx 0EE4                             fsr 0004  
                          l100 07E6                            l104 07E6                            l123 0F17  
                          l141 005C                            l133 001C                            l151 037F  
                          l161 049C                            l138 004D                            l318 021F  
                          l406 020A                            l167 01A3                            l328 02A7  
                          l267 00E6                            l419 013F                            l525 00A0  
                          l535 0F7F                            ?_tx 0070                            _RC0 0038  
                          _RC1 0039                            _RD0 0040                            u900 0223  
                          u901 0222                            u910 0242                            u830 0EED  
                          u815 0F9F                            u911 0241                            u831 0EEC  
                          u840 00AD                            u825 0FDF                            u841 00AC  
                          u930 0256                            u931 0255                            u851 00B6  
                          u852 00BD                            u925 0247                            u853 00C4  
                          u950 0271                            u951 0270                            u880 00DE  
                          u945 0258                            u881 00DD                            u865 00C6  
                          u970 028F                            u890 0212                            u971 028E  
                          u955 026D                            u891 0211                            u875 00CE  
                          u980 0294                            u981 0293                            u965 0281  
                          u990 01A9                            u991 01A8                            _avv 004B  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0076  
                          tx@a 0070         show_multidigits@digit1 0026         show_multidigits@digit2 0028  
       show_multidigits@digit3 0024         show_multidigits@digit4 0020                           ??_tx 0070  
              __end_of_LCD_num 0367                           l1301 000C                           l1311 00C4  
                         l1303 0EE5                           l1321 020E                           l1313 00CD  
                         l1305 00A1                           l1331 023A                           l1323 0212  
                         l1315 00DE                           l1307 00A9                           l1411 00F3  
                         l1403 00E7                           l1341 025F                           l1333 0242  
                         l1325 0223                           l1309 00AD                           l1501 0302  
                         l1421 010C                           l1413 00F7                           l1405 00E8  
                         l1271 0F90                           l1343 0271                           l1335 0245  
                         l1351 028F                           l1327 022E                           l1319 020B  
                         l1511 0341                           l1503 0319                           l1431 012B  
                         l1423 0110                           l1415 00FC                           l1407 00EC  
                         l1281 0FB6                           l1273 0F9C                           l1265 0F81  
                         l1353 0294                           l1345 027F                           l1337 0252  
                         l1329 0232                           l1441 005D                           l1513 034A  
                         l1505 031D                           l1361 01A5                           l1425 0114  
                         l1417 0102                           l1433 0131                           l1409 00F1  
                         l1521 04D4                           l1601 06C5                           l1275 0FA9  
                         l1267 0F84                           l1291 0FDC                           l1283 0FC1  
                         l1355 029F                           l1347 0280                           l1339 0256  
                         l1451 0073                           l1443 005F                           l1515 0353  
                         l1507 0334                           l1371 01B9                           l1363 01A9  
                         l1435 0136                           l1427 011E                           l1419 0105  
                         l1531 0510                           l1523 04DD                           l1611 0720  
                         l1603 06EB                           l1277 0FAA                           l1269 0F86  
                         l1293 0FE9                           l1285 0FC4                           l1349 0289  
                         l1461 0096                           l1453 0077                           l1445 0065  
                         l1509 033B                           l1381 01CF                           l1373 01BD  
                         l1365 01AE                           l1437 013B                           l1429 0124  
                         l1541 0559                           l1533 0517                           l1525 04E6  
                         l1517 04C3                           l1621 076B                           l1613 0729  
                         l1605 06EF                           l1701 0372                           l1279 0FB3  
                         l1295 0FEA                           l1287 0FC6                           l1455 0088  
                         l1447 0068                           l1463 009C                           l1471 0F4F  
                         l1391 01EF                           l1383 01D3                           l1375 01BF  
                         l1367 01B0                           l1359 01A4                           l1551 0597  
                         l1543 055D                           l1527 04F9                           l1535 0521  
                         l1519 04CC                           l1631 07C3                           l1623 076F  
                         l1607 0706                           l1615 0733                           l1711 0399  
                         l1703 0377                           l1297 0FF3                           l1289 0FD0  
                         l1457 008E                           l1449 006F                           l1481 0F6E  
                         l1473 0F56                           l1641 0F02                           l1393 01F6  
                         l1385 01D7                           l1377 01C5                           l1369 01B4  
                         l1561 05DD                           l1545 0574                           l1537 052A  
                         l1553 05A1                           l1529 04FD                           l1633 07CA  
                         l1625 0786                           l1617 073C                           l1609 0719  
                         l1721 03B8                           l1713 039F                           l1705 037C  
                         l1491 0F3C                           l1299 0FF6                           l1459 008F  
                         l1483 0F75                           l1475 0F5A                           l1467 0F46  
                         l1643 0F0A                           l1387 01E8                           l1379 01C8  
                         l1395 01FC                           l1571 0638                           l1563 05F4  
                         l1555 05AA                           l1547 0587                           l1539 0533  
                         l1635 07D3                           l1627 0799                           l1619 0745  
                         l1731 03CC                           l1723 03BE                           l1707 0383  
                         l1477 0F5E                           l1469 0F4C                           l1485 0F7B  
                         l1493 02A8                           l1645 0F0E                           l1661 003E  
                         l1397 0201                           l1389 01EE                           l1573 0641  
                         l1565 0607                           l1557 05B3                           l1549 058E  
                         l1637 07DC                           l1629 07B0                           l1581 065E  
                         l1741 03EC                           l1733 03D3                           l1709 038E  
                         l1671 0140                           l1479 0F68                           l1495 02A8  
                         l1647 0F13                           l1639 0EFC                           l1663 0051  
                         l1655 0022                           l1399 0206                           l1575 064A  
                         l1567 061E                           l1559 05D9                           l1591 068F  
                         l1583 0666                           l1751 0411                           l1743 03F2  
                         l1735 03DA                           l1719 03A2                           l1489 0F18  
                         l1497 02DC                           l1665 0055                           l1657 0027  
                         l1649 001B                           l1577 0EEF                           l1569 0631  
                         l1593 06A2                           l1585 066F                           l1761 04A8  
                         l1753 0415                           l1745 0400                           l1737 03E0  
                         l1729 03C1                           l1499 02EF                           l1667 005B  
                         l1659 002D                           l1595 06A9                           l1587 0678  
                         l1579 0655                           l1763 04B7                           l1755 041A  
                         l1747 0406                           l1739 03E6                           l1589 068B  
                         l1597 06B3                           l1757 0466                           l1749 040C  
                         l1599 06BC                           l1759 046A                           l1695 0367  
                         l1697 036B                           l1699 036D                           STR_1 0009  
                         u1000 01B4                           u1001 01B3                           u1010 01C5  
                         u1011 01C4                           u1100 00F7                           u1101 00F6  
                         u1030 01D7                           u1110 0102                           u1031 01D6  
                         u1111 0101                           u1200 0077                           u1201 0076  
                         u1025 01C9                           u1050 01E8                           u1130 0114  
                         u1051 01E7                           u1131 0113                           u1220 0088  
                         u1300 0F7B                           u1140 011E                           u1221 0087  
                         u1301 0F7A                           u1045 01D8                           u1141 011D  
                         u1125 0106                           u1070 01FC                           u1310 04CC  
                         u1215 0078                           u1071 01FB                           u1055 01E4  
                         u1311 04CB                           u1240 009C                           u1080 0201  
                         u1160 0131                           u1320 04DD                           u1400 0678  
                         u1241 009B                           u1225 0084                           u1081 0200  
                         u1065 01F0                           u1161 0130                           u1145 011A  
                         u1321 04DC                           u1401 0677                           u1250 0F4C  
                         u1170 0136                           u1090 00EC                           u1330 04E6  
                         u1410 06BC                           u1235 0090                           u1251 0F4B  
                         u1171 0135                           u1155 0125                           u1091 00EB  
                         u1331 04E5                           u1411 06BB                           u1180 0065  
                         u1500 005B                           u1340 052A                           u1420 06C5  
                         u1181 0064                           u1501 005A                           u1341 0529  
                         u1421 06C4                           u1270 0F5E                           u1350 0533  
                         u1430 073C                           u1271 0F5D                           u1351 0532  
                         u1431 073B                           u1280 0F68                           u1360 05AA  
                         u1440 0745                           u1281 0F67                           u1265 0F50  
                         u1361 05A9                           u1441 0744                           u1450 0022  
                         u1370 05B3                           u1195 0069                           u1451 0021  
                         u1371 05B2                           u1460 002D                           u1380 065E  
                         u1540 0383                           u1285 0F64                           u1461 002C  
                         u1381 065D                           u1541 0382                           u1390 066F  
                         u1550 03D3                           u1295 0F6F                           u1391 066E  
                         u1551 03D2                           u1607 0389                           u1560 03E0  
                         u1617 03FA                           u1561 03DF                           u1490 0051  
                         u1474 0035                           u1570 03F2                           u1707 0F40  
                         u1491 0050                           u1475 0033                           u1627 04B0  
                         u1571 03F1                           u1484 0046                           u1580 040C  
                         u1717 0F8B                           u1485 0044                           u1637 0024  
                         u1581 040B                           u1590 041A                           u1727 0F97  
                         u1647 0F06                           u1591 0419                           u1737 0FAE  
                         u1657 0F10                           u1747 0FBA                           u1667 0FCB  
                         u1757 0156                           u1677 0FD7                           u1767 0171  
                         u1687 0FEE                           u1777 018C                           u1697 0FFA  
                         _RCIF 0065         show_multidigits@result 0022                           _TXIF 0064  
                         _Temp 0054                           _main 0367                           btemp 007E  
             __end_of_ADC_Init 01A4                           start 0000               __end_of_LCD_Char 1000  
                 LCD_Char@data 0072               __end_of_LCD_init 0F46                __end_of___aldiv 02A8  
                        ?_main 0070                __end_of___awdiv 020B                __end_of___awmod 0140  
              ___awdiv@divisor 0070                __end_of___lwdiv 00A1                __end_of___lwmod 0F80  
              ___awdiv@counter 0075                          _RCREG 001A                          _RCSTA 0018  
      show_multidigits@result1 002A                          _SPBRG 0099                          _PORTB 0006  
                        _PORTD 0008                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TXREG 0019                          _TXSTA 0098  
          ___lmul@multiplicand 0074                          main@i 0041                          main@j 0042  
                        _tx_sn 0655                __end_of_ser_int 0EFC                          pclath 000A  
                        status 0003                          wtemp0 007E                __initialization 07E7  
                 __end_of_main 04C3                         ??_main 003E                 LCD_num@result1 003A  
         _intdigits_chardigits 000C                      ??_LCD_num 007E                         _ADCON0 001F  
                       _ADCON1 009F                         _ADRESH 001E                         _ADRESL 009E  
             ___awdiv@dividend 0072                         ?_tx_sn 0079                         ___lmul 00A1  
                    ??___aldiv 007D                      ??___awdiv 0074                      ??___awmod 0074  
                    ??___lwdiv 0074                      ??___lwmod 0074               ___awdiv@quotient 0077  
              ___awmod@divisor 0070                ___awmod@counter 0075           __size_of_LCD_Command 0040  
        ?_intdigits_chardigits 0070                      ?_ADC_Init 0070                      ??_ser_int 0070  
    __size_of_show_multidigits 0192                      ?_LCD_Char 0070        __end_of__initialization 07FC  
                    ?_LCD_init 0070                 __pcstackCOMMON 0070                     _dht11_init 0EFC  
                 __pidataBANK0 0EDA                  __end_of_tx_sn 07E7                     __end_of_tx 0EEF  
                   ??_ADC_Init 0070                        ??_tx_sn 007B                     __pbssBANK0 0043  
               tx_sn@remainder 002C                     ??_LCD_Char 0070                     ??_LCD_init 0073  
                 tx_sn@result1 002A                     __pmaintext 0367                        ?___lmul 0070  
               ___lmul@product 0079         ??_intdigits_chardigits 0076                        _LCD_num 02A8  
                   __stringtab 0003            show_multidigits@val 0079                    _Temp_byte_1 0051  
                  _Temp_byte_2 0050                    ?_dht11_init 0070                        ___aldiv 020B  
                      ___awdiv 01A4                __size_of___lmul 0046                        ___awmod 00E7  
                      ___lwdiv 005D                        ___lwmod 0F46                     _read_dht11 001B  
                      __ptext1 0655                        __ptext2 0EE4                        __ptext3 04C3  
                      __ptext4 00E7                        __ptext5 01A4                        __ptext6 0EEF  
                      __ptext7 001B                        __ptext8 0EFC                        __ptext9 02A8  
             ___awmod@dividend 0072               ___aldiv@dividend 0024                        _ser_int 0EEF  
                      clrloop0 0EDD           end_of_initialization 07FC               _show_multidigits 04C3  
             ___aldiv@quotient 002A              __size_of_ADC_Init 0064            __size_of_dht11_init 001C  
                    _RH_byte_1 0053                      _RH_byte_2 0052              __size_of_LCD_Char 0040  
            __size_of_LCD_init 002E                  ??_LCD_Command 0070                 __end_of___lmul 00E7  
                  ?_read_dht11 0070            start_initialization 07E7                  LCD_num@digit1 0032  
                LCD_num@digit2 0034                  LCD_num@digit3 0036                     LCD_num@val 002E  
                LCD_num@result 0038                       ??___lmul 0078                    __pdataBANK0 0056  
          read_dht11@for_count 0073               LCD_num@remainder 003C            __end_of_LCD_Command 0FC0  
                     ?_LCD_num 002E                      ___latbits 0002                      _Summation 004E  
                __pcstackBANK0 0020            __size_of_read_dht11 0042                      _check_bit 004F  
                  tx_sn@digit1 0026                    tx_sn@digit2 0028                    tx_sn@digit3 0024  
                  tx_sn@digit4 0020               ___lwdiv@dividend 0072                    tx_sn@result 0022  
                 ??_dht11_init 0070                       ?___aldiv 0020                       ?___awdiv 0070  
                     ?___awmod 0070                       ?___lwdiv 0070                       ?___lwmod 0070  
     __end_of_show_multidigits 0655                      __pstrings 0003  __size_of_intdigits_chardigits 000F  
                     _ADC_Init 0140                       ?_ser_int 0070               ___lwdiv@quotient 0075  
               __size_of_tx_sn 0192             __end_of_dht11_init 0F18                    __size_of_tx 000B  
              ___aldiv@divisor 0020                       _LCD_Char 0FC0                ___aldiv@counter 0028  
                     _LCD_init 0F18                      clear_ram0 0EDC                       _GO_nDONE 00FA  
                  _LCD_Command 0F80                    __stringbase 0008               __size_of_LCD_num 00BF  
               read_dht11@data 0072              ___lmul@multiplier 0070          intdigits_chardigits@a 0070  
        intdigits_chardigits@b 0072          intdigits_chardigits@c 0074                       _Humidity 0055  
             __size_of___aldiv 009D               __size_of___awdiv 0067               __size_of___awmod 0059  
                 ??_read_dht11 0070               __size_of___lwdiv 0044               __size_of___lwmod 003A  
           __end_of__stringtab 0009                ___lwdiv@divisor 0070                ___lwdiv@counter 0077  
                     __ptext10 000C                       __ptext11 0F46                       __ptext12 005D  
                     __ptext13 00A1                       __ptext14 020B                       __ptext15 0FC0  
                     __ptext16 0F18                       __ptext17 0F80                       __ptext18 0140  
             __size_of_ser_int 000D                  __size_of_main 015C             __end_of_read_dht11 005D  
              LCD_Command@cmnd 0072               ___lwmod@dividend 0072                      stringcode 0003  
    show_multidigits@remainder 002C              ?_show_multidigits 0079             ??_show_multidigits 007B  
                     tx_sn@val 0079                ___lwmod@divisor 0070                ___lwmod@counter 0075  
                     stringdir 0003                       stringtab 0003                   ___aldiv@sign 0029  
 __end_of_intdigits_chardigits 001B  
