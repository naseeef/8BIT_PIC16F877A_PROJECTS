

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 04 20:39:22 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  001E                     _ADRESH	set	30
   182  001F                     _ADCON0	set	31
   183  001A                     _RCREG	set	26
   184  0019                     _TXREG	set	25
   185  0018                     _RCSTA	set	24
   186  0006                     _PORTB	set	6
   187  00FA                     _GO_nDONE	set	250
   188  0065                     _RCIF	set	101
   189  0064                     _TXIF	set	100
   190  0039                     _RC1	set	57
   191  0038                     _RC0	set	56
   192  009E                     _ADRESL	set	158
   193  009F                     _ADCON1	set	159
   194  0087                     _TRISC	set	135
   195  0086                     _TRISB	set	134
   196  0099                     _SPBRG	set	153
   197  0098                     _TXSTA	set	152
   198                           
   199                           	psect	strings
   200  0003                     __pstrings:
   201  0003                     stringtab:
   202  0003                     __stringtab:
   203  0003                     stringcode:	
   204                           ;	String table - string pointers are 1 byte each
   205                           
   206  0003                     stringdir:
   207  0003  3000               	movlw	high stringdir
   208  0004  008A               	movwf	10
   209  0005  0804               	movf	4,w
   210  0006  0A84               	incf	4,f
   211  0007  0782               	addwf	2,f
   212  0008                     __stringbase:
   213  0008  3400               	retlw	0
   214  0009                     __end_of__stringtab:
   215  0009                     STR_1:
   216  0009  3420               	retlw	32	;' '
   217  000A  3400               	retlw	0
   218                           
   219                           	psect	cinit
   220  07EF                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07EF                     __initialization:
   224                           
   225                           ; Clear objects allocated to BANK0
   226  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   227  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   228  07F1  01C3               	clrf	__pbssBANK0& (0+127)
   229  07F2  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   230  07F3  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   231  07F4  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   232  07F5  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   233  07F6  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   234  07F7  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   235  07F8  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   236  07F9  01CB               	clrf	(__pbssBANK0+8)& (0+127)
   237  07FA  01CC               	clrf	(__pbssBANK0+9)& (0+127)
   238  07FB  01CD               	clrf	(__pbssBANK0+10)& (0+127)
   239  07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  07FC                     __end_of__initialization:
   243  07FC  0183               	clrf	3
   244  07FD  120A  118A  2E7E   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssBANK0
   247  0043                     __pbssBANK0:
   248  0043                     _AV:
   249  0043                     	ds	8
   250  004B                     _avv:
   251  004B                     	ds	3
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:
   255  0070                     ?_intdigits_chardigits:
   256  0070                     ?_ADC_Init:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ??_ADC_Init:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_LCD_Command:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ??_LCD_Command:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_LCD_Char:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ??_LCD_Char:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_LCD_init:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_ser_int:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ??_ser_int:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_tx:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_tx:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_main:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?___lwdiv:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?___lwmod:	
   296                           ; 2 bytes @ 0x0
   297                           
   298  0070                     ?___lmul:	
   299                           ; 2 bytes @ 0x0
   300                           
   301  0070                     tx@a:	
   302                           ; 4 bytes @ 0x0
   303                           
   304  0070                     intdigits_chardigits@a:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ___lwdiv@divisor:	
   308                           ; 2 bytes @ 0x0
   309                           
   310  0070                     ___lwmod@divisor:	
   311                           ; 2 bytes @ 0x0
   312                           
   313  0070                     ___lmul@multiplier:	
   314                           ; 2 bytes @ 0x0
   315                           
   316                           
   317                           ; 4 bytes @ 0x0
   318  0070                     	ds	2
   319  0072                     LCD_Command@cmnd:
   320  0072                     LCD_Char@data:	
   321                           ; 1 bytes @ 0x2
   322                           
   323  0072                     intdigits_chardigits@b:	
   324                           ; 1 bytes @ 0x2
   325                           
   326  0072                     ___lwdiv@dividend:	
   327                           ; 2 bytes @ 0x2
   328                           
   329  0072                     ___lwmod@dividend:	
   330                           ; 2 bytes @ 0x2
   331                           
   332                           
   333                           ; 2 bytes @ 0x2
   334  0072                     	ds	1
   335  0073                     ??_LCD_init:
   336                           
   337                           ; 1 bytes @ 0x3
   338  0073                     	ds	1
   339  0074                     ??___lwdiv:
   340  0074                     ??___lwmod:	
   341                           ; 1 bytes @ 0x4
   342                           
   343  0074                     intdigits_chardigits@c:	
   344                           ; 1 bytes @ 0x4
   345                           
   346  0074                     ___lmul@multiplicand:	
   347                           ; 2 bytes @ 0x4
   348                           
   349                           
   350                           ; 4 bytes @ 0x4
   351  0074                     	ds	1
   352  0075                     ___lwmod@counter:
   353  0075                     ___lwdiv@quotient:	
   354                           ; 1 bytes @ 0x5
   355                           
   356                           
   357                           ; 2 bytes @ 0x5
   358  0075                     	ds	1
   359  0076                     ??_intdigits_chardigits:
   360                           
   361                           ; 1 bytes @ 0x6
   362  0076                     	ds	1
   363  0077                     ___lwdiv@counter:
   364                           
   365                           ; 1 bytes @ 0x7
   366  0077                     	ds	1
   367  0078                     ??___lmul:
   368                           
   369                           ; 1 bytes @ 0x8
   370  0078                     	ds	1
   371  0079                     ___lmul@product:
   372                           
   373                           ; 4 bytes @ 0x9
   374  0079                     	ds	4
   375  007D                     ??___aldiv:
   376                           
   377                           ; 1 bytes @ 0xD
   378  007D                     	ds	1
   379  007E                     ??_LCD_num:
   380                           
   381                           	psect	cstackBANK0
   382  0020                     __pcstackBANK0:	
   383                           ; 1 bytes @ 0xE
   384                           
   385  0020                     ?___aldiv:
   386  0020                     ___aldiv@divisor:	
   387                           ; 4 bytes @ 0x0
   388                           
   389                           
   390                           ; 4 bytes @ 0x0
   391  0020                     	ds	4
   392  0024                     ___aldiv@dividend:
   393                           
   394                           ; 4 bytes @ 0x4
   395  0024                     	ds	4
   396  0028                     ___aldiv@counter:
   397                           
   398                           ; 1 bytes @ 0x8
   399  0028                     	ds	1
   400  0029                     ___aldiv@sign:
   401                           
   402                           ; 1 bytes @ 0x9
   403  0029                     	ds	1
   404  002A                     ___aldiv@quotient:
   405                           
   406                           ; 4 bytes @ 0xA
   407  002A                     	ds	4
   408  002E                     ?_LCD_num:
   409  002E                     LCD_num@val:	
   410                           ; 1 bytes @ 0xE
   411                           
   412                           
   413                           ; 4 bytes @ 0xE
   414  002E                     	ds	4
   415  0032                     LCD_num@digit1:
   416                           
   417                           ; 2 bytes @ 0x12
   418  0032                     	ds	2
   419  0034                     LCD_num@digit2:
   420                           
   421                           ; 2 bytes @ 0x14
   422  0034                     	ds	2
   423  0036                     LCD_num@digit3:
   424                           
   425                           ; 2 bytes @ 0x16
   426  0036                     	ds	2
   427  0038                     LCD_num@result:
   428                           
   429                           ; 2 bytes @ 0x18
   430  0038                     	ds	2
   431  003A                     LCD_num@result1:
   432                           
   433                           ; 2 bytes @ 0x1A
   434  003A                     	ds	2
   435  003C                     LCD_num@remainder:
   436                           
   437                           ; 2 bytes @ 0x1C
   438  003C                     	ds	2
   439  003E                     ??_main:
   440                           
   441                           ; 1 bytes @ 0x1E
   442  003E                     	ds	3
   443  0041                     main@i:
   444                           
   445                           ; 1 bytes @ 0x21
   446  0041                     	ds	1
   447  0042                     main@j:
   448                           
   449                           ; 1 bytes @ 0x22
   450  0042                     	ds	1
   451                           
   452                           	psect	maintext
   453  067E                     __pmaintext:	
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 28 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  j               1   34[BANK0 ] unsigned char 
   464 ;;  i               1   33[BANK0 ] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : B00/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         0       2       0       0       0
   476 ;;      Temps:          0       3       0       0       0
   477 ;;      Totals:         0       5       0       0       0
   478 ;;Total ram usage:        5 bytes
   479 ;; Hardware stack levels required when called: 2
   480 ;; This function calls:
   481 ;;		_ADC_Init
   482 ;;		_LCD_Char
   483 ;;		_LCD_Command
   484 ;;		_LCD_init
   485 ;;		_LCD_num
   486 ;;		_ser_int
   487 ;;		_tx
   488 ;; This function is called by:
   489 ;;		Startup code after reset
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           
   494                           ;psect for function _main
   495  067E                     _main:
   496  067E                     l1115:	
   497                           ;incstack = 0
   498                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   499                           
   500                           
   501                           ;main.c: 30:     TRISB =0x00;
   502  067E  1683               	bsf	3,5	;RP0=1, select bank1
   503  067F  1303               	bcf	3,6	;RP1=0, select bank1
   504  0680  0186               	clrf	6	;volatile
   505                           
   506                           ;main.c: 31:     TRISC =0x00;
   507  0681  0187               	clrf	7	;volatile
   508  0682                     l1117:
   509                           
   510                           ;main.c: 33:     LCD_init();
   511  0682  120A  118A  240B  120A  118A  	fcall	_LCD_init
   512  0687                     l1119:
   513                           
   514                           ;main.c: 34:     ser_int();
   515  0687  120A  118A  23EF  120A  118A  	fcall	_ser_int
   516  068C                     l1121:
   517                           
   518                           ;main.c: 36:     {;main.c: 37:         ADC_Init ();
   519  068C  120A  118A  257D  120A  118A  	fcall	_ADC_Init
   520  0691                     l1123:
   521                           
   522                           ;main.c: 38:         GO_nDONE=1;
   523  0691  1283               	bcf	3,5	;RP0=0, select bank0
   524  0692  1303               	bcf	3,6	;RP1=0, select bank0
   525  0693  151F               	bsf	31,2	;volatile
   526  0694                     l86:	
   527                           ;main.c: 39:         while(GO_nDONE==1);
   528                           
   529  0694  191F               	btfsc	31,2	;volatile
   530  0695  2E97               	goto	u711
   531  0696  2E98               	goto	u710
   532  0697                     u711:
   533  0697  2E94               	goto	l86
   534  0698                     u710:
   535  0698                     l1125:
   536                           
   537                           ;main.c: 40:         _delay((unsigned long)((10)*(20000000/4000.0)));
   538  0698  3041               	movlw	65
   539  0699  1283               	bcf	3,5	;RP0=0, select bank0
   540  069A  1303               	bcf	3,6	;RP1=0, select bank0
   541  069B  00BF               	movwf	??_main+1
   542  069C  30ED               	movlw	237
   543  069D  00BE               	movwf	??_main
   544  069E                     u767:
   545  069E  0BBE               	decfsz	??_main,f
   546  069F  2E9E               	goto	u767
   547  06A0  0BBF               	decfsz	??_main+1,f
   548  06A1  2E9E               	goto	u767
   549  06A2  2EA3               	nop2
   550  06A3                     l1127:
   551                           
   552                           ;main.c: 42:         for (unsigned char i=0;i<4;i++)
   553  06A3  1283               	bcf	3,5	;RP0=0, select bank0
   554  06A4  1303               	bcf	3,6	;RP1=0, select bank0
   555  06A5  01C1               	clrf	main@i
   556  06A6                     l1133:
   557                           
   558                           ;main.c: 43:         {;main.c: 44:             LCD_num(AV[i]);
   559  06A6  0841               	movf	main@i,w
   560  06A7  00BE               	movwf	??_main
   561  06A8  073E               	addwf	??_main,w
   562  06A9  3E43               	addlw	(low (_AV| 0))& (0+255)
   563  06AA  0084               	movwf	4
   564  06AB  1383               	bcf	3,7	;select IRP bank0
   565  06AC  0800               	movf	0,w
   566  06AD  00BF               	movwf	??_main+1
   567  06AE  0A84               	incf	4,f
   568  06AF  0800               	movf	0,w
   569  06B0  00C0               	movwf	??_main+2
   570  06B1  083F               	movf	??_main+1,w
   571  06B2  00AE               	movwf	LCD_num@val
   572  06B3  0840               	movf	??_main+2,w
   573  06B4  00AF               	movwf	LCD_num@val+1
   574  06B5  01B0               	clrf	LCD_num@val+2
   575  06B6  01B1               	clrf	LCD_num@val+3
   576  06B7  120A  118A  2730  120A  118A  	fcall	_LCD_num
   577  06BC                     l1135:
   578                           
   579                           ;main.c: 45:             LCD_Char(" ");
   580  06BC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   581  06BD  120A  118A  24B3  120A  118A  	fcall	_LCD_Char
   582  06C2                     l1137:
   583                           
   584                           ;main.c: 46:             for (unsigned char j=0;j<3;j++)
   585  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   586  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   587  06C4  01C2               	clrf	main@j
   588  06C5                     l1143:
   589                           
   590                           ;main.c: 47:             {;main.c: 48:                 tx((avv[j]+0x30));
   591  06C5  0842               	movf	main@j,w
   592  06C6  3E4B               	addlw	(low (_avv| 0))& (0+255)
   593  06C7  0084               	movwf	4
   594  06C8  1383               	bcf	3,7	;select IRP bank0
   595  06C9  0800               	movf	0,w
   596  06CA  3E30               	addlw	48
   597  06CB  120A  118A  23E4  120A  118A  	fcall	_tx
   598  06D0                     l1145:
   599                           
   600                           ;main.c: 49:                 if (j == 0)
   601  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   602  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   603  06D2  0842               	movf	main@j,w
   604  06D3  1D03               	btfss	3,2
   605  06D4  2ED6               	goto	u721
   606  06D5  2ED7               	goto	u720
   607  06D6                     u721:
   608  06D6  2EDE               	goto	l1149
   609  06D7                     u720:
   610  06D7                     l1147:
   611                           
   612                           ;main.c: 50:                 {;main.c: 51:                     tx('.');
   613  06D7  302E               	movlw	46
   614  06D8  120A  118A  23E4  120A  118A  	fcall	_tx
   615                           
   616                           ;main.c: 52:                 }
   617  06DD  2EEA               	goto	l1153
   618  06DE                     l1149:
   619  06DE  3002               	movlw	2
   620  06DF  0642               	xorwf	main@j,w
   621  06E0  1D03               	btfss	3,2
   622  06E1  2EE3               	goto	u731
   623  06E2  2EE4               	goto	u730
   624  06E3                     u731:
   625  06E3  2EEA               	goto	l1153
   626  06E4                     u730:
   627  06E4                     l1151:
   628                           
   629                           ;main.c: 54:                 {;main.c: 55:                     tx(',');
   630  06E4  302C               	movlw	44
   631  06E5  120A  118A  23E4  120A  118A  	fcall	_tx
   632  06EA                     l1153:
   633                           
   634                           ;main.c: 57:             }
   635  06EA  3001               	movlw	1
   636  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   637  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   638  06ED  00BE               	movwf	??_main
   639  06EE  083E               	movf	??_main,w
   640  06EF  07C2               	addwf	main@j,f
   641  06F0                     l1155:
   642  06F0  3003               	movlw	3
   643  06F1  0242               	subwf	main@j,w
   644  06F2  1C03               	skipc
   645  06F3  2EF5               	goto	u741
   646  06F4  2EF6               	goto	u740
   647  06F5                     u741:
   648  06F5  2EC5               	goto	l1143
   649  06F6                     u740:
   650  06F6                     l1157:
   651                           
   652                           ;main.c: 59:             _delay((unsigned long)((500)*(20000000/4000.0)));
   653  06F6  300D               	movlw	13
   654  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   655  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   656  06F9  00C0               	movwf	??_main+2
   657  06FA  30AF               	movlw	175
   658  06FB  00BF               	movwf	??_main+1
   659  06FC  30B5               	movlw	181
   660  06FD  00BE               	movwf	??_main
   661  06FE                     u777:
   662  06FE  0BBE               	decfsz	??_main,f
   663  06FF  2EFE               	goto	u777
   664  0700  0BBF               	decfsz	??_main+1,f
   665  0701  2EFE               	goto	u777
   666  0702  0BC0               	decfsz	??_main+2,f
   667  0703  2EFE               	goto	u777
   668  0704  2F05               	nop2
   669  0705                     l1159:
   670                           
   671                           ;main.c: 60:         }
   672  0705  3001               	movlw	1
   673  0706  1283               	bcf	3,5	;RP0=0, select bank0
   674  0707  1303               	bcf	3,6	;RP1=0, select bank0
   675  0708  00BE               	movwf	??_main
   676  0709  083E               	movf	??_main,w
   677  070A  07C1               	addwf	main@i,f
   678  070B                     l1161:
   679  070B  3004               	movlw	4
   680  070C  0241               	subwf	main@i,w
   681  070D  1C03               	skipc
   682  070E  2F10               	goto	u751
   683  070F  2F11               	goto	u750
   684  0710                     u751:
   685  0710  2EA6               	goto	l1133
   686  0711                     u750:
   687  0711                     l1163:
   688                           
   689                           ;main.c: 62:         tx(0x0d);
   690  0711  300D               	movlw	13
   691  0712  120A  118A  23E4  120A  118A  	fcall	_tx
   692                           
   693                           ;main.c: 63:         LCD_Command(0x01);
   694  0717  3001               	movlw	1
   695  0718  120A  118A  2473  120A  118A  	fcall	_LCD_Command
   696  071D                     l1165:
   697                           
   698                           ;main.c: 64:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   699  071D  301A               	movlw	26
   700  071E  1283               	bcf	3,5	;RP0=0, select bank0
   701  071F  1303               	bcf	3,6	;RP1=0, select bank0
   702  0720  00C0               	movwf	??_main+2
   703  0721  305E               	movlw	94
   704  0722  00BF               	movwf	??_main+1
   705  0723  306D               	movlw	109
   706  0724  00BE               	movwf	??_main
   707  0725                     u787:
   708  0725  0BBE               	decfsz	??_main,f
   709  0726  2F25               	goto	u787
   710  0727  0BBF               	decfsz	??_main+1,f
   711  0728  2F25               	goto	u787
   712  0729  0BC0               	decfsz	??_main+2,f
   713  072A  2F25               	goto	u787
   714  072B  2F2C               	nop2
   715  072C  2E8C               	goto	l1121
   716  072D  120A  118A  2800   	ljmp	start
   717  0730                     __end_of_main:
   718                           
   719                           	psect	text1
   720  03E4                     __ptext1:	
   721 ;; *************** function _tx *****************
   722 ;; Defined at:
   723 ;;		line 13 in file "./uart.h"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  a               1    wreg     unsigned char 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  a               1    0[COMMON] unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      unsigned char 
   730 ;; Registers used:
   731 ;;		wreg
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       0       0       0       0
   738 ;;      Locals:         1       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         1       0       0       0       0
   741 ;;Total ram usage:        1 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _tx
   752  03E4                     _tx:
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in _tx: [wreg]
   756                           ;tx@a stored from wreg
   757  03E4  00F0               	movwf	tx@a
   758  03E5                     l1103:
   759                           
   760                           ;./uart.h: 13: unsigned char tx(unsigned char a);./uart.h: 14: {;./uart.h: 15:  TXREG=a;
   761  03E5  0870               	movf	tx@a,w
   762  03E6  1283               	bcf	3,5	;RP0=0, select bank0
   763  03E7  1303               	bcf	3,6	;RP1=0, select bank0
   764  03E8  0099               	movwf	25	;volatile
   765  03E9                     l69:	
   766                           ;./uart.h: 16:  while(!TXIF);
   767                           
   768  03E9  1E0C               	btfss	12,4	;volatile
   769  03EA  2BEC               	goto	u691
   770  03EB  2BED               	goto	u690
   771  03EC                     u691:
   772  03EC  2BE9               	goto	l69
   773  03ED                     u690:
   774  03ED                     l71:
   775                           
   776                           ;./uart.h: 17:  TXIF = 0;
   777  03ED  120C               	bcf	12,4	;volatile
   778  03EE                     l72:
   779  03EE  0008               	return
   780  03EF                     __end_of_tx:
   781                           
   782                           	psect	text2
   783  03EF                     __ptext2:	
   784 ;; *************** function _ser_int *****************
   785 ;; Defined at:
   786 ;;		line 6 in file "./uart.h"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _ser_int
   815  03EF                     _ser_int:
   816  03EF                     l1101:	
   817                           ;incstack = 0
   818                           ; Regs used in _ser_int: [wreg]
   819                           
   820                           
   821                           ;./uart.h: 8:  TXSTA= 0x20;
   822  03EF  3020               	movlw	32
   823  03F0  1683               	bsf	3,5	;RP0=1, select bank1
   824  03F1  1303               	bcf	3,6	;RP1=0, select bank1
   825  03F2  0098               	movwf	24	;volatile
   826                           
   827                           ;./uart.h: 9:  RCSTA= 0b10010000;
   828  03F3  3090               	movlw	144
   829  03F4  1283               	bcf	3,5	;RP0=0, select bank0
   830  03F5  1303               	bcf	3,6	;RP1=0, select bank0
   831  03F6  0098               	movwf	24	;volatile
   832                           
   833                           ;./uart.h: 10:  SPBRG=31;
   834  03F7  301F               	movlw	31
   835  03F8  1683               	bsf	3,5	;RP0=1, select bank1
   836  03F9  1303               	bcf	3,6	;RP1=0, select bank1
   837  03FA  0099               	movwf	25	;volatile
   838  03FB                     l66:
   839  03FB  0008               	return
   840  03FC                     __end_of_ser_int:
   841                           
   842                           	psect	text3
   843  0730                     __ptext3:	
   844 ;; *************** function _LCD_num *****************
   845 ;; Defined at:
   846 ;;		line 50 in file "./lcd4bit.h"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  val             4   14[BANK0 ] long 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  remainder       2   28[BANK0 ] unsigned int 
   851 ;;  result1         2   26[BANK0 ] unsigned int 
   852 ;;  result          2   24[BANK0 ] unsigned int 
   853 ;;  digit3          2   22[BANK0 ] unsigned int 
   854 ;;  digit2          2   20[BANK0 ] unsigned int 
   855 ;;  digit1          2   18[BANK0 ] unsigned int 
   856 ;;  calb_val        2    0        int 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0, pclath, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   866 ;;      Params:         0       4       0       0       0
   867 ;;      Locals:         0      12       0       0       0
   868 ;;      Temps:          0       0       0       0       0
   869 ;;      Totals:         0      16       0       0       0
   870 ;;Total ram usage:       16 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 1
   873 ;; This function calls:
   874 ;;		_LCD_Char
   875 ;;		___aldiv
   876 ;;		___lmul
   877 ;;		___lwdiv
   878 ;;		___lwmod
   879 ;;		_intdigits_chardigits
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _LCD_num
   887  0730                     _LCD_num:
   888  0730                     l1077:	
   889                           ;incstack = 0
   890                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
   891                           
   892  0730                     l1079:
   893                           
   894                           ;./lcd4bit.h: 53:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 54:     result1;;./lcd4bit.h: 55:     result = ((val*100)/calb_val);
   895  0730  3000               	movlw	0
   896  0731  1283               	bcf	3,5	;RP0=0, select bank0
   897  0732  1303               	bcf	3,6	;RP1=0, select bank0
   898  0733  00A3               	movwf	___aldiv@divisor+3
   899  0734  3000               	movlw	0
   900  0735  00A2               	movwf	___aldiv@divisor+2
   901  0736  3000               	movlw	0
   902  0737  00A1               	movwf	___aldiv@divisor+1
   903  0738  30C8               	movlw	200
   904  0739  00A0               	movwf	___aldiv@divisor
   905  073A  0831               	movf	LCD_num@val+3,w
   906  073B  00F3               	movwf	___lmul@multiplier+3
   907  073C  0830               	movf	LCD_num@val+2,w
   908  073D  00F2               	movwf	___lmul@multiplier+2
   909  073E  082F               	movf	LCD_num@val+1,w
   910  073F  00F1               	movwf	___lmul@multiplier+1
   911  0740  082E               	movf	LCD_num@val,w
   912  0741  00F0               	movwf	___lmul@multiplier
   913  0742  3000               	movlw	0
   914  0743  00F7               	movwf	___lmul@multiplicand+3
   915  0744  3000               	movlw	0
   916  0745  00F6               	movwf	___lmul@multiplicand+2
   917  0746  3000               	movlw	0
   918  0747  00F5               	movwf	___lmul@multiplicand+1
   919  0748  3064               	movlw	100
   920  0749  00F4               	movwf	___lmul@multiplicand
   921  074A  120A  118A  2537  120A  118A  	fcall	___lmul
   922  074F  0873               	movf	?___lmul+3,w
   923  0750  1283               	bcf	3,5	;RP0=0, select bank0
   924  0751  1303               	bcf	3,6	;RP1=0, select bank0
   925  0752  00A7               	movwf	___aldiv@dividend+3
   926  0753  0872               	movf	?___lmul+2,w
   927  0754  00A6               	movwf	___aldiv@dividend+2
   928  0755  0871               	movf	?___lmul+1,w
   929  0756  00A5               	movwf	___aldiv@dividend+1
   930  0757  0870               	movf	?___lmul,w
   931  0758  00A4               	movwf	___aldiv@dividend
   932  0759  120A  118A  25E1  120A  118A  	fcall	___aldiv
   933  075E  1283               	bcf	3,5	;RP0=0, select bank0
   934  075F  1303               	bcf	3,6	;RP1=0, select bank0
   935  0760  0821               	movf	?___aldiv+1,w
   936  0761  00B9               	movwf	LCD_num@result+1
   937  0762  0820               	movf	?___aldiv,w
   938  0763  00B8               	movwf	LCD_num@result
   939  0764                     l1081:
   940                           
   941                           ;./lcd4bit.h: 56:     remainder = result% 10;
   942  0764  300A               	movlw	10
   943  0765  00F0               	movwf	___lwmod@divisor
   944  0766  3000               	movlw	0
   945  0767  00F1               	movwf	___lwmod@divisor+1
   946  0768  0839               	movf	LCD_num@result+1,w
   947  0769  00F3               	movwf	___lwmod@dividend+1
   948  076A  0838               	movf	LCD_num@result,w
   949  076B  00F2               	movwf	___lwmod@dividend
   950  076C  120A  118A  2439  120A  118A  	fcall	___lwmod
   951  0771  0871               	movf	?___lwmod+1,w
   952  0772  1283               	bcf	3,5	;RP0=0, select bank0
   953  0773  1303               	bcf	3,6	;RP1=0, select bank0
   954  0774  00BD               	movwf	LCD_num@remainder+1
   955  0775  0870               	movf	?___lwmod,w
   956  0776  00BC               	movwf	LCD_num@remainder
   957  0777                     l1083:
   958                           
   959                           ;./lcd4bit.h: 57:     result1 = result /10;
   960  0777  300A               	movlw	10
   961  0778  00F0               	movwf	___lwdiv@divisor
   962  0779  3000               	movlw	0
   963  077A  00F1               	movwf	___lwdiv@divisor+1
   964  077B  0839               	movf	LCD_num@result+1,w
   965  077C  00F3               	movwf	___lwdiv@dividend+1
   966  077D  0838               	movf	LCD_num@result,w
   967  077E  00F2               	movwf	___lwdiv@dividend
   968  077F  120A  118A  24F3  120A  118A  	fcall	___lwdiv
   969  0784  0871               	movf	?___lwdiv+1,w
   970  0785  1283               	bcf	3,5	;RP0=0, select bank0
   971  0786  1303               	bcf	3,6	;RP1=0, select bank0
   972  0787  00BB               	movwf	LCD_num@result1+1
   973  0788  0870               	movf	?___lwdiv,w
   974  0789  00BA               	movwf	LCD_num@result1
   975  078A                     l1085:
   976                           
   977                           ;./lcd4bit.h: 58:     digit1 = remainder;
   978  078A  083D               	movf	LCD_num@remainder+1,w
   979  078B  00B3               	movwf	LCD_num@digit1+1
   980  078C  083C               	movf	LCD_num@remainder,w
   981  078D  00B2               	movwf	LCD_num@digit1
   982                           
   983                           ;./lcd4bit.h: 59:     remainder = result1%10;
   984  078E  300A               	movlw	10
   985  078F  00F0               	movwf	___lwmod@divisor
   986  0790  3000               	movlw	0
   987  0791  00F1               	movwf	___lwmod@divisor+1
   988  0792  083B               	movf	LCD_num@result1+1,w
   989  0793  00F3               	movwf	___lwmod@dividend+1
   990  0794  083A               	movf	LCD_num@result1,w
   991  0795  00F2               	movwf	___lwmod@dividend
   992  0796  120A  118A  2439  120A  118A  	fcall	___lwmod
   993  079B  0871               	movf	?___lwmod+1,w
   994  079C  1283               	bcf	3,5	;RP0=0, select bank0
   995  079D  1303               	bcf	3,6	;RP1=0, select bank0
   996  079E  00BD               	movwf	LCD_num@remainder+1
   997  079F  0870               	movf	?___lwmod,w
   998  07A0  00BC               	movwf	LCD_num@remainder
   999  07A1                     l1087:
  1000                           
  1001                           ;./lcd4bit.h: 60:     digit2 = remainder;
  1002  07A1  083D               	movf	LCD_num@remainder+1,w
  1003  07A2  00B5               	movwf	LCD_num@digit2+1
  1004  07A3  083C               	movf	LCD_num@remainder,w
  1005  07A4  00B4               	movwf	LCD_num@digit2
  1006  07A5                     l1089:
  1007                           
  1008                           ;./lcd4bit.h: 61:     remainder = (result1/10);
  1009  07A5  300A               	movlw	10
  1010  07A6  00F0               	movwf	___lwdiv@divisor
  1011  07A7  3000               	movlw	0
  1012  07A8  00F1               	movwf	___lwdiv@divisor+1
  1013  07A9  083B               	movf	LCD_num@result1+1,w
  1014  07AA  00F3               	movwf	___lwdiv@dividend+1
  1015  07AB  083A               	movf	LCD_num@result1,w
  1016  07AC  00F2               	movwf	___lwdiv@dividend
  1017  07AD  120A  118A  24F3  120A  118A  	fcall	___lwdiv
  1018  07B2  0871               	movf	?___lwdiv+1,w
  1019  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1020  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1021  07B5  00BD               	movwf	LCD_num@remainder+1
  1022  07B6  0870               	movf	?___lwdiv,w
  1023  07B7  00BC               	movwf	LCD_num@remainder
  1024                           
  1025                           ;./lcd4bit.h: 62:     digit3=remainder;
  1026  07B8  083D               	movf	LCD_num@remainder+1,w
  1027  07B9  00B7               	movwf	LCD_num@digit3+1
  1028  07BA  083C               	movf	LCD_num@remainder,w
  1029  07BB  00B6               	movwf	LCD_num@digit3
  1030  07BC                     l1091:
  1031                           
  1032                           ;./lcd4bit.h: 63:     LCD_Char(digit3+0x30);
  1033  07BC  0836               	movf	LCD_num@digit3,w
  1034  07BD  3E30               	addlw	48
  1035  07BE  120A  118A  24B3  120A  118A  	fcall	_LCD_Char
  1036  07C3                     l1093:
  1037                           
  1038                           ;./lcd4bit.h: 64:     LCD_Char('.');
  1039  07C3  302E               	movlw	46
  1040  07C4  120A  118A  24B3  120A  118A  	fcall	_LCD_Char
  1041  07C9                     l1095:
  1042                           
  1043                           ;./lcd4bit.h: 65:     LCD_Char(digit2+0x30);
  1044  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1045  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1046  07CB  0834               	movf	LCD_num@digit2,w
  1047  07CC  3E30               	addlw	48
  1048  07CD  120A  118A  24B3  120A  118A  	fcall	_LCD_Char
  1049  07D2                     l1097:
  1050                           
  1051                           ;./lcd4bit.h: 66:     LCD_Char(digit1+0x30);
  1052  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1053  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1054  07D4  0832               	movf	LCD_num@digit1,w
  1055  07D5  3E30               	addlw	48
  1056  07D6  120A  118A  24B3  120A  118A  	fcall	_LCD_Char
  1057  07DB                     l1099:
  1058                           
  1059                           ;./lcd4bit.h: 68:     intdigits_chardigits(digit3,digit2,digit1);
  1060  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1061  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1062  07DD  0837               	movf	LCD_num@digit3+1,w
  1063  07DE  00F1               	movwf	intdigits_chardigits@a+1
  1064  07DF  0836               	movf	LCD_num@digit3,w
  1065  07E0  00F0               	movwf	intdigits_chardigits@a
  1066  07E1  0835               	movf	LCD_num@digit2+1,w
  1067  07E2  00F3               	movwf	intdigits_chardigits@b+1
  1068  07E3  0834               	movf	LCD_num@digit2,w
  1069  07E4  00F2               	movwf	intdigits_chardigits@b
  1070  07E5  0833               	movf	LCD_num@digit1+1,w
  1071  07E6  00F5               	movwf	intdigits_chardigits@c+1
  1072  07E7  0832               	movf	LCD_num@digit1,w
  1073  07E8  00F4               	movwf	intdigits_chardigits@c
  1074  07E9  120A  118A  23FC  120A  118A  	fcall	_intdigits_chardigits
  1075  07EE                     l54:
  1076  07EE  0008               	return
  1077  07EF                     __end_of_LCD_num:
  1078                           
  1079                           	psect	text4
  1080  03FC                     __ptext4:	
  1081 ;; *************** function _intdigits_chardigits *****************
  1082 ;; Defined at:
  1083 ;;		line 78 in file "./lcd4bit.h"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  a               2    0[COMMON] unsigned int 
  1086 ;;  b               2    2[COMMON] unsigned int 
  1087 ;;  c               2    4[COMMON] unsigned int 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      unsigned char 
  1092 ;; Registers used:
  1093 ;;		wreg
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         6       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0
  1101 ;;      Temps:          1       0       0       0       0
  1102 ;;      Totals:         7       0       0       0       0
  1103 ;;Total ram usage:        7 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_LCD_num
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _intdigits_chardigits
  1114  03FC                     _intdigits_chardigits:
  1115  03FC                     l969:	
  1116                           ;incstack = 0
  1117                           ; Regs used in _intdigits_chardigits: [wreg]
  1118                           
  1119                           
  1120                           ;./lcd4bit.h: 78: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 79: {;./lcd4bit.h: 80:     avv[0] = (unsigned char)a;
  1121  03FC  0870               	movf	intdigits_chardigits@a,w
  1122  03FD  00F6               	movwf	??_intdigits_chardigits
  1123  03FE  0876               	movf	??_intdigits_chardigits,w
  1124  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0401  00CB               	movwf	_avv
  1127                           
  1128                           ;./lcd4bit.h: 81:     avv[1] = (unsigned char)b;
  1129  0402  0872               	movf	intdigits_chardigits@b,w
  1130  0403  00F6               	movwf	??_intdigits_chardigits
  1131  0404  0876               	movf	??_intdigits_chardigits,w
  1132  0405  00CC               	movwf	_avv+1
  1133                           
  1134                           ;./lcd4bit.h: 82:     avv[2] = (unsigned char)c;
  1135  0406  0874               	movf	intdigits_chardigits@c,w
  1136  0407  00F6               	movwf	??_intdigits_chardigits
  1137  0408  0876               	movf	??_intdigits_chardigits,w
  1138  0409  00CD               	movwf	_avv+2
  1139  040A                     l63:
  1140  040A  0008               	return
  1141  040B                     __end_of_intdigits_chardigits:
  1142                           
  1143                           	psect	text5
  1144  0439                     __ptext5:	
  1145 ;; *************** function ___lwmod *****************
  1146 ;; Defined at:
  1147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  divisor         2    0[COMMON] unsigned int 
  1150 ;;  dividend        2    2[COMMON] unsigned int 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  counter         1    5[COMMON] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  2    0[COMMON] unsigned int 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         4       0       0       0       0
  1163 ;;      Locals:         1       0       0       0       0
  1164 ;;      Temps:          1       0       0       0       0
  1165 ;;      Totals:         6       0       0       0       0
  1166 ;;Total ram usage:        6 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_LCD_num
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function ___lwmod
  1177  0439                     ___lwmod:
  1178  0439                     l1051:	
  1179                           ;incstack = 0
  1180                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1181                           
  1182  0439  0870               	movf	___lwmod@divisor,w
  1183  043A  0471               	iorwf	___lwmod@divisor+1,w
  1184  043B  1903               	btfsc	3,2
  1185  043C  2C3E               	goto	u631
  1186  043D  2C3F               	goto	u630
  1187  043E                     u631:
  1188  043E  2C6E               	goto	l1069
  1189  043F                     u630:
  1190  043F                     l1053:
  1191  043F  01F5               	clrf	___lwmod@counter
  1192  0440  0AF5               	incf	___lwmod@counter,f
  1193  0441  2C4D               	goto	l1059
  1194  0442                     l1055:
  1195  0442  3001               	movlw	1
  1196  0443                     u645:
  1197  0443  1003               	clrc
  1198  0444  0DF0               	rlf	___lwmod@divisor,f
  1199  0445  0DF1               	rlf	___lwmod@divisor+1,f
  1200  0446  3EFF               	addlw	-1
  1201  0447  1D03               	skipz
  1202  0448  2C43               	goto	u645
  1203  0449                     l1057:
  1204  0449  3001               	movlw	1
  1205  044A  00F4               	movwf	??___lwmod
  1206  044B  0874               	movf	??___lwmod,w
  1207  044C  07F5               	addwf	___lwmod@counter,f
  1208  044D                     l1059:
  1209  044D  1FF1               	btfss	___lwmod@divisor+1,7
  1210  044E  2C50               	goto	u651
  1211  044F  2C51               	goto	u650
  1212  0450                     u651:
  1213  0450  2C42               	goto	l1055
  1214  0451                     u650:
  1215  0451                     l1061:
  1216  0451  0871               	movf	___lwmod@divisor+1,w
  1217  0452  0273               	subwf	___lwmod@dividend+1,w
  1218  0453  1D03               	skipz
  1219  0454  2C57               	goto	u665
  1220  0455  0870               	movf	___lwmod@divisor,w
  1221  0456  0272               	subwf	___lwmod@dividend,w
  1222  0457                     u665:
  1223  0457  1C03               	skipc
  1224  0458  2C5A               	goto	u661
  1225  0459  2C5B               	goto	u660
  1226  045A                     u661:
  1227  045A  2C61               	goto	l1065
  1228  045B                     u660:
  1229  045B                     l1063:
  1230  045B  0870               	movf	___lwmod@divisor,w
  1231  045C  02F2               	subwf	___lwmod@dividend,f
  1232  045D  0871               	movf	___lwmod@divisor+1,w
  1233  045E  1C03               	skipc
  1234  045F  03F3               	decf	___lwmod@dividend+1,f
  1235  0460  02F3               	subwf	___lwmod@dividend+1,f
  1236  0461                     l1065:
  1237  0461  3001               	movlw	1
  1238  0462                     u675:
  1239  0462  1003               	clrc
  1240  0463  0CF1               	rrf	___lwmod@divisor+1,f
  1241  0464  0CF0               	rrf	___lwmod@divisor,f
  1242  0465  3EFF               	addlw	-1
  1243  0466  1D03               	skipz
  1244  0467  2C62               	goto	u675
  1245  0468                     l1067:
  1246  0468  3001               	movlw	1
  1247  0469  02F5               	subwf	___lwmod@counter,f
  1248  046A  1D03               	btfss	3,2
  1249  046B  2C6D               	goto	u681
  1250  046C  2C6E               	goto	u680
  1251  046D                     u681:
  1252  046D  2C51               	goto	l1061
  1253  046E                     u680:
  1254  046E                     l1069:
  1255  046E  0873               	movf	___lwmod@dividend+1,w
  1256  046F  00F1               	movwf	?___lwmod+1
  1257  0470  0872               	movf	___lwmod@dividend,w
  1258  0471  00F0               	movwf	?___lwmod
  1259  0472                     l469:
  1260  0472  0008               	return
  1261  0473                     __end_of___lwmod:
  1262                           
  1263                           	psect	text6
  1264  04F3                     __ptext6:	
  1265 ;; *************** function ___lwdiv *****************
  1266 ;; Defined at:
  1267 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  divisor         2    0[COMMON] unsigned int 
  1270 ;;  dividend        2    2[COMMON] unsigned int 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  quotient        2    5[COMMON] unsigned int 
  1273 ;;  counter         1    7[COMMON] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  2    0[COMMON] unsigned int 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         4       0       0       0       0
  1284 ;;      Locals:         3       0       0       0       0
  1285 ;;      Temps:          1       0       0       0       0
  1286 ;;      Totals:         8       0       0       0       0
  1287 ;;Total ram usage:        8 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_LCD_num
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function ___lwdiv
  1298  04F3                     ___lwdiv:
  1299  04F3                     l1025:	
  1300                           ;incstack = 0
  1301                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1302                           
  1303  04F3  01F5               	clrf	___lwdiv@quotient
  1304  04F4  01F6               	clrf	___lwdiv@quotient+1
  1305  04F5                     l1027:
  1306  04F5  0870               	movf	___lwdiv@divisor,w
  1307  04F6  0471               	iorwf	___lwdiv@divisor+1,w
  1308  04F7  1903               	btfsc	3,2
  1309  04F8  2CFA               	goto	u561
  1310  04F9  2CFB               	goto	u560
  1311  04FA                     u561:
  1312  04FA  2D32               	goto	l1047
  1313  04FB                     u560:
  1314  04FB                     l1029:
  1315  04FB  01F7               	clrf	___lwdiv@counter
  1316  04FC  0AF7               	incf	___lwdiv@counter,f
  1317  04FD  2D09               	goto	l1035
  1318  04FE                     l1031:
  1319  04FE  3001               	movlw	1
  1320  04FF                     u575:
  1321  04FF  1003               	clrc
  1322  0500  0DF0               	rlf	___lwdiv@divisor,f
  1323  0501  0DF1               	rlf	___lwdiv@divisor+1,f
  1324  0502  3EFF               	addlw	-1
  1325  0503  1D03               	skipz
  1326  0504  2CFF               	goto	u575
  1327  0505                     l1033:
  1328  0505  3001               	movlw	1
  1329  0506  00F4               	movwf	??___lwdiv
  1330  0507  0874               	movf	??___lwdiv,w
  1331  0508  07F7               	addwf	___lwdiv@counter,f
  1332  0509                     l1035:
  1333  0509  1FF1               	btfss	___lwdiv@divisor+1,7
  1334  050A  2D0C               	goto	u581
  1335  050B  2D0D               	goto	u580
  1336  050C                     u581:
  1337  050C  2CFE               	goto	l1031
  1338  050D                     u580:
  1339  050D                     l1037:
  1340  050D  3001               	movlw	1
  1341  050E                     u595:
  1342  050E  1003               	clrc
  1343  050F  0DF5               	rlf	___lwdiv@quotient,f
  1344  0510  0DF6               	rlf	___lwdiv@quotient+1,f
  1345  0511  3EFF               	addlw	-1
  1346  0512  1D03               	skipz
  1347  0513  2D0E               	goto	u595
  1348  0514  0871               	movf	___lwdiv@divisor+1,w
  1349  0515  0273               	subwf	___lwdiv@dividend+1,w
  1350  0516  1D03               	skipz
  1351  0517  2D1A               	goto	u605
  1352  0518  0870               	movf	___lwdiv@divisor,w
  1353  0519  0272               	subwf	___lwdiv@dividend,w
  1354  051A                     u605:
  1355  051A  1C03               	skipc
  1356  051B  2D1D               	goto	u601
  1357  051C  2D1E               	goto	u600
  1358  051D                     u601:
  1359  051D  2D25               	goto	l1043
  1360  051E                     u600:
  1361  051E                     l1039:
  1362  051E  0870               	movf	___lwdiv@divisor,w
  1363  051F  02F2               	subwf	___lwdiv@dividend,f
  1364  0520  0871               	movf	___lwdiv@divisor+1,w
  1365  0521  1C03               	skipc
  1366  0522  03F3               	decf	___lwdiv@dividend+1,f
  1367  0523  02F3               	subwf	___lwdiv@dividend+1,f
  1368  0524                     l1041:
  1369  0524  1475               	bsf	___lwdiv@quotient,0
  1370  0525                     l1043:
  1371  0525  3001               	movlw	1
  1372  0526                     u615:
  1373  0526  1003               	clrc
  1374  0527  0CF1               	rrf	___lwdiv@divisor+1,f
  1375  0528  0CF0               	rrf	___lwdiv@divisor,f
  1376  0529  3EFF               	addlw	-1
  1377  052A  1D03               	skipz
  1378  052B  2D26               	goto	u615
  1379  052C                     l1045:
  1380  052C  3001               	movlw	1
  1381  052D  02F7               	subwf	___lwdiv@counter,f
  1382  052E  1D03               	btfss	3,2
  1383  052F  2D31               	goto	u621
  1384  0530  2D32               	goto	u620
  1385  0531                     u621:
  1386  0531  2D0D               	goto	l1037
  1387  0532                     u620:
  1388  0532                     l1047:
  1389  0532  0876               	movf	___lwdiv@quotient+1,w
  1390  0533  00F1               	movwf	?___lwdiv+1
  1391  0534  0875               	movf	___lwdiv@quotient,w
  1392  0535  00F0               	movwf	?___lwdiv
  1393  0536                     l459:
  1394  0536  0008               	return
  1395  0537                     __end_of___lwdiv:
  1396                           
  1397                           	psect	text7
  1398  0537                     __ptext7:	
  1399 ;; *************** function ___lmul *****************
  1400 ;; Defined at:
  1401 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  multiplier      4    0[COMMON] unsigned long 
  1404 ;;  multiplicand    4    4[COMMON] unsigned long 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  product         4    9[COMMON] unsigned long 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  4    0[COMMON] unsigned long 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         8       0       0       0       0
  1417 ;;      Locals:         4       0       0       0       0
  1418 ;;      Temps:          1       0       0       0       0
  1419 ;;      Totals:        13       0       0       0       0
  1420 ;;Total ram usage:       13 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_LCD_num
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function ___lmul
  1431  0537                     ___lmul:
  1432  0537                     l971:	
  1433                           ;incstack = 0
  1434                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1435                           
  1436  0537  3000               	movlw	0
  1437  0538  00FC               	movwf	___lmul@product+3
  1438  0539  3000               	movlw	0
  1439  053A  00FB               	movwf	___lmul@product+2
  1440  053B  3000               	movlw	0
  1441  053C  00FA               	movwf	___lmul@product+1
  1442  053D  3000               	movlw	0
  1443  053E  00F9               	movwf	___lmul@product
  1444  053F                     l973:
  1445  053F  1C70               	btfss	___lmul@multiplier,0
  1446  0540  2D42               	goto	u411
  1447  0541  2D43               	goto	u410
  1448  0542                     u411:
  1449  0542  2D5A               	goto	l977
  1450  0543                     u410:
  1451  0543                     l975:
  1452  0543  0874               	movf	___lmul@multiplicand,w
  1453  0544  07F9               	addwf	___lmul@product,f
  1454  0545  0875               	movf	___lmul@multiplicand+1,w
  1455  0546  1103               	clrz
  1456  0547  1803               	skipnc
  1457  0548  3E01               	addlw	1
  1458  0549  1903               	skipnz
  1459  054A  2D4C               	goto	u421
  1460  054B  07FA               	addwf	___lmul@product+1,f
  1461  054C                     u421:
  1462  054C  0876               	movf	___lmul@multiplicand+2,w
  1463  054D  1103               	clrz
  1464  054E  1803               	skipnc
  1465  054F  3E01               	addlw	1
  1466  0550  1903               	skipnz
  1467  0551  2D53               	goto	u422
  1468  0552  07FB               	addwf	___lmul@product+2,f
  1469  0553                     u422:
  1470  0553  0877               	movf	___lmul@multiplicand+3,w
  1471  0554  1103               	clrz
  1472  0555  1803               	skipnc
  1473  0556  3E01               	addlw	1
  1474  0557  1903               	skipnz
  1475  0558  2D5A               	goto	u423
  1476  0559  07FC               	addwf	___lmul@product+3,f
  1477  055A                     u423:
  1478  055A                     l977:
  1479  055A  3001               	movlw	1
  1480  055B  00F8               	movwf	??___lmul
  1481  055C                     u435:
  1482  055C  1003               	clrc
  1483  055D  0DF4               	rlf	___lmul@multiplicand,f
  1484  055E  0DF5               	rlf	___lmul@multiplicand+1,f
  1485  055F  0DF6               	rlf	___lmul@multiplicand+2,f
  1486  0560  0DF7               	rlf	___lmul@multiplicand+3,f
  1487  0561  0BF8               	decfsz	??___lmul,f
  1488  0562  2D5C               	goto	u435
  1489  0563                     l979:
  1490  0563  3001               	movlw	1
  1491  0564                     u445:
  1492  0564  1003               	clrc
  1493  0565  0CF3               	rrf	___lmul@multiplier+3,f
  1494  0566  0CF2               	rrf	___lmul@multiplier+2,f
  1495  0567  0CF1               	rrf	___lmul@multiplier+1,f
  1496  0568  0CF0               	rrf	___lmul@multiplier,f
  1497  0569  3EFF               	addlw	-1
  1498  056A  1D03               	skipz
  1499  056B  2D64               	goto	u445
  1500  056C  0873               	movf	___lmul@multiplier+3,w
  1501  056D  0472               	iorwf	___lmul@multiplier+2,w
  1502  056E  0471               	iorwf	___lmul@multiplier+1,w
  1503  056F  0470               	iorwf	___lmul@multiplier,w
  1504  0570  1D03               	skipz
  1505  0571  2D73               	goto	u451
  1506  0572  2D74               	goto	u450
  1507  0573                     u451:
  1508  0573  2D3F               	goto	l973
  1509  0574                     u450:
  1510  0574                     l981:
  1511  0574  087C               	movf	___lmul@product+3,w
  1512  0575  00F3               	movwf	?___lmul+3
  1513  0576  087B               	movf	___lmul@product+2,w
  1514  0577  00F2               	movwf	?___lmul+2
  1515  0578  087A               	movf	___lmul@product+1,w
  1516  0579  00F1               	movwf	?___lmul+1
  1517  057A  0879               	movf	___lmul@product,w
  1518  057B  00F0               	movwf	?___lmul
  1519  057C                     l201:
  1520  057C  0008               	return
  1521  057D                     __end_of___lmul:
  1522                           
  1523                           	psect	text8
  1524  05E1                     __ptext8:	
  1525 ;; *************** function ___aldiv *****************
  1526 ;; Defined at:
  1527 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  divisor         4    0[BANK0 ] long 
  1530 ;;  dividend        4    4[BANK0 ] long 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  quotient        4   10[BANK0 ] long 
  1533 ;;  sign            1    9[BANK0 ] unsigned char 
  1534 ;;  counter         1    8[BANK0 ] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  4    0[BANK0 ] long 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       8       0       0       0
  1545 ;;      Locals:         0       6       0       0       0
  1546 ;;      Temps:          1       0       0       0       0
  1547 ;;      Totals:         1      14       0       0       0
  1548 ;;Total ram usage:       15 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_LCD_num
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           
  1558                           ;psect for function ___aldiv
  1559  05E1                     ___aldiv:
  1560  05E1                     l985:	
  1561                           ;incstack = 0
  1562                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1563                           
  1564  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1565  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1566  05E3  01A9               	clrf	___aldiv@sign
  1567  05E4                     l987:
  1568  05E4  1FA3               	btfss	___aldiv@divisor+3,7
  1569  05E5  2DE7               	goto	u461
  1570  05E6  2DE8               	goto	u460
  1571  05E7                     u461:
  1572  05E7  2DF5               	goto	l252
  1573  05E8                     u460:
  1574  05E8                     l989:
  1575  05E8  09A0               	comf	___aldiv@divisor,f
  1576  05E9  09A1               	comf	___aldiv@divisor+1,f
  1577  05EA  09A2               	comf	___aldiv@divisor+2,f
  1578  05EB  09A3               	comf	___aldiv@divisor+3,f
  1579  05EC  0AA0               	incf	___aldiv@divisor,f
  1580  05ED  1903               	skipnz
  1581  05EE  0AA1               	incf	___aldiv@divisor+1,f
  1582  05EF  1903               	skipnz
  1583  05F0  0AA2               	incf	___aldiv@divisor+2,f
  1584  05F1  1903               	skipnz
  1585  05F2  0AA3               	incf	___aldiv@divisor+3,f
  1586  05F3  01A9               	clrf	___aldiv@sign
  1587  05F4  0AA9               	incf	___aldiv@sign,f
  1588  05F5                     l252:
  1589  05F5  1FA7               	btfss	___aldiv@dividend+3,7
  1590  05F6  2DF8               	goto	u471
  1591  05F7  2DF9               	goto	u470
  1592  05F8                     u471:
  1593  05F8  2E08               	goto	l995
  1594  05F9                     u470:
  1595  05F9                     l991:
  1596  05F9  09A4               	comf	___aldiv@dividend,f
  1597  05FA  09A5               	comf	___aldiv@dividend+1,f
  1598  05FB  09A6               	comf	___aldiv@dividend+2,f
  1599  05FC  09A7               	comf	___aldiv@dividend+3,f
  1600  05FD  0AA4               	incf	___aldiv@dividend,f
  1601  05FE  1903               	skipnz
  1602  05FF  0AA5               	incf	___aldiv@dividend+1,f
  1603  0600  1903               	skipnz
  1604  0601  0AA6               	incf	___aldiv@dividend+2,f
  1605  0602  1903               	skipnz
  1606  0603  0AA7               	incf	___aldiv@dividend+3,f
  1607  0604                     l993:
  1608  0604  3001               	movlw	1
  1609  0605  00FD               	movwf	??___aldiv
  1610  0606  087D               	movf	??___aldiv,w
  1611  0607  06A9               	xorwf	___aldiv@sign,f
  1612  0608                     l995:
  1613  0608  3000               	movlw	0
  1614  0609  00AD               	movwf	___aldiv@quotient+3
  1615  060A  3000               	movlw	0
  1616  060B  00AC               	movwf	___aldiv@quotient+2
  1617  060C  3000               	movlw	0
  1618  060D  00AB               	movwf	___aldiv@quotient+1
  1619  060E  3000               	movlw	0
  1620  060F  00AA               	movwf	___aldiv@quotient
  1621  0610                     l997:
  1622  0610  0823               	movf	___aldiv@divisor+3,w
  1623  0611  0422               	iorwf	___aldiv@divisor+2,w
  1624  0612  0421               	iorwf	___aldiv@divisor+1,w
  1625  0613  0420               	iorwf	___aldiv@divisor,w
  1626  0614  1903               	skipnz
  1627  0615  2E17               	goto	u481
  1628  0616  2E18               	goto	u480
  1629  0617                     u481:
  1630  0617  2E65               	goto	l1017
  1631  0618                     u480:
  1632  0618                     l999:
  1633  0618  01A8               	clrf	___aldiv@counter
  1634  0619  0AA8               	incf	___aldiv@counter,f
  1635  061A  2E28               	goto	l1003
  1636  061B                     l1001:
  1637  061B  3001               	movlw	1
  1638  061C  00FD               	movwf	??___aldiv
  1639  061D                     u495:
  1640  061D  1003               	clrc
  1641  061E  0DA0               	rlf	___aldiv@divisor,f
  1642  061F  0DA1               	rlf	___aldiv@divisor+1,f
  1643  0620  0DA2               	rlf	___aldiv@divisor+2,f
  1644  0621  0DA3               	rlf	___aldiv@divisor+3,f
  1645  0622  0BFD               	decfsz	??___aldiv,f
  1646  0623  2E1D               	goto	u495
  1647  0624  3001               	movlw	1
  1648  0625  00FD               	movwf	??___aldiv
  1649  0626  087D               	movf	??___aldiv,w
  1650  0627  07A8               	addwf	___aldiv@counter,f
  1651  0628                     l1003:
  1652  0628  1FA3               	btfss	___aldiv@divisor+3,7
  1653  0629  2E2B               	goto	u501
  1654  062A  2E2C               	goto	u500
  1655  062B                     u501:
  1656  062B  2E1B               	goto	l1001
  1657  062C                     u500:
  1658  062C                     l1005:
  1659  062C  3001               	movlw	1
  1660  062D  00FD               	movwf	??___aldiv
  1661  062E                     u515:
  1662  062E  1003               	clrc
  1663  062F  0DAA               	rlf	___aldiv@quotient,f
  1664  0630  0DAB               	rlf	___aldiv@quotient+1,f
  1665  0631  0DAC               	rlf	___aldiv@quotient+2,f
  1666  0632  0DAD               	rlf	___aldiv@quotient+3,f
  1667  0633  0BFD               	decfsz	??___aldiv,f
  1668  0634  2E2E               	goto	u515
  1669  0635                     l1007:
  1670  0635  0823               	movf	___aldiv@divisor+3,w
  1671  0636  0227               	subwf	___aldiv@dividend+3,w
  1672  0637  1D03               	skipz
  1673  0638  2E43               	goto	u525
  1674  0639  0822               	movf	___aldiv@divisor+2,w
  1675  063A  0226               	subwf	___aldiv@dividend+2,w
  1676  063B  1D03               	skipz
  1677  063C  2E43               	goto	u525
  1678  063D  0821               	movf	___aldiv@divisor+1,w
  1679  063E  0225               	subwf	___aldiv@dividend+1,w
  1680  063F  1D03               	skipz
  1681  0640  2E43               	goto	u525
  1682  0641  0820               	movf	___aldiv@divisor,w
  1683  0642  0224               	subwf	___aldiv@dividend,w
  1684  0643                     u525:
  1685  0643  1C03               	skipc
  1686  0644  2E46               	goto	u521
  1687  0645  2E47               	goto	u520
  1688  0646                     u521:
  1689  0646  2E56               	goto	l1013
  1690  0647                     u520:
  1691  0647                     l1009:
  1692  0647  0820               	movf	___aldiv@divisor,w
  1693  0648  02A4               	subwf	___aldiv@dividend,f
  1694  0649  0821               	movf	___aldiv@divisor+1,w
  1695  064A  1C03               	skipc
  1696  064B  0F21               	incfsz	___aldiv@divisor+1,w
  1697  064C  02A5               	subwf	___aldiv@dividend+1,f
  1698  064D  0822               	movf	___aldiv@divisor+2,w
  1699  064E  1C03               	skipc
  1700  064F  0F22               	incfsz	___aldiv@divisor+2,w
  1701  0650  02A6               	subwf	___aldiv@dividend+2,f
  1702  0651  0823               	movf	___aldiv@divisor+3,w
  1703  0652  1C03               	skipc
  1704  0653  0F23               	incfsz	___aldiv@divisor+3,w
  1705  0654  02A7               	subwf	___aldiv@dividend+3,f
  1706  0655                     l1011:
  1707  0655  142A               	bsf	___aldiv@quotient,0
  1708  0656                     l1013:
  1709  0656  3001               	movlw	1
  1710  0657                     u535:
  1711  0657  1003               	clrc
  1712  0658  0CA3               	rrf	___aldiv@divisor+3,f
  1713  0659  0CA2               	rrf	___aldiv@divisor+2,f
  1714  065A  0CA1               	rrf	___aldiv@divisor+1,f
  1715  065B  0CA0               	rrf	___aldiv@divisor,f
  1716  065C  3EFF               	addlw	-1
  1717  065D  1D03               	skipz
  1718  065E  2E57               	goto	u535
  1719  065F                     l1015:
  1720  065F  3001               	movlw	1
  1721  0660  02A8               	subwf	___aldiv@counter,f
  1722  0661  1D03               	btfss	3,2
  1723  0662  2E64               	goto	u541
  1724  0663  2E65               	goto	u540
  1725  0664                     u541:
  1726  0664  2E2C               	goto	l1005
  1727  0665                     u540:
  1728  0665                     l1017:
  1729  0665  0829               	movf	___aldiv@sign,w
  1730  0666  1903               	btfsc	3,2
  1731  0667  2E69               	goto	u551
  1732  0668  2E6A               	goto	u550
  1733  0669                     u551:
  1734  0669  2E75               	goto	l1021
  1735  066A                     u550:
  1736  066A                     l1019:
  1737  066A  09AA               	comf	___aldiv@quotient,f
  1738  066B  09AB               	comf	___aldiv@quotient+1,f
  1739  066C  09AC               	comf	___aldiv@quotient+2,f
  1740  066D  09AD               	comf	___aldiv@quotient+3,f
  1741  066E  0AAA               	incf	___aldiv@quotient,f
  1742  066F  1903               	skipnz
  1743  0670  0AAB               	incf	___aldiv@quotient+1,f
  1744  0671  1903               	skipnz
  1745  0672  0AAC               	incf	___aldiv@quotient+2,f
  1746  0673  1903               	skipnz
  1747  0674  0AAD               	incf	___aldiv@quotient+3,f
  1748  0675                     l1021:
  1749  0675  082D               	movf	___aldiv@quotient+3,w
  1750  0676  00A3               	movwf	?___aldiv+3
  1751  0677  082C               	movf	___aldiv@quotient+2,w
  1752  0678  00A2               	movwf	?___aldiv+2
  1753  0679  082B               	movf	___aldiv@quotient+1,w
  1754  067A  00A1               	movwf	?___aldiv+1
  1755  067B  082A               	movf	___aldiv@quotient,w
  1756  067C  00A0               	movwf	?___aldiv
  1757  067D                     l262:
  1758  067D  0008               	return
  1759  067E                     __end_of___aldiv:
  1760                           
  1761                           	psect	text9
  1762  04B3                     __ptext9:	
  1763 ;; *************** function _LCD_Char *****************
  1764 ;; Defined at:
  1765 ;;		line 26 in file "./lcd4bit.h"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  data            1    wreg     unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  data            1    2[COMMON] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         0       0       0       0       0
  1780 ;;      Locals:         1       0       0       0       0
  1781 ;;      Temps:          2       0       0       0       0
  1782 ;;      Totals:         3       0       0       0       0
  1783 ;;Total ram usage:        3 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_LCD_num
  1789 ;;		_main
  1790 ;;		_show
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           
  1795                           ;psect for function _LCD_Char
  1796  04B3                     _LCD_Char:
  1797                           
  1798                           ;incstack = 0
  1799                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1800                           ;LCD_Char@data stored from wreg
  1801  04B3  00F2               	movwf	LCD_Char@data
  1802  04B4                     l951:
  1803                           
  1804                           ;./lcd4bit.h: 26: void LCD_Char (unsigned char data);./lcd4bit.h: 27: {;./lcd4bit.h: 28:
      +                               RC0 = 1;
  1805  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1806  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1807  04B6  1407               	bsf	7,0	;volatile
  1808  04B7                     l953:
  1809                           
  1810                           ;./lcd4bit.h: 29:     PORTB = data;
  1811  04B7  0872               	movf	LCD_Char@data,w
  1812  04B8  0086               	movwf	6	;volatile
  1813  04B9                     l955:
  1814                           
  1815                           ;./lcd4bit.h: 30:     RC1 = 1;
  1816  04B9  1487               	bsf	7,1	;volatile
  1817                           
  1818                           ;./lcd4bit.h: 31:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1819  04BA  3041               	movlw	65
  1820  04BB  00F1               	movwf	??_LCD_Char+1
  1821  04BC  30EE               	movlw	238
  1822  04BD  00F0               	movwf	??_LCD_Char
  1823  04BE                     u797:
  1824  04BE  0BF0               	decfsz	??_LCD_Char,f
  1825  04BF  2CBE               	goto	u797
  1826  04C0  0BF1               	decfsz	??_LCD_Char+1,f
  1827  04C1  2CBE               	goto	u797
  1828  04C2  0000               	nop
  1829  04C3                     l957:
  1830                           
  1831                           ;./lcd4bit.h: 32:     RC1 = 0;
  1832  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  1833  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  1834  04C5  1087               	bcf	7,1	;volatile
  1835                           
  1836                           ;./lcd4bit.h: 33:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1837  04C6  3041               	movlw	65
  1838  04C7  00F1               	movwf	??_LCD_Char+1
  1839  04C8  30EE               	movlw	238
  1840  04C9  00F0               	movwf	??_LCD_Char
  1841  04CA                     u807:
  1842  04CA  0BF0               	decfsz	??_LCD_Char,f
  1843  04CB  2CCA               	goto	u807
  1844  04CC  0BF1               	decfsz	??_LCD_Char+1,f
  1845  04CD  2CCA               	goto	u807
  1846  04CE  0000               	nop
  1847  04CF                     l959:
  1848                           
  1849                           ;./lcd4bit.h: 34:     PORTB = (data<<4);
  1850  04CF  0872               	movf	LCD_Char@data,w
  1851  04D0  00F0               	movwf	??_LCD_Char
  1852  04D1  3003               	movlw	3
  1853  04D2                     u405:
  1854  04D2  1003               	clrc
  1855  04D3  0DF0               	rlf	??_LCD_Char,f
  1856  04D4  3EFF               	addlw	-1
  1857  04D5  1D03               	skipz
  1858  04D6  2CD2               	goto	u405
  1859  04D7  1003               	clrc
  1860  04D8  0D70               	rlf	??_LCD_Char,w
  1861  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1862  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1863  04DB  0086               	movwf	6	;volatile
  1864  04DC                     l961:
  1865                           
  1866                           ;./lcd4bit.h: 35:     RC1 = 1;
  1867  04DC  1487               	bsf	7,1	;volatile
  1868  04DD                     l963:
  1869                           
  1870                           ;./lcd4bit.h: 36:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1871  04DD  3041               	movlw	65
  1872  04DE  00F1               	movwf	??_LCD_Char+1
  1873  04DF  30EE               	movlw	238
  1874  04E0  00F0               	movwf	??_LCD_Char
  1875  04E1                     u817:
  1876  04E1  0BF0               	decfsz	??_LCD_Char,f
  1877  04E2  2CE1               	goto	u817
  1878  04E3  0BF1               	decfsz	??_LCD_Char+1,f
  1879  04E4  2CE1               	goto	u817
  1880  04E5  0000               	nop
  1881  04E6                     l965:
  1882                           
  1883                           ;./lcd4bit.h: 37:     RC1 = 0;
  1884  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1885  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1886  04E8  1087               	bcf	7,1	;volatile
  1887  04E9                     l967:
  1888                           
  1889                           ;./lcd4bit.h: 38:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1890  04E9  3041               	movlw	65
  1891  04EA  00F1               	movwf	??_LCD_Char+1
  1892  04EB  30EE               	movlw	238
  1893  04EC  00F0               	movwf	??_LCD_Char
  1894  04ED                     u827:
  1895  04ED  0BF0               	decfsz	??_LCD_Char,f
  1896  04EE  2CED               	goto	u827
  1897  04EF  0BF1               	decfsz	??_LCD_Char+1,f
  1898  04F0  2CED               	goto	u827
  1899  04F1  0000               	nop
  1900  04F2                     l48:
  1901  04F2  0008               	return
  1902  04F3                     __end_of_LCD_Char:
  1903                           
  1904                           	psect	text10
  1905  040B                     __ptext10:	
  1906 ;; *************** function _LCD_init *****************
  1907 ;; Defined at:
  1908 ;;		line 40 in file "./lcd4bit.h"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         0       0       0       0       0
  1924 ;;      Temps:          2       0       0       0       0
  1925 ;;      Totals:         2       0       0       0       0
  1926 ;;Total ram usage:        2 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 1
  1929 ;; This function calls:
  1930 ;;		_LCD_Command
  1931 ;; This function is called by:
  1932 ;;		_main
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           
  1937                           ;psect for function _LCD_init
  1938  040B                     _LCD_init:
  1939  040B                     l1073:	
  1940                           ;incstack = 0
  1941                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1942                           
  1943                           
  1944                           ;./lcd4bit.h: 42:     LCD_Command (0x02);
  1945  040B  3002               	movlw	2
  1946  040C  120A  118A  2473  120A  118A  	fcall	_LCD_Command
  1947                           
  1948                           ;./lcd4bit.h: 43:     LCD_Command (0x28);
  1949  0411  3028               	movlw	40
  1950  0412  120A  118A  2473  120A  118A  	fcall	_LCD_Command
  1951                           
  1952                           ;./lcd4bit.h: 44:     LCD_Command (0x80);
  1953  0417  3080               	movlw	128
  1954  0418  120A  118A  2473  120A  118A  	fcall	_LCD_Command
  1955                           
  1956                           ;./lcd4bit.h: 45:     LCD_Command (0x0C);
  1957  041D  300C               	movlw	12
  1958  041E  120A  118A  2473  120A  118A  	fcall	_LCD_Command
  1959                           
  1960                           ;./lcd4bit.h: 46:     LCD_Command (0x06);
  1961  0423  3006               	movlw	6
  1962  0424  120A  118A  2473  120A  118A  	fcall	_LCD_Command
  1963                           
  1964                           ;./lcd4bit.h: 47:     LCD_Command (0x01);
  1965  0429  3001               	movlw	1
  1966  042A  120A  118A  2473  120A  118A  	fcall	_LCD_Command
  1967  042F                     l1075:
  1968                           
  1969                           ;./lcd4bit.h: 48:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1970  042F  3041               	movlw	65
  1971  0430  00F4               	movwf	??_LCD_init+1
  1972  0431  30EE               	movlw	238
  1973  0432  00F3               	movwf	??_LCD_init
  1974  0433                     u837:
  1975  0433  0BF3               	decfsz	??_LCD_init,f
  1976  0434  2C33               	goto	u837
  1977  0435  0BF4               	decfsz	??_LCD_init+1,f
  1978  0436  2C33               	goto	u837
  1979  0437  0000               	nop
  1980  0438                     l51:
  1981  0438  0008               	return
  1982  0439                     __end_of_LCD_init:
  1983                           
  1984                           	psect	text11
  1985  0473                     __ptext11:	
  1986 ;; *************** function _LCD_Command *****************
  1987 ;; Defined at:
  1988 ;;		line 12 in file "./lcd4bit.h"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  cmnd            1    wreg     unsigned char 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  cmnd            1    2[COMMON] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       0       0       0
  2003 ;;      Locals:         1       0       0       0       0
  2004 ;;      Temps:          2       0       0       0       0
  2005 ;;      Totals:         3       0       0       0       0
  2006 ;;Total ram usage:        3 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_LCD_init
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function _LCD_Command
  2018  0473                     _LCD_Command:
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2022                           ;LCD_Command@cmnd stored from wreg
  2023  0473  00F2               	movwf	LCD_Command@cmnd
  2024  0474                     l933:
  2025                           
  2026                           ;./lcd4bit.h: 12: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 13: {;./lcd4bit.h: 
      +                          14:     RC0 = 0;
  2027  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0476  1007               	bcf	7,0	;volatile
  2030  0477                     l935:
  2031                           
  2032                           ;./lcd4bit.h: 15:     PORTB = cmnd;
  2033  0477  0872               	movf	LCD_Command@cmnd,w
  2034  0478  0086               	movwf	6	;volatile
  2035  0479                     l937:
  2036                           
  2037                           ;./lcd4bit.h: 16:     RC1 = 1;
  2038  0479  1487               	bsf	7,1	;volatile
  2039                           
  2040                           ;./lcd4bit.h: 17:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2041  047A  3041               	movlw	65
  2042  047B  00F1               	movwf	??_LCD_Command+1
  2043  047C  30EE               	movlw	238
  2044  047D  00F0               	movwf	??_LCD_Command
  2045  047E                     u847:
  2046  047E  0BF0               	decfsz	??_LCD_Command,f
  2047  047F  2C7E               	goto	u847
  2048  0480  0BF1               	decfsz	??_LCD_Command+1,f
  2049  0481  2C7E               	goto	u847
  2050  0482  0000               	nop
  2051  0483                     l939:
  2052                           
  2053                           ;./lcd4bit.h: 18:     RC1 = 0;
  2054  0483  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0484  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0485  1087               	bcf	7,1	;volatile
  2057                           
  2058                           ;./lcd4bit.h: 19:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2059  0486  3041               	movlw	65
  2060  0487  00F1               	movwf	??_LCD_Command+1
  2061  0488  30EE               	movlw	238
  2062  0489  00F0               	movwf	??_LCD_Command
  2063  048A                     u857:
  2064  048A  0BF0               	decfsz	??_LCD_Command,f
  2065  048B  2C8A               	goto	u857
  2066  048C  0BF1               	decfsz	??_LCD_Command+1,f
  2067  048D  2C8A               	goto	u857
  2068  048E  0000               	nop
  2069  048F                     l941:
  2070                           
  2071                           ;./lcd4bit.h: 20:     PORTB = (cmnd<<4);
  2072  048F  0872               	movf	LCD_Command@cmnd,w
  2073  0490  00F0               	movwf	??_LCD_Command
  2074  0491  3003               	movlw	3
  2075  0492                     u395:
  2076  0492  1003               	clrc
  2077  0493  0DF0               	rlf	??_LCD_Command,f
  2078  0494  3EFF               	addlw	-1
  2079  0495  1D03               	skipz
  2080  0496  2C92               	goto	u395
  2081  0497  1003               	clrc
  2082  0498  0D70               	rlf	??_LCD_Command,w
  2083  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2084  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2085  049B  0086               	movwf	6	;volatile
  2086  049C                     l943:
  2087                           
  2088                           ;./lcd4bit.h: 21:     RC1 = 1;
  2089  049C  1487               	bsf	7,1	;volatile
  2090  049D                     l945:
  2091                           
  2092                           ;./lcd4bit.h: 22:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2093  049D  3041               	movlw	65
  2094  049E  00F1               	movwf	??_LCD_Command+1
  2095  049F  30EE               	movlw	238
  2096  04A0  00F0               	movwf	??_LCD_Command
  2097  04A1                     u867:
  2098  04A1  0BF0               	decfsz	??_LCD_Command,f
  2099  04A2  2CA1               	goto	u867
  2100  04A3  0BF1               	decfsz	??_LCD_Command+1,f
  2101  04A4  2CA1               	goto	u867
  2102  04A5  0000               	nop
  2103  04A6                     l947:
  2104                           
  2105                           ;./lcd4bit.h: 23:     RC1 = 0;
  2106  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2107  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2108  04A8  1087               	bcf	7,1	;volatile
  2109  04A9                     l949:
  2110                           
  2111                           ;./lcd4bit.h: 24:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2112  04A9  3041               	movlw	65
  2113  04AA  00F1               	movwf	??_LCD_Command+1
  2114  04AB  30EE               	movlw	238
  2115  04AC  00F0               	movwf	??_LCD_Command
  2116  04AD                     u877:
  2117  04AD  0BF0               	decfsz	??_LCD_Command,f
  2118  04AE  2CAD               	goto	u877
  2119  04AF  0BF1               	decfsz	??_LCD_Command+1,f
  2120  04B0  2CAD               	goto	u877
  2121  04B1  0000               	nop
  2122  04B2                     l45:
  2123  04B2  0008               	return
  2124  04B3                     __end_of_LCD_Command:
  2125                           
  2126                           	psect	text12
  2127  057D                     __ptext12:	
  2128 ;; *************** function _ADC_Init *****************
  2129 ;; Defined at:
  2130 ;;		line 68 in file "main.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          2       0       0       0       0
  2147 ;;      Totals:         2       0       0       0       0
  2148 ;;Total ram usage:        2 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _ADC_Init
  2159  057D                     _ADC_Init:
  2160  057D                     l1105:	
  2161                           ;incstack = 0
  2162                           ; Regs used in _ADC_Init: [wreg]
  2163                           
  2164                           
  2165                           ;main.c: 70:     ADCON0 = 0x85;
  2166  057D  3085               	movlw	133
  2167  057E  1283               	bcf	3,5	;RP0=0, select bank0
  2168  057F  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0580  009F               	movwf	31	;volatile
  2170                           
  2171                           ;main.c: 71:     ADCON1 = 0xC0;
  2172  0581  30C0               	movlw	192
  2173  0582  1683               	bsf	3,5	;RP0=1, select bank1
  2174  0583  1303               	bcf	3,6	;RP1=0, select bank1
  2175  0584  009F               	movwf	31	;volatile
  2176                           
  2177                           ;main.c: 72:     AV[0]= ((ADRESH<<8)+ADRESL);
  2178  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0587  081E               	movf	30,w	;volatile
  2181  0588  00C4               	movwf	_AV+1
  2182  0589  1683               	bsf	3,5	;RP0=1, select bank1
  2183  058A  1303               	bcf	3,6	;RP1=0, select bank1
  2184  058B  081E               	movf	30,w	;volatile
  2185  058C  1283               	bcf	3,5	;RP0=0, select bank0
  2186  058D  1303               	bcf	3,6	;RP1=0, select bank0
  2187  058E  00C3               	movwf	_AV
  2188                           
  2189                           ;main.c: 74:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2190  058F  3041               	movlw	65
  2191  0590  00F1               	movwf	??_ADC_Init+1
  2192  0591  30EE               	movlw	238
  2193  0592  00F0               	movwf	??_ADC_Init
  2194  0593                     u887:
  2195  0593  0BF0               	decfsz	??_ADC_Init,f
  2196  0594  2D93               	goto	u887
  2197  0595  0BF1               	decfsz	??_ADC_Init+1,f
  2198  0596  2D93               	goto	u887
  2199  0597  0000               	nop
  2200                           
  2201                           ;main.c: 75:     ADCON0 = 0x8D;
  2202  0598  308D               	movlw	141
  2203  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2204  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2205  059B  009F               	movwf	31	;volatile
  2206                           
  2207                           ;main.c: 76:     ADCON1 = 0xC0;
  2208  059C  30C0               	movlw	192
  2209  059D  1683               	bsf	3,5	;RP0=1, select bank1
  2210  059E  1303               	bcf	3,6	;RP1=0, select bank1
  2211  059F  009F               	movwf	31	;volatile
  2212                           
  2213                           ;main.c: 77:     AV[1]= ((ADRESH<<8)+ADRESL);
  2214  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2215  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2216  05A2  081E               	movf	30,w	;volatile
  2217  05A3  00C6               	movwf	_AV+3
  2218  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  2219  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  2220  05A6  081E               	movf	30,w	;volatile
  2221  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2222  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2223  05A9  00C5               	movwf	_AV+2
  2224                           
  2225                           ;main.c: 79:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2226  05AA  3041               	movlw	65
  2227  05AB  00F1               	movwf	??_ADC_Init+1
  2228  05AC  30EE               	movlw	238
  2229  05AD  00F0               	movwf	??_ADC_Init
  2230  05AE                     u897:
  2231  05AE  0BF0               	decfsz	??_ADC_Init,f
  2232  05AF  2DAE               	goto	u897
  2233  05B0  0BF1               	decfsz	??_ADC_Init+1,f
  2234  05B1  2DAE               	goto	u897
  2235  05B2  0000               	nop
  2236                           
  2237                           ;main.c: 80:     ADCON0 = 0x95;
  2238  05B3  3095               	movlw	149
  2239  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2240  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2241  05B6  009F               	movwf	31	;volatile
  2242                           
  2243                           ;main.c: 81:     ADCON1 = 0xC0;
  2244  05B7  30C0               	movlw	192
  2245  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  2246  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  2247  05BA  009F               	movwf	31	;volatile
  2248                           
  2249                           ;main.c: 82:     AV[2]= ((ADRESH<<8)+ADRESL);
  2250  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2251  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2252  05BD  081E               	movf	30,w	;volatile
  2253  05BE  00C8               	movwf	_AV+5
  2254  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2255  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2256  05C1  081E               	movf	30,w	;volatile
  2257  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2258  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2259  05C4  00C7               	movwf	_AV+4
  2260                           
  2261                           ;main.c: 84:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2262  05C5  3041               	movlw	65
  2263  05C6  00F1               	movwf	??_ADC_Init+1
  2264  05C7  30EE               	movlw	238
  2265  05C8  00F0               	movwf	??_ADC_Init
  2266  05C9                     u907:
  2267  05C9  0BF0               	decfsz	??_ADC_Init,f
  2268  05CA  2DC9               	goto	u907
  2269  05CB  0BF1               	decfsz	??_ADC_Init+1,f
  2270  05CC  2DC9               	goto	u907
  2271  05CD  0000               	nop
  2272                           
  2273                           ;main.c: 85:     ADCON0 = 0x9D;
  2274  05CE  309D               	movlw	157
  2275  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2276  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2277  05D1  009F               	movwf	31	;volatile
  2278                           
  2279                           ;main.c: 86:     ADCON1 = 0xC0;
  2280  05D2  30C0               	movlw	192
  2281  05D3  1683               	bsf	3,5	;RP0=1, select bank1
  2282  05D4  1303               	bcf	3,6	;RP1=0, select bank1
  2283  05D5  009F               	movwf	31	;volatile
  2284                           
  2285                           ;main.c: 87:     AV[3]= ((ADRESH<<8)+ADRESL);
  2286  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2287  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2288  05D8  081E               	movf	30,w	;volatile
  2289  05D9  00CA               	movwf	_AV+7
  2290  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  2291  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  2292  05DC  081E               	movf	30,w	;volatile
  2293  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2294  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2295  05DF  00C9               	movwf	_AV+6
  2296  05E0                     l101:
  2297  05E0  0008               	return
  2298  05E1                     __end_of_ADC_Init:
  2299  007E                     btemp	set	126	;btemp
  2300  007E                     wtemp0	set	126
  2301                           
  2302                           	psect	idloc
  2303                           
  2304                           ;Config register IDLOC0 @ 0x2000
  2305                           ;	unspecified, using default values
  2306  2000                     	org	8192
  2307  2000  3FFF               	dw	16383
  2308                           
  2309                           ;Config register IDLOC1 @ 0x2001
  2310                           ;	unspecified, using default values
  2311  2001                     	org	8193
  2312  2001  3FFF               	dw	16383
  2313                           
  2314                           ;Config register IDLOC2 @ 0x2002
  2315                           ;	unspecified, using default values
  2316  2002                     	org	8194
  2317  2002  3FFF               	dw	16383
  2318                           
  2319                           ;Config register IDLOC3 @ 0x2003
  2320                           ;	unspecified, using default values
  2321  2003                     	org	8195
  2322  2003  3FFF               	dw	16383
  2323                           
  2324                           	psect	config
  2325                           
  2326                           ;Config register CONFIG @ 0x2007
  2327                           ;	Oscillator Selection bits
  2328                           ;	FOSC = HS, HS oscillator
  2329                           ;	Watchdog Timer Enable bit
  2330                           ;	WDTE = OFF, WDT disabled
  2331                           ;	Power-up Timer Enable bit
  2332                           ;	PWRTE = OFF, PWRT disabled
  2333                           ;	Brown-out Reset Enable bit
  2334                           ;	BOREN = ON, BOR enabled
  2335                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2336                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2337                           ;	Data EEPROM Memory Code Protection bit
  2338                           ;	CPD = OFF, Data EEPROM code protection off
  2339                           ;	Flash Program Memory Write Enable bits
  2340                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2341                           ;	In-Circuit Debugger Mode bit
  2342                           ;	DEBUG = 0x1, unprogrammed default
  2343                           ;	Flash Program Memory Code Protection bit
  2344                           ;	CP = OFF, Code protection off
  2345  2007                     	org	8199
  2346  2007  3FFA               	dw	16378

Data Sizes:
    Strings     2
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2712
                                             30 BANK0      5     5      0
                           _ADC_Init
                           _LCD_Char
                        _LCD_Command
                           _LCD_init
                            _LCD_num
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_num                                             18    14      4    2378
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (2) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Char
   _LCD_Command
   _LCD_init
     _LCD_Command
   _LCD_num
     _LCD_Char
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
     ___lwmod
     _intdigits_chardigits
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 04 20:39:22 2022

                            pc 0002                   ?_LCD_Command 0070                             l51 0438  
                           l45 04B2                             l54 07EE                             l63 040A  
                           l71 03ED                             l48 04F2                             l72 03EE  
                           l66 03FB                             _AV 0043                             l69 03E9  
                           l86 0694                             _tx 03E4                             fsr 0004  
                          l101 05E0                            l201 057C                            l252 05F5  
                          l262 067D                            l459 0536                            ?_tx 0070  
                          l469 0472                            l941 048F                            l933 0474  
                          l943 049C                            l935 0477                            l951 04B4  
                          l945 049D                            l937 0479                            l961 04DC  
                          l953 04B7                            l947 04A6                            l939 0483  
                          l963 04DD                            l955 04B9                            l971 0537  
                          l949 04A9                            l965 04E6                            l957 04C3  
                          l981 0574                            l973 053F                            l967 04E9  
                          l959 04CF                            l991 05F9                            l975 0543  
                          l993 0604                            l985 05E1                            l977 055A  
                          l969 03FC                            l995 0608                            l987 05E4  
                          l979 0563                            l997 0610                            l989 05E8  
                          l999 0618                            _RC0 0038                            _RC1 0039  
                          u410 0543                            u411 0542                            u500 062C  
                          u405 04D2                            u501 062B                            u421 054C  
                          u422 0553                            u423 055A                            u520 0647  
                          u600 051E                            u521 0646                            u601 051D  
                          u450 0574                            u515 062E                            u451 0573  
                          u435 055C                            u540 0665                            u460 05E8  
                          u620 0532                            u541 0664                            u525 0643  
                          u461 05E7                            u445 0564                            u621 0531  
                          u605 051A                            u550 066A                            u470 05F9  
                          u630 043F                            u710 0698                            u551 0669  
                          u535 0657                            u471 05F8                            u615 0526  
                          u631 043E                            u711 0697                            u480 0618  
                          u560 04FB                            u720 06D7                            u481 0617  
                          u561 04FA                            u721 06D6                            u650 0451  
                          u730 06E4                            u395 0492                            u651 0450  
                          u731 06E3                            u580 050D                            u660 045B  
                          u740 06F6                            u581 050C                            u661 045A  
                          u645 0443                            u741 06F5                            u750 0711  
                          u807 04CA                            u495 061D                            u575 04FF  
                          u751 0710                            u680 046E                            u817 04E1  
                          u681 046D                            u665 0457                            u690 03ED  
                          u907 05C9                            u827 04ED                            u595 050E  
                          u675 0462                            u691 03EC                            u837 0433  
                          u847 047E                            u767 069E                            u857 048A  
                          u777 06FE                            u867 04A1                            u787 0725  
                          u877 04AD                            u797 04BE                            u887 0593  
                          u897 05AE                            _avv 004B                            fsr0 0004  
                          indf 0000                            tx@a 0070                           ??_tx 0070  
              __end_of_LCD_num 07EF                           l1001 061B                           l1011 0655  
                         l1003 0628                           l1021 0675                           l1013 0656  
                         l1005 062C                           l1101 03EF                           l1015 065F  
                         l1007 0635                           l1031 04FE                           l1103 03E5  
                         l1105 057D                           l1009 0647                           l1017 0665  
                         l1041 0524                           l1033 0505                           l1025 04F3  
                         l1121 068C                           l1019 066A                           l1043 0525  
                         l1035 0509                           l1027 04F5                           l1051 0439  
                         l1123 0691                           l1115 067E                           l1045 052C  
                         l1037 050D                           l1029 04FB                           l1061 0451  
                         l1053 043F                           l1133 06A6                           l1125 0698  
                         l1117 0682                           l1039 051E                           l1047 0532  
                         l1063 045B                           l1055 0442                           l1151 06E4  
                         l1143 06C5                           l1135 06BC                           l1127 06A3  
                         l1119 0687                           l1073 040B                           l1065 0461  
                         l1057 0449                           l1081 0764                           l1161 070B  
                         l1153 06EA                           l1145 06D0                           l1137 06C2  
                         l1075 042F                           l1067 0468                           l1059 044D  
                         l1091 07BC                           l1083 0777                           l1163 0711  
                         l1155 06F0                           l1147 06D7                           l1069 046E  
                         l1093 07C3                           l1085 078A                           l1077 0730  
                         l1165 071D                           l1157 06F6                           l1149 06DE  
                         l1095 07C9                           l1087 07A1                           l1079 0730  
                         l1159 0705                           l1097 07D2                           l1089 07A5  
                         l1099 07DB                           STR_1 0009                           _RCIF 0065  
                         _TXIF 0064                           _main 067E                           btemp 007E  
             __end_of_ADC_Init 05E1                           start 0000               __end_of_LCD_Char 04F3  
                 LCD_Char@data 0072               __end_of_LCD_init 0439                __end_of___aldiv 067E  
                        ?_main 0070                __end_of___lwdiv 0537                __end_of___lwmod 0473  
                        _RCREG 001A                          _RCSTA 0018                          _SPBRG 0099  
                        _PORTB 0006                          _TRISB 0086                          _TRISC 0087  
                        _TXREG 0019                          _TXSTA 0098            ___lmul@multiplicand 0074  
                        main@i 0041                          main@j 0042                __end_of_ser_int 03FC  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __initialization 07EF                   __end_of_main 0730                         ??_main 003E  
               LCD_num@result1 003A           _intdigits_chardigits 03FC                      ??_LCD_num 007E  
                       _ADCON0 001F                         _ADCON1 009F                         _ADRESH 001E  
                       _ADRESL 009E                         ___lmul 0537                      ??___aldiv 007D  
                    ??___lwdiv 0074                      ??___lwmod 0074           __size_of_LCD_Command 0040  
        ?_intdigits_chardigits 0070                      ?_ADC_Init 0070                      ??_ser_int 0070  
                    ?_LCD_Char 0070        __end_of__initialization 07FC                      ?_LCD_init 0070  
               __pcstackCOMMON 0070                     __end_of_tx 03EF                     ??_ADC_Init 0070  
                   __pbssBANK0 0043                     ??_LCD_Char 0070                     ??_LCD_init 0073  
                   __pmaintext 067E                        ?___lmul 0070                 ___lmul@product 0079  
       ??_intdigits_chardigits 0076                        _LCD_num 0730                     __stringtab 0003  
                      ___aldiv 05E1                __size_of___lmul 0046                        ___lwdiv 04F3  
                      ___lwmod 0439                        __ptext1 03E4                        __ptext2 03EF  
                      __ptext3 0730                        __ptext4 03FC                        __ptext5 0439  
                      __ptext6 04F3                        __ptext7 0537                        __ptext8 05E1  
                      __ptext9 04B3               ___aldiv@dividend 0024                        _ser_int 03EF  
         end_of_initialization 07FC               ___aldiv@quotient 002A              __size_of_ADC_Init 0064  
            __size_of_LCD_Char 0040              __size_of_LCD_init 002E                  ??_LCD_Command 0070  
               __end_of___lmul 057D            start_initialization 07EF                  LCD_num@digit1 0032  
                LCD_num@digit2 0034                  LCD_num@digit3 0036                     LCD_num@val 002E  
                LCD_num@result 0038                       ??___lmul 0078               LCD_num@remainder 003C  
          __end_of_LCD_Command 04B3                       ?_LCD_num 002E                      ___latbits 0002  
                __pcstackBANK0 0020               ___lwdiv@dividend 0072                       ?___aldiv 0020  
                     ?___lwdiv 0070                       ?___lwmod 0070                      __pstrings 0003  
__size_of_intdigits_chardigits 000F                       _ADC_Init 057D                       ?_ser_int 0070  
             ___lwdiv@quotient 0075                    __size_of_tx 000B                ___aldiv@divisor 0020  
                     _LCD_Char 04B3                ___aldiv@counter 0028                       _LCD_init 040B  
                     _GO_nDONE 00FA                    _LCD_Command 0473                    __stringbase 0008  
             __size_of_LCD_num 00BF              ___lmul@multiplier 0070          intdigits_chardigits@a 0070  
        intdigits_chardigits@b 0072          intdigits_chardigits@c 0074               __size_of___aldiv 009D  
             __size_of___lwdiv 0044               __size_of___lwmod 003A             __end_of__stringtab 0009  
              ___lwdiv@divisor 0070                ___lwdiv@counter 0077                       __ptext10 040B  
                     __ptext11 0473                       __ptext12 057D               __size_of_ser_int 000D  
                __size_of_main 00B2                LCD_Command@cmnd 0072               ___lwmod@dividend 0072  
                    stringcode 0003                ___lwmod@divisor 0070                ___lwmod@counter 0075  
                     stringdir 0003                       stringtab 0003                   ___aldiv@sign 0029  
 __end_of_intdigits_chardigits 040B  
