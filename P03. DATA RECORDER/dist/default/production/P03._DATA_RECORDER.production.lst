

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 08 21:31:26 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 2.40
    74                           ; Generated 17/11/2021 GMT
    75                           ; 
    76                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F877A Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228                           
   229                           	psect	idataBANK0
   230  0005                     __pidataBANK0:
   231                           
   232                           ;initializer for _oss
   233  0005  3403               	retlw	3
   234  0006  3400               	retlw	0
   235                           
   236                           	psect	idataBANK1
   237  0003                     __pidataBANK1:
   238                           
   239                           ;initializer for _sn
   240  0003  3401               	retlw	1
   241  0004  3400               	retlw	0
   242                           
   243                           	psect	strings
   244  1000                     __pstrings:
   245  1000                     stringtab:
   246  1000                     __stringtab:
   247  1000                     stringcode:	
   248                           ;	String table - string pointers are 1 byte each
   249                           
   250  1000                     stringdir:
   251  1000  3010               	movlw	high stringdir
   252  1001  008A               	movwf	10
   253  1002  0804               	movf	4,w
   254  1003  0A84               	incf	4,f
   255  1004  0782               	addwf	2,f
   256  1005                     __stringbase:
   257  1005  3400               	retlw	0
   258  1006                     __end_of__stringtab:
   259  1006                     exp@coeff:
   260  1006  3400               	retlw	0
   261  1007  3400               	retlw	0
   262  1008  3480               	retlw	128
   263  1009  343F               	retlw	63
   264  100A  3418               	retlw	24
   265  100B  3472               	retlw	114
   266  100C  3431               	retlw	49
   267  100D  343F               	retlw	63
   268  100E  34F0               	retlw	240
   269  100F  34FD               	retlw	253
   270  1010  3475               	retlw	117
   271  1011  343E               	retlw	62
   272  1012  3447               	retlw	71
   273  1013  3458               	retlw	88
   274  1014  3463               	retlw	99
   275  1015  343D               	retlw	61
   276  1016  3458               	retlw	88
   277  1017  3495               	retlw	149
   278  1018  341D               	retlw	29
   279  1019  343C               	retlw	60
   280  101A  3482               	retlw	130
   281  101B  34C4               	retlw	196
   282  101C  34AE               	retlw	174
   283  101D  343A               	retlw	58
   284  101E  34A8               	retlw	168
   285  101F  3478               	retlw	120
   286  1020  3421               	retlw	33
   287  1021  3439               	retlw	57
   288  1022  34EF               	retlw	239
   289  1023  3493               	retlw	147
   290  1024  3480               	retlw	128
   291  1025  3437               	retlw	55
   292  1026  34A0               	retlw	160
   293  1027  3492               	retlw	146
   294  1028  34A7               	retlw	167
   295  1029  3435               	retlw	53
   296  102A  3446               	retlw	70
   297  102B  3456               	retlw	86
   298  102C  3415               	retlw	21
   299  102D  3434               	retlw	52
   300  102E                     __end_ofexp@coeff:
   301  102E                     log@coeff:
   302  102E  3400               	retlw	0
   303  102F  3400               	retlw	0
   304  1030  3400               	retlw	0
   305  1031  3400               	retlw	0
   306  1032  34C4               	retlw	196
   307  1033  34FF               	retlw	255
   308  1034  347F               	retlw	127
   309  1035  343F               	retlw	63
   310  1036  3480               	retlw	128
   311  1037  34EF               	retlw	239
   312  1038  34FF               	retlw	255
   313  1039  34BE               	retlw	190
   314  103A  3490               	retlw	144
   315  103B  34E1               	retlw	225
   316  103C  34A9               	retlw	169
   317  103D  343E               	retlw	62
   318  103E  34EC               	retlw	236
   319  103F  3482               	retlw	130
   320  1040  3476               	retlw	118
   321  1041  34BE               	retlw	190
   322  1042  3482               	retlw	130
   323  1043  34AD               	retlw	173
   324  1044  342B               	retlw	43
   325  1045  343E               	retlw	62
   326  1046  340E               	retlw	14
   327  1047  343C               	retlw	60
   328  1048  34C3               	retlw	195
   329  1049  34BD               	retlw	189
   330  104A  3487               	retlw	135
   331  104B  34D1               	retlw	209
   332  104C  3413               	retlw	19
   333  104D  343D               	retlw	61
   334  104E  3441               	retlw	65
   335  104F  3478               	retlw	120
   336  1050  34D3               	retlw	211
   337  1051  34BB               	retlw	187
   338  1052                     __end_oflog@coeff:
   339  001E                     _ADRESH	set	30
   340  001F                     _ADCON0	set	31
   341  0013                     _SSPBUF	set	19
   342  0014                     _SSPCON	set	20
   343  0008                     _PORTDbits	set	8
   344  001A                     _RCREG	set	26
   345  0019                     _TXREG	set	25
   346  0018                     _RCSTA	set	24
   347  0006                     _PORTB	set	6
   348  00FA                     _GO_nDONE	set	250
   349  0063                     _SSPIF	set	99
   350  0065                     _RCIF	set	101
   351  0064                     _TXIF	set	100
   352  0039                     _RC1	set	57
   353  0038                     _RC0	set	56
   354  009E                     _ADRESL	set	158
   355  009F                     _ADCON1	set	159
   356  0093                     _SSPADD	set	147
   357  0088                     _TRISDbits	set	136
   358  0099                     _SPBRG	set	153
   359  0098                     _TXSTA	set	152
   360  0087                     _TRISCbits	set	135
   361  0086                     _TRISBbits	set	134
   362  048C                     _ACKEN	set	1164
   363  048D                     _ACKDT	set	1165
   364  0489                     _RSEN	set	1161
   365  048A                     _PEN	set	1162
   366  0488                     _SEN	set	1160
   367  048B                     _RCEN	set	1163
   368  048E                     _ACKSTAT	set	1166
   369  043C                     _TRISC4	set	1084
   370  043B                     _TRISC3	set	1083
   371  1052                     STR_2:
   372  1052  3448               	retlw	72	;'H'
   373  1053  3475               	retlw	117	;'u'
   374  1054  346D               	retlw	109	;'m'
   375  1055  3469               	retlw	105	;'i'
   376  1056  343A               	retlw	58	;':'
   377  1057  3400               	retlw	0
   378  1058                     STR_1:
   379  1058  3454               	retlw	84	;'T'
   380  1059  3465               	retlw	101	;'e'
   381  105A  346D               	retlw	109	;'m'
   382  105B  3470               	retlw	112	;'p'
   383  105C  343A               	retlw	58	;':'
   384  105D  3400               	retlw	0
   385  105E                     STR_3:
   386  105E  3468               	retlw	104	;'h'
   387  105F  3450               	retlw	80	;'P'
   388  1060  3461               	retlw	97	;'a'
   389  1061  343A               	retlw	58	;':'
   390  1062  3400               	retlw	0
   391  1063                     STR_4:
   392  1063  3441               	retlw	65	;'A'
   393  1064  346C               	retlw	108	;'l'
   394  1065  3474               	retlw	116	;'t'
   395  1066  343A               	retlw	58	;':'
   396  1067  3400               	retlw	0
   397                           
   398                           	psect	cinit
   399  07C6                     start_initialization:	
   400                           ; #config settings
   401                           
   402  07C6                     __initialization:
   403                           
   404                           ; Initialize objects allocated to BANK1
   405  07C6  1683               	bsf	3,5	;RP0=1, select bank1
   406  07C7  1303               	bcf	3,6	;RP1=0, select bank1
   407  07C8  120A  118A  2003  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   408  07CD  00ED               	movwf	__pdataBANK1& (0+127)
   409  07CE  120A  118A  2004  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   410  07D3  00EE               	movwf	(__pdataBANK1+1)& (0+127)
   411                           
   412                           ; Initialize objects allocated to BANK0
   413  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   414  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   415  07D6  120A  118A  2005  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   416  07DB  00ED               	movwf	__pdataBANK0& (0+127)
   417  07DC  120A  118A  2006  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   418  07E1  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   419                           
   420                           ; Clear objects allocated to BANK3
   421  07E2  1783               	bsf	3,7	;select IRP bank2
   422  07E3  3090               	movlw	low __pbssBANK3
   423  07E4  0084               	movwf	4
   424  07E5  309B               	movlw	low (__pbssBANK3+11)
   425  07E6  160A  118A  22A7  120A  118A  	fcall	clear_ram0
   426                           
   427                           ; Clear objects allocated to BANK1
   428  07EB  1383               	bcf	3,7	;select IRP bank0
   429  07EC  30A0               	movlw	low __pbssBANK1
   430  07ED  0084               	movwf	4
   431  07EE  30ED               	movlw	low (__pbssBANK1+77)
   432  07EF  160A  118A  22A7  120A  118A  	fcall	clear_ram0
   433                           
   434                           ; Clear objects allocated to BANK0
   435  07F4  3020               	movlw	low __pbssBANK0
   436  07F5  0084               	movwf	4
   437  07F6  3047               	movlw	low (__pbssBANK0+39)
   438  07F7  160A  118A  22A7  120A  118A  	fcall	clear_ram0
   439  07FC                     end_of_initialization:	
   440                           ;End of C runtime variable initialization code
   441                           
   442  07FC                     __end_of__initialization:
   443  07FC  0183               	clrf	3
   444  07FD  120A  118A  2807   	ljmp	_main	;jump to C main() function
   445                           
   446                           	psect	bssBANK0
   447  0020                     __pbssBANK0:
   448  0020                     _x2:
   449  0020                     	ds	4
   450  0024                     _x1:
   451  0024                     	ds	4
   452  0028                     _b6:
   453  0028                     	ds	4
   454  002C                     _altittude:
   455  002C                     	ds	2
   456  002E                     _hpa:
   457  002E                     	ds	2
   458  0030                     _Sum:
   459  0030                     	ds	2
   460  0032                     _RH:
   461  0032                     	ds	2
   462  0034                     _Temp:
   463  0034                     	ds	2
   464  0036                     _year:
   465  0036                     	ds	1
   466  0037                     _month:
   467  0037                     	ds	1
   468  0038                     _date:
   469  0038                     	ds	1
   470  0039                     _day:
   471  0039                     	ds	1
   472  003A                     _hour:
   473  003A                     	ds	1
   474  003B                     _min:
   475  003B                     	ds	1
   476  003C                     _sec:
   477  003C                     	ds	1
   478  003D                     _Ch:
   479  003D                     	ds	1
   480  003E                     _RH_byte2:
   481  003E                     	ds	1
   482  003F                     _RH_byte1:
   483  003F                     	ds	1
   484  0040                     _T_byte2:
   485  0040                     	ds	1
   486  0041                     _T_byte1:
   487  0041                     	ds	1
   488  0042                     _Check:
   489  0042                     	ds	1
   490  0043                     _p:
   491  0043                     	ds	4
   492                           
   493                           	psect	dataBANK0
   494  006D                     __pdataBANK0:
   495  006D                     _oss:
   496  006D                     	ds	2
   497                           
   498                           	psect	bssBANK1
   499  00A0                     __pbssBANK1:
   500  00A0                     _b7:
   501  00A0                     	ds	4
   502  00A4                     _b4:
   503  00A4                     	ds	4
   504  00A8                     _x3:
   505  00A8                     	ds	4
   506  00AC                     _up:
   507  00AC                     	ds	4
   508  00B0                     _b5:
   509  00B0                     	ds	4
   510  00B4                     _b3:
   511  00B4                     	ds	4
   512  00B8                     _b2:
   513  00B8                     	ds	4
   514  00BC                     _b1:
   515  00BC                     	ds	4
   516  00C0                     _b0:
   517  00C0                     	ds	4
   518  00C4                     _af:
   519  00C4                     	ds	4
   520  00C8                     _ae:
   521  00C8                     	ds	4
   522  00CC                     _ad:
   523  00CC                     	ds	4
   524  00D0                     _ac:
   525  00D0                     	ds	4
   526  00D4                     _ab:
   527  00D4                     	ds	4
   528  00D8                     _aa:
   529  00D8                     	ds	4
   530  00DC                     _avv:
   531  00DC                     	ds	3
   532  00DF                     _errno:
   533  00DF                     	ds	2
   534  00E1                     _ac4:
   535  00E1                     	ds	2
   536  00E3                     _ac3:
   537  00E3                     	ds	2
   538  00E5                     _ac2:
   539  00E5                     	ds	2
   540  00E7                     _ac1:
   541  00E7                     	ds	2
   542  00E9                     _temperature:
   543  00E9                     	ds	2
   544  00EB                     _humidity:
   545  00EB                     	ds	2
   546                           
   547                           	psect	dataBANK1
   548  00ED                     __pdataBANK1:
   549  00ED                     _sn:
   550  00ED                     	ds	2
   551                           
   552                           	psect	bssBANK3
   553  0190                     __pbssBANK3:
   554  0190                     _AV:
   555  0190                     	ds	8
   556  0198                     _message:
   557  0198                     	ds	3
   558                           
   559                           	psect	clrtext
   560  12A7                     clear_ram0:	
   561                           ;	Called with FSR containing the base address, and
   562                           ;	W with the last address+1
   563                           
   564  12A7  0064               	clrwdt	;clear the watchdog before getting into this loop
   565  12A8                     clrloop0:
   566  12A8  0180               	clrf	0	;clear RAM location pointed to by FSR
   567  12A9  0A84               	incf	4,f	;increment pointer
   568  12AA  0604               	xorwf	4,w	;XOR with final address
   569  12AB  1903               	btfsc	3,2	;have we reached the end yet?
   570  12AC  3400               	retlw	0	;all done for this memory range, return
   571  12AD  0604               	xorwf	4,w	;XOR again to restore value
   572  12AE  2AA8               	goto	clrloop0	;do the next byte
   573                           
   574                           	psect	cstackCOMMON
   575  0070                     __pcstackCOMMON:
   576  0070                     ?_intdigits_chardigits:
   577  0070                     ?_rtc_stop:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_rtc_stop:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_rtc_res:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ??_rtc_res:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_rtc_nak:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ??_rtc_nak:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_bmp280_waitmssp:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ??_bmp280_waitmssp:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_print_serialnumber:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_rtc_getdata:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_rtc_lcd_data:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_rtc_terminal_data:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_ADC_Init:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ??_ADC_Init:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_print_analogvoltages:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_print_dht11data:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_bmp280_getdata:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_uncompensated_pressure:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_actual_pressure:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_bmp280_displaydata:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_bmp280_terminaldata:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_LCD_Command:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ??_LCD_Command:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_LCD_Char:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ??_LCD_Char:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_LCD_init:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_show:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_ser_int:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ??_ser_int:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_tx:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_tx:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_StartSignal:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_StartSignal:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_CheckResponse:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_CheckResponse:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_ReadData:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_ReadData:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_rtc_int:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_rtc_int:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_waitmssp:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ??_waitmssp:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_rtc_send:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ??_rtc_send:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_rtc_read:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ??_rtc_read:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_rtc_read_byte:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_convup:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ??_convup:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_convd:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ??_convd:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_bmp280_init:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??_bmp280_init:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_bmp280_start:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ??_bmp280_start:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_bmp280_stop:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ??_bmp280_stop:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_bmp280_restart:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ??_bmp280_restart:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_bmp280_nak:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ??_bmp280_nak:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_bmp280_send:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ??_bmp280_send:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_bmp280_read:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ??_bmp280_read:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_bmp280_read_byte:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_main:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?___awdiv:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?___awmod:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0070                     ?___lwdiv:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     ?___lwmod:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0070                     ?___lmul:	
   788                           ; 2 bytes @ 0x0
   789                           
   790  0070                     ?___lldiv:	
   791                           ; 4 bytes @ 0x0
   792                           
   793  0070                     tx@a:	
   794                           ; 4 bytes @ 0x0
   795                           
   796  0070                     rtc_send@a:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     convd@bcd:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     bmp280_send@dat:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     intdigits_chardigits@a:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ___awdiv@divisor:	
   809                           ; 2 bytes @ 0x0
   810                           
   811  0070                     ___awmod@divisor:	
   812                           ; 2 bytes @ 0x0
   813                           
   814  0070                     ___lwdiv@divisor:	
   815                           ; 2 bytes @ 0x0
   816                           
   817  0070                     ___lwmod@divisor:	
   818                           ; 2 bytes @ 0x0
   819                           
   820  0070                     ___lmul@multiplier:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0070                     ___lldiv@divisor:	
   824                           ; 4 bytes @ 0x0
   825                           
   826                           
   827                           ; 4 bytes @ 0x0
   828  0070                     	ds	1
   829  0071                     ??_rtc_read_byte:
   830  0071                     ?_bmp280_send_byte:	
   831                           ; 1 bytes @ 0x1
   832                           
   833  0071                     ??_bmp280_read_byte:	
   834                           ; 1 bytes @ 0x1
   835                           
   836  0071                     convup@bcd:	
   837                           ; 1 bytes @ 0x1
   838                           
   839  0071                     bmp280_send_byte@count:	
   840                           ; 1 bytes @ 0x1
   841                           
   842                           
   843                           ; 1 bytes @ 0x1
   844  0071                     	ds	1
   845  0072                     ??_rtc_terminal_data:
   846  0072                     ??_bmp280_send_byte:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0072                     LCD_Command@cmnd:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0072                     LCD_Char@data:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0072                     ReadData@i:	
   856                           ; 1 bytes @ 0x2
   857                           
   858  0072                     rtc_read_byte@addr:	
   859                           ; 1 bytes @ 0x2
   860                           
   861  0072                     bmp280_send_byte@addr:	
   862                           ; 1 bytes @ 0x2
   863                           
   864  0072                     bmp280_read_byte@addr:	
   865                           ; 1 bytes @ 0x2
   866                           
   867  0072                     intdigits_chardigits@b:	
   868                           ; 1 bytes @ 0x2
   869                           
   870  0072                     ___awdiv@dividend:	
   871                           ; 2 bytes @ 0x2
   872                           
   873  0072                     ___awmod@dividend:	
   874                           ; 2 bytes @ 0x2
   875                           
   876  0072                     ___lwdiv@dividend:	
   877                           ; 2 bytes @ 0x2
   878                           
   879  0072                     ___lwmod@dividend:	
   880                           ; 2 bytes @ 0x2
   881                           
   882                           
   883                           ; 2 bytes @ 0x2
   884  0072                     	ds	1
   885  0073                     ??_rtc_lcd_data:
   886  0073                     ??_LCD_init:	
   887                           ; 1 bytes @ 0x3
   888                           
   889  0073                     ??_show:	
   890                           ; 1 bytes @ 0x3
   891                           
   892  0073                     ReadData@j:	
   893                           ; 1 bytes @ 0x3
   894                           
   895  0073                     rtc_read_byte@rec:	
   896                           ; 1 bytes @ 0x3
   897                           
   898  0073                     bmp280_read_byte@rec:	
   899                           ; 1 bytes @ 0x3
   900                           
   901                           
   902                           ; 1 bytes @ 0x3
   903  0073                     	ds	1
   904  0074                     ??_rtc_getdata:
   905  0074                     ??_bmp280_getdata:	
   906                           ; 1 bytes @ 0x4
   907                           
   908  0074                     ??___awdiv:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0074                     ??___awmod:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0074                     ??___lwdiv:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0074                     ??___lwmod:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0074                     show@s:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0074                     intdigits_chardigits@c:	
   924                           ; 1 bytes @ 0x4
   925                           
   926  0074                     ___lmul@multiplicand:	
   927                           ; 2 bytes @ 0x4
   928                           
   929  0074                     ___lldiv@dividend:	
   930                           ; 4 bytes @ 0x4
   931                           
   932                           
   933                           ; 4 bytes @ 0x4
   934  0074                     	ds	1
   935  0075                     ___awdiv@counter:
   936  0075                     ___awmod@counter:	
   937                           ; 1 bytes @ 0x5
   938                           
   939  0075                     ___lwmod@counter:	
   940                           ; 1 bytes @ 0x5
   941                           
   942  0075                     ___lwdiv@quotient:	
   943                           ; 1 bytes @ 0x5
   944                           
   945                           
   946                           ; 2 bytes @ 0x5
   947  0075                     	ds	1
   948  0076                     ??_intdigits_chardigits:
   949  0076                     ___awdiv@sign:	
   950                           ; 1 bytes @ 0x6
   951                           
   952  0076                     ___awmod@sign:	
   953                           ; 1 bytes @ 0x6
   954                           
   955                           
   956                           ; 1 bytes @ 0x6
   957  0076                     	ds	1
   958  0077                     ___lwdiv@counter:
   959  0077                     ___awdiv@quotient:	
   960                           ; 1 bytes @ 0x7
   961                           
   962                           
   963                           ; 2 bytes @ 0x7
   964  0077                     	ds	1
   965  0078                     ??___lmul:
   966  0078                     ??___lldiv:	
   967                           ; 1 bytes @ 0x8
   968                           
   969                           
   970                           ; 1 bytes @ 0x8
   971  0078                     	ds	1
   972  0079                     ?_show_multidigits:
   973  0079                     ?_tx_sn:	
   974                           ; 1 bytes @ 0x9
   975                           
   976  0079                     show_multidigits@val:	
   977                           ; 1 bytes @ 0x9
   978                           
   979  0079                     tx_sn@val:	
   980                           ; 2 bytes @ 0x9
   981                           
   982  0079                     ___lmul@product:	
   983                           ; 2 bytes @ 0x9
   984                           
   985  0079                     ___lldiv@quotient:	
   986                           ; 4 bytes @ 0x9
   987                           
   988                           
   989                           ; 4 bytes @ 0x9
   990  0079                     	ds	2
   991  007B                     ??_print_serialnumber:
   992  007B                     ??_bmp280_displaydata:	
   993                           ; 1 bytes @ 0xB
   994                           
   995  007B                     ??_bmp280_terminaldata:	
   996                           ; 1 bytes @ 0xB
   997                           
   998  007B                     ??_show_multidigits:	
   999                           ; 1 bytes @ 0xB
  1000                           
  1001  007B                     ??_tx_sn:	
  1002                           ; 1 bytes @ 0xB
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0xB
  1006  007B                     	ds	2
  1007  007D                     ??___aldiv:
  1008  007D                     ___lldiv@counter:	
  1009                           ; 1 bytes @ 0xD
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0xD
  1013  007D                     	ds	1
  1014  007E                     ??_LCD_num:
  1015                           
  1016                           	psect	cstackBANK0
  1017  0047                     __pcstackBANK0:	
  1018                           ; 1 bytes @ 0xE
  1019                           
  1020  0047                     ??_uncompensated_pressure:
  1021  0047                     ?___aldiv:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0047                     show_multidigits@digit4:	
  1025                           ; 4 bytes @ 0x0
  1026                           
  1027  0047                     tx_sn@digit4:	
  1028                           ; 2 bytes @ 0x0
  1029                           
  1030  0047                     ___aldiv@divisor:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033                           
  1034                           ; 4 bytes @ 0x0
  1035  0047                     	ds	2
  1036  0049                     show_multidigits@result:
  1037  0049                     tx_sn@result:	
  1038                           ; 2 bytes @ 0x2
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x2
  1042  0049                     	ds	2
  1043  004B                     show_multidigits@digit3:
  1044  004B                     tx_sn@digit3:	
  1045                           ; 2 bytes @ 0x4
  1046                           
  1047  004B                     ___aldiv@dividend:	
  1048                           ; 2 bytes @ 0x4
  1049                           
  1050                           
  1051                           ; 4 bytes @ 0x4
  1052  004B                     	ds	2
  1053  004D                     show_multidigits@digit1:
  1054  004D                     tx_sn@digit1:	
  1055                           ; 2 bytes @ 0x6
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0x6
  1059  004D                     	ds	2
  1060  004F                     ___aldiv@counter:
  1061  004F                     show_multidigits@digit2:	
  1062                           ; 1 bytes @ 0x8
  1063                           
  1064  004F                     tx_sn@digit2:	
  1065                           ; 2 bytes @ 0x8
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0x8
  1069  004F                     	ds	1
  1070  0050                     ___aldiv@sign:
  1071                           
  1072                           ; 1 bytes @ 0x9
  1073  0050                     	ds	1
  1074  0051                     show_multidigits@result1:
  1075  0051                     tx_sn@result1:	
  1076                           ; 2 bytes @ 0xA
  1077                           
  1078  0051                     ___aldiv@quotient:	
  1079                           ; 2 bytes @ 0xA
  1080                           
  1081                           
  1082                           ; 4 bytes @ 0xA
  1083  0051                     	ds	2
  1084  0053                     show_multidigits@remainder:
  1085  0053                     tx_sn@remainder:	
  1086                           ; 2 bytes @ 0xC
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0xC
  1090  0053                     	ds	1
  1091  0054                     uncompensated_pressure@ff6:
  1092                           
  1093                           ; 4 bytes @ 0xD
  1094  0054                     	ds	1
  1095  0055                     ??_print_dht11data:
  1096  0055                     ??_actual_pressure:	
  1097                           ; 1 bytes @ 0xE
  1098                           
  1099  0055                     ?_LCD_num:	
  1100                           ; 1 bytes @ 0xE
  1101                           
  1102  0055                     LCD_num@val:	
  1103                           ; 1 bytes @ 0xE
  1104                           
  1105                           
  1106                           ; 4 bytes @ 0xE
  1107  0055                     	ds	3
  1108  0058                     uncompensated_pressure@ff7:
  1109                           
  1110                           ; 4 bytes @ 0x11
  1111  0058                     	ds	1
  1112  0059                     LCD_num@digit1:
  1113                           
  1114                           ; 2 bytes @ 0x12
  1115  0059                     	ds	2
  1116  005B                     LCD_num@digit2:
  1117                           
  1118                           ; 2 bytes @ 0x14
  1119  005B                     	ds	1
  1120  005C                     uncompensated_pressure@ff8:
  1121                           
  1122                           ; 4 bytes @ 0x15
  1123  005C                     	ds	1
  1124  005D                     LCD_num@digit3:
  1125                           
  1126                           ; 2 bytes @ 0x16
  1127  005D                     	ds	2
  1128  005F                     LCD_num@result:
  1129                           
  1130                           ; 2 bytes @ 0x18
  1131  005F                     	ds	2
  1132  0061                     LCD_num@result1:
  1133                           
  1134                           ; 2 bytes @ 0x1A
  1135  0061                     	ds	2
  1136  0063                     LCD_num@remainder:
  1137  0063                     _actual_pressure$1204:	
  1138                           ; 2 bytes @ 0x1C
  1139                           
  1140                           
  1141                           ; 4 bytes @ 0x1C
  1142  0063                     	ds	2
  1143  0065                     ??_print_analogvoltages:
  1144                           
  1145                           ; 1 bytes @ 0x1E
  1146  0065                     	ds	3
  1147  0068                     print_analogvoltages@i:
  1148                           
  1149                           ; 1 bytes @ 0x21
  1150  0068                     	ds	1
  1151  0069                     print_analogvoltages@j:
  1152                           
  1153                           ; 1 bytes @ 0x22
  1154  0069                     	ds	1
  1155  006A                     ??_main:
  1156                           
  1157                           ; 1 bytes @ 0x23
  1158  006A                     	ds	3
  1159                           
  1160                           	psect	maintext
  1161  0007                     __pmaintext:	
  1162 ;;
  1163 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1164 ;;
  1165 ;; *************** function _main *****************
  1166 ;; Defined at:
  1167 ;;		line 57 in file "main.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : B00/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         0       0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0
  1183 ;;      Temps:          0       3       0       0       0
  1184 ;;      Totals:         0       3       0       0       0
  1185 ;;Total ram usage:        3 bytes
  1186 ;; Hardware stack levels required when called: 4
  1187 ;; This function calls:
  1188 ;;		_ADC_Init
  1189 ;;		_LCD_Command
  1190 ;;		_LCD_init
  1191 ;;		_actual_pressure
  1192 ;;		_bmp280_displaydata
  1193 ;;		_bmp280_getdata
  1194 ;;		_bmp280_init
  1195 ;;		_bmp280_terminaldata
  1196 ;;		_print_analogvoltages
  1197 ;;		_print_dht11data
  1198 ;;		_print_serialnumber
  1199 ;;		_rtc_getdata
  1200 ;;		_rtc_int
  1201 ;;		_rtc_lcd_data
  1202 ;;		_rtc_terminal_data
  1203 ;;		_ser_int
  1204 ;;		_tx
  1205 ;;		_uncompensated_pressure
  1206 ;; This function is called by:
  1207 ;;		Startup code after reset
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           
  1212                           ;psect for function _main
  1213  0007                     _main:
  1214  0007                     l3272:	
  1215                           ;incstack = 0
  1216                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1217                           
  1218                           
  1219                           ;main.c: 59:     LCD_init();
  1220  0007  160A  118A  2421  120A  118A  	fcall	_LCD_init
  1221                           
  1222                           ;main.c: 60:     ser_int();
  1223  000C  160A  118A  2316  120A  118A  	fcall	_ser_int
  1224  0011                     l375:	
  1225                           ;main.c: 61:     while (1)
  1226                           
  1227                           
  1228                           ;main.c: 62:     {;main.c: 63:         LCD_Command(0x01);
  1229  0011  3001               	movlw	1
  1230  0012  160A  118A  2540  120A  118A  	fcall	_LCD_Command
  1231                           
  1232                           ;main.c: 66:         print_serialnumber();
  1233  0017  160A  118A  2354  120A  118A  	fcall	_print_serialnumber
  1234                           
  1235                           ;main.c: 68:         rtc_int();
  1236  001C  160A  118A  237C  120A  118A  	fcall	_rtc_int
  1237                           
  1238                           ;main.c: 69:         rtc_getdata();
  1239  0021  160A  118A  268C  120A  118A  	fcall	_rtc_getdata
  1240                           
  1241                           ;main.c: 70:         rtc_lcd_data();
  1242  0026  120A  158A  24AC  120A  118A  	fcall	_rtc_lcd_data
  1243                           
  1244                           ;main.c: 71:         rtc_terminal_data();
  1245  002B  120A  158A  258D  120A  118A  	fcall	_rtc_terminal_data
  1246                           
  1247                           ;main.c: 74:         ADC_Init ();
  1248  0030  120A  158A  2009  120A  118A  	fcall	_ADC_Init
  1249  0035                     l3274:
  1250                           
  1251                           ;main.c: 75:         GO_nDONE=1;
  1252  0035  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0036  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0037  151F               	bsf	31,2	;volatile
  1255  0038                     l376:	
  1256                           ;main.c: 76:         while(GO_nDONE==1);
  1257                           
  1258  0038  191F               	btfsc	31,2	;volatile
  1259  0039  283B               	goto	u3871
  1260  003A  283C               	goto	u3870
  1261  003B                     u3871:
  1262  003B  2838               	goto	l376
  1263  003C                     u3870:
  1264  003C                     l3276:
  1265                           
  1266                           ;main.c: 77:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1267  003C  3041               	movlw	65
  1268  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1269  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1270  003F  00EB               	movwf	??_main+1
  1271  0040  30ED               	movlw	237
  1272  0041  00EA               	movwf	??_main
  1273  0042                     u4297:
  1274  0042  0BEA               	decfsz	??_main,f
  1275  0043  2842               	goto	u4297
  1276  0044  0BEB               	decfsz	??_main+1,f
  1277  0045  2842               	goto	u4297
  1278  0046  2847               	nop2
  1279  0047                     l3278:
  1280                           
  1281                           ;main.c: 78:         LCD_Command(0xC0);
  1282  0047  30C0               	movlw	192
  1283  0048  160A  118A  2540  120A  118A  	fcall	_LCD_Command
  1284  004D                     l3280:
  1285                           
  1286                           ;main.c: 79:         print_analogvoltages();
  1287  004D  120A  158A  2075  120A  118A  	fcall	_print_analogvoltages
  1288  0052                     l3282:
  1289                           
  1290                           ;main.c: 83:         print_dht11data();
  1291  0052  120A  158A  23D6  120A  118A  	fcall	_print_dht11data
  1292  0057                     l3284:
  1293                           
  1294                           ;main.c: 87:         bmp280_init();
  1295  0057  160A  118A  2366  120A  118A  	fcall	_bmp280_init
  1296  005C                     l3286:
  1297                           
  1298                           ;main.c: 88:         bmp280_getdata();
  1299  005C  120A  158A  223F  120A  118A  	fcall	_bmp280_getdata
  1300  0061                     l3288:
  1301                           
  1302                           ;main.c: 89:         uncompensated_pressure();
  1303  0061  120A  158A  2308  120A  118A  	fcall	_uncompensated_pressure
  1304  0066                     l3290:
  1305                           
  1306                           ;main.c: 91:         ac1 = (aa<<8) + ab;
  1307  0066  1683               	bsf	3,5	;RP0=1, select bank1
  1308  0067  1303               	bcf	3,6	;RP1=0, select bank1
  1309  0068  0859               	movf	(_aa+1)^(0+128),w
  1310  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1311  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1312  006B  00EB               	movwf	??_main+1
  1313  006C  1683               	bsf	3,5	;RP0=1, select bank1
  1314  006D  1303               	bcf	3,6	;RP1=0, select bank1
  1315  006E  0858               	movf	_aa^(0+128),w
  1316  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0071  00EA               	movwf	??_main
  1319  0072  086A               	movf	??_main,w
  1320  0073  00EB               	movwf	??_main+1
  1321  0074  01EA               	clrf	??_main
  1322  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1323  0076  1303               	bcf	3,6	;RP1=0, select bank1
  1324  0077  0854               	movf	_ab^(0+128),w
  1325  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1327  007A  076A               	addwf	??_main,w
  1328  007B  1683               	bsf	3,5	;RP0=1, select bank1
  1329  007C  1303               	bcf	3,6	;RP1=0, select bank1
  1330  007D  00E7               	movwf	_ac1^(0+128)
  1331  007E  0855               	movf	(_ab+1)^(0+128),w
  1332  007F  1803               	skipnc
  1333  0080  0A55               	incf	(_ab+1)^(0+128),w
  1334  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0083  076B               	addwf	??_main+1,w
  1337  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0086  00E8               	movwf	(_ac1+1)^(0+128)
  1340  0087                     l3292:
  1341                           
  1342                           ;main.c: 92:         ac2 = (ac<<8) + ad;
  1343  0087  0851               	movf	(_ac+1)^(0+128),w
  1344  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1346  008A  00EB               	movwf	??_main+1
  1347  008B  1683               	bsf	3,5	;RP0=1, select bank1
  1348  008C  1303               	bcf	3,6	;RP1=0, select bank1
  1349  008D  0850               	movf	_ac^(0+128),w
  1350  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1351  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0090  00EA               	movwf	??_main
  1353  0091  086A               	movf	??_main,w
  1354  0092  00EB               	movwf	??_main+1
  1355  0093  01EA               	clrf	??_main
  1356  0094  1683               	bsf	3,5	;RP0=1, select bank1
  1357  0095  1303               	bcf	3,6	;RP1=0, select bank1
  1358  0096  084C               	movf	_ad^(0+128),w
  1359  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0099  076A               	addwf	??_main,w
  1362  009A  1683               	bsf	3,5	;RP0=1, select bank1
  1363  009B  1303               	bcf	3,6	;RP1=0, select bank1
  1364  009C  00E5               	movwf	_ac2^(0+128)
  1365  009D  084D               	movf	(_ad+1)^(0+128),w
  1366  009E  1803               	skipnc
  1367  009F  0A4D               	incf	(_ad+1)^(0+128),w
  1368  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1369  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1370  00A2  076B               	addwf	??_main+1,w
  1371  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1372  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1373  00A5  00E6               	movwf	(_ac2+1)^(0+128)
  1374  00A6                     l3294:
  1375                           
  1376                           ;main.c: 93:         ac3 = (ae<<8) + af;
  1377  00A6  0849               	movf	(_ae+1)^(0+128),w
  1378  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1379  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1380  00A9  00EB               	movwf	??_main+1
  1381  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1382  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1383  00AC  0848               	movf	_ae^(0+128),w
  1384  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1385  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1386  00AF  00EA               	movwf	??_main
  1387  00B0  086A               	movf	??_main,w
  1388  00B1  00EB               	movwf	??_main+1
  1389  00B2  01EA               	clrf	??_main
  1390  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1391  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1392  00B5  0844               	movf	_af^(0+128),w
  1393  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1394  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1395  00B8  076A               	addwf	??_main,w
  1396  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1397  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1398  00BB  00E3               	movwf	_ac3^(0+128)
  1399  00BC  0845               	movf	(_af+1)^(0+128),w
  1400  00BD  1803               	skipnc
  1401  00BE  0A45               	incf	(_af+1)^(0+128),w
  1402  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1403  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1404  00C1  076B               	addwf	??_main+1,w
  1405  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  1406  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  1407  00C4  00E4               	movwf	(_ac3+1)^(0+128)
  1408  00C5                     l3296:
  1409                           
  1410                           ;main.c: 94:         ac4 = (b0<<8) + b1;
  1411  00C5  0840               	movf	_b0^(0+128),w
  1412  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1413  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1414  00C8  00EB               	movwf	??_main+1
  1415  00C9  01EA               	clrf	??_main
  1416  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1417  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1418  00CC  083C               	movf	_b1^(0+128),w
  1419  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1420  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1421  00CF  076A               	addwf	??_main,w
  1422  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1423  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  1424  00D2  00E1               	movwf	_ac4^(0+128)
  1425  00D3  083D               	movf	(_b1+1)^(0+128),w
  1426  00D4  1803               	skipnc
  1427  00D5  0A3D               	incf	(_b1+1)^(0+128),w
  1428  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1429  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1430  00D8  076B               	addwf	??_main+1,w
  1431  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1432  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1433  00DB  00E2               	movwf	(_ac4+1)^(0+128)
  1434  00DC                     l3298:
  1435                           
  1436                           ;main.c: 96:         actual_pressure();
  1437  00DC  120A  118A  229D  120A  118A  	fcall	_actual_pressure
  1438  00E1                     l3300:
  1439                           
  1440                           ;main.c: 99:         bmp280_displaydata();
  1441  00E1  160A  118A  2505  120A  118A  	fcall	_bmp280_displaydata
  1442  00E6                     l3302:
  1443                           
  1444                           ;main.c: 100:         bmp280_terminaldata();
  1445  00E6  160A  118A  2392  120A  118A  	fcall	_bmp280_terminaldata
  1446  00EB                     l3304:
  1447                           
  1448                           ;main.c: 103:         tx(0x0d);
  1449  00EB  300D               	movlw	13
  1450  00EC  160A  118A  22E7  120A  118A  	fcall	_tx
  1451  00F1                     l3306:
  1452                           
  1453                           ;main.c: 104:         _delay((unsigned long)((250)*(20000000/4000.0)));
  1454  00F1  3007               	movlw	7
  1455  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1456  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1457  00F4  00EC               	movwf	??_main+2
  1458  00F5  3058               	movlw	88
  1459  00F6  00EB               	movwf	??_main+1
  1460  00F7  3059               	movlw	89
  1461  00F8  00EA               	movwf	??_main
  1462  00F9                     u4307:
  1463  00F9  0BEA               	decfsz	??_main,f
  1464  00FA  28F9               	goto	u4307
  1465  00FB  0BEB               	decfsz	??_main+1,f
  1466  00FC  28F9               	goto	u4307
  1467  00FD  0BEC               	decfsz	??_main+2,f
  1468  00FE  28F9               	goto	u4307
  1469  00FF                     l3308:
  1470                           
  1471                           ;main.c: 105:         sn += 1;
  1472  00FF  3001               	movlw	1
  1473  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1474  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1475  0102  07ED               	addwf	_sn^(0+128),f
  1476  0103  1803               	skipnc
  1477  0104  0AEE               	incf	(_sn+1)^(0+128),f
  1478  0105  3000               	movlw	0
  1479  0106  07EE               	addwf	(_sn+1)^(0+128),f
  1480  0107  2811               	goto	l375
  1481  0108  120A  118A  2800   	ljmp	start
  1482  010B                     __end_of_main:
  1483                           
  1484                           	psect	text1
  1485  0B08                     __ptext1:	
  1486 ;; *************** function _uncompensated_pressure *****************
  1487 ;; Defined at:
  1488 ;;		line 271 in file "main.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  ff8             4   21[BANK0 ] long 
  1493 ;;  ff7             4   17[BANK0 ] long 
  1494 ;;  ff6             4   13[BANK0 ] long 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, pclath, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1504 ;;      Params:         0       0       0       0       0
  1505 ;;      Locals:         0      12       0       0       0
  1506 ;;      Temps:          0      13       0       0       0
  1507 ;;      Totals:         0      25       0       0       0
  1508 ;;Total ram usage:       25 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; Hardware stack levels required when called: 3
  1511 ;; This function calls:
  1512 ;;		_bmp280_read_byte
  1513 ;;		_bmp280_send_byte
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           
  1520                           ;psect for function _uncompensated_pressure
  1521  0B08                     _uncompensated_pressure:
  1522  0B08                     l2992:	
  1523                           ;incstack = 0
  1524                           ; Regs used in _uncompensated_pressure: [wreg+status,2+status,0+pclath+cstack]
  1525                           
  1526                           
  1527                           ;main.c: 273:         bmp280_send_byte(0xf4,(0x34+(oss<<6)));
  1528  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0B0A  086D               	movf	_oss,w
  1531  0B0B  00C7               	movwf	??_uncompensated_pressure
  1532  0B0C  3005               	movlw	5
  1533  0B0D                     u3285:
  1534  0B0D  1003               	clrc
  1535  0B0E  0DC7               	rlf	??_uncompensated_pressure,f
  1536  0B0F  3EFF               	addlw	-1
  1537  0B10  1D03               	skipz
  1538  0B11  2B0D               	goto	u3285
  1539  0B12  1003               	clrc
  1540  0B13  0D47               	rlf	??_uncompensated_pressure,w
  1541  0B14  3E34               	addlw	52
  1542  0B15  00C8               	movwf	??_uncompensated_pressure+1
  1543  0B16  0848               	movf	??_uncompensated_pressure+1,w
  1544  0B17  00F1               	movwf	bmp280_send_byte@count
  1545  0B18  30F4               	movlw	244
  1546  0B19  160A  118A  23C3  120A  158A  	fcall	_bmp280_send_byte
  1547  0B1E                     l2994:
  1548                           
  1549                           ;main.c: 274:         _delay((unsigned long)((25)*(20000000/4000.0)));
  1550  0B1E  30A3               	movlw	163
  1551  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0B21  00C8               	movwf	??_uncompensated_pressure+1
  1554  0B22  3054               	movlw	84
  1555  0B23  00C7               	movwf	??_uncompensated_pressure
  1556  0B24                     u4317:
  1557  0B24  0BC7               	decfsz	??_uncompensated_pressure,f
  1558  0B25  2B24               	goto	u4317
  1559  0B26  0BC8               	decfsz	??_uncompensated_pressure+1,f
  1560  0B27  2B24               	goto	u4317
  1561  0B28  0000               	nop
  1562  0B29                     l2996:
  1563                           
  1564                           ;main.c: 276:         long ff6=(bmp280_read_byte(0xf6));
  1565  0B29  30F6               	movlw	246
  1566  0B2A  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  1567  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0B31  00C7               	movwf	??_uncompensated_pressure
  1570  0B32  01C8               	clrf	??_uncompensated_pressure+1
  1571  0B33  01C9               	clrf	??_uncompensated_pressure+2
  1572  0B34  01CA               	clrf	??_uncompensated_pressure+3
  1573  0B35  084A               	movf	??_uncompensated_pressure+3,w
  1574  0B36  00D7               	movwf	uncompensated_pressure@ff6+3
  1575  0B37  0849               	movf	??_uncompensated_pressure+2,w
  1576  0B38  00D6               	movwf	uncompensated_pressure@ff6+2
  1577  0B39  0848               	movf	??_uncompensated_pressure+1,w
  1578  0B3A  00D5               	movwf	uncompensated_pressure@ff6+1
  1579  0B3B  0847               	movf	??_uncompensated_pressure,w
  1580  0B3C  00D4               	movwf	uncompensated_pressure@ff6
  1581  0B3D                     l2998:
  1582                           
  1583                           ;main.c: 277:         long ff7=(bmp280_read_byte(0xf7));
  1584  0B3D  30F7               	movlw	247
  1585  0B3E  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  1586  0B43  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0B44  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0B45  00C7               	movwf	??_uncompensated_pressure
  1589  0B46  01C8               	clrf	??_uncompensated_pressure+1
  1590  0B47  01C9               	clrf	??_uncompensated_pressure+2
  1591  0B48  01CA               	clrf	??_uncompensated_pressure+3
  1592  0B49  084A               	movf	??_uncompensated_pressure+3,w
  1593  0B4A  00DB               	movwf	uncompensated_pressure@ff7+3
  1594  0B4B  0849               	movf	??_uncompensated_pressure+2,w
  1595  0B4C  00DA               	movwf	uncompensated_pressure@ff7+2
  1596  0B4D  0848               	movf	??_uncompensated_pressure+1,w
  1597  0B4E  00D9               	movwf	uncompensated_pressure@ff7+1
  1598  0B4F  0847               	movf	??_uncompensated_pressure,w
  1599  0B50  00D8               	movwf	uncompensated_pressure@ff7
  1600  0B51                     l3000:
  1601                           
  1602                           ;main.c: 278:         long ff8=(bmp280_read_byte(0xf8));
  1603  0B51  30F8               	movlw	248
  1604  0B52  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  1605  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0B59  00C7               	movwf	??_uncompensated_pressure
  1608  0B5A  01C8               	clrf	??_uncompensated_pressure+1
  1609  0B5B  01C9               	clrf	??_uncompensated_pressure+2
  1610  0B5C  01CA               	clrf	??_uncompensated_pressure+3
  1611  0B5D  084A               	movf	??_uncompensated_pressure+3,w
  1612  0B5E  00DF               	movwf	uncompensated_pressure@ff8+3
  1613  0B5F  0849               	movf	??_uncompensated_pressure+2,w
  1614  0B60  00DE               	movwf	uncompensated_pressure@ff8+2
  1615  0B61  0848               	movf	??_uncompensated_pressure+1,w
  1616  0B62  00DD               	movwf	uncompensated_pressure@ff8+1
  1617  0B63  0847               	movf	??_uncompensated_pressure,w
  1618  0B64  00DC               	movwf	uncompensated_pressure@ff8
  1619  0B65                     l3002:
  1620                           
  1621                           ;main.c: 279:         up=(((ff6<<16)+(ff7<<8)+ff8)>>(8-oss));
  1622  0B65  086D               	movf	_oss,w
  1623  0B66  3C08               	sublw	8
  1624  0B67  00C7               	movwf	??_uncompensated_pressure
  1625  0B68  0AC7               	incf	??_uncompensated_pressure,f
  1626  0B69  085C               	movf	uncompensated_pressure@ff8,w
  1627  0B6A  00C8               	movwf	??_uncompensated_pressure+1
  1628  0B6B  085D               	movf	uncompensated_pressure@ff8+1,w
  1629  0B6C  00C9               	movwf	??_uncompensated_pressure+2
  1630  0B6D  085E               	movf	uncompensated_pressure@ff8+2,w
  1631  0B6E  00CA               	movwf	??_uncompensated_pressure+3
  1632  0B6F  085F               	movf	uncompensated_pressure@ff8+3,w
  1633  0B70  00CB               	movwf	??_uncompensated_pressure+4
  1634  0B71  0858               	movf	uncompensated_pressure@ff7,w
  1635  0B72  00CC               	movwf	??_uncompensated_pressure+5
  1636  0B73  0859               	movf	uncompensated_pressure@ff7+1,w
  1637  0B74  00CD               	movwf	??_uncompensated_pressure+6
  1638  0B75  085A               	movf	uncompensated_pressure@ff7+2,w
  1639  0B76  00CE               	movwf	??_uncompensated_pressure+7
  1640  0B77  085B               	movf	uncompensated_pressure@ff7+3,w
  1641  0B78  00CF               	movwf	??_uncompensated_pressure+8
  1642  0B79  3008               	movlw	8
  1643  0B7A                     u3295:
  1644  0B7A  1003               	clrc
  1645  0B7B  0DCC               	rlf	??_uncompensated_pressure+5,f
  1646  0B7C  0DCD               	rlf	??_uncompensated_pressure+6,f
  1647  0B7D  0DCE               	rlf	??_uncompensated_pressure+7,f
  1648  0B7E  0DCF               	rlf	??_uncompensated_pressure+8,f
  1649  0B7F                     u3290:
  1650  0B7F  3EFF               	addlw	-1
  1651  0B80  1D03               	skipz
  1652  0B81  2B7A               	goto	u3295
  1653  0B82  0854               	movf	uncompensated_pressure@ff6,w
  1654  0B83  00D0               	movwf	??_uncompensated_pressure+9
  1655  0B84  0855               	movf	uncompensated_pressure@ff6+1,w
  1656  0B85  00D1               	movwf	??_uncompensated_pressure+10
  1657  0B86  0856               	movf	uncompensated_pressure@ff6+2,w
  1658  0B87  00D2               	movwf	??_uncompensated_pressure+11
  1659  0B88  0857               	movf	uncompensated_pressure@ff6+3,w
  1660  0B89  00D3               	movwf	??_uncompensated_pressure+12
  1661  0B8A  3010               	movlw	16
  1662  0B8B                     u3305:
  1663  0B8B  1003               	clrc
  1664  0B8C  0DD0               	rlf	??_uncompensated_pressure+9,f
  1665  0B8D  0DD1               	rlf	??_uncompensated_pressure+10,f
  1666  0B8E  0DD2               	rlf	??_uncompensated_pressure+11,f
  1667  0B8F  0DD3               	rlf	??_uncompensated_pressure+12,f
  1668  0B90                     u3300:
  1669  0B90  3EFF               	addlw	-1
  1670  0B91  1D03               	skipz
  1671  0B92  2B8B               	goto	u3305
  1672  0B93  0850               	movf	??_uncompensated_pressure+9,w
  1673  0B94  07CC               	addwf	??_uncompensated_pressure+5,f
  1674  0B95  0851               	movf	??_uncompensated_pressure+10,w
  1675  0B96  1803               	skipnc
  1676  0B97  0F51               	incfsz	??_uncompensated_pressure+10,w
  1677  0B98  2B9A               	goto	u3310
  1678  0B99  2B9B               	goto	u3311
  1679  0B9A                     u3310:
  1680  0B9A  07CD               	addwf	??_uncompensated_pressure+6,f
  1681  0B9B                     u3311:
  1682  0B9B  0852               	movf	??_uncompensated_pressure+11,w
  1683  0B9C  1803               	skipnc
  1684  0B9D  0F52               	incfsz	??_uncompensated_pressure+11,w
  1685  0B9E  2BA0               	goto	u3312
  1686  0B9F  2BA1               	goto	u3313
  1687  0BA0                     u3312:
  1688  0BA0  07CE               	addwf	??_uncompensated_pressure+7,f
  1689  0BA1                     u3313:
  1690  0BA1  0853               	movf	??_uncompensated_pressure+12,w
  1691  0BA2  1803               	skipnc
  1692  0BA3  0A53               	incf	??_uncompensated_pressure+12,w
  1693  0BA4  07CF               	addwf	??_uncompensated_pressure+8,f
  1694  0BA5  084C               	movf	??_uncompensated_pressure+5,w
  1695  0BA6  07C8               	addwf	??_uncompensated_pressure+1,f
  1696  0BA7  084D               	movf	??_uncompensated_pressure+6,w
  1697  0BA8  1803               	skipnc
  1698  0BA9  0F4D               	incfsz	??_uncompensated_pressure+6,w
  1699  0BAA  2BAC               	goto	u3320
  1700  0BAB  2BAD               	goto	u3321
  1701  0BAC                     u3320:
  1702  0BAC  07C9               	addwf	??_uncompensated_pressure+2,f
  1703  0BAD                     u3321:
  1704  0BAD  084E               	movf	??_uncompensated_pressure+7,w
  1705  0BAE  1803               	skipnc
  1706  0BAF  0F4E               	incfsz	??_uncompensated_pressure+7,w
  1707  0BB0  2BB2               	goto	u3322
  1708  0BB1  2BB3               	goto	u3323
  1709  0BB2                     u3322:
  1710  0BB2  07CA               	addwf	??_uncompensated_pressure+3,f
  1711  0BB3                     u3323:
  1712  0BB3  084F               	movf	??_uncompensated_pressure+8,w
  1713  0BB4  1803               	skipnc
  1714  0BB5  0A4F               	incf	??_uncompensated_pressure+8,w
  1715  0BB6  07CB               	addwf	??_uncompensated_pressure+4,f
  1716  0BB7  2BBD               	goto	u3330
  1717  0BB8                     u3335:
  1718  0BB8  0D4B               	rlf	??_uncompensated_pressure+4,w
  1719  0BB9  0CCB               	rrf	??_uncompensated_pressure+4,f
  1720  0BBA  0CCA               	rrf	??_uncompensated_pressure+3,f
  1721  0BBB  0CC9               	rrf	??_uncompensated_pressure+2,f
  1722  0BBC  0CC8               	rrf	??_uncompensated_pressure+1,f
  1723  0BBD                     u3330:
  1724  0BBD  0BC7               	decfsz	??_uncompensated_pressure,f
  1725  0BBE  2BB8               	goto	u3335
  1726  0BBF  084B               	movf	??_uncompensated_pressure+4,w
  1727  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  1729  0BC2  00AF               	movwf	(_up+3)^(0+128)
  1730  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0BC5  084A               	movf	??_uncompensated_pressure+3,w
  1733  0BC6  1683               	bsf	3,5	;RP0=1, select bank1
  1734  0BC7  1303               	bcf	3,6	;RP1=0, select bank1
  1735  0BC8  00AE               	movwf	(_up+2)^(0+128)
  1736  0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0BCB  0849               	movf	??_uncompensated_pressure+2,w
  1739  0BCC  1683               	bsf	3,5	;RP0=1, select bank1
  1740  0BCD  1303               	bcf	3,6	;RP1=0, select bank1
  1741  0BCE  00AD               	movwf	(_up+1)^(0+128)
  1742  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0BD1  0848               	movf	??_uncompensated_pressure+1,w
  1745  0BD2  1683               	bsf	3,5	;RP0=1, select bank1
  1746  0BD3  1303               	bcf	3,6	;RP1=0, select bank1
  1747  0BD4  00AC               	movwf	_up^(0+128)
  1748  0BD5                     l417:
  1749  0BD5  0008               	return
  1750  0BD6                     __end_of_uncompensated_pressure:
  1751                           
  1752                           	psect	text2
  1753  13C3                     __ptext2:	
  1754 ;; *************** function _bmp280_send_byte *****************
  1755 ;; Defined at:
  1756 ;;		line 59 in file "./bmp280.h"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  addr            1    wreg     unsigned char 
  1759 ;;  count           1    1[COMMON] unsigned char 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  addr            1    2[COMMON] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         1       0       0       0       0
  1772 ;;      Locals:         1       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0
  1774 ;;      Totals:         2       0       0       0       0
  1775 ;;Total ram usage:        2 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 2
  1778 ;; This function calls:
  1779 ;;		_bmp280_send
  1780 ;;		_bmp280_start
  1781 ;;		_bmp280_stop
  1782 ;; This function is called by:
  1783 ;;		_uncompensated_pressure
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           
  1788                           ;psect for function _bmp280_send_byte
  1789  13C3                     _bmp280_send_byte:
  1790                           
  1791                           ;incstack = 0
  1792                           ; Regs used in _bmp280_send_byte: [wreg+status,2+status,0+pclath+cstack]
  1793                           ;bmp280_send_byte@addr stored from wreg
  1794  13C3  00F2               	movwf	bmp280_send_byte@addr
  1795  13C4                     l2746:
  1796                           
  1797                           ;./bmp280.h: 59: void bmp280_send_byte(unsigned char addr,unsigned char count);./bmp280.
      +                          h: 60: {;./bmp280.h: 61:     bmp280_start();
  1798  13C4  120A  158A  2000  160A  118A  	fcall	_bmp280_start
  1799  13C9                     l2748:
  1800                           
  1801                           ;./bmp280.h: 62:     bmp280_send(0xEE);
  1802  13C9  30EE               	movlw	238
  1803  13CA  160A  118A  2332  160A  118A  	fcall	_bmp280_send
  1804  13CF                     l2750:
  1805                           
  1806                           ;./bmp280.h: 63:     bmp280_send(addr);
  1807  13CF  0872               	movf	bmp280_send_byte@addr,w
  1808  13D0  160A  118A  2332  160A  118A  	fcall	_bmp280_send
  1809  13D5                     l2752:
  1810                           
  1811                           ;./bmp280.h: 64:     bmp280_send(count);
  1812  13D5  0871               	movf	bmp280_send_byte@count,w
  1813  13D6  160A  118A  2332  160A  118A  	fcall	_bmp280_send
  1814  13DB                     l2754:
  1815                           
  1816                           ;./bmp280.h: 65:     bmp280_stop();
  1817  13DB  160A  118A  22B8  160A  118A  	fcall	_bmp280_stop
  1818  13E0                     l298:
  1819  13E0  0008               	return
  1820  13E1                     __end_of_bmp280_send_byte:
  1821                           
  1822                           	psect	text3
  1823  0800                     __ptext3:	
  1824 ;; *************** function _bmp280_start *****************
  1825 ;; Defined at:
  1826 ;;		line 21 in file "./bmp280.h"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		status,2, status,0, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 1
  1847 ;; This function calls:
  1848 ;;		_bmp280_waitmssp
  1849 ;; This function is called by:
  1850 ;;		_bmp280_send_byte
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _bmp280_start
  1856  0800                     _bmp280_start:
  1857  0800                     l1946:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _bmp280_start: [status,2+status,0+pclath+cstack]
  1860                           
  1861                           
  1862                           ;./bmp280.h: 23:     SEN=1;
  1863  0800  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0801  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0802  1411               	bsf	17,0	;volatile
  1866  0803                     l1948:
  1867                           
  1868                           ;./bmp280.h: 24:     bmp280_waitmssp();
  1869  0803  160A  118A  2297  120A  158A  	fcall	_bmp280_waitmssp
  1870  0808                     l270:
  1871  0808  0008               	return
  1872  0809                     __end_of_bmp280_start:
  1873                           
  1874                           	psect	text4
  1875  1316                     __ptext4:	
  1876 ;; *************** function _ser_int *****************
  1877 ;; Defined at:
  1878 ;;		line 7 in file "./uart.h"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function _ser_int
  1907  1316                     _ser_int:
  1908  1316                     l2900:	
  1909                           ;incstack = 0
  1910                           ; Regs used in _ser_int: [wreg]
  1911                           
  1912                           
  1913                           ;./uart.h: 9:  TXSTA= 0x20;
  1914  1316  3020               	movlw	32
  1915  1317  1683               	bsf	3,5	;RP0=1, select bank1
  1916  1318  1303               	bcf	3,6	;RP1=0, select bank1
  1917  1319  0098               	movwf	24	;volatile
  1918                           
  1919                           ;./uart.h: 10:  RCSTA= 0b10010000;
  1920  131A  3090               	movlw	144
  1921  131B  1283               	bcf	3,5	;RP0=0, select bank0
  1922  131C  1303               	bcf	3,6	;RP1=0, select bank0
  1923  131D  0098               	movwf	24	;volatile
  1924                           
  1925                           ;./uart.h: 11:  SPBRG=31;
  1926  131E  301F               	movlw	31
  1927  131F  1683               	bsf	3,5	;RP0=1, select bank1
  1928  1320  1303               	bcf	3,6	;RP1=0, select bank1
  1929  1321  0099               	movwf	25	;volatile
  1930  1322                     l140:
  1931  1322  0008               	return
  1932  1323                     __end_of_ser_int:
  1933                           
  1934                           	psect	text5
  1935  0D8D                     __ptext5:	
  1936 ;; *************** function _rtc_terminal_data *****************
  1937 ;; Defined at:
  1938 ;;		line 228 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 1
  1959 ;; This function calls:
  1960 ;;		_convd
  1961 ;;		_convup
  1962 ;;		_tx
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _rtc_terminal_data
  1970  0D8D                     _rtc_terminal_data:
  1971  0D8D                     l2916:	
  1972                           ;incstack = 0
  1973                           ; Regs used in _rtc_terminal_data: [wreg+status,2+status,0+pclath+cstack]
  1974                           
  1975                           
  1976                           ;main.c: 230:         tx(convup(hour));
  1977  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0D8F  083A               	movf	_hour,w
  1980  0D90  160A  118A  230A  120A  158A  	fcall	_convup
  1981  0D95  160A  118A  22E7  120A  158A  	fcall	_tx
  1982                           
  1983                           ;main.c: 231:         tx(convd(hour));
  1984  0D9A  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0D9B  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0D9C  083A               	movf	_hour,w
  1987  0D9D  160A  118A  2292  120A  158A  	fcall	_convd
  1988  0DA2  160A  118A  22E7  120A  158A  	fcall	_tx
  1989                           
  1990                           ;main.c: 232:         tx(':');
  1991  0DA7  303A               	movlw	58
  1992  0DA8  160A  118A  22E7  120A  158A  	fcall	_tx
  1993                           
  1994                           ;main.c: 233:         tx(convup(min));
  1995  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0DAF  083B               	movf	_min,w
  1998  0DB0  160A  118A  230A  120A  158A  	fcall	_convup
  1999  0DB5  160A  118A  22E7  120A  158A  	fcall	_tx
  2000                           
  2001                           ;main.c: 234:         tx(convd(min));
  2002  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  2004  0DBC  083B               	movf	_min,w
  2005  0DBD  160A  118A  2292  120A  158A  	fcall	_convd
  2006  0DC2  160A  118A  22E7  120A  158A  	fcall	_tx
  2007                           
  2008                           ;main.c: 235:         tx(':');
  2009  0DC7  303A               	movlw	58
  2010  0DC8  160A  118A  22E7  120A  158A  	fcall	_tx
  2011                           
  2012                           ;main.c: 236:         tx(convup(sec));
  2013  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0DCF  083C               	movf	_sec,w
  2016  0DD0  160A  118A  230A  120A  158A  	fcall	_convup
  2017  0DD5  160A  118A  22E7  120A  158A  	fcall	_tx
  2018                           
  2019                           ;main.c: 237:         tx(convd(sec));
  2020  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0DDC  083C               	movf	_sec,w
  2023  0DDD  160A  118A  2292  120A  158A  	fcall	_convd
  2024  0DE2  160A  118A  22E7  120A  158A  	fcall	_tx
  2025                           
  2026                           ;main.c: 239:         tx(',');
  2027  0DE7  302C               	movlw	44
  2028  0DE8  160A  118A  22E7  120A  158A  	fcall	_tx
  2029                           
  2030                           ;main.c: 241:         tx(convup(date));
  2031  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0DEF  0838               	movf	_date,w
  2034  0DF0  160A  118A  230A  120A  158A  	fcall	_convup
  2035  0DF5  160A  118A  22E7  120A  158A  	fcall	_tx
  2036                           
  2037                           ;main.c: 242:         tx(convd(date));
  2038  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0DFC  0838               	movf	_date,w
  2041  0DFD  160A  118A  2292  120A  158A  	fcall	_convd
  2042  0E02  160A  118A  22E7  120A  158A  	fcall	_tx
  2043                           
  2044                           ;main.c: 243:         tx(':');
  2045  0E07  303A               	movlw	58
  2046  0E08  160A  118A  22E7  120A  158A  	fcall	_tx
  2047                           
  2048                           ;main.c: 244:         tx(convup(month));
  2049  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0E0F  0837               	movf	_month,w
  2052  0E10  160A  118A  230A  120A  158A  	fcall	_convup
  2053  0E15  160A  118A  22E7  120A  158A  	fcall	_tx
  2054                           
  2055                           ;main.c: 245:         tx(convd(month));
  2056  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0E1C  0837               	movf	_month,w
  2059  0E1D  160A  118A  2292  120A  158A  	fcall	_convd
  2060  0E22  160A  118A  22E7  120A  158A  	fcall	_tx
  2061                           
  2062                           ;main.c: 246:         tx(':');
  2063  0E27  303A               	movlw	58
  2064  0E28  160A  118A  22E7  120A  158A  	fcall	_tx
  2065                           
  2066                           ;main.c: 247:         tx(convup(year));
  2067  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0E2F  0836               	movf	_year,w
  2070  0E30  160A  118A  230A  120A  158A  	fcall	_convup
  2071  0E35  160A  118A  22E7  120A  158A  	fcall	_tx
  2072                           
  2073                           ;main.c: 248:         tx(convd(year));
  2074  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0E3C  0836               	movf	_year,w
  2077  0E3D  160A  118A  2292  120A  158A  	fcall	_convd
  2078  0E42  160A  118A  22E7  120A  158A  	fcall	_tx
  2079                           
  2080                           ;main.c: 250:         tx(',');
  2081  0E47  302C               	movlw	44
  2082  0E48  160A  118A  22E7  120A  158A  	fcall	_tx
  2083                           
  2084                           ;main.c: 251:         tx(convup(day));
  2085  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0E4F  0839               	movf	_day,w
  2088  0E50  160A  118A  230A  120A  158A  	fcall	_convup
  2089  0E55  160A  118A  22E7  120A  158A  	fcall	_tx
  2090                           
  2091                           ;main.c: 252:         tx(convd(day));
  2092  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0E5C  0839               	movf	_day,w
  2095  0E5D  160A  118A  2292  120A  158A  	fcall	_convd
  2096  0E62  160A  118A  22E7  120A  158A  	fcall	_tx
  2097                           
  2098                           ;main.c: 254:         tx(',');
  2099  0E67  302C               	movlw	44
  2100  0E68  160A  118A  22E7  120A  158A  	fcall	_tx
  2101  0E6D                     l411:
  2102  0E6D  0008               	return
  2103  0E6E                     __end_of_rtc_terminal_data:
  2104                           
  2105                           	psect	text6
  2106  0CAC                     __ptext6:	
  2107 ;; *************** function _rtc_lcd_data *****************
  2108 ;; Defined at:
  2109 ;;		line 203 in file "main.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 1
  2130 ;; This function calls:
  2131 ;;		_LCD_Char
  2132 ;;		_LCD_Command
  2133 ;;		_convd
  2134 ;;		_convup
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _rtc_lcd_data
  2142  0CAC                     _rtc_lcd_data:
  2143  0CAC                     l2914:	
  2144                           ;incstack = 0
  2145                           ; Regs used in _rtc_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2146                           
  2147                           
  2148                           ;main.c: 205:         LCD_Command(0x80);
  2149  0CAC  3080               	movlw	128
  2150  0CAD  160A  118A  2540  120A  158A  	fcall	_LCD_Command
  2151                           
  2152                           ;main.c: 206:         LCD_Char(convup(hour));
  2153  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  2155  0CB4  083A               	movf	_hour,w
  2156  0CB5  160A  118A  230A  120A  158A  	fcall	_convup
  2157  0CBA  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2158                           
  2159                           ;main.c: 207:         LCD_Char(convd(hour));
  2160  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0CC1  083A               	movf	_hour,w
  2163  0CC2  160A  118A  2292  120A  158A  	fcall	_convd
  2164  0CC7  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2165                           
  2166                           ;main.c: 208:         LCD_Char(':');
  2167  0CCC  303A               	movlw	58
  2168  0CCD  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2169                           
  2170                           ;main.c: 209:         LCD_Char(convup(min));
  2171  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0CD4  083B               	movf	_min,w
  2174  0CD5  160A  118A  230A  120A  158A  	fcall	_convup
  2175  0CDA  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2176                           
  2177                           ;main.c: 210:         LCD_Char(convd(min));
  2178  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0CE1  083B               	movf	_min,w
  2181  0CE2  160A  118A  2292  120A  158A  	fcall	_convd
  2182  0CE7  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2183                           
  2184                           ;main.c: 211:         LCD_Char(':');
  2185  0CEC  303A               	movlw	58
  2186  0CED  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2187                           
  2188                           ;main.c: 212:         LCD_Char(convup(sec));
  2189  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0CF4  083C               	movf	_sec,w
  2192  0CF5  160A  118A  230A  120A  158A  	fcall	_convup
  2193  0CFA  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2194                           
  2195                           ;main.c: 213:         LCD_Char(convd(sec));
  2196  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0D01  083C               	movf	_sec,w
  2199  0D02  160A  118A  2292  120A  158A  	fcall	_convd
  2200  0D07  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2201                           
  2202                           ;main.c: 215:         LCD_Command(0x89);
  2203  0D0C  3089               	movlw	137
  2204  0D0D  160A  118A  2540  120A  158A  	fcall	_LCD_Command
  2205                           
  2206                           ;main.c: 216:         LCD_Char(convup(date));
  2207  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0D14  0838               	movf	_date,w
  2210  0D15  160A  118A  230A  120A  158A  	fcall	_convup
  2211  0D1A  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2212                           
  2213                           ;main.c: 217:         LCD_Char(convd(date));
  2214  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0D21  0838               	movf	_date,w
  2217  0D22  160A  118A  2292  120A  158A  	fcall	_convd
  2218  0D27  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2219                           
  2220                           ;main.c: 218:         LCD_Char(':');
  2221  0D2C  303A               	movlw	58
  2222  0D2D  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2223                           
  2224                           ;main.c: 219:         LCD_Char(convup(month));
  2225  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0D34  0837               	movf	_month,w
  2228  0D35  160A  118A  230A  120A  158A  	fcall	_convup
  2229  0D3A  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2230                           
  2231                           ;main.c: 220:         LCD_Char(convd(month));
  2232  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0D41  0837               	movf	_month,w
  2235  0D42  160A  118A  2292  120A  158A  	fcall	_convd
  2236  0D47  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2237                           
  2238                           ;main.c: 221:         LCD_Char(':');
  2239  0D4C  303A               	movlw	58
  2240  0D4D  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2241                           
  2242                           ;main.c: 222:         LCD_Char(convup(year));
  2243  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0D54  0836               	movf	_year,w
  2246  0D55  160A  118A  230A  120A  158A  	fcall	_convup
  2247  0D5A  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2248                           
  2249                           ;main.c: 223:         LCD_Char(convd(year));
  2250  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0D60  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0D61  0836               	movf	_year,w
  2253  0D62  160A  118A  2292  120A  158A  	fcall	_convd
  2254  0D67  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2255                           
  2256                           ;main.c: 224:         LCD_Char('/');
  2257  0D6C  302F               	movlw	47
  2258  0D6D  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2259                           
  2260                           ;main.c: 225:         LCD_Char(convup(day));
  2261  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0D74  0839               	movf	_day,w
  2264  0D75  160A  118A  230A  120A  158A  	fcall	_convup
  2265  0D7A  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2266                           
  2267                           ;main.c: 226:         LCD_Char(convd(day));
  2268  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0D81  0839               	movf	_day,w
  2271  0D82  160A  118A  2292  120A  158A  	fcall	_convd
  2272  0D87  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  2273  0D8C                     l408:
  2274  0D8C  0008               	return
  2275  0D8D                     __end_of_rtc_lcd_data:
  2276                           
  2277                           	psect	text7
  2278  130A                     __ptext7:	
  2279 ;; *************** function _convup *****************
  2280 ;; Defined at:
  2281 ;;		line 97 in file "./ds1307.h"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  bcd             1    wreg     unsigned char 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  bcd             1    1[COMMON] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      unsigned char 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         1       0       0       0       0
  2297 ;;      Temps:          1       0       0       0       0
  2298 ;;      Totals:         2       0       0       0       0
  2299 ;;Total ram usage:        2 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_rtc_lcd_data
  2305 ;;		_rtc_terminal_data
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _convup
  2311  130A                     _convup:
  2312                           
  2313                           ;incstack = 0
  2314                           ; Regs used in _convup: [wreg+status,2+status,0]
  2315                           ;convup@bcd stored from wreg
  2316  130A  00F1               	movwf	convup@bcd
  2317  130B                     l2738:
  2318                           
  2319                           ;./ds1307.h: 97: unsigned char convup(unsigned char bcd);./ds1307.h: 98: {;./ds1307.h: 9
      +                          9:     return ((bcd>>4)+48);
  2320  130B  0871               	movf	convup@bcd,w
  2321  130C  00F0               	movwf	??_convup
  2322  130D  3004               	movlw	4
  2323  130E                     u2845:
  2324  130E  1003               	clrc
  2325  130F  0CF0               	rrf	??_convup,f
  2326  1310  3EFF               	addlw	-1
  2327  1311  1D03               	skipz
  2328  1312  2B0E               	goto	u2845
  2329  1313  0870               	movf	??_convup,w
  2330  1314  3E30               	addlw	48
  2331  1315                     l261:
  2332  1315  0008               	return
  2333  1316                     __end_of_convup:
  2334                           
  2335                           	psect	text8
  2336  1292                     __ptext8:	
  2337 ;; *************** function _convd *****************
  2338 ;; Defined at:
  2339 ;;		line 101 in file "./ds1307.h"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  bcd             1    wreg     unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  bcd             1    0[COMMON] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      unsigned char 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2353 ;;      Params:         0       0       0       0       0
  2354 ;;      Locals:         1       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0
  2356 ;;      Totals:         1       0       0       0       0
  2357 ;;Total ram usage:        1 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_rtc_lcd_data
  2363 ;;		_rtc_terminal_data
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _convd
  2369  1292                     _convd:
  2370                           
  2371                           ;incstack = 0
  2372                           ; Regs used in _convd: [wreg+status,2+status,0]
  2373                           ;convd@bcd stored from wreg
  2374  1292  00F0               	movwf	convd@bcd
  2375  1293                     l2742:
  2376                           
  2377                           ;./ds1307.h: 101: unsigned char convd(unsigned char bcd);./ds1307.h: 102: {;./ds1307.h: 
      +                          103:     return ((bcd&0x0F)+48);
  2378  1293  0870               	movf	convd@bcd,w
  2379  1294  390F               	andlw	15
  2380  1295  3E30               	addlw	48
  2381  1296                     l264:
  2382  1296  0008               	return
  2383  1297                     __end_of_convd:
  2384                           
  2385                           	psect	text9
  2386  137C                     __ptext9:	
  2387 ;; *************** function _rtc_int *****************
  2388 ;; Defined at:
  2389 ;;		line 19 in file "./ds1307.h"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_main
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _rtc_int
  2418  137C                     _rtc_int:
  2419  137C                     l2902:	
  2420                           ;incstack = 0
  2421                           ; Regs used in _rtc_int: [wreg]
  2422                           
  2423                           
  2424                           ;./ds1307.h: 21:     TRISC3=TRISC4=1;
  2425  137C  1683               	bsf	3,5	;RP0=1, select bank1
  2426  137D  1303               	bcf	3,6	;RP1=0, select bank1
  2427  137E  1607               	bsf	7,4	;volatile
  2428  137F  1A07               	btfsc	7,4	;volatile
  2429  1380  2B82               	goto	u3181
  2430  1381  2B86               	goto	u3180
  2431  1382                     u3181:
  2432  1382  1683               	bsf	3,5	;RP0=1, select bank1
  2433  1383  1303               	bcf	3,6	;RP1=0, select bank1
  2434  1384  1587               	bsf	7,3	;volatile
  2435  1385  2B89               	goto	u3194
  2436  1386                     u3180:
  2437  1386  1683               	bsf	3,5	;RP0=1, select bank1
  2438  1387  1303               	bcf	3,6	;RP1=0, select bank1
  2439  1388  1187               	bcf	7,3	;volatile
  2440  1389                     u3194:
  2441  1389                     l2904:
  2442                           
  2443                           ;./ds1307.h: 22:     SSPCON=0x28;
  2444  1389  3028               	movlw	40
  2445  138A  1283               	bcf	3,5	;RP0=0, select bank0
  2446  138B  1303               	bcf	3,6	;RP1=0, select bank0
  2447  138C  0094               	movwf	20	;volatile
  2448                           
  2449                           ;./ds1307.h: 23:     SSPADD= (((11059200/4)/100)-1);
  2450  138D  30FF               	movlw	255
  2451  138E  1683               	bsf	3,5	;RP0=1, select bank1
  2452  138F  1303               	bcf	3,6	;RP1=0, select bank1
  2453  1390  0093               	movwf	19	;volatile
  2454  1391                     l218:
  2455  1391  0008               	return
  2456  1392                     __end_of_rtc_int:
  2457                           
  2458                           	psect	text10
  2459  168C                     __ptext10:	
  2460 ;; *************** function _rtc_getdata *****************
  2461 ;; Defined at:
  2462 ;;		line 193 in file "main.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0, pclath, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2476 ;;      Params:         0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0
  2478 ;;      Temps:          1       0       0       0       0
  2479 ;;      Totals:         1       0       0       0       0
  2480 ;;Total ram usage:        1 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 3
  2483 ;; This function calls:
  2484 ;;		_rtc_read_byte
  2485 ;; This function is called by:
  2486 ;;		_main
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function _rtc_getdata
  2492  168C                     _rtc_getdata:
  2493  168C                     l2912:	
  2494                           ;incstack = 0
  2495                           ; Regs used in _rtc_getdata: [wreg+status,2+status,0+pclath+cstack]
  2496                           
  2497                           
  2498                           ;main.c: 195:     sec =rtc_read_byte(0x00);
  2499  168C  3000               	movlw	0
  2500  168D  160A  118A  24CB  160A  118A  	fcall	_rtc_read_byte
  2501  1692  00F4               	movwf	??_rtc_getdata
  2502  1693  0874               	movf	??_rtc_getdata,w
  2503  1694  1283               	bcf	3,5	;RP0=0, select bank0
  2504  1695  1303               	bcf	3,6	;RP1=0, select bank0
  2505  1696  00BC               	movwf	_sec
  2506                           
  2507                           ;main.c: 196:     min =rtc_read_byte(0x01);
  2508  1697  3001               	movlw	1
  2509  1698  160A  118A  24CB  160A  118A  	fcall	_rtc_read_byte
  2510  169D  00F4               	movwf	??_rtc_getdata
  2511  169E  0874               	movf	??_rtc_getdata,w
  2512  169F  1283               	bcf	3,5	;RP0=0, select bank0
  2513  16A0  1303               	bcf	3,6	;RP1=0, select bank0
  2514  16A1  00BB               	movwf	_min
  2515                           
  2516                           ;main.c: 197:     hour =rtc_read_byte(0x02);
  2517  16A2  3002               	movlw	2
  2518  16A3  160A  118A  24CB  160A  118A  	fcall	_rtc_read_byte
  2519  16A8  00F4               	movwf	??_rtc_getdata
  2520  16A9  0874               	movf	??_rtc_getdata,w
  2521  16AA  1283               	bcf	3,5	;RP0=0, select bank0
  2522  16AB  1303               	bcf	3,6	;RP1=0, select bank0
  2523  16AC  00BA               	movwf	_hour
  2524                           
  2525                           ;main.c: 198:     day =rtc_read_byte(0x03);
  2526  16AD  3003               	movlw	3
  2527  16AE  160A  118A  24CB  160A  118A  	fcall	_rtc_read_byte
  2528  16B3  00F4               	movwf	??_rtc_getdata
  2529  16B4  0874               	movf	??_rtc_getdata,w
  2530  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  2531  16B6  1303               	bcf	3,6	;RP1=0, select bank0
  2532  16B7  00B9               	movwf	_day
  2533                           
  2534                           ;main.c: 199:     date =rtc_read_byte(0x04);
  2535  16B8  3004               	movlw	4
  2536  16B9  160A  118A  24CB  160A  118A  	fcall	_rtc_read_byte
  2537  16BE  00F4               	movwf	??_rtc_getdata
  2538  16BF  0874               	movf	??_rtc_getdata,w
  2539  16C0  1283               	bcf	3,5	;RP0=0, select bank0
  2540  16C1  1303               	bcf	3,6	;RP1=0, select bank0
  2541  16C2  00B8               	movwf	_date
  2542                           
  2543                           ;main.c: 200:     month=rtc_read_byte(0x05);
  2544  16C3  3005               	movlw	5
  2545  16C4  160A  118A  24CB  160A  118A  	fcall	_rtc_read_byte
  2546  16C9  00F4               	movwf	??_rtc_getdata
  2547  16CA  0874               	movf	??_rtc_getdata,w
  2548  16CB  1283               	bcf	3,5	;RP0=0, select bank0
  2549  16CC  1303               	bcf	3,6	;RP1=0, select bank0
  2550  16CD  00B7               	movwf	_month
  2551                           
  2552                           ;main.c: 201:     year =rtc_read_byte(0x06);
  2553  16CE  3006               	movlw	6
  2554  16CF  160A  118A  24CB  160A  118A  	fcall	_rtc_read_byte
  2555  16D4  00F4               	movwf	??_rtc_getdata
  2556  16D5  0874               	movf	??_rtc_getdata,w
  2557  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2558  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2559  16D8  00B6               	movwf	_year
  2560  16D9                     l405:
  2561  16D9  0008               	return
  2562  16DA                     __end_of_rtc_getdata:
  2563                           
  2564                           	psect	text11
  2565  14CB                     __ptext11:	
  2566 ;; *************** function _rtc_read_byte *****************
  2567 ;; Defined at:
  2568 ;;		line 52 in file "./ds1307.h"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  addr            1    wreg     unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  addr            1    2[COMMON] unsigned char 
  2573 ;;  rec             1    3[COMMON] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      unsigned char 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2583 ;;      Params:         0       0       0       0       0
  2584 ;;      Locals:         2       0       0       0       0
  2585 ;;      Temps:          1       0       0       0       0
  2586 ;;      Totals:         3       0       0       0       0
  2587 ;;Total ram usage:        3 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 2
  2590 ;; This function calls:
  2591 ;;		_rtc_nak
  2592 ;;		_rtc_read
  2593 ;;		_rtc_res
  2594 ;;		_rtc_send
  2595 ;;		_rtc_stop
  2596 ;;		_waitmssp
  2597 ;; This function is called by:
  2598 ;;		_rtc_getdata
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _rtc_read_byte
  2604  14CB                     _rtc_read_byte:
  2605                           
  2606                           ;incstack = 0
  2607                           ; Regs used in _rtc_read_byte: [wreg+status,2+status,0+pclath+cstack]
  2608                           ;rtc_read_byte@addr stored from wreg
  2609  14CB  00F2               	movwf	rtc_read_byte@addr
  2610  14CC                     l239:	
  2611                           ;./ds1307.h: 52: unsigned char rtc_read_byte(unsigned char addr);./ds1307.h: 53: {;./ds1
      +                          307.h: 54:     unsigned char rec;;./ds1307.h: 55: L: rtc_res();
  2612                           
  2613  14CC                     l2718:
  2614  14CC  160A  118A  22C1  160A  118A  	fcall	_rtc_res
  2615  14D1                     l2720:
  2616                           
  2617                           ;./ds1307.h: 56:     SSPBUF=0xD0;
  2618  14D1  30D0               	movlw	208
  2619  14D2  1283               	bcf	3,5	;RP0=0, select bank0
  2620  14D3  1303               	bcf	3,6	;RP1=0, select bank0
  2621  14D4  0093               	movwf	19	;volatile
  2622  14D5                     l2722:
  2623                           
  2624                           ;./ds1307.h: 57:     waitmssp();
  2625  14D5  160A  118A  229F  160A  118A  	fcall	_waitmssp
  2626  14DA                     l240:	
  2627                           ;./ds1307.h: 58:     while(ACKSTAT){goto L;}
  2628                           
  2629  14DA  1683               	bsf	3,5	;RP0=1, select bank1
  2630  14DB  1303               	bcf	3,6	;RP1=0, select bank1
  2631  14DC  1B11               	btfsc	17,6	;volatile
  2632  14DD  2CDF               	goto	u2831
  2633  14DE  2CE0               	goto	u2830
  2634  14DF                     u2831:
  2635  14DF  2CCC               	goto	l239
  2636  14E0                     u2830:
  2637  14E0                     l2724:
  2638                           
  2639                           ;./ds1307.h: 60:     rtc_send(addr);
  2640  14E0  0872               	movf	rtc_read_byte@addr,w
  2641  14E1  160A  118A  2343  160A  118A  	fcall	_rtc_send
  2642  14E6                     l2726:
  2643                           
  2644                           ;./ds1307.h: 61:     rtc_res();
  2645  14E6  160A  118A  22C1  160A  118A  	fcall	_rtc_res
  2646  14EB                     l2728:
  2647                           
  2648                           ;./ds1307.h: 62:     rtc_send(0xD1);
  2649  14EB  30D1               	movlw	209
  2650  14EC  160A  118A  2343  160A  118A  	fcall	_rtc_send
  2651  14F1                     l2730:
  2652                           
  2653                           ;./ds1307.h: 63:     rec=rtc_read();
  2654  14F1  160A  118A  22FE  160A  118A  	fcall	_rtc_read
  2655  14F6  00F1               	movwf	??_rtc_read_byte
  2656  14F7  0871               	movf	??_rtc_read_byte,w
  2657  14F8  00F3               	movwf	rtc_read_byte@rec
  2658  14F9                     l2732:
  2659                           
  2660                           ;./ds1307.h: 64:     rtc_nak();
  2661  14F9  160A  118A  22DD  160A  118A  	fcall	_rtc_nak
  2662  14FE                     l2734:
  2663                           
  2664                           ;./ds1307.h: 65:     rtc_stop();
  2665  14FE  160A  118A  22CA  160A  118A  	fcall	_rtc_stop
  2666                           
  2667                           ;./ds1307.h: 66:     return rec;
  2668  1503  0873               	movf	rtc_read_byte@rec,w
  2669  1504                     l243:
  2670  1504  0008               	return
  2671  1505                     __end_of_rtc_read_byte:
  2672                           
  2673                           	psect	text12
  2674  12CA                     __ptext12:	
  2675 ;; *************** function _rtc_stop *****************
  2676 ;; Defined at:
  2677 ;;		line 75 in file "./ds1307.h"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		status,2, status,0, pclath, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 1
  2698 ;; This function calls:
  2699 ;;		_waitmssp
  2700 ;; This function is called by:
  2701 ;;		_rtc_read_byte
  2702 ;;		_rtc_send_byte
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           
  2707                           ;psect for function _rtc_stop
  2708  12CA                     _rtc_stop:
  2709  12CA                     l1926:	
  2710                           ;incstack = 0
  2711                           ; Regs used in _rtc_stop: [status,2+status,0+pclath+cstack]
  2712                           
  2713                           
  2714                           ;./ds1307.h: 77:     PEN=1;
  2715  12CA  1683               	bsf	3,5	;RP0=1, select bank1
  2716  12CB  1303               	bcf	3,6	;RP1=0, select bank1
  2717  12CC  1511               	bsf	17,2	;volatile
  2718  12CD                     l1928:
  2719                           
  2720                           ;./ds1307.h: 78:     waitmssp();
  2721  12CD  160A  118A  229F  160A  118A  	fcall	_waitmssp
  2722  12D2                     l249:
  2723  12D2  0008               	return
  2724  12D3                     __end_of_rtc_stop:
  2725                           
  2726                           	psect	text13
  2727  1343                     __ptext13:	
  2728 ;; *************** function _rtc_send *****************
  2729 ;; Defined at:
  2730 ;;		line 30 in file "./ds1307.h"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  a               1    wreg     unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  a               1    0[COMMON] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0, pclath, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         0       0       0       0       0
  2745 ;;      Locals:         1       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         1       0       0       0       0
  2748 ;;Total ram usage:        1 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 1
  2751 ;; This function calls:
  2752 ;;		_waitmssp
  2753 ;; This function is called by:
  2754 ;;		_rtc_read_byte
  2755 ;;		_rtc_send_byte
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function _rtc_send
  2761  1343                     _rtc_send:
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in _rtc_send: [wreg+status,2+status,0+pclath+cstack]
  2765                           ;rtc_send@a stored from wreg
  2766  1343  00F0               	movwf	rtc_send@a
  2767  1344                     l1922:
  2768                           
  2769                           ;./ds1307.h: 30: void rtc_send(unsigned char a);./ds1307.h: 31: {;./ds1307.h: 32:     SS
      +                          PBUF=a;
  2770  1344  0870               	movf	rtc_send@a,w
  2771  1345  1283               	bcf	3,5	;RP0=0, select bank0
  2772  1346  1303               	bcf	3,6	;RP1=0, select bank0
  2773  1347  0093               	movwf	19	;volatile
  2774  1348                     l1924:
  2775                           
  2776                           ;./ds1307.h: 33:     waitmssp();
  2777  1348  160A  118A  229F  160A  118A  	fcall	_waitmssp
  2778  134D                     l227:	
  2779                           ;./ds1307.h: 34:     while(ACKSTAT);
  2780                           
  2781  134D  1683               	bsf	3,5	;RP0=1, select bank1
  2782  134E  1303               	bcf	3,6	;RP1=0, select bank1
  2783  134F  1B11               	btfsc	17,6	;volatile
  2784  1350  2B52               	goto	u1241
  2785  1351  2B53               	goto	u1240
  2786  1352                     u1241:
  2787  1352  2B4D               	goto	l227
  2788  1353                     u1240:
  2789  1353                     l230:
  2790  1353  0008               	return
  2791  1354                     __end_of_rtc_send:
  2792                           
  2793                           	psect	text14
  2794  12C1                     __ptext14:	
  2795 ;; *************** function _rtc_res *****************
  2796 ;; Defined at:
  2797 ;;		line 80 in file "./ds1307.h"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		status,2, status,0, pclath, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2811 ;;      Params:         0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; Hardware stack levels required when called: 1
  2818 ;; This function calls:
  2819 ;;		_waitmssp
  2820 ;; This function is called by:
  2821 ;;		_rtc_read_byte
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           
  2826                           ;psect for function _rtc_res
  2827  12C1                     _rtc_res:
  2828  12C1                     l1938:	
  2829                           ;incstack = 0
  2830                           ; Regs used in _rtc_res: [status,2+status,0+pclath+cstack]
  2831                           
  2832                           
  2833                           ;./ds1307.h: 82:     RSEN=1;
  2834  12C1  1683               	bsf	3,5	;RP0=1, select bank1
  2835  12C2  1303               	bcf	3,6	;RP1=0, select bank1
  2836  12C3  1491               	bsf	17,1	;volatile
  2837  12C4                     l1940:
  2838                           
  2839                           ;./ds1307.h: 83:     waitmssp();
  2840  12C4  160A  118A  229F  160A  118A  	fcall	_waitmssp
  2841  12C9                     l252:
  2842  12C9  0008               	return
  2843  12CA                     __end_of_rtc_res:
  2844                           
  2845                           	psect	text15
  2846  12FE                     __ptext15:	
  2847 ;; *************** function _rtc_read *****************
  2848 ;; Defined at:
  2849 ;;		line 45 in file "./ds1307.h"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      unsigned char 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, pclath, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2863 ;;      Params:         0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0
  2866 ;;      Totals:         0       0       0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 1
  2870 ;; This function calls:
  2871 ;;		_waitmssp
  2872 ;; This function is called by:
  2873 ;;		_rtc_read_byte
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function _rtc_read
  2879  12FE                     _rtc_read:
  2880  12FE                     l1930:	
  2881                           ;incstack = 0
  2882                           ; Regs used in _rtc_read: [wreg+status,2+status,0+pclath+cstack]
  2883                           
  2884                           
  2885                           ;./ds1307.h: 47:     RCEN=1;
  2886  12FE  1683               	bsf	3,5	;RP0=1, select bank1
  2887  12FF  1303               	bcf	3,6	;RP1=0, select bank1
  2888  1300  1591               	bsf	17,3	;volatile
  2889  1301                     l1932:
  2890                           
  2891                           ;./ds1307.h: 48:     waitmssp();
  2892  1301  160A  118A  229F  160A  118A  	fcall	_waitmssp
  2893  1306                     l1934:
  2894                           
  2895                           ;./ds1307.h: 49:     return SSPBUF;
  2896  1306  1283               	bcf	3,5	;RP0=0, select bank0
  2897  1307  1303               	bcf	3,6	;RP1=0, select bank0
  2898  1308  0813               	movf	19,w	;volatile
  2899  1309                     l236:
  2900  1309  0008               	return
  2901  130A                     __end_of_rtc_read:
  2902                           
  2903                           	psect	text16
  2904  12DD                     __ptext16:	
  2905 ;; *************** function _rtc_nak *****************
  2906 ;; Defined at:
  2907 ;;		line 91 in file "./ds1307.h"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		status,2, status,0, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 1
  2928 ;; This function calls:
  2929 ;;		_waitmssp
  2930 ;; This function is called by:
  2931 ;;		_rtc_read_byte
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _rtc_nak
  2937  12DD                     _rtc_nak:
  2938  12DD                     l1942:	
  2939                           ;incstack = 0
  2940                           ; Regs used in _rtc_nak: [status,2+status,0+pclath+cstack]
  2941                           
  2942                           
  2943                           ;./ds1307.h: 93:     ACKDT=1;
  2944  12DD  1683               	bsf	3,5	;RP0=1, select bank1
  2945  12DE  1303               	bcf	3,6	;RP1=0, select bank1
  2946  12DF  1691               	bsf	17,5	;volatile
  2947                           
  2948                           ;./ds1307.h: 94:     ACKEN=1;
  2949  12E0  1611               	bsf	17,4	;volatile
  2950  12E1                     l1944:
  2951                           
  2952                           ;./ds1307.h: 95:     waitmssp();
  2953  12E1  160A  118A  229F  160A  118A  	fcall	_waitmssp
  2954  12E6                     l258:
  2955  12E6  0008               	return
  2956  12E7                     __end_of_rtc_nak:
  2957                           
  2958                           	psect	text17
  2959  129F                     __ptext17:	
  2960 ;; *************** function _waitmssp *****************
  2961 ;; Defined at:
  2962 ;;		line 25 in file "./ds1307.h"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		None
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0
  2979 ;;      Totals:         0       0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_rtc_send
  2986 ;;		_rtc_read
  2987 ;;		_rtc_read_byte
  2988 ;;		_rtc_stop
  2989 ;;		_rtc_res
  2990 ;;		_rtc_nak
  2991 ;;		_rtc_start
  2992 ;;		_rtc_ack
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _waitmssp
  2998  129F                     _waitmssp:
  2999  129F                     l1882:	
  3000                           ;incstack = 0
  3001                           ; Regs used in _waitmssp: []
  3002                           
  3003  129F                     l221:	
  3004                           ;./ds1307.h: 27:     while(!SSPIF);
  3005                           
  3006  129F  1283               	bcf	3,5	;RP0=0, select bank0
  3007  12A0  1303               	bcf	3,6	;RP1=0, select bank0
  3008  12A1  1D8C               	btfss	12,3	;volatile
  3009  12A2  2AA4               	goto	u1171
  3010  12A3  2AA5               	goto	u1170
  3011  12A4                     u1171:
  3012  12A4  2A9F               	goto	l221
  3013  12A5                     u1170:
  3014  12A5                     l223:
  3015                           
  3016                           ;./ds1307.h: 28:     SSPIF=0;
  3017  12A5  118C               	bcf	12,3	;volatile
  3018  12A6                     l224:
  3019  12A6  0008               	return
  3020  12A7                     __end_of_waitmssp:
  3021                           
  3022                           	psect	text18
  3023  1354                     __ptext18:	
  3024 ;; *************** function _print_serialnumber *****************
  3025 ;; Defined at:
  3026 ;;		line 132 in file "main.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0
  3043 ;;      Totals:         0       0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 2
  3047 ;; This function calls:
  3048 ;;		_tx
  3049 ;;		_tx_sn
  3050 ;; This function is called by:
  3051 ;;		_main
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           
  3056                           ;psect for function _print_serialnumber
  3057  1354                     _print_serialnumber:
  3058  1354                     l2910:	
  3059                           ;incstack = 0
  3060                           ; Regs used in _print_serialnumber: [wreg+status,2+status,0+pclath+cstack]
  3061                           
  3062                           
  3063                           ;main.c: 134:     tx_sn(sn);
  3064  1354  1683               	bsf	3,5	;RP0=1, select bank1
  3065  1355  1303               	bcf	3,6	;RP1=0, select bank1
  3066  1356  086E               	movf	(_sn+1)^(0+128),w
  3067  1357  00FA               	movwf	tx_sn@val+1
  3068  1358  086D               	movf	_sn^(0+128),w
  3069  1359  00F9               	movwf	tx_sn@val
  3070  135A  120A  118A  210B  160A  118A  	fcall	_tx_sn
  3071                           
  3072                           ;main.c: 135:     tx(')');
  3073  135F  3029               	movlw	41
  3074  1360  160A  118A  22E7  160A  118A  	fcall	_tx
  3075  1365                     l387:
  3076  1365  0008               	return
  3077  1366                     __end_of_print_serialnumber:
  3078                           
  3079                           	psect	text19
  3080  0BD6                     __ptext19:	
  3081 ;; *************** function _print_dht11data *****************
  3082 ;; Defined at:
  3083 ;;		line 162 in file "main.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3097 ;;      Params:         0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0
  3099 ;;      Temps:          0       8       0       0       0
  3100 ;;      Totals:         0       8       0       0       0
  3101 ;;Total ram usage:        8 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 2
  3104 ;; This function calls:
  3105 ;;		_CheckResponse
  3106 ;;		_LCD_Command
  3107 ;;		_ReadData
  3108 ;;		_StartSignal
  3109 ;;		_show
  3110 ;;		_show_multidigits
  3111 ;;		_tx
  3112 ;;		_tx_sn
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           
  3119                           ;psect for function _print_dht11data
  3120  0BD6                     _print_dht11data:
  3121  0BD6                     l2956:	
  3122                           ;incstack = 0
  3123                           ; Regs used in _print_dht11data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3124                           
  3125                           
  3126                           ;main.c: 164:         StartSignal();
  3127  0BD6  160A  118A  23A9  120A  158A  	fcall	_StartSignal
  3128                           
  3129                           ;main.c: 165:         CheckResponse();
  3130  0BDB  160A  118A  2400  120A  158A  	fcall	_CheckResponse
  3131  0BE0                     l2958:
  3132                           
  3133                           ;main.c: 166:         if(Check == 1)
  3134  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0BE2  0342               	decf	_Check,w
  3137  0BE3  1D03               	btfss	3,2
  3138  0BE4  2BE6               	goto	u3261
  3139  0BE5  2BE7               	goto	u3260
  3140  0BE6                     u3261:
  3141  0BE6  2C4F               	goto	l2966
  3142  0BE7                     u3260:
  3143  0BE7                     l2960:
  3144                           
  3145                           ;main.c: 167:         {;main.c: 168:             RH_byte1 = ReadData();
  3146  0BE7  160A  118A  25C0  120A  158A  	fcall	_ReadData
  3147  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0BED  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0BEE  00D5               	movwf	??_print_dht11data
  3150  0BEF  0855               	movf	??_print_dht11data,w
  3151  0BF0  00BF               	movwf	_RH_byte1
  3152                           
  3153                           ;main.c: 169:             RH_byte2 = ReadData();
  3154  0BF1  160A  118A  25C0  120A  158A  	fcall	_ReadData
  3155  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  3157  0BF8  00D5               	movwf	??_print_dht11data
  3158  0BF9  0855               	movf	??_print_dht11data,w
  3159  0BFA  00BE               	movwf	_RH_byte2
  3160                           
  3161                           ;main.c: 170:             T_byte1 = ReadData();
  3162  0BFB  160A  118A  25C0  120A  158A  	fcall	_ReadData
  3163  0C00  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0C01  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0C02  00D5               	movwf	??_print_dht11data
  3166  0C03  0855               	movf	??_print_dht11data,w
  3167  0C04  00C1               	movwf	_T_byte1
  3168                           
  3169                           ;main.c: 171:             T_byte2 = ReadData();
  3170  0C05  160A  118A  25C0  120A  158A  	fcall	_ReadData
  3171  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0C0C  00D5               	movwf	??_print_dht11data
  3174  0C0D  0855               	movf	??_print_dht11data,w
  3175  0C0E  00C0               	movwf	_T_byte2
  3176                           
  3177                           ;main.c: 172:             Sum = ReadData();
  3178  0C0F  160A  118A  25C0  120A  158A  	fcall	_ReadData
  3179  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0C16  00D5               	movwf	??_print_dht11data
  3182  0C17  01D6               	clrf	??_print_dht11data+1
  3183  0C18  0855               	movf	??_print_dht11data,w
  3184  0C19  00B0               	movwf	_Sum
  3185  0C1A  0856               	movf	??_print_dht11data+1,w
  3186  0C1B  00B1               	movwf	_Sum+1
  3187  0C1C                     l2962:
  3188                           
  3189                           ;main.c: 173:             if(Sum == ((RH_byte1+RH_byte2+T_byte1+T_byte2) & 0XFF))
  3190  0C1C  083F               	movf	_RH_byte1,w
  3191  0C1D  073E               	addwf	_RH_byte2,w
  3192  0C1E  00D5               	movwf	??_print_dht11data
  3193  0C1F  01D6               	clrf	??_print_dht11data+1
  3194  0C20  0DD6               	rlf	??_print_dht11data+1,f
  3195  0C21  0841               	movf	_T_byte1,w
  3196  0C22  0755               	addwf	??_print_dht11data,w
  3197  0C23  00D7               	movwf	??_print_dht11data+2
  3198  0C24  3000               	movlw	0
  3199  0C25  1803               	skipnc
  3200  0C26  3001               	movlw	1
  3201  0C27  0756               	addwf	??_print_dht11data+1,w
  3202  0C28  00D8               	movwf	??_print_dht11data+3
  3203  0C29  0840               	movf	_T_byte2,w
  3204  0C2A  0757               	addwf	??_print_dht11data+2,w
  3205  0C2B  00D9               	movwf	??_print_dht11data+4
  3206  0C2C  3000               	movlw	0
  3207  0C2D  1803               	skipnc
  3208  0C2E  3001               	movlw	1
  3209  0C2F  0758               	addwf	??_print_dht11data+3,w
  3210  0C30  00DA               	movwf	??_print_dht11data+5
  3211  0C31  30FF               	movlw	255
  3212  0C32  0559               	andwf	??_print_dht11data+4,w
  3213  0C33  00DB               	movwf	??_print_dht11data+6
  3214  0C34  3000               	movlw	0
  3215  0C35  055A               	andwf	??_print_dht11data+5,w
  3216  0C36  00DC               	movwf	??_print_dht11data+7
  3217  0C37  0831               	movf	_Sum+1,w
  3218  0C38  065C               	xorwf	??_print_dht11data+7,w
  3219  0C39  1D03               	skipz
  3220  0C3A  2C3D               	goto	u3275
  3221  0C3B  0830               	movf	_Sum,w
  3222  0C3C  065B               	xorwf	??_print_dht11data+6,w
  3223  0C3D                     u3275:
  3224  0C3D  1D03               	skipz
  3225  0C3E  2C40               	goto	u3271
  3226  0C3F  2C41               	goto	u3270
  3227  0C40                     u3271:
  3228  0C40  2C4F               	goto	l2966
  3229  0C41                     u3270:
  3230  0C41                     l2964:
  3231                           
  3232                           ;main.c: 174:             {;main.c: 175:                 Temp = T_byte1;
  3233  0C41  0841               	movf	_T_byte1,w
  3234  0C42  00D5               	movwf	??_print_dht11data
  3235  0C43  01D6               	clrf	??_print_dht11data+1
  3236  0C44  0855               	movf	??_print_dht11data,w
  3237  0C45  00B4               	movwf	_Temp
  3238  0C46  0856               	movf	??_print_dht11data+1,w
  3239  0C47  00B5               	movwf	_Temp+1
  3240                           
  3241                           ;main.c: 176:                 RH = RH_byte1;
  3242  0C48  083F               	movf	_RH_byte1,w
  3243  0C49  00D5               	movwf	??_print_dht11data
  3244  0C4A  01D6               	clrf	??_print_dht11data+1
  3245  0C4B  0855               	movf	??_print_dht11data,w
  3246  0C4C  00B2               	movwf	_RH
  3247  0C4D  0856               	movf	??_print_dht11data+1,w
  3248  0C4E  00B3               	movwf	_RH+1
  3249  0C4F                     l2966:
  3250                           
  3251                           ;main.c: 179:         LCD_Command(0x94);
  3252  0C4F  3094               	movlw	148
  3253  0C50  160A  118A  2540  120A  158A  	fcall	_LCD_Command
  3254  0C55                     l2968:
  3255                           
  3256                           ;main.c: 180:         show("Temp:");
  3257  0C55  3053               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3258  0C56  160A  118A  23E1  120A  158A  	fcall	_show
  3259  0C5B                     l2970:
  3260                           
  3261                           ;main.c: 181:         LCD_Command(0x99);
  3262  0C5B  3099               	movlw	153
  3263  0C5C  160A  118A  2540  120A  158A  	fcall	_LCD_Command
  3264  0C61                     l2972:
  3265                           
  3266                           ;main.c: 182:         show_multidigits (Temp);
  3267  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0C63  0835               	movf	_Temp+1,w
  3270  0C64  00FA               	movwf	show_multidigits@val+1
  3271  0C65  0834               	movf	_Temp,w
  3272  0C66  00F9               	movwf	show_multidigits@val
  3273  0C67  120A  158A  266E  120A  158A  	fcall	_show_multidigits
  3274  0C6C                     l2974:
  3275                           
  3276                           ;main.c: 183:         tx_sn(Temp);
  3277  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0C6E  0835               	movf	_Temp+1,w
  3280  0C6F  00FA               	movwf	tx_sn@val+1
  3281  0C70  0834               	movf	_Temp,w
  3282  0C71  00F9               	movwf	tx_sn@val
  3283  0C72  120A  118A  210B  120A  158A  	fcall	_tx_sn
  3284  0C77                     l2976:
  3285                           
  3286                           ;main.c: 184:         tx(',');
  3287  0C77  302C               	movlw	44
  3288  0C78  160A  118A  22E7  120A  158A  	fcall	_tx
  3289  0C7D                     l2978:
  3290                           
  3291                           ;main.c: 185:         LCD_Command(0x9D);
  3292  0C7D  309D               	movlw	157
  3293  0C7E  160A  118A  2540  120A  158A  	fcall	_LCD_Command
  3294  0C83                     l2980:
  3295                           
  3296                           ;main.c: 186:         show("Humi:");
  3297  0C83  304D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3298  0C84  160A  118A  23E1  120A  158A  	fcall	_show
  3299  0C89                     l2982:
  3300                           
  3301                           ;main.c: 187:         LCD_Command(0xA2);
  3302  0C89  30A2               	movlw	162
  3303  0C8A  160A  118A  2540  120A  158A  	fcall	_LCD_Command
  3304  0C8F                     l2984:
  3305                           
  3306                           ;main.c: 188:         show_multidigits(RH);
  3307  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0C91  0833               	movf	_RH+1,w
  3310  0C92  00FA               	movwf	show_multidigits@val+1
  3311  0C93  0832               	movf	_RH,w
  3312  0C94  00F9               	movwf	show_multidigits@val
  3313  0C95  120A  158A  266E  120A  158A  	fcall	_show_multidigits
  3314  0C9A                     l2986:
  3315                           
  3316                           ;main.c: 189:         tx_sn(RH);
  3317  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  3319  0C9C  0833               	movf	_RH+1,w
  3320  0C9D  00FA               	movwf	tx_sn@val+1
  3321  0C9E  0832               	movf	_RH,w
  3322  0C9F  00F9               	movwf	tx_sn@val
  3323  0CA0  120A  118A  210B  120A  158A  	fcall	_tx_sn
  3324  0CA5                     l2988:
  3325                           
  3326                           ;main.c: 190:         tx(',');
  3327  0CA5  302C               	movlw	44
  3328  0CA6  160A  118A  22E7  120A  158A  	fcall	_tx
  3329  0CAB                     l402:
  3330  0CAB  0008               	return
  3331  0CAC                     __end_of_print_dht11data:
  3332                           
  3333                           	psect	text20
  3334  13A9                     __ptext20:	
  3335 ;; *************** function _StartSignal *****************
  3336 ;; Defined at:
  3337 ;;		line 7 in file "./dht11.h"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3351 ;;      Params:         0       0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0
  3353 ;;      Temps:          2       0       0       0       0
  3354 ;;      Totals:         2       0       0       0       0
  3355 ;;Total ram usage:        2 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_print_dht11data
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _StartSignal
  3366  13A9                     _StartSignal:
  3367  13A9                     l2674:	
  3368                           ;incstack = 0
  3369                           ; Regs used in _StartSignal: [wreg]
  3370                           
  3371                           
  3372                           ;./dht11.h: 9:     TRISDbits.TRISD0 = 0;
  3373  13A9  1683               	bsf	3,5	;RP0=1, select bank1
  3374  13AA  1303               	bcf	3,6	;RP1=0, select bank1
  3375  13AB  1008               	bcf	8,0	;volatile
  3376                           
  3377                           ;./dht11.h: 10:     PORTDbits.RD0 = 0;
  3378  13AC  1283               	bcf	3,5	;RP0=0, select bank0
  3379  13AD  1303               	bcf	3,6	;RP1=0, select bank0
  3380  13AE  1008               	bcf	8,0	;volatile
  3381  13AF                     l2676:
  3382                           
  3383                           ;./dht11.h: 11:     _delay((unsigned long)((25)*(20000000/4000.0)));
  3384  13AF  30A3               	movlw	163
  3385  13B0  00F1               	movwf	??_StartSignal+1
  3386  13B1  3055               	movlw	85
  3387  13B2  00F0               	movwf	??_StartSignal
  3388  13B3                     u4327:
  3389  13B3  0BF0               	decfsz	??_StartSignal,f
  3390  13B4  2BB3               	goto	u4327
  3391  13B5  0BF1               	decfsz	??_StartSignal+1,f
  3392  13B6  2BB3               	goto	u4327
  3393  13B7                     l2678:
  3394                           
  3395                           ;./dht11.h: 12:     PORTDbits.RD0 = 1;
  3396  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  3397  13B8  1303               	bcf	3,6	;RP1=0, select bank0
  3398  13B9  1408               	bsf	8,0	;volatile
  3399                           
  3400                           ;./dht11.h: 13:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  3401  13BA  3031               	movlw	49
  3402  13BB  00F0               	movwf	??_StartSignal
  3403  13BC                     u4337:
  3404  13BC  0BF0               	decfsz	??_StartSignal,f
  3405  13BD  2BBC               	goto	u4337
  3406  13BE  2BBF               	nop2
  3407  13BF                     l2680:
  3408                           
  3409                           ;./dht11.h: 14:     TRISDbits.TRISD0 = 1;
  3410  13BF  1683               	bsf	3,5	;RP0=1, select bank1
  3411  13C0  1303               	bcf	3,6	;RP1=0, select bank1
  3412  13C1  1408               	bsf	8,0	;volatile
  3413  13C2                     l183:
  3414  13C2  0008               	return
  3415  13C3                     __end_of_StartSignal:
  3416                           
  3417                           	psect	text21
  3418  15C0                     __ptext21:	
  3419 ;; *************** function _ReadData *****************
  3420 ;; Defined at:
  3421 ;;		line 32 in file "./dht11.h"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  j               1    3[COMMON] unsigned char 
  3426 ;;  i               1    2[COMMON] unsigned char 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      unsigned char 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3436 ;;      Params:         0       0       0       0       0
  3437 ;;      Locals:         2       0       0       0       0
  3438 ;;      Temps:          2       0       0       0       0
  3439 ;;      Totals:         4       0       0       0       0
  3440 ;;Total ram usage:        4 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_print_dht11data
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _ReadData
  3451  15C0                     _ReadData:
  3452  15C0                     l2696:	
  3453                           ;incstack = 0
  3454                           ; Regs used in _ReadData: [wreg+status,2+status,0]
  3455                           
  3456                           
  3457                           ;./dht11.h: 34:     char i, j;;./dht11.h: 35:     for(j = 0; j < 8; j++)
  3458  15C0  01F3               	clrf	ReadData@j
  3459  15C1                     l193:
  3460  15C1  1283               	bcf	3,5	;RP0=0, select bank0
  3461  15C2  1303               	bcf	3,6	;RP1=0, select bank0
  3462  15C3  1C08               	btfss	8,0	;volatile
  3463  15C4  2DC6               	goto	u2771
  3464  15C5  2DC7               	goto	u2770
  3465  15C6                     u2771:
  3466  15C6  2DC1               	goto	l193
  3467  15C7                     u2770:
  3468  15C7                     l2702:
  3469                           
  3470                           ;./dht11.h: 38:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  3471  15C7  3031               	movlw	49
  3472  15C8  00F0               	movwf	??_ReadData
  3473  15C9                     u4347:
  3474  15C9  0BF0               	decfsz	??_ReadData,f
  3475  15CA  2DC9               	goto	u4347
  3476  15CB  2DCC               	nop2
  3477  15CC                     l2704:
  3478                           
  3479                           ;./dht11.h: 39:         if(PORTDbits.RD0 == 0)
  3480  15CC  1283               	bcf	3,5	;RP0=0, select bank0
  3481  15CD  1303               	bcf	3,6	;RP1=0, select bank0
  3482  15CE  1808               	btfsc	8,0	;volatile
  3483  15CF  2DD1               	goto	u2781
  3484  15D0  2DD2               	goto	u2780
  3485  15D1                     u2781:
  3486  15D1  2DE3               	goto	l2708
  3487  15D2                     u2780:
  3488  15D2                     l2706:
  3489                           
  3490                           ;./dht11.h: 40:         i&= ~(1<<(7 - j));
  3491  15D2  3001               	movlw	1
  3492  15D3  00F0               	movwf	??_ReadData
  3493  15D4  0873               	movf	ReadData@j,w
  3494  15D5  3C07               	sublw	7
  3495  15D6  3E01               	addlw	1
  3496  15D7  2DDA               	goto	u2794
  3497  15D8                     u2795:
  3498  15D8  1003               	clrc
  3499  15D9  0DF0               	rlf	??_ReadData,f
  3500  15DA                     u2794:
  3501  15DA  3EFF               	addlw	-1
  3502  15DB  1D03               	skipz
  3503  15DC  2DD8               	goto	u2795
  3504  15DD  0870               	movf	??_ReadData,w
  3505  15DE  3AFF               	xorlw	255
  3506  15DF  00F1               	movwf	??_ReadData+1
  3507  15E0  0871               	movf	??_ReadData+1,w
  3508  15E1  05F2               	andwf	ReadData@i,f
  3509  15E2  2DF6               	goto	l2710
  3510  15E3                     l2708:
  3511                           
  3512                           ;./dht11.h: 42:         {;./dht11.h: 43:             i|= (1 << (7 - j));
  3513  15E3  3001               	movlw	1
  3514  15E4  00F0               	movwf	??_ReadData
  3515  15E5  0873               	movf	ReadData@j,w
  3516  15E6  3C07               	sublw	7
  3517  15E7  3E01               	addlw	1
  3518  15E8  2DEB               	goto	u2804
  3519  15E9                     u2805:
  3520  15E9  1003               	clrc
  3521  15EA  0DF0               	rlf	??_ReadData,f
  3522  15EB                     u2804:
  3523  15EB  3EFF               	addlw	-1
  3524  15EC  1D03               	skipz
  3525  15ED  2DE9               	goto	u2805
  3526  15EE  0870               	movf	??_ReadData,w
  3527  15EF  00F1               	movwf	??_ReadData+1
  3528  15F0  0871               	movf	??_ReadData+1,w
  3529  15F1  04F2               	iorwf	ReadData@i,f
  3530  15F2                     l198:	
  3531                           ;./dht11.h: 44:             while(PORTDbits.RD0);
  3532                           
  3533  15F2  1808               	btfsc	8,0	;volatile
  3534  15F3  2DF5               	goto	u2811
  3535  15F4  2DF6               	goto	u2810
  3536  15F5                     u2811:
  3537  15F5  2DF2               	goto	l198
  3538  15F6                     u2810:
  3539  15F6                     l2710:
  3540                           
  3541                           ;./dht11.h: 46:     }
  3542  15F6  3001               	movlw	1
  3543  15F7  00F0               	movwf	??_ReadData
  3544  15F8  0870               	movf	??_ReadData,w
  3545  15F9  07F3               	addwf	ReadData@j,f
  3546  15FA                     l2712:
  3547  15FA  3008               	movlw	8
  3548  15FB  0273               	subwf	ReadData@j,w
  3549  15FC  1C03               	skipc
  3550  15FD  2DFF               	goto	u2821
  3551  15FE  2E00               	goto	u2820
  3552  15FF                     u2821:
  3553  15FF  2DC1               	goto	l193
  3554  1600                     u2820:
  3555  1600                     l2714:
  3556                           
  3557                           ;./dht11.h: 47:     return i;
  3558  1600  0872               	movf	ReadData@i,w
  3559  1601                     l201:
  3560  1601  0008               	return
  3561  1602                     __end_of_ReadData:
  3562                           
  3563                           	psect	text22
  3564  1400                     __ptext22:	
  3565 ;; *************** function _CheckResponse *****************
  3566 ;; Defined at:
  3567 ;;		line 17 in file "./dht11.h"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3581 ;;      Params:         0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0
  3583 ;;      Temps:          1       0       0       0       0
  3584 ;;      Totals:         1       0       0       0       0
  3585 ;;Total ram usage:        1 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_print_dht11data
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _CheckResponse
  3596  1400                     _CheckResponse:
  3597  1400                     l2682:	
  3598                           ;incstack = 0
  3599                           ; Regs used in _CheckResponse: [wreg+status,2]
  3600                           
  3601                           
  3602                           ;./dht11.h: 19:     Check = 0;
  3603  1400  1283               	bcf	3,5	;RP0=0, select bank0
  3604  1401  1303               	bcf	3,6	;RP1=0, select bank0
  3605  1402  01C2               	clrf	_Check
  3606  1403                     l2684:
  3607                           
  3608                           ;./dht11.h: 20:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  3609  1403  3042               	movlw	66
  3610  1404  00F0               	movwf	??_CheckResponse
  3611  1405                     u4357:
  3612  1405  0BF0               	decfsz	??_CheckResponse,f
  3613  1406  2C05               	goto	u4357
  3614  1407  0000               	nop
  3615  1408                     l2686:
  3616                           
  3617                           ;./dht11.h: 21:     if (PORTDbits.RD0 == 0)
  3618  1408  1283               	bcf	3,5	;RP0=0, select bank0
  3619  1409  1303               	bcf	3,6	;RP1=0, select bank0
  3620  140A  1808               	btfsc	8,0	;volatile
  3621  140B  2C0D               	goto	u2751
  3622  140C  2C0E               	goto	u2750
  3623  140D                     u2751:
  3624  140D  2C20               	goto	l188
  3625  140E                     u2750:
  3626  140E                     l2688:
  3627                           
  3628                           ;./dht11.h: 22:     {;./dht11.h: 23:         _delay((unsigned long)((80)*(20000000/40000
      +                          00.0)));
  3629  140E  3085               	movlw	133
  3630  140F  00F0               	movwf	??_CheckResponse
  3631  1410                     u4367:
  3632  1410  0BF0               	decfsz	??_CheckResponse,f
  3633  1411  2C10               	goto	u4367
  3634  1412                     l2690:
  3635                           
  3636                           ;./dht11.h: 24:         if (PORTDbits.RD0 == 1)
  3637  1412  1283               	bcf	3,5	;RP0=0, select bank0
  3638  1413  1303               	bcf	3,6	;RP1=0, select bank0
  3639  1414  1C08               	btfss	8,0	;volatile
  3640  1415  2C17               	goto	u2761
  3641  1416  2C18               	goto	u2760
  3642  1417                     u2761:
  3643  1417  2C20               	goto	l188
  3644  1418                     u2760:
  3645  1418                     l2692:
  3646                           
  3647                           ;./dht11.h: 25:         {;./dht11.h: 26:             _delay((unsigned long)((50)*(200000
      +                          00/4000000.0)));
  3648  1418  3053               	movlw	83
  3649  1419  00F0               	movwf	??_CheckResponse
  3650  141A                     u4377:
  3651  141A  0BF0               	decfsz	??_CheckResponse,f
  3652  141B  2C1A               	goto	u4377
  3653  141C                     l2694:
  3654                           
  3655                           ;./dht11.h: 27:            Check = 1;
  3656  141C  1283               	bcf	3,5	;RP0=0, select bank0
  3657  141D  1303               	bcf	3,6	;RP1=0, select bank0
  3658  141E  01C2               	clrf	_Check
  3659  141F  0AC2               	incf	_Check,f
  3660  1420                     l188:
  3661  1420  0008               	return
  3662  1421                     __end_of_CheckResponse:
  3663                           
  3664                           	psect	text23
  3665  0875                     __ptext23:	
  3666 ;; *************** function _print_analogvoltages *****************
  3667 ;; Defined at:
  3668 ;;		line 138 in file "main.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  j               1   34[BANK0 ] unsigned char 
  3673 ;;  i               1   33[BANK0 ] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       0       0       0       0
  3684 ;;      Locals:         0       2       0       0       0
  3685 ;;      Temps:          0       3       0       0       0
  3686 ;;      Totals:         0       5       0       0       0
  3687 ;;Total ram usage:        5 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 2
  3690 ;; This function calls:
  3691 ;;		_LCD_Char
  3692 ;;		_LCD_num
  3693 ;;		_tx
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function _print_analogvoltages
  3701  0875                     _print_analogvoltages:
  3702  0875                     l2920:	
  3703                           ;incstack = 0
  3704                           ; Regs used in _print_analogvoltages: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3705                           
  3706                           
  3707                           ;main.c: 140:     for (unsigned char i=0;i<4;i++)
  3708  0875  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0876  1303               	bcf	3,6	;RP1=0, select bank0
  3710  0877  01E8               	clrf	print_analogvoltages@i
  3711  0878                     l2926:
  3712                           
  3713                           ;main.c: 141:         {;main.c: 142:             LCD_num(AV[i]);
  3714  0878  0868               	movf	print_analogvoltages@i,w
  3715  0879  00E5               	movwf	??_print_analogvoltages
  3716  087A  0765               	addwf	??_print_analogvoltages,w
  3717  087B  3E90               	addlw	(low (_AV| (0+256)))& (0+255)
  3718  087C  0084               	movwf	4
  3719  087D  1783               	bsf	3,7	;select IRP bank3
  3720  087E  0800               	movf	0,w
  3721  087F  00E6               	movwf	??_print_analogvoltages+1
  3722  0880  0A84               	incf	4,f
  3723  0881  0800               	movf	0,w
  3724  0882  00E7               	movwf	??_print_analogvoltages+2
  3725  0883  0866               	movf	??_print_analogvoltages+1,w
  3726  0884  00D5               	movwf	LCD_num@val
  3727  0885  0867               	movf	??_print_analogvoltages+2,w
  3728  0886  00D6               	movwf	LCD_num@val+1
  3729  0887  01D7               	clrf	LCD_num@val+2
  3730  0888  01D8               	clrf	LCD_num@val+3
  3731  0889  120A  158A  2180  120A  158A  	fcall	_LCD_num
  3732  088E                     l2928:
  3733                           
  3734                           ;main.c: 143:             LCD_Char(' ');
  3735  088E  3020               	movlw	32
  3736  088F  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  3737  0894                     l2930:
  3738                           
  3739                           ;main.c: 144:             for (unsigned char j=0;j<3;j++)
  3740  0894  1283               	bcf	3,5	;RP0=0, select bank0
  3741  0895  1303               	bcf	3,6	;RP1=0, select bank0
  3742  0896  01E9               	clrf	print_analogvoltages@j
  3743  0897                     l2936:
  3744                           
  3745                           ;main.c: 145:             {;main.c: 146:                 tx((avv[j]+0x30));
  3746  0897  0869               	movf	print_analogvoltages@j,w
  3747  0898  3EDC               	addlw	(low (_avv| 0))& (0+255)
  3748  0899  0084               	movwf	4
  3749  089A  1383               	bcf	3,7	;select IRP bank1
  3750  089B  0800               	movf	0,w
  3751  089C  3E30               	addlw	48
  3752  089D  160A  118A  22E7  120A  158A  	fcall	_tx
  3753  08A2                     l2938:
  3754                           
  3755                           ;main.c: 147:                 if (j == 0)
  3756  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  3757  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  3758  08A4  0869               	movf	print_analogvoltages@j,w
  3759  08A5  1D03               	btfss	3,2
  3760  08A6  28A8               	goto	u3221
  3761  08A7  28A9               	goto	u3220
  3762  08A8                     u3221:
  3763  08A8  28B0               	goto	l2942
  3764  08A9                     u3220:
  3765  08A9                     l2940:
  3766                           
  3767                           ;main.c: 148:                 {;main.c: 149:                     tx('.');
  3768  08A9  302E               	movlw	46
  3769  08AA  160A  118A  22E7  120A  158A  	fcall	_tx
  3770                           
  3771                           ;main.c: 150:                 }
  3772  08AF  28BC               	goto	l2946
  3773  08B0                     l2942:
  3774  08B0  3002               	movlw	2
  3775  08B1  0669               	xorwf	print_analogvoltages@j,w
  3776  08B2  1D03               	btfss	3,2
  3777  08B3  28B5               	goto	u3231
  3778  08B4  28B6               	goto	u3230
  3779  08B5                     u3231:
  3780  08B5  28BC               	goto	l2946
  3781  08B6                     u3230:
  3782  08B6                     l2944:
  3783                           
  3784                           ;main.c: 152:                 {;main.c: 153:                     tx(',');
  3785  08B6  302C               	movlw	44
  3786  08B7  160A  118A  22E7  120A  158A  	fcall	_tx
  3787  08BC                     l2946:
  3788                           
  3789                           ;main.c: 155:             }
  3790  08BC  3001               	movlw	1
  3791  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  3792  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  3793  08BF  00E5               	movwf	??_print_analogvoltages
  3794  08C0  0865               	movf	??_print_analogvoltages,w
  3795  08C1  07E9               	addwf	print_analogvoltages@j,f
  3796  08C2                     l2948:
  3797  08C2  3003               	movlw	3
  3798  08C3  0269               	subwf	print_analogvoltages@j,w
  3799  08C4  1C03               	skipc
  3800  08C5  28C7               	goto	u3241
  3801  08C6  28C8               	goto	u3240
  3802  08C7                     u3241:
  3803  08C7  2897               	goto	l2936
  3804  08C8                     u3240:
  3805  08C8                     l2950:
  3806                           
  3807                           ;main.c: 157:             _delay((unsigned long)((100)*(20000000/4000.0)));
  3808  08C8  3003               	movlw	3
  3809  08C9  1283               	bcf	3,5	;RP0=0, select bank0
  3810  08CA  1303               	bcf	3,6	;RP1=0, select bank0
  3811  08CB  00E7               	movwf	??_print_analogvoltages+2
  3812  08CC  308A               	movlw	138
  3813  08CD  00E6               	movwf	??_print_analogvoltages+1
  3814  08CE  3055               	movlw	85
  3815  08CF  00E5               	movwf	??_print_analogvoltages
  3816  08D0                     u4387:
  3817  08D0  0BE5               	decfsz	??_print_analogvoltages,f
  3818  08D1  28D0               	goto	u4387
  3819  08D2  0BE6               	decfsz	??_print_analogvoltages+1,f
  3820  08D3  28D0               	goto	u4387
  3821  08D4  0BE7               	decfsz	??_print_analogvoltages+2,f
  3822  08D5  28D0               	goto	u4387
  3823  08D6                     l2952:
  3824                           
  3825                           ;main.c: 158:         }
  3826  08D6  3001               	movlw	1
  3827  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  3828  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  3829  08D9  00E5               	movwf	??_print_analogvoltages
  3830  08DA  0865               	movf	??_print_analogvoltages,w
  3831  08DB  07E8               	addwf	print_analogvoltages@i,f
  3832  08DC                     l2954:
  3833  08DC  3004               	movlw	4
  3834  08DD  0268               	subwf	print_analogvoltages@i,w
  3835  08DE  1C03               	skipc
  3836  08DF  28E1               	goto	u3251
  3837  08E0  28E2               	goto	u3250
  3838  08E1                     u3251:
  3839  08E1  2878               	goto	l2926
  3840  08E2                     u3250:
  3841  08E2                     l397:
  3842  08E2  0008               	return
  3843  08E3                     __end_of_print_analogvoltages:
  3844                           
  3845                           	psect	text24
  3846  0980                     __ptext24:	
  3847 ;; *************** function _LCD_num *****************
  3848 ;; Defined at:
  3849 ;;		line 58 in file "./lcd4bit.h"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  val             4   14[BANK0 ] long 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  remainder       2   28[BANK0 ] unsigned int 
  3854 ;;  result1         2   26[BANK0 ] unsigned int 
  3855 ;;  result          2   24[BANK0 ] unsigned int 
  3856 ;;  digit3          2   22[BANK0 ] unsigned int 
  3857 ;;  digit2          2   20[BANK0 ] unsigned int 
  3858 ;;  digit1          2   18[BANK0 ] unsigned int 
  3859 ;;  calb_val        2    0        int 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         0       4       0       0       0
  3870 ;;      Locals:         0      12       0       0       0
  3871 ;;      Temps:          0       0       0       0       0
  3872 ;;      Totals:         0      16       0       0       0
  3873 ;;Total ram usage:       16 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; Hardware stack levels required when called: 1
  3876 ;; This function calls:
  3877 ;;		_LCD_Char
  3878 ;;		___aldiv
  3879 ;;		___lmul
  3880 ;;		___lwdiv
  3881 ;;		___lwmod
  3882 ;;		_intdigits_chardigits
  3883 ;; This function is called by:
  3884 ;;		_print_analogvoltages
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function _LCD_num
  3890  0980                     _LCD_num:
  3891  0980                     l2522:	
  3892                           ;incstack = 0
  3893                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  3894                           
  3895  0980                     l2524:
  3896                           
  3897                           ;./lcd4bit.h: 61:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 62:     result1;;./lcd4bit.h: 63:     result = ((val*100)/calb_val);
  3898  0980  3000               	movlw	0
  3899  0981  1283               	bcf	3,5	;RP0=0, select bank0
  3900  0982  1303               	bcf	3,6	;RP1=0, select bank0
  3901  0983  00CA               	movwf	___aldiv@divisor+3
  3902  0984  3000               	movlw	0
  3903  0985  00C9               	movwf	___aldiv@divisor+2
  3904  0986  3000               	movlw	0
  3905  0987  00C8               	movwf	___aldiv@divisor+1
  3906  0988  30C8               	movlw	200
  3907  0989  00C7               	movwf	___aldiv@divisor
  3908  098A  0858               	movf	LCD_num@val+3,w
  3909  098B  00F3               	movwf	___lmul@multiplier+3
  3910  098C  0857               	movf	LCD_num@val+2,w
  3911  098D  00F2               	movwf	___lmul@multiplier+2
  3912  098E  0856               	movf	LCD_num@val+1,w
  3913  098F  00F1               	movwf	___lmul@multiplier+1
  3914  0990  0855               	movf	LCD_num@val,w
  3915  0991  00F0               	movwf	___lmul@multiplier
  3916  0992  3000               	movlw	0
  3917  0993  00F7               	movwf	___lmul@multiplicand+3
  3918  0994  3000               	movlw	0
  3919  0995  00F6               	movwf	___lmul@multiplicand+2
  3920  0996  3000               	movlw	0
  3921  0997  00F5               	movwf	___lmul@multiplicand+1
  3922  0998  3064               	movlw	100
  3923  0999  00F4               	movwf	___lmul@multiplicand
  3924  099A  160A  118A  2646  120A  158A  	fcall	___lmul
  3925  099F  0873               	movf	?___lmul+3,w
  3926  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  3927  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  3928  09A2  00CE               	movwf	___aldiv@dividend+3
  3929  09A3  0872               	movf	?___lmul+2,w
  3930  09A4  00CD               	movwf	___aldiv@dividend+2
  3931  09A5  0871               	movf	?___lmul+1,w
  3932  09A6  00CC               	movwf	___aldiv@dividend+1
  3933  09A7  0870               	movf	?___lmul,w
  3934  09A8  00CB               	movwf	___aldiv@dividend
  3935  09A9  120A  158A  20E3  120A  158A  	fcall	___aldiv
  3936  09AE  1283               	bcf	3,5	;RP0=0, select bank0
  3937  09AF  1303               	bcf	3,6	;RP1=0, select bank0
  3938  09B0  0848               	movf	?___aldiv+1,w
  3939  09B1  00E0               	movwf	LCD_num@result+1
  3940  09B2  0847               	movf	?___aldiv,w
  3941  09B3  00DF               	movwf	LCD_num@result
  3942  09B4                     l2526:
  3943                           
  3944                           ;./lcd4bit.h: 64:     remainder = result% 10;
  3945  09B4  300A               	movlw	10
  3946  09B5  00F0               	movwf	___lwmod@divisor
  3947  09B6  3000               	movlw	0
  3948  09B7  00F1               	movwf	___lwmod@divisor+1
  3949  09B8  0860               	movf	LCD_num@result+1,w
  3950  09B9  00F3               	movwf	___lwmod@dividend+1
  3951  09BA  085F               	movf	LCD_num@result,w
  3952  09BB  00F2               	movwf	___lwmod@dividend
  3953  09BC  160A  118A  2457  120A  158A  	fcall	___lwmod
  3954  09C1  0871               	movf	?___lwmod+1,w
  3955  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  3956  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  3957  09C4  00E4               	movwf	LCD_num@remainder+1
  3958  09C5  0870               	movf	?___lwmod,w
  3959  09C6  00E3               	movwf	LCD_num@remainder
  3960  09C7                     l2528:
  3961                           
  3962                           ;./lcd4bit.h: 65:     result1 = result /10;
  3963  09C7  300A               	movlw	10
  3964  09C8  00F0               	movwf	___lwdiv@divisor
  3965  09C9  3000               	movlw	0
  3966  09CA  00F1               	movwf	___lwdiv@divisor+1
  3967  09CB  0860               	movf	LCD_num@result+1,w
  3968  09CC  00F3               	movwf	___lwdiv@dividend+1
  3969  09CD  085F               	movf	LCD_num@result,w
  3970  09CE  00F2               	movwf	___lwdiv@dividend
  3971  09CF  160A  118A  2602  120A  158A  	fcall	___lwdiv
  3972  09D4  0871               	movf	?___lwdiv+1,w
  3973  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  3974  09D6  1303               	bcf	3,6	;RP1=0, select bank0
  3975  09D7  00E2               	movwf	LCD_num@result1+1
  3976  09D8  0870               	movf	?___lwdiv,w
  3977  09D9  00E1               	movwf	LCD_num@result1
  3978  09DA                     l2530:
  3979                           
  3980                           ;./lcd4bit.h: 66:     digit1 = remainder;
  3981  09DA  0864               	movf	LCD_num@remainder+1,w
  3982  09DB  00DA               	movwf	LCD_num@digit1+1
  3983  09DC  0863               	movf	LCD_num@remainder,w
  3984  09DD  00D9               	movwf	LCD_num@digit1
  3985                           
  3986                           ;./lcd4bit.h: 67:     remainder = result1%10;
  3987  09DE  300A               	movlw	10
  3988  09DF  00F0               	movwf	___lwmod@divisor
  3989  09E0  3000               	movlw	0
  3990  09E1  00F1               	movwf	___lwmod@divisor+1
  3991  09E2  0862               	movf	LCD_num@result1+1,w
  3992  09E3  00F3               	movwf	___lwmod@dividend+1
  3993  09E4  0861               	movf	LCD_num@result1,w
  3994  09E5  00F2               	movwf	___lwmod@dividend
  3995  09E6  160A  118A  2457  120A  158A  	fcall	___lwmod
  3996  09EB  0871               	movf	?___lwmod+1,w
  3997  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  3998  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  3999  09EE  00E4               	movwf	LCD_num@remainder+1
  4000  09EF  0870               	movf	?___lwmod,w
  4001  09F0  00E3               	movwf	LCD_num@remainder
  4002  09F1                     l2532:
  4003                           
  4004                           ;./lcd4bit.h: 68:     digit2 = remainder;
  4005  09F1  0864               	movf	LCD_num@remainder+1,w
  4006  09F2  00DC               	movwf	LCD_num@digit2+1
  4007  09F3  0863               	movf	LCD_num@remainder,w
  4008  09F4  00DB               	movwf	LCD_num@digit2
  4009  09F5                     l2534:
  4010                           
  4011                           ;./lcd4bit.h: 69:     remainder = (result1/10);
  4012  09F5  300A               	movlw	10
  4013  09F6  00F0               	movwf	___lwdiv@divisor
  4014  09F7  3000               	movlw	0
  4015  09F8  00F1               	movwf	___lwdiv@divisor+1
  4016  09F9  0862               	movf	LCD_num@result1+1,w
  4017  09FA  00F3               	movwf	___lwdiv@dividend+1
  4018  09FB  0861               	movf	LCD_num@result1,w
  4019  09FC  00F2               	movwf	___lwdiv@dividend
  4020  09FD  160A  118A  2602  120A  158A  	fcall	___lwdiv
  4021  0A02  0871               	movf	?___lwdiv+1,w
  4022  0A03  1283               	bcf	3,5	;RP0=0, select bank0
  4023  0A04  1303               	bcf	3,6	;RP1=0, select bank0
  4024  0A05  00E4               	movwf	LCD_num@remainder+1
  4025  0A06  0870               	movf	?___lwdiv,w
  4026  0A07  00E3               	movwf	LCD_num@remainder
  4027                           
  4028                           ;./lcd4bit.h: 70:     digit3=remainder;
  4029  0A08  0864               	movf	LCD_num@remainder+1,w
  4030  0A09  00DE               	movwf	LCD_num@digit3+1
  4031  0A0A  0863               	movf	LCD_num@remainder,w
  4032  0A0B  00DD               	movwf	LCD_num@digit3
  4033  0A0C                     l2536:
  4034                           
  4035                           ;./lcd4bit.h: 71:     LCD_Char(digit3+0x30);
  4036  0A0C  085D               	movf	LCD_num@digit3,w
  4037  0A0D  3E30               	addlw	48
  4038  0A0E  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  4039  0A13                     l2538:
  4040                           
  4041                           ;./lcd4bit.h: 72:     LCD_Char('.');
  4042  0A13  302E               	movlw	46
  4043  0A14  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  4044  0A19                     l2540:
  4045                           
  4046                           ;./lcd4bit.h: 73:     LCD_Char(digit2+0x30);
  4047  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0A1B  085B               	movf	LCD_num@digit2,w
  4050  0A1C  3E30               	addlw	48
  4051  0A1D  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  4052  0A22                     l2542:
  4053                           
  4054                           ;./lcd4bit.h: 74:     LCD_Char(digit1+0x30);
  4055  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0A24  0859               	movf	LCD_num@digit1,w
  4058  0A25  3E30               	addlw	48
  4059  0A26  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  4060  0A2B                     l2544:
  4061                           
  4062                           ;./lcd4bit.h: 76:     intdigits_chardigits(digit3,digit2,digit1);
  4063  0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  4064  0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  4065  0A2D  085E               	movf	LCD_num@digit3+1,w
  4066  0A2E  00F1               	movwf	intdigits_chardigits@a+1
  4067  0A2F  085D               	movf	LCD_num@digit3,w
  4068  0A30  00F0               	movwf	intdigits_chardigits@a
  4069  0A31  085C               	movf	LCD_num@digit2+1,w
  4070  0A32  00F3               	movwf	intdigits_chardigits@b+1
  4071  0A33  085B               	movf	LCD_num@digit2,w
  4072  0A34  00F2               	movwf	intdigits_chardigits@b
  4073  0A35  085A               	movf	LCD_num@digit1+1,w
  4074  0A36  00F5               	movwf	intdigits_chardigits@c+1
  4075  0A37  0859               	movf	LCD_num@digit1,w
  4076  0A38  00F4               	movwf	intdigits_chardigits@c
  4077  0A39  160A  118A  2323  120A  158A  	fcall	_intdigits_chardigits
  4078  0A3E                     l118:
  4079  0A3E  0008               	return
  4080  0A3F                     __end_of_LCD_num:
  4081                           
  4082                           	psect	text25
  4083  1323                     __ptext25:	
  4084 ;; *************** function _intdigits_chardigits *****************
  4085 ;; Defined at:
  4086 ;;		line 86 in file "./lcd4bit.h"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  a               2    0[COMMON] unsigned int 
  4089 ;;  b               2    2[COMMON] unsigned int 
  4090 ;;  c               2    4[COMMON] unsigned int 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      unsigned char 
  4095 ;; Registers used:
  4096 ;;		wreg
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         6       0       0       0       0
  4103 ;;      Locals:         0       0       0       0       0
  4104 ;;      Temps:          1       0       0       0       0
  4105 ;;      Totals:         7       0       0       0       0
  4106 ;;Total ram usage:        7 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_LCD_num
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function _intdigits_chardigits
  4117  1323                     _intdigits_chardigits:
  4118  1323                     l1918:	
  4119                           ;incstack = 0
  4120                           ; Regs used in _intdigits_chardigits: [wreg]
  4121                           
  4122                           
  4123                           ;./lcd4bit.h: 86: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 87: {;./lcd4bit.h: 88:     avv[0] = (unsigned char)a;
  4124  1323  0870               	movf	intdigits_chardigits@a,w
  4125  1324  00F6               	movwf	??_intdigits_chardigits
  4126  1325  0876               	movf	??_intdigits_chardigits,w
  4127  1326  1683               	bsf	3,5	;RP0=1, select bank1
  4128  1327  1303               	bcf	3,6	;RP1=0, select bank1
  4129  1328  00DC               	movwf	_avv^(0+128)
  4130                           
  4131                           ;./lcd4bit.h: 89:     avv[1] = (unsigned char)b;
  4132  1329  0872               	movf	intdigits_chardigits@b,w
  4133  132A  00F6               	movwf	??_intdigits_chardigits
  4134  132B  0876               	movf	??_intdigits_chardigits,w
  4135  132C  00DD               	movwf	(_avv^(0+128)+1)
  4136                           
  4137                           ;./lcd4bit.h: 90:     avv[2] = (unsigned char)c;
  4138  132D  0874               	movf	intdigits_chardigits@c,w
  4139  132E  00F6               	movwf	??_intdigits_chardigits
  4140  132F  0876               	movf	??_intdigits_chardigits,w
  4141  1330  00DE               	movwf	(_avv^(0+128)+2)
  4142  1331                     l127:
  4143  1331  0008               	return
  4144  1332                     __end_of_intdigits_chardigits:
  4145                           
  4146                           	psect	text26
  4147  1392                     __ptext26:	
  4148 ;; *************** function _bmp280_terminaldata *****************
  4149 ;; Defined at:
  4150 ;;		line 324 in file "main.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0, pclath, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4164 ;;      Params:         0       0       0       0       0
  4165 ;;      Locals:         0       0       0       0       0
  4166 ;;      Temps:          0       0       0       0       0
  4167 ;;      Totals:         0       0       0       0       0
  4168 ;;Total ram usage:        0 bytes
  4169 ;; Hardware stack levels used: 1
  4170 ;; Hardware stack levels required when called: 2
  4171 ;; This function calls:
  4172 ;;		_tx_sn
  4173 ;; This function is called by:
  4174 ;;		_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function _bmp280_terminaldata
  4180  1392                     _bmp280_terminaldata:
  4181  1392                     l3034:	
  4182                           ;incstack = 0
  4183                           ; Regs used in _bmp280_terminaldata: [wreg+status,2+status,0+pclath+cstack]
  4184                           
  4185                           
  4186                           ;main.c: 326:     tx_sn(hpa);
  4187  1392  1283               	bcf	3,5	;RP0=0, select bank0
  4188  1393  1303               	bcf	3,6	;RP1=0, select bank0
  4189  1394  082F               	movf	_hpa+1,w
  4190  1395  00FA               	movwf	tx_sn@val+1
  4191  1396  082E               	movf	_hpa,w
  4192  1397  00F9               	movwf	tx_sn@val
  4193  1398  120A  118A  210B  160A  118A  	fcall	_tx_sn
  4194                           
  4195                           ;main.c: 327:     tx_sn(altittude);
  4196  139D  1283               	bcf	3,5	;RP0=0, select bank0
  4197  139E  1303               	bcf	3,6	;RP1=0, select bank0
  4198  139F  082D               	movf	_altittude+1,w
  4199  13A0  00FA               	movwf	tx_sn@val+1
  4200  13A1  082C               	movf	_altittude,w
  4201  13A2  00F9               	movwf	tx_sn@val
  4202  13A3  120A  118A  210B  160A  118A  	fcall	_tx_sn
  4203  13A8                     l431:
  4204  13A8  0008               	return
  4205  13A9                     __end_of_bmp280_terminaldata:
  4206                           
  4207                           	psect	text27
  4208  010B                     __ptext27:	
  4209 ;; *************** function _tx_sn *****************
  4210 ;; Defined at:
  4211 ;;		line 27 in file "./uart.h"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  val             2    9[COMMON] unsigned int 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  remainder       2   12[BANK0 ] int 
  4216 ;;  result1         2   10[BANK0 ] int 
  4217 ;;  digit2          2    8[BANK0 ] int 
  4218 ;;  digit1          2    6[BANK0 ] int 
  4219 ;;  digit3          2    4[BANK0 ] int 
  4220 ;;  result          2    2[BANK0 ] int 
  4221 ;;  digit4          2    0[BANK0 ] int 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4231 ;;      Params:         2       0       0       0       0
  4232 ;;      Locals:         0      14       0       0       0
  4233 ;;      Temps:          0       0       0       0       0
  4234 ;;      Totals:         2      14       0       0       0
  4235 ;;Total ram usage:       16 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 1
  4238 ;; This function calls:
  4239 ;;		___awdiv
  4240 ;;		___awmod
  4241 ;;		___lwdiv
  4242 ;;		___lwmod
  4243 ;;		_tx
  4244 ;; This function is called by:
  4245 ;;		_print_serialnumber
  4246 ;;		_print_dht11data
  4247 ;;		_bmp280_terminaldata
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function _tx_sn
  4253  010B                     _tx_sn:
  4254  010B                     l2614:	
  4255                           ;incstack = 0
  4256                           ; Regs used in _tx_sn: [wreg+status,2+status,0+pclath+cstack]
  4257                           
  4258                           
  4259                           ;./uart.h: 27: void tx_sn (unsigned int val);./uart.h: 28: {;./uart.h: 29:     int remai
      +                          nder, digit1, digit2, digit3, digit4, result, result1;;./uart.h: 30:     if (val<=9)
  4260  010B  3000               	movlw	0
  4261  010C  027A               	subwf	tx_sn@val+1,w
  4262  010D  300A               	movlw	10
  4263  010E  1903               	skipnz
  4264  010F  0279               	subwf	tx_sn@val,w
  4265  0110  1803               	skipnc
  4266  0111  2913               	goto	u2681
  4267  0112  2914               	goto	u2680
  4268  0113                     u2681:
  4269  0113  291C               	goto	l2618
  4270  0114                     u2680:
  4271  0114                     l2616:
  4272                           
  4273                           ;./uart.h: 31:     {;./uart.h: 32:        tx(val+0x30);
  4274  0114  0879               	movf	tx_sn@val,w
  4275  0115  3E30               	addlw	48
  4276  0116  160A  118A  22E7  120A  118A  	fcall	_tx
  4277                           
  4278                           ;./uart.h: 33:     }
  4279  011B  2A9C               	goto	l162
  4280  011C                     l2618:
  4281  011C  3000               	movlw	0
  4282  011D  027A               	subwf	tx_sn@val+1,w
  4283  011E  300A               	movlw	10
  4284  011F  1903               	skipnz
  4285  0120  0279               	subwf	tx_sn@val,w
  4286  0121  1C03               	skipc
  4287  0122  2924               	goto	u2691
  4288  0123  2925               	goto	u2690
  4289  0124                     u2691:
  4290  0124  2969               	goto	l2632
  4291  0125                     u2690:
  4292  0125                     l2620:
  4293  0125  3000               	movlw	0
  4294  0126  027A               	subwf	tx_sn@val+1,w
  4295  0127  3064               	movlw	100
  4296  0128  1903               	skipnz
  4297  0129  0279               	subwf	tx_sn@val,w
  4298  012A  1803               	skipnc
  4299  012B  292D               	goto	u2701
  4300  012C  292E               	goto	u2700
  4301  012D                     u2701:
  4302  012D  2969               	goto	l2632
  4303  012E                     u2700:
  4304  012E                     l2622:
  4305                           
  4306                           ;./uart.h: 35:     {;./uart.h: 36:         remainder = val % 10;
  4307  012E  300A               	movlw	10
  4308  012F  00F0               	movwf	___lwmod@divisor
  4309  0130  3000               	movlw	0
  4310  0131  00F1               	movwf	___lwmod@divisor+1
  4311  0132  087A               	movf	tx_sn@val+1,w
  4312  0133  00F3               	movwf	___lwmod@dividend+1
  4313  0134  0879               	movf	tx_sn@val,w
  4314  0135  00F2               	movwf	___lwmod@dividend
  4315  0136  160A  118A  2457  120A  118A  	fcall	___lwmod
  4316  013B  0871               	movf	?___lwmod+1,w
  4317  013C  1283               	bcf	3,5	;RP0=0, select bank0
  4318  013D  1303               	bcf	3,6	;RP1=0, select bank0
  4319  013E  00D4               	movwf	tx_sn@remainder+1
  4320  013F  0870               	movf	?___lwmod,w
  4321  0140  00D3               	movwf	tx_sn@remainder
  4322  0141                     l2624:
  4323                           
  4324                           ;./uart.h: 37:         digit1 = remainder;
  4325  0141  0854               	movf	tx_sn@remainder+1,w
  4326  0142  00CE               	movwf	tx_sn@digit1+1
  4327  0143  0853               	movf	tx_sn@remainder,w
  4328  0144  00CD               	movwf	tx_sn@digit1
  4329  0145                     l2626:
  4330                           
  4331                           ;./uart.h: 38:         digit2 = val/10;
  4332  0145  300A               	movlw	10
  4333  0146  00F0               	movwf	___lwdiv@divisor
  4334  0147  3000               	movlw	0
  4335  0148  00F1               	movwf	___lwdiv@divisor+1
  4336  0149  087A               	movf	tx_sn@val+1,w
  4337  014A  00F3               	movwf	___lwdiv@dividend+1
  4338  014B  0879               	movf	tx_sn@val,w
  4339  014C  00F2               	movwf	___lwdiv@dividend
  4340  014D  160A  118A  2602  120A  118A  	fcall	___lwdiv
  4341  0152  0871               	movf	?___lwdiv+1,w
  4342  0153  1283               	bcf	3,5	;RP0=0, select bank0
  4343  0154  1303               	bcf	3,6	;RP1=0, select bank0
  4344  0155  00D0               	movwf	tx_sn@digit2+1
  4345  0156  0870               	movf	?___lwdiv,w
  4346  0157  00CF               	movwf	tx_sn@digit2
  4347  0158                     l2628:
  4348                           
  4349                           ;./uart.h: 39:         tx(digit2+0x30);
  4350  0158  084F               	movf	tx_sn@digit2,w
  4351  0159  3E30               	addlw	48
  4352  015A  160A  118A  22E7  120A  118A  	fcall	_tx
  4353  015F                     l2630:
  4354                           
  4355                           ;./uart.h: 40:         tx(digit1+0x30);
  4356  015F  1283               	bcf	3,5	;RP0=0, select bank0
  4357  0160  1303               	bcf	3,6	;RP1=0, select bank0
  4358  0161  084D               	movf	tx_sn@digit1,w
  4359  0162  3E30               	addlw	48
  4360  0163  160A  118A  22E7  120A  118A  	fcall	_tx
  4361                           
  4362                           ;./uart.h: 41:     }
  4363  0168  2A9C               	goto	l162
  4364  0169                     l2632:
  4365  0169  3000               	movlw	0
  4366  016A  027A               	subwf	tx_sn@val+1,w
  4367  016B  3064               	movlw	100
  4368  016C  1903               	skipnz
  4369  016D  0279               	subwf	tx_sn@val,w
  4370  016E  1C03               	skipc
  4371  016F  2971               	goto	u2711
  4372  0170  2972               	goto	u2710
  4373  0171                     u2711:
  4374  0171  29E9               	goto	l2650
  4375  0172                     u2710:
  4376  0172                     l2634:
  4377  0172  3003               	movlw	3
  4378  0173  027A               	subwf	tx_sn@val+1,w
  4379  0174  30E8               	movlw	232
  4380  0175  1903               	skipnz
  4381  0176  0279               	subwf	tx_sn@val,w
  4382  0177  1803               	skipnc
  4383  0178  297A               	goto	u2721
  4384  0179  297B               	goto	u2720
  4385  017A                     u2721:
  4386  017A  29E9               	goto	l2650
  4387  017B                     u2720:
  4388  017B                     l2636:
  4389                           
  4390                           ;./uart.h: 43:     {;./uart.h: 44:         remainder = val % 10;
  4391  017B  300A               	movlw	10
  4392  017C  00F0               	movwf	___lwmod@divisor
  4393  017D  3000               	movlw	0
  4394  017E  00F1               	movwf	___lwmod@divisor+1
  4395  017F  087A               	movf	tx_sn@val+1,w
  4396  0180  00F3               	movwf	___lwmod@dividend+1
  4397  0181  0879               	movf	tx_sn@val,w
  4398  0182  00F2               	movwf	___lwmod@dividend
  4399  0183  160A  118A  2457  120A  118A  	fcall	___lwmod
  4400  0188  0871               	movf	?___lwmod+1,w
  4401  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4402  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4403  018B  00D4               	movwf	tx_sn@remainder+1
  4404  018C  0870               	movf	?___lwmod,w
  4405  018D  00D3               	movwf	tx_sn@remainder
  4406                           
  4407                           ;./uart.h: 45:         result1 = val /10;
  4408  018E  300A               	movlw	10
  4409  018F  00F0               	movwf	___lwdiv@divisor
  4410  0190  3000               	movlw	0
  4411  0191  00F1               	movwf	___lwdiv@divisor+1
  4412  0192  087A               	movf	tx_sn@val+1,w
  4413  0193  00F3               	movwf	___lwdiv@dividend+1
  4414  0194  0879               	movf	tx_sn@val,w
  4415  0195  00F2               	movwf	___lwdiv@dividend
  4416  0196  160A  118A  2602  120A  118A  	fcall	___lwdiv
  4417  019B  0871               	movf	?___lwdiv+1,w
  4418  019C  1283               	bcf	3,5	;RP0=0, select bank0
  4419  019D  1303               	bcf	3,6	;RP1=0, select bank0
  4420  019E  00D2               	movwf	tx_sn@result1+1
  4421  019F  0870               	movf	?___lwdiv,w
  4422  01A0  00D1               	movwf	tx_sn@result1
  4423  01A1                     l2638:
  4424                           
  4425                           ;./uart.h: 46:         digit1 = remainder;
  4426  01A1  0854               	movf	tx_sn@remainder+1,w
  4427  01A2  00CE               	movwf	tx_sn@digit1+1
  4428  01A3  0853               	movf	tx_sn@remainder,w
  4429  01A4  00CD               	movwf	tx_sn@digit1
  4430  01A5                     l2640:
  4431                           
  4432                           ;./uart.h: 47:         remainder = result1%10;
  4433  01A5  300A               	movlw	10
  4434  01A6  00F0               	movwf	___awmod@divisor
  4435  01A7  3000               	movlw	0
  4436  01A8  00F1               	movwf	___awmod@divisor+1
  4437  01A9  0852               	movf	tx_sn@result1+1,w
  4438  01AA  00F3               	movwf	___awmod@dividend+1
  4439  01AB  0851               	movf	tx_sn@result1,w
  4440  01AC  00F2               	movwf	___awmod@dividend
  4441  01AD  160A  118A  26DA  120A  118A  	fcall	___awmod
  4442  01B2  0871               	movf	?___awmod+1,w
  4443  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4444  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4445  01B5  00D4               	movwf	tx_sn@remainder+1
  4446  01B6  0870               	movf	?___awmod,w
  4447  01B7  00D3               	movwf	tx_sn@remainder
  4448                           
  4449                           ;./uart.h: 48:         digit2 = remainder;
  4450  01B8  0854               	movf	tx_sn@remainder+1,w
  4451  01B9  00D0               	movwf	tx_sn@digit2+1
  4452  01BA  0853               	movf	tx_sn@remainder,w
  4453  01BB  00CF               	movwf	tx_sn@digit2
  4454  01BC                     l2642:
  4455                           
  4456                           ;./uart.h: 49:         digit3 = result1/10;
  4457  01BC  300A               	movlw	10
  4458  01BD  00F0               	movwf	___awdiv@divisor
  4459  01BE  3000               	movlw	0
  4460  01BF  00F1               	movwf	___awdiv@divisor+1
  4461  01C0  0852               	movf	tx_sn@result1+1,w
  4462  01C1  00F3               	movwf	___awdiv@dividend+1
  4463  01C2  0851               	movf	tx_sn@result1,w
  4464  01C3  00F2               	movwf	___awdiv@dividend
  4465  01C4  160A  118A  2799  120A  118A  	fcall	___awdiv
  4466  01C9  0871               	movf	?___awdiv+1,w
  4467  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  4468  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  4469  01CC  00CC               	movwf	tx_sn@digit3+1
  4470  01CD  0870               	movf	?___awdiv,w
  4471  01CE  00CB               	movwf	tx_sn@digit3
  4472  01CF                     l2644:
  4473                           
  4474                           ;./uart.h: 50:         tx(digit3+0x30);
  4475  01CF  084B               	movf	tx_sn@digit3,w
  4476  01D0  3E30               	addlw	48
  4477  01D1  160A  118A  22E7  120A  118A  	fcall	_tx
  4478  01D6                     l2646:
  4479                           
  4480                           ;./uart.h: 51:         tx(digit2+0x30);
  4481  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  4482  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  4483  01D8  084F               	movf	tx_sn@digit2,w
  4484  01D9  3E30               	addlw	48
  4485  01DA  160A  118A  22E7  120A  118A  	fcall	_tx
  4486  01DF                     l2648:
  4487                           
  4488                           ;./uart.h: 52:         tx(digit1+0x30);
  4489  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  4490  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  4491  01E1  084D               	movf	tx_sn@digit1,w
  4492  01E2  3E30               	addlw	48
  4493  01E3  160A  118A  22E7  120A  118A  	fcall	_tx
  4494                           
  4495                           ;./uart.h: 53:     }
  4496  01E8  2A9C               	goto	l162
  4497  01E9                     l2650:
  4498  01E9  3003               	movlw	3
  4499  01EA  027A               	subwf	tx_sn@val+1,w
  4500  01EB  30E8               	movlw	232
  4501  01EC  1903               	skipnz
  4502  01ED  0279               	subwf	tx_sn@val,w
  4503  01EE  1C03               	skipc
  4504  01EF  29F1               	goto	u2731
  4505  01F0  29F2               	goto	u2730
  4506  01F1                     u2731:
  4507  01F1  2A9C               	goto	l158
  4508  01F2                     u2730:
  4509  01F2                     l2652:
  4510  01F2  3027               	movlw	39
  4511  01F3  027A               	subwf	tx_sn@val+1,w
  4512  01F4  300F               	movlw	15
  4513  01F5  1903               	skipnz
  4514  01F6  0279               	subwf	tx_sn@val,w
  4515  01F7  1803               	skipnc
  4516  01F8  29FA               	goto	u2741
  4517  01F9  29FB               	goto	u2740
  4518  01FA                     u2741:
  4519  01FA  2A9C               	goto	l158
  4520  01FB                     u2740:
  4521  01FB                     l2654:
  4522                           
  4523                           ;./uart.h: 55:     {;./uart.h: 56:         remainder = val % 10;
  4524  01FB  300A               	movlw	10
  4525  01FC  00F0               	movwf	___lwmod@divisor
  4526  01FD  3000               	movlw	0
  4527  01FE  00F1               	movwf	___lwmod@divisor+1
  4528  01FF  087A               	movf	tx_sn@val+1,w
  4529  0200  00F3               	movwf	___lwmod@dividend+1
  4530  0201  0879               	movf	tx_sn@val,w
  4531  0202  00F2               	movwf	___lwmod@dividend
  4532  0203  160A  118A  2457  120A  118A  	fcall	___lwmod
  4533  0208  0871               	movf	?___lwmod+1,w
  4534  0209  1283               	bcf	3,5	;RP0=0, select bank0
  4535  020A  1303               	bcf	3,6	;RP1=0, select bank0
  4536  020B  00D4               	movwf	tx_sn@remainder+1
  4537  020C  0870               	movf	?___lwmod,w
  4538  020D  00D3               	movwf	tx_sn@remainder
  4539                           
  4540                           ;./uart.h: 57:         result1 = val /10;
  4541  020E  300A               	movlw	10
  4542  020F  00F0               	movwf	___lwdiv@divisor
  4543  0210  3000               	movlw	0
  4544  0211  00F1               	movwf	___lwdiv@divisor+1
  4545  0212  087A               	movf	tx_sn@val+1,w
  4546  0213  00F3               	movwf	___lwdiv@dividend+1
  4547  0214  0879               	movf	tx_sn@val,w
  4548  0215  00F2               	movwf	___lwdiv@dividend
  4549  0216  160A  118A  2602  120A  118A  	fcall	___lwdiv
  4550  021B  0871               	movf	?___lwdiv+1,w
  4551  021C  1283               	bcf	3,5	;RP0=0, select bank0
  4552  021D  1303               	bcf	3,6	;RP1=0, select bank0
  4553  021E  00D2               	movwf	tx_sn@result1+1
  4554  021F  0870               	movf	?___lwdiv,w
  4555  0220  00D1               	movwf	tx_sn@result1
  4556  0221                     l2656:
  4557                           
  4558                           ;./uart.h: 58:         digit1 = remainder;
  4559  0221  0854               	movf	tx_sn@remainder+1,w
  4560  0222  00CE               	movwf	tx_sn@digit1+1
  4561  0223  0853               	movf	tx_sn@remainder,w
  4562  0224  00CD               	movwf	tx_sn@digit1
  4563  0225                     l2658:
  4564                           
  4565                           ;./uart.h: 59:         remainder = result1%10;
  4566  0225  300A               	movlw	10
  4567  0226  00F0               	movwf	___awmod@divisor
  4568  0227  3000               	movlw	0
  4569  0228  00F1               	movwf	___awmod@divisor+1
  4570  0229  0852               	movf	tx_sn@result1+1,w
  4571  022A  00F3               	movwf	___awmod@dividend+1
  4572  022B  0851               	movf	tx_sn@result1,w
  4573  022C  00F2               	movwf	___awmod@dividend
  4574  022D  160A  118A  26DA  120A  118A  	fcall	___awmod
  4575  0232  0871               	movf	?___awmod+1,w
  4576  0233  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0234  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0235  00D4               	movwf	tx_sn@remainder+1
  4579  0236  0870               	movf	?___awmod,w
  4580  0237  00D3               	movwf	tx_sn@remainder
  4581                           
  4582                           ;./uart.h: 60:         digit2 = remainder;
  4583  0238  0854               	movf	tx_sn@remainder+1,w
  4584  0239  00D0               	movwf	tx_sn@digit2+1
  4585  023A  0853               	movf	tx_sn@remainder,w
  4586  023B  00CF               	movwf	tx_sn@digit2
  4587  023C                     l2660:
  4588                           
  4589                           ;./uart.h: 61:         result = result1/10;
  4590  023C  300A               	movlw	10
  4591  023D  00F0               	movwf	___awdiv@divisor
  4592  023E  3000               	movlw	0
  4593  023F  00F1               	movwf	___awdiv@divisor+1
  4594  0240  0852               	movf	tx_sn@result1+1,w
  4595  0241  00F3               	movwf	___awdiv@dividend+1
  4596  0242  0851               	movf	tx_sn@result1,w
  4597  0243  00F2               	movwf	___awdiv@dividend
  4598  0244  160A  118A  2799  120A  118A  	fcall	___awdiv
  4599  0249  0871               	movf	?___awdiv+1,w
  4600  024A  1283               	bcf	3,5	;RP0=0, select bank0
  4601  024B  1303               	bcf	3,6	;RP1=0, select bank0
  4602  024C  00CA               	movwf	tx_sn@result+1
  4603  024D  0870               	movf	?___awdiv,w
  4604  024E  00C9               	movwf	tx_sn@result
  4605  024F                     l2662:
  4606                           
  4607                           ;./uart.h: 62:         remainder = result%10;
  4608  024F  300A               	movlw	10
  4609  0250  00F0               	movwf	___awmod@divisor
  4610  0251  3000               	movlw	0
  4611  0252  00F1               	movwf	___awmod@divisor+1
  4612  0253  084A               	movf	tx_sn@result+1,w
  4613  0254  00F3               	movwf	___awmod@dividend+1
  4614  0255  0849               	movf	tx_sn@result,w
  4615  0256  00F2               	movwf	___awmod@dividend
  4616  0257  160A  118A  26DA  120A  118A  	fcall	___awmod
  4617  025C  0871               	movf	?___awmod+1,w
  4618  025D  1283               	bcf	3,5	;RP0=0, select bank0
  4619  025E  1303               	bcf	3,6	;RP1=0, select bank0
  4620  025F  00D4               	movwf	tx_sn@remainder+1
  4621  0260  0870               	movf	?___awmod,w
  4622  0261  00D3               	movwf	tx_sn@remainder
  4623                           
  4624                           ;./uart.h: 63:         digit3=remainder;
  4625  0262  0854               	movf	tx_sn@remainder+1,w
  4626  0263  00CC               	movwf	tx_sn@digit3+1
  4627  0264  0853               	movf	tx_sn@remainder,w
  4628  0265  00CB               	movwf	tx_sn@digit3
  4629  0266                     l2664:
  4630                           
  4631                           ;./uart.h: 64:         digit4 = result/10;
  4632  0266  300A               	movlw	10
  4633  0267  00F0               	movwf	___awdiv@divisor
  4634  0268  3000               	movlw	0
  4635  0269  00F1               	movwf	___awdiv@divisor+1
  4636  026A  084A               	movf	tx_sn@result+1,w
  4637  026B  00F3               	movwf	___awdiv@dividend+1
  4638  026C  0849               	movf	tx_sn@result,w
  4639  026D  00F2               	movwf	___awdiv@dividend
  4640  026E  160A  118A  2799  120A  118A  	fcall	___awdiv
  4641  0273  0871               	movf	?___awdiv+1,w
  4642  0274  1283               	bcf	3,5	;RP0=0, select bank0
  4643  0275  1303               	bcf	3,6	;RP1=0, select bank0
  4644  0276  00C8               	movwf	tx_sn@digit4+1
  4645  0277  0870               	movf	?___awdiv,w
  4646  0278  00C7               	movwf	tx_sn@digit4
  4647  0279                     l2666:
  4648                           
  4649                           ;./uart.h: 65:         tx(digit4+0x30);
  4650  0279  0847               	movf	tx_sn@digit4,w
  4651  027A  3E30               	addlw	48
  4652  027B  160A  118A  22E7  120A  118A  	fcall	_tx
  4653  0280                     l2668:
  4654                           
  4655                           ;./uart.h: 66:         tx(digit3+0x30);
  4656  0280  1283               	bcf	3,5	;RP0=0, select bank0
  4657  0281  1303               	bcf	3,6	;RP1=0, select bank0
  4658  0282  084B               	movf	tx_sn@digit3,w
  4659  0283  3E30               	addlw	48
  4660  0284  160A  118A  22E7  120A  118A  	fcall	_tx
  4661  0289                     l2670:
  4662                           
  4663                           ;./uart.h: 67:         tx(digit2+0x30);
  4664  0289  1283               	bcf	3,5	;RP0=0, select bank0
  4665  028A  1303               	bcf	3,6	;RP1=0, select bank0
  4666  028B  084F               	movf	tx_sn@digit2,w
  4667  028C  3E30               	addlw	48
  4668  028D  160A  118A  22E7  120A  118A  	fcall	_tx
  4669  0292                     l2672:
  4670                           
  4671                           ;./uart.h: 68:         tx(digit1+0x30);
  4672  0292  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0293  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0294  084D               	movf	tx_sn@digit1,w
  4675  0295  3E30               	addlw	48
  4676  0296  160A  118A  22E7  120A  118A  	fcall	_tx
  4677  029B  2A9C               	goto	l162
  4678  029C                     l158:
  4679  029C                     l162:
  4680  029C  0008               	return
  4681  029D                     __end_of_tx_sn:
  4682                           
  4683                           	psect	text28
  4684  12E7                     __ptext28:	
  4685 ;; *************** function _tx *****************
  4686 ;; Defined at:
  4687 ;;		line 14 in file "./uart.h"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  a               1    wreg     unsigned char 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  a               1    0[COMMON] unsigned char 
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      unsigned char 
  4694 ;; Registers used:
  4695 ;;		wreg
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4701 ;;      Params:         0       0       0       0       0
  4702 ;;      Locals:         1       0       0       0       0
  4703 ;;      Temps:          0       0       0       0       0
  4704 ;;      Totals:         1       0       0       0       0
  4705 ;;Total ram usage:        1 bytes
  4706 ;; Hardware stack levels used: 1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_tx_sn
  4711 ;;		_main
  4712 ;;		_print_serialnumber
  4713 ;;		_print_analogvoltages
  4714 ;;		_print_dht11data
  4715 ;;		_rtc_terminal_data
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _tx
  4721  12E7                     _tx:
  4722                           
  4723                           ;incstack = 0
  4724                           ; Regs used in _tx: [wreg]
  4725                           ;tx@a stored from wreg
  4726  12E7  00F0               	movwf	tx@a
  4727  12E8                     l1920:
  4728                           
  4729                           ;./uart.h: 14: unsigned char tx(unsigned char a);./uart.h: 15: {;./uart.h: 16:  TXREG=a;
  4730  12E8  0870               	movf	tx@a,w
  4731  12E9  1283               	bcf	3,5	;RP0=0, select bank0
  4732  12EA  1303               	bcf	3,6	;RP1=0, select bank0
  4733  12EB  0099               	movwf	25	;volatile
  4734  12EC                     l143:	
  4735                           ;./uart.h: 17:  while(!TXIF);
  4736                           
  4737  12EC  1E0C               	btfss	12,4	;volatile
  4738  12ED  2AEF               	goto	u1231
  4739  12EE  2AF0               	goto	u1230
  4740  12EF                     u1231:
  4741  12EF  2AEC               	goto	l143
  4742  12F0                     u1230:
  4743  12F0                     l145:
  4744                           
  4745                           ;./uart.h: 18:  TXIF = 0;
  4746  12F0  120C               	bcf	12,4	;volatile
  4747  12F1                     l146:
  4748  12F1  0008               	return
  4749  12F2                     __end_of_tx:
  4750                           
  4751                           	psect	text29
  4752  1366                     __ptext29:	
  4753 ;; *************** function _bmp280_init *****************
  4754 ;; Defined at:
  4755 ;;		line 15 in file "./bmp280.h"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      void 
  4762 ;; Registers used:
  4763 ;;		wreg
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4769 ;;      Params:         0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0
  4772 ;;      Totals:         0       0       0       0       0
  4773 ;;Total ram usage:        0 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_main
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _bmp280_init
  4784  1366                     _bmp280_init:
  4785  1366                     l2906:	
  4786                           ;incstack = 0
  4787                           ; Regs used in _bmp280_init: [wreg]
  4788                           
  4789                           
  4790                           ;./bmp280.h: 17:     TRISC3=TRISC4=1;
  4791  1366  1683               	bsf	3,5	;RP0=1, select bank1
  4792  1367  1303               	bcf	3,6	;RP1=0, select bank1
  4793  1368  1607               	bsf	7,4	;volatile
  4794  1369  1A07               	btfsc	7,4	;volatile
  4795  136A  2B6C               	goto	u3201
  4796  136B  2B70               	goto	u3200
  4797  136C                     u3201:
  4798  136C  1683               	bsf	3,5	;RP0=1, select bank1
  4799  136D  1303               	bcf	3,6	;RP1=0, select bank1
  4800  136E  1587               	bsf	7,3	;volatile
  4801  136F  2B73               	goto	u3214
  4802  1370                     u3200:
  4803  1370  1683               	bsf	3,5	;RP0=1, select bank1
  4804  1371  1303               	bcf	3,6	;RP1=0, select bank1
  4805  1372  1187               	bcf	7,3	;volatile
  4806  1373                     u3214:
  4807  1373                     l2908:
  4808                           
  4809                           ;./bmp280.h: 18:     SSPCON=0x28;
  4810  1373  3028               	movlw	40
  4811  1374  1283               	bcf	3,5	;RP0=0, select bank0
  4812  1375  1303               	bcf	3,6	;RP1=0, select bank0
  4813  1376  0094               	movwf	20	;volatile
  4814                           
  4815                           ;./bmp280.h: 19:     SSPADD=((11059200/4)/100)-1;
  4816  1377  30FF               	movlw	255
  4817  1378  1683               	bsf	3,5	;RP0=1, select bank1
  4818  1379  1303               	bcf	3,6	;RP1=0, select bank1
  4819  137A  0093               	movwf	19	;volatile
  4820  137B                     l267:
  4821  137B  0008               	return
  4822  137C                     __end_of_bmp280_init:
  4823                           
  4824                           	psect	text30
  4825  0A3F                     __ptext30:	
  4826 ;; *************** function _bmp280_getdata *****************
  4827 ;; Defined at:
  4828 ;;		line 257 in file "main.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0, pclath, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0
  4844 ;;      Temps:          4       0       0       0       0
  4845 ;;      Totals:         4       0       0       0       0
  4846 ;;Total ram usage:        4 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; Hardware stack levels required when called: 3
  4849 ;; This function calls:
  4850 ;;		_bmp280_read_byte
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function _bmp280_getdata
  4858  0A3F                     _bmp280_getdata:
  4859  0A3F                     l2990:	
  4860                           ;incstack = 0
  4861                           ; Regs used in _bmp280_getdata: [wreg+status,2+status,0+pclath+cstack]
  4862                           
  4863                           
  4864                           ;main.c: 259:         aa=(bmp280_read_byte(0xAA));
  4865  0A3F  30AA               	movlw	170
  4866  0A40  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  4867  0A45  00F4               	movwf	??_bmp280_getdata
  4868  0A46  01F5               	clrf	??_bmp280_getdata+1
  4869  0A47  01F6               	clrf	??_bmp280_getdata+2
  4870  0A48  01F7               	clrf	??_bmp280_getdata+3
  4871  0A49  0877               	movf	??_bmp280_getdata+3,w
  4872  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  4873  0A4B  1303               	bcf	3,6	;RP1=0, select bank1
  4874  0A4C  00DB               	movwf	(_aa+3)^(0+128)
  4875  0A4D  0876               	movf	??_bmp280_getdata+2,w
  4876  0A4E  00DA               	movwf	(_aa+2)^(0+128)
  4877  0A4F  0875               	movf	??_bmp280_getdata+1,w
  4878  0A50  00D9               	movwf	(_aa+1)^(0+128)
  4879  0A51  0874               	movf	??_bmp280_getdata,w
  4880  0A52  00D8               	movwf	_aa^(0+128)
  4881                           
  4882                           ;main.c: 260:         ab=(bmp280_read_byte(0xAB));
  4883  0A53  30AB               	movlw	171
  4884  0A54  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  4885  0A59  00F4               	movwf	??_bmp280_getdata
  4886  0A5A  01F5               	clrf	??_bmp280_getdata+1
  4887  0A5B  01F6               	clrf	??_bmp280_getdata+2
  4888  0A5C  01F7               	clrf	??_bmp280_getdata+3
  4889  0A5D  0877               	movf	??_bmp280_getdata+3,w
  4890  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  4891  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  4892  0A60  00D7               	movwf	(_ab+3)^(0+128)
  4893  0A61  0876               	movf	??_bmp280_getdata+2,w
  4894  0A62  00D6               	movwf	(_ab+2)^(0+128)
  4895  0A63  0875               	movf	??_bmp280_getdata+1,w
  4896  0A64  00D5               	movwf	(_ab+1)^(0+128)
  4897  0A65  0874               	movf	??_bmp280_getdata,w
  4898  0A66  00D4               	movwf	_ab^(0+128)
  4899                           
  4900                           ;main.c: 261:         ac=(bmp280_read_byte(0xAC));
  4901  0A67  30AC               	movlw	172
  4902  0A68  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  4903  0A6D  00F4               	movwf	??_bmp280_getdata
  4904  0A6E  01F5               	clrf	??_bmp280_getdata+1
  4905  0A6F  01F6               	clrf	??_bmp280_getdata+2
  4906  0A70  01F7               	clrf	??_bmp280_getdata+3
  4907  0A71  0877               	movf	??_bmp280_getdata+3,w
  4908  0A72  1683               	bsf	3,5	;RP0=1, select bank1
  4909  0A73  1303               	bcf	3,6	;RP1=0, select bank1
  4910  0A74  00D3               	movwf	(_ac+3)^(0+128)
  4911  0A75  0876               	movf	??_bmp280_getdata+2,w
  4912  0A76  00D2               	movwf	(_ac+2)^(0+128)
  4913  0A77  0875               	movf	??_bmp280_getdata+1,w
  4914  0A78  00D1               	movwf	(_ac+1)^(0+128)
  4915  0A79  0874               	movf	??_bmp280_getdata,w
  4916  0A7A  00D0               	movwf	_ac^(0+128)
  4917                           
  4918                           ;main.c: 262:         ad=(bmp280_read_byte(0xAD));
  4919  0A7B  30AD               	movlw	173
  4920  0A7C  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  4921  0A81  00F4               	movwf	??_bmp280_getdata
  4922  0A82  01F5               	clrf	??_bmp280_getdata+1
  4923  0A83  01F6               	clrf	??_bmp280_getdata+2
  4924  0A84  01F7               	clrf	??_bmp280_getdata+3
  4925  0A85  0877               	movf	??_bmp280_getdata+3,w
  4926  0A86  1683               	bsf	3,5	;RP0=1, select bank1
  4927  0A87  1303               	bcf	3,6	;RP1=0, select bank1
  4928  0A88  00CF               	movwf	(_ad+3)^(0+128)
  4929  0A89  0876               	movf	??_bmp280_getdata+2,w
  4930  0A8A  00CE               	movwf	(_ad+2)^(0+128)
  4931  0A8B  0875               	movf	??_bmp280_getdata+1,w
  4932  0A8C  00CD               	movwf	(_ad+1)^(0+128)
  4933  0A8D  0874               	movf	??_bmp280_getdata,w
  4934  0A8E  00CC               	movwf	_ad^(0+128)
  4935                           
  4936                           ;main.c: 263:         ae=(bmp280_read_byte(0xAE));
  4937  0A8F  30AE               	movlw	174
  4938  0A90  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  4939  0A95  00F4               	movwf	??_bmp280_getdata
  4940  0A96  01F5               	clrf	??_bmp280_getdata+1
  4941  0A97  01F6               	clrf	??_bmp280_getdata+2
  4942  0A98  01F7               	clrf	??_bmp280_getdata+3
  4943  0A99  0877               	movf	??_bmp280_getdata+3,w
  4944  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  4945  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  4946  0A9C  00CB               	movwf	(_ae+3)^(0+128)
  4947  0A9D  0876               	movf	??_bmp280_getdata+2,w
  4948  0A9E  00CA               	movwf	(_ae+2)^(0+128)
  4949  0A9F  0875               	movf	??_bmp280_getdata+1,w
  4950  0AA0  00C9               	movwf	(_ae+1)^(0+128)
  4951  0AA1  0874               	movf	??_bmp280_getdata,w
  4952  0AA2  00C8               	movwf	_ae^(0+128)
  4953                           
  4954                           ;main.c: 264:         af=(bmp280_read_byte(0xAF));
  4955  0AA3  30AF               	movlw	175
  4956  0AA4  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  4957  0AA9  00F4               	movwf	??_bmp280_getdata
  4958  0AAA  01F5               	clrf	??_bmp280_getdata+1
  4959  0AAB  01F6               	clrf	??_bmp280_getdata+2
  4960  0AAC  01F7               	clrf	??_bmp280_getdata+3
  4961  0AAD  0877               	movf	??_bmp280_getdata+3,w
  4962  0AAE  1683               	bsf	3,5	;RP0=1, select bank1
  4963  0AAF  1303               	bcf	3,6	;RP1=0, select bank1
  4964  0AB0  00C7               	movwf	(_af+3)^(0+128)
  4965  0AB1  0876               	movf	??_bmp280_getdata+2,w
  4966  0AB2  00C6               	movwf	(_af+2)^(0+128)
  4967  0AB3  0875               	movf	??_bmp280_getdata+1,w
  4968  0AB4  00C5               	movwf	(_af+1)^(0+128)
  4969  0AB5  0874               	movf	??_bmp280_getdata,w
  4970  0AB6  00C4               	movwf	_af^(0+128)
  4971                           
  4972                           ;main.c: 266:         b0=(bmp280_read_byte(0xB0));
  4973  0AB7  30B0               	movlw	176
  4974  0AB8  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  4975  0ABD  00F4               	movwf	??_bmp280_getdata
  4976  0ABE  01F5               	clrf	??_bmp280_getdata+1
  4977  0ABF  01F6               	clrf	??_bmp280_getdata+2
  4978  0AC0  01F7               	clrf	??_bmp280_getdata+3
  4979  0AC1  0877               	movf	??_bmp280_getdata+3,w
  4980  0AC2  1683               	bsf	3,5	;RP0=1, select bank1
  4981  0AC3  1303               	bcf	3,6	;RP1=0, select bank1
  4982  0AC4  00C3               	movwf	(_b0+3)^(0+128)
  4983  0AC5  0876               	movf	??_bmp280_getdata+2,w
  4984  0AC6  00C2               	movwf	(_b0+2)^(0+128)
  4985  0AC7  0875               	movf	??_bmp280_getdata+1,w
  4986  0AC8  00C1               	movwf	(_b0+1)^(0+128)
  4987  0AC9  0874               	movf	??_bmp280_getdata,w
  4988  0ACA  00C0               	movwf	_b0^(0+128)
  4989                           
  4990                           ;main.c: 267:         b1=(bmp280_read_byte(0xB1));
  4991  0ACB  30B1               	movlw	177
  4992  0ACC  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  4993  0AD1  00F4               	movwf	??_bmp280_getdata
  4994  0AD2  01F5               	clrf	??_bmp280_getdata+1
  4995  0AD3  01F6               	clrf	??_bmp280_getdata+2
  4996  0AD4  01F7               	clrf	??_bmp280_getdata+3
  4997  0AD5  0877               	movf	??_bmp280_getdata+3,w
  4998  0AD6  1683               	bsf	3,5	;RP0=1, select bank1
  4999  0AD7  1303               	bcf	3,6	;RP1=0, select bank1
  5000  0AD8  00BF               	movwf	(_b1+3)^(0+128)
  5001  0AD9  0876               	movf	??_bmp280_getdata+2,w
  5002  0ADA  00BE               	movwf	(_b1+2)^(0+128)
  5003  0ADB  0875               	movf	??_bmp280_getdata+1,w
  5004  0ADC  00BD               	movwf	(_b1+1)^(0+128)
  5005  0ADD  0874               	movf	??_bmp280_getdata,w
  5006  0ADE  00BC               	movwf	_b1^(0+128)
  5007                           
  5008                           ;main.c: 268:         b2=(bmp280_read_byte(0xB2));
  5009  0ADF  30B2               	movlw	178
  5010  0AE0  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  5011  0AE5  00F4               	movwf	??_bmp280_getdata
  5012  0AE6  01F5               	clrf	??_bmp280_getdata+1
  5013  0AE7  01F6               	clrf	??_bmp280_getdata+2
  5014  0AE8  01F7               	clrf	??_bmp280_getdata+3
  5015  0AE9  0877               	movf	??_bmp280_getdata+3,w
  5016  0AEA  1683               	bsf	3,5	;RP0=1, select bank1
  5017  0AEB  1303               	bcf	3,6	;RP1=0, select bank1
  5018  0AEC  00BB               	movwf	(_b2+3)^(0+128)
  5019  0AED  0876               	movf	??_bmp280_getdata+2,w
  5020  0AEE  00BA               	movwf	(_b2+2)^(0+128)
  5021  0AEF  0875               	movf	??_bmp280_getdata+1,w
  5022  0AF0  00B9               	movwf	(_b2+1)^(0+128)
  5023  0AF1  0874               	movf	??_bmp280_getdata,w
  5024  0AF2  00B8               	movwf	_b2^(0+128)
  5025                           
  5026                           ;main.c: 269:         b5=(bmp280_read_byte(0xB5));
  5027  0AF3  30B5               	movlw	181
  5028  0AF4  160A  118A  2491  120A  158A  	fcall	_bmp280_read_byte
  5029  0AF9  00F4               	movwf	??_bmp280_getdata
  5030  0AFA  01F5               	clrf	??_bmp280_getdata+1
  5031  0AFB  01F6               	clrf	??_bmp280_getdata+2
  5032  0AFC  01F7               	clrf	??_bmp280_getdata+3
  5033  0AFD  0877               	movf	??_bmp280_getdata+3,w
  5034  0AFE  1683               	bsf	3,5	;RP0=1, select bank1
  5035  0AFF  1303               	bcf	3,6	;RP1=0, select bank1
  5036  0B00  00B3               	movwf	(_b5+3)^(0+128)
  5037  0B01  0876               	movf	??_bmp280_getdata+2,w
  5038  0B02  00B2               	movwf	(_b5+2)^(0+128)
  5039  0B03  0875               	movf	??_bmp280_getdata+1,w
  5040  0B04  00B1               	movwf	(_b5+1)^(0+128)
  5041  0B05  0874               	movf	??_bmp280_getdata,w
  5042  0B06  00B0               	movwf	_b5^(0+128)
  5043  0B07                     l414:
  5044  0B07  0008               	return
  5045  0B08                     __end_of_bmp280_getdata:
  5046                           
  5047                           	psect	text31
  5048  1491                     __ptext31:	
  5049 ;; *************** function _bmp280_read_byte *****************
  5050 ;; Defined at:
  5051 ;;		line 73 in file "./bmp280.h"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  addr            1    wreg     unsigned char 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  addr            1    2[COMMON] unsigned char 
  5056 ;;  rec             1    3[COMMON] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      unsigned char 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0, pclath, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5066 ;;      Params:         0       0       0       0       0
  5067 ;;      Locals:         2       0       0       0       0
  5068 ;;      Temps:          1       0       0       0       0
  5069 ;;      Totals:         3       0       0       0       0
  5070 ;;Total ram usage:        3 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 2
  5073 ;; This function calls:
  5074 ;;		_bmp280_nak
  5075 ;;		_bmp280_read
  5076 ;;		_bmp280_restart
  5077 ;;		_bmp280_send
  5078 ;;		_bmp280_stop
  5079 ;;		_bmp280_waitmssp
  5080 ;; This function is called by:
  5081 ;;		_bmp280_getdata
  5082 ;;		_uncompensated_pressure
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           
  5087                           ;psect for function _bmp280_read_byte
  5088  1491                     _bmp280_read_byte:
  5089                           
  5090                           ;incstack = 0
  5091                           ; Regs used in _bmp280_read_byte: [wreg+status,2+status,0+pclath+cstack]
  5092                           ;bmp280_read_byte@addr stored from wreg
  5093  1491  00F2               	movwf	bmp280_read_byte@addr
  5094  1492                     l304:	
  5095                           ;./bmp280.h: 73: unsigned char bmp280_read_byte(unsigned char addr);./bmp280.h: 74: {;./
      +                          bmp280.h: 75:     unsigned char rec;;./bmp280.h: 76: L: bmp280_restart();
  5096                           
  5097  1492                     l2756:
  5098  1492  160A  118A  22AF  160A  118A  	fcall	_bmp280_restart
  5099  1497                     l2758:
  5100                           
  5101                           ;./bmp280.h: 77:     SSPBUF=0xEE;
  5102  1497  30EE               	movlw	238
  5103  1498  1283               	bcf	3,5	;RP0=0, select bank0
  5104  1499  1303               	bcf	3,6	;RP1=0, select bank0
  5105  149A  0093               	movwf	19	;volatile
  5106  149B                     l2760:
  5107                           
  5108                           ;./bmp280.h: 78:     bmp280_waitmssp();
  5109  149B  160A  118A  2297  160A  118A  	fcall	_bmp280_waitmssp
  5110  14A0                     l305:	
  5111                           ;./bmp280.h: 79:     while(ACKSTAT){goto L;}
  5112                           
  5113  14A0  1683               	bsf	3,5	;RP0=1, select bank1
  5114  14A1  1303               	bcf	3,6	;RP1=0, select bank1
  5115  14A2  1B11               	btfsc	17,6	;volatile
  5116  14A3  2CA5               	goto	u2851
  5117  14A4  2CA6               	goto	u2850
  5118  14A5                     u2851:
  5119  14A5  2C92               	goto	l304
  5120  14A6                     u2850:
  5121  14A6                     l2762:
  5122                           
  5123                           ;./bmp280.h: 80:     bmp280_send(addr);
  5124  14A6  0872               	movf	bmp280_read_byte@addr,w
  5125  14A7  160A  118A  2332  160A  118A  	fcall	_bmp280_send
  5126  14AC                     l2764:
  5127                           
  5128                           ;./bmp280.h: 81:     bmp280_restart();
  5129  14AC  160A  118A  22AF  160A  118A  	fcall	_bmp280_restart
  5130  14B1                     l2766:
  5131                           
  5132                           ;./bmp280.h: 82:     bmp280_send(0xEF);
  5133  14B1  30EF               	movlw	239
  5134  14B2  160A  118A  2332  160A  118A  	fcall	_bmp280_send
  5135  14B7                     l2768:
  5136                           
  5137                           ;./bmp280.h: 83:     rec=bmp280_read();
  5138  14B7  160A  118A  22F2  160A  118A  	fcall	_bmp280_read
  5139  14BC  00F1               	movwf	??_bmp280_read_byte
  5140  14BD  0871               	movf	??_bmp280_read_byte,w
  5141  14BE  00F3               	movwf	bmp280_read_byte@rec
  5142  14BF                     l2770:
  5143                           
  5144                           ;./bmp280.h: 84:     bmp280_nak();
  5145  14BF  160A  118A  22D3  160A  118A  	fcall	_bmp280_nak
  5146  14C4                     l2772:
  5147                           
  5148                           ;./bmp280.h: 85:     bmp280_stop();
  5149  14C4  160A  118A  22B8  160A  118A  	fcall	_bmp280_stop
  5150                           
  5151                           ;./bmp280.h: 86:     return rec;
  5152  14C9  0873               	movf	bmp280_read_byte@rec,w
  5153  14CA                     l308:
  5154  14CA  0008               	return
  5155  14CB                     __end_of_bmp280_read_byte:
  5156                           
  5157                           	psect	text32
  5158  12B8                     __ptext32:	
  5159 ;; *************** function _bmp280_stop *****************
  5160 ;; Defined at:
  5161 ;;		line 26 in file "./bmp280.h"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;		None
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		status,2, status,0, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5175 ;;      Params:         0       0       0       0       0
  5176 ;;      Locals:         0       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0
  5178 ;;      Totals:         0       0       0       0       0
  5179 ;;Total ram usage:        0 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; Hardware stack levels required when called: 1
  5182 ;; This function calls:
  5183 ;;		_bmp280_waitmssp
  5184 ;; This function is called by:
  5185 ;;		_bmp280_send_byte
  5186 ;;		_bmp280_read_byte
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           
  5191                           ;psect for function _bmp280_stop
  5192  12B8                     _bmp280_stop:
  5193  12B8                     l1950:	
  5194                           ;incstack = 0
  5195                           ; Regs used in _bmp280_stop: [status,2+status,0+pclath+cstack]
  5196                           
  5197                           
  5198                           ;./bmp280.h: 28:     PEN=1;
  5199  12B8  1683               	bsf	3,5	;RP0=1, select bank1
  5200  12B9  1303               	bcf	3,6	;RP1=0, select bank1
  5201  12BA  1511               	bsf	17,2	;volatile
  5202  12BB                     l1952:
  5203                           
  5204                           ;./bmp280.h: 29:     bmp280_waitmssp();
  5205  12BB  160A  118A  2297  160A  118A  	fcall	_bmp280_waitmssp
  5206  12C0                     l273:
  5207  12C0  0008               	return
  5208  12C1                     __end_of_bmp280_stop:
  5209                           
  5210                           	psect	text33
  5211  1332                     __ptext33:	
  5212 ;; *************** function _bmp280_send *****************
  5213 ;; Defined at:
  5214 ;;		line 53 in file "./bmp280.h"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  dat             1    wreg     unsigned char 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  dat             1    0[COMMON] unsigned char 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		wreg, status,2, status,0, pclath, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5228 ;;      Params:         0       0       0       0       0
  5229 ;;      Locals:         1       0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0
  5231 ;;      Totals:         1       0       0       0       0
  5232 ;;Total ram usage:        1 bytes
  5233 ;; Hardware stack levels used: 1
  5234 ;; Hardware stack levels required when called: 1
  5235 ;; This function calls:
  5236 ;;		_bmp280_waitmssp
  5237 ;; This function is called by:
  5238 ;;		_bmp280_send_byte
  5239 ;;		_bmp280_read_byte
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           
  5244                           ;psect for function _bmp280_send
  5245  1332                     _bmp280_send:
  5246                           
  5247                           ;incstack = 0
  5248                           ; Regs used in _bmp280_send: [wreg+status,2+status,0+pclath+cstack]
  5249                           ;bmp280_send@dat stored from wreg
  5250  1332  00F0               	movwf	bmp280_send@dat
  5251  1333                     l291:	
  5252                           ;./bmp280.h: 53: void bmp280_send(unsigned char dat);./bmp280.h: 54: {;./bmp280.h: 55: L
      +                          1: SSPBUF=dat;
  5253                           
  5254  1333                     l1962:
  5255  1333  0870               	movf	bmp280_send@dat,w
  5256  1334  1283               	bcf	3,5	;RP0=0, select bank0
  5257  1335  1303               	bcf	3,6	;RP1=0, select bank0
  5258  1336  0093               	movwf	19	;volatile
  5259  1337                     l1964:
  5260                           
  5261                           ;./bmp280.h: 56:     bmp280_waitmssp();
  5262  1337  160A  118A  2297  160A  118A  	fcall	_bmp280_waitmssp
  5263  133C                     l292:	
  5264                           ;./bmp280.h: 57:     while(ACKSTAT){bmp280_restart;goto L1;}
  5265                           
  5266  133C  1683               	bsf	3,5	;RP0=1, select bank1
  5267  133D  1303               	bcf	3,6	;RP1=0, select bank1
  5268  133E  1B11               	btfsc	17,6	;volatile
  5269  133F  2B41               	goto	u1251
  5270  1340  2B42               	goto	u1250
  5271  1341                     u1251:
  5272  1341  2B33               	goto	l291
  5273  1342                     u1250:
  5274  1342                     l295:
  5275  1342  0008               	return
  5276  1343                     __end_of_bmp280_send:
  5277                           
  5278                           	psect	text34
  5279  12AF                     __ptext34:	
  5280 ;; *************** function _bmp280_restart *****************
  5281 ;; Defined at:
  5282 ;;		line 31 in file "./bmp280.h"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		status,2, status,0, pclath, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5296 ;;      Params:         0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0
  5299 ;;      Totals:         0       0       0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used: 1
  5302 ;; Hardware stack levels required when called: 1
  5303 ;; This function calls:
  5304 ;;		_bmp280_waitmssp
  5305 ;; This function is called by:
  5306 ;;		_bmp280_read_byte
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function _bmp280_restart
  5312  12AF                     _bmp280_restart:
  5313  12AF                     l1954:	
  5314                           ;incstack = 0
  5315                           ; Regs used in _bmp280_restart: [status,2+status,0+pclath+cstack]
  5316                           
  5317                           
  5318                           ;./bmp280.h: 33:     RSEN=1;
  5319  12AF  1683               	bsf	3,5	;RP0=1, select bank1
  5320  12B0  1303               	bcf	3,6	;RP1=0, select bank1
  5321  12B1  1491               	bsf	17,1	;volatile
  5322  12B2                     l1956:
  5323                           
  5324                           ;./bmp280.h: 34:     bmp280_waitmssp();
  5325  12B2  160A  118A  2297  160A  118A  	fcall	_bmp280_waitmssp
  5326  12B7                     l276:
  5327  12B7  0008               	return
  5328  12B8                     __end_of_bmp280_restart:
  5329                           
  5330                           	psect	text35
  5331  12F2                     __ptext35:	
  5332 ;; *************** function _bmp280_read *****************
  5333 ;; Defined at:
  5334 ;;		line 67 in file "./bmp280.h"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      unsigned char 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0, pclath, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5348 ;;      Params:         0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0
  5351 ;;      Totals:         0       0       0       0       0
  5352 ;;Total ram usage:        0 bytes
  5353 ;; Hardware stack levels used: 1
  5354 ;; Hardware stack levels required when called: 1
  5355 ;; This function calls:
  5356 ;;		_bmp280_waitmssp
  5357 ;; This function is called by:
  5358 ;;		_bmp280_read_byte
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           
  5363                           ;psect for function _bmp280_read
  5364  12F2                     _bmp280_read:
  5365  12F2                     l1966:	
  5366                           ;incstack = 0
  5367                           ; Regs used in _bmp280_read: [wreg+status,2+status,0+pclath+cstack]
  5368                           
  5369                           
  5370                           ;./bmp280.h: 69:     RCEN=1;
  5371  12F2  1683               	bsf	3,5	;RP0=1, select bank1
  5372  12F3  1303               	bcf	3,6	;RP1=0, select bank1
  5373  12F4  1591               	bsf	17,3	;volatile
  5374  12F5                     l1968:
  5375                           
  5376                           ;./bmp280.h: 70:     bmp280_waitmssp();
  5377  12F5  160A  118A  2297  160A  118A  	fcall	_bmp280_waitmssp
  5378  12FA                     l1970:
  5379                           
  5380                           ;./bmp280.h: 71:     return SSPBUF;
  5381  12FA  1283               	bcf	3,5	;RP0=0, select bank0
  5382  12FB  1303               	bcf	3,6	;RP1=0, select bank0
  5383  12FC  0813               	movf	19,w	;volatile
  5384  12FD                     l301:
  5385  12FD  0008               	return
  5386  12FE                     __end_of_bmp280_read:
  5387                           
  5388                           	psect	text36
  5389  12D3                     __ptext36:	
  5390 ;; *************** function _bmp280_nak *****************
  5391 ;; Defined at:
  5392 ;;		line 42 in file "./bmp280.h"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;		None
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;		None
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		status,2, status,0, pclath, cstack
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5406 ;;      Params:         0       0       0       0       0
  5407 ;;      Locals:         0       0       0       0       0
  5408 ;;      Temps:          0       0       0       0       0
  5409 ;;      Totals:         0       0       0       0       0
  5410 ;;Total ram usage:        0 bytes
  5411 ;; Hardware stack levels used: 1
  5412 ;; Hardware stack levels required when called: 1
  5413 ;; This function calls:
  5414 ;;		_bmp280_waitmssp
  5415 ;; This function is called by:
  5416 ;;		_bmp280_read_byte
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           
  5421                           ;psect for function _bmp280_nak
  5422  12D3                     _bmp280_nak:
  5423  12D3                     l1958:	
  5424                           ;incstack = 0
  5425                           ; Regs used in _bmp280_nak: [status,2+status,0+pclath+cstack]
  5426                           
  5427                           
  5428                           ;./bmp280.h: 44:     ACKDT=1;
  5429  12D3  1683               	bsf	3,5	;RP0=1, select bank1
  5430  12D4  1303               	bcf	3,6	;RP1=0, select bank1
  5431  12D5  1691               	bsf	17,5	;volatile
  5432                           
  5433                           ;./bmp280.h: 45:     ACKEN=1;
  5434  12D6  1611               	bsf	17,4	;volatile
  5435  12D7                     l1960:
  5436                           
  5437                           ;./bmp280.h: 46:     bmp280_waitmssp();
  5438  12D7  160A  118A  2297  160A  118A  	fcall	_bmp280_waitmssp
  5439  12DC                     l282:
  5440  12DC  0008               	return
  5441  12DD                     __end_of_bmp280_nak:
  5442                           
  5443                           	psect	text37
  5444  1297                     __ptext37:	
  5445 ;; *************** function _bmp280_waitmssp *****************
  5446 ;; Defined at:
  5447 ;;		line 48 in file "./bmp280.h"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		None
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       0       0       0       0
  5462 ;;      Locals:         0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0
  5464 ;;      Totals:         0       0       0       0       0
  5465 ;;Total ram usage:        0 bytes
  5466 ;; Hardware stack levels used: 1
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_bmp280_start
  5471 ;;		_bmp280_stop
  5472 ;;		_bmp280_restart
  5473 ;;		_bmp280_nak
  5474 ;;		_bmp280_send
  5475 ;;		_bmp280_read
  5476 ;;		_bmp280_read_byte
  5477 ;;		_bmp280_ack
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _bmp280_waitmssp
  5483  1297                     _bmp280_waitmssp:
  5484  1297                     l1884:	
  5485                           ;incstack = 0
  5486                           ; Regs used in _bmp280_waitmssp: []
  5487                           
  5488  1297                     l285:	
  5489                           ;./bmp280.h: 50:     while(!SSPIF);
  5490                           
  5491  1297  1283               	bcf	3,5	;RP0=0, select bank0
  5492  1298  1303               	bcf	3,6	;RP1=0, select bank0
  5493  1299  1D8C               	btfss	12,3	;volatile
  5494  129A  2A9C               	goto	u1181
  5495  129B  2A9D               	goto	u1180
  5496  129C                     u1181:
  5497  129C  2A97               	goto	l285
  5498  129D                     u1180:
  5499  129D                     l287:
  5500                           
  5501                           ;./bmp280.h: 51:     SSPIF=0;
  5502  129D  118C               	bcf	12,3	;volatile
  5503  129E                     l288:
  5504  129E  0008               	return
  5505  129F                     __end_of_bmp280_waitmssp:
  5506                           
  5507                           	psect	text38
  5508  1505                     __ptext38:	
  5509 ;; *************** function _bmp280_displaydata *****************
  5510 ;; Defined at:
  5511 ;;		line 312 in file "main.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5525 ;;      Params:         0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0
  5528 ;;      Totals:         0       0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 2
  5532 ;; This function calls:
  5533 ;;		_LCD_Command
  5534 ;;		_show
  5535 ;;		_show_multidigits
  5536 ;; This function is called by:
  5537 ;;		_main
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function _bmp280_displaydata
  5543  1505                     _bmp280_displaydata:
  5544  1505                     l3020:	
  5545                           ;incstack = 0
  5546                           ; Regs used in _bmp280_displaydata: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5547                           
  5548                           
  5549                           ;main.c: 314:     LCD_Command(0xD4);
  5550  1505  30D4               	movlw	212
  5551  1506  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  5552  150B                     l3022:
  5553                           
  5554                           ;main.c: 315:     show("hPa:");
  5555  150B  3059               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  5556  150C  160A  118A  23E1  160A  118A  	fcall	_show
  5557  1511                     l3024:
  5558                           
  5559                           ;main.c: 316:     LCD_Command(0xD9);
  5560  1511  30D9               	movlw	217
  5561  1512  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  5562  1517                     l3026:
  5563                           
  5564                           ;main.c: 317:     show_multidigits(hpa);
  5565  1517  1283               	bcf	3,5	;RP0=0, select bank0
  5566  1518  1303               	bcf	3,6	;RP1=0, select bank0
  5567  1519  082F               	movf	_hpa+1,w
  5568  151A  00FA               	movwf	show_multidigits@val+1
  5569  151B  082E               	movf	_hpa,w
  5570  151C  00F9               	movwf	show_multidigits@val
  5571  151D  120A  158A  266E  160A  118A  	fcall	_show_multidigits
  5572  1522                     l3028:
  5573                           
  5574                           ;main.c: 319:     LCD_Command(0xDE);
  5575  1522  30DE               	movlw	222
  5576  1523  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  5577                           
  5578                           ;main.c: 320:     show("Alt:");
  5579  1528  305E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  5580  1529  160A  118A  23E1  160A  118A  	fcall	_show
  5581  152E                     l3030:
  5582                           
  5583                           ;main.c: 321:     LCD_Command(0xE3);
  5584  152E  30E3               	movlw	227
  5585  152F  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  5586  1534                     l3032:
  5587                           
  5588                           ;main.c: 322:     show_multidigits(altittude);
  5589  1534  1283               	bcf	3,5	;RP0=0, select bank0
  5590  1535  1303               	bcf	3,6	;RP1=0, select bank0
  5591  1536  082D               	movf	_altittude+1,w
  5592  1537  00FA               	movwf	show_multidigits@val+1
  5593  1538  082C               	movf	_altittude,w
  5594  1539  00F9               	movwf	show_multidigits@val
  5595  153A  120A  158A  266E  160A  118A  	fcall	_show_multidigits
  5596  153F                     l428:
  5597  153F  0008               	return
  5598  1540                     __end_of_bmp280_displaydata:
  5599                           
  5600                           	psect	text39
  5601  0E6E                     __ptext39:	
  5602 ;; *************** function _show_multidigits *****************
  5603 ;; Defined at:
  5604 ;;		line 93 in file "./lcd4bit.h"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  val             2    9[COMMON] unsigned int 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;  remainder       2   12[BANK0 ] int 
  5609 ;;  result1         2   10[BANK0 ] int 
  5610 ;;  digit2          2    8[BANK0 ] int 
  5611 ;;  digit1          2    6[BANK0 ] int 
  5612 ;;  digit3          2    4[BANK0 ] int 
  5613 ;;  result          2    2[BANK0 ] int 
  5614 ;;  digit4          2    0[BANK0 ] int 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0, pclath, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5624 ;;      Params:         2       0       0       0       0
  5625 ;;      Locals:         0      14       0       0       0
  5626 ;;      Temps:          0       0       0       0       0
  5627 ;;      Totals:         2      14       0       0       0
  5628 ;;Total ram usage:       16 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; Hardware stack levels required when called: 1
  5631 ;; This function calls:
  5632 ;;		_LCD_Char
  5633 ;;		___awdiv
  5634 ;;		___awmod
  5635 ;;		___lwdiv
  5636 ;;		___lwmod
  5637 ;; This function is called by:
  5638 ;;		_print_dht11data
  5639 ;;		_bmp280_displaydata
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function _show_multidigits
  5645  0E6E                     _show_multidigits:
  5646  0E6E                     l2554:	
  5647                           ;incstack = 0
  5648                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  5649                           
  5650                           
  5651                           ;./lcd4bit.h: 93: void show_multidigits (unsigned int val);./lcd4bit.h: 94: {;./lcd4bit.
      +                          h: 95:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          96:     if (val<=9)
  5652  0E6E  3000               	movlw	0
  5653  0E6F  027A               	subwf	show_multidigits@val+1,w
  5654  0E70  300A               	movlw	10
  5655  0E71  1903               	skipnz
  5656  0E72  0279               	subwf	show_multidigits@val,w
  5657  0E73  1803               	skipnc
  5658  0E74  2E76               	goto	u2611
  5659  0E75  2E77               	goto	u2610
  5660  0E76                     u2611:
  5661  0E76  2E7F               	goto	l2558
  5662  0E77                     u2610:
  5663  0E77                     l2556:
  5664                           
  5665                           ;./lcd4bit.h: 97:     {;./lcd4bit.h: 98:        LCD_Char(val+0x30);
  5666  0E77  0879               	movf	show_multidigits@val,w
  5667  0E78  3E30               	addlw	48
  5668  0E79  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  5669                           
  5670                           ;./lcd4bit.h: 99:     }
  5671  0E7E  2FFF               	goto	l137
  5672  0E7F                     l2558:
  5673  0E7F  3000               	movlw	0
  5674  0E80  027A               	subwf	show_multidigits@val+1,w
  5675  0E81  300A               	movlw	10
  5676  0E82  1903               	skipnz
  5677  0E83  0279               	subwf	show_multidigits@val,w
  5678  0E84  1C03               	skipc
  5679  0E85  2E87               	goto	u2621
  5680  0E86  2E88               	goto	u2620
  5681  0E87                     u2621:
  5682  0E87  2ECC               	goto	l2572
  5683  0E88                     u2620:
  5684  0E88                     l2560:
  5685  0E88  3000               	movlw	0
  5686  0E89  027A               	subwf	show_multidigits@val+1,w
  5687  0E8A  3064               	movlw	100
  5688  0E8B  1903               	skipnz
  5689  0E8C  0279               	subwf	show_multidigits@val,w
  5690  0E8D  1803               	skipnc
  5691  0E8E  2E90               	goto	u2631
  5692  0E8F  2E91               	goto	u2630
  5693  0E90                     u2631:
  5694  0E90  2ECC               	goto	l2572
  5695  0E91                     u2630:
  5696  0E91                     l2562:
  5697                           
  5698                           ;./lcd4bit.h: 101:     {;./lcd4bit.h: 102:         remainder = val % 10;
  5699  0E91  300A               	movlw	10
  5700  0E92  00F0               	movwf	___lwmod@divisor
  5701  0E93  3000               	movlw	0
  5702  0E94  00F1               	movwf	___lwmod@divisor+1
  5703  0E95  087A               	movf	show_multidigits@val+1,w
  5704  0E96  00F3               	movwf	___lwmod@dividend+1
  5705  0E97  0879               	movf	show_multidigits@val,w
  5706  0E98  00F2               	movwf	___lwmod@dividend
  5707  0E99  160A  118A  2457  120A  158A  	fcall	___lwmod
  5708  0E9E  0871               	movf	?___lwmod+1,w
  5709  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  5710  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  5711  0EA1  00D4               	movwf	show_multidigits@remainder+1
  5712  0EA2  0870               	movf	?___lwmod,w
  5713  0EA3  00D3               	movwf	show_multidigits@remainder
  5714  0EA4                     l2564:
  5715                           
  5716                           ;./lcd4bit.h: 103:         digit1 = remainder;
  5717  0EA4  0854               	movf	show_multidigits@remainder+1,w
  5718  0EA5  00CE               	movwf	show_multidigits@digit1+1
  5719  0EA6  0853               	movf	show_multidigits@remainder,w
  5720  0EA7  00CD               	movwf	show_multidigits@digit1
  5721  0EA8                     l2566:
  5722                           
  5723                           ;./lcd4bit.h: 104:         digit2 = val/10;
  5724  0EA8  300A               	movlw	10
  5725  0EA9  00F0               	movwf	___lwdiv@divisor
  5726  0EAA  3000               	movlw	0
  5727  0EAB  00F1               	movwf	___lwdiv@divisor+1
  5728  0EAC  087A               	movf	show_multidigits@val+1,w
  5729  0EAD  00F3               	movwf	___lwdiv@dividend+1
  5730  0EAE  0879               	movf	show_multidigits@val,w
  5731  0EAF  00F2               	movwf	___lwdiv@dividend
  5732  0EB0  160A  118A  2602  120A  158A  	fcall	___lwdiv
  5733  0EB5  0871               	movf	?___lwdiv+1,w
  5734  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  5735  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  5736  0EB8  00D0               	movwf	show_multidigits@digit2+1
  5737  0EB9  0870               	movf	?___lwdiv,w
  5738  0EBA  00CF               	movwf	show_multidigits@digit2
  5739  0EBB                     l2568:
  5740                           
  5741                           ;./lcd4bit.h: 105:         LCD_Char(digit2+0x30);
  5742  0EBB  084F               	movf	show_multidigits@digit2,w
  5743  0EBC  3E30               	addlw	48
  5744  0EBD  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  5745  0EC2                     l2570:
  5746                           
  5747                           ;./lcd4bit.h: 106:         LCD_Char(digit1+0x30);
  5748  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  5749  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  5750  0EC4  084D               	movf	show_multidigits@digit1,w
  5751  0EC5  3E30               	addlw	48
  5752  0EC6  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  5753                           
  5754                           ;./lcd4bit.h: 107:     }
  5755  0ECB  2FFF               	goto	l137
  5756  0ECC                     l2572:
  5757  0ECC  3000               	movlw	0
  5758  0ECD  027A               	subwf	show_multidigits@val+1,w
  5759  0ECE  3064               	movlw	100
  5760  0ECF  1903               	skipnz
  5761  0ED0  0279               	subwf	show_multidigits@val,w
  5762  0ED1  1C03               	skipc
  5763  0ED2  2ED4               	goto	u2641
  5764  0ED3  2ED5               	goto	u2640
  5765  0ED4                     u2641:
  5766  0ED4  2F4C               	goto	l2590
  5767  0ED5                     u2640:
  5768  0ED5                     l2574:
  5769  0ED5  3003               	movlw	3
  5770  0ED6  027A               	subwf	show_multidigits@val+1,w
  5771  0ED7  30E8               	movlw	232
  5772  0ED8  1903               	skipnz
  5773  0ED9  0279               	subwf	show_multidigits@val,w
  5774  0EDA  1803               	skipnc
  5775  0EDB  2EDD               	goto	u2651
  5776  0EDC  2EDE               	goto	u2650
  5777  0EDD                     u2651:
  5778  0EDD  2F4C               	goto	l2590
  5779  0EDE                     u2650:
  5780  0EDE                     l2576:
  5781                           
  5782                           ;./lcd4bit.h: 109:     {;./lcd4bit.h: 110:         remainder = val % 10;
  5783  0EDE  300A               	movlw	10
  5784  0EDF  00F0               	movwf	___lwmod@divisor
  5785  0EE0  3000               	movlw	0
  5786  0EE1  00F1               	movwf	___lwmod@divisor+1
  5787  0EE2  087A               	movf	show_multidigits@val+1,w
  5788  0EE3  00F3               	movwf	___lwmod@dividend+1
  5789  0EE4  0879               	movf	show_multidigits@val,w
  5790  0EE5  00F2               	movwf	___lwmod@dividend
  5791  0EE6  160A  118A  2457  120A  158A  	fcall	___lwmod
  5792  0EEB  0871               	movf	?___lwmod+1,w
  5793  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  5794  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  5795  0EEE  00D4               	movwf	show_multidigits@remainder+1
  5796  0EEF  0870               	movf	?___lwmod,w
  5797  0EF0  00D3               	movwf	show_multidigits@remainder
  5798                           
  5799                           ;./lcd4bit.h: 111:         result1 = val /10;
  5800  0EF1  300A               	movlw	10
  5801  0EF2  00F0               	movwf	___lwdiv@divisor
  5802  0EF3  3000               	movlw	0
  5803  0EF4  00F1               	movwf	___lwdiv@divisor+1
  5804  0EF5  087A               	movf	show_multidigits@val+1,w
  5805  0EF6  00F3               	movwf	___lwdiv@dividend+1
  5806  0EF7  0879               	movf	show_multidigits@val,w
  5807  0EF8  00F2               	movwf	___lwdiv@dividend
  5808  0EF9  160A  118A  2602  120A  158A  	fcall	___lwdiv
  5809  0EFE  0871               	movf	?___lwdiv+1,w
  5810  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5811  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5812  0F01  00D2               	movwf	show_multidigits@result1+1
  5813  0F02  0870               	movf	?___lwdiv,w
  5814  0F03  00D1               	movwf	show_multidigits@result1
  5815  0F04                     l2578:
  5816                           
  5817                           ;./lcd4bit.h: 112:         digit1 = remainder;
  5818  0F04  0854               	movf	show_multidigits@remainder+1,w
  5819  0F05  00CE               	movwf	show_multidigits@digit1+1
  5820  0F06  0853               	movf	show_multidigits@remainder,w
  5821  0F07  00CD               	movwf	show_multidigits@digit1
  5822  0F08                     l2580:
  5823                           
  5824                           ;./lcd4bit.h: 113:         remainder = result1%10;
  5825  0F08  300A               	movlw	10
  5826  0F09  00F0               	movwf	___awmod@divisor
  5827  0F0A  3000               	movlw	0
  5828  0F0B  00F1               	movwf	___awmod@divisor+1
  5829  0F0C  0852               	movf	show_multidigits@result1+1,w
  5830  0F0D  00F3               	movwf	___awmod@dividend+1
  5831  0F0E  0851               	movf	show_multidigits@result1,w
  5832  0F0F  00F2               	movwf	___awmod@dividend
  5833  0F10  160A  118A  26DA  120A  158A  	fcall	___awmod
  5834  0F15  0871               	movf	?___awmod+1,w
  5835  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  5836  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  5837  0F18  00D4               	movwf	show_multidigits@remainder+1
  5838  0F19  0870               	movf	?___awmod,w
  5839  0F1A  00D3               	movwf	show_multidigits@remainder
  5840                           
  5841                           ;./lcd4bit.h: 114:         digit2 = remainder;
  5842  0F1B  0854               	movf	show_multidigits@remainder+1,w
  5843  0F1C  00D0               	movwf	show_multidigits@digit2+1
  5844  0F1D  0853               	movf	show_multidigits@remainder,w
  5845  0F1E  00CF               	movwf	show_multidigits@digit2
  5846  0F1F                     l2582:
  5847                           
  5848                           ;./lcd4bit.h: 115:         digit3 = result1/10;
  5849  0F1F  300A               	movlw	10
  5850  0F20  00F0               	movwf	___awdiv@divisor
  5851  0F21  3000               	movlw	0
  5852  0F22  00F1               	movwf	___awdiv@divisor+1
  5853  0F23  0852               	movf	show_multidigits@result1+1,w
  5854  0F24  00F3               	movwf	___awdiv@dividend+1
  5855  0F25  0851               	movf	show_multidigits@result1,w
  5856  0F26  00F2               	movwf	___awdiv@dividend
  5857  0F27  160A  118A  2799  120A  158A  	fcall	___awdiv
  5858  0F2C  0871               	movf	?___awdiv+1,w
  5859  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  5860  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  5861  0F2F  00CC               	movwf	show_multidigits@digit3+1
  5862  0F30  0870               	movf	?___awdiv,w
  5863  0F31  00CB               	movwf	show_multidigits@digit3
  5864  0F32                     l2584:
  5865                           
  5866                           ;./lcd4bit.h: 116:         LCD_Char(digit3+0x30);
  5867  0F32  084B               	movf	show_multidigits@digit3,w
  5868  0F33  3E30               	addlw	48
  5869  0F34  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  5870  0F39                     l2586:
  5871                           
  5872                           ;./lcd4bit.h: 117:         LCD_Char(digit2+0x30);
  5873  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  5875  0F3B  084F               	movf	show_multidigits@digit2,w
  5876  0F3C  3E30               	addlw	48
  5877  0F3D  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  5878  0F42                     l2588:
  5879                           
  5880                           ;./lcd4bit.h: 118:         LCD_Char(digit1+0x30);
  5881  0F42  1283               	bcf	3,5	;RP0=0, select bank0
  5882  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  5883  0F44  084D               	movf	show_multidigits@digit1,w
  5884  0F45  3E30               	addlw	48
  5885  0F46  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  5886                           
  5887                           ;./lcd4bit.h: 119:     }
  5888  0F4B  2FFF               	goto	l137
  5889  0F4C                     l2590:
  5890  0F4C  3003               	movlw	3
  5891  0F4D  027A               	subwf	show_multidigits@val+1,w
  5892  0F4E  30E8               	movlw	232
  5893  0F4F  1903               	skipnz
  5894  0F50  0279               	subwf	show_multidigits@val,w
  5895  0F51  1C03               	skipc
  5896  0F52  2F54               	goto	u2661
  5897  0F53  2F55               	goto	u2660
  5898  0F54                     u2661:
  5899  0F54  2FFF               	goto	l133
  5900  0F55                     u2660:
  5901  0F55                     l2592:
  5902  0F55  3027               	movlw	39
  5903  0F56  027A               	subwf	show_multidigits@val+1,w
  5904  0F57  300F               	movlw	15
  5905  0F58  1903               	skipnz
  5906  0F59  0279               	subwf	show_multidigits@val,w
  5907  0F5A  1803               	skipnc
  5908  0F5B  2F5D               	goto	u2671
  5909  0F5C  2F5E               	goto	u2670
  5910  0F5D                     u2671:
  5911  0F5D  2FFF               	goto	l133
  5912  0F5E                     u2670:
  5913  0F5E                     l2594:
  5914                           
  5915                           ;./lcd4bit.h: 121:     {;./lcd4bit.h: 122:         remainder = val % 10;
  5916  0F5E  300A               	movlw	10
  5917  0F5F  00F0               	movwf	___lwmod@divisor
  5918  0F60  3000               	movlw	0
  5919  0F61  00F1               	movwf	___lwmod@divisor+1
  5920  0F62  087A               	movf	show_multidigits@val+1,w
  5921  0F63  00F3               	movwf	___lwmod@dividend+1
  5922  0F64  0879               	movf	show_multidigits@val,w
  5923  0F65  00F2               	movwf	___lwmod@dividend
  5924  0F66  160A  118A  2457  120A  158A  	fcall	___lwmod
  5925  0F6B  0871               	movf	?___lwmod+1,w
  5926  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  5927  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  5928  0F6E  00D4               	movwf	show_multidigits@remainder+1
  5929  0F6F  0870               	movf	?___lwmod,w
  5930  0F70  00D3               	movwf	show_multidigits@remainder
  5931                           
  5932                           ;./lcd4bit.h: 123:         result1 = val /10;
  5933  0F71  300A               	movlw	10
  5934  0F72  00F0               	movwf	___lwdiv@divisor
  5935  0F73  3000               	movlw	0
  5936  0F74  00F1               	movwf	___lwdiv@divisor+1
  5937  0F75  087A               	movf	show_multidigits@val+1,w
  5938  0F76  00F3               	movwf	___lwdiv@dividend+1
  5939  0F77  0879               	movf	show_multidigits@val,w
  5940  0F78  00F2               	movwf	___lwdiv@dividend
  5941  0F79  160A  118A  2602  120A  158A  	fcall	___lwdiv
  5942  0F7E  0871               	movf	?___lwdiv+1,w
  5943  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  5945  0F81  00D2               	movwf	show_multidigits@result1+1
  5946  0F82  0870               	movf	?___lwdiv,w
  5947  0F83  00D1               	movwf	show_multidigits@result1
  5948  0F84                     l2596:
  5949                           
  5950                           ;./lcd4bit.h: 124:         digit1 = remainder;
  5951  0F84  0854               	movf	show_multidigits@remainder+1,w
  5952  0F85  00CE               	movwf	show_multidigits@digit1+1
  5953  0F86  0853               	movf	show_multidigits@remainder,w
  5954  0F87  00CD               	movwf	show_multidigits@digit1
  5955  0F88                     l2598:
  5956                           
  5957                           ;./lcd4bit.h: 125:         remainder = result1%10;
  5958  0F88  300A               	movlw	10
  5959  0F89  00F0               	movwf	___awmod@divisor
  5960  0F8A  3000               	movlw	0
  5961  0F8B  00F1               	movwf	___awmod@divisor+1
  5962  0F8C  0852               	movf	show_multidigits@result1+1,w
  5963  0F8D  00F3               	movwf	___awmod@dividend+1
  5964  0F8E  0851               	movf	show_multidigits@result1,w
  5965  0F8F  00F2               	movwf	___awmod@dividend
  5966  0F90  160A  118A  26DA  120A  158A  	fcall	___awmod
  5967  0F95  0871               	movf	?___awmod+1,w
  5968  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  5969  0F97  1303               	bcf	3,6	;RP1=0, select bank0
  5970  0F98  00D4               	movwf	show_multidigits@remainder+1
  5971  0F99  0870               	movf	?___awmod,w
  5972  0F9A  00D3               	movwf	show_multidigits@remainder
  5973                           
  5974                           ;./lcd4bit.h: 126:         digit2 = remainder;
  5975  0F9B  0854               	movf	show_multidigits@remainder+1,w
  5976  0F9C  00D0               	movwf	show_multidigits@digit2+1
  5977  0F9D  0853               	movf	show_multidigits@remainder,w
  5978  0F9E  00CF               	movwf	show_multidigits@digit2
  5979  0F9F                     l2600:
  5980                           
  5981                           ;./lcd4bit.h: 127:         result = result1/10;
  5982  0F9F  300A               	movlw	10
  5983  0FA0  00F0               	movwf	___awdiv@divisor
  5984  0FA1  3000               	movlw	0
  5985  0FA2  00F1               	movwf	___awdiv@divisor+1
  5986  0FA3  0852               	movf	show_multidigits@result1+1,w
  5987  0FA4  00F3               	movwf	___awdiv@dividend+1
  5988  0FA5  0851               	movf	show_multidigits@result1,w
  5989  0FA6  00F2               	movwf	___awdiv@dividend
  5990  0FA7  160A  118A  2799  120A  158A  	fcall	___awdiv
  5991  0FAC  0871               	movf	?___awdiv+1,w
  5992  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  5993  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  5994  0FAF  00CA               	movwf	show_multidigits@result+1
  5995  0FB0  0870               	movf	?___awdiv,w
  5996  0FB1  00C9               	movwf	show_multidigits@result
  5997  0FB2                     l2602:
  5998                           
  5999                           ;./lcd4bit.h: 128:         remainder = result%10;
  6000  0FB2  300A               	movlw	10
  6001  0FB3  00F0               	movwf	___awmod@divisor
  6002  0FB4  3000               	movlw	0
  6003  0FB5  00F1               	movwf	___awmod@divisor+1
  6004  0FB6  084A               	movf	show_multidigits@result+1,w
  6005  0FB7  00F3               	movwf	___awmod@dividend+1
  6006  0FB8  0849               	movf	show_multidigits@result,w
  6007  0FB9  00F2               	movwf	___awmod@dividend
  6008  0FBA  160A  118A  26DA  120A  158A  	fcall	___awmod
  6009  0FBF  0871               	movf	?___awmod+1,w
  6010  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  6011  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  6012  0FC2  00D4               	movwf	show_multidigits@remainder+1
  6013  0FC3  0870               	movf	?___awmod,w
  6014  0FC4  00D3               	movwf	show_multidigits@remainder
  6015                           
  6016                           ;./lcd4bit.h: 129:         digit3=remainder;
  6017  0FC5  0854               	movf	show_multidigits@remainder+1,w
  6018  0FC6  00CC               	movwf	show_multidigits@digit3+1
  6019  0FC7  0853               	movf	show_multidigits@remainder,w
  6020  0FC8  00CB               	movwf	show_multidigits@digit3
  6021  0FC9                     l2604:
  6022                           
  6023                           ;./lcd4bit.h: 130:         digit4 = result/10;
  6024  0FC9  300A               	movlw	10
  6025  0FCA  00F0               	movwf	___awdiv@divisor
  6026  0FCB  3000               	movlw	0
  6027  0FCC  00F1               	movwf	___awdiv@divisor+1
  6028  0FCD  084A               	movf	show_multidigits@result+1,w
  6029  0FCE  00F3               	movwf	___awdiv@dividend+1
  6030  0FCF  0849               	movf	show_multidigits@result,w
  6031  0FD0  00F2               	movwf	___awdiv@dividend
  6032  0FD1  160A  118A  2799  120A  158A  	fcall	___awdiv
  6033  0FD6  0871               	movf	?___awdiv+1,w
  6034  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  6035  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  6036  0FD9  00C8               	movwf	show_multidigits@digit4+1
  6037  0FDA  0870               	movf	?___awdiv,w
  6038  0FDB  00C7               	movwf	show_multidigits@digit4
  6039  0FDC                     l2606:
  6040                           
  6041                           ;./lcd4bit.h: 131:         LCD_Char(digit4+0x30);
  6042  0FDC  0847               	movf	show_multidigits@digit4,w
  6043  0FDD  3E30               	addlw	48
  6044  0FDE  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  6045  0FE3                     l2608:
  6046                           
  6047                           ;./lcd4bit.h: 132:         LCD_Char(digit3+0x30);
  6048  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  6049  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  6050  0FE5  084B               	movf	show_multidigits@digit3,w
  6051  0FE6  3E30               	addlw	48
  6052  0FE7  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  6053  0FEC                     l2610:
  6054                           
  6055                           ;./lcd4bit.h: 133:         LCD_Char(digit2+0x30);
  6056  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  6057  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  6058  0FEE  084F               	movf	show_multidigits@digit2,w
  6059  0FEF  3E30               	addlw	48
  6060  0FF0  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  6061  0FF5                     l2612:
  6062                           
  6063                           ;./lcd4bit.h: 134:         LCD_Char(digit1+0x30);
  6064  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  6065  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  6066  0FF7  084D               	movf	show_multidigits@digit1,w
  6067  0FF8  3E30               	addlw	48
  6068  0FF9  160A  118A  2580  120A  158A  	fcall	_LCD_Char
  6069  0FFE  2FFF               	goto	l137
  6070  0FFF                     l133:
  6071  0FFF                     l137:
  6072  0FFF  0008               	return
  6073  1000                     __end_of_show_multidigits:
  6074                           
  6075                           	psect	text40
  6076  1457                     __ptext40:	
  6077 ;; *************** function ___lwmod *****************
  6078 ;; Defined at:
  6079 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  divisor         2    0[COMMON] unsigned int 
  6082 ;;  dividend        2    2[COMMON] unsigned int 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  counter         1    5[COMMON] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  2    0[COMMON] unsigned int 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6094 ;;      Params:         4       0       0       0       0
  6095 ;;      Locals:         1       0       0       0       0
  6096 ;;      Temps:          1       0       0       0       0
  6097 ;;      Totals:         6       0       0       0       0
  6098 ;;Total ram usage:        6 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; This function calls:
  6101 ;;		Nothing
  6102 ;; This function is called by:
  6103 ;;		_LCD_num
  6104 ;;		_show_multidigits
  6105 ;;		_tx_sn
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           
  6109                           
  6110                           ;psect for function ___lwmod
  6111  1457                     ___lwmod:
  6112  1457                     l2148:	
  6113                           ;incstack = 0
  6114                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6115                           
  6116  1457  0870               	movf	___lwmod@divisor,w
  6117  1458  0471               	iorwf	___lwmod@divisor+1,w
  6118  1459  1903               	btfsc	3,2
  6119  145A  2C5C               	goto	u1701
  6120  145B  2C5D               	goto	u1700
  6121  145C                     u1701:
  6122  145C  2C8C               	goto	l2166
  6123  145D                     u1700:
  6124  145D                     l2150:
  6125  145D  01F5               	clrf	___lwmod@counter
  6126  145E  0AF5               	incf	___lwmod@counter,f
  6127  145F  2C6B               	goto	l2156
  6128  1460                     l2152:
  6129  1460  3001               	movlw	1
  6130  1461                     u1715:
  6131  1461  1003               	clrc
  6132  1462  0DF0               	rlf	___lwmod@divisor,f
  6133  1463  0DF1               	rlf	___lwmod@divisor+1,f
  6134  1464  3EFF               	addlw	-1
  6135  1465  1D03               	skipz
  6136  1466  2C61               	goto	u1715
  6137  1467                     l2154:
  6138  1467  3001               	movlw	1
  6139  1468  00F4               	movwf	??___lwmod
  6140  1469  0874               	movf	??___lwmod,w
  6141  146A  07F5               	addwf	___lwmod@counter,f
  6142  146B                     l2156:
  6143  146B  1FF1               	btfss	___lwmod@divisor+1,7
  6144  146C  2C6E               	goto	u1721
  6145  146D  2C6F               	goto	u1720
  6146  146E                     u1721:
  6147  146E  2C60               	goto	l2152
  6148  146F                     u1720:
  6149  146F                     l2158:
  6150  146F  0871               	movf	___lwmod@divisor+1,w
  6151  1470  0273               	subwf	___lwmod@dividend+1,w
  6152  1471  1D03               	skipz
  6153  1472  2C75               	goto	u1735
  6154  1473  0870               	movf	___lwmod@divisor,w
  6155  1474  0272               	subwf	___lwmod@dividend,w
  6156  1475                     u1735:
  6157  1475  1C03               	skipc
  6158  1476  2C78               	goto	u1731
  6159  1477  2C79               	goto	u1730
  6160  1478                     u1731:
  6161  1478  2C7F               	goto	l2162
  6162  1479                     u1730:
  6163  1479                     l2160:
  6164  1479  0870               	movf	___lwmod@divisor,w
  6165  147A  02F2               	subwf	___lwmod@dividend,f
  6166  147B  0871               	movf	___lwmod@divisor+1,w
  6167  147C  1C03               	skipc
  6168  147D  03F3               	decf	___lwmod@dividend+1,f
  6169  147E  02F3               	subwf	___lwmod@dividend+1,f
  6170  147F                     l2162:
  6171  147F  3001               	movlw	1
  6172  1480                     u1745:
  6173  1480  1003               	clrc
  6174  1481  0CF1               	rrf	___lwmod@divisor+1,f
  6175  1482  0CF0               	rrf	___lwmod@divisor,f
  6176  1483  3EFF               	addlw	-1
  6177  1484  1D03               	skipz
  6178  1485  2C80               	goto	u1745
  6179  1486                     l2164:
  6180  1486  3001               	movlw	1
  6181  1487  02F5               	subwf	___lwmod@counter,f
  6182  1488  1D03               	btfss	3,2
  6183  1489  2C8B               	goto	u1751
  6184  148A  2C8C               	goto	u1750
  6185  148B                     u1751:
  6186  148B  2C6F               	goto	l2158
  6187  148C                     u1750:
  6188  148C                     l2166:
  6189  148C  0873               	movf	___lwmod@dividend+1,w
  6190  148D  00F1               	movwf	?___lwmod+1
  6191  148E  0872               	movf	___lwmod@dividend,w
  6192  148F  00F0               	movwf	?___lwmod
  6193  1490                     l799:
  6194  1490  0008               	return
  6195  1491                     __end_of___lwmod:
  6196                           
  6197                           	psect	text41
  6198  1602                     __ptext41:	
  6199 ;; *************** function ___lwdiv *****************
  6200 ;; Defined at:
  6201 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  divisor         2    0[COMMON] unsigned int 
  6204 ;;  dividend        2    2[COMMON] unsigned int 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  quotient        2    5[COMMON] unsigned int 
  6207 ;;  counter         1    7[COMMON] unsigned char 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  2    0[COMMON] unsigned int 
  6210 ;; Registers used:
  6211 ;;		wreg, status,2, status,0
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6217 ;;      Params:         4       0       0       0       0
  6218 ;;      Locals:         3       0       0       0       0
  6219 ;;      Temps:          1       0       0       0       0
  6220 ;;      Totals:         8       0       0       0       0
  6221 ;;Total ram usage:        8 bytes
  6222 ;; Hardware stack levels used: 1
  6223 ;; This function calls:
  6224 ;;		Nothing
  6225 ;; This function is called by:
  6226 ;;		_LCD_num
  6227 ;;		_show_multidigits
  6228 ;;		_tx_sn
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           
  6233                           ;psect for function ___lwdiv
  6234  1602                     ___lwdiv:
  6235  1602                     l2122:	
  6236                           ;incstack = 0
  6237                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6238                           
  6239  1602  01F5               	clrf	___lwdiv@quotient
  6240  1603  01F6               	clrf	___lwdiv@quotient+1
  6241  1604                     l2124:
  6242  1604  0870               	movf	___lwdiv@divisor,w
  6243  1605  0471               	iorwf	___lwdiv@divisor+1,w
  6244  1606  1903               	btfsc	3,2
  6245  1607  2E09               	goto	u1631
  6246  1608  2E0A               	goto	u1630
  6247  1609                     u1631:
  6248  1609  2E41               	goto	l2144
  6249  160A                     u1630:
  6250  160A                     l2126:
  6251  160A  01F7               	clrf	___lwdiv@counter
  6252  160B  0AF7               	incf	___lwdiv@counter,f
  6253  160C  2E18               	goto	l2132
  6254  160D                     l2128:
  6255  160D  3001               	movlw	1
  6256  160E                     u1645:
  6257  160E  1003               	clrc
  6258  160F  0DF0               	rlf	___lwdiv@divisor,f
  6259  1610  0DF1               	rlf	___lwdiv@divisor+1,f
  6260  1611  3EFF               	addlw	-1
  6261  1612  1D03               	skipz
  6262  1613  2E0E               	goto	u1645
  6263  1614                     l2130:
  6264  1614  3001               	movlw	1
  6265  1615  00F4               	movwf	??___lwdiv
  6266  1616  0874               	movf	??___lwdiv,w
  6267  1617  07F7               	addwf	___lwdiv@counter,f
  6268  1618                     l2132:
  6269  1618  1FF1               	btfss	___lwdiv@divisor+1,7
  6270  1619  2E1B               	goto	u1651
  6271  161A  2E1C               	goto	u1650
  6272  161B                     u1651:
  6273  161B  2E0D               	goto	l2128
  6274  161C                     u1650:
  6275  161C                     l2134:
  6276  161C  3001               	movlw	1
  6277  161D                     u1665:
  6278  161D  1003               	clrc
  6279  161E  0DF5               	rlf	___lwdiv@quotient,f
  6280  161F  0DF6               	rlf	___lwdiv@quotient+1,f
  6281  1620  3EFF               	addlw	-1
  6282  1621  1D03               	skipz
  6283  1622  2E1D               	goto	u1665
  6284  1623  0871               	movf	___lwdiv@divisor+1,w
  6285  1624  0273               	subwf	___lwdiv@dividend+1,w
  6286  1625  1D03               	skipz
  6287  1626  2E29               	goto	u1675
  6288  1627  0870               	movf	___lwdiv@divisor,w
  6289  1628  0272               	subwf	___lwdiv@dividend,w
  6290  1629                     u1675:
  6291  1629  1C03               	skipc
  6292  162A  2E2C               	goto	u1671
  6293  162B  2E2D               	goto	u1670
  6294  162C                     u1671:
  6295  162C  2E34               	goto	l2140
  6296  162D                     u1670:
  6297  162D                     l2136:
  6298  162D  0870               	movf	___lwdiv@divisor,w
  6299  162E  02F2               	subwf	___lwdiv@dividend,f
  6300  162F  0871               	movf	___lwdiv@divisor+1,w
  6301  1630  1C03               	skipc
  6302  1631  03F3               	decf	___lwdiv@dividend+1,f
  6303  1632  02F3               	subwf	___lwdiv@dividend+1,f
  6304  1633                     l2138:
  6305  1633  1475               	bsf	___lwdiv@quotient,0
  6306  1634                     l2140:
  6307  1634  3001               	movlw	1
  6308  1635                     u1685:
  6309  1635  1003               	clrc
  6310  1636  0CF1               	rrf	___lwdiv@divisor+1,f
  6311  1637  0CF0               	rrf	___lwdiv@divisor,f
  6312  1638  3EFF               	addlw	-1
  6313  1639  1D03               	skipz
  6314  163A  2E35               	goto	u1685
  6315  163B                     l2142:
  6316  163B  3001               	movlw	1
  6317  163C  02F7               	subwf	___lwdiv@counter,f
  6318  163D  1D03               	btfss	3,2
  6319  163E  2E40               	goto	u1691
  6320  163F  2E41               	goto	u1690
  6321  1640                     u1691:
  6322  1640  2E1C               	goto	l2134
  6323  1641                     u1690:
  6324  1641                     l2144:
  6325  1641  0876               	movf	___lwdiv@quotient+1,w
  6326  1642  00F1               	movwf	?___lwdiv+1
  6327  1643  0875               	movf	___lwdiv@quotient,w
  6328  1644  00F0               	movwf	?___lwdiv
  6329  1645                     l789:
  6330  1645  0008               	return
  6331  1646                     __end_of___lwdiv:
  6332                           
  6333                           	psect	text42
  6334  16DA                     __ptext42:	
  6335 ;; *************** function ___awmod *****************
  6336 ;; Defined at:
  6337 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  divisor         2    0[COMMON] int 
  6340 ;;  dividend        2    2[COMMON] int 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  sign            1    6[COMMON] unsigned char 
  6343 ;;  counter         1    5[COMMON] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  2    0[COMMON] int 
  6346 ;; Registers used:
  6347 ;;		wreg, status,2, status,0
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6353 ;;      Params:         4       0       0       0       0
  6354 ;;      Locals:         2       0       0       0       0
  6355 ;;      Temps:          1       0       0       0       0
  6356 ;;      Totals:         7       0       0       0       0
  6357 ;;Total ram usage:        7 bytes
  6358 ;; Hardware stack levels used: 1
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_show_multidigits
  6363 ;;		_tx_sn
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           
  6368                           ;psect for function ___awmod
  6369  16DA                     ___awmod:
  6370  16DA                     l2072:	
  6371                           ;incstack = 0
  6372                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6373                           
  6374  16DA  01F6               	clrf	___awmod@sign
  6375  16DB                     l2074:
  6376  16DB  1FF3               	btfss	___awmod@dividend+1,7
  6377  16DC  2EDE               	goto	u1511
  6378  16DD  2EDF               	goto	u1510
  6379  16DE                     u1511:
  6380  16DE  2EE6               	goto	l2080
  6381  16DF                     u1510:
  6382  16DF                     l2076:
  6383  16DF  09F2               	comf	___awmod@dividend,f
  6384  16E0  09F3               	comf	___awmod@dividend+1,f
  6385  16E1  0AF2               	incf	___awmod@dividend,f
  6386  16E2  1903               	skipnz
  6387  16E3  0AF3               	incf	___awmod@dividend+1,f
  6388  16E4                     l2078:
  6389  16E4  01F6               	clrf	___awmod@sign
  6390  16E5  0AF6               	incf	___awmod@sign,f
  6391  16E6                     l2080:
  6392  16E6  1FF1               	btfss	___awmod@divisor+1,7
  6393  16E7  2EE9               	goto	u1521
  6394  16E8  2EEA               	goto	u1520
  6395  16E9                     u1521:
  6396  16E9  2EEF               	goto	l2084
  6397  16EA                     u1520:
  6398  16EA                     l2082:
  6399  16EA  09F0               	comf	___awmod@divisor,f
  6400  16EB  09F1               	comf	___awmod@divisor+1,f
  6401  16EC  0AF0               	incf	___awmod@divisor,f
  6402  16ED  1903               	skipnz
  6403  16EE  0AF1               	incf	___awmod@divisor+1,f
  6404  16EF                     l2084:
  6405  16EF  0870               	movf	___awmod@divisor,w
  6406  16F0  0471               	iorwf	___awmod@divisor+1,w
  6407  16F1  1903               	btfsc	3,2
  6408  16F2  2EF4               	goto	u1531
  6409  16F3  2EF5               	goto	u1530
  6410  16F4                     u1531:
  6411  16F4  2F24               	goto	l2102
  6412  16F5                     u1530:
  6413  16F5                     l2086:
  6414  16F5  01F5               	clrf	___awmod@counter
  6415  16F6  0AF5               	incf	___awmod@counter,f
  6416  16F7  2F03               	goto	l2092
  6417  16F8                     l2088:
  6418  16F8  3001               	movlw	1
  6419  16F9                     u1545:
  6420  16F9  1003               	clrc
  6421  16FA  0DF0               	rlf	___awmod@divisor,f
  6422  16FB  0DF1               	rlf	___awmod@divisor+1,f
  6423  16FC  3EFF               	addlw	-1
  6424  16FD  1D03               	skipz
  6425  16FE  2EF9               	goto	u1545
  6426  16FF                     l2090:
  6427  16FF  3001               	movlw	1
  6428  1700  00F4               	movwf	??___awmod
  6429  1701  0874               	movf	??___awmod,w
  6430  1702  07F5               	addwf	___awmod@counter,f
  6431  1703                     l2092:
  6432  1703  1FF1               	btfss	___awmod@divisor+1,7
  6433  1704  2F06               	goto	u1551
  6434  1705  2F07               	goto	u1550
  6435  1706                     u1551:
  6436  1706  2EF8               	goto	l2088
  6437  1707                     u1550:
  6438  1707                     l2094:
  6439  1707  0871               	movf	___awmod@divisor+1,w
  6440  1708  0273               	subwf	___awmod@dividend+1,w
  6441  1709  1D03               	skipz
  6442  170A  2F0D               	goto	u1565
  6443  170B  0870               	movf	___awmod@divisor,w
  6444  170C  0272               	subwf	___awmod@dividend,w
  6445  170D                     u1565:
  6446  170D  1C03               	skipc
  6447  170E  2F10               	goto	u1561
  6448  170F  2F11               	goto	u1560
  6449  1710                     u1561:
  6450  1710  2F17               	goto	l2098
  6451  1711                     u1560:
  6452  1711                     l2096:
  6453  1711  0870               	movf	___awmod@divisor,w
  6454  1712  02F2               	subwf	___awmod@dividend,f
  6455  1713  0871               	movf	___awmod@divisor+1,w
  6456  1714  1C03               	skipc
  6457  1715  03F3               	decf	___awmod@dividend+1,f
  6458  1716  02F3               	subwf	___awmod@dividend+1,f
  6459  1717                     l2098:
  6460  1717  3001               	movlw	1
  6461  1718                     u1575:
  6462  1718  1003               	clrc
  6463  1719  0CF1               	rrf	___awmod@divisor+1,f
  6464  171A  0CF0               	rrf	___awmod@divisor,f
  6465  171B  3EFF               	addlw	-1
  6466  171C  1D03               	skipz
  6467  171D  2F18               	goto	u1575
  6468  171E                     l2100:
  6469  171E  3001               	movlw	1
  6470  171F  02F5               	subwf	___awmod@counter,f
  6471  1720  1D03               	btfss	3,2
  6472  1721  2F23               	goto	u1581
  6473  1722  2F24               	goto	u1580
  6474  1723                     u1581:
  6475  1723  2F07               	goto	l2094
  6476  1724                     u1580:
  6477  1724                     l2102:
  6478  1724  0876               	movf	___awmod@sign,w
  6479  1725  1903               	btfsc	3,2
  6480  1726  2F28               	goto	u1591
  6481  1727  2F29               	goto	u1590
  6482  1728                     u1591:
  6483  1728  2F2E               	goto	l2106
  6484  1729                     u1590:
  6485  1729                     l2104:
  6486  1729  09F2               	comf	___awmod@dividend,f
  6487  172A  09F3               	comf	___awmod@dividend+1,f
  6488  172B  0AF2               	incf	___awmod@dividend,f
  6489  172C  1903               	skipnz
  6490  172D  0AF3               	incf	___awmod@dividend+1,f
  6491  172E                     l2106:
  6492  172E  0873               	movf	___awmod@dividend+1,w
  6493  172F  00F1               	movwf	?___awmod+1
  6494  1730  0872               	movf	___awmod@dividend,w
  6495  1731  00F0               	movwf	?___awmod
  6496  1732                     l683:
  6497  1732  0008               	return
  6498  1733                     __end_of___awmod:
  6499                           
  6500                           	psect	text43
  6501  1799                     __ptext43:	
  6502 ;; *************** function ___awdiv *****************
  6503 ;; Defined at:
  6504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  divisor         2    0[COMMON] int 
  6507 ;;  dividend        2    2[COMMON] int 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  quotient        2    7[COMMON] int 
  6510 ;;  sign            1    6[COMMON] unsigned char 
  6511 ;;  counter         1    5[COMMON] unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  2    0[COMMON] int 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6521 ;;      Params:         4       0       0       0       0
  6522 ;;      Locals:         4       0       0       0       0
  6523 ;;      Temps:          1       0       0       0       0
  6524 ;;      Totals:         9       0       0       0       0
  6525 ;;Total ram usage:        9 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_show_multidigits
  6531 ;;		_tx_sn
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           
  6536                           ;psect for function ___awdiv
  6537  1799                     ___awdiv:
  6538  1799                     l2028:	
  6539                           ;incstack = 0
  6540                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6541                           
  6542  1799  01F6               	clrf	___awdiv@sign
  6543  179A                     l2030:
  6544  179A  1FF1               	btfss	___awdiv@divisor+1,7
  6545  179B  2F9D               	goto	u1411
  6546  179C  2F9E               	goto	u1410
  6547  179D                     u1411:
  6548  179D  2FA5               	goto	l2036
  6549  179E                     u1410:
  6550  179E                     l2032:
  6551  179E  09F0               	comf	___awdiv@divisor,f
  6552  179F  09F1               	comf	___awdiv@divisor+1,f
  6553  17A0  0AF0               	incf	___awdiv@divisor,f
  6554  17A1  1903               	skipnz
  6555  17A2  0AF1               	incf	___awdiv@divisor+1,f
  6556  17A3                     l2034:
  6557  17A3  01F6               	clrf	___awdiv@sign
  6558  17A4  0AF6               	incf	___awdiv@sign,f
  6559  17A5                     l2036:
  6560  17A5  1FF3               	btfss	___awdiv@dividend+1,7
  6561  17A6  2FA8               	goto	u1421
  6562  17A7  2FA9               	goto	u1420
  6563  17A8                     u1421:
  6564  17A8  2FB2               	goto	l2042
  6565  17A9                     u1420:
  6566  17A9                     l2038:
  6567  17A9  09F2               	comf	___awdiv@dividend,f
  6568  17AA  09F3               	comf	___awdiv@dividend+1,f
  6569  17AB  0AF2               	incf	___awdiv@dividend,f
  6570  17AC  1903               	skipnz
  6571  17AD  0AF3               	incf	___awdiv@dividend+1,f
  6572  17AE                     l2040:
  6573  17AE  3001               	movlw	1
  6574  17AF  00F4               	movwf	??___awdiv
  6575  17B0  0874               	movf	??___awdiv,w
  6576  17B1  06F6               	xorwf	___awdiv@sign,f
  6577  17B2                     l2042:
  6578  17B2  01F7               	clrf	___awdiv@quotient
  6579  17B3  01F8               	clrf	___awdiv@quotient+1
  6580  17B4                     l2044:
  6581  17B4  0870               	movf	___awdiv@divisor,w
  6582  17B5  0471               	iorwf	___awdiv@divisor+1,w
  6583  17B6  1903               	btfsc	3,2
  6584  17B7  2FB9               	goto	u1431
  6585  17B8  2FBA               	goto	u1430
  6586  17B9                     u1431:
  6587  17B9  2FF1               	goto	l2064
  6588  17BA                     u1430:
  6589  17BA                     l2046:
  6590  17BA  01F5               	clrf	___awdiv@counter
  6591  17BB  0AF5               	incf	___awdiv@counter,f
  6592  17BC  2FC8               	goto	l2052
  6593  17BD                     l2048:
  6594  17BD  3001               	movlw	1
  6595  17BE                     u1445:
  6596  17BE  1003               	clrc
  6597  17BF  0DF0               	rlf	___awdiv@divisor,f
  6598  17C0  0DF1               	rlf	___awdiv@divisor+1,f
  6599  17C1  3EFF               	addlw	-1
  6600  17C2  1D03               	skipz
  6601  17C3  2FBE               	goto	u1445
  6602  17C4                     l2050:
  6603  17C4  3001               	movlw	1
  6604  17C5  00F4               	movwf	??___awdiv
  6605  17C6  0874               	movf	??___awdiv,w
  6606  17C7  07F5               	addwf	___awdiv@counter,f
  6607  17C8                     l2052:
  6608  17C8  1FF1               	btfss	___awdiv@divisor+1,7
  6609  17C9  2FCB               	goto	u1451
  6610  17CA  2FCC               	goto	u1450
  6611  17CB                     u1451:
  6612  17CB  2FBD               	goto	l2048
  6613  17CC                     u1450:
  6614  17CC                     l2054:
  6615  17CC  3001               	movlw	1
  6616  17CD                     u1465:
  6617  17CD  1003               	clrc
  6618  17CE  0DF7               	rlf	___awdiv@quotient,f
  6619  17CF  0DF8               	rlf	___awdiv@quotient+1,f
  6620  17D0  3EFF               	addlw	-1
  6621  17D1  1D03               	skipz
  6622  17D2  2FCD               	goto	u1465
  6623  17D3  0871               	movf	___awdiv@divisor+1,w
  6624  17D4  0273               	subwf	___awdiv@dividend+1,w
  6625  17D5  1D03               	skipz
  6626  17D6  2FD9               	goto	u1475
  6627  17D7  0870               	movf	___awdiv@divisor,w
  6628  17D8  0272               	subwf	___awdiv@dividend,w
  6629  17D9                     u1475:
  6630  17D9  1C03               	skipc
  6631  17DA  2FDC               	goto	u1471
  6632  17DB  2FDD               	goto	u1470
  6633  17DC                     u1471:
  6634  17DC  2FE4               	goto	l2060
  6635  17DD                     u1470:
  6636  17DD                     l2056:
  6637  17DD  0870               	movf	___awdiv@divisor,w
  6638  17DE  02F2               	subwf	___awdiv@dividend,f
  6639  17DF  0871               	movf	___awdiv@divisor+1,w
  6640  17E0  1C03               	skipc
  6641  17E1  03F3               	decf	___awdiv@dividend+1,f
  6642  17E2  02F3               	subwf	___awdiv@dividend+1,f
  6643  17E3                     l2058:
  6644  17E3  1477               	bsf	___awdiv@quotient,0
  6645  17E4                     l2060:
  6646  17E4  3001               	movlw	1
  6647  17E5                     u1485:
  6648  17E5  1003               	clrc
  6649  17E6  0CF1               	rrf	___awdiv@divisor+1,f
  6650  17E7  0CF0               	rrf	___awdiv@divisor,f
  6651  17E8  3EFF               	addlw	-1
  6652  17E9  1D03               	skipz
  6653  17EA  2FE5               	goto	u1485
  6654  17EB                     l2062:
  6655  17EB  3001               	movlw	1
  6656  17EC  02F5               	subwf	___awdiv@counter,f
  6657  17ED  1D03               	btfss	3,2
  6658  17EE  2FF0               	goto	u1491
  6659  17EF  2FF1               	goto	u1490
  6660  17F0                     u1491:
  6661  17F0  2FCC               	goto	l2054
  6662  17F1                     u1490:
  6663  17F1                     l2064:
  6664  17F1  0876               	movf	___awdiv@sign,w
  6665  17F2  1903               	btfsc	3,2
  6666  17F3  2FF5               	goto	u1501
  6667  17F4  2FF6               	goto	u1500
  6668  17F5                     u1501:
  6669  17F5  2FFB               	goto	l2068
  6670  17F6                     u1500:
  6671  17F6                     l2066:
  6672  17F6  09F7               	comf	___awdiv@quotient,f
  6673  17F7  09F8               	comf	___awdiv@quotient+1,f
  6674  17F8  0AF7               	incf	___awdiv@quotient,f
  6675  17F9  1903               	skipnz
  6676  17FA  0AF8               	incf	___awdiv@quotient+1,f
  6677  17FB                     l2068:
  6678  17FB  0878               	movf	___awdiv@quotient+1,w
  6679  17FC  00F1               	movwf	?___awdiv+1
  6680  17FD  0877               	movf	___awdiv@quotient,w
  6681  17FE  00F0               	movwf	?___awdiv
  6682  17FF                     l670:
  6683  17FF  0008               	return
  6684  1800                     __end_of___awdiv:
  6685                           
  6686                           	psect	text44
  6687  13E1                     __ptext44:	
  6688 ;; *************** function _show *****************
  6689 ;; Defined at:
  6690 ;;		line 79 in file "./lcd4bit.h"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  s               1    wreg     PTR unsigned char 
  6693 ;;		 -> STR_4(5), STR_3(5), STR_2(6), STR_1(6), 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  s               1    4[COMMON] PTR unsigned char 
  6696 ;;		 -> STR_4(5), STR_3(5), STR_2(6), STR_1(6), 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      void 
  6699 ;; Registers used:
  6700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6706 ;;      Params:         0       0       0       0       0
  6707 ;;      Locals:         1       0       0       0       0
  6708 ;;      Temps:          1       0       0       0       0
  6709 ;;      Totals:         2       0       0       0       0
  6710 ;;Total ram usage:        2 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; Hardware stack levels required when called: 1
  6713 ;; This function calls:
  6714 ;;		_LCD_Char
  6715 ;; This function is called by:
  6716 ;;		_print_dht11data
  6717 ;;		_bmp280_displaydata
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           
  6722                           ;psect for function _show
  6723  13E1                     _show:
  6724                           
  6725                           ;incstack = 0
  6726                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6727                           ;show@s stored from wreg
  6728  13E1  00F4               	movwf	show@s
  6729  13E2                     l2546:
  6730                           
  6731                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
  6732  13E2  2BF3               	goto	l2552
  6733  13E3                     l2548:
  6734                           
  6735                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
  6736  13E3  0874               	movf	show@s,w
  6737  13E4  0084               	movwf	4
  6738  13E5  160A  118A  2000  160A  118A  	fcall	stringdir
  6739  13EA  160A  118A  2580  160A  118A  	fcall	_LCD_Char
  6740  13EF                     l2550:
  6741  13EF  3001               	movlw	1
  6742  13F0  00F3               	movwf	??_show
  6743  13F1  0873               	movf	??_show,w
  6744  13F2  07F4               	addwf	show@s,f
  6745  13F3                     l2552:
  6746                           
  6747                           ;./lcd4bit.h: 81:     while(*s) {
  6748  13F3  0874               	movf	show@s,w
  6749  13F4  0084               	movwf	4
  6750  13F5  160A  118A  2000  160A  118A  	fcall	stringdir
  6751  13FA  3A00               	xorlw	0
  6752  13FB  1D03               	skipz
  6753  13FC  2BFE               	goto	u2601
  6754  13FD  2BFF               	goto	u2600
  6755  13FE                     u2601:
  6756  13FE  2BE3               	goto	l2548
  6757  13FF                     u2600:
  6758  13FF                     l124:
  6759  13FF  0008               	return
  6760  1400                     __end_of_show:
  6761                           
  6762                           	psect	text45
  6763  1580                     __ptext45:	
  6764 ;; *************** function _LCD_Char *****************
  6765 ;; Defined at:
  6766 ;;		line 27 in file "./lcd4bit.h"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  data            1    wreg     unsigned char 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  data            1    2[COMMON] unsigned char 
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  1    wreg      void 
  6773 ;; Registers used:
  6774 ;;		wreg, status,2, status,0
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6780 ;;      Params:         0       0       0       0       0
  6781 ;;      Locals:         1       0       0       0       0
  6782 ;;      Temps:          2       0       0       0       0
  6783 ;;      Totals:         3       0       0       0       0
  6784 ;;Total ram usage:        3 bytes
  6785 ;; Hardware stack levels used: 1
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_LCD_num
  6790 ;;		_show
  6791 ;;		_show_multidigits
  6792 ;;		_print_analogvoltages
  6793 ;;		_rtc_lcd_data
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           
  6798                           ;psect for function _LCD_Char
  6799  1580                     _LCD_Char:
  6800                           
  6801                           ;incstack = 0
  6802                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  6803                           ;LCD_Char@data stored from wreg
  6804  1580  00F2               	movwf	LCD_Char@data
  6805  1581                     l1900:
  6806                           
  6807                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  6808  1581  1283               	bcf	3,5	;RP0=0, select bank0
  6809  1582  1303               	bcf	3,6	;RP1=0, select bank0
  6810  1583  1407               	bsf	7,0	;volatile
  6811  1584                     l1902:
  6812                           
  6813                           ;./lcd4bit.h: 30:     PORTB = data;
  6814  1584  0872               	movf	LCD_Char@data,w
  6815  1585  0086               	movwf	6	;volatile
  6816  1586                     l1904:
  6817                           
  6818                           ;./lcd4bit.h: 31:     RC1 = 1;
  6819  1586  1487               	bsf	7,1	;volatile
  6820                           
  6821                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  6822  1587  3041               	movlw	65
  6823  1588  00F1               	movwf	??_LCD_Char+1
  6824  1589  30EE               	movlw	238
  6825  158A  00F0               	movwf	??_LCD_Char
  6826  158B                     u4397:
  6827  158B  0BF0               	decfsz	??_LCD_Char,f
  6828  158C  2D8B               	goto	u4397
  6829  158D  0BF1               	decfsz	??_LCD_Char+1,f
  6830  158E  2D8B               	goto	u4397
  6831  158F  0000               	nop
  6832  1590                     l1906:
  6833                           
  6834                           ;./lcd4bit.h: 33:     RC1 = 0;
  6835  1590  1283               	bcf	3,5	;RP0=0, select bank0
  6836  1591  1303               	bcf	3,6	;RP1=0, select bank0
  6837  1592  1087               	bcf	7,1	;volatile
  6838                           
  6839                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  6840  1593  3041               	movlw	65
  6841  1594  00F1               	movwf	??_LCD_Char+1
  6842  1595  30EE               	movlw	238
  6843  1596  00F0               	movwf	??_LCD_Char
  6844  1597                     u4407:
  6845  1597  0BF0               	decfsz	??_LCD_Char,f
  6846  1598  2D97               	goto	u4407
  6847  1599  0BF1               	decfsz	??_LCD_Char+1,f
  6848  159A  2D97               	goto	u4407
  6849  159B  0000               	nop
  6850  159C                     l1908:
  6851                           
  6852                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  6853  159C  0872               	movf	LCD_Char@data,w
  6854  159D  00F0               	movwf	??_LCD_Char
  6855  159E  3003               	movlw	3
  6856  159F                     u1225:
  6857  159F  1003               	clrc
  6858  15A0  0DF0               	rlf	??_LCD_Char,f
  6859  15A1  3EFF               	addlw	-1
  6860  15A2  1D03               	skipz
  6861  15A3  2D9F               	goto	u1225
  6862  15A4  1003               	clrc
  6863  15A5  0D70               	rlf	??_LCD_Char,w
  6864  15A6  1283               	bcf	3,5	;RP0=0, select bank0
  6865  15A7  1303               	bcf	3,6	;RP1=0, select bank0
  6866  15A8  0086               	movwf	6	;volatile
  6867  15A9                     l1910:
  6868                           
  6869                           ;./lcd4bit.h: 36:     RC1 = 1;
  6870  15A9  1487               	bsf	7,1	;volatile
  6871  15AA                     l1912:
  6872                           
  6873                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  6874  15AA  3041               	movlw	65
  6875  15AB  00F1               	movwf	??_LCD_Char+1
  6876  15AC  30EE               	movlw	238
  6877  15AD  00F0               	movwf	??_LCD_Char
  6878  15AE                     u4417:
  6879  15AE  0BF0               	decfsz	??_LCD_Char,f
  6880  15AF  2DAE               	goto	u4417
  6881  15B0  0BF1               	decfsz	??_LCD_Char+1,f
  6882  15B1  2DAE               	goto	u4417
  6883  15B2  0000               	nop
  6884  15B3                     l1914:
  6885                           
  6886                           ;./lcd4bit.h: 38:     RC1 = 0;
  6887  15B3  1283               	bcf	3,5	;RP0=0, select bank0
  6888  15B4  1303               	bcf	3,6	;RP1=0, select bank0
  6889  15B5  1087               	bcf	7,1	;volatile
  6890  15B6                     l1916:
  6891                           
  6892                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  6893  15B6  3041               	movlw	65
  6894  15B7  00F1               	movwf	??_LCD_Char+1
  6895  15B8  30EE               	movlw	238
  6896  15B9  00F0               	movwf	??_LCD_Char
  6897  15BA                     u4427:
  6898  15BA  0BF0               	decfsz	??_LCD_Char,f
  6899  15BB  2DBA               	goto	u4427
  6900  15BC  0BF1               	decfsz	??_LCD_Char+1,f
  6901  15BD  2DBA               	goto	u4427
  6902  15BE  0000               	nop
  6903  15BF                     l112:
  6904  15BF  0008               	return
  6905  15C0                     __end_of_LCD_Char:
  6906                           
  6907                           	psect	text46
  6908  029D                     __ptext46:	
  6909 ;; *************** function _actual_pressure *****************
  6910 ;; Defined at:
  6911 ;;		line 281 in file "main.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;		None
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;		None
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      void 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2, status,0, pclath, cstack
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6925 ;;      Params:         0       0       0       0       0
  6926 ;;      Locals:         0       4       0       0       0
  6927 ;;      Temps:          0      14       0       0       0
  6928 ;;      Totals:         0      18       0       0       0
  6929 ;;Total ram usage:       18 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; Hardware stack levels required when called: 1
  6932 ;; This function calls:
  6933 ;;		___aldiv
  6934 ;;		___lldiv
  6935 ;;		___lmul
  6936 ;; This function is called by:
  6937 ;;		_main
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           
  6942                           ;psect for function _actual_pressure
  6943  029D                     _actual_pressure:
  6944  029D                     l3004:	
  6945                           ;incstack = 0
  6946                           ; Regs used in _actual_pressure: [wreg+status,2+status,0+pclath+cstack]
  6947                           
  6948                           
  6949                           ;main.c: 283:         b6 = b5 - 4000;
  6950  029D  3060               	movlw	96
  6951  029E  1283               	bcf	3,5	;RP0=0, select bank0
  6952  029F  1303               	bcf	3,6	;RP1=0, select bank0
  6953  02A0  00D5               	movwf	??_actual_pressure
  6954  02A1  30F0               	movlw	240
  6955  02A2  00D6               	movwf	??_actual_pressure+1
  6956  02A3  30FF               	movlw	255
  6957  02A4  00D7               	movwf	??_actual_pressure+2
  6958  02A5  30FF               	movlw	255
  6959  02A6  00D8               	movwf	??_actual_pressure+3
  6960  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  6961  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  6962  02A9  0830               	movf	_b5^(0+128),w
  6963  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  6964  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  6965  02AC  07D5               	addwf	??_actual_pressure,f
  6966  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  6967  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  6968  02AF  0831               	movf	(_b5+1)^(0+128),w
  6969  02B0  1803               	skipnc
  6970  02B1  0F31               	incfsz	(_b5+1)^(0+128),w
  6971  02B2  2AB4               	goto	u3340
  6972  02B3  2AB7               	goto	u3341
  6973  02B4                     u3340:
  6974  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  6975  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  6976  02B6  07D6               	addwf	??_actual_pressure+1,f
  6977  02B7                     u3341:
  6978  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  6979  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  6980  02B9  0832               	movf	(_b5+2)^(0+128),w
  6981  02BA  1803               	skipnc
  6982  02BB  0F32               	incfsz	(_b5+2)^(0+128),w
  6983  02BC  2ABE               	goto	u3342
  6984  02BD  2AC1               	goto	u3343
  6985  02BE                     u3342:
  6986  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  6987  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  6988  02C0  07D7               	addwf	??_actual_pressure+2,f
  6989  02C1                     u3343:
  6990  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  6991  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  6992  02C3  0833               	movf	(_b5+3)^(0+128),w
  6993  02C4  1803               	skipnc
  6994  02C5  0A33               	incf	(_b5+3)^(0+128),w
  6995  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  6996  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  6997  02C8  07D8               	addwf	??_actual_pressure+3,f
  6998  02C9  0858               	movf	??_actual_pressure+3,w
  6999  02CA  00AB               	movwf	_b6+3
  7000  02CB  0857               	movf	??_actual_pressure+2,w
  7001  02CC  00AA               	movwf	_b6+2
  7002  02CD  0856               	movf	??_actual_pressure+1,w
  7003  02CE  00A9               	movwf	_b6+1
  7004  02CF  0855               	movf	??_actual_pressure,w
  7005  02D0  00A8               	movwf	_b6
  7006  02D1                     l3006:
  7007                           
  7008                           ;main.c: 284:         x1 = (b2*(b6*b6/4096))/2048;
  7009  02D1  3000               	movlw	0
  7010  02D2  00CA               	movwf	___aldiv@divisor+3
  7011  02D3  3000               	movlw	0
  7012  02D4  00C9               	movwf	___aldiv@divisor+2
  7013  02D5  3010               	movlw	16
  7014  02D6  00C8               	movwf	___aldiv@divisor+1
  7015  02D7  3000               	movlw	0
  7016  02D8  00C7               	movwf	___aldiv@divisor
  7017  02D9  082B               	movf	_b6+3,w
  7018  02DA  00F3               	movwf	___lmul@multiplier+3
  7019  02DB  082A               	movf	_b6+2,w
  7020  02DC  00F2               	movwf	___lmul@multiplier+2
  7021  02DD  0829               	movf	_b6+1,w
  7022  02DE  00F1               	movwf	___lmul@multiplier+1
  7023  02DF  0828               	movf	_b6,w
  7024  02E0  00F0               	movwf	___lmul@multiplier
  7025  02E1  082B               	movf	_b6+3,w
  7026  02E2  00F7               	movwf	___lmul@multiplicand+3
  7027  02E3  082A               	movf	_b6+2,w
  7028  02E4  00F6               	movwf	___lmul@multiplicand+2
  7029  02E5  0829               	movf	_b6+1,w
  7030  02E6  00F5               	movwf	___lmul@multiplicand+1
  7031  02E7  0828               	movf	_b6,w
  7032  02E8  00F4               	movwf	___lmul@multiplicand
  7033  02E9  160A  118A  2646  120A  118A  	fcall	___lmul
  7034  02EE  0873               	movf	?___lmul+3,w
  7035  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  7036  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  7037  02F1  00CE               	movwf	___aldiv@dividend+3
  7038  02F2  0872               	movf	?___lmul+2,w
  7039  02F3  00CD               	movwf	___aldiv@dividend+2
  7040  02F4  0871               	movf	?___lmul+1,w
  7041  02F5  00CC               	movwf	___aldiv@dividend+1
  7042  02F6  0870               	movf	?___lmul,w
  7043  02F7  00CB               	movwf	___aldiv@dividend
  7044  02F8  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7045  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  7046  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  7047  02FF  084A               	movf	?___aldiv+3,w
  7048  0300  00E6               	movwf	_actual_pressure$1204+3
  7049  0301  0849               	movf	?___aldiv+2,w
  7050  0302  00E5               	movwf	_actual_pressure$1204+2
  7051  0303  0848               	movf	?___aldiv+1,w
  7052  0304  00E4               	movwf	_actual_pressure$1204+1
  7053  0305  0847               	movf	?___aldiv,w
  7054  0306  00E3               	movwf	_actual_pressure$1204
  7055  0307                     l3008:
  7056                           
  7057                           ;main.c: 284:         x1 = (b2*(b6*b6/4096))/2048;
  7058  0307  3000               	movlw	0
  7059  0308  00CA               	movwf	___aldiv@divisor+3
  7060  0309  3000               	movlw	0
  7061  030A  00C9               	movwf	___aldiv@divisor+2
  7062  030B  3008               	movlw	8
  7063  030C  00C8               	movwf	___aldiv@divisor+1
  7064  030D  3000               	movlw	0
  7065  030E  00C7               	movwf	___aldiv@divisor
  7066  030F  0866               	movf	_actual_pressure$1204+3,w
  7067  0310  00F3               	movwf	___lmul@multiplier+3
  7068  0311  0865               	movf	_actual_pressure$1204+2,w
  7069  0312  00F2               	movwf	___lmul@multiplier+2
  7070  0313  0864               	movf	_actual_pressure$1204+1,w
  7071  0314  00F1               	movwf	___lmul@multiplier+1
  7072  0315  0863               	movf	_actual_pressure$1204,w
  7073  0316  00F0               	movwf	___lmul@multiplier
  7074  0317  1683               	bsf	3,5	;RP0=1, select bank1
  7075  0318  1303               	bcf	3,6	;RP1=0, select bank1
  7076  0319  083B               	movf	(_b2+3)^(0+128),w
  7077  031A  00F7               	movwf	___lmul@multiplicand+3
  7078  031B  083A               	movf	(_b2+2)^(0+128),w
  7079  031C  00F6               	movwf	___lmul@multiplicand+2
  7080  031D  0839               	movf	(_b2+1)^(0+128),w
  7081  031E  00F5               	movwf	___lmul@multiplicand+1
  7082  031F  0838               	movf	_b2^(0+128),w
  7083  0320  00F4               	movwf	___lmul@multiplicand
  7084  0321  160A  118A  2646  120A  118A  	fcall	___lmul
  7085  0326  0873               	movf	?___lmul+3,w
  7086  0327  1283               	bcf	3,5	;RP0=0, select bank0
  7087  0328  1303               	bcf	3,6	;RP1=0, select bank0
  7088  0329  00CE               	movwf	___aldiv@dividend+3
  7089  032A  0872               	movf	?___lmul+2,w
  7090  032B  00CD               	movwf	___aldiv@dividend+2
  7091  032C  0871               	movf	?___lmul+1,w
  7092  032D  00CC               	movwf	___aldiv@dividend+1
  7093  032E  0870               	movf	?___lmul,w
  7094  032F  00CB               	movwf	___aldiv@dividend
  7095  0330  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7096  0335  1283               	bcf	3,5	;RP0=0, select bank0
  7097  0336  1303               	bcf	3,6	;RP1=0, select bank0
  7098  0337  084A               	movf	?___aldiv+3,w
  7099  0338  00A7               	movwf	_x1+3
  7100  0339  0849               	movf	?___aldiv+2,w
  7101  033A  00A6               	movwf	_x1+2
  7102  033B  0848               	movf	?___aldiv+1,w
  7103  033C  00A5               	movwf	_x1+1
  7104  033D  0847               	movf	?___aldiv,w
  7105  033E  00A4               	movwf	_x1
  7106  033F                     l3010:
  7107                           
  7108                           ;main.c: 285:         x2 = ac2*b6/2048;
  7109  033F  3000               	movlw	0
  7110  0340  00CA               	movwf	___aldiv@divisor+3
  7111  0341  3000               	movlw	0
  7112  0342  00C9               	movwf	___aldiv@divisor+2
  7113  0343  3008               	movlw	8
  7114  0344  00C8               	movwf	___aldiv@divisor+1
  7115  0345  3000               	movlw	0
  7116  0346  00C7               	movwf	___aldiv@divisor
  7117  0347  1683               	bsf	3,5	;RP0=1, select bank1
  7118  0348  1303               	bcf	3,6	;RP1=0, select bank1
  7119  0349  0865               	movf	_ac2^(0+128),w
  7120  034A  00F0               	movwf	___lmul@multiplier
  7121  034B  0866               	movf	(_ac2+1)^(0+128),w
  7122  034C  00F1               	movwf	___lmul@multiplier+1
  7123  034D  3000               	movlw	0
  7124  034E  1BF1               	btfsc	___lmul@multiplier+1,7
  7125  034F  30FF               	movlw	255
  7126  0350  00F2               	movwf	___lmul@multiplier+2
  7127  0351  00F3               	movwf	___lmul@multiplier+3
  7128  0352  1283               	bcf	3,5	;RP0=0, select bank0
  7129  0353  1303               	bcf	3,6	;RP1=0, select bank0
  7130  0354  082B               	movf	_b6+3,w
  7131  0355  00F7               	movwf	___lmul@multiplicand+3
  7132  0356  082A               	movf	_b6+2,w
  7133  0357  00F6               	movwf	___lmul@multiplicand+2
  7134  0358  0829               	movf	_b6+1,w
  7135  0359  00F5               	movwf	___lmul@multiplicand+1
  7136  035A  0828               	movf	_b6,w
  7137  035B  00F4               	movwf	___lmul@multiplicand
  7138  035C  160A  118A  2646  120A  118A  	fcall	___lmul
  7139  0361  0873               	movf	?___lmul+3,w
  7140  0362  1283               	bcf	3,5	;RP0=0, select bank0
  7141  0363  1303               	bcf	3,6	;RP1=0, select bank0
  7142  0364  00CE               	movwf	___aldiv@dividend+3
  7143  0365  0872               	movf	?___lmul+2,w
  7144  0366  00CD               	movwf	___aldiv@dividend+2
  7145  0367  0871               	movf	?___lmul+1,w
  7146  0368  00CC               	movwf	___aldiv@dividend+1
  7147  0369  0870               	movf	?___lmul,w
  7148  036A  00CB               	movwf	___aldiv@dividend
  7149  036B  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7150  0370  1283               	bcf	3,5	;RP0=0, select bank0
  7151  0371  1303               	bcf	3,6	;RP1=0, select bank0
  7152  0372  084A               	movf	?___aldiv+3,w
  7153  0373  00A3               	movwf	_x2+3
  7154  0374  0849               	movf	?___aldiv+2,w
  7155  0375  00A2               	movwf	_x2+2
  7156  0376  0848               	movf	?___aldiv+1,w
  7157  0377  00A1               	movwf	_x2+1
  7158  0378  0847               	movf	?___aldiv,w
  7159  0379  00A0               	movwf	_x2
  7160  037A                     l3012:
  7161                           
  7162                           ;main.c: 286:         x3 = x1+x2;
  7163  037A  0824               	movf	_x1,w
  7164  037B  0720               	addwf	_x2,w
  7165  037C  00D5               	movwf	??_actual_pressure
  7166  037D  3000               	movlw	0
  7167  037E  1803               	skipnc
  7168  037F  3001               	movlw	1
  7169  0380  0725               	addwf	_x1+1,w
  7170  0381  01D7               	clrf	??_actual_pressure+2
  7171  0382  1803               	skipnc
  7172  0383  0AD7               	incf	??_actual_pressure+2,f
  7173  0384  0721               	addwf	_x2+1,w
  7174  0385  00D6               	movwf	??_actual_pressure+1
  7175  0386  1803               	skipnc
  7176  0387  0AD7               	incf	??_actual_pressure+2,f
  7177  0388  0826               	movf	_x1+2,w
  7178  0389  0757               	addwf	??_actual_pressure+2,w
  7179  038A  01D8               	clrf	??_actual_pressure+3
  7180  038B  1803               	skipnc
  7181  038C  0AD8               	incf	??_actual_pressure+3,f
  7182  038D  0722               	addwf	_x2+2,w
  7183  038E  00D7               	movwf	??_actual_pressure+2
  7184  038F  1803               	skipnc
  7185  0390  0AD8               	incf	??_actual_pressure+3,f
  7186  0391  0827               	movf	_x1+3,w
  7187  0392  0758               	addwf	??_actual_pressure+3,w
  7188  0393  0723               	addwf	_x2+3,w
  7189  0394  00D8               	movwf	??_actual_pressure+3
  7190  0395  0858               	movf	??_actual_pressure+3,w
  7191  0396  1683               	bsf	3,5	;RP0=1, select bank1
  7192  0397  1303               	bcf	3,6	;RP1=0, select bank1
  7193  0398  00AB               	movwf	(_x3+3)^(0+128)
  7194  0399  1283               	bcf	3,5	;RP0=0, select bank0
  7195  039A  1303               	bcf	3,6	;RP1=0, select bank0
  7196  039B  0857               	movf	??_actual_pressure+2,w
  7197  039C  1683               	bsf	3,5	;RP0=1, select bank1
  7198  039D  1303               	bcf	3,6	;RP1=0, select bank1
  7199  039E  00AA               	movwf	(_x3+2)^(0+128)
  7200  039F  1283               	bcf	3,5	;RP0=0, select bank0
  7201  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  7202  03A1  0856               	movf	??_actual_pressure+1,w
  7203  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  7204  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  7205  03A4  00A9               	movwf	(_x3+1)^(0+128)
  7206  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  7207  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  7208  03A7  0855               	movf	??_actual_pressure,w
  7209  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  7210  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  7211  03AA  00A8               	movwf	_x3^(0+128)
  7212                           
  7213                           ;main.c: 287:         b3 = (((ac1*4+x3)<< oss)+ 2)/ 4;
  7214  03AB  3000               	movlw	0
  7215  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  7216  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  7217  03AE  00CA               	movwf	___aldiv@divisor+3
  7218  03AF  3000               	movlw	0
  7219  03B0  00C9               	movwf	___aldiv@divisor+2
  7220  03B1  3000               	movlw	0
  7221  03B2  00C8               	movwf	___aldiv@divisor+1
  7222  03B3  3004               	movlw	4
  7223  03B4  00C7               	movwf	___aldiv@divisor
  7224  03B5  3002               	movlw	2
  7225  03B6  00D5               	movwf	??_actual_pressure
  7226  03B7  3000               	movlw	0
  7227  03B8  00D6               	movwf	??_actual_pressure+1
  7228  03B9  3000               	movlw	0
  7229  03BA  00D7               	movwf	??_actual_pressure+2
  7230  03BB  3000               	movlw	0
  7231  03BC  00D8               	movwf	??_actual_pressure+3
  7232  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  7233  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  7234  03BF  0828               	movf	_x3^(0+128),w
  7235  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  7236  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  7237  03C2  00D9               	movwf	??_actual_pressure+4
  7238  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  7239  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  7240  03C5  0829               	movf	(_x3+1)^(0+128),w
  7241  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  7242  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  7243  03C8  00DA               	movwf	??_actual_pressure+5
  7244  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  7245  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  7246  03CB  082A               	movf	(_x3+2)^(0+128),w
  7247  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  7248  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  7249  03CE  00DB               	movwf	??_actual_pressure+6
  7250  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  7251  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  7252  03D1  082B               	movf	(_x3+3)^(0+128),w
  7253  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  7254  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  7255  03D4  00DC               	movwf	??_actual_pressure+7
  7256  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  7257  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  7258  03D7  0868               	movf	(_ac1+1)^(0+128),w
  7259  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  7260  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  7261  03DA  00DE               	movwf	??_actual_pressure+9
  7262  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  7263  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  7264  03DD  0867               	movf	_ac1^(0+128),w
  7265  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  7266  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  7267  03E0  00DD               	movwf	??_actual_pressure+8
  7268  03E1  1003               	clrc
  7269  03E2  0DDD               	rlf	??_actual_pressure+8,f
  7270  03E3  0DDE               	rlf	??_actual_pressure+9,f
  7271  03E4  1003               	clrc
  7272  03E5  0DDD               	rlf	??_actual_pressure+8,f
  7273  03E6  0DDE               	rlf	??_actual_pressure+9,f
  7274  03E7  085D               	movf	??_actual_pressure+8,w
  7275  03E8  00DF               	movwf	??_actual_pressure+10
  7276  03E9  085E               	movf	??_actual_pressure+9,w
  7277  03EA  00E0               	movwf	??_actual_pressure+11
  7278  03EB  3000               	movlw	0
  7279  03EC  1BE0               	btfsc	??_actual_pressure+11,7
  7280  03ED  30FF               	movlw	255
  7281  03EE  00E1               	movwf	??_actual_pressure+12
  7282  03EF  00E2               	movwf	??_actual_pressure+13
  7283  03F0  085F               	movf	??_actual_pressure+10,w
  7284  03F1  07D9               	addwf	??_actual_pressure+4,f
  7285  03F2  0860               	movf	??_actual_pressure+11,w
  7286  03F3  1803               	skipnc
  7287  03F4  0F60               	incfsz	??_actual_pressure+11,w
  7288  03F5  2BF7               	goto	u3350
  7289  03F6  2BF8               	goto	u3351
  7290  03F7                     u3350:
  7291  03F7  07DA               	addwf	??_actual_pressure+5,f
  7292  03F8                     u3351:
  7293  03F8  0861               	movf	??_actual_pressure+12,w
  7294  03F9  1803               	skipnc
  7295  03FA  0F61               	incfsz	??_actual_pressure+12,w
  7296  03FB  2BFD               	goto	u3352
  7297  03FC  2BFE               	goto	u3353
  7298  03FD                     u3352:
  7299  03FD  07DB               	addwf	??_actual_pressure+6,f
  7300  03FE                     u3353:
  7301  03FE  0862               	movf	??_actual_pressure+13,w
  7302  03FF  1803               	skipnc
  7303  0400  0A62               	incf	??_actual_pressure+13,w
  7304  0401  07DC               	addwf	??_actual_pressure+7,f
  7305  0402  0A6D               	incf	_oss,w
  7306  0403  2C09               	goto	u3360
  7307  0404                     u3365:
  7308  0404  1003               	clrc
  7309  0405  0DD9               	rlf	??_actual_pressure+4,f
  7310  0406  0DDA               	rlf	??_actual_pressure+5,f
  7311  0407  0DDB               	rlf	??_actual_pressure+6,f
  7312  0408  0DDC               	rlf	??_actual_pressure+7,f
  7313  0409                     u3360:
  7314  0409  3EFF               	addlw	-1
  7315  040A  1D03               	skipz
  7316  040B  2C04               	goto	u3365
  7317  040C  0859               	movf	??_actual_pressure+4,w
  7318  040D  07D5               	addwf	??_actual_pressure,f
  7319  040E  085A               	movf	??_actual_pressure+5,w
  7320  040F  1803               	skipnc
  7321  0410  0F5A               	incfsz	??_actual_pressure+5,w
  7322  0411  2C13               	goto	u3370
  7323  0412  2C14               	goto	u3371
  7324  0413                     u3370:
  7325  0413  07D6               	addwf	??_actual_pressure+1,f
  7326  0414                     u3371:
  7327  0414  085B               	movf	??_actual_pressure+6,w
  7328  0415  1803               	skipnc
  7329  0416  0F5B               	incfsz	??_actual_pressure+6,w
  7330  0417  2C19               	goto	u3372
  7331  0418  2C1A               	goto	u3373
  7332  0419                     u3372:
  7333  0419  07D7               	addwf	??_actual_pressure+2,f
  7334  041A                     u3373:
  7335  041A  085C               	movf	??_actual_pressure+7,w
  7336  041B  1803               	skipnc
  7337  041C  0A5C               	incf	??_actual_pressure+7,w
  7338  041D  07D8               	addwf	??_actual_pressure+3,f
  7339  041E  0858               	movf	??_actual_pressure+3,w
  7340  041F  00CE               	movwf	___aldiv@dividend+3
  7341  0420  0857               	movf	??_actual_pressure+2,w
  7342  0421  00CD               	movwf	___aldiv@dividend+2
  7343  0422  0856               	movf	??_actual_pressure+1,w
  7344  0423  00CC               	movwf	___aldiv@dividend+1
  7345  0424  0855               	movf	??_actual_pressure,w
  7346  0425  00CB               	movwf	___aldiv@dividend
  7347  0426  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7348  042B  1283               	bcf	3,5	;RP0=0, select bank0
  7349  042C  1303               	bcf	3,6	;RP1=0, select bank0
  7350  042D  084A               	movf	?___aldiv+3,w
  7351  042E  1683               	bsf	3,5	;RP0=1, select bank1
  7352  042F  1303               	bcf	3,6	;RP1=0, select bank1
  7353  0430  00B7               	movwf	(_b3+3)^(0+128)
  7354  0431  1283               	bcf	3,5	;RP0=0, select bank0
  7355  0432  1303               	bcf	3,6	;RP1=0, select bank0
  7356  0433  0849               	movf	?___aldiv+2,w
  7357  0434  1683               	bsf	3,5	;RP0=1, select bank1
  7358  0435  1303               	bcf	3,6	;RP1=0, select bank1
  7359  0436  00B6               	movwf	(_b3+2)^(0+128)
  7360  0437  1283               	bcf	3,5	;RP0=0, select bank0
  7361  0438  1303               	bcf	3,6	;RP1=0, select bank0
  7362  0439  0848               	movf	?___aldiv+1,w
  7363  043A  1683               	bsf	3,5	;RP0=1, select bank1
  7364  043B  1303               	bcf	3,6	;RP1=0, select bank1
  7365  043C  00B5               	movwf	(_b3+1)^(0+128)
  7366  043D  1283               	bcf	3,5	;RP0=0, select bank0
  7367  043E  1303               	bcf	3,6	;RP1=0, select bank0
  7368  043F  0847               	movf	?___aldiv,w
  7369  0440  1683               	bsf	3,5	;RP0=1, select bank1
  7370  0441  1303               	bcf	3,6	;RP1=0, select bank1
  7371  0442  00B4               	movwf	_b3^(0+128)
  7372                           
  7373                           ;main.c: 288:         x1 = ac3* b6 / 8192;
  7374  0443  3000               	movlw	0
  7375  0444  1283               	bcf	3,5	;RP0=0, select bank0
  7376  0445  1303               	bcf	3,6	;RP1=0, select bank0
  7377  0446  00CA               	movwf	___aldiv@divisor+3
  7378  0447  3000               	movlw	0
  7379  0448  00C9               	movwf	___aldiv@divisor+2
  7380  0449  3020               	movlw	32
  7381  044A  00C8               	movwf	___aldiv@divisor+1
  7382  044B  3000               	movlw	0
  7383  044C  00C7               	movwf	___aldiv@divisor
  7384  044D  1683               	bsf	3,5	;RP0=1, select bank1
  7385  044E  1303               	bcf	3,6	;RP1=0, select bank1
  7386  044F  0863               	movf	_ac3^(0+128),w
  7387  0450  00F0               	movwf	___lmul@multiplier
  7388  0451  0864               	movf	(_ac3+1)^(0+128),w
  7389  0452  00F1               	movwf	___lmul@multiplier+1
  7390  0453  3000               	movlw	0
  7391  0454  1BF1               	btfsc	___lmul@multiplier+1,7
  7392  0455  30FF               	movlw	255
  7393  0456  00F2               	movwf	___lmul@multiplier+2
  7394  0457  00F3               	movwf	___lmul@multiplier+3
  7395  0458  1283               	bcf	3,5	;RP0=0, select bank0
  7396  0459  1303               	bcf	3,6	;RP1=0, select bank0
  7397  045A  082B               	movf	_b6+3,w
  7398  045B  00F7               	movwf	___lmul@multiplicand+3
  7399  045C  082A               	movf	_b6+2,w
  7400  045D  00F6               	movwf	___lmul@multiplicand+2
  7401  045E  0829               	movf	_b6+1,w
  7402  045F  00F5               	movwf	___lmul@multiplicand+1
  7403  0460  0828               	movf	_b6,w
  7404  0461  00F4               	movwf	___lmul@multiplicand
  7405  0462  160A  118A  2646  120A  118A  	fcall	___lmul
  7406  0467  0873               	movf	?___lmul+3,w
  7407  0468  1283               	bcf	3,5	;RP0=0, select bank0
  7408  0469  1303               	bcf	3,6	;RP1=0, select bank0
  7409  046A  00CE               	movwf	___aldiv@dividend+3
  7410  046B  0872               	movf	?___lmul+2,w
  7411  046C  00CD               	movwf	___aldiv@dividend+2
  7412  046D  0871               	movf	?___lmul+1,w
  7413  046E  00CC               	movwf	___aldiv@dividend+1
  7414  046F  0870               	movf	?___lmul,w
  7415  0470  00CB               	movwf	___aldiv@dividend
  7416  0471  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7417  0476  1283               	bcf	3,5	;RP0=0, select bank0
  7418  0477  1303               	bcf	3,6	;RP1=0, select bank0
  7419  0478  084A               	movf	?___aldiv+3,w
  7420  0479  00A7               	movwf	_x1+3
  7421  047A  0849               	movf	?___aldiv+2,w
  7422  047B  00A6               	movwf	_x1+2
  7423  047C  0848               	movf	?___aldiv+1,w
  7424  047D  00A5               	movwf	_x1+1
  7425  047E  0847               	movf	?___aldiv,w
  7426  047F  00A4               	movwf	_x1
  7427                           
  7428                           ;main.c: 289:         x2 = (b1 * (b6 *b6 / 4096)) / 65536;
  7429  0480  3000               	movlw	0
  7430  0481  00CA               	movwf	___aldiv@divisor+3
  7431  0482  3000               	movlw	0
  7432  0483  00C9               	movwf	___aldiv@divisor+2
  7433  0484  3010               	movlw	16
  7434  0485  00C8               	movwf	___aldiv@divisor+1
  7435  0486  3000               	movlw	0
  7436  0487  00C7               	movwf	___aldiv@divisor
  7437  0488  082B               	movf	_b6+3,w
  7438  0489  00F3               	movwf	___lmul@multiplier+3
  7439  048A  082A               	movf	_b6+2,w
  7440  048B  00F2               	movwf	___lmul@multiplier+2
  7441  048C  0829               	movf	_b6+1,w
  7442  048D  00F1               	movwf	___lmul@multiplier+1
  7443  048E  0828               	movf	_b6,w
  7444  048F  00F0               	movwf	___lmul@multiplier
  7445  0490  082B               	movf	_b6+3,w
  7446  0491  00F7               	movwf	___lmul@multiplicand+3
  7447  0492  082A               	movf	_b6+2,w
  7448  0493  00F6               	movwf	___lmul@multiplicand+2
  7449  0494  0829               	movf	_b6+1,w
  7450  0495  00F5               	movwf	___lmul@multiplicand+1
  7451  0496  0828               	movf	_b6,w
  7452  0497  00F4               	movwf	___lmul@multiplicand
  7453  0498  160A  118A  2646  120A  118A  	fcall	___lmul
  7454  049D  0873               	movf	?___lmul+3,w
  7455  049E  1283               	bcf	3,5	;RP0=0, select bank0
  7456  049F  1303               	bcf	3,6	;RP1=0, select bank0
  7457  04A0  00CE               	movwf	___aldiv@dividend+3
  7458  04A1  0872               	movf	?___lmul+2,w
  7459  04A2  00CD               	movwf	___aldiv@dividend+2
  7460  04A3  0871               	movf	?___lmul+1,w
  7461  04A4  00CC               	movwf	___aldiv@dividend+1
  7462  04A5  0870               	movf	?___lmul,w
  7463  04A6  00CB               	movwf	___aldiv@dividend
  7464  04A7  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7465  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  7466  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  7467  04AE  084A               	movf	?___aldiv+3,w
  7468  04AF  00E6               	movwf	_actual_pressure$1204+3
  7469  04B0  0849               	movf	?___aldiv+2,w
  7470  04B1  00E5               	movwf	_actual_pressure$1204+2
  7471  04B2  0848               	movf	?___aldiv+1,w
  7472  04B3  00E4               	movwf	_actual_pressure$1204+1
  7473  04B4  0847               	movf	?___aldiv,w
  7474  04B5  00E3               	movwf	_actual_pressure$1204
  7475                           
  7476                           ;main.c: 289:         x2 = (b1 * (b6 *b6 / 4096)) / 65536;
  7477  04B6  3000               	movlw	0
  7478  04B7  00CA               	movwf	___aldiv@divisor+3
  7479  04B8  3001               	movlw	1
  7480  04B9  00C9               	movwf	___aldiv@divisor+2
  7481  04BA  3000               	movlw	0
  7482  04BB  00C8               	movwf	___aldiv@divisor+1
  7483  04BC  3000               	movlw	0
  7484  04BD  00C7               	movwf	___aldiv@divisor
  7485  04BE  0866               	movf	_actual_pressure$1204+3,w
  7486  04BF  00F3               	movwf	___lmul@multiplier+3
  7487  04C0  0865               	movf	_actual_pressure$1204+2,w
  7488  04C1  00F2               	movwf	___lmul@multiplier+2
  7489  04C2  0864               	movf	_actual_pressure$1204+1,w
  7490  04C3  00F1               	movwf	___lmul@multiplier+1
  7491  04C4  0863               	movf	_actual_pressure$1204,w
  7492  04C5  00F0               	movwf	___lmul@multiplier
  7493  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  7494  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  7495  04C8  083F               	movf	(_b1+3)^(0+128),w
  7496  04C9  00F7               	movwf	___lmul@multiplicand+3
  7497  04CA  083E               	movf	(_b1+2)^(0+128),w
  7498  04CB  00F6               	movwf	___lmul@multiplicand+2
  7499  04CC  083D               	movf	(_b1+1)^(0+128),w
  7500  04CD  00F5               	movwf	___lmul@multiplicand+1
  7501  04CE  083C               	movf	_b1^(0+128),w
  7502  04CF  00F4               	movwf	___lmul@multiplicand
  7503  04D0  160A  118A  2646  120A  118A  	fcall	___lmul
  7504  04D5  0873               	movf	?___lmul+3,w
  7505  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  7506  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  7507  04D8  00CE               	movwf	___aldiv@dividend+3
  7508  04D9  0872               	movf	?___lmul+2,w
  7509  04DA  00CD               	movwf	___aldiv@dividend+2
  7510  04DB  0871               	movf	?___lmul+1,w
  7511  04DC  00CC               	movwf	___aldiv@dividend+1
  7512  04DD  0870               	movf	?___lmul,w
  7513  04DE  00CB               	movwf	___aldiv@dividend
  7514  04DF  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7515  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  7516  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  7517  04E6  084A               	movf	?___aldiv+3,w
  7518  04E7  00A3               	movwf	_x2+3
  7519  04E8  0849               	movf	?___aldiv+2,w
  7520  04E9  00A2               	movwf	_x2+2
  7521  04EA  0848               	movf	?___aldiv+1,w
  7522  04EB  00A1               	movwf	_x2+1
  7523  04EC  0847               	movf	?___aldiv,w
  7524  04ED  00A0               	movwf	_x2
  7525                           
  7526                           ;main.c: 290:         x3 =((x1+x2)+2)/4;
  7527  04EE  3000               	movlw	0
  7528  04EF  00CA               	movwf	___aldiv@divisor+3
  7529  04F0  3000               	movlw	0
  7530  04F1  00C9               	movwf	___aldiv@divisor+2
  7531  04F2  3000               	movlw	0
  7532  04F3  00C8               	movwf	___aldiv@divisor+1
  7533  04F4  3004               	movlw	4
  7534  04F5  00C7               	movwf	___aldiv@divisor
  7535  04F6  3002               	movlw	2
  7536  04F7  00D5               	movwf	??_actual_pressure
  7537  04F8  3000               	movlw	0
  7538  04F9  00D6               	movwf	??_actual_pressure+1
  7539  04FA  3000               	movlw	0
  7540  04FB  00D7               	movwf	??_actual_pressure+2
  7541  04FC  3000               	movlw	0
  7542  04FD  00D8               	movwf	??_actual_pressure+3
  7543  04FE  0824               	movf	_x1,w
  7544  04FF  0720               	addwf	_x2,w
  7545  0500  00D9               	movwf	??_actual_pressure+4
  7546  0501  3000               	movlw	0
  7547  0502  1803               	skipnc
  7548  0503  3001               	movlw	1
  7549  0504  0725               	addwf	_x1+1,w
  7550  0505  01DB               	clrf	??_actual_pressure+6
  7551  0506  1803               	skipnc
  7552  0507  0ADB               	incf	??_actual_pressure+6,f
  7553  0508  0721               	addwf	_x2+1,w
  7554  0509  00DA               	movwf	??_actual_pressure+5
  7555  050A  1803               	skipnc
  7556  050B  0ADB               	incf	??_actual_pressure+6,f
  7557  050C  0826               	movf	_x1+2,w
  7558  050D  075B               	addwf	??_actual_pressure+6,w
  7559  050E  01DC               	clrf	??_actual_pressure+7
  7560  050F  1803               	skipnc
  7561  0510  0ADC               	incf	??_actual_pressure+7,f
  7562  0511  0722               	addwf	_x2+2,w
  7563  0512  00DB               	movwf	??_actual_pressure+6
  7564  0513  1803               	skipnc
  7565  0514  0ADC               	incf	??_actual_pressure+7,f
  7566  0515  0827               	movf	_x1+3,w
  7567  0516  075C               	addwf	??_actual_pressure+7,w
  7568  0517  0723               	addwf	_x2+3,w
  7569  0518  00DC               	movwf	??_actual_pressure+7
  7570  0519  0859               	movf	??_actual_pressure+4,w
  7571  051A  07D5               	addwf	??_actual_pressure,f
  7572  051B  085A               	movf	??_actual_pressure+5,w
  7573  051C  1803               	skipnc
  7574  051D  0F5A               	incfsz	??_actual_pressure+5,w
  7575  051E  2D20               	goto	u3380
  7576  051F  2D21               	goto	u3381
  7577  0520                     u3380:
  7578  0520  07D6               	addwf	??_actual_pressure+1,f
  7579  0521                     u3381:
  7580  0521  085B               	movf	??_actual_pressure+6,w
  7581  0522  1803               	skipnc
  7582  0523  0F5B               	incfsz	??_actual_pressure+6,w
  7583  0524  2D26               	goto	u3382
  7584  0525  2D27               	goto	u3383
  7585  0526                     u3382:
  7586  0526  07D7               	addwf	??_actual_pressure+2,f
  7587  0527                     u3383:
  7588  0527  085C               	movf	??_actual_pressure+7,w
  7589  0528  1803               	skipnc
  7590  0529  0A5C               	incf	??_actual_pressure+7,w
  7591  052A  07D8               	addwf	??_actual_pressure+3,f
  7592  052B  0858               	movf	??_actual_pressure+3,w
  7593  052C  00CE               	movwf	___aldiv@dividend+3
  7594  052D  0857               	movf	??_actual_pressure+2,w
  7595  052E  00CD               	movwf	___aldiv@dividend+2
  7596  052F  0856               	movf	??_actual_pressure+1,w
  7597  0530  00CC               	movwf	___aldiv@dividend+1
  7598  0531  0855               	movf	??_actual_pressure,w
  7599  0532  00CB               	movwf	___aldiv@dividend
  7600  0533  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7601  0538  1283               	bcf	3,5	;RP0=0, select bank0
  7602  0539  1303               	bcf	3,6	;RP1=0, select bank0
  7603  053A  084A               	movf	?___aldiv+3,w
  7604  053B  1683               	bsf	3,5	;RP0=1, select bank1
  7605  053C  1303               	bcf	3,6	;RP1=0, select bank1
  7606  053D  00AB               	movwf	(_x3+3)^(0+128)
  7607  053E  1283               	bcf	3,5	;RP0=0, select bank0
  7608  053F  1303               	bcf	3,6	;RP1=0, select bank0
  7609  0540  0849               	movf	?___aldiv+2,w
  7610  0541  1683               	bsf	3,5	;RP0=1, select bank1
  7611  0542  1303               	bcf	3,6	;RP1=0, select bank1
  7612  0543  00AA               	movwf	(_x3+2)^(0+128)
  7613  0544  1283               	bcf	3,5	;RP0=0, select bank0
  7614  0545  1303               	bcf	3,6	;RP1=0, select bank0
  7615  0546  0848               	movf	?___aldiv+1,w
  7616  0547  1683               	bsf	3,5	;RP0=1, select bank1
  7617  0548  1303               	bcf	3,6	;RP1=0, select bank1
  7618  0549  00A9               	movwf	(_x3+1)^(0+128)
  7619  054A  1283               	bcf	3,5	;RP0=0, select bank0
  7620  054B  1303               	bcf	3,6	;RP1=0, select bank0
  7621  054C  0847               	movf	?___aldiv,w
  7622  054D  1683               	bsf	3,5	;RP0=1, select bank1
  7623  054E  1303               	bcf	3,6	;RP1=0, select bank1
  7624  054F  00A8               	movwf	_x3^(0+128)
  7625                           
  7626                           ;main.c: 291:         b4 = ac4 * (unsigned long) (x3 + 32768)/ 32768;
  7627  0550  3000               	movlw	0
  7628  0551  1283               	bcf	3,5	;RP0=0, select bank0
  7629  0552  1303               	bcf	3,6	;RP1=0, select bank0
  7630  0553  00D5               	movwf	??_actual_pressure
  7631  0554  3080               	movlw	128
  7632  0555  00D6               	movwf	??_actual_pressure+1
  7633  0556  3000               	movlw	0
  7634  0557  00D7               	movwf	??_actual_pressure+2
  7635  0558  3000               	movlw	0
  7636  0559  00D8               	movwf	??_actual_pressure+3
  7637  055A  1683               	bsf	3,5	;RP0=1, select bank1
  7638  055B  1303               	bcf	3,6	;RP1=0, select bank1
  7639  055C  0828               	movf	_x3^(0+128),w
  7640  055D  1283               	bcf	3,5	;RP0=0, select bank0
  7641  055E  1303               	bcf	3,6	;RP1=0, select bank0
  7642  055F  07D5               	addwf	??_actual_pressure,f
  7643  0560  1683               	bsf	3,5	;RP0=1, select bank1
  7644  0561  1303               	bcf	3,6	;RP1=0, select bank1
  7645  0562  0829               	movf	(_x3+1)^(0+128),w
  7646  0563  1803               	skipnc
  7647  0564  0F29               	incfsz	(_x3+1)^(0+128),w
  7648  0565  2D67               	goto	u3390
  7649  0566  2D6A               	goto	u3391
  7650  0567                     u3390:
  7651  0567  1283               	bcf	3,5	;RP0=0, select bank0
  7652  0568  1303               	bcf	3,6	;RP1=0, select bank0
  7653  0569  07D6               	addwf	??_actual_pressure+1,f
  7654  056A                     u3391:
  7655  056A  1683               	bsf	3,5	;RP0=1, select bank1
  7656  056B  1303               	bcf	3,6	;RP1=0, select bank1
  7657  056C  082A               	movf	(_x3+2)^(0+128),w
  7658  056D  1803               	skipnc
  7659  056E  0F2A               	incfsz	(_x3+2)^(0+128),w
  7660  056F  2D71               	goto	u3392
  7661  0570  2D74               	goto	u3393
  7662  0571                     u3392:
  7663  0571  1283               	bcf	3,5	;RP0=0, select bank0
  7664  0572  1303               	bcf	3,6	;RP1=0, select bank0
  7665  0573  07D7               	addwf	??_actual_pressure+2,f
  7666  0574                     u3393:
  7667  0574  1683               	bsf	3,5	;RP0=1, select bank1
  7668  0575  1303               	bcf	3,6	;RP1=0, select bank1
  7669  0576  082B               	movf	(_x3+3)^(0+128),w
  7670  0577  1803               	skipnc
  7671  0578  0A2B               	incf	(_x3+3)^(0+128),w
  7672  0579  1283               	bcf	3,5	;RP0=0, select bank0
  7673  057A  1303               	bcf	3,6	;RP1=0, select bank0
  7674  057B  07D8               	addwf	??_actual_pressure+3,f
  7675  057C  0858               	movf	??_actual_pressure+3,w
  7676  057D  00F3               	movwf	___lmul@multiplier+3
  7677  057E  0857               	movf	??_actual_pressure+2,w
  7678  057F  00F2               	movwf	___lmul@multiplier+2
  7679  0580  0856               	movf	??_actual_pressure+1,w
  7680  0581  00F1               	movwf	___lmul@multiplier+1
  7681  0582  0855               	movf	??_actual_pressure,w
  7682  0583  00F0               	movwf	___lmul@multiplier
  7683  0584  1683               	bsf	3,5	;RP0=1, select bank1
  7684  0585  1303               	bcf	3,6	;RP1=0, select bank1
  7685  0586  0861               	movf	_ac4^(0+128),w
  7686  0587  00F4               	movwf	___lmul@multiplicand
  7687  0588  0862               	movf	(_ac4+1)^(0+128),w
  7688  0589  00F5               	movwf	___lmul@multiplicand+1
  7689  058A  01F6               	clrf	___lmul@multiplicand+2
  7690  058B  01F7               	clrf	___lmul@multiplicand+3
  7691  058C  160A  118A  2646  120A  118A  	fcall	___lmul
  7692  0591  0870               	movf	?___lmul,w
  7693  0592  1283               	bcf	3,5	;RP0=0, select bank0
  7694  0593  1303               	bcf	3,6	;RP1=0, select bank0
  7695  0594  00D9               	movwf	??_actual_pressure+4
  7696  0595  0871               	movf	?___lmul+1,w
  7697  0596  00DA               	movwf	??_actual_pressure+5
  7698  0597  0872               	movf	?___lmul+2,w
  7699  0598  00DB               	movwf	??_actual_pressure+6
  7700  0599  0873               	movf	?___lmul+3,w
  7701  059A  00DC               	movwf	??_actual_pressure+7
  7702  059B  300F               	movlw	15
  7703  059C                     u3405:
  7704  059C  1003               	clrc
  7705  059D  0CDC               	rrf	??_actual_pressure+7,f
  7706  059E  0CDB               	rrf	??_actual_pressure+6,f
  7707  059F  0CDA               	rrf	??_actual_pressure+5,f
  7708  05A0  0CD9               	rrf	??_actual_pressure+4,f
  7709  05A1                     u3400:
  7710  05A1  3EFF               	addlw	-1
  7711  05A2  1D03               	skipz
  7712  05A3  2D9C               	goto	u3405
  7713  05A4  085C               	movf	??_actual_pressure+7,w
  7714  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  7715  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  7716  05A7  00A7               	movwf	(_b4+3)^(0+128)
  7717  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  7718  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  7719  05AA  085B               	movf	??_actual_pressure+6,w
  7720  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  7721  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  7722  05AD  00A6               	movwf	(_b4+2)^(0+128)
  7723  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  7724  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  7725  05B0  085A               	movf	??_actual_pressure+5,w
  7726  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  7727  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  7728  05B3  00A5               	movwf	(_b4+1)^(0+128)
  7729  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  7730  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  7731  05B6  0859               	movf	??_actual_pressure+4,w
  7732  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  7733  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  7734  05B9  00A4               	movwf	_b4^(0+128)
  7735                           
  7736                           ;main.c: 292:         b7 = ((unsigned long)up - b3) * (50000 >> oss);
  7737  05BA  082C               	movf	_up^(0+128),w
  7738  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  7739  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  7740  05BD  00D5               	movwf	??_actual_pressure
  7741  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  7742  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  7743  05C0  082D               	movf	(_up+1)^(0+128),w
  7744  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  7745  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  7746  05C3  00D6               	movwf	??_actual_pressure+1
  7747  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  7748  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  7749  05C6  082E               	movf	(_up+2)^(0+128),w
  7750  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  7751  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  7752  05C9  00D7               	movwf	??_actual_pressure+2
  7753  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  7754  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  7755  05CC  082F               	movf	(_up+3)^(0+128),w
  7756  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  7757  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  7758  05CF  00D8               	movwf	??_actual_pressure+3
  7759  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  7760  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  7761  05D2  0834               	movf	_b3^(0+128),w
  7762  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  7763  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  7764  05D5  02D5               	subwf	??_actual_pressure,f
  7765  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  7766  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  7767  05D8  0835               	movf	(_b3+1)^(0+128),w
  7768  05D9  1C03               	skipc
  7769  05DA  0F35               	incfsz	(_b3+1)^(0+128),w
  7770  05DB  2DDD               	goto	u3411
  7771  05DC  2DE0               	goto	u3412
  7772  05DD                     u3411:
  7773  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  7774  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  7775  05DF  02D6               	subwf	??_actual_pressure+1,f
  7776  05E0                     u3412:
  7777  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  7778  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  7779  05E2  0836               	movf	(_b3+2)^(0+128),w
  7780  05E3  1C03               	skipc
  7781  05E4  0F36               	incfsz	(_b3+2)^(0+128),w
  7782  05E5  2DE7               	goto	u3413
  7783  05E6  2DEA               	goto	u3414
  7784  05E7                     u3413:
  7785  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  7786  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  7787  05E9  02D7               	subwf	??_actual_pressure+2,f
  7788  05EA                     u3414:
  7789  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  7790  05EB  1303               	bcf	3,6	;RP1=0, select bank1
  7791  05EC  0837               	movf	(_b3+3)^(0+128),w
  7792  05ED  1C03               	skipc
  7793  05EE  0F37               	incfsz	(_b3+3)^(0+128),w
  7794  05EF  2DF1               	goto	u3415
  7795  05F0  2DF4               	goto	u3416
  7796  05F1                     u3415:
  7797  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  7798  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  7799  05F3  02D8               	subwf	??_actual_pressure+3,f
  7800  05F4                     u3416:
  7801  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  7802  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  7803  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  7804  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  7805  05F8  0858               	movf	??_actual_pressure+3,w
  7806  05F9  00F3               	movwf	___lmul@multiplier+3
  7807  05FA  0857               	movf	??_actual_pressure+2,w
  7808  05FB  00F2               	movwf	___lmul@multiplier+2
  7809  05FC  0856               	movf	??_actual_pressure+1,w
  7810  05FD  00F1               	movwf	___lmul@multiplier+1
  7811  05FE  0855               	movf	??_actual_pressure,w
  7812  05FF  00F0               	movwf	___lmul@multiplier
  7813  0600  0A6D               	incf	_oss,w
  7814  0601  00D9               	movwf	??_actual_pressure+4
  7815  0602  3050               	movlw	80
  7816  0603  00DA               	movwf	??_actual_pressure+5
  7817  0604  30C3               	movlw	195
  7818  0605  00DB               	movwf	??_actual_pressure+6
  7819  0606  3000               	movlw	0
  7820  0607  00DC               	movwf	??_actual_pressure+7
  7821  0608  3000               	movlw	0
  7822  0609  00DD               	movwf	??_actual_pressure+8
  7823  060A  2E10               	goto	u3420
  7824  060B                     u3425:
  7825  060B  0D5D               	rlf	??_actual_pressure+8,w
  7826  060C  0CDD               	rrf	??_actual_pressure+8,f
  7827  060D  0CDC               	rrf	??_actual_pressure+7,f
  7828  060E  0CDB               	rrf	??_actual_pressure+6,f
  7829  060F  0CDA               	rrf	??_actual_pressure+5,f
  7830  0610                     u3420:
  7831  0610  0BD9               	decfsz	??_actual_pressure+4,f
  7832  0611  2E0B               	goto	u3425
  7833  0612  085D               	movf	??_actual_pressure+8,w
  7834  0613  00F7               	movwf	___lmul@multiplicand+3
  7835  0614  085C               	movf	??_actual_pressure+7,w
  7836  0615  00F6               	movwf	___lmul@multiplicand+2
  7837  0616  085B               	movf	??_actual_pressure+6,w
  7838  0617  00F5               	movwf	___lmul@multiplicand+1
  7839  0618  085A               	movf	??_actual_pressure+5,w
  7840  0619  00F4               	movwf	___lmul@multiplicand
  7841  061A  160A  118A  2646  120A  118A  	fcall	___lmul
  7842  061F  0873               	movf	?___lmul+3,w
  7843  0620  1683               	bsf	3,5	;RP0=1, select bank1
  7844  0621  1303               	bcf	3,6	;RP1=0, select bank1
  7845  0622  00A3               	movwf	(_b7+3)^(0+128)
  7846  0623  0872               	movf	?___lmul+2,w
  7847  0624  00A2               	movwf	(_b7+2)^(0+128)
  7848  0625  0871               	movf	?___lmul+1,w
  7849  0626  00A1               	movwf	(_b7+1)^(0+128)
  7850  0627  0870               	movf	?___lmul,w
  7851  0628  00A0               	movwf	_b7^(0+128)
  7852  0629                     l3014:
  7853                           
  7854                           ;main.c: 293:         if (b7 < 0x80000000)
  7855  0629  3080               	movlw	128
  7856  062A  0223               	subwf	(_b7+3)^(0+128),w
  7857  062B  1D03               	skipz
  7858  062C  2E39               	goto	u3433
  7859  062D  3000               	movlw	0
  7860  062E  0222               	subwf	(_b7+2)^(0+128),w
  7861  062F  1D03               	skipz
  7862  0630  2E39               	goto	u3433
  7863  0631  3000               	movlw	0
  7864  0632  0221               	subwf	(_b7+1)^(0+128),w
  7865  0633  1D03               	skipz
  7866  0634  2E39               	goto	u3433
  7867  0635  3000               	movlw	0
  7868  0636  0220               	subwf	_b7^(0+128),w
  7869  0637  1D03               	skipz
  7870  0638  2E39               	goto	u3433
  7871  0639                     u3433:
  7872  0639  1803               	btfsc	3,0
  7873  063A  2E3C               	goto	u3431
  7874  063B  2E3D               	goto	u3430
  7875  063C                     u3431:
  7876  063C  2E60               	goto	l3018
  7877  063D                     u3430:
  7878  063D                     l3016:
  7879                           
  7880                           ;main.c: 294:         {;main.c: 295:             p = (b7* 2)/ b4;
  7881  063D  1683               	bsf	3,5	;RP0=1, select bank1
  7882  063E  1303               	bcf	3,6	;RP1=0, select bank1
  7883  063F  0827               	movf	(_b4+3)^(0+128),w
  7884  0640  00F3               	movwf	___lldiv@divisor+3
  7885  0641  0826               	movf	(_b4+2)^(0+128),w
  7886  0642  00F2               	movwf	___lldiv@divisor+2
  7887  0643  0825               	movf	(_b4+1)^(0+128),w
  7888  0644  00F1               	movwf	___lldiv@divisor+1
  7889  0645  0824               	movf	_b4^(0+128),w
  7890  0646  00F0               	movwf	___lldiv@divisor
  7891  0647  1003               	clrc
  7892  0648  0D20               	rlf	_b7^(0+128),w
  7893  0649  00F4               	movwf	___lldiv@dividend
  7894  064A  0D21               	rlf	(_b7+1)^(0+128),w
  7895  064B  00F5               	movwf	___lldiv@dividend+1
  7896  064C  0D22               	rlf	(_b7+2)^(0+128),w
  7897  064D  00F6               	movwf	___lldiv@dividend+2
  7898  064E  0D23               	rlf	(_b7+3)^(0+128),w
  7899  064F  00F7               	movwf	___lldiv@dividend+3
  7900  0650  160A  118A  2733  120A  118A  	fcall	___lldiv
  7901  0655  0873               	movf	?___lldiv+3,w
  7902  0656  1283               	bcf	3,5	;RP0=0, select bank0
  7903  0657  1303               	bcf	3,6	;RP1=0, select bank0
  7904  0658  00C6               	movwf	_p+3
  7905  0659  0872               	movf	?___lldiv+2,w
  7906  065A  00C5               	movwf	_p+2
  7907  065B  0871               	movf	?___lldiv+1,w
  7908  065C  00C4               	movwf	_p+1
  7909  065D  0870               	movf	?___lldiv,w
  7910  065E  00C3               	movwf	_p
  7911                           
  7912                           ;main.c: 296:         }
  7913  065F  2E82               	goto	l421
  7914  0660                     l3018:
  7915                           
  7916                           ;main.c: 298:         {;main.c: 299:             p = (b7 / b4)* 2;
  7917  0660  1683               	bsf	3,5	;RP0=1, select bank1
  7918  0661  1303               	bcf	3,6	;RP1=0, select bank1
  7919  0662  0827               	movf	(_b4+3)^(0+128),w
  7920  0663  00F3               	movwf	___lldiv@divisor+3
  7921  0664  0826               	movf	(_b4+2)^(0+128),w
  7922  0665  00F2               	movwf	___lldiv@divisor+2
  7923  0666  0825               	movf	(_b4+1)^(0+128),w
  7924  0667  00F1               	movwf	___lldiv@divisor+1
  7925  0668  0824               	movf	_b4^(0+128),w
  7926  0669  00F0               	movwf	___lldiv@divisor
  7927  066A  0823               	movf	(_b7+3)^(0+128),w
  7928  066B  00F7               	movwf	___lldiv@dividend+3
  7929  066C  0822               	movf	(_b7+2)^(0+128),w
  7930  066D  00F6               	movwf	___lldiv@dividend+2
  7931  066E  0821               	movf	(_b7+1)^(0+128),w
  7932  066F  00F5               	movwf	___lldiv@dividend+1
  7933  0670  0820               	movf	_b7^(0+128),w
  7934  0671  00F4               	movwf	___lldiv@dividend
  7935  0672  160A  118A  2733  120A  118A  	fcall	___lldiv
  7936  0677  1003               	clrc
  7937  0678  0D70               	rlf	?___lldiv,w
  7938  0679  1283               	bcf	3,5	;RP0=0, select bank0
  7939  067A  1303               	bcf	3,6	;RP1=0, select bank0
  7940  067B  00C3               	movwf	_p
  7941  067C  0D71               	rlf	?___lldiv+1,w
  7942  067D  00C4               	movwf	_p+1
  7943  067E  0D72               	rlf	?___lldiv+2,w
  7944  067F  00C5               	movwf	_p+2
  7945  0680  0D73               	rlf	?___lldiv+3,w
  7946  0681  00C6               	movwf	_p+3
  7947  0682                     l421:	
  7948                           ;main.c: 300:         }
  7949                           
  7950                           
  7951                           ;main.c: 301:         x1 =(p/256)*(p/256);
  7952  0682  3000               	movlw	0
  7953  0683  00CA               	movwf	___aldiv@divisor+3
  7954  0684  3000               	movlw	0
  7955  0685  00C9               	movwf	___aldiv@divisor+2
  7956  0686  3001               	movlw	1
  7957  0687  00C8               	movwf	___aldiv@divisor+1
  7958  0688  3000               	movlw	0
  7959  0689  00C7               	movwf	___aldiv@divisor
  7960  068A  0846               	movf	_p+3,w
  7961  068B  00CE               	movwf	___aldiv@dividend+3
  7962  068C  0845               	movf	_p+2,w
  7963  068D  00CD               	movwf	___aldiv@dividend+2
  7964  068E  0844               	movf	_p+1,w
  7965  068F  00CC               	movwf	___aldiv@dividend+1
  7966  0690  0843               	movf	_p,w
  7967  0691  00CB               	movwf	___aldiv@dividend
  7968  0692  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7969  0697  1283               	bcf	3,5	;RP0=0, select bank0
  7970  0698  1303               	bcf	3,6	;RP1=0, select bank0
  7971  0699  084A               	movf	?___aldiv+3,w
  7972  069A  00F3               	movwf	___lmul@multiplier+3
  7973  069B  0849               	movf	?___aldiv+2,w
  7974  069C  00F2               	movwf	___lmul@multiplier+2
  7975  069D  0848               	movf	?___aldiv+1,w
  7976  069E  00F1               	movwf	___lmul@multiplier+1
  7977  069F  0847               	movf	?___aldiv,w
  7978  06A0  00F0               	movwf	___lmul@multiplier
  7979  06A1  3000               	movlw	0
  7980  06A2  00CA               	movwf	___aldiv@divisor+3
  7981  06A3  3000               	movlw	0
  7982  06A4  00C9               	movwf	___aldiv@divisor+2
  7983  06A5  3001               	movlw	1
  7984  06A6  00C8               	movwf	___aldiv@divisor+1
  7985  06A7  3000               	movlw	0
  7986  06A8  00C7               	movwf	___aldiv@divisor
  7987  06A9  0846               	movf	_p+3,w
  7988  06AA  00CE               	movwf	___aldiv@dividend+3
  7989  06AB  0845               	movf	_p+2,w
  7990  06AC  00CD               	movwf	___aldiv@dividend+2
  7991  06AD  0844               	movf	_p+1,w
  7992  06AE  00CC               	movwf	___aldiv@dividend+1
  7993  06AF  0843               	movf	_p,w
  7994  06B0  00CB               	movwf	___aldiv@dividend
  7995  06B1  120A  158A  20E3  120A  118A  	fcall	___aldiv
  7996  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  7997  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  7998  06B8  084A               	movf	?___aldiv+3,w
  7999  06B9  00F7               	movwf	___lmul@multiplicand+3
  8000  06BA  0849               	movf	?___aldiv+2,w
  8001  06BB  00F6               	movwf	___lmul@multiplicand+2
  8002  06BC  0848               	movf	?___aldiv+1,w
  8003  06BD  00F5               	movwf	___lmul@multiplicand+1
  8004  06BE  0847               	movf	?___aldiv,w
  8005  06BF  00F4               	movwf	___lmul@multiplicand
  8006  06C0  160A  118A  2646  120A  118A  	fcall	___lmul
  8007  06C5  0873               	movf	?___lmul+3,w
  8008  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  8009  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  8010  06C8  00A7               	movwf	_x1+3
  8011  06C9  0872               	movf	?___lmul+2,w
  8012  06CA  00A6               	movwf	_x1+2
  8013  06CB  0871               	movf	?___lmul+1,w
  8014  06CC  00A5               	movwf	_x1+1
  8015  06CD  0870               	movf	?___lmul,w
  8016  06CE  00A4               	movwf	_x1
  8017                           
  8018                           ;main.c: 302:         x1 = (x1 * 3038)/65536;
  8019  06CF  3000               	movlw	0
  8020  06D0  00CA               	movwf	___aldiv@divisor+3
  8021  06D1  3001               	movlw	1
  8022  06D2  00C9               	movwf	___aldiv@divisor+2
  8023  06D3  3000               	movlw	0
  8024  06D4  00C8               	movwf	___aldiv@divisor+1
  8025  06D5  3000               	movlw	0
  8026  06D6  00C7               	movwf	___aldiv@divisor
  8027  06D7  0827               	movf	_x1+3,w
  8028  06D8  00F3               	movwf	___lmul@multiplier+3
  8029  06D9  0826               	movf	_x1+2,w
  8030  06DA  00F2               	movwf	___lmul@multiplier+2
  8031  06DB  0825               	movf	_x1+1,w
  8032  06DC  00F1               	movwf	___lmul@multiplier+1
  8033  06DD  0824               	movf	_x1,w
  8034  06DE  00F0               	movwf	___lmul@multiplier
  8035  06DF  3000               	movlw	0
  8036  06E0  00F7               	movwf	___lmul@multiplicand+3
  8037  06E1  3000               	movlw	0
  8038  06E2  00F6               	movwf	___lmul@multiplicand+2
  8039  06E3  300B               	movlw	11
  8040  06E4  00F5               	movwf	___lmul@multiplicand+1
  8041  06E5  30DE               	movlw	222
  8042  06E6  00F4               	movwf	___lmul@multiplicand
  8043  06E7  160A  118A  2646  120A  118A  	fcall	___lmul
  8044  06EC  0873               	movf	?___lmul+3,w
  8045  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  8046  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  8047  06EF  00CE               	movwf	___aldiv@dividend+3
  8048  06F0  0872               	movf	?___lmul+2,w
  8049  06F1  00CD               	movwf	___aldiv@dividend+2
  8050  06F2  0871               	movf	?___lmul+1,w
  8051  06F3  00CC               	movwf	___aldiv@dividend+1
  8052  06F4  0870               	movf	?___lmul,w
  8053  06F5  00CB               	movwf	___aldiv@dividend
  8054  06F6  120A  158A  20E3  120A  118A  	fcall	___aldiv
  8055  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  8056  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  8057  06FD  084A               	movf	?___aldiv+3,w
  8058  06FE  00A7               	movwf	_x1+3
  8059  06FF  0849               	movf	?___aldiv+2,w
  8060  0700  00A6               	movwf	_x1+2
  8061  0701  0848               	movf	?___aldiv+1,w
  8062  0702  00A5               	movwf	_x1+1
  8063  0703  0847               	movf	?___aldiv,w
  8064  0704  00A4               	movwf	_x1
  8065                           
  8066                           ;main.c: 303:         x2 = (-7357 * p) / 65536;
  8067  0705  3000               	movlw	0
  8068  0706  00CA               	movwf	___aldiv@divisor+3
  8069  0707  3001               	movlw	1
  8070  0708  00C9               	movwf	___aldiv@divisor+2
  8071  0709  3000               	movlw	0
  8072  070A  00C8               	movwf	___aldiv@divisor+1
  8073  070B  3000               	movlw	0
  8074  070C  00C7               	movwf	___aldiv@divisor
  8075  070D  0846               	movf	_p+3,w
  8076  070E  00F3               	movwf	___lmul@multiplier+3
  8077  070F  0845               	movf	_p+2,w
  8078  0710  00F2               	movwf	___lmul@multiplier+2
  8079  0711  0844               	movf	_p+1,w
  8080  0712  00F1               	movwf	___lmul@multiplier+1
  8081  0713  0843               	movf	_p,w
  8082  0714  00F0               	movwf	___lmul@multiplier
  8083  0715  30FF               	movlw	255
  8084  0716  00F7               	movwf	___lmul@multiplicand+3
  8085  0717  30FF               	movlw	255
  8086  0718  00F6               	movwf	___lmul@multiplicand+2
  8087  0719  30E3               	movlw	227
  8088  071A  00F5               	movwf	___lmul@multiplicand+1
  8089  071B  3043               	movlw	67
  8090  071C  00F4               	movwf	___lmul@multiplicand
  8091  071D  160A  118A  2646  120A  118A  	fcall	___lmul
  8092  0722  0873               	movf	?___lmul+3,w
  8093  0723  1283               	bcf	3,5	;RP0=0, select bank0
  8094  0724  1303               	bcf	3,6	;RP1=0, select bank0
  8095  0725  00CE               	movwf	___aldiv@dividend+3
  8096  0726  0872               	movf	?___lmul+2,w
  8097  0727  00CD               	movwf	___aldiv@dividend+2
  8098  0728  0871               	movf	?___lmul+1,w
  8099  0729  00CC               	movwf	___aldiv@dividend+1
  8100  072A  0870               	movf	?___lmul,w
  8101  072B  00CB               	movwf	___aldiv@dividend
  8102  072C  120A  158A  20E3  120A  118A  	fcall	___aldiv
  8103  0731  1283               	bcf	3,5	;RP0=0, select bank0
  8104  0732  1303               	bcf	3,6	;RP1=0, select bank0
  8105  0733  084A               	movf	?___aldiv+3,w
  8106  0734  00A3               	movwf	_x2+3
  8107  0735  0849               	movf	?___aldiv+2,w
  8108  0736  00A2               	movwf	_x2+2
  8109  0737  0848               	movf	?___aldiv+1,w
  8110  0738  00A1               	movwf	_x2+1
  8111  0739  0847               	movf	?___aldiv,w
  8112  073A  00A0               	movwf	_x2
  8113                           
  8114                           ;main.c: 304:         p=p+(x1+x2+3791)/16;
  8115  073B  3000               	movlw	0
  8116  073C  00CA               	movwf	___aldiv@divisor+3
  8117  073D  3000               	movlw	0
  8118  073E  00C9               	movwf	___aldiv@divisor+2
  8119  073F  3000               	movlw	0
  8120  0740  00C8               	movwf	___aldiv@divisor+1
  8121  0741  3010               	movlw	16
  8122  0742  00C7               	movwf	___aldiv@divisor
  8123  0743  30CF               	movlw	207
  8124  0744  00D5               	movwf	??_actual_pressure
  8125  0745  300E               	movlw	14
  8126  0746  00D6               	movwf	??_actual_pressure+1
  8127  0747  3000               	movlw	0
  8128  0748  00D7               	movwf	??_actual_pressure+2
  8129  0749  3000               	movlw	0
  8130  074A  00D8               	movwf	??_actual_pressure+3
  8131  074B  0824               	movf	_x1,w
  8132  074C  0720               	addwf	_x2,w
  8133  074D  00D9               	movwf	??_actual_pressure+4
  8134  074E  3000               	movlw	0
  8135  074F  1803               	skipnc
  8136  0750  3001               	movlw	1
  8137  0751  0725               	addwf	_x1+1,w
  8138  0752  01DB               	clrf	??_actual_pressure+6
  8139  0753  1803               	skipnc
  8140  0754  0ADB               	incf	??_actual_pressure+6,f
  8141  0755  0721               	addwf	_x2+1,w
  8142  0756  00DA               	movwf	??_actual_pressure+5
  8143  0757  1803               	skipnc
  8144  0758  0ADB               	incf	??_actual_pressure+6,f
  8145  0759  0826               	movf	_x1+2,w
  8146  075A  075B               	addwf	??_actual_pressure+6,w
  8147  075B  01DC               	clrf	??_actual_pressure+7
  8148  075C  1803               	skipnc
  8149  075D  0ADC               	incf	??_actual_pressure+7,f
  8150  075E  0722               	addwf	_x2+2,w
  8151  075F  00DB               	movwf	??_actual_pressure+6
  8152  0760  1803               	skipnc
  8153  0761  0ADC               	incf	??_actual_pressure+7,f
  8154  0762  0827               	movf	_x1+3,w
  8155  0763  075C               	addwf	??_actual_pressure+7,w
  8156  0764  0723               	addwf	_x2+3,w
  8157  0765  00DC               	movwf	??_actual_pressure+7
  8158  0766  0859               	movf	??_actual_pressure+4,w
  8159  0767  07D5               	addwf	??_actual_pressure,f
  8160  0768  085A               	movf	??_actual_pressure+5,w
  8161  0769  1803               	skipnc
  8162  076A  0F5A               	incfsz	??_actual_pressure+5,w
  8163  076B  2F6D               	goto	u3440
  8164  076C  2F6E               	goto	u3441
  8165  076D                     u3440:
  8166  076D  07D6               	addwf	??_actual_pressure+1,f
  8167  076E                     u3441:
  8168  076E  085B               	movf	??_actual_pressure+6,w
  8169  076F  1803               	skipnc
  8170  0770  0F5B               	incfsz	??_actual_pressure+6,w
  8171  0771  2F73               	goto	u3442
  8172  0772  2F74               	goto	u3443
  8173  0773                     u3442:
  8174  0773  07D7               	addwf	??_actual_pressure+2,f
  8175  0774                     u3443:
  8176  0774  085C               	movf	??_actual_pressure+7,w
  8177  0775  1803               	skipnc
  8178  0776  0A5C               	incf	??_actual_pressure+7,w
  8179  0777  07D8               	addwf	??_actual_pressure+3,f
  8180  0778  0858               	movf	??_actual_pressure+3,w
  8181  0779  00CE               	movwf	___aldiv@dividend+3
  8182  077A  0857               	movf	??_actual_pressure+2,w
  8183  077B  00CD               	movwf	___aldiv@dividend+2
  8184  077C  0856               	movf	??_actual_pressure+1,w
  8185  077D  00CC               	movwf	___aldiv@dividend+1
  8186  077E  0855               	movf	??_actual_pressure,w
  8187  077F  00CB               	movwf	___aldiv@dividend
  8188  0780  120A  158A  20E3  120A  118A  	fcall	___aldiv
  8189  0785  1283               	bcf	3,5	;RP0=0, select bank0
  8190  0786  1303               	bcf	3,6	;RP1=0, select bank0
  8191  0787  0847               	movf	?___aldiv,w
  8192  0788  0743               	addwf	_p,w
  8193  0789  00DD               	movwf	??_actual_pressure+8
  8194  078A  3000               	movlw	0
  8195  078B  1803               	skipnc
  8196  078C  3001               	movlw	1
  8197  078D  0748               	addwf	?___aldiv+1,w
  8198  078E  01DF               	clrf	??_actual_pressure+10
  8199  078F  1803               	skipnc
  8200  0790  0ADF               	incf	??_actual_pressure+10,f
  8201  0791  0744               	addwf	_p+1,w
  8202  0792  00DE               	movwf	??_actual_pressure+9
  8203  0793  1803               	skipnc
  8204  0794  0ADF               	incf	??_actual_pressure+10,f
  8205  0795  0849               	movf	?___aldiv+2,w
  8206  0796  075F               	addwf	??_actual_pressure+10,w
  8207  0797  01E0               	clrf	??_actual_pressure+11
  8208  0798  1803               	skipnc
  8209  0799  0AE0               	incf	??_actual_pressure+11,f
  8210  079A  0745               	addwf	_p+2,w
  8211  079B  00DF               	movwf	??_actual_pressure+10
  8212  079C  1803               	skipnc
  8213  079D  0AE0               	incf	??_actual_pressure+11,f
  8214  079E  084A               	movf	?___aldiv+3,w
  8215  079F  0760               	addwf	??_actual_pressure+11,w
  8216  07A0  0746               	addwf	_p+3,w
  8217  07A1  00E0               	movwf	??_actual_pressure+11
  8218  07A2  0860               	movf	??_actual_pressure+11,w
  8219  07A3  00C6               	movwf	_p+3
  8220  07A4  085F               	movf	??_actual_pressure+10,w
  8221  07A5  00C5               	movwf	_p+2
  8222  07A6  085E               	movf	??_actual_pressure+9,w
  8223  07A7  00C4               	movwf	_p+1
  8224  07A8  085D               	movf	??_actual_pressure+8,w
  8225  07A9  00C3               	movwf	_p
  8226                           
  8227                           ;main.c: 306:         hpa = p/100;
  8228  07AA  3000               	movlw	0
  8229  07AB  00CA               	movwf	___aldiv@divisor+3
  8230  07AC  3000               	movlw	0
  8231  07AD  00C9               	movwf	___aldiv@divisor+2
  8232  07AE  3000               	movlw	0
  8233  07AF  00C8               	movwf	___aldiv@divisor+1
  8234  07B0  3064               	movlw	100
  8235  07B1  00C7               	movwf	___aldiv@divisor
  8236  07B2  0846               	movf	_p+3,w
  8237  07B3  00CE               	movwf	___aldiv@dividend+3
  8238  07B4  0845               	movf	_p+2,w
  8239  07B5  00CD               	movwf	___aldiv@dividend+2
  8240  07B6  0844               	movf	_p+1,w
  8241  07B7  00CC               	movwf	___aldiv@dividend+1
  8242  07B8  0843               	movf	_p,w
  8243  07B9  00CB               	movwf	___aldiv@dividend
  8244  07BA  120A  158A  20E3  120A  118A  	fcall	___aldiv
  8245  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  8246  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  8247  07C1  0848               	movf	?___aldiv+1,w
  8248  07C2  00AF               	movwf	_hpa+1
  8249  07C3  0847               	movf	?___aldiv,w
  8250  07C4  00AE               	movwf	_hpa
  8251  07C5                     l422:
  8252  07C5  0008               	return
  8253  07C6                     __end_of_actual_pressure:
  8254                           
  8255                           	psect	text47
  8256  1646                     __ptext47:	
  8257 ;; *************** function ___lmul *****************
  8258 ;; Defined at:
  8259 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  multiplier      4    0[COMMON] unsigned long 
  8262 ;;  multiplicand    4    4[COMMON] unsigned long 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  product         4    9[COMMON] unsigned long 
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  4    0[COMMON] unsigned long 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8274 ;;      Params:         8       0       0       0       0
  8275 ;;      Locals:         4       0       0       0       0
  8276 ;;      Temps:          1       0       0       0       0
  8277 ;;      Totals:        13       0       0       0       0
  8278 ;;Total ram usage:       13 bytes
  8279 ;; Hardware stack levels used: 1
  8280 ;; This function calls:
  8281 ;;		Nothing
  8282 ;; This function is called by:
  8283 ;;		_LCD_num
  8284 ;;		_actual_pressure
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           
  8289                           ;psect for function ___lmul
  8290  1646                     ___lmul:
  8291  1646                     l1974:	
  8292                           ;incstack = 0
  8293                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8294                           
  8295  1646  3000               	movlw	0
  8296  1647  00FC               	movwf	___lmul@product+3
  8297  1648  3000               	movlw	0
  8298  1649  00FB               	movwf	___lmul@product+2
  8299  164A  3000               	movlw	0
  8300  164B  00FA               	movwf	___lmul@product+1
  8301  164C  3000               	movlw	0
  8302  164D  00F9               	movwf	___lmul@product
  8303  164E                     l1976:
  8304  164E  1C70               	btfss	___lmul@multiplier,0
  8305  164F  2E51               	goto	u1261
  8306  1650  2E52               	goto	u1260
  8307  1651                     u1261:
  8308  1651  2E69               	goto	l1980
  8309  1652                     u1260:
  8310  1652                     l1978:
  8311  1652  0874               	movf	___lmul@multiplicand,w
  8312  1653  07F9               	addwf	___lmul@product,f
  8313  1654  0875               	movf	___lmul@multiplicand+1,w
  8314  1655  1103               	clrz
  8315  1656  1803               	skipnc
  8316  1657  3E01               	addlw	1
  8317  1658  1903               	skipnz
  8318  1659  2E5B               	goto	u1271
  8319  165A  07FA               	addwf	___lmul@product+1,f
  8320  165B                     u1271:
  8321  165B  0876               	movf	___lmul@multiplicand+2,w
  8322  165C  1103               	clrz
  8323  165D  1803               	skipnc
  8324  165E  3E01               	addlw	1
  8325  165F  1903               	skipnz
  8326  1660  2E62               	goto	u1272
  8327  1661  07FB               	addwf	___lmul@product+2,f
  8328  1662                     u1272:
  8329  1662  0877               	movf	___lmul@multiplicand+3,w
  8330  1663  1103               	clrz
  8331  1664  1803               	skipnc
  8332  1665  3E01               	addlw	1
  8333  1666  1903               	skipnz
  8334  1667  2E69               	goto	u1273
  8335  1668  07FC               	addwf	___lmul@product+3,f
  8336  1669                     u1273:
  8337  1669                     l1980:
  8338  1669  3001               	movlw	1
  8339  166A  00F8               	movwf	??___lmul
  8340  166B                     u1285:
  8341  166B  1003               	clrc
  8342  166C  0DF4               	rlf	___lmul@multiplicand,f
  8343  166D  0DF5               	rlf	___lmul@multiplicand+1,f
  8344  166E  0DF6               	rlf	___lmul@multiplicand+2,f
  8345  166F  0DF7               	rlf	___lmul@multiplicand+3,f
  8346  1670  0BF8               	decfsz	??___lmul,f
  8347  1671  2E6B               	goto	u1285
  8348  1672                     l1982:
  8349  1672  3001               	movlw	1
  8350  1673                     u1295:
  8351  1673  1003               	clrc
  8352  1674  0CF3               	rrf	___lmul@multiplier+3,f
  8353  1675  0CF2               	rrf	___lmul@multiplier+2,f
  8354  1676  0CF1               	rrf	___lmul@multiplier+1,f
  8355  1677  0CF0               	rrf	___lmul@multiplier,f
  8356  1678  3EFF               	addlw	-1
  8357  1679  1D03               	skipz
  8358  167A  2E73               	goto	u1295
  8359  167B  0873               	movf	___lmul@multiplier+3,w
  8360  167C  0472               	iorwf	___lmul@multiplier+2,w
  8361  167D  0471               	iorwf	___lmul@multiplier+1,w
  8362  167E  0470               	iorwf	___lmul@multiplier,w
  8363  167F  1D03               	skipz
  8364  1680  2E82               	goto	u1301
  8365  1681  2E83               	goto	u1300
  8366  1682                     u1301:
  8367  1682  2E4E               	goto	l1976
  8368  1683                     u1300:
  8369  1683                     l1984:
  8370  1683  087C               	movf	___lmul@product+3,w
  8371  1684  00F3               	movwf	?___lmul+3
  8372  1685  087B               	movf	___lmul@product+2,w
  8373  1686  00F2               	movwf	?___lmul+2
  8374  1687  087A               	movf	___lmul@product+1,w
  8375  1688  00F1               	movwf	?___lmul+1
  8376  1689  0879               	movf	___lmul@product,w
  8377  168A  00F0               	movwf	?___lmul
  8378  168B                     l531:
  8379  168B  0008               	return
  8380  168C                     __end_of___lmul:
  8381                           
  8382                           	psect	text48
  8383  1733                     __ptext48:	
  8384 ;; *************** function ___lldiv *****************
  8385 ;; Defined at:
  8386 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  divisor         4    0[COMMON] unsigned long 
  8389 ;;  dividend        4    4[COMMON] unsigned long 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  quotient        4    9[COMMON] unsigned long 
  8392 ;;  counter         1   13[COMMON] unsigned char 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  4    0[COMMON] unsigned long 
  8395 ;; Registers used:
  8396 ;;		wreg, status,2, status,0
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8402 ;;      Params:         8       0       0       0       0
  8403 ;;      Locals:         5       0       0       0       0
  8404 ;;      Temps:          1       0       0       0       0
  8405 ;;      Totals:        14       0       0       0       0
  8406 ;;Total ram usage:       14 bytes
  8407 ;; Hardware stack levels used: 1
  8408 ;; This function calls:
  8409 ;;		Nothing
  8410 ;; This function is called by:
  8411 ;;		_actual_pressure
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           
  8416                           ;psect for function ___lldiv
  8417  1733                     ___lldiv:
  8418  1733                     l2776:	
  8419                           ;incstack = 0
  8420                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8421                           
  8422  1733  3000               	movlw	0
  8423  1734  00FC               	movwf	___lldiv@quotient+3
  8424  1735  3000               	movlw	0
  8425  1736  00FB               	movwf	___lldiv@quotient+2
  8426  1737  3000               	movlw	0
  8427  1738  00FA               	movwf	___lldiv@quotient+1
  8428  1739  3000               	movlw	0
  8429  173A  00F9               	movwf	___lldiv@quotient
  8430  173B  0873               	movf	___lldiv@divisor+3,w
  8431  173C  0472               	iorwf	___lldiv@divisor+2,w
  8432  173D  0471               	iorwf	___lldiv@divisor+1,w
  8433  173E  0470               	iorwf	___lldiv@divisor,w
  8434  173F  1903               	skipnz
  8435  1740  2F42               	goto	u2861
  8436  1741  2F43               	goto	u2860
  8437  1742                     u2861:
  8438  1742  2F90               	goto	l2796
  8439  1743                     u2860:
  8440  1743                     l2778:
  8441  1743  01FD               	clrf	___lldiv@counter
  8442  1744  0AFD               	incf	___lldiv@counter,f
  8443  1745  2F53               	goto	l2782
  8444  1746                     l2780:
  8445  1746  3001               	movlw	1
  8446  1747  00F8               	movwf	??___lldiv
  8447  1748                     u2875:
  8448  1748  1003               	clrc
  8449  1749  0DF0               	rlf	___lldiv@divisor,f
  8450  174A  0DF1               	rlf	___lldiv@divisor+1,f
  8451  174B  0DF2               	rlf	___lldiv@divisor+2,f
  8452  174C  0DF3               	rlf	___lldiv@divisor+3,f
  8453  174D  0BF8               	decfsz	??___lldiv,f
  8454  174E  2F48               	goto	u2875
  8455  174F  3001               	movlw	1
  8456  1750  00F8               	movwf	??___lldiv
  8457  1751  0878               	movf	??___lldiv,w
  8458  1752  07FD               	addwf	___lldiv@counter,f
  8459  1753                     l2782:
  8460  1753  1FF3               	btfss	___lldiv@divisor+3,7
  8461  1754  2F56               	goto	u2881
  8462  1755  2F57               	goto	u2880
  8463  1756                     u2881:
  8464  1756  2F46               	goto	l2780
  8465  1757                     u2880:
  8466  1757                     l2784:
  8467  1757  3001               	movlw	1
  8468  1758  00F8               	movwf	??___lldiv
  8469  1759                     u2895:
  8470  1759  1003               	clrc
  8471  175A  0DF9               	rlf	___lldiv@quotient,f
  8472  175B  0DFA               	rlf	___lldiv@quotient+1,f
  8473  175C  0DFB               	rlf	___lldiv@quotient+2,f
  8474  175D  0DFC               	rlf	___lldiv@quotient+3,f
  8475  175E  0BF8               	decfsz	??___lldiv,f
  8476  175F  2F59               	goto	u2895
  8477  1760                     l2786:
  8478  1760  0873               	movf	___lldiv@divisor+3,w
  8479  1761  0277               	subwf	___lldiv@dividend+3,w
  8480  1762  1D03               	skipz
  8481  1763  2F6E               	goto	u2905
  8482  1764  0872               	movf	___lldiv@divisor+2,w
  8483  1765  0276               	subwf	___lldiv@dividend+2,w
  8484  1766  1D03               	skipz
  8485  1767  2F6E               	goto	u2905
  8486  1768  0871               	movf	___lldiv@divisor+1,w
  8487  1769  0275               	subwf	___lldiv@dividend+1,w
  8488  176A  1D03               	skipz
  8489  176B  2F6E               	goto	u2905
  8490  176C  0870               	movf	___lldiv@divisor,w
  8491  176D  0274               	subwf	___lldiv@dividend,w
  8492  176E                     u2905:
  8493  176E  1C03               	skipc
  8494  176F  2F71               	goto	u2901
  8495  1770  2F72               	goto	u2900
  8496  1771                     u2901:
  8497  1771  2F81               	goto	l2792
  8498  1772                     u2900:
  8499  1772                     l2788:
  8500  1772  0870               	movf	___lldiv@divisor,w
  8501  1773  02F4               	subwf	___lldiv@dividend,f
  8502  1774  0871               	movf	___lldiv@divisor+1,w
  8503  1775  1C03               	skipc
  8504  1776  0F71               	incfsz	___lldiv@divisor+1,w
  8505  1777  02F5               	subwf	___lldiv@dividend+1,f
  8506  1778  0872               	movf	___lldiv@divisor+2,w
  8507  1779  1C03               	skipc
  8508  177A  0F72               	incfsz	___lldiv@divisor+2,w
  8509  177B  02F6               	subwf	___lldiv@dividend+2,f
  8510  177C  0873               	movf	___lldiv@divisor+3,w
  8511  177D  1C03               	skipc
  8512  177E  0F73               	incfsz	___lldiv@divisor+3,w
  8513  177F  02F7               	subwf	___lldiv@dividend+3,f
  8514  1780                     l2790:
  8515  1780  1479               	bsf	___lldiv@quotient,0
  8516  1781                     l2792:
  8517  1781  3001               	movlw	1
  8518  1782                     u2915:
  8519  1782  1003               	clrc
  8520  1783  0CF3               	rrf	___lldiv@divisor+3,f
  8521  1784  0CF2               	rrf	___lldiv@divisor+2,f
  8522  1785  0CF1               	rrf	___lldiv@divisor+1,f
  8523  1786  0CF0               	rrf	___lldiv@divisor,f
  8524  1787  3EFF               	addlw	-1
  8525  1788  1D03               	skipz
  8526  1789  2F82               	goto	u2915
  8527  178A                     l2794:
  8528  178A  3001               	movlw	1
  8529  178B  02FD               	subwf	___lldiv@counter,f
  8530  178C  1D03               	btfss	3,2
  8531  178D  2F8F               	goto	u2921
  8532  178E  2F90               	goto	u2920
  8533  178F                     u2921:
  8534  178F  2F57               	goto	l2784
  8535  1790                     u2920:
  8536  1790                     l2796:
  8537  1790  087C               	movf	___lldiv@quotient+3,w
  8538  1791  00F3               	movwf	?___lldiv+3
  8539  1792  087B               	movf	___lldiv@quotient+2,w
  8540  1793  00F2               	movwf	?___lldiv+2
  8541  1794  087A               	movf	___lldiv@quotient+1,w
  8542  1795  00F1               	movwf	?___lldiv+1
  8543  1796  0879               	movf	___lldiv@quotient,w
  8544  1797  00F0               	movwf	?___lldiv
  8545  1798                     l553:
  8546  1798  0008               	return
  8547  1799                     __end_of___lldiv:
  8548                           
  8549                           	psect	text49
  8550  08E3                     __ptext49:	
  8551 ;; *************** function ___aldiv *****************
  8552 ;; Defined at:
  8553 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;  divisor         4    0[BANK0 ] long 
  8556 ;;  dividend        4    4[BANK0 ] long 
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  quotient        4   10[BANK0 ] long 
  8559 ;;  sign            1    9[BANK0 ] unsigned char 
  8560 ;;  counter         1    8[BANK0 ] unsigned char 
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  4    0[BANK0 ] long 
  8563 ;; Registers used:
  8564 ;;		wreg, status,2, status,0
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8570 ;;      Params:         0       8       0       0       0
  8571 ;;      Locals:         0       6       0       0       0
  8572 ;;      Temps:          1       0       0       0       0
  8573 ;;      Totals:         1      14       0       0       0
  8574 ;;Total ram usage:       15 bytes
  8575 ;; Hardware stack levels used: 1
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_LCD_num
  8580 ;;		_actual_pressure
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           
  8585                           ;psect for function ___aldiv
  8586  08E3                     ___aldiv:
  8587  08E3                     l1988:	
  8588                           ;incstack = 0
  8589                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8590                           
  8591  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  8592  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  8593  08E5  01D0               	clrf	___aldiv@sign
  8594  08E6                     l1990:
  8595  08E6  1FCA               	btfss	___aldiv@divisor+3,7
  8596  08E7  28E9               	goto	u1311
  8597  08E8  28EA               	goto	u1310
  8598  08E9                     u1311:
  8599  08E9  28F7               	goto	l582
  8600  08EA                     u1310:
  8601  08EA                     l1992:
  8602  08EA  09C7               	comf	___aldiv@divisor,f
  8603  08EB  09C8               	comf	___aldiv@divisor+1,f
  8604  08EC  09C9               	comf	___aldiv@divisor+2,f
  8605  08ED  09CA               	comf	___aldiv@divisor+3,f
  8606  08EE  0AC7               	incf	___aldiv@divisor,f
  8607  08EF  1903               	skipnz
  8608  08F0  0AC8               	incf	___aldiv@divisor+1,f
  8609  08F1  1903               	skipnz
  8610  08F2  0AC9               	incf	___aldiv@divisor+2,f
  8611  08F3  1903               	skipnz
  8612  08F4  0ACA               	incf	___aldiv@divisor+3,f
  8613  08F5  01D0               	clrf	___aldiv@sign
  8614  08F6  0AD0               	incf	___aldiv@sign,f
  8615  08F7                     l582:
  8616  08F7  1FCE               	btfss	___aldiv@dividend+3,7
  8617  08F8  28FA               	goto	u1321
  8618  08F9  28FB               	goto	u1320
  8619  08FA                     u1321:
  8620  08FA  290A               	goto	l1998
  8621  08FB                     u1320:
  8622  08FB                     l1994:
  8623  08FB  09CB               	comf	___aldiv@dividend,f
  8624  08FC  09CC               	comf	___aldiv@dividend+1,f
  8625  08FD  09CD               	comf	___aldiv@dividend+2,f
  8626  08FE  09CE               	comf	___aldiv@dividend+3,f
  8627  08FF  0ACB               	incf	___aldiv@dividend,f
  8628  0900  1903               	skipnz
  8629  0901  0ACC               	incf	___aldiv@dividend+1,f
  8630  0902  1903               	skipnz
  8631  0903  0ACD               	incf	___aldiv@dividend+2,f
  8632  0904  1903               	skipnz
  8633  0905  0ACE               	incf	___aldiv@dividend+3,f
  8634  0906                     l1996:
  8635  0906  3001               	movlw	1
  8636  0907  00FD               	movwf	??___aldiv
  8637  0908  087D               	movf	??___aldiv,w
  8638  0909  06D0               	xorwf	___aldiv@sign,f
  8639  090A                     l1998:
  8640  090A  3000               	movlw	0
  8641  090B  00D4               	movwf	___aldiv@quotient+3
  8642  090C  3000               	movlw	0
  8643  090D  00D3               	movwf	___aldiv@quotient+2
  8644  090E  3000               	movlw	0
  8645  090F  00D2               	movwf	___aldiv@quotient+1
  8646  0910  3000               	movlw	0
  8647  0911  00D1               	movwf	___aldiv@quotient
  8648  0912                     l2000:
  8649  0912  084A               	movf	___aldiv@divisor+3,w
  8650  0913  0449               	iorwf	___aldiv@divisor+2,w
  8651  0914  0448               	iorwf	___aldiv@divisor+1,w
  8652  0915  0447               	iorwf	___aldiv@divisor,w
  8653  0916  1903               	skipnz
  8654  0917  2919               	goto	u1331
  8655  0918  291A               	goto	u1330
  8656  0919                     u1331:
  8657  0919  2967               	goto	l2020
  8658  091A                     u1330:
  8659  091A                     l2002:
  8660  091A  01CF               	clrf	___aldiv@counter
  8661  091B  0ACF               	incf	___aldiv@counter,f
  8662  091C  292A               	goto	l2006
  8663  091D                     l2004:
  8664  091D  3001               	movlw	1
  8665  091E  00FD               	movwf	??___aldiv
  8666  091F                     u1345:
  8667  091F  1003               	clrc
  8668  0920  0DC7               	rlf	___aldiv@divisor,f
  8669  0921  0DC8               	rlf	___aldiv@divisor+1,f
  8670  0922  0DC9               	rlf	___aldiv@divisor+2,f
  8671  0923  0DCA               	rlf	___aldiv@divisor+3,f
  8672  0924  0BFD               	decfsz	??___aldiv,f
  8673  0925  291F               	goto	u1345
  8674  0926  3001               	movlw	1
  8675  0927  00FD               	movwf	??___aldiv
  8676  0928  087D               	movf	??___aldiv,w
  8677  0929  07CF               	addwf	___aldiv@counter,f
  8678  092A                     l2006:
  8679  092A  1FCA               	btfss	___aldiv@divisor+3,7
  8680  092B  292D               	goto	u1351
  8681  092C  292E               	goto	u1350
  8682  092D                     u1351:
  8683  092D  291D               	goto	l2004
  8684  092E                     u1350:
  8685  092E                     l2008:
  8686  092E  3001               	movlw	1
  8687  092F  00FD               	movwf	??___aldiv
  8688  0930                     u1365:
  8689  0930  1003               	clrc
  8690  0931  0DD1               	rlf	___aldiv@quotient,f
  8691  0932  0DD2               	rlf	___aldiv@quotient+1,f
  8692  0933  0DD3               	rlf	___aldiv@quotient+2,f
  8693  0934  0DD4               	rlf	___aldiv@quotient+3,f
  8694  0935  0BFD               	decfsz	??___aldiv,f
  8695  0936  2930               	goto	u1365
  8696  0937                     l2010:
  8697  0937  084A               	movf	___aldiv@divisor+3,w
  8698  0938  024E               	subwf	___aldiv@dividend+3,w
  8699  0939  1D03               	skipz
  8700  093A  2945               	goto	u1375
  8701  093B  0849               	movf	___aldiv@divisor+2,w
  8702  093C  024D               	subwf	___aldiv@dividend+2,w
  8703  093D  1D03               	skipz
  8704  093E  2945               	goto	u1375
  8705  093F  0848               	movf	___aldiv@divisor+1,w
  8706  0940  024C               	subwf	___aldiv@dividend+1,w
  8707  0941  1D03               	skipz
  8708  0942  2945               	goto	u1375
  8709  0943  0847               	movf	___aldiv@divisor,w
  8710  0944  024B               	subwf	___aldiv@dividend,w
  8711  0945                     u1375:
  8712  0945  1C03               	skipc
  8713  0946  2948               	goto	u1371
  8714  0947  2949               	goto	u1370
  8715  0948                     u1371:
  8716  0948  2958               	goto	l2016
  8717  0949                     u1370:
  8718  0949                     l2012:
  8719  0949  0847               	movf	___aldiv@divisor,w
  8720  094A  02CB               	subwf	___aldiv@dividend,f
  8721  094B  0848               	movf	___aldiv@divisor+1,w
  8722  094C  1C03               	skipc
  8723  094D  0F48               	incfsz	___aldiv@divisor+1,w
  8724  094E  02CC               	subwf	___aldiv@dividend+1,f
  8725  094F  0849               	movf	___aldiv@divisor+2,w
  8726  0950  1C03               	skipc
  8727  0951  0F49               	incfsz	___aldiv@divisor+2,w
  8728  0952  02CD               	subwf	___aldiv@dividend+2,f
  8729  0953  084A               	movf	___aldiv@divisor+3,w
  8730  0954  1C03               	skipc
  8731  0955  0F4A               	incfsz	___aldiv@divisor+3,w
  8732  0956  02CE               	subwf	___aldiv@dividend+3,f
  8733  0957                     l2014:
  8734  0957  1451               	bsf	___aldiv@quotient,0
  8735  0958                     l2016:
  8736  0958  3001               	movlw	1
  8737  0959                     u1385:
  8738  0959  1003               	clrc
  8739  095A  0CCA               	rrf	___aldiv@divisor+3,f
  8740  095B  0CC9               	rrf	___aldiv@divisor+2,f
  8741  095C  0CC8               	rrf	___aldiv@divisor+1,f
  8742  095D  0CC7               	rrf	___aldiv@divisor,f
  8743  095E  3EFF               	addlw	-1
  8744  095F  1D03               	skipz
  8745  0960  2959               	goto	u1385
  8746  0961                     l2018:
  8747  0961  3001               	movlw	1
  8748  0962  02CF               	subwf	___aldiv@counter,f
  8749  0963  1D03               	btfss	3,2
  8750  0964  2966               	goto	u1391
  8751  0965  2967               	goto	u1390
  8752  0966                     u1391:
  8753  0966  292E               	goto	l2008
  8754  0967                     u1390:
  8755  0967                     l2020:
  8756  0967  0850               	movf	___aldiv@sign,w
  8757  0968  1903               	btfsc	3,2
  8758  0969  296B               	goto	u1401
  8759  096A  296C               	goto	u1400
  8760  096B                     u1401:
  8761  096B  2977               	goto	l2024
  8762  096C                     u1400:
  8763  096C                     l2022:
  8764  096C  09D1               	comf	___aldiv@quotient,f
  8765  096D  09D2               	comf	___aldiv@quotient+1,f
  8766  096E  09D3               	comf	___aldiv@quotient+2,f
  8767  096F  09D4               	comf	___aldiv@quotient+3,f
  8768  0970  0AD1               	incf	___aldiv@quotient,f
  8769  0971  1903               	skipnz
  8770  0972  0AD2               	incf	___aldiv@quotient+1,f
  8771  0973  1903               	skipnz
  8772  0974  0AD3               	incf	___aldiv@quotient+2,f
  8773  0975  1903               	skipnz
  8774  0976  0AD4               	incf	___aldiv@quotient+3,f
  8775  0977                     l2024:
  8776  0977  0854               	movf	___aldiv@quotient+3,w
  8777  0978  00CA               	movwf	?___aldiv+3
  8778  0979  0853               	movf	___aldiv@quotient+2,w
  8779  097A  00C9               	movwf	?___aldiv+2
  8780  097B  0852               	movf	___aldiv@quotient+1,w
  8781  097C  00C8               	movwf	?___aldiv+1
  8782  097D  0851               	movf	___aldiv@quotient,w
  8783  097E  00C7               	movwf	?___aldiv
  8784  097F                     l592:
  8785  097F  0008               	return
  8786  0980                     __end_of___aldiv:
  8787                           
  8788                           	psect	text50
  8789  1421                     __ptext50:	
  8790 ;; *************** function _LCD_init *****************
  8791 ;; Defined at:
  8792 ;;		line 41 in file "./lcd4bit.h"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg, status,2, status,0, pclath, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8806 ;;      Params:         0       0       0       0       0
  8807 ;;      Locals:         0       0       0       0       0
  8808 ;;      Temps:          2       0       0       0       0
  8809 ;;      Totals:         2       0       0       0       0
  8810 ;;Total ram usage:        2 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 1
  8813 ;; This function calls:
  8814 ;;		_LCD_Command
  8815 ;; This function is called by:
  8816 ;;		_main
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           
  8821                           ;psect for function _LCD_init
  8822  1421                     _LCD_init:
  8823  1421                     l2894:	
  8824                           ;incstack = 0
  8825                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  8826                           
  8827                           
  8828                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  8829  1421  1683               	bsf	3,5	;RP0=1, select bank1
  8830  1422  1303               	bcf	3,6	;RP1=0, select bank1
  8831  1423  1386               	bcf	6,7	;volatile
  8832                           
  8833                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  8834  1424  1306               	bcf	6,6	;volatile
  8835                           
  8836                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  8837  1425  1286               	bcf	6,5	;volatile
  8838                           
  8839                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  8840  1426  1206               	bcf	6,4	;volatile
  8841                           
  8842                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  8843  1427  1007               	bcf	7,0	;volatile
  8844                           
  8845                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  8846  1428  1087               	bcf	7,1	;volatile
  8847  1429                     l2896:
  8848                           
  8849                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  8850  1429  3002               	movlw	2
  8851  142A  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  8852                           
  8853                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  8854  142F  3028               	movlw	40
  8855  1430  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  8856                           
  8857                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  8858  1435  3080               	movlw	128
  8859  1436  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  8860                           
  8861                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  8862  143B  300C               	movlw	12
  8863  143C  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  8864                           
  8865                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  8866  1441  3006               	movlw	6
  8867  1442  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  8868                           
  8869                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  8870  1447  3001               	movlw	1
  8871  1448  160A  118A  2540  160A  118A  	fcall	_LCD_Command
  8872  144D                     l2898:
  8873                           
  8874                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  8875  144D  3041               	movlw	65
  8876  144E  00F4               	movwf	??_LCD_init+1
  8877  144F  30EE               	movlw	238
  8878  1450  00F3               	movwf	??_LCD_init
  8879  1451                     u4437:
  8880  1451  0BF3               	decfsz	??_LCD_init,f
  8881  1452  2C51               	goto	u4437
  8882  1453  0BF4               	decfsz	??_LCD_init+1,f
  8883  1454  2C51               	goto	u4437
  8884  1455  0000               	nop
  8885  1456                     l115:
  8886  1456  0008               	return
  8887  1457                     __end_of_LCD_init:
  8888                           
  8889                           	psect	text51
  8890  1540                     __ptext51:	
  8891 ;; *************** function _LCD_Command *****************
  8892 ;; Defined at:
  8893 ;;		line 13 in file "./lcd4bit.h"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;  cmnd            1    wreg     unsigned char 
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;  cmnd            1    2[COMMON] unsigned char 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, status,2, status,0
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8907 ;;      Params:         0       0       0       0       0
  8908 ;;      Locals:         1       0       0       0       0
  8909 ;;      Temps:          2       0       0       0       0
  8910 ;;      Totals:         3       0       0       0       0
  8911 ;;Total ram usage:        3 bytes
  8912 ;; Hardware stack levels used: 1
  8913 ;; This function calls:
  8914 ;;		Nothing
  8915 ;; This function is called by:
  8916 ;;		_LCD_init
  8917 ;;		_main
  8918 ;;		_print_dht11data
  8919 ;;		_rtc_lcd_data
  8920 ;;		_bmp280_displaydata
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           
  8925                           ;psect for function _LCD_Command
  8926  1540                     _LCD_Command:
  8927                           
  8928                           ;incstack = 0
  8929                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  8930                           ;LCD_Command@cmnd stored from wreg
  8931  1540  00F2               	movwf	LCD_Command@cmnd
  8932  1541                     l2504:
  8933                           
  8934                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  8935  1541  1283               	bcf	3,5	;RP0=0, select bank0
  8936  1542  1303               	bcf	3,6	;RP1=0, select bank0
  8937  1543  1007               	bcf	7,0	;volatile
  8938  1544                     l2506:
  8939                           
  8940                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  8941  1544  0872               	movf	LCD_Command@cmnd,w
  8942  1545  0086               	movwf	6	;volatile
  8943  1546                     l2508:
  8944                           
  8945                           ;./lcd4bit.h: 17:     RC1 = 1;
  8946  1546  1487               	bsf	7,1	;volatile
  8947                           
  8948                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  8949  1547  3041               	movlw	65
  8950  1548  00F1               	movwf	??_LCD_Command+1
  8951  1549  30EE               	movlw	238
  8952  154A  00F0               	movwf	??_LCD_Command
  8953  154B                     u4447:
  8954  154B  0BF0               	decfsz	??_LCD_Command,f
  8955  154C  2D4B               	goto	u4447
  8956  154D  0BF1               	decfsz	??_LCD_Command+1,f
  8957  154E  2D4B               	goto	u4447
  8958  154F  0000               	nop
  8959  1550                     l2510:
  8960                           
  8961                           ;./lcd4bit.h: 19:     RC1 = 0;
  8962  1550  1283               	bcf	3,5	;RP0=0, select bank0
  8963  1551  1303               	bcf	3,6	;RP1=0, select bank0
  8964  1552  1087               	bcf	7,1	;volatile
  8965                           
  8966                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  8967  1553  3041               	movlw	65
  8968  1554  00F1               	movwf	??_LCD_Command+1
  8969  1555  30EE               	movlw	238
  8970  1556  00F0               	movwf	??_LCD_Command
  8971  1557                     u4457:
  8972  1557  0BF0               	decfsz	??_LCD_Command,f
  8973  1558  2D57               	goto	u4457
  8974  1559  0BF1               	decfsz	??_LCD_Command+1,f
  8975  155A  2D57               	goto	u4457
  8976  155B  0000               	nop
  8977  155C                     l2512:
  8978                           
  8979                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  8980  155C  0872               	movf	LCD_Command@cmnd,w
  8981  155D  00F0               	movwf	??_LCD_Command
  8982  155E  3003               	movlw	3
  8983  155F                     u2595:
  8984  155F  1003               	clrc
  8985  1560  0DF0               	rlf	??_LCD_Command,f
  8986  1561  3EFF               	addlw	-1
  8987  1562  1D03               	skipz
  8988  1563  2D5F               	goto	u2595
  8989  1564  1003               	clrc
  8990  1565  0D70               	rlf	??_LCD_Command,w
  8991  1566  1283               	bcf	3,5	;RP0=0, select bank0
  8992  1567  1303               	bcf	3,6	;RP1=0, select bank0
  8993  1568  0086               	movwf	6	;volatile
  8994  1569                     l2514:
  8995                           
  8996                           ;./lcd4bit.h: 22:     RC1 = 1;
  8997  1569  1487               	bsf	7,1	;volatile
  8998  156A                     l2516:
  8999                           
  9000                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  9001  156A  3041               	movlw	65
  9002  156B  00F1               	movwf	??_LCD_Command+1
  9003  156C  30EE               	movlw	238
  9004  156D  00F0               	movwf	??_LCD_Command
  9005  156E                     u4467:
  9006  156E  0BF0               	decfsz	??_LCD_Command,f
  9007  156F  2D6E               	goto	u4467
  9008  1570  0BF1               	decfsz	??_LCD_Command+1,f
  9009  1571  2D6E               	goto	u4467
  9010  1572  0000               	nop
  9011  1573                     l2518:
  9012                           
  9013                           ;./lcd4bit.h: 24:     RC1 = 0;
  9014  1573  1283               	bcf	3,5	;RP0=0, select bank0
  9015  1574  1303               	bcf	3,6	;RP1=0, select bank0
  9016  1575  1087               	bcf	7,1	;volatile
  9017  1576                     l2520:
  9018                           
  9019                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  9020  1576  3041               	movlw	65
  9021  1577  00F1               	movwf	??_LCD_Command+1
  9022  1578  30EE               	movlw	238
  9023  1579  00F0               	movwf	??_LCD_Command
  9024  157A                     u4477:
  9025  157A  0BF0               	decfsz	??_LCD_Command,f
  9026  157B  2D7A               	goto	u4477
  9027  157C  0BF1               	decfsz	??_LCD_Command+1,f
  9028  157D  2D7A               	goto	u4477
  9029  157E  0000               	nop
  9030  157F                     l109:
  9031  157F  0008               	return
  9032  1580                     __end_of_LCD_Command:
  9033                           
  9034                           	psect	text52
  9035  0809                     __ptext52:	
  9036 ;; *************** function _ADC_Init *****************
  9037 ;; Defined at:
  9038 ;;		line 109 in file "main.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;		None
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;		None
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		wreg
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9052 ;;      Params:         0       0       0       0       0
  9053 ;;      Locals:         0       0       0       0       0
  9054 ;;      Temps:          2       0       0       0       0
  9055 ;;      Totals:         2       0       0       0       0
  9056 ;;Total ram usage:        2 bytes
  9057 ;; Hardware stack levels used: 1
  9058 ;; This function calls:
  9059 ;;		Nothing
  9060 ;; This function is called by:
  9061 ;;		_main
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           
  9066                           ;psect for function _ADC_Init
  9067  0809                     _ADC_Init:
  9068  0809                     l2918:	
  9069                           ;incstack = 0
  9070                           ; Regs used in _ADC_Init: [wreg]
  9071                           
  9072                           
  9073                           ;main.c: 111:     ADCON0 = 0x85;
  9074  0809  3085               	movlw	133
  9075  080A  1283               	bcf	3,5	;RP0=0, select bank0
  9076  080B  1303               	bcf	3,6	;RP1=0, select bank0
  9077  080C  009F               	movwf	31	;volatile
  9078                           
  9079                           ;main.c: 112:     ADCON1 = 0xC0;
  9080  080D  30C0               	movlw	192
  9081  080E  1683               	bsf	3,5	;RP0=1, select bank1
  9082  080F  1303               	bcf	3,6	;RP1=0, select bank1
  9083  0810  009F               	movwf	31	;volatile
  9084                           
  9085                           ;main.c: 113:     AV[0]= ((ADRESH<<8)+ADRESL);
  9086  0811  1283               	bcf	3,5	;RP0=0, select bank0
  9087  0812  1303               	bcf	3,6	;RP1=0, select bank0
  9088  0813  081E               	movf	30,w	;volatile
  9089  0814  1683               	bsf	3,5	;RP0=1, select bank3
  9090  0815  1703               	bsf	3,6	;RP1=1, select bank3
  9091  0816  0091               	movwf	(_AV+1)^(0+384)
  9092  0817  1683               	bsf	3,5	;RP0=1, select bank1
  9093  0818  1303               	bcf	3,6	;RP1=0, select bank1
  9094  0819  081E               	movf	30,w	;volatile
  9095  081A  1683               	bsf	3,5	;RP0=1, select bank3
  9096  081B  1703               	bsf	3,6	;RP1=1, select bank3
  9097  081C  0090               	movwf	_AV^(0+384)
  9098                           
  9099                           ;main.c: 115:     _delay((unsigned long)((10)*(20000000/4000.0)));
  9100  081D  3041               	movlw	65
  9101  081E  00F1               	movwf	??_ADC_Init+1
  9102  081F  30EE               	movlw	238
  9103  0820  00F0               	movwf	??_ADC_Init
  9104  0821                     u4487:
  9105  0821  0BF0               	decfsz	??_ADC_Init,f
  9106  0822  2821               	goto	u4487
  9107  0823  0BF1               	decfsz	??_ADC_Init+1,f
  9108  0824  2821               	goto	u4487
  9109  0825  0000               	nop
  9110                           
  9111                           ;main.c: 116:     ADCON0 = 0x8D;
  9112  0826  308D               	movlw	141
  9113  0827  1283               	bcf	3,5	;RP0=0, select bank0
  9114  0828  1303               	bcf	3,6	;RP1=0, select bank0
  9115  0829  009F               	movwf	31	;volatile
  9116                           
  9117                           ;main.c: 117:     ADCON1 = 0xC0;
  9118  082A  30C0               	movlw	192
  9119  082B  1683               	bsf	3,5	;RP0=1, select bank1
  9120  082C  1303               	bcf	3,6	;RP1=0, select bank1
  9121  082D  009F               	movwf	31	;volatile
  9122                           
  9123                           ;main.c: 118:     AV[1]= ((ADRESH<<8)+ADRESL);
  9124  082E  1283               	bcf	3,5	;RP0=0, select bank0
  9125  082F  1303               	bcf	3,6	;RP1=0, select bank0
  9126  0830  081E               	movf	30,w	;volatile
  9127  0831  1683               	bsf	3,5	;RP0=1, select bank3
  9128  0832  1703               	bsf	3,6	;RP1=1, select bank3
  9129  0833  0093               	movwf	((_AV+1)^(0+384)+2)
  9130  0834  1683               	bsf	3,5	;RP0=1, select bank1
  9131  0835  1303               	bcf	3,6	;RP1=0, select bank1
  9132  0836  081E               	movf	30,w	;volatile
  9133  0837  1683               	bsf	3,5	;RP0=1, select bank3
  9134  0838  1703               	bsf	3,6	;RP1=1, select bank3
  9135  0839  0092               	movwf	(_AV^(0+384)+2)
  9136                           
  9137                           ;main.c: 120:     _delay((unsigned long)((10)*(20000000/4000.0)));
  9138  083A  3041               	movlw	65
  9139  083B  00F1               	movwf	??_ADC_Init+1
  9140  083C  30EE               	movlw	238
  9141  083D  00F0               	movwf	??_ADC_Init
  9142  083E                     u4497:
  9143  083E  0BF0               	decfsz	??_ADC_Init,f
  9144  083F  283E               	goto	u4497
  9145  0840  0BF1               	decfsz	??_ADC_Init+1,f
  9146  0841  283E               	goto	u4497
  9147  0842  0000               	nop
  9148                           
  9149                           ;main.c: 121:     ADCON0 = 0x95;
  9150  0843  3095               	movlw	149
  9151  0844  1283               	bcf	3,5	;RP0=0, select bank0
  9152  0845  1303               	bcf	3,6	;RP1=0, select bank0
  9153  0846  009F               	movwf	31	;volatile
  9154                           
  9155                           ;main.c: 122:     ADCON1 = 0xC0;
  9156  0847  30C0               	movlw	192
  9157  0848  1683               	bsf	3,5	;RP0=1, select bank1
  9158  0849  1303               	bcf	3,6	;RP1=0, select bank1
  9159  084A  009F               	movwf	31	;volatile
  9160                           
  9161                           ;main.c: 123:     AV[2]= ((ADRESH<<8)+ADRESL);
  9162  084B  1283               	bcf	3,5	;RP0=0, select bank0
  9163  084C  1303               	bcf	3,6	;RP1=0, select bank0
  9164  084D  081E               	movf	30,w	;volatile
  9165  084E  1683               	bsf	3,5	;RP0=1, select bank3
  9166  084F  1703               	bsf	3,6	;RP1=1, select bank3
  9167  0850  0095               	movwf	((_AV+1)^(0+384)+4)
  9168  0851  1683               	bsf	3,5	;RP0=1, select bank1
  9169  0852  1303               	bcf	3,6	;RP1=0, select bank1
  9170  0853  081E               	movf	30,w	;volatile
  9171  0854  1683               	bsf	3,5	;RP0=1, select bank3
  9172  0855  1703               	bsf	3,6	;RP1=1, select bank3
  9173  0856  0094               	movwf	(_AV^(0+384)+4)
  9174                           
  9175                           ;main.c: 125:     _delay((unsigned long)((10)*(20000000/4000.0)));
  9176  0857  3041               	movlw	65
  9177  0858  00F1               	movwf	??_ADC_Init+1
  9178  0859  30EE               	movlw	238
  9179  085A  00F0               	movwf	??_ADC_Init
  9180  085B                     u4507:
  9181  085B  0BF0               	decfsz	??_ADC_Init,f
  9182  085C  285B               	goto	u4507
  9183  085D  0BF1               	decfsz	??_ADC_Init+1,f
  9184  085E  285B               	goto	u4507
  9185  085F  0000               	nop
  9186                           
  9187                           ;main.c: 126:     ADCON0 = 0x9D;
  9188  0860  309D               	movlw	157
  9189  0861  1283               	bcf	3,5	;RP0=0, select bank0
  9190  0862  1303               	bcf	3,6	;RP1=0, select bank0
  9191  0863  009F               	movwf	31	;volatile
  9192                           
  9193                           ;main.c: 127:     ADCON1 = 0xC0;
  9194  0864  30C0               	movlw	192
  9195  0865  1683               	bsf	3,5	;RP0=1, select bank1
  9196  0866  1303               	bcf	3,6	;RP1=0, select bank1
  9197  0867  009F               	movwf	31	;volatile
  9198                           
  9199                           ;main.c: 128:     AV[3]= ((ADRESH<<8)+ADRESL);
  9200  0868  1283               	bcf	3,5	;RP0=0, select bank0
  9201  0869  1303               	bcf	3,6	;RP1=0, select bank0
  9202  086A  081E               	movf	30,w	;volatile
  9203  086B  1683               	bsf	3,5	;RP0=1, select bank3
  9204  086C  1703               	bsf	3,6	;RP1=1, select bank3
  9205  086D  0097               	movwf	((_AV+1)^(0+384)+6)
  9206  086E  1683               	bsf	3,5	;RP0=1, select bank1
  9207  086F  1303               	bcf	3,6	;RP1=0, select bank1
  9208  0870  081E               	movf	30,w	;volatile
  9209  0871  1683               	bsf	3,5	;RP0=1, select bank3
  9210  0872  1703               	bsf	3,6	;RP1=1, select bank3
  9211  0873  0096               	movwf	(_AV^(0+384)+6)
  9212  0874                     l384:
  9213  0874  0008               	return
  9214  0875                     __end_of_ADC_Init:
  9215  007E                     btemp	set	126	;btemp
  9216  007E                     wtemp0	set	126
  9217                           
  9218                           	psect	idloc
  9219                           
  9220                           ;Config register IDLOC0 @ 0x2000
  9221                           ;	unspecified, using default values
  9222  2000                     	org	8192
  9223  2000  3FFF               	dw	16383
  9224                           
  9225                           ;Config register IDLOC1 @ 0x2001
  9226                           ;	unspecified, using default values
  9227  2001                     	org	8193
  9228  2001  3FFF               	dw	16383
  9229                           
  9230                           ;Config register IDLOC2 @ 0x2002
  9231                           ;	unspecified, using default values
  9232  2002                     	org	8194
  9233  2002  3FFF               	dw	16383
  9234                           
  9235                           ;Config register IDLOC3 @ 0x2003
  9236                           ;	unspecified, using default values
  9237  2003                     	org	8195
  9238  2003  3FFF               	dw	16383
  9239                           
  9240                           	psect	config
  9241                           
  9242                           ;Config register CONFIG @ 0x2007
  9243                           ;	Oscillator Selection bits
  9244                           ;	FOSC = HS, HS oscillator
  9245                           ;	Watchdog Timer Enable bit
  9246                           ;	WDTE = OFF, WDT disabled
  9247                           ;	Power-up Timer Enable bit
  9248                           ;	PWRTE = OFF, PWRT disabled
  9249                           ;	Brown-out Reset Enable bit
  9250                           ;	BOREN = ON, BOR enabled
  9251                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9252                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  9253                           ;	Data EEPROM Memory Code Protection bit
  9254                           ;	CPD = OFF, Data EEPROM code protection off
  9255                           ;	Flash Program Memory Write Enable bits
  9256                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9257                           ;	In-Circuit Debugger Mode bit
  9258                           ;	DEBUG = 0x1, unprogrammed default
  9259                           ;	Flash Program Memory Code Protection bit
  9260                           ;	CP = OFF, Code protection off
  9261  2007                     	org	8199
  9262  2007  3FFA               	dw	16378

Data Sizes:
    Strings     22
    Constant    76
    Data        4
    BSS         127
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      79
    BANK1            80      0      79
    BANK3            96      0      11
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 6
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _uncompensated_pressure->_bmp280_read_byte
    _bmp280_send_byte->_bmp280_send
    _rtc_terminal_data->_convup
    _rtc_lcd_data->_LCD_Char
    _rtc_lcd_data->_LCD_Command
    _rtc_getdata->_rtc_read_byte
    _rtc_read_byte->_rtc_send
    _print_serialnumber->_tx_sn
    _print_dht11data->_show_multidigits
    _print_dht11data->_tx_sn
    _LCD_num->___aldiv
    _bmp280_terminaldata->_tx_sn
    _tx_sn->___awdiv
    _bmp280_getdata->_bmp280_read_byte
    _bmp280_read_byte->_bmp280_send
    _bmp280_displaydata->_show_multidigits
    _show_multidigits->___awdiv
    _show->_LCD_Char
    _actual_pressure->___aldiv
    _actual_pressure->___lldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_print_analogvoltages
    _print_serialnumber->_tx_sn
    _print_dht11data->_show_multidigits
    _print_dht11data->_tx_sn
    _print_analogvoltages->_LCD_num
    _LCD_num->___aldiv
    _bmp280_terminaldata->_tx_sn
    _bmp280_displaydata->_show_multidigits
    _actual_pressure->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   46371
                                             35 BANK0      3     3      0
                           _ADC_Init
                        _LCD_Command
                           _LCD_init
                    _actual_pressure
                 _bmp280_displaydata
                     _bmp280_getdata
                        _bmp280_init
                _bmp280_terminaldata
               _print_analogvoltages
                    _print_dht11data
                 _print_serialnumber
                        _rtc_getdata
                            _rtc_int
                       _rtc_lcd_data
                  _rtc_terminal_data
                            _ser_int
                                 _tx
             _uncompensated_pressure
 ---------------------------------------------------------------------------------
 (1) _uncompensated_pressure                              25    25      0     278
                                              0 BANK0     25    25      0
                   _bmp280_read_byte
                   _bmp280_send_byte
 ---------------------------------------------------------------------------------
 (2) _bmp280_send_byte                                     2     1      1     142
                                              1 COMMON     2     1      1
                        _bmp280_send
                       _bmp280_start
                        _bmp280_stop
 ---------------------------------------------------------------------------------
 (3) _bmp280_start                                         0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_terminal_data                                    0     0      0      66
                              _convd
                             _convup
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _rtc_lcd_data                                         0     0      0     132
                           _LCD_Char
                        _LCD_Command
                              _convd
                             _convup
 ---------------------------------------------------------------------------------
 (2) _convup                                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _convd                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rtc_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_getdata                                          1     1      0      67
                                              4 COMMON     1     1      0
                      _rtc_read_byte
 ---------------------------------------------------------------------------------
 (2) _rtc_read_byte                                        3     3      0      67
                                              1 COMMON     3     3      0
                            _rtc_nak
                           _rtc_read
                            _rtc_res
                           _rtc_send
                           _rtc_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_stop                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_res                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_read                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _rtc_nak                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_serialnumber                                   0     0      0    6385
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (1) _print_dht11data                                      8     8      0   13073
                                             14 BANK0      8     8      0
                      _CheckResponse
                        _LCD_Command
                           _ReadData
                        _StartSignal
                               _show
                   _show_multidigits
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (2) _StartSignal                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadData                                             4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _CheckResponse                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _print_analogvoltages                                 5     5      0    8248
                                             30 BANK0      5     5      0
                           _LCD_Char
                            _LCD_num
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _LCD_num                                             18    14      4    8002
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (3) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (1) _bmp280_terminaldata                                  0     0      0    6363
                              _tx_sn
 ---------------------------------------------------------------------------------
 (2) _tx_sn                                               16    14      2    6363
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bmp280_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bmp280_getdata                                       4     4      0      67
                                              4 COMMON     4     4      0
                   _bmp280_read_byte
 ---------------------------------------------------------------------------------
 (2) _bmp280_read_byte                                     3     3      0      67
                                              1 COMMON     3     3      0
                         _bmp280_nak
                        _bmp280_read
                     _bmp280_restart
                        _bmp280_send
                        _bmp280_stop
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_stop                                          0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_send                                          1     1      0      22
                                              0 COMMON     1     1      0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_restart                                       0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_read                                          0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (3) _bmp280_nak                                           0     0      0       0
                    _bmp280_waitmssp
 ---------------------------------------------------------------------------------
 (4) _bmp280_waitmssp                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bmp280_displaydata                                   0     0      0    6574
                        _LCD_Command
                               _show
                   _show_multidigits
 ---------------------------------------------------------------------------------
 (2) _show_multidigits                                    16    14      2    6309
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1375
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _show                                                 2     2      0     221
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _actual_pressure                                     18    18      0    5008
                                             14 BANK0     18    18      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8    1916
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    2580
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Command
   _LCD_init
     _LCD_Command
   _actual_pressure
     ___aldiv
       ___lmul (ARG)
     ___lldiv
     ___lmul
   _bmp280_displaydata
     _LCD_Command
     _show
       _LCD_Char
     _show_multidigits
       _LCD_Char
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
   _bmp280_getdata
     _bmp280_read_byte
       _bmp280_nak
         _bmp280_waitmssp
       _bmp280_read
         _bmp280_waitmssp
       _bmp280_restart
         _bmp280_waitmssp
       _bmp280_send
         _bmp280_waitmssp
       _bmp280_stop
         _bmp280_waitmssp
       _bmp280_waitmssp
   _bmp280_init
   _bmp280_terminaldata
     _tx_sn
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
       _tx
   _print_analogvoltages
     _LCD_Char
     _LCD_num
       _LCD_Char
       ___aldiv
       ___lmul
       ___lwdiv
       ___lwmod
       _intdigits_chardigits
     _tx
   _print_dht11data
     _CheckResponse
     _LCD_Command
     _ReadData
     _StartSignal
     _show
     _show_multidigits
     _tx
     _tx_sn
   _print_serialnumber
     _tx
     _tx_sn
   _rtc_getdata
     _rtc_read_byte
       _rtc_nak
         _waitmssp
       _rtc_read
         _waitmssp
       _rtc_res
         _waitmssp
       _rtc_send
         _waitmssp
       _rtc_stop
         _waitmssp
       _waitmssp
   _rtc_int
   _rtc_lcd_data
     _LCD_Char
     _LCD_Command
     _convd
     _convup
   _rtc_terminal_data
     _convd
     _convup
     _tx
   _ser_int
   _tx
   _uncompensated_pressure
     _bmp280_read_byte
     _bmp280_send_byte
       _bmp280_send
       _bmp280_start
         _bmp280_waitmssp
       _bmp280_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       B       9       11.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B7      12        0.0%
ABS                  0      0      B7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 08 21:31:26 2022

   __size_of_bmp280_terminaldata 0017                                _p 0043                                pc 0002  
             ??_bmp280_read_byte 0071                     ?_LCD_Command 0070                               _AV 0190  
                             _RH 0032                               _Ch 003D                               _b0 00C0  
                             _b1 00BC                               _b2 00B8                               _b3 00B4  
                             _b4 00A4                               _b5 00B0                               _b6 0028  
                             _b7 00A0                     ___awdiv@sign 0076                               _x1 0024  
                             _x2 0020                               _aa 00D8                               _x3 00A8  
                             _ab 00D4                               _ac 00D0                               _ad 00CC  
                             _ae 00C8                               _af 00C4                               _sn 00ED  
                             _up 00AC                               _tx 12E7                               fsr 0004  
          print_analogvoltages@i 0068            print_analogvoltages@j 0069             bmp280_send_byte@addr 0072  
       ??_uncompensated_pressure 0047                ?_bmp280_send_byte 0071                              l112 15BF  
                            l201 1601                ??_bmp280_waitmssp 0070                              l115 1456  
                            l124 13FF                              l140 1322                              l109 157F  
                            l133 0FFF                              l301 12FD                              l221 129F  
                            l118 0A3E                              l230 1353                              l143 12EC  
                            l127 1331                              l223 12A5                              l304 1492  
                            l224 12A6                              l240 14DA                              l137 0FFF  
                            l305 14A0                              l145 12F0                              l146 12F1  
                            l162 029C                              l402 0CAB                              l218 1391  
                            l227 134D                              l243 1504                              l411 0E6D  
                            l308 14CA                              l236 1309                              l252 12C9  
                            l421 0682                              l405 16D9                              l261 1315  
                            l422 07C5                              l414 0B07                              l158 029C  
                            l270 0808                              l431 13A8                              l183 13C2  
                            l239 14CC                              l264 1296                              l408 0D8C  
                            l273 12C0                              l193 15C1                              l249 12D2  
                            l417 0BD5                              l282 12DC                              l258 12E6  
                            l531 168B                              l291 1333                              l267 137B  
                            l428 153F                              l276 12B7                              l292 133C  
                            l188 1420                              l285 1297                              l198 15F2  
                            l287 129D                              l295 1342                              l375 0011  
                            l384 0874                              l288 129E                              l376 0038  
                            l553 1798                              l298 13E0                              l387 1365  
                            ?_tx 0070                              l397 08E2                              l582 08F7  
                            l670 17FF                              l592 097F                              l683 1732  
                            l789 1645                              l799 1490                              _RC0 0038  
                            _RC1 0039                              _PEN 048A                              _SEN 0488  
                            _ac1 00E7                              _ac2 00E5                              _ac3 00E3  
                            _ac4 00E1                              _Sum 0030                              _day 0039  
             ??_bmp280_send_byte 0072                              _hpa 002E                              _avv 00DC  
                            _min 003B                              _sec 003C                              _oss 006D  
                            fsr0 0004                              indf 0000                     ___awmod@sign 0076  
                            tx@a 0070                     _bmp280_start 0800           show_multidigits@digit1 004D  
          bmp280_send_byte@count 0071           show_multidigits@digit2 004F           show_multidigits@digit3 004B  
         show_multidigits@digit4 0047                             ??_tx 0070                  __end_of_LCD_num 0A3F  
                           l2000 0912                             l2010 0937                             l2002 091A  
                           l2012 0949                             l2004 091D                             l2020 0967  
                           l2100 171E                             l2022 096C                             l2014 0957  
                           l2006 092A                             l2030 179A                             l2102 1724  
                           l2024 0977                             l2016 0958                             l2008 092E  
                           l2040 17AE                             l2032 179E                             l2104 1729  
                           l3000 0B51                             l2018 0961                             l3010 033F  
                           l2050 17C4                             l2042 17B2                             l2034 17A3  
                           l2106 172E                             l2130 1614                             l2122 1602  
                           l3002 0B65                             l3012 037A                             l3004 029D  
                           l2060 17E4                             l2052 17C8                             l2044 17B4  
                           l2036 17A5                             l2028 1799                             l2140 1634  
                           l2132 1618                             l2124 1604                             l3020 1505  
                           l3014 0629                             l3006 02D1                             l2062 17EB  
                           l2054 17CC                             l2046 17BA                             l2038 17A9  
                           l2142 163B                             l2134 161C                             l2126 160A  
                           l2150 145D                             l3030 152E                             l3022 150B  
                           l3016 063D                             l3008 0307                             l2056 17DD  
                           l2048 17BD                             l2064 17F1                             l2080 16E6  
                           l2072 16DA                             l2136 162D                             l2128 160D  
                           l2144 1641                             l2160 1479                             l2152 1460  
                           l3032 1534                             l3024 1511                             l3018 0660  
                           l2066 17F6                             l2058 17E3                             l2090 16FF  
                           l2082 16EA                             l2074 16DB                             l2138 1633  
                           l2162 147F                             l2154 1467                             l3026 1517  
                           l3034 1392                             l2068 17FB                             l2092 1703  
                           l2084 16EF                             l2076 16DF                             l2164 1486  
                           l2156 146B                             l2148 1457                             l3028 1522  
                           l3300 00E1                             l2510 1550                             l2094 1707  
                           l2086 16F5                             l2078 16E4                             l2158 146F  
                           l2166 148C                             l3302 00E6                             l2520 1576  
                           l2512 155C                             l2504 1541                             l2096 1711  
                           l2088 16F8                             l2600 0F9F                             l3304 00EB  
                           l2514 1569                             l2506 1544                             l2098 1717  
                           l2610 0FEC                             l2602 0FB2                             l2530 09DA  
                           l2522 0980                             l3306 00F1                             l2516 156A  
                           l2508 1546                             l1900 1581                             l2612 0FF5  
                           l2604 0FC9                             l2620 0125                             l2540 0A19  
                           l2532 09F1                             l2524 0980                             l3308 00FF  
                           l2518 1573                             l1910 15A9                             l1902 1584  
                           l2550 13EF                             l2606 0FDC                             l2630 015F  
                           l2622 012E                             l2614 010B                             l2542 0A22  
                           l2534 09F5                             l2526 09B4                             l2710 15F6  
                           l2702 15C7                             l1912 15AA                             l1904 1586  
                           l2552 13F3                             l2608 0FE3                             l2560 0E88  
                           l1920 12E8                             l2640 01A5                             l2624 0141  
                           l2632 0169                             l2616 0114                             l2544 0A2B  
                           l2536 0A0C                             l2528 09C7                             l2712 15FA  
                           l2704 15CC                             l2720 14D1                             l3280 004D  
                           l3272 0007                             l1914 15B3                             l1906 1590  
                           l2546 13E2                             l2570 0EC2                             l2562 0E91  
                           l2554 0E6E                             l2642 01BC                             l2634 0172  
                           l2650 01E9                             l2626 0145                             l2618 011C  
                           l2538 0A13                             l2714 1600                             l2706 15D2  
                           l1930 12FE                             l1922 1344                             l2730 14F1  
                           l2722 14D5                             l3290 0066                             l3282 0052  
                           l3274 0035                             l1916 15B6                             l1908 159C  
                           l2548 13E3                             l2580 0F08                             l2564 0EA4  
                           l2572 0ECC                             l2556 0E77                             l2660 023C  
                           l2652 01F2                             l2644 01CF                             l2636 017B  
                           l2628 0158                             l2708 15E3                             l1932 1301  
                           l1940 12C4                             l1924 1348                             l2732 14F9  
                           l2724 14E0                             l2900 1316                             l3292 0087  
                           l3284 0057                             l3276 003C                             l2582 0F1F  
                           l2574 0ED5                             l2590 0F4C                             l2566 0EA8  
                           l2558 0E7F                             l1950 12B8                             l2670 0289  
                           l2662 024F                             l2654 01FB                             l2646 01D6  
                           l2638 01A1                             l1918 1323                             l2910 1354  
                           l1942 12DD                             l1934 1306                             l1926 12CA  
                           l2734 14FE                             l2726 14E6                             l2718 14CC  
                           l2902 137C                             l2742 1293                             l2750 13CF  
                           l3294 00A6                             l3286 005C                             l3278 0047  
                           l2592 0F55                             l2584 0F32                             l2576 0EDE  
                           l2568 0EBB                             l1960 12D7                             l1952 12BB  
                           l2760 149B                             l2672 0292                             l2664 0266  
                           l2656 0221                             l2648 01DF                             l2920 0875  
                           l2680 13BF                             l1944 12E1                             l1928 12CD  
                           l2728 14EB                             l2912 168C                             l2904 1389  
                           l2752 13D5                             l3296 00C5                             l3288 0061  
                           l2594 0F5E                             l2586 0F39                             l2578 0F04  
                           l1970 12FA                             l1954 12AF                             l1962 1333  
                           l2770 14BF                             l2762 14A6                             l2906 1366  
                           l2666 0279                             l2658 0225                             l2930 0894  
                           l2690 1412                             l2682 1400                             l2674 13A9  
                           l1882 129F                             l1938 12C1                             l2738 130B  
                           l2914 0CAC                             l1946 0800                             l2754 13DB  
                           l2746 13C4                             l3298 00DC                             l2780 1746  
                           l1980 1669                             l2596 0F84                             l2588 0F42  
                           l1884 1297                             l1956 12B2                             l1964 1337  
                           l2772 14C4                             l2764 14AC                             l2756 1492  
                           l2908 1373                             l2668 0280                             l2940 08A9  
                           l2692 1418                             l2684 1403                             l2676 13AF  
                           l2916 0D8D                             l1948 0803                             l2748 13C9  
                           l2918 0809                             l1990 08E6                             l2790 1780  
                           l2782 1753                             l1982 1672                             l1974 1646  
                           l2598 0F88                             l1958 12D3                             l1966 12F2  
                           l2766 14B1                             l2758 1497                             l2950 08C8  
                           l2942 08B0                             l2926 0878                             l2694 141C  
                           l2686 1408                             l2678 13B7                             l1992 08EA  
                           l2792 1781                             l2784 1757                             l2776 1733  
                           l1984 1683                             l1976 164E                             l1968 12F5  
                           l2768 14B7                             l2952 08D6                             l2944 08B6  
                           l2936 0897                             l2928 088E                             l2688 140E  
                           l2696 15C0                             l2960 0BE7                             l1994 08FB  
                           l2794 178A                             l2786 1760                             l2778 1743  
                           l1978 1652                             l2954 08DC                             l2946 08BC  
                           l2938 08A2                             l2970 0C5B                             l2962 0C1C  
                           l1996 0906                             l1988 08E3                             l2788 1772  
                           l2796 1790                             l2948 08C2                             l2980 0C83  
                           l2972 0C61                             l2964 0C41                             l2956 0BD6  
                           l2894 1421                             l1998 090A                             l2990 0A3F  
                           l2982 0C89                             l2974 0C6C                             l2966 0C4F  
                           l2958 0BE0                             l2896 1429                             l2984 0C8F  
                           l2976 0C77                             l2968 0C55                             l2992 0B08  
                           l2898 144D                             l2986 0C9A                             l2978 0C7D  
                           l2994 0B1E                             l2988 0CA5                             l2996 0B29  
                           l2998 0B3D                             STR_1 1058                             STR_2 1052  
                           STR_3 105E                             STR_4 1063                             u1300 1683  
                           u1301 1682                             u1310 08EA                             u1230 12F0  
                           u1311 08E9                             u1231 12EF                             u1400 096C  
                           u1320 08FB                             u1240 1353                             u1401 096B  
                           u1321 08FA                             u1225 159F                             u1241 1352  
                           u1330 091A                             u1410 179E                             u1250 1342  
                           u1170 12A5                             u1331 0919                             u1411 179D  
                           u1251 1341                             u1171 12A4                             u1260 1652  
                           u1500 17F6                             u1420 17A9                             u1180 129D  
                           u1261 1651                             u1501 17F5                             u1421 17A8  
                           u1181 129C                             u1350 092E                             u1430 17BA  
                           u1510 16DF                             u1351 092D                             u1271 165B  
                           u1431 17B9                             u1511 16DE                             u1272 1662  
                           u1520 16EA                             u3200 1370                             u1345 091F  
                           u1273 1669                             u1521 16E9                             u3201 136C  
                           u1370 0949                             u1450 17CC                             u1530 16F5  
                           u1371 0948                             u1451 17CB                             u1531 16F4  
                           u1700 145D                             u3220 08A9                             u3300 0B90  
                           u1365 0930                             u1285 166B                             u1445 17BE  
                           u1701 145C                             u3221 08A8                             u1390 0967  
                           u1470 17DD                             u1550 1707                             u1630 160A  
                           u3214 1373                             u3230 08B6                             u3310 0B9A  
                           u1391 0966                             u1375 0945                             u1295 1673  
                           u1471 17DC                             u1551 1706                             u1631 1609  
                           u3231 08B5                             u3311 0B9B                             u3400 05A1  
                           u2600 13FF                             u1560 1711                             u1720 146F  
                           u3240 08C8                             u3320 0BAC                             u3312 0BA0  
                           u1385 0959                             u2601 13FE                             u1465 17CD  
                           u1561 1710                             u1545 16F9                             u1721 146E  
                           u3241 08C7                             u3321 0BAD                             u3313 0BA1  
                           u3305 0B8B                             u1490 17F1                             u1650 161C  
                           u1730 1479                             u2610 0E77                             u3250 08E2  
                           u3330 0BBD                             u3322 0BB2                             u3411 05DD  
                           u1491 17F0                             u1475 17D9                             u1651 161B  
                           u1731 1478                             u1715 1461                             u2611 0E76  
                           u3251 08E1                             u3323 0BB3                             u3420 0610  
                           u3412 05E0                             u3340 02B4                             u1580 1724  
                           u2620 0E88                             u2700 012E                             u3260 0BE7  
                           u3180 1386                             u3413 05E7                             u3405 059C  
                           u3341 02B7                             u1485 17E5                             u1581 1723  
                           u1565 170D                             u1645 160E                             u2621 0E87  
                           u2701 012D                             u3261 0BE6                             u3181 1382  
                           u3430 063D                             u3414 05EA                             u3350 03F7  
                           u3342 02BE                             u1590 1729                             u1670 162D  
                           u1750 148C                             u2630 0E91                             u2710 0172  
                           u3270 0C41                             u3431 063C                             u3415 05F1  
                           u3351 03F8                             u3343 02C1                             u1591 1728  
                           u1575 1718                             u1671 162C                             u1751 148B  
                           u1735 1475                             u2631 0E90                             u2711 0171  
                           u3271 0C40                             u3335 0BB8                             u3440 076D  
                           u3416 05F4                             u3360 0409                             u3352 03FD  
                           u2640 0ED5                             u2720 017B                             u3441 076E  
                           u3433 0639                             u3425 060B                             u3353 03FE  
                           u1665 161D                             u1745 1480                             u2641 0ED4  
                           u2721 017A                             u3442 0773                             u3370 0413  
                           u1690 1641                             u2650 0EDE                             u2730 01F2  
                           u2810 15F6                             u3194 1389                             u3290 0B7F  
                           u3443 0774                             u3371 0414                             u1691 1640  
                           u1675 1629                             u2651 0EDD                             u2731 01F1  
                           u2811 15F5                             u3275 0C3D                             u4307 00F9  
                           u2900 1772                             u3380 0520                             u3372 0419  
                           u2660 0F55                             u2740 01FB                             u2820 1600  
                           u2804 15EB                             u2901 1771                             u3381 0521  
                           u3373 041A                             u3365 0404                             u1685 1635  
                           u2661 0F54                             u2741 01FA                             u2821 15FF  
                           u2805 15E9                             u4317 0B24                             u3285 0B0D  
                           u3390 0567                             u3382 0526                             u2670 0F5E  
                           u2750 140E                             u2830 14E0                             u3391 056A  
                           u3383 0527                             u4407 1597                             u2671 0F5D  
                           u2751 140D                             u4327 13B3                             u2831 14DF  
                           u3295 0B7A                             u2920 1790                             u3392 0571  
                           u2680 0114                             u2760 1418                             u2921 178F  
                           u2905 176E                             u3393 0574                             u4417 15AE  
                           u2681 0113                             u2761 1417                             u4337 13BC  
                           u2850 14A6                             u2690 0125                             u2770 15C7  
                           u4507 085B                             u2595 155F                             u2915 1782  
                           u4427 15BA                             u2851 14A5                             u2691 0124  
                           u4347 15C9                             u2771 15C6                             u2860 1743  
                           u2780 15D2                             u4437 1451                             u2861 1742  
                           u4357 1405                             u2781 15D1                             u2845 130E  
                           u4447 154B                             u4367 1410                             u2880 1757  
                           u4457 1557                             u2881 1756                             u4377 141A  
                           u4297 0042                             u2794 15DA                             u4467 156E  
                           u2875 1748                             u4387 08D0                             u2795 15D8  
                           _RCEN 048B                             _RCIF 0065                             u4477 157A  
                           u4397 158B                             u3870 003C                             u4487 0821  
                           u2895 1759                             u3871 003B                             u4497 083E  
         show_multidigits@result 0049                             _RSEN 0489                             _TXIF 0064  
   __end_of_print_analogvoltages 08E3                             _Temp 0034                             _date 0038  
                           _main 0007                             _hour 003A                             _show 13E1  
                           _year 0036                             btemp 007E                 __end_of_ADC_Init 0875  
                           start 0000       __size_of_rtc_terminal_data 00E1                 __end_of_LCD_Char 15C0  
                   LCD_Char@data 0072                 __end_of_LCD_init 1457                  ??_rtc_read_byte 0071  
                __end_of___aldiv 0980                            ?_main 0070                            _ACKEN 048C  
                          _ACKDT 048D                  __end_of___awdiv 1800                  __end_of___awmod 1733  
                          ?_show 0070                  __end_of___lldiv 1799                  ___awdiv@divisor 0070  
                __end_of___lwdiv 1646                  __end_of___lwmod 1491                  ___awdiv@counter 0075  
                          _RCREG 001A                            _RCSTA 0018          show_multidigits@result1 0051  
                          _SPBRG 0099                            _PORTB 0006                            _SSPIF 0063  
                          _TXREG 0019                            _TXSTA 0098                            _Check 0042  
            ___lmul@multiplicand 0074                            _convd 1292                            _errno 00DF  
                          _month 0037                            _tx_sn 010B                  __end_of_ser_int 1323  
                          pclath 000A               _print_serialnumber 1354                  __end_of_rtc_nak 12E7  
                __end_of_rtc_int 1392                  __end_of_rtc_res 12CA                            show@s 0074  
                 _bmp280_getdata 0A3F                            status 0003                            wtemp0 007E  
            ?_print_serialnumber 0070                   _bmp280_restart 12AF                  __initialization 07C6  
                   __end_of_main 010B                ??_actual_pressure 0055                     __end_of_show 1400  
               __end_of_ReadData 1602                           ??_main 006A  __size_of_uncompensated_pressure 00CE  
                         ??_show 0073                   LCD_num@result1 0061             _intdigits_chardigits 1323  
                      ??_LCD_num 007E             ??_print_serialnumber 007B                           _ADCON0 001F  
                         _ADCON1 009F                           ?_convd 0070                           _ADRESH 001E  
                         _ADRESL 009E                 ___awdiv@dividend 0072           __end_of_bmp280_getdata 0B08  
                         ?_tx_sn 0079                           _SSPADD 0093                           _TRISC3 043B  
                         _TRISC4 043C                           _SSPCON 0014                           _SSPBUF 0013  
         __end_of_bmp280_restart 12B8                           ___lmul 1646                        ??___aldiv 007D  
                      ??___awdiv 0074                        ??___awmod 0074                        ??___lldiv 0078  
                      ??___lwdiv 0074                        ??___lwmod 0074                           _convup 130A  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
           _print_analogvoltages 0875             __size_of_LCD_Command 0040              bmp280_read_byte@rec 0073  
          ?_intdigits_chardigits 0070           __size_of_CheckResponse 0021                        ?_ADC_Init 0070  
           _actual_pressure$1204 0063                 __end_of_rtc_read 130A                 __end_of_waitmssp 12A7  
               __end_of_rtc_send 1354                        ??_ser_int 0070                     ?_rtc_getdata 0070  
               __end_of_rtc_stop 12D3                        ??_rtc_nak 0070                        ??_rtc_int 0070  
                      ??_rtc_res 0070              _bmp280_terminaldata 1392                  ?_bmp280_getdata 0070  
      __size_of_show_multidigits 0192                 __end_ofexp@coeff 102E                 __end_oflog@coeff 1052  
         _uncompensated_pressure 0B08                        ?_LCD_Char 0070          __end_of__initialization 07FC  
                      ?_LCD_init 0070                  ?_bmp280_restart 0070                       _bmp280_nak 12D3  
                _bmp280_waitmssp 1297                   __pcstackCOMMON 0070         __size_of_print_dht11data 00D6  
           ?_bmp280_terminaldata 0070                     __pidataBANK0 0005                     __pidataBANK1 0003  
                  ??_StartSignal 0070                    __end_of_convd 1297      __size_of_bmp280_displaydata 003B  
                  __end_of_tx_sn 029D            ?_print_analogvoltages 0070                       __end_of_tx 12F2  
                     ??_ADC_Init 0070        __size_of_bmp280_read_byte 003A                          ??_convd 0070  
                        ??_tx_sn 007B                       __pbssBANK0 0020                       __pbssBANK1 00A0  
                     __pbssBANK3 0190                    ??_bmp280_init 0070                    ??_bmp280_read 0070  
                  ??_bmp280_send 0070                    ??_bmp280_stop 0070        __size_of_bmp280_send_byte 001E  
                      ?_ReadData 0070                   tx_sn@remainder 0053                       ??_LCD_Char 0070  
                     ??_LCD_init 0073                    _CheckResponse 1400                     tx_sn@result1 0051  
                     __pmaintext 0007            ??_bmp280_terminaldata 007B                          ?___lmul 0070  
                        ?_convup 0070                          _ACKSTAT 048E                   ___lmul@product 0079  
         ??_intdigits_chardigits 0076              __end_of_StartSignal 13C3                          _LCD_num 0980  
                     __stringtab 1000              show_multidigits@val 0079                       ??_ReadData 0070  
        __end_of_bmp280_waitmssp 129F                  _actual_pressure 029D                   ?_CheckResponse 0070  
                    ?_bmp280_nak 0070                          _T_byte1 0041                          _T_byte2 0040  
            __end_of_bmp280_init 137C              __end_of_bmp280_read 12FE              __end_of_bmp280_send 1343  
            __end_of_bmp280_stop 12C1                        ?_rtc_read 0070                        ?_waitmssp 0070  
                        ___aldiv 08E3                        ?_rtc_send 0070                        ?_rtc_stop 0070  
                        ___awdiv 1799                  __size_of___lmul 0046                          ___awmod 16DA  
                        ___lldiv 1733                          ___lwdiv 1602                          ___lwmod 1457  
         ??_print_analogvoltages 0065                  __size_of_convup 000C                          __ptext1 0B08  
                        __ptext2 13C3                          __ptext3 0800                          __ptext4 1316  
                        __ptext5 0D8D                          __ptext6 0CAC                          __ptext7 130A  
                        __ptext8 1292                          __ptext9 137C                ??_print_dht11data 0055  
          __end_of_rtc_read_byte 1505                          _message 0198                 ___awmod@dividend 0072  
               ___aldiv@dividend 004B                          _ser_int 1316                          _rtc_nak 12DD  
                        _rtc_int 137C                          _rtc_res 12C1                          clrloop0 12A8  
           bmp280_read_byte@addr 0072             __size_of_rtc_getdata 004E             end_of_initialization 07FC  
               _show_multidigits 0E6E                  ___lldiv@divisor 0070                  ___lldiv@counter 007D  
                  ?_rtc_lcd_data 0070                 ___aldiv@quotient 0051                       ??_rtc_read 0070  
                     ??_waitmssp 0070                       ??_rtc_send 0070                       ??_rtc_stop 0070  
                    _StartSignal 13A9                        _PORTDbits 0008                 rtc_read_byte@rec 0073  
            __size_of_bmp280_nak 000A                 ??_bmp280_getdata 0074                 _bmp280_read_byte 1491  
    __size_of_print_serialnumber 0012                        _TRISBbits 0086                        _TRISCbits 0087  
                      _TRISDbits 0088          __end_of_actual_pressure 07C6                __size_of_ADC_Init 006C  
        ?_uncompensated_pressure 0070                 ??_bmp280_restart 0070                  ??_CheckResponse 0070  
               _bmp280_send_byte 13C3                      _bmp280_init 1366                      _bmp280_read 12F2  
                    _bmp280_send 1332                      _bmp280_stop 12B8                 ?_bmp280_waitmssp 0070  
                      ReadData@i 0072                        ReadData@j 0073                __size_of_LCD_Char 0040  
                 ??_rtc_lcd_data 0073                __size_of_LCD_init 0036                    ??_LCD_Command 0070  
                 __end_of___lmul 168C                   __end_of_convup 1316              start_initialization 07C6  
                  ?_bmp280_start 0070   __end_of_uncompensated_pressure 0BD6                    LCD_num@digit1 0059  
                  LCD_num@digit2 005B                    LCD_num@digit3 005D                       LCD_num@val 0055  
                  LCD_num@result 005F                __size_of_ReadData 0042       __end_of_bmp280_displaydata 1540  
                       ??___lmul 0078                      __pdataBANK0 006D                      __pdataBANK1 00ED  
                       ??_convup 0070                 LCD_num@remainder 0063              __end_of_LCD_Command 1580  
                 ??_bmp280_start 0070                         ?_LCD_num 0055                        ___latbits 0002  
                  __pcstackBANK0 0047                 ?_actual_pressure 0070      __end_of_bmp280_terminaldata 13A9  
                   ??_bmp280_nak 0070                      tx_sn@digit1 004D                      tx_sn@digit2 004F  
                    tx_sn@digit3 004B                      tx_sn@digit4 0047                 ___lwdiv@dividend 0072  
                _print_dht11data 0BD6                      tx_sn@result 0049                         ?___aldiv 0047  
                       ?___awdiv 0070                         ?___awmod 0070                         ?___lldiv 0070  
                       ?___lwdiv 0070                         ?___lwmod 0070         __end_of_show_multidigits 1000  
              __size_of_rtc_read 000C                __size_of_waitmssp 0008                __size_of_rtc_send 0011  
                      _altittude 002C                __size_of_rtc_stop 0009                        __pstrings 1000  
  __size_of_intdigits_chardigits 000F                         _ADC_Init 0809             __end_of_rtc_lcd_data 0D8D  
             __end_of_bmp280_nak 12DD                         ?_ser_int 0070                         ?_rtc_nak 0070  
                       ?_rtc_int 0070                         ?_rtc_res 0070                 ___lwdiv@quotient 0075  
                 __size_of_convd 0005                   __size_of_tx_sn 0192                      __size_of_tx 000B  
                ___aldiv@divisor 0047                         _LCD_Char 1580                  ___aldiv@counter 004F  
                       _LCD_init 1421                        clear_ram0 12A7         __end_of_bmp280_read_byte 14CB  
                       _GO_nDONE 00FA                     ?_StartSignal 0070                      _LCD_Command 1540  
       __end_of_bmp280_send_byte 13E1    __size_of_print_analogvoltages 006E                      __stringbase 1005  
                       _RH_byte1 003F                         _RH_byte2 003E                    ??_rtc_getdata 0074  
               __size_of_LCD_num 00BF                ___lmul@multiplier 0070                        convup@bcd 0071  
          intdigits_chardigits@a 0070            intdigits_chardigits@b 0072            intdigits_chardigits@c 0074  
                   ?_bmp280_init 0070                     ?_bmp280_read 0070                     ?_bmp280_send 0070  
        __end_of_print_dht11data 0CAC                         _ReadData 15C0                     ?_bmp280_stop 0070  
                 bmp280_send@dat 0070           __size_of_rtc_read_byte 003A             __end_of_bmp280_start 0809  
               __size_of___aldiv 009D                 __size_of___awdiv 0067                 __size_of___awmod 0059  
               __size_of___lldiv 0066                 __size_of___lwdiv 0044                 __size_of___lwmod 003A  
             __end_of__stringtab 1006       __end_of_print_serialnumber 1366                  ___lwdiv@divisor 0070  
                ___lwdiv@counter 0077                         __ptext10 168C                         __ptext11 14CB  
                       __ptext20 13A9                         __ptext12 12CA                         __ptext21 15C0  
                       __ptext13 1343                         __ptext30 0A3F                         __ptext22 1400  
                       __ptext14 12C1                         __ptext31 1491                         __ptext23 0875  
                       __ptext15 12FE                         __ptext40 1457                         __ptext32 12B8  
                       __ptext24 0980                         __ptext16 12DD                         __ptext41 1602  
                       __ptext33 1332                         __ptext25 1323                         __ptext17 129F  
                       __ptext50 1421                         __ptext42 16DA                         __ptext34 12AF  
                       __ptext26 1392                         __ptext18 1354                         __ptext51 1540  
                       __ptext43 1799                         __ptext35 12F2                         __ptext27 010B  
                       __ptext19 0BD6                         __ptext52 0809                         __ptext44 13E1  
                       __ptext36 12D3                         __ptext28 12E7                         __ptext45 1580  
                       __ptext37 1297                         __ptext29 1366                         __ptext46 029D  
                       __ptext38 1505                         __ptext47 1646                         __ptext39 0E6E  
                       __ptext48 1733                         __ptext49 08E3                 __size_of_ser_int 000D  
               __size_of_rtc_nak 000A                 __size_of_rtc_int 0016                 __size_of_rtc_res 0009  
      uncompensated_pressure@ff6 0054        uncompensated_pressure@ff7 0058        uncompensated_pressure@ff8 005C  
            __end_of_rtc_getdata 16DA            __end_of_CheckResponse 1421                    __size_of_main 0104  
                  __size_of_show 001F                         _humidity 00EB         __size_of_bmp280_waitmssp 0008  
              _rtc_terminal_data 0D8D                         _rtc_read 12FE                         _waitmssp 129F  
                       _rtc_send 1343                         _rtc_stop 12CA               ?_rtc_terminal_data 0070  
                      rtc_send@a 0070                         convd@bcd 0070            __size_of_rtc_lcd_data 00E1  
                       exp@coeff 1006                         log@coeff 102E               _bmp280_displaydata 1505  
            ??_rtc_terminal_data 0072                    _rtc_read_byte 14CB                  LCD_Command@cmnd 0072  
            ?_bmp280_displaydata 0070                 ?_print_dht11data 0070                 ___lwmod@dividend 0072  
               ___lldiv@dividend 0074          __size_of_bmp280_getdata 00C9                        stringcode 1000  
      __end_of_rtc_terminal_data 0E6E                     _rtc_lcd_data 0CAC          __size_of_bmp280_restart 0009  
           ??_bmp280_displaydata 007B        show_multidigits@remainder 0053                ?_show_multidigits 0079  
           __size_of_StartSignal 001A               ??_show_multidigits 007B                      _temperature 00E9  
                       tx_sn@val 0079                   ?_rtc_read_byte 0070                 ___lldiv@quotient 0079  
                ___lwmod@divisor 0070                  ___lwmod@counter 0075                         stringdir 1000  
                       stringtab 1000                     ___aldiv@sign 0050                      _rtc_getdata 168C  
              rtc_read_byte@addr 0072            __size_of_bmp280_start 0009         __size_of_actual_pressure 0529  
   __end_of_intdigits_chardigits 1332             __size_of_bmp280_init 0016             __size_of_bmp280_read 000C  
           __size_of_bmp280_send 0011             __size_of_bmp280_stop 0009                ?_bmp280_read_byte 0070  
