

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 04 14:57:36 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  0088                     	;# 
   160  0089                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  001E                     _ADRESH	set	30
   181  001F                     _ADCON0	set	31
   182  001A                     _RCREG	set	26
   183  0019                     _TXREG	set	25
   184  0018                     _RCSTA	set	24
   185  0006                     _PORTB	set	6
   186  00FA                     _GO_nDONE	set	250
   187  0065                     _RCIF	set	101
   188  0064                     _TXIF	set	100
   189  0039                     _RC1	set	57
   190  0038                     _RC0	set	56
   191  009E                     _ADRESL	set	158
   192  009F                     _ADCON1	set	159
   193  0087                     _TRISC	set	135
   194  0086                     _TRISB	set	134
   195  0099                     _SPBRG	set	153
   196  0098                     _TXSTA	set	152
   197                           
   198                           	psect	cinit
   199  07F0                     start_initialization:	
   200                           ; #config settings
   201                           
   202  07F0                     __initialization:
   203                           
   204                           ; Clear objects allocated to BANK0
   205  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   206  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   207  07F2  01C3               	clrf	__pbssBANK0& (0+127)
   208  07F3  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   209  07F4  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   210  07F5  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   211  07F6  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   212  07F7  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   213  07F8  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   214  07F9  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   215  07FA  01CB               	clrf	(__pbssBANK0+8)& (0+127)
   216  07FB  01CC               	clrf	(__pbssBANK0+9)& (0+127)
   217  07FC                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220  07FC                     __end_of__initialization:
   221  07FC  0183               	clrf	3
   222  07FD  120A  118A  2E03   	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	bssBANK0
   225  0043                     __pbssBANK0:
   226  0043                     _AV:
   227  0043                     	ds	8
   228  004B                     _avv:
   229  004B                     	ds	2
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:
   233  0070                     ?_ADC_Init:
   234  0070                     ??_ADC_Init:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_LCD_Command:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ??_LCD_Command:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_LCD_Char:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ??_LCD_Char:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_LCD_init:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_ser_int:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ??_ser_int:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_main:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_tx:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?___wmul:	
   265                           ; 2 bytes @ 0x0
   266                           
   267  0070                     ?___lwdiv:	
   268                           ; 2 bytes @ 0x0
   269                           
   270  0070                     ?___lwmod:	
   271                           ; 2 bytes @ 0x0
   272                           
   273  0070                     ?___lmul:	
   274                           ; 2 bytes @ 0x0
   275                           
   276  0070                     tx@a:	
   277                           ; 4 bytes @ 0x0
   278                           
   279  0070                     ___wmul@multiplier:	
   280                           ; 2 bytes @ 0x0
   281                           
   282  0070                     ___lwdiv@divisor:	
   283                           ; 2 bytes @ 0x0
   284                           
   285  0070                     ___lwmod@divisor:	
   286                           ; 2 bytes @ 0x0
   287                           
   288  0070                     ___lmul@multiplier:	
   289                           ; 2 bytes @ 0x0
   290                           
   291                           
   292                           ; 4 bytes @ 0x0
   293  0070                     	ds	2
   294  0072                     ??_tx:
   295  0072                     LCD_Command@cmnd:	
   296                           ; 1 bytes @ 0x2
   297                           
   298  0072                     LCD_Char@data:	
   299                           ; 1 bytes @ 0x2
   300                           
   301  0072                     ___wmul@multiplicand:	
   302                           ; 1 bytes @ 0x2
   303                           
   304  0072                     ___lwdiv@dividend:	
   305                           ; 2 bytes @ 0x2
   306                           
   307  0072                     ___lwmod@dividend:	
   308                           ; 2 bytes @ 0x2
   309                           
   310                           
   311                           ; 2 bytes @ 0x2
   312  0072                     	ds	1
   313  0073                     ??_LCD_init:
   314                           
   315                           ; 1 bytes @ 0x3
   316  0073                     	ds	1
   317  0074                     ??___wmul:
   318  0074                     ??___lwdiv:	
   319                           ; 1 bytes @ 0x4
   320                           
   321  0074                     ??___lwmod:	
   322                           ; 1 bytes @ 0x4
   323                           
   324  0074                     ___wmul@product:	
   325                           ; 1 bytes @ 0x4
   326                           
   327  0074                     ___lmul@multiplicand:	
   328                           ; 2 bytes @ 0x4
   329                           
   330                           
   331                           ; 4 bytes @ 0x4
   332  0074                     	ds	1
   333  0075                     ___lwmod@counter:
   334  0075                     ___lwdiv@quotient:	
   335                           ; 1 bytes @ 0x5
   336                           
   337                           
   338                           ; 2 bytes @ 0x5
   339  0075                     	ds	2
   340  0077                     ___lwdiv@counter:
   341                           
   342                           ; 1 bytes @ 0x7
   343  0077                     	ds	1
   344  0078                     ??___lmul:
   345                           
   346                           ; 1 bytes @ 0x8
   347  0078                     	ds	1
   348  0079                     ___lmul@product:
   349                           
   350                           ; 4 bytes @ 0x9
   351  0079                     	ds	4
   352  007D                     ??___aldiv:
   353                           
   354                           ; 1 bytes @ 0xD
   355  007D                     	ds	1
   356  007E                     ??_LCD_num:
   357                           
   358                           	psect	cstackBANK0
   359  0020                     __pcstackBANK0:	
   360                           ; 1 bytes @ 0xE
   361                           
   362  0020                     ?___aldiv:
   363  0020                     ___aldiv@divisor:	
   364                           ; 4 bytes @ 0x0
   365                           
   366                           
   367                           ; 4 bytes @ 0x0
   368  0020                     	ds	4
   369  0024                     ___aldiv@dividend:
   370                           
   371                           ; 4 bytes @ 0x4
   372  0024                     	ds	4
   373  0028                     ___aldiv@counter:
   374                           
   375                           ; 1 bytes @ 0x8
   376  0028                     	ds	1
   377  0029                     ___aldiv@sign:
   378                           
   379                           ; 1 bytes @ 0x9
   380  0029                     	ds	1
   381  002A                     ___aldiv@quotient:
   382                           
   383                           ; 4 bytes @ 0xA
   384  002A                     	ds	4
   385  002E                     ?_LCD_num:
   386  002E                     LCD_num@val:	
   387                           ; 2 bytes @ 0xE
   388                           
   389                           
   390                           ; 4 bytes @ 0xE
   391  002E                     	ds	4
   392  0032                     LCD_num@digit1:
   393                           
   394                           ; 2 bytes @ 0x12
   395  0032                     	ds	2
   396  0034                     LCD_num@digit2:
   397                           
   398                           ; 2 bytes @ 0x14
   399  0034                     	ds	2
   400  0036                     LCD_num@digit3:
   401                           
   402                           ; 2 bytes @ 0x16
   403  0036                     	ds	2
   404  0038                     LCD_num@result:
   405                           
   406                           ; 2 bytes @ 0x18
   407  0038                     	ds	2
   408  003A                     LCD_num@result1:
   409                           
   410                           ; 2 bytes @ 0x1A
   411  003A                     	ds	2
   412  003C                     LCD_num@remainder:
   413                           
   414                           ; 2 bytes @ 0x1C
   415  003C                     	ds	2
   416  003E                     ??_main:
   417                           
   418                           ; 1 bytes @ 0x1E
   419  003E                     	ds	3
   420  0041                     main@i:
   421                           
   422                           ; 2 bytes @ 0x21
   423  0041                     	ds	2
   424                           
   425                           	psect	maintext
   426  0603                     __pmaintext:	
   427 ;;
   428 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   429 ;;
   430 ;; *************** function _main *****************
   431 ;; Defined at:
   432 ;;		line 29 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;  i               2   33[BANK0 ] int 
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : B00/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   446 ;;      Params:         0       0       0       0       0
   447 ;;      Locals:         0       2       0       0       0
   448 ;;      Temps:          0       3       0       0       0
   449 ;;      Totals:         0       5       0       0       0
   450 ;;Total ram usage:        5 bytes
   451 ;; Hardware stack levels required when called: 2
   452 ;; This function calls:
   453 ;;		_ADC_Init
   454 ;;		_LCD_Command
   455 ;;		_LCD_init
   456 ;;		_LCD_num
   457 ;;		_ser_int
   458 ;;		_tx
   459 ;; This function is called by:
   460 ;;		Startup code after reset
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           
   465                           ;psect for function _main
   466  0603                     _main:
   467  0603                     l1113:	
   468                           ;incstack = 0
   469                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   470                           
   471                           
   472                           ;main.c: 31:     TRISB =0x00;
   473  0603  1683               	bsf	3,5	;RP0=1, select bank1
   474  0604  1303               	bcf	3,6	;RP1=0, select bank1
   475  0605  0186               	clrf	6	;volatile
   476                           
   477                           ;main.c: 32:     TRISC =0x00;
   478  0606  0187               	clrf	7	;volatile
   479  0607                     l1115:
   480                           
   481                           ;main.c: 34:     LCD_init();
   482  0607  120A  118A  242D  120A  118A  	fcall	_LCD_init
   483  060C                     l1117:
   484                           
   485                           ;main.c: 35:     ser_int();
   486  060C  120A  118A  23FB  120A  118A  	fcall	_ser_int
   487  0611                     l1119:
   488                           
   489                           ;main.c: 37:     {;main.c: 38:         ADC_Init ();
   490  0611  120A  118A  259F  120A  118A  	fcall	_ADC_Init
   491  0616                     l1121:
   492                           
   493                           ;main.c: 39:         GO_nDONE=1;
   494  0616  1283               	bcf	3,5	;RP0=0, select bank0
   495  0617  1303               	bcf	3,6	;RP1=0, select bank0
   496  0618  151F               	bsf	31,2	;volatile
   497  0619                     l81:	
   498                           ;main.c: 40:         while(GO_nDONE==1);
   499                           
   500  0619  191F               	btfsc	31,2	;volatile
   501  061A  2E1C               	goto	u761
   502  061B  2E1D               	goto	u760
   503  061C                     u761:
   504  061C  2E19               	goto	l81
   505  061D                     u760:
   506  061D                     l1123:
   507                           
   508                           ;main.c: 41:         _delay((unsigned long)((10)*(20000000/4000.0)));
   509  061D  3041               	movlw	65
   510  061E  1283               	bcf	3,5	;RP0=0, select bank0
   511  061F  1303               	bcf	3,6	;RP1=0, select bank0
   512  0620  00BF               	movwf	??_main+1
   513  0621  30ED               	movlw	237
   514  0622  00BE               	movwf	??_main
   515  0623                     u787:
   516  0623  0BBE               	decfsz	??_main,f
   517  0624  2E23               	goto	u787
   518  0625  0BBF               	decfsz	??_main+1,f
   519  0626  2E23               	goto	u787
   520  0627  2E28               	nop2
   521  0628                     l1125:
   522                           
   523                           ;main.c: 43:         for (int i=0;i<4;i++)
   524  0628  1283               	bcf	3,5	;RP0=0, select bank0
   525  0629  1303               	bcf	3,6	;RP1=0, select bank0
   526  062A  01C1               	clrf	main@i
   527  062B  01C2               	clrf	main@i+1
   528  062C                     l1131:
   529                           
   530                           ;main.c: 44:         {;main.c: 45:             LCD_num(AV[i]);
   531  062C  1283               	bcf	3,5	;RP0=0, select bank0
   532  062D  1303               	bcf	3,6	;RP1=0, select bank0
   533  062E  0841               	movf	main@i,w
   534  062F  00BE               	movwf	??_main
   535  0630  073E               	addwf	??_main,w
   536  0631  3E43               	addlw	(low (_AV| 0))& (0+255)
   537  0632  0084               	movwf	4
   538  0633  1383               	bcf	3,7	;select IRP bank0
   539  0634  0800               	movf	0,w
   540  0635  00BF               	movwf	??_main+1
   541  0636  0A84               	incf	4,f
   542  0637  0800               	movf	0,w
   543  0638  00C0               	movwf	??_main+2
   544  0639  083F               	movf	??_main+1,w
   545  063A  00AE               	movwf	LCD_num@val
   546  063B  0840               	movf	??_main+2,w
   547  063C  00AF               	movwf	LCD_num@val+1
   548  063D  01B0               	clrf	LCD_num@val+2
   549  063E  01B1               	clrf	LCD_num@val+3
   550  063F  120A  118A  2726  120A  118A  	fcall	_LCD_num
   551  0644                     l1133:
   552                           
   553                           ;main.c: 46:             tx(avv);
   554  0644  3000               	movlw	0
   555  0645  00F0               	movwf	tx@a
   556  0646  00F1               	movwf	tx@a+1
   557  0647  120A  118A  23F1  120A  118A  	fcall	_tx
   558  064C                     l1135:
   559                           
   560                           ;main.c: 47:             _delay((unsigned long)((500)*(20000000/4000.0)));
   561  064C  300D               	movlw	13
   562  064D  1283               	bcf	3,5	;RP0=0, select bank0
   563  064E  1303               	bcf	3,6	;RP1=0, select bank0
   564  064F  00C0               	movwf	??_main+2
   565  0650  30AF               	movlw	175
   566  0651  00BF               	movwf	??_main+1
   567  0652  30B5               	movlw	181
   568  0653  00BE               	movwf	??_main
   569  0654                     u797:
   570  0654  0BBE               	decfsz	??_main,f
   571  0655  2E54               	goto	u797
   572  0656  0BBF               	decfsz	??_main+1,f
   573  0657  2E54               	goto	u797
   574  0658  0BC0               	decfsz	??_main+2,f
   575  0659  2E54               	goto	u797
   576  065A  2E5B               	nop2
   577  065B                     l1137:
   578                           
   579                           ;main.c: 48:         }
   580  065B  3001               	movlw	1
   581  065C  1283               	bcf	3,5	;RP0=0, select bank0
   582  065D  1303               	bcf	3,6	;RP1=0, select bank0
   583  065E  07C1               	addwf	main@i,f
   584  065F  1803               	skipnc
   585  0660  0AC2               	incf	main@i+1,f
   586  0661  3000               	movlw	0
   587  0662  07C2               	addwf	main@i+1,f
   588  0663                     l1139:
   589  0663  0842               	movf	main@i+1,w
   590  0664  3A80               	xorlw	128
   591  0665  00FF               	movwf	btemp+1
   592  0666  3080               	movlw	128
   593  0667  027F               	subwf	btemp+1,w
   594  0668  1D03               	skipz
   595  0669  2E6C               	goto	u775
   596  066A  3004               	movlw	4
   597  066B  0241               	subwf	main@i,w
   598  066C                     u775:
   599  066C  1C03               	skipc
   600  066D  2E6F               	goto	u771
   601  066E  2E70               	goto	u770
   602  066F                     u771:
   603  066F  2E2C               	goto	l1131
   604  0670                     u770:
   605  0670                     l1141:
   606                           
   607                           ;main.c: 49:         LCD_Command(0x01);
   608  0670  3001               	movlw	1
   609  0671  120A  118A  2495  120A  118A  	fcall	_LCD_Command
   610  0676                     l1143:
   611                           
   612                           ;main.c: 50:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   613  0676  301A               	movlw	26
   614  0677  1283               	bcf	3,5	;RP0=0, select bank0
   615  0678  1303               	bcf	3,6	;RP1=0, select bank0
   616  0679  00C0               	movwf	??_main+2
   617  067A  305E               	movlw	94
   618  067B  00BF               	movwf	??_main+1
   619  067C  306D               	movlw	109
   620  067D  00BE               	movwf	??_main
   621  067E                     u807:
   622  067E  0BBE               	decfsz	??_main,f
   623  067F  2E7E               	goto	u807
   624  0680  0BBF               	decfsz	??_main+1,f
   625  0681  2E7E               	goto	u807
   626  0682  0BC0               	decfsz	??_main+2,f
   627  0683  2E7E               	goto	u807
   628  0684  2E85               	nop2
   629  0685  2E11               	goto	l1119
   630  0686  120A  118A  2800   	ljmp	start
   631  0689                     __end_of_main:
   632                           
   633                           	psect	text1
   634  03F1                     __ptext1:	
   635 ;; *************** function _tx *****************
   636 ;; Defined at:
   637 ;;		line 13 in file "./uart.h"
   638 ;; Parameters:    Size  Location     Type
   639 ;;  a               2    0[COMMON] unsigned int 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  2    0[COMMON] unsigned int 
   644 ;; Registers used:
   645 ;;		wreg
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         2       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         2       0       0       0       0
   655 ;;Total ram usage:        2 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _tx
   666  03F1                     _tx:
   667  03F1                     l1101:	
   668                           ;incstack = 0
   669                           ; Regs used in _tx: [wreg]
   670                           
   671                           
   672                           ;./uart.h: 13: unsigned int tx(unsigned int a);./uart.h: 14: {;./uart.h: 15:  TXREG=a;
   673  03F1  0870               	movf	tx@a,w
   674  03F2  1283               	bcf	3,5	;RP0=0, select bank0
   675  03F3  1303               	bcf	3,6	;RP1=0, select bank0
   676  03F4  0099               	movwf	25	;volatile
   677  03F5                     l62:	
   678                           ;./uart.h: 16:  while(!TXIF);
   679                           
   680  03F5  1E0C               	btfss	12,4	;volatile
   681  03F6  2BF8               	goto	u741
   682  03F7  2BF9               	goto	u740
   683  03F8                     u741:
   684  03F8  2BF5               	goto	l62
   685  03F9                     u740:
   686  03F9                     l64:
   687                           
   688                           ;./uart.h: 17:  TXIF = 0;
   689  03F9  120C               	bcf	12,4	;volatile
   690  03FA                     l65:
   691  03FA  0008               	return
   692  03FB                     __end_of_tx:
   693                           
   694                           	psect	text2
   695  03FB                     __ptext2:	
   696 ;; *************** function _ser_int *****************
   697 ;; Defined at:
   698 ;;		line 6 in file "./uart.h"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   712 ;;      Params:         0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0
   715 ;;      Totals:         0       0       0       0       0
   716 ;;Total ram usage:        0 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _ser_int
   727  03FB                     _ser_int:
   728  03FB                     l1099:	
   729                           ;incstack = 0
   730                           ; Regs used in _ser_int: [wreg]
   731                           
   732                           
   733                           ;./uart.h: 8:  TXSTA= 0x20;
   734  03FB  3020               	movlw	32
   735  03FC  1683               	bsf	3,5	;RP0=1, select bank1
   736  03FD  1303               	bcf	3,6	;RP1=0, select bank1
   737  03FE  0098               	movwf	24	;volatile
   738                           
   739                           ;./uart.h: 9:  RCSTA= 0b10010000;
   740  03FF  3090               	movlw	144
   741  0400  1283               	bcf	3,5	;RP0=0, select bank0
   742  0401  1303               	bcf	3,6	;RP1=0, select bank0
   743  0402  0098               	movwf	24	;volatile
   744                           
   745                           ;./uart.h: 10:  SPBRG=31;
   746  0403  301F               	movlw	31
   747  0404  1683               	bsf	3,5	;RP0=1, select bank1
   748  0405  1303               	bcf	3,6	;RP1=0, select bank1
   749  0406  0099               	movwf	25	;volatile
   750  0407                     l59:
   751  0407  0008               	return
   752  0408                     __end_of_ser_int:
   753                           
   754                           	psect	text3
   755  0726                     __ptext3:	
   756 ;; *************** function _LCD_num *****************
   757 ;; Defined at:
   758 ;;		line 47 in file "./lcd4bit.h"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  val             4   14[BANK0 ] long 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  remainder       2   28[BANK0 ] unsigned int 
   763 ;;  result1         2   26[BANK0 ] unsigned int 
   764 ;;  result          2   24[BANK0 ] unsigned int 
   765 ;;  digit3          2   22[BANK0 ] unsigned int 
   766 ;;  digit2          2   20[BANK0 ] unsigned int 
   767 ;;  digit1          2   18[BANK0 ] unsigned int 
   768 ;;  calb_val        2    0        int 
   769 ;;  avv             2    0        unsigned int 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2   14[BANK0 ] unsigned int 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       4       0       0       0
   780 ;;      Locals:         0      12       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         0      16       0       0       0
   783 ;;Total ram usage:       16 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; Hardware stack levels required when called: 1
   786 ;; This function calls:
   787 ;;		_LCD_Char
   788 ;;		___aldiv
   789 ;;		___lmul
   790 ;;		___lwdiv
   791 ;;		___lwmod
   792 ;;		___wmul
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _LCD_num
   800  0726                     _LCD_num:
   801  0726                     l1073:	
   802                           ;incstack = 0
   803                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
   804                           
   805  0726                     l1075:
   806                           
   807                           ;./lcd4bit.h: 50:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 51:     result1, avv;;./lcd4bit.h: 52:     result = ((val*100)/calb_val);
   808  0726  3000               	movlw	0
   809  0727  1283               	bcf	3,5	;RP0=0, select bank0
   810  0728  1303               	bcf	3,6	;RP1=0, select bank0
   811  0729  00A3               	movwf	___aldiv@divisor+3
   812  072A  3000               	movlw	0
   813  072B  00A2               	movwf	___aldiv@divisor+2
   814  072C  3000               	movlw	0
   815  072D  00A1               	movwf	___aldiv@divisor+1
   816  072E  30C8               	movlw	200
   817  072F  00A0               	movwf	___aldiv@divisor
   818  0730  0831               	movf	LCD_num@val+3,w
   819  0731  00F3               	movwf	___lmul@multiplier+3
   820  0732  0830               	movf	LCD_num@val+2,w
   821  0733  00F2               	movwf	___lmul@multiplier+2
   822  0734  082F               	movf	LCD_num@val+1,w
   823  0735  00F1               	movwf	___lmul@multiplier+1
   824  0736  082E               	movf	LCD_num@val,w
   825  0737  00F0               	movwf	___lmul@multiplier
   826  0738  3000               	movlw	0
   827  0739  00F7               	movwf	___lmul@multiplicand+3
   828  073A  3000               	movlw	0
   829  073B  00F6               	movwf	___lmul@multiplicand+2
   830  073C  3000               	movlw	0
   831  073D  00F5               	movwf	___lmul@multiplicand+1
   832  073E  3064               	movlw	100
   833  073F  00F4               	movwf	___lmul@multiplicand
   834  0740  120A  118A  2559  120A  118A  	fcall	___lmul
   835  0745  0873               	movf	?___lmul+3,w
   836  0746  1283               	bcf	3,5	;RP0=0, select bank0
   837  0747  1303               	bcf	3,6	;RP1=0, select bank0
   838  0748  00A7               	movwf	___aldiv@dividend+3
   839  0749  0872               	movf	?___lmul+2,w
   840  074A  00A6               	movwf	___aldiv@dividend+2
   841  074B  0871               	movf	?___lmul+1,w
   842  074C  00A5               	movwf	___aldiv@dividend+1
   843  074D  0870               	movf	?___lmul,w
   844  074E  00A4               	movwf	___aldiv@dividend
   845  074F  120A  118A  2689  120A  118A  	fcall	___aldiv
   846  0754  1283               	bcf	3,5	;RP0=0, select bank0
   847  0755  1303               	bcf	3,6	;RP1=0, select bank0
   848  0756  0821               	movf	?___aldiv+1,w
   849  0757  00B9               	movwf	LCD_num@result+1
   850  0758  0820               	movf	?___aldiv,w
   851  0759  00B8               	movwf	LCD_num@result
   852  075A                     l1077:
   853                           
   854                           ;./lcd4bit.h: 53:     remainder = result% 10;
   855  075A  300A               	movlw	10
   856  075B  00F0               	movwf	___lwmod@divisor
   857  075C  3000               	movlw	0
   858  075D  00F1               	movwf	___lwmod@divisor+1
   859  075E  0839               	movf	LCD_num@result+1,w
   860  075F  00F3               	movwf	___lwmod@dividend+1
   861  0760  0838               	movf	LCD_num@result,w
   862  0761  00F2               	movwf	___lwmod@dividend
   863  0762  120A  118A  245B  120A  118A  	fcall	___lwmod
   864  0767  0871               	movf	?___lwmod+1,w
   865  0768  1283               	bcf	3,5	;RP0=0, select bank0
   866  0769  1303               	bcf	3,6	;RP1=0, select bank0
   867  076A  00BD               	movwf	LCD_num@remainder+1
   868  076B  0870               	movf	?___lwmod,w
   869  076C  00BC               	movwf	LCD_num@remainder
   870  076D                     l1079:
   871                           
   872                           ;./lcd4bit.h: 54:     result1 = result /10;
   873  076D  300A               	movlw	10
   874  076E  00F0               	movwf	___lwdiv@divisor
   875  076F  3000               	movlw	0
   876  0770  00F1               	movwf	___lwdiv@divisor+1
   877  0771  0839               	movf	LCD_num@result+1,w
   878  0772  00F3               	movwf	___lwdiv@dividend+1
   879  0773  0838               	movf	LCD_num@result,w
   880  0774  00F2               	movwf	___lwdiv@dividend
   881  0775  120A  118A  2515  120A  118A  	fcall	___lwdiv
   882  077A  0871               	movf	?___lwdiv+1,w
   883  077B  1283               	bcf	3,5	;RP0=0, select bank0
   884  077C  1303               	bcf	3,6	;RP1=0, select bank0
   885  077D  00BB               	movwf	LCD_num@result1+1
   886  077E  0870               	movf	?___lwdiv,w
   887  077F  00BA               	movwf	LCD_num@result1
   888  0780                     l1081:
   889                           
   890                           ;./lcd4bit.h: 55:     digit1 = remainder;
   891  0780  083D               	movf	LCD_num@remainder+1,w
   892  0781  00B3               	movwf	LCD_num@digit1+1
   893  0782  083C               	movf	LCD_num@remainder,w
   894  0783  00B2               	movwf	LCD_num@digit1
   895                           
   896                           ;./lcd4bit.h: 56:     remainder = result1%10;
   897  0784  300A               	movlw	10
   898  0785  00F0               	movwf	___lwmod@divisor
   899  0786  3000               	movlw	0
   900  0787  00F1               	movwf	___lwmod@divisor+1
   901  0788  083B               	movf	LCD_num@result1+1,w
   902  0789  00F3               	movwf	___lwmod@dividend+1
   903  078A  083A               	movf	LCD_num@result1,w
   904  078B  00F2               	movwf	___lwmod@dividend
   905  078C  120A  118A  245B  120A  118A  	fcall	___lwmod
   906  0791  0871               	movf	?___lwmod+1,w
   907  0792  1283               	bcf	3,5	;RP0=0, select bank0
   908  0793  1303               	bcf	3,6	;RP1=0, select bank0
   909  0794  00BD               	movwf	LCD_num@remainder+1
   910  0795  0870               	movf	?___lwmod,w
   911  0796  00BC               	movwf	LCD_num@remainder
   912  0797                     l1083:
   913                           
   914                           ;./lcd4bit.h: 57:     digit2 = remainder;
   915  0797  083D               	movf	LCD_num@remainder+1,w
   916  0798  00B5               	movwf	LCD_num@digit2+1
   917  0799  083C               	movf	LCD_num@remainder,w
   918  079A  00B4               	movwf	LCD_num@digit2
   919  079B                     l1085:
   920                           
   921                           ;./lcd4bit.h: 58:     remainder = (result1/10);
   922  079B  300A               	movlw	10
   923  079C  00F0               	movwf	___lwdiv@divisor
   924  079D  3000               	movlw	0
   925  079E  00F1               	movwf	___lwdiv@divisor+1
   926  079F  083B               	movf	LCD_num@result1+1,w
   927  07A0  00F3               	movwf	___lwdiv@dividend+1
   928  07A1  083A               	movf	LCD_num@result1,w
   929  07A2  00F2               	movwf	___lwdiv@dividend
   930  07A3  120A  118A  2515  120A  118A  	fcall	___lwdiv
   931  07A8  0871               	movf	?___lwdiv+1,w
   932  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   933  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   934  07AB  00BD               	movwf	LCD_num@remainder+1
   935  07AC  0870               	movf	?___lwdiv,w
   936  07AD  00BC               	movwf	LCD_num@remainder
   937                           
   938                           ;./lcd4bit.h: 59:     digit3=remainder;
   939  07AE  083D               	movf	LCD_num@remainder+1,w
   940  07AF  00B7               	movwf	LCD_num@digit3+1
   941  07B0  083C               	movf	LCD_num@remainder,w
   942  07B1  00B6               	movwf	LCD_num@digit3
   943  07B2                     l1087:
   944                           
   945                           ;./lcd4bit.h: 60:     LCD_Char(digit3+0x30);
   946  07B2  0836               	movf	LCD_num@digit3,w
   947  07B3  3E30               	addlw	48
   948  07B4  120A  118A  24D5  120A  118A  	fcall	_LCD_Char
   949  07B9                     l1089:
   950                           
   951                           ;./lcd4bit.h: 61:     LCD_Char('.');
   952  07B9  302E               	movlw	46
   953  07BA  120A  118A  24D5  120A  118A  	fcall	_LCD_Char
   954  07BF                     l1091:
   955                           
   956                           ;./lcd4bit.h: 62:     LCD_Char(digit2+0x30);
   957  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   958  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   959  07C1  0834               	movf	LCD_num@digit2,w
   960  07C2  3E30               	addlw	48
   961  07C3  120A  118A  24D5  120A  118A  	fcall	_LCD_Char
   962  07C8                     l1093:
   963                           
   964                           ;./lcd4bit.h: 63:     LCD_Char(digit1+0x30);
   965  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   966  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   967  07CA  0832               	movf	LCD_num@digit1,w
   968  07CB  3E30               	addlw	48
   969  07CC  120A  118A  24D5  120A  118A  	fcall	_LCD_Char
   970  07D1                     l1095:
   971  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   972  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   973  07D3  0837               	movf	LCD_num@digit3+1,w
   974  07D4  00F1               	movwf	___wmul@multiplier+1
   975  07D5  0836               	movf	LCD_num@digit3,w
   976  07D6  00F0               	movwf	___wmul@multiplier
   977  07D7  3064               	movlw	100
   978  07D8  00F2               	movwf	___wmul@multiplicand
   979  07D9  3000               	movlw	0
   980  07DA  00F3               	movwf	___wmul@multiplicand+1
   981  07DB  120A  118A  2408  120A  118A  	fcall	___wmul
   982  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   983  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   984  07E2  0835               	movf	LCD_num@digit2+1,w
   985  07E3  00F1               	movwf	___wmul@multiplier+1
   986  07E4  0834               	movf	LCD_num@digit2,w
   987  07E5  00F0               	movwf	___wmul@multiplier
   988  07E6  300A               	movlw	10
   989  07E7  00F2               	movwf	___wmul@multiplicand
   990  07E8  3000               	movlw	0
   991  07E9  00F3               	movwf	___wmul@multiplicand+1
   992  07EA  120A  118A  2408  120A  118A  	fcall	___wmul
   993  07EF                     l50:
   994  07EF  0008               	return
   995  07F0                     __end_of_LCD_num:
   996                           
   997                           	psect	text4
   998  0408                     __ptext4:	
   999 ;; *************** function ___wmul *****************
  1000 ;; Defined at:
  1001 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  multiplier      2    0[COMMON] unsigned int 
  1004 ;;  multiplicand    2    2[COMMON] unsigned int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  product         2    4[COMMON] unsigned int 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  2    0[COMMON] unsigned int 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         4       0       0       0       0
  1017 ;;      Locals:         2       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         6       0       0       0       0
  1020 ;;Total ram usage:        6 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_LCD_num
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function ___wmul
  1031  0408                     ___wmul:
  1032  0408                     l953:	
  1033                           ;incstack = 0
  1034                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1035                           
  1036  0408  01F4               	clrf	___wmul@product
  1037  0409  01F5               	clrf	___wmul@product+1
  1038  040A                     l955:
  1039  040A  1C70               	btfss	___wmul@multiplier,0
  1040  040B  2C0D               	goto	u421
  1041  040C  2C0E               	goto	u420
  1042  040D                     u421:
  1043  040D  2C14               	goto	l177
  1044  040E                     u420:
  1045  040E                     l957:
  1046  040E  0872               	movf	___wmul@multiplicand,w
  1047  040F  07F4               	addwf	___wmul@product,f
  1048  0410  1803               	skipnc
  1049  0411  0AF5               	incf	___wmul@product+1,f
  1050  0412  0873               	movf	___wmul@multiplicand+1,w
  1051  0413  07F5               	addwf	___wmul@product+1,f
  1052  0414                     l177:
  1053  0414  3001               	movlw	1
  1054  0415                     u435:
  1055  0415  1003               	clrc
  1056  0416  0DF2               	rlf	___wmul@multiplicand,f
  1057  0417  0DF3               	rlf	___wmul@multiplicand+1,f
  1058  0418  3EFF               	addlw	-1
  1059  0419  1D03               	skipz
  1060  041A  2C15               	goto	u435
  1061  041B                     l959:
  1062  041B  3001               	movlw	1
  1063  041C                     u445:
  1064  041C  1003               	clrc
  1065  041D  0CF1               	rrf	___wmul@multiplier+1,f
  1066  041E  0CF0               	rrf	___wmul@multiplier,f
  1067  041F  3EFF               	addlw	-1
  1068  0420  1D03               	skipz
  1069  0421  2C1C               	goto	u445
  1070  0422                     l961:
  1071  0422  0870               	movf	___wmul@multiplier,w
  1072  0423  0471               	iorwf	___wmul@multiplier+1,w
  1073  0424  1D03               	btfss	3,2
  1074  0425  2C27               	goto	u451
  1075  0426  2C28               	goto	u450
  1076  0427                     u451:
  1077  0427  2C0A               	goto	l955
  1078  0428                     u450:
  1079  0428                     l963:
  1080  0428  0875               	movf	___wmul@product+1,w
  1081  0429  00F1               	movwf	?___wmul+1
  1082  042A  0874               	movf	___wmul@product,w
  1083  042B  00F0               	movwf	?___wmul
  1084  042C                     l179:
  1085  042C  0008               	return
  1086  042D                     __end_of___wmul:
  1087                           
  1088                           	psect	text5
  1089  045B                     __ptext5:	
  1090 ;; *************** function ___lwmod *****************
  1091 ;; Defined at:
  1092 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  divisor         2    0[COMMON] unsigned int 
  1095 ;;  dividend        2    2[COMMON] unsigned int 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  counter         1    5[COMMON] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  2    0[COMMON] unsigned int 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         4       0       0       0       0
  1108 ;;      Locals:         1       0       0       0       0
  1109 ;;      Temps:          1       0       0       0       0
  1110 ;;      Totals:         6       0       0       0       0
  1111 ;;Total ram usage:        6 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_LCD_num
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function ___lwmod
  1122  045B                     ___lwmod:
  1123  045B                     l1047:	
  1124                           ;incstack = 0
  1125                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1126                           
  1127  045B  0870               	movf	___lwmod@divisor,w
  1128  045C  0471               	iorwf	___lwmod@divisor+1,w
  1129  045D  1903               	btfsc	3,2
  1130  045E  2C60               	goto	u681
  1131  045F  2C61               	goto	u680
  1132  0460                     u681:
  1133  0460  2C90               	goto	l1065
  1134  0461                     u680:
  1135  0461                     l1049:
  1136  0461  01F5               	clrf	___lwmod@counter
  1137  0462  0AF5               	incf	___lwmod@counter,f
  1138  0463  2C6F               	goto	l1055
  1139  0464                     l1051:
  1140  0464  3001               	movlw	1
  1141  0465                     u695:
  1142  0465  1003               	clrc
  1143  0466  0DF0               	rlf	___lwmod@divisor,f
  1144  0467  0DF1               	rlf	___lwmod@divisor+1,f
  1145  0468  3EFF               	addlw	-1
  1146  0469  1D03               	skipz
  1147  046A  2C65               	goto	u695
  1148  046B                     l1053:
  1149  046B  3001               	movlw	1
  1150  046C  00F4               	movwf	??___lwmod
  1151  046D  0874               	movf	??___lwmod,w
  1152  046E  07F5               	addwf	___lwmod@counter,f
  1153  046F                     l1055:
  1154  046F  1FF1               	btfss	___lwmod@divisor+1,7
  1155  0470  2C72               	goto	u701
  1156  0471  2C73               	goto	u700
  1157  0472                     u701:
  1158  0472  2C64               	goto	l1051
  1159  0473                     u700:
  1160  0473                     l1057:
  1161  0473  0871               	movf	___lwmod@divisor+1,w
  1162  0474  0273               	subwf	___lwmod@dividend+1,w
  1163  0475  1D03               	skipz
  1164  0476  2C79               	goto	u715
  1165  0477  0870               	movf	___lwmod@divisor,w
  1166  0478  0272               	subwf	___lwmod@dividend,w
  1167  0479                     u715:
  1168  0479  1C03               	skipc
  1169  047A  2C7C               	goto	u711
  1170  047B  2C7D               	goto	u710
  1171  047C                     u711:
  1172  047C  2C83               	goto	l1061
  1173  047D                     u710:
  1174  047D                     l1059:
  1175  047D  0870               	movf	___lwmod@divisor,w
  1176  047E  02F2               	subwf	___lwmod@dividend,f
  1177  047F  0871               	movf	___lwmod@divisor+1,w
  1178  0480  1C03               	skipc
  1179  0481  03F3               	decf	___lwmod@dividend+1,f
  1180  0482  02F3               	subwf	___lwmod@dividend+1,f
  1181  0483                     l1061:
  1182  0483  3001               	movlw	1
  1183  0484                     u725:
  1184  0484  1003               	clrc
  1185  0485  0CF1               	rrf	___lwmod@divisor+1,f
  1186  0486  0CF0               	rrf	___lwmod@divisor,f
  1187  0487  3EFF               	addlw	-1
  1188  0488  1D03               	skipz
  1189  0489  2C84               	goto	u725
  1190  048A                     l1063:
  1191  048A  3001               	movlw	1
  1192  048B  02F5               	subwf	___lwmod@counter,f
  1193  048C  1D03               	btfss	3,2
  1194  048D  2C8F               	goto	u731
  1195  048E  2C90               	goto	u730
  1196  048F                     u731:
  1197  048F  2C73               	goto	l1057
  1198  0490                     u730:
  1199  0490                     l1065:
  1200  0490  0873               	movf	___lwmod@dividend+1,w
  1201  0491  00F1               	movwf	?___lwmod+1
  1202  0492  0872               	movf	___lwmod@dividend,w
  1203  0493  00F0               	movwf	?___lwmod
  1204  0494                     l459:
  1205  0494  0008               	return
  1206  0495                     __end_of___lwmod:
  1207                           
  1208                           	psect	text6
  1209  0515                     __ptext6:	
  1210 ;; *************** function ___lwdiv *****************
  1211 ;; Defined at:
  1212 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  divisor         2    0[COMMON] unsigned int 
  1215 ;;  dividend        2    2[COMMON] unsigned int 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  quotient        2    5[COMMON] unsigned int 
  1218 ;;  counter         1    7[COMMON] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2    0[COMMON] unsigned int 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         4       0       0       0       0
  1229 ;;      Locals:         3       0       0       0       0
  1230 ;;      Temps:          1       0       0       0       0
  1231 ;;      Totals:         8       0       0       0       0
  1232 ;;Total ram usage:        8 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_LCD_num
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function ___lwdiv
  1243  0515                     ___lwdiv:
  1244  0515                     l1021:	
  1245                           ;incstack = 0
  1246                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1247                           
  1248  0515  01F5               	clrf	___lwdiv@quotient
  1249  0516  01F6               	clrf	___lwdiv@quotient+1
  1250  0517                     l1023:
  1251  0517  0870               	movf	___lwdiv@divisor,w
  1252  0518  0471               	iorwf	___lwdiv@divisor+1,w
  1253  0519  1903               	btfsc	3,2
  1254  051A  2D1C               	goto	u611
  1255  051B  2D1D               	goto	u610
  1256  051C                     u611:
  1257  051C  2D54               	goto	l1043
  1258  051D                     u610:
  1259  051D                     l1025:
  1260  051D  01F7               	clrf	___lwdiv@counter
  1261  051E  0AF7               	incf	___lwdiv@counter,f
  1262  051F  2D2B               	goto	l1031
  1263  0520                     l1027:
  1264  0520  3001               	movlw	1
  1265  0521                     u625:
  1266  0521  1003               	clrc
  1267  0522  0DF0               	rlf	___lwdiv@divisor,f
  1268  0523  0DF1               	rlf	___lwdiv@divisor+1,f
  1269  0524  3EFF               	addlw	-1
  1270  0525  1D03               	skipz
  1271  0526  2D21               	goto	u625
  1272  0527                     l1029:
  1273  0527  3001               	movlw	1
  1274  0528  00F4               	movwf	??___lwdiv
  1275  0529  0874               	movf	??___lwdiv,w
  1276  052A  07F7               	addwf	___lwdiv@counter,f
  1277  052B                     l1031:
  1278  052B  1FF1               	btfss	___lwdiv@divisor+1,7
  1279  052C  2D2E               	goto	u631
  1280  052D  2D2F               	goto	u630
  1281  052E                     u631:
  1282  052E  2D20               	goto	l1027
  1283  052F                     u630:
  1284  052F                     l1033:
  1285  052F  3001               	movlw	1
  1286  0530                     u645:
  1287  0530  1003               	clrc
  1288  0531  0DF5               	rlf	___lwdiv@quotient,f
  1289  0532  0DF6               	rlf	___lwdiv@quotient+1,f
  1290  0533  3EFF               	addlw	-1
  1291  0534  1D03               	skipz
  1292  0535  2D30               	goto	u645
  1293  0536  0871               	movf	___lwdiv@divisor+1,w
  1294  0537  0273               	subwf	___lwdiv@dividend+1,w
  1295  0538  1D03               	skipz
  1296  0539  2D3C               	goto	u655
  1297  053A  0870               	movf	___lwdiv@divisor,w
  1298  053B  0272               	subwf	___lwdiv@dividend,w
  1299  053C                     u655:
  1300  053C  1C03               	skipc
  1301  053D  2D3F               	goto	u651
  1302  053E  2D40               	goto	u650
  1303  053F                     u651:
  1304  053F  2D47               	goto	l1039
  1305  0540                     u650:
  1306  0540                     l1035:
  1307  0540  0870               	movf	___lwdiv@divisor,w
  1308  0541  02F2               	subwf	___lwdiv@dividend,f
  1309  0542  0871               	movf	___lwdiv@divisor+1,w
  1310  0543  1C03               	skipc
  1311  0544  03F3               	decf	___lwdiv@dividend+1,f
  1312  0545  02F3               	subwf	___lwdiv@dividend+1,f
  1313  0546                     l1037:
  1314  0546  1475               	bsf	___lwdiv@quotient,0
  1315  0547                     l1039:
  1316  0547  3001               	movlw	1
  1317  0548                     u665:
  1318  0548  1003               	clrc
  1319  0549  0CF1               	rrf	___lwdiv@divisor+1,f
  1320  054A  0CF0               	rrf	___lwdiv@divisor,f
  1321  054B  3EFF               	addlw	-1
  1322  054C  1D03               	skipz
  1323  054D  2D48               	goto	u665
  1324  054E                     l1041:
  1325  054E  3001               	movlw	1
  1326  054F  02F7               	subwf	___lwdiv@counter,f
  1327  0550  1D03               	btfss	3,2
  1328  0551  2D53               	goto	u671
  1329  0552  2D54               	goto	u670
  1330  0553                     u671:
  1331  0553  2D2F               	goto	l1033
  1332  0554                     u670:
  1333  0554                     l1043:
  1334  0554  0876               	movf	___lwdiv@quotient+1,w
  1335  0555  00F1               	movwf	?___lwdiv+1
  1336  0556  0875               	movf	___lwdiv@quotient,w
  1337  0557  00F0               	movwf	?___lwdiv
  1338  0558                     l449:
  1339  0558  0008               	return
  1340  0559                     __end_of___lwdiv:
  1341                           
  1342                           	psect	text7
  1343  0559                     __ptext7:	
  1344 ;; *************** function ___lmul *****************
  1345 ;; Defined at:
  1346 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  multiplier      4    0[COMMON] unsigned long 
  1349 ;;  multiplicand    4    4[COMMON] unsigned long 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  product         4    9[COMMON] unsigned long 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  4    0[COMMON] unsigned long 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         8       0       0       0       0
  1362 ;;      Locals:         4       0       0       0       0
  1363 ;;      Temps:          1       0       0       0       0
  1364 ;;      Totals:        13       0       0       0       0
  1365 ;;Total ram usage:       13 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_LCD_num
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           
  1375                           ;psect for function ___lmul
  1376  0559                     ___lmul:
  1377  0559                     l967:	
  1378                           ;incstack = 0
  1379                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1380                           
  1381  0559  3000               	movlw	0
  1382  055A  00FC               	movwf	___lmul@product+3
  1383  055B  3000               	movlw	0
  1384  055C  00FB               	movwf	___lmul@product+2
  1385  055D  3000               	movlw	0
  1386  055E  00FA               	movwf	___lmul@product+1
  1387  055F  3000               	movlw	0
  1388  0560  00F9               	movwf	___lmul@product
  1389  0561                     l969:
  1390  0561  1C70               	btfss	___lmul@multiplier,0
  1391  0562  2D64               	goto	u461
  1392  0563  2D65               	goto	u460
  1393  0564                     u461:
  1394  0564  2D7C               	goto	l973
  1395  0565                     u460:
  1396  0565                     l971:
  1397  0565  0874               	movf	___lmul@multiplicand,w
  1398  0566  07F9               	addwf	___lmul@product,f
  1399  0567  0875               	movf	___lmul@multiplicand+1,w
  1400  0568  1103               	clrz
  1401  0569  1803               	skipnc
  1402  056A  3E01               	addlw	1
  1403  056B  1903               	skipnz
  1404  056C  2D6E               	goto	u471
  1405  056D  07FA               	addwf	___lmul@product+1,f
  1406  056E                     u471:
  1407  056E  0876               	movf	___lmul@multiplicand+2,w
  1408  056F  1103               	clrz
  1409  0570  1803               	skipnc
  1410  0571  3E01               	addlw	1
  1411  0572  1903               	skipnz
  1412  0573  2D75               	goto	u472
  1413  0574  07FB               	addwf	___lmul@product+2,f
  1414  0575                     u472:
  1415  0575  0877               	movf	___lmul@multiplicand+3,w
  1416  0576  1103               	clrz
  1417  0577  1803               	skipnc
  1418  0578  3E01               	addlw	1
  1419  0579  1903               	skipnz
  1420  057A  2D7C               	goto	u473
  1421  057B  07FC               	addwf	___lmul@product+3,f
  1422  057C                     u473:
  1423  057C                     l973:
  1424  057C  3001               	movlw	1
  1425  057D  00F8               	movwf	??___lmul
  1426  057E                     u485:
  1427  057E  1003               	clrc
  1428  057F  0DF4               	rlf	___lmul@multiplicand,f
  1429  0580  0DF5               	rlf	___lmul@multiplicand+1,f
  1430  0581  0DF6               	rlf	___lmul@multiplicand+2,f
  1431  0582  0DF7               	rlf	___lmul@multiplicand+3,f
  1432  0583  0BF8               	decfsz	??___lmul,f
  1433  0584  2D7E               	goto	u485
  1434  0585                     l975:
  1435  0585  3001               	movlw	1
  1436  0586                     u495:
  1437  0586  1003               	clrc
  1438  0587  0CF3               	rrf	___lmul@multiplier+3,f
  1439  0588  0CF2               	rrf	___lmul@multiplier+2,f
  1440  0589  0CF1               	rrf	___lmul@multiplier+1,f
  1441  058A  0CF0               	rrf	___lmul@multiplier,f
  1442  058B  3EFF               	addlw	-1
  1443  058C  1D03               	skipz
  1444  058D  2D86               	goto	u495
  1445  058E  0873               	movf	___lmul@multiplier+3,w
  1446  058F  0472               	iorwf	___lmul@multiplier+2,w
  1447  0590  0471               	iorwf	___lmul@multiplier+1,w
  1448  0591  0470               	iorwf	___lmul@multiplier,w
  1449  0592  1D03               	skipz
  1450  0593  2D95               	goto	u501
  1451  0594  2D96               	goto	u500
  1452  0595                     u501:
  1453  0595  2D61               	goto	l969
  1454  0596                     u500:
  1455  0596                     l977:
  1456  0596  087C               	movf	___lmul@product+3,w
  1457  0597  00F3               	movwf	?___lmul+3
  1458  0598  087B               	movf	___lmul@product+2,w
  1459  0599  00F2               	movwf	?___lmul+2
  1460  059A  087A               	movf	___lmul@product+1,w
  1461  059B  00F1               	movwf	?___lmul+1
  1462  059C  0879               	movf	___lmul@product,w
  1463  059D  00F0               	movwf	?___lmul
  1464  059E                     l191:
  1465  059E  0008               	return
  1466  059F                     __end_of___lmul:
  1467                           
  1468                           	psect	text8
  1469  0689                     __ptext8:	
  1470 ;; *************** function ___aldiv *****************
  1471 ;; Defined at:
  1472 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  divisor         4    0[BANK0 ] long 
  1475 ;;  dividend        4    4[BANK0 ] long 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  quotient        4   10[BANK0 ] long 
  1478 ;;  sign            1    9[BANK0 ] unsigned char 
  1479 ;;  counter         1    8[BANK0 ] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  4    0[BANK0 ] long 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       8       0       0       0
  1490 ;;      Locals:         0       6       0       0       0
  1491 ;;      Temps:          1       0       0       0       0
  1492 ;;      Totals:         1      14       0       0       0
  1493 ;;Total ram usage:       15 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_LCD_num
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function ___aldiv
  1504  0689                     ___aldiv:
  1505  0689                     l981:	
  1506                           ;incstack = 0
  1507                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1508                           
  1509  0689  1283               	bcf	3,5	;RP0=0, select bank0
  1510  068A  1303               	bcf	3,6	;RP1=0, select bank0
  1511  068B  01A9               	clrf	___aldiv@sign
  1512  068C                     l983:
  1513  068C  1FA3               	btfss	___aldiv@divisor+3,7
  1514  068D  2E8F               	goto	u511
  1515  068E  2E90               	goto	u510
  1516  068F                     u511:
  1517  068F  2E9D               	goto	l242
  1518  0690                     u510:
  1519  0690                     l985:
  1520  0690  09A0               	comf	___aldiv@divisor,f
  1521  0691  09A1               	comf	___aldiv@divisor+1,f
  1522  0692  09A2               	comf	___aldiv@divisor+2,f
  1523  0693  09A3               	comf	___aldiv@divisor+3,f
  1524  0694  0AA0               	incf	___aldiv@divisor,f
  1525  0695  1903               	skipnz
  1526  0696  0AA1               	incf	___aldiv@divisor+1,f
  1527  0697  1903               	skipnz
  1528  0698  0AA2               	incf	___aldiv@divisor+2,f
  1529  0699  1903               	skipnz
  1530  069A  0AA3               	incf	___aldiv@divisor+3,f
  1531  069B  01A9               	clrf	___aldiv@sign
  1532  069C  0AA9               	incf	___aldiv@sign,f
  1533  069D                     l242:
  1534  069D  1FA7               	btfss	___aldiv@dividend+3,7
  1535  069E  2EA0               	goto	u521
  1536  069F  2EA1               	goto	u520
  1537  06A0                     u521:
  1538  06A0  2EB0               	goto	l991
  1539  06A1                     u520:
  1540  06A1                     l987:
  1541  06A1  09A4               	comf	___aldiv@dividend,f
  1542  06A2  09A5               	comf	___aldiv@dividend+1,f
  1543  06A3  09A6               	comf	___aldiv@dividend+2,f
  1544  06A4  09A7               	comf	___aldiv@dividend+3,f
  1545  06A5  0AA4               	incf	___aldiv@dividend,f
  1546  06A6  1903               	skipnz
  1547  06A7  0AA5               	incf	___aldiv@dividend+1,f
  1548  06A8  1903               	skipnz
  1549  06A9  0AA6               	incf	___aldiv@dividend+2,f
  1550  06AA  1903               	skipnz
  1551  06AB  0AA7               	incf	___aldiv@dividend+3,f
  1552  06AC                     l989:
  1553  06AC  3001               	movlw	1
  1554  06AD  00FD               	movwf	??___aldiv
  1555  06AE  087D               	movf	??___aldiv,w
  1556  06AF  06A9               	xorwf	___aldiv@sign,f
  1557  06B0                     l991:
  1558  06B0  3000               	movlw	0
  1559  06B1  00AD               	movwf	___aldiv@quotient+3
  1560  06B2  3000               	movlw	0
  1561  06B3  00AC               	movwf	___aldiv@quotient+2
  1562  06B4  3000               	movlw	0
  1563  06B5  00AB               	movwf	___aldiv@quotient+1
  1564  06B6  3000               	movlw	0
  1565  06B7  00AA               	movwf	___aldiv@quotient
  1566  06B8                     l993:
  1567  06B8  0823               	movf	___aldiv@divisor+3,w
  1568  06B9  0422               	iorwf	___aldiv@divisor+2,w
  1569  06BA  0421               	iorwf	___aldiv@divisor+1,w
  1570  06BB  0420               	iorwf	___aldiv@divisor,w
  1571  06BC  1903               	skipnz
  1572  06BD  2EBF               	goto	u531
  1573  06BE  2EC0               	goto	u530
  1574  06BF                     u531:
  1575  06BF  2F0D               	goto	l1013
  1576  06C0                     u530:
  1577  06C0                     l995:
  1578  06C0  01A8               	clrf	___aldiv@counter
  1579  06C1  0AA8               	incf	___aldiv@counter,f
  1580  06C2  2ED0               	goto	l999
  1581  06C3                     l997:
  1582  06C3  3001               	movlw	1
  1583  06C4  00FD               	movwf	??___aldiv
  1584  06C5                     u545:
  1585  06C5  1003               	clrc
  1586  06C6  0DA0               	rlf	___aldiv@divisor,f
  1587  06C7  0DA1               	rlf	___aldiv@divisor+1,f
  1588  06C8  0DA2               	rlf	___aldiv@divisor+2,f
  1589  06C9  0DA3               	rlf	___aldiv@divisor+3,f
  1590  06CA  0BFD               	decfsz	??___aldiv,f
  1591  06CB  2EC5               	goto	u545
  1592  06CC  3001               	movlw	1
  1593  06CD  00FD               	movwf	??___aldiv
  1594  06CE  087D               	movf	??___aldiv,w
  1595  06CF  07A8               	addwf	___aldiv@counter,f
  1596  06D0                     l999:
  1597  06D0  1FA3               	btfss	___aldiv@divisor+3,7
  1598  06D1  2ED3               	goto	u551
  1599  06D2  2ED4               	goto	u550
  1600  06D3                     u551:
  1601  06D3  2EC3               	goto	l997
  1602  06D4                     u550:
  1603  06D4                     l1001:
  1604  06D4  3001               	movlw	1
  1605  06D5  00FD               	movwf	??___aldiv
  1606  06D6                     u565:
  1607  06D6  1003               	clrc
  1608  06D7  0DAA               	rlf	___aldiv@quotient,f
  1609  06D8  0DAB               	rlf	___aldiv@quotient+1,f
  1610  06D9  0DAC               	rlf	___aldiv@quotient+2,f
  1611  06DA  0DAD               	rlf	___aldiv@quotient+3,f
  1612  06DB  0BFD               	decfsz	??___aldiv,f
  1613  06DC  2ED6               	goto	u565
  1614  06DD                     l1003:
  1615  06DD  0823               	movf	___aldiv@divisor+3,w
  1616  06DE  0227               	subwf	___aldiv@dividend+3,w
  1617  06DF  1D03               	skipz
  1618  06E0  2EEB               	goto	u575
  1619  06E1  0822               	movf	___aldiv@divisor+2,w
  1620  06E2  0226               	subwf	___aldiv@dividend+2,w
  1621  06E3  1D03               	skipz
  1622  06E4  2EEB               	goto	u575
  1623  06E5  0821               	movf	___aldiv@divisor+1,w
  1624  06E6  0225               	subwf	___aldiv@dividend+1,w
  1625  06E7  1D03               	skipz
  1626  06E8  2EEB               	goto	u575
  1627  06E9  0820               	movf	___aldiv@divisor,w
  1628  06EA  0224               	subwf	___aldiv@dividend,w
  1629  06EB                     u575:
  1630  06EB  1C03               	skipc
  1631  06EC  2EEE               	goto	u571
  1632  06ED  2EEF               	goto	u570
  1633  06EE                     u571:
  1634  06EE  2EFE               	goto	l1009
  1635  06EF                     u570:
  1636  06EF                     l1005:
  1637  06EF  0820               	movf	___aldiv@divisor,w
  1638  06F0  02A4               	subwf	___aldiv@dividend,f
  1639  06F1  0821               	movf	___aldiv@divisor+1,w
  1640  06F2  1C03               	skipc
  1641  06F3  0F21               	incfsz	___aldiv@divisor+1,w
  1642  06F4  02A5               	subwf	___aldiv@dividend+1,f
  1643  06F5  0822               	movf	___aldiv@divisor+2,w
  1644  06F6  1C03               	skipc
  1645  06F7  0F22               	incfsz	___aldiv@divisor+2,w
  1646  06F8  02A6               	subwf	___aldiv@dividend+2,f
  1647  06F9  0823               	movf	___aldiv@divisor+3,w
  1648  06FA  1C03               	skipc
  1649  06FB  0F23               	incfsz	___aldiv@divisor+3,w
  1650  06FC  02A7               	subwf	___aldiv@dividend+3,f
  1651  06FD                     l1007:
  1652  06FD  142A               	bsf	___aldiv@quotient,0
  1653  06FE                     l1009:
  1654  06FE  3001               	movlw	1
  1655  06FF                     u585:
  1656  06FF  1003               	clrc
  1657  0700  0CA3               	rrf	___aldiv@divisor+3,f
  1658  0701  0CA2               	rrf	___aldiv@divisor+2,f
  1659  0702  0CA1               	rrf	___aldiv@divisor+1,f
  1660  0703  0CA0               	rrf	___aldiv@divisor,f
  1661  0704  3EFF               	addlw	-1
  1662  0705  1D03               	skipz
  1663  0706  2EFF               	goto	u585
  1664  0707                     l1011:
  1665  0707  3001               	movlw	1
  1666  0708  02A8               	subwf	___aldiv@counter,f
  1667  0709  1D03               	btfss	3,2
  1668  070A  2F0C               	goto	u591
  1669  070B  2F0D               	goto	u590
  1670  070C                     u591:
  1671  070C  2ED4               	goto	l1001
  1672  070D                     u590:
  1673  070D                     l1013:
  1674  070D  0829               	movf	___aldiv@sign,w
  1675  070E  1903               	btfsc	3,2
  1676  070F  2F11               	goto	u601
  1677  0710  2F12               	goto	u600
  1678  0711                     u601:
  1679  0711  2F1D               	goto	l1017
  1680  0712                     u600:
  1681  0712                     l1015:
  1682  0712  09AA               	comf	___aldiv@quotient,f
  1683  0713  09AB               	comf	___aldiv@quotient+1,f
  1684  0714  09AC               	comf	___aldiv@quotient+2,f
  1685  0715  09AD               	comf	___aldiv@quotient+3,f
  1686  0716  0AAA               	incf	___aldiv@quotient,f
  1687  0717  1903               	skipnz
  1688  0718  0AAB               	incf	___aldiv@quotient+1,f
  1689  0719  1903               	skipnz
  1690  071A  0AAC               	incf	___aldiv@quotient+2,f
  1691  071B  1903               	skipnz
  1692  071C  0AAD               	incf	___aldiv@quotient+3,f
  1693  071D                     l1017:
  1694  071D  082D               	movf	___aldiv@quotient+3,w
  1695  071E  00A3               	movwf	?___aldiv+3
  1696  071F  082C               	movf	___aldiv@quotient+2,w
  1697  0720  00A2               	movwf	?___aldiv+2
  1698  0721  082B               	movf	___aldiv@quotient+1,w
  1699  0722  00A1               	movwf	?___aldiv+1
  1700  0723  082A               	movf	___aldiv@quotient,w
  1701  0724  00A0               	movwf	?___aldiv
  1702  0725                     l252:
  1703  0725  0008               	return
  1704  0726                     __end_of___aldiv:
  1705                           
  1706                           	psect	text9
  1707  04D5                     __ptext9:	
  1708 ;; *************** function _LCD_Char *****************
  1709 ;; Defined at:
  1710 ;;		line 23 in file "./lcd4bit.h"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  data            1    wreg     unsigned char 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  data            1    2[COMMON] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1724 ;;      Params:         0       0       0       0       0
  1725 ;;      Locals:         1       0       0       0       0
  1726 ;;      Temps:          2       0       0       0       0
  1727 ;;      Totals:         3       0       0       0       0
  1728 ;;Total ram usage:        3 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_LCD_num
  1734 ;;		_show
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function _LCD_Char
  1740  04D5                     _LCD_Char:
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1744                           ;LCD_Char@data stored from wreg
  1745  04D5  00F2               	movwf	LCD_Char@data
  1746  04D6                     l935:
  1747                           
  1748                           ;./lcd4bit.h: 23: void LCD_Char (unsigned char data);./lcd4bit.h: 24: {;./lcd4bit.h: 25:
      +                               RC0 = 1;
  1749  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1750  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1751  04D8  1407               	bsf	7,0	;volatile
  1752  04D9                     l937:
  1753                           
  1754                           ;./lcd4bit.h: 26:     PORTB = data;
  1755  04D9  0872               	movf	LCD_Char@data,w
  1756  04DA  0086               	movwf	6	;volatile
  1757  04DB                     l939:
  1758                           
  1759                           ;./lcd4bit.h: 27:     RC1 = 1;
  1760  04DB  1487               	bsf	7,1	;volatile
  1761                           
  1762                           ;./lcd4bit.h: 28:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1763  04DC  3041               	movlw	65
  1764  04DD  00F1               	movwf	??_LCD_Char+1
  1765  04DE  30EE               	movlw	238
  1766  04DF  00F0               	movwf	??_LCD_Char
  1767  04E0                     u817:
  1768  04E0  0BF0               	decfsz	??_LCD_Char,f
  1769  04E1  2CE0               	goto	u817
  1770  04E2  0BF1               	decfsz	??_LCD_Char+1,f
  1771  04E3  2CE0               	goto	u817
  1772  04E4  0000               	nop
  1773  04E5                     l941:
  1774                           
  1775                           ;./lcd4bit.h: 29:     RC1 = 0;
  1776  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1777  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1778  04E7  1087               	bcf	7,1	;volatile
  1779                           
  1780                           ;./lcd4bit.h: 30:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1781  04E8  3041               	movlw	65
  1782  04E9  00F1               	movwf	??_LCD_Char+1
  1783  04EA  30EE               	movlw	238
  1784  04EB  00F0               	movwf	??_LCD_Char
  1785  04EC                     u827:
  1786  04EC  0BF0               	decfsz	??_LCD_Char,f
  1787  04ED  2CEC               	goto	u827
  1788  04EE  0BF1               	decfsz	??_LCD_Char+1,f
  1789  04EF  2CEC               	goto	u827
  1790  04F0  0000               	nop
  1791  04F1                     l943:
  1792                           
  1793                           ;./lcd4bit.h: 31:     PORTB = (data<<4);
  1794  04F1  0872               	movf	LCD_Char@data,w
  1795  04F2  00F0               	movwf	??_LCD_Char
  1796  04F3  3003               	movlw	3
  1797  04F4                     u415:
  1798  04F4  1003               	clrc
  1799  04F5  0DF0               	rlf	??_LCD_Char,f
  1800  04F6  3EFF               	addlw	-1
  1801  04F7  1D03               	skipz
  1802  04F8  2CF4               	goto	u415
  1803  04F9  1003               	clrc
  1804  04FA  0D70               	rlf	??_LCD_Char,w
  1805  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  1806  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  1807  04FD  0086               	movwf	6	;volatile
  1808  04FE                     l945:
  1809                           
  1810                           ;./lcd4bit.h: 32:     RC1 = 1;
  1811  04FE  1487               	bsf	7,1	;volatile
  1812  04FF                     l947:
  1813                           
  1814                           ;./lcd4bit.h: 33:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1815  04FF  3041               	movlw	65
  1816  0500  00F1               	movwf	??_LCD_Char+1
  1817  0501  30EE               	movlw	238
  1818  0502  00F0               	movwf	??_LCD_Char
  1819  0503                     u837:
  1820  0503  0BF0               	decfsz	??_LCD_Char,f
  1821  0504  2D03               	goto	u837
  1822  0505  0BF1               	decfsz	??_LCD_Char+1,f
  1823  0506  2D03               	goto	u837
  1824  0507  0000               	nop
  1825  0508                     l949:
  1826                           
  1827                           ;./lcd4bit.h: 34:     RC1 = 0;
  1828  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1830  050A  1087               	bcf	7,1	;volatile
  1831  050B                     l951:
  1832                           
  1833                           ;./lcd4bit.h: 35:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1834  050B  3041               	movlw	65
  1835  050C  00F1               	movwf	??_LCD_Char+1
  1836  050D  30EE               	movlw	238
  1837  050E  00F0               	movwf	??_LCD_Char
  1838  050F                     u847:
  1839  050F  0BF0               	decfsz	??_LCD_Char,f
  1840  0510  2D0F               	goto	u847
  1841  0511  0BF1               	decfsz	??_LCD_Char+1,f
  1842  0512  2D0F               	goto	u847
  1843  0513  0000               	nop
  1844  0514                     l44:
  1845  0514  0008               	return
  1846  0515                     __end_of_LCD_Char:
  1847                           
  1848                           	psect	text10
  1849  042D                     __ptext10:	
  1850 ;; *************** function _LCD_init *****************
  1851 ;; Defined at:
  1852 ;;		line 37 in file "./lcd4bit.h"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, status,0, pclath, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0
  1868 ;;      Temps:          2       0       0       0       0
  1869 ;;      Totals:         2       0       0       0       0
  1870 ;;Total ram usage:        2 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 1
  1873 ;; This function calls:
  1874 ;;		_LCD_Command
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _LCD_init
  1882  042D                     _LCD_init:
  1883  042D                     l1069:	
  1884                           ;incstack = 0
  1885                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1886                           
  1887                           
  1888                           ;./lcd4bit.h: 39:     LCD_Command (0x02);
  1889  042D  3002               	movlw	2
  1890  042E  120A  118A  2495  120A  118A  	fcall	_LCD_Command
  1891                           
  1892                           ;./lcd4bit.h: 40:     LCD_Command (0x28);
  1893  0433  3028               	movlw	40
  1894  0434  120A  118A  2495  120A  118A  	fcall	_LCD_Command
  1895                           
  1896                           ;./lcd4bit.h: 41:     LCD_Command (0x80);
  1897  0439  3080               	movlw	128
  1898  043A  120A  118A  2495  120A  118A  	fcall	_LCD_Command
  1899                           
  1900                           ;./lcd4bit.h: 42:     LCD_Command (0x0C);
  1901  043F  300C               	movlw	12
  1902  0440  120A  118A  2495  120A  118A  	fcall	_LCD_Command
  1903                           
  1904                           ;./lcd4bit.h: 43:     LCD_Command (0x06);
  1905  0445  3006               	movlw	6
  1906  0446  120A  118A  2495  120A  118A  	fcall	_LCD_Command
  1907                           
  1908                           ;./lcd4bit.h: 44:     LCD_Command (0x01);
  1909  044B  3001               	movlw	1
  1910  044C  120A  118A  2495  120A  118A  	fcall	_LCD_Command
  1911  0451                     l1071:
  1912                           
  1913                           ;./lcd4bit.h: 45:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1914  0451  3041               	movlw	65
  1915  0452  00F4               	movwf	??_LCD_init+1
  1916  0453  30EE               	movlw	238
  1917  0454  00F3               	movwf	??_LCD_init
  1918  0455                     u857:
  1919  0455  0BF3               	decfsz	??_LCD_init,f
  1920  0456  2C55               	goto	u857
  1921  0457  0BF4               	decfsz	??_LCD_init+1,f
  1922  0458  2C55               	goto	u857
  1923  0459  0000               	nop
  1924  045A                     l47:
  1925  045A  0008               	return
  1926  045B                     __end_of_LCD_init:
  1927                           
  1928                           	psect	text11
  1929  0495                     __ptext11:	
  1930 ;; *************** function _LCD_Command *****************
  1931 ;; Defined at:
  1932 ;;		line 9 in file "./lcd4bit.h"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  cmnd            1    wreg     unsigned char 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  cmnd            1    2[COMMON] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         0       0       0       0       0
  1947 ;;      Locals:         1       0       0       0       0
  1948 ;;      Temps:          2       0       0       0       0
  1949 ;;      Totals:         3       0       0       0       0
  1950 ;;Total ram usage:        3 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_LCD_init
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           
  1961                           ;psect for function _LCD_Command
  1962  0495                     _LCD_Command:
  1963                           
  1964                           ;incstack = 0
  1965                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  1966                           ;LCD_Command@cmnd stored from wreg
  1967  0495  00F2               	movwf	LCD_Command@cmnd
  1968  0496                     l917:
  1969                           
  1970                           ;./lcd4bit.h: 9: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 10: {;./lcd4bit.h: 1
      +                          1:     RC0 = 0;
  1971  0496  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0497  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0498  1007               	bcf	7,0	;volatile
  1974  0499                     l919:
  1975                           
  1976                           ;./lcd4bit.h: 12:     PORTB = cmnd;
  1977  0499  0872               	movf	LCD_Command@cmnd,w
  1978  049A  0086               	movwf	6	;volatile
  1979  049B                     l921:
  1980                           
  1981                           ;./lcd4bit.h: 13:     RC1 = 1;
  1982  049B  1487               	bsf	7,1	;volatile
  1983                           
  1984                           ;./lcd4bit.h: 14:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1985  049C  3041               	movlw	65
  1986  049D  00F1               	movwf	??_LCD_Command+1
  1987  049E  30EE               	movlw	238
  1988  049F  00F0               	movwf	??_LCD_Command
  1989  04A0                     u867:
  1990  04A0  0BF0               	decfsz	??_LCD_Command,f
  1991  04A1  2CA0               	goto	u867
  1992  04A2  0BF1               	decfsz	??_LCD_Command+1,f
  1993  04A3  2CA0               	goto	u867
  1994  04A4  0000               	nop
  1995  04A5                     l923:
  1996                           
  1997                           ;./lcd4bit.h: 15:     RC1 = 0;
  1998  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  1999  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2000  04A7  1087               	bcf	7,1	;volatile
  2001                           
  2002                           ;./lcd4bit.h: 16:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2003  04A8  3041               	movlw	65
  2004  04A9  00F1               	movwf	??_LCD_Command+1
  2005  04AA  30EE               	movlw	238
  2006  04AB  00F0               	movwf	??_LCD_Command
  2007  04AC                     u877:
  2008  04AC  0BF0               	decfsz	??_LCD_Command,f
  2009  04AD  2CAC               	goto	u877
  2010  04AE  0BF1               	decfsz	??_LCD_Command+1,f
  2011  04AF  2CAC               	goto	u877
  2012  04B0  0000               	nop
  2013  04B1                     l925:
  2014                           
  2015                           ;./lcd4bit.h: 17:     PORTB = (cmnd<<4);
  2016  04B1  0872               	movf	LCD_Command@cmnd,w
  2017  04B2  00F0               	movwf	??_LCD_Command
  2018  04B3  3003               	movlw	3
  2019  04B4                     u405:
  2020  04B4  1003               	clrc
  2021  04B5  0DF0               	rlf	??_LCD_Command,f
  2022  04B6  3EFF               	addlw	-1
  2023  04B7  1D03               	skipz
  2024  04B8  2CB4               	goto	u405
  2025  04B9  1003               	clrc
  2026  04BA  0D70               	rlf	??_LCD_Command,w
  2027  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2028  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2029  04BD  0086               	movwf	6	;volatile
  2030  04BE                     l927:
  2031                           
  2032                           ;./lcd4bit.h: 18:     RC1 = 1;
  2033  04BE  1487               	bsf	7,1	;volatile
  2034  04BF                     l929:
  2035                           
  2036                           ;./lcd4bit.h: 19:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2037  04BF  3041               	movlw	65
  2038  04C0  00F1               	movwf	??_LCD_Command+1
  2039  04C1  30EE               	movlw	238
  2040  04C2  00F0               	movwf	??_LCD_Command
  2041  04C3                     u887:
  2042  04C3  0BF0               	decfsz	??_LCD_Command,f
  2043  04C4  2CC3               	goto	u887
  2044  04C5  0BF1               	decfsz	??_LCD_Command+1,f
  2045  04C6  2CC3               	goto	u887
  2046  04C7  0000               	nop
  2047  04C8                     l931:
  2048                           
  2049                           ;./lcd4bit.h: 20:     RC1 = 0;
  2050  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2051  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2052  04CA  1087               	bcf	7,1	;volatile
  2053  04CB                     l933:
  2054                           
  2055                           ;./lcd4bit.h: 21:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2056  04CB  3041               	movlw	65
  2057  04CC  00F1               	movwf	??_LCD_Command+1
  2058  04CD  30EE               	movlw	238
  2059  04CE  00F0               	movwf	??_LCD_Command
  2060  04CF                     u897:
  2061  04CF  0BF0               	decfsz	??_LCD_Command,f
  2062  04D0  2CCF               	goto	u897
  2063  04D1  0BF1               	decfsz	??_LCD_Command+1,f
  2064  04D2  2CCF               	goto	u897
  2065  04D3  0000               	nop
  2066  04D4                     l41:
  2067  04D4  0008               	return
  2068  04D5                     __end_of_LCD_Command:
  2069                           
  2070                           	psect	text12
  2071  059F                     __ptext12:	
  2072 ;; *************** function _ADC_Init *****************
  2073 ;; Defined at:
  2074 ;;		line 54 in file "main.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0
  2090 ;;      Temps:          2       0       0       0       0
  2091 ;;      Totals:         2       0       0       0       0
  2092 ;;Total ram usage:        2 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _ADC_Init
  2103  059F                     _ADC_Init:
  2104  059F                     l1103:	
  2105                           ;incstack = 0
  2106                           ; Regs used in _ADC_Init: [wreg]
  2107                           
  2108                           
  2109                           ;main.c: 56:     ADCON0 = 0x85;
  2110  059F  3085               	movlw	133
  2111  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2112  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2113  05A2  009F               	movwf	31	;volatile
  2114                           
  2115                           ;main.c: 57:     ADCON1 = 0xC0;
  2116  05A3  30C0               	movlw	192
  2117  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  2118  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  2119  05A6  009F               	movwf	31	;volatile
  2120                           
  2121                           ;main.c: 58:     AV[0]= ((ADRESH<<8)+ADRESL);
  2122  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2123  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2124  05A9  081E               	movf	30,w	;volatile
  2125  05AA  00C4               	movwf	_AV+1
  2126  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  2127  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  2128  05AD  081E               	movf	30,w	;volatile
  2129  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2130  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2131  05B0  00C3               	movwf	_AV
  2132                           
  2133                           ;main.c: 60:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2134  05B1  3041               	movlw	65
  2135  05B2  00F1               	movwf	??_ADC_Init+1
  2136  05B3  30EE               	movlw	238
  2137  05B4  00F0               	movwf	??_ADC_Init
  2138  05B5                     u907:
  2139  05B5  0BF0               	decfsz	??_ADC_Init,f
  2140  05B6  2DB5               	goto	u907
  2141  05B7  0BF1               	decfsz	??_ADC_Init+1,f
  2142  05B8  2DB5               	goto	u907
  2143  05B9  0000               	nop
  2144                           
  2145                           ;main.c: 61:     ADCON0 = 0x8D;
  2146  05BA  308D               	movlw	141
  2147  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2148  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2149  05BD  009F               	movwf	31	;volatile
  2150                           
  2151                           ;main.c: 62:     ADCON1 = 0xC0;
  2152  05BE  30C0               	movlw	192
  2153  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2154  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2155  05C1  009F               	movwf	31	;volatile
  2156                           
  2157                           ;main.c: 63:     AV[1]= ((ADRESH<<8)+ADRESL);
  2158  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2159  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2160  05C4  081E               	movf	30,w	;volatile
  2161  05C5  00C6               	movwf	_AV+3
  2162  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  2163  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  2164  05C8  081E               	movf	30,w	;volatile
  2165  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2166  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2167  05CB  00C5               	movwf	_AV+2
  2168                           
  2169                           ;main.c: 65:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2170  05CC  3041               	movlw	65
  2171  05CD  00F1               	movwf	??_ADC_Init+1
  2172  05CE  30EE               	movlw	238
  2173  05CF  00F0               	movwf	??_ADC_Init
  2174  05D0                     u917:
  2175  05D0  0BF0               	decfsz	??_ADC_Init,f
  2176  05D1  2DD0               	goto	u917
  2177  05D2  0BF1               	decfsz	??_ADC_Init+1,f
  2178  05D3  2DD0               	goto	u917
  2179  05D4  0000               	nop
  2180                           
  2181                           ;main.c: 66:     ADCON0 = 0x95;
  2182  05D5  3095               	movlw	149
  2183  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2184  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2185  05D8  009F               	movwf	31	;volatile
  2186                           
  2187                           ;main.c: 67:     ADCON1 = 0xC0;
  2188  05D9  30C0               	movlw	192
  2189  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  2190  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  2191  05DC  009F               	movwf	31	;volatile
  2192                           
  2193                           ;main.c: 68:     AV[2]= ((ADRESH<<8)+ADRESL);
  2194  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2195  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2196  05DF  081E               	movf	30,w	;volatile
  2197  05E0  00C8               	movwf	_AV+5
  2198  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  2199  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  2200  05E3  081E               	movf	30,w	;volatile
  2201  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2202  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2203  05E6  00C7               	movwf	_AV+4
  2204                           
  2205                           ;main.c: 70:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2206  05E7  3041               	movlw	65
  2207  05E8  00F1               	movwf	??_ADC_Init+1
  2208  05E9  30EE               	movlw	238
  2209  05EA  00F0               	movwf	??_ADC_Init
  2210  05EB                     u927:
  2211  05EB  0BF0               	decfsz	??_ADC_Init,f
  2212  05EC  2DEB               	goto	u927
  2213  05ED  0BF1               	decfsz	??_ADC_Init+1,f
  2214  05EE  2DEB               	goto	u927
  2215  05EF  0000               	nop
  2216                           
  2217                           ;main.c: 71:     ADCON0 = 0x9D;
  2218  05F0  309D               	movlw	157
  2219  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2220  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2221  05F3  009F               	movwf	31	;volatile
  2222                           
  2223                           ;main.c: 72:     ADCON1 = 0xC0;
  2224  05F4  30C0               	movlw	192
  2225  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  2226  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  2227  05F7  009F               	movwf	31	;volatile
  2228                           
  2229                           ;main.c: 73:     AV[3]= ((ADRESH<<8)+ADRESL);
  2230  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  2231  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  2232  05FA  081E               	movf	30,w	;volatile
  2233  05FB  00CA               	movwf	_AV+7
  2234  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  2235  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  2236  05FE  081E               	movf	30,w	;volatile
  2237  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0601  00C9               	movwf	_AV+6
  2240  0602                     l91:
  2241  0602  0008               	return
  2242  0603                     __end_of_ADC_Init:
  2243  007E                     btemp	set	126	;btemp
  2244  007E                     wtemp0	set	126
  2245                           
  2246                           	psect	idloc
  2247                           
  2248                           ;Config register IDLOC0 @ 0x2000
  2249                           ;	unspecified, using default values
  2250  2000                     	org	8192
  2251  2000  3FFF               	dw	16383
  2252                           
  2253                           ;Config register IDLOC1 @ 0x2001
  2254                           ;	unspecified, using default values
  2255  2001                     	org	8193
  2256  2001  3FFF               	dw	16383
  2257                           
  2258                           ;Config register IDLOC2 @ 0x2002
  2259                           ;	unspecified, using default values
  2260  2002                     	org	8194
  2261  2002  3FFF               	dw	16383
  2262                           
  2263                           ;Config register IDLOC3 @ 0x2003
  2264                           ;	unspecified, using default values
  2265  2003                     	org	8195
  2266  2003  3FFF               	dw	16383
  2267                           
  2268                           	psect	config
  2269                           
  2270                           ;Config register CONFIG @ 0x2007
  2271                           ;	Oscillator Selection bits
  2272                           ;	FOSC = HS, HS oscillator
  2273                           ;	Watchdog Timer Enable bit
  2274                           ;	WDTE = OFF, WDT disabled
  2275                           ;	Power-up Timer Enable bit
  2276                           ;	PWRTE = OFF, PWRT disabled
  2277                           ;	Brown-out Reset Enable bit
  2278                           ;	BOREN = ON, BOR enabled
  2279                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2280                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2281                           ;	Data EEPROM Memory Code Protection bit
  2282                           ;	CPD = OFF, Data EEPROM code protection off
  2283                           ;	Flash Program Memory Write Enable bits
  2284                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2285                           ;	In-Circuit Debugger Mode bit
  2286                           ;	DEBUG = 0x1, unprogrammed default
  2287                           ;	Flash Program Memory Code Protection bit
  2288                           ;	CP = OFF, Code protection off
  2289  2007                     	org	8199
  2290  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2735
                                             30 BANK0      5     5      0
                           _ADC_Init
                        _LCD_Command
                           _LCD_init
                            _LCD_num
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_num                                             20    16      4    2481
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Command
   _LCD_init
     _LCD_Command
   _LCD_num
     _LCD_Char
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
     ___lwmod
     ___wmul
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 04 14:57:36 2022

           ?_LCD_Command 0070                       l41 04D4                       l50 07EF  
                     l44 0514                       l62 03F5                       l47 045A  
                     l64 03F9                       l65 03FA                       l81 0619  
                     l91 0602                       l59 0407                       _AV 0043  
                     _tx 03F1      ___wmul@multiplicand 0072                      l242 069D  
                    l252 0725                      l191 059E                      l177 0414  
                    l179 042C                      l449 0558                      l459 0494  
                    ?_tx 0070                      l921 049B                      l931 04C8  
                    l923 04A5                      l933 04CB                      l925 04B1  
                    l917 0496                      l941 04E5                      l927 04BE  
                    l919 0499                      l951 050B                      l943 04F1  
                    l935 04D6                      l929 04BF                      l945 04FE  
                    l937 04D9                      l961 0422                      l953 0408  
                    l947 04FF                      l939 04DB                      l971 0565  
                    l963 0428                      l955 040A                      l949 0508  
                    l981 0689                      l973 057C                      l957 040E  
                    l991 06B0                      l983 068C                      l975 0585  
                    l967 0559                      l959 041B                      l993 06B8  
                    l985 0690                      l977 0596                      l969 0561  
                    l995 06C0                      l987 06A1                      l997 06C3  
                    l989 06AC                      l999 06D0                      _RC0 0038  
                    _RC1 0039                      u500 0596                      u420 040E  
                    u405 04B4                      u501 0595                      u421 040D  
                    u510 0690                      u415 04F4                      u511 068F  
                    u600 0712                      u520 06A1                      u601 0711  
                    u521 06A0                      u530 06C0                      u610 051D  
                    u450 0428                      u531 06BF                      u611 051C  
                    u451 0427                      u435 0415                      u460 0565  
                    u700 0473                      u461 0564                      u701 0472  
                    u445 041C                      u550 06D4                      u630 052F  
                    u710 047D                      u551 06D3                      u471 056E  
                    u631 052E                      u711 047C                      u472 0575  
                    u545 06C5                      u473 057C                      u625 0521  
                    u570 06EF                      u650 0540                      u730 0490  
                    u571 06EE                      u651 053F                      u731 048F  
                    u715 0479                      u740 03F9                      u565 06D6  
                    u485 057E                      u645 0530                      u725 0484  
                    u741 03F8                      u590 070D                      u670 0554  
                    u591 070C                      u575 06EB                      u495 0586  
                    u671 0553                      u655 053C                      u807 067E  
                    u680 0461                      u760 061D                      u817 04E0  
                    u585 06FF                      u665 0548                      u681 0460  
                    u761 061C                      u770 0670                      u907 05B5  
                    u827 04EC                      u771 066F                      u917 05D0  
                    u837 0503                      u927 05EB                      u847 050F  
                    u695 0465                      u775 066C                      u857 0455  
                    u867 04A0                      u787 0623                      u877 04AC  
                    u797 0654                      u887 04C3                      u897 04CF  
                    _avv 004B                      fsr0 0004                      indf 0000  
                    tx@a 0070                     ??_tx 0072          __end_of_LCD_num 07F0  
                   l1001 06D4                     l1011 0707                     l1003 06DD  
                   l1005 06EF                     l1013 070D                     l1021 0515  
                   l1101 03F1                     l1103 059F                     l1015 0712  
                   l1007 06FD                     l1031 052B                     l1023 0517  
                   l1017 071D                     l1009 06FE                     l1041 054E  
                   l1033 052F                     l1025 051D                     l1121 0616  
                   l1113 0603                     l1035 0540                     l1027 0520  
                   l1043 0554                     l1051 0464                     l1131 062C  
                   l1123 061D                     l1115 0607                     l1037 0546  
                   l1029 0527                     l1061 0483                     l1053 046B  
                   l1141 0670                     l1133 0644                     l1125 0628  
                   l1117 060C                     l1071 0451                     l1039 0547  
                   l1063 048A                     l1055 046F                     l1047 045B  
                   l1143 0676                     l1135 064C                     l1119 0611  
                   l1057 0473                     l1049 0461                     l1065 0490  
                   l1081 0780                     l1073 0726                     l1137 065B  
                   l1059 047D                     l1091 07BF                     l1083 0797  
                   l1075 0726                     l1139 0663                     l1069 042D  
                   l1093 07C8                     l1085 079B                     l1077 075A  
                   l1095 07D1                     l1087 07B2                     l1079 076D  
                   l1089 07B9                     l1099 03FB                     _RCIF 0065  
                   _TXIF 0064                     _main 0603                     btemp 007E  
       __end_of_ADC_Init 0603                     start 0000         __end_of_LCD_Char 0515  
           LCD_Char@data 0072         __end_of_LCD_init 045B          __end_of___aldiv 0726  
                  ?_main 0070          __end_of___lwdiv 0559          __end_of___lwmod 0495  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TRISC 0087  
                  _TXREG 0019                    _TXSTA 0098      ___lmul@multiplicand 0074  
                  main@i 0041          __end_of_ser_int 0408                    status 0003  
                  wtemp0 007E          __initialization 07F0             __end_of_main 0689  
                 ??_main 003E           LCD_num@result1 003A                ??_LCD_num 007E  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   ___lmul 0559                ??___aldiv 007D  
                 ___wmul 0408                ??___lwdiv 0074                ??___lwmod 0074  
   __size_of_LCD_Command 0040                ?_ADC_Init 0070                ??_ser_int 0070  
              ?_LCD_Char 0070  __end_of__initialization 07FC                ?_LCD_init 0070  
         __pcstackCOMMON 0070               __end_of_tx 03FB               ??_ADC_Init 0070  
             __pbssBANK0 0043               ??_LCD_Char 0070               ??_LCD_init 0073  
             __pmaintext 0603                  ?___lmul 0070                  ?___wmul 0070  
         ___lmul@product 0079                  _LCD_num 0726                  ___aldiv 0689  
        __size_of___lmul 0046          __size_of___wmul 0025                  ___lwdiv 0515  
                ___lwmod 045B                  __ptext1 03F1                  __ptext2 03FB  
                __ptext3 0726                  __ptext4 0408                  __ptext5 045B  
                __ptext6 0515                  __ptext7 0559                  __ptext8 0689  
                __ptext9 04D5         ___aldiv@dividend 0024                  _ser_int 03FB  
   end_of_initialization 07FC         ___aldiv@quotient 002A        __size_of_ADC_Init 0064  
      __size_of_LCD_Char 0040        __size_of_LCD_init 002E            ??_LCD_Command 0070  
         __end_of___lmul 059F           __end_of___wmul 042D      start_initialization 07F0  
          LCD_num@digit1 0032            LCD_num@digit2 0034            LCD_num@digit3 0036  
             LCD_num@val 002E            LCD_num@result 0038                 ??___lmul 0078  
               ??___wmul 0074         LCD_num@remainder 003C      __end_of_LCD_Command 04D5  
               ?_LCD_num 002E                ___latbits 0002            __pcstackBANK0 0020  
       ___lwdiv@dividend 0072                 ?___aldiv 0020                 ?___lwdiv 0070  
               ?___lwmod 0070                 _ADC_Init 059F                 ?_ser_int 0070  
       ___lwdiv@quotient 0075              __size_of_tx 000A          ___aldiv@divisor 0020  
               _LCD_Char 04D5          ___aldiv@counter 0028           ___wmul@product 0074  
               _LCD_init 042D                 _GO_nDONE 00FA              _LCD_Command 0495  
      ___wmul@multiplier 0070         __size_of_LCD_num 00CA        ___lmul@multiplier 0070  
       __size_of___aldiv 009D         __size_of___lwdiv 0044         __size_of___lwmod 003A  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 042D  
               __ptext11 0495                 __ptext12 059F         __size_of_ser_int 000D  
          __size_of_main 0086          LCD_Command@cmnd 0072         ___lwmod@dividend 0072  
        ___lwmod@divisor 0070          ___lwmod@counter 0075             ___aldiv@sign 0029  
