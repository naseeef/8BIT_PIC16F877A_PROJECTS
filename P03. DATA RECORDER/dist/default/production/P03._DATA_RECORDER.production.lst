

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 04 16:53:36 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  001E                     _ADRESH	set	30
   182  001F                     _ADCON0	set	31
   183  001A                     _RCREG	set	26
   184  0019                     _TXREG	set	25
   185  0018                     _RCSTA	set	24
   186  0006                     _PORTB	set	6
   187  00FA                     _GO_nDONE	set	250
   188  0065                     _RCIF	set	101
   189  0064                     _TXIF	set	100
   190  0039                     _RC1	set	57
   191  0038                     _RC0	set	56
   192  009E                     _ADRESL	set	158
   193  009F                     _ADCON1	set	159
   194  0087                     _TRISC	set	135
   195  0086                     _TRISB	set	134
   196  0099                     _SPBRG	set	153
   197  0098                     _TXSTA	set	152
   198                           
   199                           	psect	strings
   200  0003                     __pstrings:
   201  0003                     stringtab:
   202  0003                     __stringtab:
   203  0003                     stringcode:	
   204                           ;	String table - string pointers are 1 byte each
   205                           
   206  0003                     stringdir:
   207  0003  3000               	movlw	high stringdir
   208  0004  008A               	movwf	10
   209  0005  0804               	movf	4,w
   210  0006  0A84               	incf	4,f
   211  0007  0782               	addwf	2,f
   212  0008                     __stringbase:
   213  0008  3400               	retlw	0
   214  0009                     __end_of__stringtab:
   215  0009                     STR_1:
   216  0009  3420               	retlw	32	;' '
   217  000A  3400               	retlw	0
   218                           
   219                           	psect	cinit
   220  07EF                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07EF                     __initialization:
   224                           
   225                           ; Clear objects allocated to BANK0
   226  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   227  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   228  07F1  01C3               	clrf	__pbssBANK0& (0+127)
   229  07F2  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   230  07F3  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   231  07F4  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   232  07F5  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   233  07F6  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   234  07F7  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   235  07F8  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   236  07F9  01CB               	clrf	(__pbssBANK0+8)& (0+127)
   237  07FA  01CC               	clrf	(__pbssBANK0+9)& (0+127)
   238  07FB  01CD               	clrf	(__pbssBANK0+10)& (0+127)
   239  07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  07FC                     __end_of__initialization:
   243  07FC  0183               	clrf	3
   244  07FD  120A  118A  2E84   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssBANK0
   247  0043                     __pbssBANK0:
   248  0043                     _AV:
   249  0043                     	ds	8
   250  004B                     _avv:
   251  004B                     	ds	3
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:
   255  0070                     ?_intdigits_chardigits:
   256  0070                     ?_ADC_Init:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ??_ADC_Init:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_LCD_Command:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ??_LCD_Command:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_LCD_Char:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ??_LCD_Char:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_LCD_init:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_ser_int:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ??_ser_int:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_tx:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_tx:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_main:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?___lwdiv:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?___lwmod:	
   296                           ; 2 bytes @ 0x0
   297                           
   298  0070                     ?___lmul:	
   299                           ; 2 bytes @ 0x0
   300                           
   301  0070                     tx@a:	
   302                           ; 4 bytes @ 0x0
   303                           
   304  0070                     intdigits_chardigits@a:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ___lwdiv@divisor:	
   308                           ; 2 bytes @ 0x0
   309                           
   310  0070                     ___lwmod@divisor:	
   311                           ; 2 bytes @ 0x0
   312                           
   313  0070                     ___lmul@multiplier:	
   314                           ; 2 bytes @ 0x0
   315                           
   316                           
   317                           ; 4 bytes @ 0x0
   318  0070                     	ds	2
   319  0072                     LCD_Command@cmnd:
   320  0072                     LCD_Char@data:	
   321                           ; 1 bytes @ 0x2
   322                           
   323  0072                     intdigits_chardigits@b:	
   324                           ; 1 bytes @ 0x2
   325                           
   326  0072                     ___lwdiv@dividend:	
   327                           ; 2 bytes @ 0x2
   328                           
   329  0072                     ___lwmod@dividend:	
   330                           ; 2 bytes @ 0x2
   331                           
   332                           
   333                           ; 2 bytes @ 0x2
   334  0072                     	ds	1
   335  0073                     ??_LCD_init:
   336                           
   337                           ; 1 bytes @ 0x3
   338  0073                     	ds	1
   339  0074                     ??___lwdiv:
   340  0074                     ??___lwmod:	
   341                           ; 1 bytes @ 0x4
   342                           
   343  0074                     intdigits_chardigits@c:	
   344                           ; 1 bytes @ 0x4
   345                           
   346  0074                     ___lmul@multiplicand:	
   347                           ; 2 bytes @ 0x4
   348                           
   349                           
   350                           ; 4 bytes @ 0x4
   351  0074                     	ds	1
   352  0075                     ___lwmod@counter:
   353  0075                     ___lwdiv@quotient:	
   354                           ; 1 bytes @ 0x5
   355                           
   356                           
   357                           ; 2 bytes @ 0x5
   358  0075                     	ds	1
   359  0076                     ??_intdigits_chardigits:
   360                           
   361                           ; 1 bytes @ 0x6
   362  0076                     	ds	1
   363  0077                     ___lwdiv@counter:
   364                           
   365                           ; 1 bytes @ 0x7
   366  0077                     	ds	1
   367  0078                     ??___lmul:
   368                           
   369                           ; 1 bytes @ 0x8
   370  0078                     	ds	1
   371  0079                     ___lmul@product:
   372                           
   373                           ; 4 bytes @ 0x9
   374  0079                     	ds	4
   375  007D                     ??___aldiv:
   376                           
   377                           ; 1 bytes @ 0xD
   378  007D                     	ds	1
   379  007E                     ??_LCD_num:
   380                           
   381                           	psect	cstackBANK0
   382  0020                     __pcstackBANK0:	
   383                           ; 1 bytes @ 0xE
   384                           
   385  0020                     ?___aldiv:
   386  0020                     ___aldiv@divisor:	
   387                           ; 4 bytes @ 0x0
   388                           
   389                           
   390                           ; 4 bytes @ 0x0
   391  0020                     	ds	4
   392  0024                     ___aldiv@dividend:
   393                           
   394                           ; 4 bytes @ 0x4
   395  0024                     	ds	4
   396  0028                     ___aldiv@counter:
   397                           
   398                           ; 1 bytes @ 0x8
   399  0028                     	ds	1
   400  0029                     ___aldiv@sign:
   401                           
   402                           ; 1 bytes @ 0x9
   403  0029                     	ds	1
   404  002A                     ___aldiv@quotient:
   405                           
   406                           ; 4 bytes @ 0xA
   407  002A                     	ds	4
   408  002E                     ?_LCD_num:
   409  002E                     LCD_num@val:	
   410                           ; 1 bytes @ 0xE
   411                           
   412                           
   413                           ; 4 bytes @ 0xE
   414  002E                     	ds	4
   415  0032                     LCD_num@digit1:
   416                           
   417                           ; 2 bytes @ 0x12
   418  0032                     	ds	2
   419  0034                     LCD_num@digit2:
   420                           
   421                           ; 2 bytes @ 0x14
   422  0034                     	ds	2
   423  0036                     LCD_num@digit3:
   424                           
   425                           ; 2 bytes @ 0x16
   426  0036                     	ds	2
   427  0038                     LCD_num@result:
   428                           
   429                           ; 2 bytes @ 0x18
   430  0038                     	ds	2
   431  003A                     LCD_num@result1:
   432                           
   433                           ; 2 bytes @ 0x1A
   434  003A                     	ds	2
   435  003C                     LCD_num@remainder:
   436                           
   437                           ; 2 bytes @ 0x1C
   438  003C                     	ds	2
   439  003E                     ??_main:
   440                           
   441                           ; 1 bytes @ 0x1E
   442  003E                     	ds	3
   443  0041                     main@i:
   444                           
   445                           ; 1 bytes @ 0x21
   446  0041                     	ds	1
   447  0042                     main@j:
   448                           
   449                           ; 1 bytes @ 0x22
   450  0042                     	ds	1
   451                           
   452                           	psect	maintext
   453  0684                     __pmaintext:	
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 28 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  j               1   34[BANK0 ] unsigned char 
   464 ;;  i               1   33[BANK0 ] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : B00/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         0       2       0       0       0
   476 ;;      Temps:          0       3       0       0       0
   477 ;;      Totals:         0       5       0       0       0
   478 ;;Total ram usage:        5 bytes
   479 ;; Hardware stack levels required when called: 2
   480 ;; This function calls:
   481 ;;		_ADC_Init
   482 ;;		_LCD_Char
   483 ;;		_LCD_Command
   484 ;;		_LCD_init
   485 ;;		_LCD_num
   486 ;;		_ser_int
   487 ;;		_tx
   488 ;; This function is called by:
   489 ;;		Startup code after reset
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           
   494                           ;psect for function _main
   495  0684                     _main:
   496  0684                     l1115:	
   497                           ;incstack = 0
   498                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   499                           
   500                           
   501                           ;main.c: 30:     TRISB =0x00;
   502  0684  1683               	bsf	3,5	;RP0=1, select bank1
   503  0685  1303               	bcf	3,6	;RP1=0, select bank1
   504  0686  0186               	clrf	6	;volatile
   505                           
   506                           ;main.c: 31:     TRISC =0x00;
   507  0687  0187               	clrf	7	;volatile
   508  0688                     l1117:
   509                           
   510                           ;main.c: 33:     LCD_init();
   511  0688  120A  118A  2411  120A  118A  	fcall	_LCD_init
   512  068D                     l1119:
   513                           
   514                           ;main.c: 34:     ser_int();
   515  068D  120A  118A  23F5  120A  118A  	fcall	_ser_int
   516  0692                     l1121:
   517                           
   518                           ;main.c: 36:     {;main.c: 37:         ADC_Init ();
   519  0692  120A  118A  2583  120A  118A  	fcall	_ADC_Init
   520  0697                     l1123:
   521                           
   522                           ;main.c: 38:         GO_nDONE=1;
   523  0697  1283               	bcf	3,5	;RP0=0, select bank0
   524  0698  1303               	bcf	3,6	;RP1=0, select bank0
   525  0699  151F               	bsf	31,2	;volatile
   526  069A                     l86:	
   527                           ;main.c: 39:         while(GO_nDONE==1);
   528                           
   529  069A  191F               	btfsc	31,2	;volatile
   530  069B  2E9D               	goto	u711
   531  069C  2E9E               	goto	u710
   532  069D                     u711:
   533  069D  2E9A               	goto	l86
   534  069E                     u710:
   535  069E                     l1125:
   536                           
   537                           ;main.c: 40:         _delay((unsigned long)((10)*(20000000/4000.0)));
   538  069E  3041               	movlw	65
   539  069F  1283               	bcf	3,5	;RP0=0, select bank0
   540  06A0  1303               	bcf	3,6	;RP1=0, select bank0
   541  06A1  00BF               	movwf	??_main+1
   542  06A2  30ED               	movlw	237
   543  06A3  00BE               	movwf	??_main
   544  06A4                     u767:
   545  06A4  0BBE               	decfsz	??_main,f
   546  06A5  2EA4               	goto	u767
   547  06A6  0BBF               	decfsz	??_main+1,f
   548  06A7  2EA4               	goto	u767
   549  06A8  2EA9               	nop2
   550  06A9                     l1127:
   551                           
   552                           ;main.c: 42:         for (unsigned char i=0;i<4;i++)
   553  06A9  1283               	bcf	3,5	;RP0=0, select bank0
   554  06AA  1303               	bcf	3,6	;RP1=0, select bank0
   555  06AB  01C1               	clrf	main@i
   556  06AC                     l1133:
   557                           
   558                           ;main.c: 43:         {;main.c: 44:             LCD_num(AV[i]);
   559  06AC  0841               	movf	main@i,w
   560  06AD  00BE               	movwf	??_main
   561  06AE  073E               	addwf	??_main,w
   562  06AF  3E43               	addlw	(low (_AV| 0))& (0+255)
   563  06B0  0084               	movwf	4
   564  06B1  1383               	bcf	3,7	;select IRP bank0
   565  06B2  0800               	movf	0,w
   566  06B3  00BF               	movwf	??_main+1
   567  06B4  0A84               	incf	4,f
   568  06B5  0800               	movf	0,w
   569  06B6  00C0               	movwf	??_main+2
   570  06B7  083F               	movf	??_main+1,w
   571  06B8  00AE               	movwf	LCD_num@val
   572  06B9  0840               	movf	??_main+2,w
   573  06BA  00AF               	movwf	LCD_num@val+1
   574  06BB  01B0               	clrf	LCD_num@val+2
   575  06BC  01B1               	clrf	LCD_num@val+3
   576  06BD  120A  118A  2730  120A  118A  	fcall	_LCD_num
   577  06C2                     l1135:
   578                           
   579                           ;main.c: 45:             LCD_Char(" ");
   580  06C2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   581  06C3  120A  118A  24B9  120A  118A  	fcall	_LCD_Char
   582  06C8                     l1137:
   583                           
   584                           ;main.c: 46:             for (unsigned char j=0;j<3;j++)
   585  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   586  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   587  06CA  01C2               	clrf	main@j
   588  06CB                     l1143:
   589                           
   590                           ;main.c: 47:             {;main.c: 48:                 tx((avv[j]+0x30));
   591  06CB  0842               	movf	main@j,w
   592  06CC  3E4B               	addlw	(low (_avv| 0))& (0+255)
   593  06CD  0084               	movwf	4
   594  06CE  1383               	bcf	3,7	;select IRP bank0
   595  06CF  0800               	movf	0,w
   596  06D0  3E30               	addlw	48
   597  06D1  120A  118A  23EA  120A  118A  	fcall	_tx
   598  06D6                     l1145:
   599                           
   600                           ;main.c: 49:                 if (j == 0)
   601  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   602  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   603  06D8  0842               	movf	main@j,w
   604  06D9  1D03               	btfss	3,2
   605  06DA  2EDC               	goto	u721
   606  06DB  2EDD               	goto	u720
   607  06DC                     u721:
   608  06DC  2EE4               	goto	l1149
   609  06DD                     u720:
   610  06DD                     l1147:
   611                           
   612                           ;main.c: 50:                 {;main.c: 51:                     tx('.');
   613  06DD  302E               	movlw	46
   614  06DE  120A  118A  23EA  120A  118A  	fcall	_tx
   615                           
   616                           ;main.c: 52:                 }
   617  06E3  2EF0               	goto	l1153
   618  06E4                     l1149:
   619  06E4  3002               	movlw	2
   620  06E5  0642               	xorwf	main@j,w
   621  06E6  1D03               	btfss	3,2
   622  06E7  2EE9               	goto	u731
   623  06E8  2EEA               	goto	u730
   624  06E9                     u731:
   625  06E9  2EF0               	goto	l1153
   626  06EA                     u730:
   627  06EA                     l1151:
   628                           
   629                           ;main.c: 54:                 {;main.c: 55:                     tx(',');
   630  06EA  302C               	movlw	44
   631  06EB  120A  118A  23EA  120A  118A  	fcall	_tx
   632  06F0                     l1153:
   633                           
   634                           ;main.c: 57:             }
   635  06F0  3001               	movlw	1
   636  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   637  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   638  06F3  00BE               	movwf	??_main
   639  06F4  083E               	movf	??_main,w
   640  06F5  07C2               	addwf	main@j,f
   641  06F6                     l1155:
   642  06F6  3003               	movlw	3
   643  06F7  0242               	subwf	main@j,w
   644  06F8  1C03               	skipc
   645  06F9  2EFB               	goto	u741
   646  06FA  2EFC               	goto	u740
   647  06FB                     u741:
   648  06FB  2ECB               	goto	l1143
   649  06FC                     u740:
   650  06FC                     l1157:
   651                           
   652                           ;main.c: 58:             _delay((unsigned long)((500)*(20000000/4000.0)));
   653  06FC  300D               	movlw	13
   654  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   655  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   656  06FF  00C0               	movwf	??_main+2
   657  0700  30AF               	movlw	175
   658  0701  00BF               	movwf	??_main+1
   659  0702  30B5               	movlw	181
   660  0703  00BE               	movwf	??_main
   661  0704                     u777:
   662  0704  0BBE               	decfsz	??_main,f
   663  0705  2F04               	goto	u777
   664  0706  0BBF               	decfsz	??_main+1,f
   665  0707  2F04               	goto	u777
   666  0708  0BC0               	decfsz	??_main+2,f
   667  0709  2F04               	goto	u777
   668  070A  2F0B               	nop2
   669  070B                     l1159:
   670                           
   671                           ;main.c: 59:         }
   672  070B  3001               	movlw	1
   673  070C  1283               	bcf	3,5	;RP0=0, select bank0
   674  070D  1303               	bcf	3,6	;RP1=0, select bank0
   675  070E  00BE               	movwf	??_main
   676  070F  083E               	movf	??_main,w
   677  0710  07C1               	addwf	main@i,f
   678  0711                     l1161:
   679  0711  3004               	movlw	4
   680  0712  0241               	subwf	main@i,w
   681  0713  1C03               	skipc
   682  0714  2F16               	goto	u751
   683  0715  2F17               	goto	u750
   684  0716                     u751:
   685  0716  2EAC               	goto	l1133
   686  0717                     u750:
   687  0717                     l1163:
   688                           
   689                           ;main.c: 60:         LCD_Command(0x01);
   690  0717  3001               	movlw	1
   691  0718  120A  118A  2479  120A  118A  	fcall	_LCD_Command
   692  071D                     l1165:
   693                           
   694                           ;main.c: 61:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   695  071D  301A               	movlw	26
   696  071E  1283               	bcf	3,5	;RP0=0, select bank0
   697  071F  1303               	bcf	3,6	;RP1=0, select bank0
   698  0720  00C0               	movwf	??_main+2
   699  0721  305E               	movlw	94
   700  0722  00BF               	movwf	??_main+1
   701  0723  306D               	movlw	109
   702  0724  00BE               	movwf	??_main
   703  0725                     u787:
   704  0725  0BBE               	decfsz	??_main,f
   705  0726  2F25               	goto	u787
   706  0727  0BBF               	decfsz	??_main+1,f
   707  0728  2F25               	goto	u787
   708  0729  0BC0               	decfsz	??_main+2,f
   709  072A  2F25               	goto	u787
   710  072B  2F2C               	nop2
   711  072C  2E92               	goto	l1121
   712  072D  120A  118A  2800   	ljmp	start
   713  0730                     __end_of_main:
   714                           
   715                           	psect	text1
   716  03EA                     __ptext1:	
   717 ;; *************** function _tx *****************
   718 ;; Defined at:
   719 ;;		line 13 in file "./uart.h"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  a               1    wreg     unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  a               1    0[COMMON] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      unsigned char 
   726 ;; Registers used:
   727 ;;		wreg
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         1       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         1       0       0       0       0
   737 ;;Total ram usage:        1 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _tx
   748  03EA                     _tx:
   749                           
   750                           ;incstack = 0
   751                           ; Regs used in _tx: [wreg]
   752                           ;tx@a stored from wreg
   753  03EA  00F0               	movwf	tx@a
   754  03EB                     l1103:
   755                           
   756                           ;./uart.h: 13: unsigned char tx(unsigned char a);./uart.h: 14: {;./uart.h: 15:  TXREG=a;
   757  03EB  0870               	movf	tx@a,w
   758  03EC  1283               	bcf	3,5	;RP0=0, select bank0
   759  03ED  1303               	bcf	3,6	;RP1=0, select bank0
   760  03EE  0099               	movwf	25	;volatile
   761  03EF                     l69:	
   762                           ;./uart.h: 16:  while(!TXIF);
   763                           
   764  03EF  1E0C               	btfss	12,4	;volatile
   765  03F0  2BF2               	goto	u691
   766  03F1  2BF3               	goto	u690
   767  03F2                     u691:
   768  03F2  2BEF               	goto	l69
   769  03F3                     u690:
   770  03F3                     l71:
   771                           
   772                           ;./uart.h: 17:  TXIF = 0;
   773  03F3  120C               	bcf	12,4	;volatile
   774  03F4                     l72:
   775  03F4  0008               	return
   776  03F5                     __end_of_tx:
   777                           
   778                           	psect	text2
   779  03F5                     __ptext2:	
   780 ;; *************** function _ser_int *****************
   781 ;; Defined at:
   782 ;;		line 6 in file "./uart.h"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _ser_int
   811  03F5                     _ser_int:
   812  03F5                     l1101:	
   813                           ;incstack = 0
   814                           ; Regs used in _ser_int: [wreg]
   815                           
   816                           
   817                           ;./uart.h: 8:  TXSTA= 0x20;
   818  03F5  3020               	movlw	32
   819  03F6  1683               	bsf	3,5	;RP0=1, select bank1
   820  03F7  1303               	bcf	3,6	;RP1=0, select bank1
   821  03F8  0098               	movwf	24	;volatile
   822                           
   823                           ;./uart.h: 9:  RCSTA= 0b10010000;
   824  03F9  3090               	movlw	144
   825  03FA  1283               	bcf	3,5	;RP0=0, select bank0
   826  03FB  1303               	bcf	3,6	;RP1=0, select bank0
   827  03FC  0098               	movwf	24	;volatile
   828                           
   829                           ;./uart.h: 10:  SPBRG=31;
   830  03FD  301F               	movlw	31
   831  03FE  1683               	bsf	3,5	;RP0=1, select bank1
   832  03FF  1303               	bcf	3,6	;RP1=0, select bank1
   833  0400  0099               	movwf	25	;volatile
   834  0401                     l66:
   835  0401  0008               	return
   836  0402                     __end_of_ser_int:
   837                           
   838                           	psect	text3
   839  0730                     __ptext3:	
   840 ;; *************** function _LCD_num *****************
   841 ;; Defined at:
   842 ;;		line 50 in file "./lcd4bit.h"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  val             4   14[BANK0 ] long 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  remainder       2   28[BANK0 ] unsigned int 
   847 ;;  result1         2   26[BANK0 ] unsigned int 
   848 ;;  result          2   24[BANK0 ] unsigned int 
   849 ;;  digit3          2   22[BANK0 ] unsigned int 
   850 ;;  digit2          2   20[BANK0 ] unsigned int 
   851 ;;  digit1          2   18[BANK0 ] unsigned int 
   852 ;;  calb_val        2    0        int 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0, pclath, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       4       0       0       0
   863 ;;      Locals:         0      12       0       0       0
   864 ;;      Temps:          0       0       0       0       0
   865 ;;      Totals:         0      16       0       0       0
   866 ;;Total ram usage:       16 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 1
   869 ;; This function calls:
   870 ;;		_LCD_Char
   871 ;;		___aldiv
   872 ;;		___lmul
   873 ;;		___lwdiv
   874 ;;		___lwmod
   875 ;;		_intdigits_chardigits
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _LCD_num
   883  0730                     _LCD_num:
   884  0730                     l1077:	
   885                           ;incstack = 0
   886                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
   887                           
   888  0730                     l1079:
   889                           
   890                           ;./lcd4bit.h: 53:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 54:     result1;;./lcd4bit.h: 55:     result = ((val*100)/calb_val);
   891  0730  3000               	movlw	0
   892  0731  1283               	bcf	3,5	;RP0=0, select bank0
   893  0732  1303               	bcf	3,6	;RP1=0, select bank0
   894  0733  00A3               	movwf	___aldiv@divisor+3
   895  0734  3000               	movlw	0
   896  0735  00A2               	movwf	___aldiv@divisor+2
   897  0736  3000               	movlw	0
   898  0737  00A1               	movwf	___aldiv@divisor+1
   899  0738  30C8               	movlw	200
   900  0739  00A0               	movwf	___aldiv@divisor
   901  073A  0831               	movf	LCD_num@val+3,w
   902  073B  00F3               	movwf	___lmul@multiplier+3
   903  073C  0830               	movf	LCD_num@val+2,w
   904  073D  00F2               	movwf	___lmul@multiplier+2
   905  073E  082F               	movf	LCD_num@val+1,w
   906  073F  00F1               	movwf	___lmul@multiplier+1
   907  0740  082E               	movf	LCD_num@val,w
   908  0741  00F0               	movwf	___lmul@multiplier
   909  0742  3000               	movlw	0
   910  0743  00F7               	movwf	___lmul@multiplicand+3
   911  0744  3000               	movlw	0
   912  0745  00F6               	movwf	___lmul@multiplicand+2
   913  0746  3000               	movlw	0
   914  0747  00F5               	movwf	___lmul@multiplicand+1
   915  0748  3064               	movlw	100
   916  0749  00F4               	movwf	___lmul@multiplicand
   917  074A  120A  118A  253D  120A  118A  	fcall	___lmul
   918  074F  0873               	movf	?___lmul+3,w
   919  0750  1283               	bcf	3,5	;RP0=0, select bank0
   920  0751  1303               	bcf	3,6	;RP1=0, select bank0
   921  0752  00A7               	movwf	___aldiv@dividend+3
   922  0753  0872               	movf	?___lmul+2,w
   923  0754  00A6               	movwf	___aldiv@dividend+2
   924  0755  0871               	movf	?___lmul+1,w
   925  0756  00A5               	movwf	___aldiv@dividend+1
   926  0757  0870               	movf	?___lmul,w
   927  0758  00A4               	movwf	___aldiv@dividend
   928  0759  120A  118A  25E7  120A  118A  	fcall	___aldiv
   929  075E  1283               	bcf	3,5	;RP0=0, select bank0
   930  075F  1303               	bcf	3,6	;RP1=0, select bank0
   931  0760  0821               	movf	?___aldiv+1,w
   932  0761  00B9               	movwf	LCD_num@result+1
   933  0762  0820               	movf	?___aldiv,w
   934  0763  00B8               	movwf	LCD_num@result
   935  0764                     l1081:
   936                           
   937                           ;./lcd4bit.h: 56:     remainder = result% 10;
   938  0764  300A               	movlw	10
   939  0765  00F0               	movwf	___lwmod@divisor
   940  0766  3000               	movlw	0
   941  0767  00F1               	movwf	___lwmod@divisor+1
   942  0768  0839               	movf	LCD_num@result+1,w
   943  0769  00F3               	movwf	___lwmod@dividend+1
   944  076A  0838               	movf	LCD_num@result,w
   945  076B  00F2               	movwf	___lwmod@dividend
   946  076C  120A  118A  243F  120A  118A  	fcall	___lwmod
   947  0771  0871               	movf	?___lwmod+1,w
   948  0772  1283               	bcf	3,5	;RP0=0, select bank0
   949  0773  1303               	bcf	3,6	;RP1=0, select bank0
   950  0774  00BD               	movwf	LCD_num@remainder+1
   951  0775  0870               	movf	?___lwmod,w
   952  0776  00BC               	movwf	LCD_num@remainder
   953  0777                     l1083:
   954                           
   955                           ;./lcd4bit.h: 57:     result1 = result /10;
   956  0777  300A               	movlw	10
   957  0778  00F0               	movwf	___lwdiv@divisor
   958  0779  3000               	movlw	0
   959  077A  00F1               	movwf	___lwdiv@divisor+1
   960  077B  0839               	movf	LCD_num@result+1,w
   961  077C  00F3               	movwf	___lwdiv@dividend+1
   962  077D  0838               	movf	LCD_num@result,w
   963  077E  00F2               	movwf	___lwdiv@dividend
   964  077F  120A  118A  24F9  120A  118A  	fcall	___lwdiv
   965  0784  0871               	movf	?___lwdiv+1,w
   966  0785  1283               	bcf	3,5	;RP0=0, select bank0
   967  0786  1303               	bcf	3,6	;RP1=0, select bank0
   968  0787  00BB               	movwf	LCD_num@result1+1
   969  0788  0870               	movf	?___lwdiv,w
   970  0789  00BA               	movwf	LCD_num@result1
   971  078A                     l1085:
   972                           
   973                           ;./lcd4bit.h: 58:     digit1 = remainder;
   974  078A  083D               	movf	LCD_num@remainder+1,w
   975  078B  00B3               	movwf	LCD_num@digit1+1
   976  078C  083C               	movf	LCD_num@remainder,w
   977  078D  00B2               	movwf	LCD_num@digit1
   978                           
   979                           ;./lcd4bit.h: 59:     remainder = result1%10;
   980  078E  300A               	movlw	10
   981  078F  00F0               	movwf	___lwmod@divisor
   982  0790  3000               	movlw	0
   983  0791  00F1               	movwf	___lwmod@divisor+1
   984  0792  083B               	movf	LCD_num@result1+1,w
   985  0793  00F3               	movwf	___lwmod@dividend+1
   986  0794  083A               	movf	LCD_num@result1,w
   987  0795  00F2               	movwf	___lwmod@dividend
   988  0796  120A  118A  243F  120A  118A  	fcall	___lwmod
   989  079B  0871               	movf	?___lwmod+1,w
   990  079C  1283               	bcf	3,5	;RP0=0, select bank0
   991  079D  1303               	bcf	3,6	;RP1=0, select bank0
   992  079E  00BD               	movwf	LCD_num@remainder+1
   993  079F  0870               	movf	?___lwmod,w
   994  07A0  00BC               	movwf	LCD_num@remainder
   995  07A1                     l1087:
   996                           
   997                           ;./lcd4bit.h: 60:     digit2 = remainder;
   998  07A1  083D               	movf	LCD_num@remainder+1,w
   999  07A2  00B5               	movwf	LCD_num@digit2+1
  1000  07A3  083C               	movf	LCD_num@remainder,w
  1001  07A4  00B4               	movwf	LCD_num@digit2
  1002  07A5                     l1089:
  1003                           
  1004                           ;./lcd4bit.h: 61:     remainder = (result1/10);
  1005  07A5  300A               	movlw	10
  1006  07A6  00F0               	movwf	___lwdiv@divisor
  1007  07A7  3000               	movlw	0
  1008  07A8  00F1               	movwf	___lwdiv@divisor+1
  1009  07A9  083B               	movf	LCD_num@result1+1,w
  1010  07AA  00F3               	movwf	___lwdiv@dividend+1
  1011  07AB  083A               	movf	LCD_num@result1,w
  1012  07AC  00F2               	movwf	___lwdiv@dividend
  1013  07AD  120A  118A  24F9  120A  118A  	fcall	___lwdiv
  1014  07B2  0871               	movf	?___lwdiv+1,w
  1015  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1016  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1017  07B5  00BD               	movwf	LCD_num@remainder+1
  1018  07B6  0870               	movf	?___lwdiv,w
  1019  07B7  00BC               	movwf	LCD_num@remainder
  1020                           
  1021                           ;./lcd4bit.h: 62:     digit3=remainder;
  1022  07B8  083D               	movf	LCD_num@remainder+1,w
  1023  07B9  00B7               	movwf	LCD_num@digit3+1
  1024  07BA  083C               	movf	LCD_num@remainder,w
  1025  07BB  00B6               	movwf	LCD_num@digit3
  1026  07BC                     l1091:
  1027                           
  1028                           ;./lcd4bit.h: 63:     LCD_Char(digit3+0x30);
  1029  07BC  0836               	movf	LCD_num@digit3,w
  1030  07BD  3E30               	addlw	48
  1031  07BE  120A  118A  24B9  120A  118A  	fcall	_LCD_Char
  1032  07C3                     l1093:
  1033                           
  1034                           ;./lcd4bit.h: 64:     LCD_Char('.');
  1035  07C3  302E               	movlw	46
  1036  07C4  120A  118A  24B9  120A  118A  	fcall	_LCD_Char
  1037  07C9                     l1095:
  1038                           
  1039                           ;./lcd4bit.h: 65:     LCD_Char(digit2+0x30);
  1040  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1041  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1042  07CB  0834               	movf	LCD_num@digit2,w
  1043  07CC  3E30               	addlw	48
  1044  07CD  120A  118A  24B9  120A  118A  	fcall	_LCD_Char
  1045  07D2                     l1097:
  1046                           
  1047                           ;./lcd4bit.h: 66:     LCD_Char(digit1+0x30);
  1048  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1049  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1050  07D4  0832               	movf	LCD_num@digit1,w
  1051  07D5  3E30               	addlw	48
  1052  07D6  120A  118A  24B9  120A  118A  	fcall	_LCD_Char
  1053  07DB                     l1099:
  1054                           
  1055                           ;./lcd4bit.h: 68:     intdigits_chardigits(digit3,digit2,digit1);
  1056  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1057  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1058  07DD  0837               	movf	LCD_num@digit3+1,w
  1059  07DE  00F1               	movwf	intdigits_chardigits@a+1
  1060  07DF  0836               	movf	LCD_num@digit3,w
  1061  07E0  00F0               	movwf	intdigits_chardigits@a
  1062  07E1  0835               	movf	LCD_num@digit2+1,w
  1063  07E2  00F3               	movwf	intdigits_chardigits@b+1
  1064  07E3  0834               	movf	LCD_num@digit2,w
  1065  07E4  00F2               	movwf	intdigits_chardigits@b
  1066  07E5  0833               	movf	LCD_num@digit1+1,w
  1067  07E6  00F5               	movwf	intdigits_chardigits@c+1
  1068  07E7  0832               	movf	LCD_num@digit1,w
  1069  07E8  00F4               	movwf	intdigits_chardigits@c
  1070  07E9  120A  118A  2402  120A  118A  	fcall	_intdigits_chardigits
  1071  07EE                     l54:
  1072  07EE  0008               	return
  1073  07EF                     __end_of_LCD_num:
  1074                           
  1075                           	psect	text4
  1076  0402                     __ptext4:	
  1077 ;; *************** function _intdigits_chardigits *****************
  1078 ;; Defined at:
  1079 ;;		line 78 in file "./lcd4bit.h"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  a               2    0[COMMON] unsigned int 
  1082 ;;  b               2    2[COMMON] unsigned int 
  1083 ;;  c               2    4[COMMON] unsigned int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      unsigned char 
  1088 ;; Registers used:
  1089 ;;		wreg
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         6       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0
  1097 ;;      Temps:          1       0       0       0       0
  1098 ;;      Totals:         7       0       0       0       0
  1099 ;;Total ram usage:        7 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_LCD_num
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _intdigits_chardigits
  1110  0402                     _intdigits_chardigits:
  1111  0402                     l969:	
  1112                           ;incstack = 0
  1113                           ; Regs used in _intdigits_chardigits: [wreg]
  1114                           
  1115                           
  1116                           ;./lcd4bit.h: 78: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 79: {;./lcd4bit.h: 80:     avv[0] = (unsigned char)a;
  1117  0402  0870               	movf	intdigits_chardigits@a,w
  1118  0403  00F6               	movwf	??_intdigits_chardigits
  1119  0404  0876               	movf	??_intdigits_chardigits,w
  1120  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1121  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1122  0407  00CB               	movwf	_avv
  1123                           
  1124                           ;./lcd4bit.h: 81:     avv[1] = (unsigned char)b;
  1125  0408  0872               	movf	intdigits_chardigits@b,w
  1126  0409  00F6               	movwf	??_intdigits_chardigits
  1127  040A  0876               	movf	??_intdigits_chardigits,w
  1128  040B  00CC               	movwf	_avv+1
  1129                           
  1130                           ;./lcd4bit.h: 82:     avv[2] = (unsigned char)c;
  1131  040C  0874               	movf	intdigits_chardigits@c,w
  1132  040D  00F6               	movwf	??_intdigits_chardigits
  1133  040E  0876               	movf	??_intdigits_chardigits,w
  1134  040F  00CD               	movwf	_avv+2
  1135  0410                     l63:
  1136  0410  0008               	return
  1137  0411                     __end_of_intdigits_chardigits:
  1138                           
  1139                           	psect	text5
  1140  043F                     __ptext5:	
  1141 ;; *************** function ___lwmod *****************
  1142 ;; Defined at:
  1143 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  divisor         2    0[COMMON] unsigned int 
  1146 ;;  dividend        2    2[COMMON] unsigned int 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  counter         1    5[COMMON] unsigned char 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2    0[COMMON] unsigned int 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         4       0       0       0       0
  1159 ;;      Locals:         1       0       0       0       0
  1160 ;;      Temps:          1       0       0       0       0
  1161 ;;      Totals:         6       0       0       0       0
  1162 ;;Total ram usage:        6 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_LCD_num
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function ___lwmod
  1173  043F                     ___lwmod:
  1174  043F                     l1051:	
  1175                           ;incstack = 0
  1176                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1177                           
  1178  043F  0870               	movf	___lwmod@divisor,w
  1179  0440  0471               	iorwf	___lwmod@divisor+1,w
  1180  0441  1903               	btfsc	3,2
  1181  0442  2C44               	goto	u631
  1182  0443  2C45               	goto	u630
  1183  0444                     u631:
  1184  0444  2C74               	goto	l1069
  1185  0445                     u630:
  1186  0445                     l1053:
  1187  0445  01F5               	clrf	___lwmod@counter
  1188  0446  0AF5               	incf	___lwmod@counter,f
  1189  0447  2C53               	goto	l1059
  1190  0448                     l1055:
  1191  0448  3001               	movlw	1
  1192  0449                     u645:
  1193  0449  1003               	clrc
  1194  044A  0DF0               	rlf	___lwmod@divisor,f
  1195  044B  0DF1               	rlf	___lwmod@divisor+1,f
  1196  044C  3EFF               	addlw	-1
  1197  044D  1D03               	skipz
  1198  044E  2C49               	goto	u645
  1199  044F                     l1057:
  1200  044F  3001               	movlw	1
  1201  0450  00F4               	movwf	??___lwmod
  1202  0451  0874               	movf	??___lwmod,w
  1203  0452  07F5               	addwf	___lwmod@counter,f
  1204  0453                     l1059:
  1205  0453  1FF1               	btfss	___lwmod@divisor+1,7
  1206  0454  2C56               	goto	u651
  1207  0455  2C57               	goto	u650
  1208  0456                     u651:
  1209  0456  2C48               	goto	l1055
  1210  0457                     u650:
  1211  0457                     l1061:
  1212  0457  0871               	movf	___lwmod@divisor+1,w
  1213  0458  0273               	subwf	___lwmod@dividend+1,w
  1214  0459  1D03               	skipz
  1215  045A  2C5D               	goto	u665
  1216  045B  0870               	movf	___lwmod@divisor,w
  1217  045C  0272               	subwf	___lwmod@dividend,w
  1218  045D                     u665:
  1219  045D  1C03               	skipc
  1220  045E  2C60               	goto	u661
  1221  045F  2C61               	goto	u660
  1222  0460                     u661:
  1223  0460  2C67               	goto	l1065
  1224  0461                     u660:
  1225  0461                     l1063:
  1226  0461  0870               	movf	___lwmod@divisor,w
  1227  0462  02F2               	subwf	___lwmod@dividend,f
  1228  0463  0871               	movf	___lwmod@divisor+1,w
  1229  0464  1C03               	skipc
  1230  0465  03F3               	decf	___lwmod@dividend+1,f
  1231  0466  02F3               	subwf	___lwmod@dividend+1,f
  1232  0467                     l1065:
  1233  0467  3001               	movlw	1
  1234  0468                     u675:
  1235  0468  1003               	clrc
  1236  0469  0CF1               	rrf	___lwmod@divisor+1,f
  1237  046A  0CF0               	rrf	___lwmod@divisor,f
  1238  046B  3EFF               	addlw	-1
  1239  046C  1D03               	skipz
  1240  046D  2C68               	goto	u675
  1241  046E                     l1067:
  1242  046E  3001               	movlw	1
  1243  046F  02F5               	subwf	___lwmod@counter,f
  1244  0470  1D03               	btfss	3,2
  1245  0471  2C73               	goto	u681
  1246  0472  2C74               	goto	u680
  1247  0473                     u681:
  1248  0473  2C57               	goto	l1061
  1249  0474                     u680:
  1250  0474                     l1069:
  1251  0474  0873               	movf	___lwmod@dividend+1,w
  1252  0475  00F1               	movwf	?___lwmod+1
  1253  0476  0872               	movf	___lwmod@dividend,w
  1254  0477  00F0               	movwf	?___lwmod
  1255  0478                     l469:
  1256  0478  0008               	return
  1257  0479                     __end_of___lwmod:
  1258                           
  1259                           	psect	text6
  1260  04F9                     __ptext6:	
  1261 ;; *************** function ___lwdiv *****************
  1262 ;; Defined at:
  1263 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  divisor         2    0[COMMON] unsigned int 
  1266 ;;  dividend        2    2[COMMON] unsigned int 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  quotient        2    5[COMMON] unsigned int 
  1269 ;;  counter         1    7[COMMON] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  2    0[COMMON] unsigned int 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         4       0       0       0       0
  1280 ;;      Locals:         3       0       0       0       0
  1281 ;;      Temps:          1       0       0       0       0
  1282 ;;      Totals:         8       0       0       0       0
  1283 ;;Total ram usage:        8 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_LCD_num
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function ___lwdiv
  1294  04F9                     ___lwdiv:
  1295  04F9                     l1025:	
  1296                           ;incstack = 0
  1297                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1298                           
  1299  04F9  01F5               	clrf	___lwdiv@quotient
  1300  04FA  01F6               	clrf	___lwdiv@quotient+1
  1301  04FB                     l1027:
  1302  04FB  0870               	movf	___lwdiv@divisor,w
  1303  04FC  0471               	iorwf	___lwdiv@divisor+1,w
  1304  04FD  1903               	btfsc	3,2
  1305  04FE  2D00               	goto	u561
  1306  04FF  2D01               	goto	u560
  1307  0500                     u561:
  1308  0500  2D38               	goto	l1047
  1309  0501                     u560:
  1310  0501                     l1029:
  1311  0501  01F7               	clrf	___lwdiv@counter
  1312  0502  0AF7               	incf	___lwdiv@counter,f
  1313  0503  2D0F               	goto	l1035
  1314  0504                     l1031:
  1315  0504  3001               	movlw	1
  1316  0505                     u575:
  1317  0505  1003               	clrc
  1318  0506  0DF0               	rlf	___lwdiv@divisor,f
  1319  0507  0DF1               	rlf	___lwdiv@divisor+1,f
  1320  0508  3EFF               	addlw	-1
  1321  0509  1D03               	skipz
  1322  050A  2D05               	goto	u575
  1323  050B                     l1033:
  1324  050B  3001               	movlw	1
  1325  050C  00F4               	movwf	??___lwdiv
  1326  050D  0874               	movf	??___lwdiv,w
  1327  050E  07F7               	addwf	___lwdiv@counter,f
  1328  050F                     l1035:
  1329  050F  1FF1               	btfss	___lwdiv@divisor+1,7
  1330  0510  2D12               	goto	u581
  1331  0511  2D13               	goto	u580
  1332  0512                     u581:
  1333  0512  2D04               	goto	l1031
  1334  0513                     u580:
  1335  0513                     l1037:
  1336  0513  3001               	movlw	1
  1337  0514                     u595:
  1338  0514  1003               	clrc
  1339  0515  0DF5               	rlf	___lwdiv@quotient,f
  1340  0516  0DF6               	rlf	___lwdiv@quotient+1,f
  1341  0517  3EFF               	addlw	-1
  1342  0518  1D03               	skipz
  1343  0519  2D14               	goto	u595
  1344  051A  0871               	movf	___lwdiv@divisor+1,w
  1345  051B  0273               	subwf	___lwdiv@dividend+1,w
  1346  051C  1D03               	skipz
  1347  051D  2D20               	goto	u605
  1348  051E  0870               	movf	___lwdiv@divisor,w
  1349  051F  0272               	subwf	___lwdiv@dividend,w
  1350  0520                     u605:
  1351  0520  1C03               	skipc
  1352  0521  2D23               	goto	u601
  1353  0522  2D24               	goto	u600
  1354  0523                     u601:
  1355  0523  2D2B               	goto	l1043
  1356  0524                     u600:
  1357  0524                     l1039:
  1358  0524  0870               	movf	___lwdiv@divisor,w
  1359  0525  02F2               	subwf	___lwdiv@dividend,f
  1360  0526  0871               	movf	___lwdiv@divisor+1,w
  1361  0527  1C03               	skipc
  1362  0528  03F3               	decf	___lwdiv@dividend+1,f
  1363  0529  02F3               	subwf	___lwdiv@dividend+1,f
  1364  052A                     l1041:
  1365  052A  1475               	bsf	___lwdiv@quotient,0
  1366  052B                     l1043:
  1367  052B  3001               	movlw	1
  1368  052C                     u615:
  1369  052C  1003               	clrc
  1370  052D  0CF1               	rrf	___lwdiv@divisor+1,f
  1371  052E  0CF0               	rrf	___lwdiv@divisor,f
  1372  052F  3EFF               	addlw	-1
  1373  0530  1D03               	skipz
  1374  0531  2D2C               	goto	u615
  1375  0532                     l1045:
  1376  0532  3001               	movlw	1
  1377  0533  02F7               	subwf	___lwdiv@counter,f
  1378  0534  1D03               	btfss	3,2
  1379  0535  2D37               	goto	u621
  1380  0536  2D38               	goto	u620
  1381  0537                     u621:
  1382  0537  2D13               	goto	l1037
  1383  0538                     u620:
  1384  0538                     l1047:
  1385  0538  0876               	movf	___lwdiv@quotient+1,w
  1386  0539  00F1               	movwf	?___lwdiv+1
  1387  053A  0875               	movf	___lwdiv@quotient,w
  1388  053B  00F0               	movwf	?___lwdiv
  1389  053C                     l459:
  1390  053C  0008               	return
  1391  053D                     __end_of___lwdiv:
  1392                           
  1393                           	psect	text7
  1394  053D                     __ptext7:	
  1395 ;; *************** function ___lmul *****************
  1396 ;; Defined at:
  1397 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  multiplier      4    0[COMMON] unsigned long 
  1400 ;;  multiplicand    4    4[COMMON] unsigned long 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  product         4    9[COMMON] unsigned long 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  4    0[COMMON] unsigned long 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         8       0       0       0       0
  1413 ;;      Locals:         4       0       0       0       0
  1414 ;;      Temps:          1       0       0       0       0
  1415 ;;      Totals:        13       0       0       0       0
  1416 ;;Total ram usage:       13 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_LCD_num
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function ___lmul
  1427  053D                     ___lmul:
  1428  053D                     l971:	
  1429                           ;incstack = 0
  1430                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1431                           
  1432  053D  3000               	movlw	0
  1433  053E  00FC               	movwf	___lmul@product+3
  1434  053F  3000               	movlw	0
  1435  0540  00FB               	movwf	___lmul@product+2
  1436  0541  3000               	movlw	0
  1437  0542  00FA               	movwf	___lmul@product+1
  1438  0543  3000               	movlw	0
  1439  0544  00F9               	movwf	___lmul@product
  1440  0545                     l973:
  1441  0545  1C70               	btfss	___lmul@multiplier,0
  1442  0546  2D48               	goto	u411
  1443  0547  2D49               	goto	u410
  1444  0548                     u411:
  1445  0548  2D60               	goto	l977
  1446  0549                     u410:
  1447  0549                     l975:
  1448  0549  0874               	movf	___lmul@multiplicand,w
  1449  054A  07F9               	addwf	___lmul@product,f
  1450  054B  0875               	movf	___lmul@multiplicand+1,w
  1451  054C  1103               	clrz
  1452  054D  1803               	skipnc
  1453  054E  3E01               	addlw	1
  1454  054F  1903               	skipnz
  1455  0550  2D52               	goto	u421
  1456  0551  07FA               	addwf	___lmul@product+1,f
  1457  0552                     u421:
  1458  0552  0876               	movf	___lmul@multiplicand+2,w
  1459  0553  1103               	clrz
  1460  0554  1803               	skipnc
  1461  0555  3E01               	addlw	1
  1462  0556  1903               	skipnz
  1463  0557  2D59               	goto	u422
  1464  0558  07FB               	addwf	___lmul@product+2,f
  1465  0559                     u422:
  1466  0559  0877               	movf	___lmul@multiplicand+3,w
  1467  055A  1103               	clrz
  1468  055B  1803               	skipnc
  1469  055C  3E01               	addlw	1
  1470  055D  1903               	skipnz
  1471  055E  2D60               	goto	u423
  1472  055F  07FC               	addwf	___lmul@product+3,f
  1473  0560                     u423:
  1474  0560                     l977:
  1475  0560  3001               	movlw	1
  1476  0561  00F8               	movwf	??___lmul
  1477  0562                     u435:
  1478  0562  1003               	clrc
  1479  0563  0DF4               	rlf	___lmul@multiplicand,f
  1480  0564  0DF5               	rlf	___lmul@multiplicand+1,f
  1481  0565  0DF6               	rlf	___lmul@multiplicand+2,f
  1482  0566  0DF7               	rlf	___lmul@multiplicand+3,f
  1483  0567  0BF8               	decfsz	??___lmul,f
  1484  0568  2D62               	goto	u435
  1485  0569                     l979:
  1486  0569  3001               	movlw	1
  1487  056A                     u445:
  1488  056A  1003               	clrc
  1489  056B  0CF3               	rrf	___lmul@multiplier+3,f
  1490  056C  0CF2               	rrf	___lmul@multiplier+2,f
  1491  056D  0CF1               	rrf	___lmul@multiplier+1,f
  1492  056E  0CF0               	rrf	___lmul@multiplier,f
  1493  056F  3EFF               	addlw	-1
  1494  0570  1D03               	skipz
  1495  0571  2D6A               	goto	u445
  1496  0572  0873               	movf	___lmul@multiplier+3,w
  1497  0573  0472               	iorwf	___lmul@multiplier+2,w
  1498  0574  0471               	iorwf	___lmul@multiplier+1,w
  1499  0575  0470               	iorwf	___lmul@multiplier,w
  1500  0576  1D03               	skipz
  1501  0577  2D79               	goto	u451
  1502  0578  2D7A               	goto	u450
  1503  0579                     u451:
  1504  0579  2D45               	goto	l973
  1505  057A                     u450:
  1506  057A                     l981:
  1507  057A  087C               	movf	___lmul@product+3,w
  1508  057B  00F3               	movwf	?___lmul+3
  1509  057C  087B               	movf	___lmul@product+2,w
  1510  057D  00F2               	movwf	?___lmul+2
  1511  057E  087A               	movf	___lmul@product+1,w
  1512  057F  00F1               	movwf	?___lmul+1
  1513  0580  0879               	movf	___lmul@product,w
  1514  0581  00F0               	movwf	?___lmul
  1515  0582                     l201:
  1516  0582  0008               	return
  1517  0583                     __end_of___lmul:
  1518                           
  1519                           	psect	text8
  1520  05E7                     __ptext8:	
  1521 ;; *************** function ___aldiv *****************
  1522 ;; Defined at:
  1523 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  divisor         4    0[BANK0 ] long 
  1526 ;;  dividend        4    4[BANK0 ] long 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  quotient        4   10[BANK0 ] long 
  1529 ;;  sign            1    9[BANK0 ] unsigned char 
  1530 ;;  counter         1    8[BANK0 ] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  4    0[BANK0 ] long 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         0       8       0       0       0
  1541 ;;      Locals:         0       6       0       0       0
  1542 ;;      Temps:          1       0       0       0       0
  1543 ;;      Totals:         1      14       0       0       0
  1544 ;;Total ram usage:       15 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_LCD_num
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function ___aldiv
  1555  05E7                     ___aldiv:
  1556  05E7                     l985:	
  1557                           ;incstack = 0
  1558                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1559                           
  1560  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1561  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1562  05E9  01A9               	clrf	___aldiv@sign
  1563  05EA                     l987:
  1564  05EA  1FA3               	btfss	___aldiv@divisor+3,7
  1565  05EB  2DED               	goto	u461
  1566  05EC  2DEE               	goto	u460
  1567  05ED                     u461:
  1568  05ED  2DFB               	goto	l252
  1569  05EE                     u460:
  1570  05EE                     l989:
  1571  05EE  09A0               	comf	___aldiv@divisor,f
  1572  05EF  09A1               	comf	___aldiv@divisor+1,f
  1573  05F0  09A2               	comf	___aldiv@divisor+2,f
  1574  05F1  09A3               	comf	___aldiv@divisor+3,f
  1575  05F2  0AA0               	incf	___aldiv@divisor,f
  1576  05F3  1903               	skipnz
  1577  05F4  0AA1               	incf	___aldiv@divisor+1,f
  1578  05F5  1903               	skipnz
  1579  05F6  0AA2               	incf	___aldiv@divisor+2,f
  1580  05F7  1903               	skipnz
  1581  05F8  0AA3               	incf	___aldiv@divisor+3,f
  1582  05F9  01A9               	clrf	___aldiv@sign
  1583  05FA  0AA9               	incf	___aldiv@sign,f
  1584  05FB                     l252:
  1585  05FB  1FA7               	btfss	___aldiv@dividend+3,7
  1586  05FC  2DFE               	goto	u471
  1587  05FD  2DFF               	goto	u470
  1588  05FE                     u471:
  1589  05FE  2E0E               	goto	l995
  1590  05FF                     u470:
  1591  05FF                     l991:
  1592  05FF  09A4               	comf	___aldiv@dividend,f
  1593  0600  09A5               	comf	___aldiv@dividend+1,f
  1594  0601  09A6               	comf	___aldiv@dividend+2,f
  1595  0602  09A7               	comf	___aldiv@dividend+3,f
  1596  0603  0AA4               	incf	___aldiv@dividend,f
  1597  0604  1903               	skipnz
  1598  0605  0AA5               	incf	___aldiv@dividend+1,f
  1599  0606  1903               	skipnz
  1600  0607  0AA6               	incf	___aldiv@dividend+2,f
  1601  0608  1903               	skipnz
  1602  0609  0AA7               	incf	___aldiv@dividend+3,f
  1603  060A                     l993:
  1604  060A  3001               	movlw	1
  1605  060B  00FD               	movwf	??___aldiv
  1606  060C  087D               	movf	??___aldiv,w
  1607  060D  06A9               	xorwf	___aldiv@sign,f
  1608  060E                     l995:
  1609  060E  3000               	movlw	0
  1610  060F  00AD               	movwf	___aldiv@quotient+3
  1611  0610  3000               	movlw	0
  1612  0611  00AC               	movwf	___aldiv@quotient+2
  1613  0612  3000               	movlw	0
  1614  0613  00AB               	movwf	___aldiv@quotient+1
  1615  0614  3000               	movlw	0
  1616  0615  00AA               	movwf	___aldiv@quotient
  1617  0616                     l997:
  1618  0616  0823               	movf	___aldiv@divisor+3,w
  1619  0617  0422               	iorwf	___aldiv@divisor+2,w
  1620  0618  0421               	iorwf	___aldiv@divisor+1,w
  1621  0619  0420               	iorwf	___aldiv@divisor,w
  1622  061A  1903               	skipnz
  1623  061B  2E1D               	goto	u481
  1624  061C  2E1E               	goto	u480
  1625  061D                     u481:
  1626  061D  2E6B               	goto	l1017
  1627  061E                     u480:
  1628  061E                     l999:
  1629  061E  01A8               	clrf	___aldiv@counter
  1630  061F  0AA8               	incf	___aldiv@counter,f
  1631  0620  2E2E               	goto	l1003
  1632  0621                     l1001:
  1633  0621  3001               	movlw	1
  1634  0622  00FD               	movwf	??___aldiv
  1635  0623                     u495:
  1636  0623  1003               	clrc
  1637  0624  0DA0               	rlf	___aldiv@divisor,f
  1638  0625  0DA1               	rlf	___aldiv@divisor+1,f
  1639  0626  0DA2               	rlf	___aldiv@divisor+2,f
  1640  0627  0DA3               	rlf	___aldiv@divisor+3,f
  1641  0628  0BFD               	decfsz	??___aldiv,f
  1642  0629  2E23               	goto	u495
  1643  062A  3001               	movlw	1
  1644  062B  00FD               	movwf	??___aldiv
  1645  062C  087D               	movf	??___aldiv,w
  1646  062D  07A8               	addwf	___aldiv@counter,f
  1647  062E                     l1003:
  1648  062E  1FA3               	btfss	___aldiv@divisor+3,7
  1649  062F  2E31               	goto	u501
  1650  0630  2E32               	goto	u500
  1651  0631                     u501:
  1652  0631  2E21               	goto	l1001
  1653  0632                     u500:
  1654  0632                     l1005:
  1655  0632  3001               	movlw	1
  1656  0633  00FD               	movwf	??___aldiv
  1657  0634                     u515:
  1658  0634  1003               	clrc
  1659  0635  0DAA               	rlf	___aldiv@quotient,f
  1660  0636  0DAB               	rlf	___aldiv@quotient+1,f
  1661  0637  0DAC               	rlf	___aldiv@quotient+2,f
  1662  0638  0DAD               	rlf	___aldiv@quotient+3,f
  1663  0639  0BFD               	decfsz	??___aldiv,f
  1664  063A  2E34               	goto	u515
  1665  063B                     l1007:
  1666  063B  0823               	movf	___aldiv@divisor+3,w
  1667  063C  0227               	subwf	___aldiv@dividend+3,w
  1668  063D  1D03               	skipz
  1669  063E  2E49               	goto	u525
  1670  063F  0822               	movf	___aldiv@divisor+2,w
  1671  0640  0226               	subwf	___aldiv@dividend+2,w
  1672  0641  1D03               	skipz
  1673  0642  2E49               	goto	u525
  1674  0643  0821               	movf	___aldiv@divisor+1,w
  1675  0644  0225               	subwf	___aldiv@dividend+1,w
  1676  0645  1D03               	skipz
  1677  0646  2E49               	goto	u525
  1678  0647  0820               	movf	___aldiv@divisor,w
  1679  0648  0224               	subwf	___aldiv@dividend,w
  1680  0649                     u525:
  1681  0649  1C03               	skipc
  1682  064A  2E4C               	goto	u521
  1683  064B  2E4D               	goto	u520
  1684  064C                     u521:
  1685  064C  2E5C               	goto	l1013
  1686  064D                     u520:
  1687  064D                     l1009:
  1688  064D  0820               	movf	___aldiv@divisor,w
  1689  064E  02A4               	subwf	___aldiv@dividend,f
  1690  064F  0821               	movf	___aldiv@divisor+1,w
  1691  0650  1C03               	skipc
  1692  0651  0F21               	incfsz	___aldiv@divisor+1,w
  1693  0652  02A5               	subwf	___aldiv@dividend+1,f
  1694  0653  0822               	movf	___aldiv@divisor+2,w
  1695  0654  1C03               	skipc
  1696  0655  0F22               	incfsz	___aldiv@divisor+2,w
  1697  0656  02A6               	subwf	___aldiv@dividend+2,f
  1698  0657  0823               	movf	___aldiv@divisor+3,w
  1699  0658  1C03               	skipc
  1700  0659  0F23               	incfsz	___aldiv@divisor+3,w
  1701  065A  02A7               	subwf	___aldiv@dividend+3,f
  1702  065B                     l1011:
  1703  065B  142A               	bsf	___aldiv@quotient,0
  1704  065C                     l1013:
  1705  065C  3001               	movlw	1
  1706  065D                     u535:
  1707  065D  1003               	clrc
  1708  065E  0CA3               	rrf	___aldiv@divisor+3,f
  1709  065F  0CA2               	rrf	___aldiv@divisor+2,f
  1710  0660  0CA1               	rrf	___aldiv@divisor+1,f
  1711  0661  0CA0               	rrf	___aldiv@divisor,f
  1712  0662  3EFF               	addlw	-1
  1713  0663  1D03               	skipz
  1714  0664  2E5D               	goto	u535
  1715  0665                     l1015:
  1716  0665  3001               	movlw	1
  1717  0666  02A8               	subwf	___aldiv@counter,f
  1718  0667  1D03               	btfss	3,2
  1719  0668  2E6A               	goto	u541
  1720  0669  2E6B               	goto	u540
  1721  066A                     u541:
  1722  066A  2E32               	goto	l1005
  1723  066B                     u540:
  1724  066B                     l1017:
  1725  066B  0829               	movf	___aldiv@sign,w
  1726  066C  1903               	btfsc	3,2
  1727  066D  2E6F               	goto	u551
  1728  066E  2E70               	goto	u550
  1729  066F                     u551:
  1730  066F  2E7B               	goto	l1021
  1731  0670                     u550:
  1732  0670                     l1019:
  1733  0670  09AA               	comf	___aldiv@quotient,f
  1734  0671  09AB               	comf	___aldiv@quotient+1,f
  1735  0672  09AC               	comf	___aldiv@quotient+2,f
  1736  0673  09AD               	comf	___aldiv@quotient+3,f
  1737  0674  0AAA               	incf	___aldiv@quotient,f
  1738  0675  1903               	skipnz
  1739  0676  0AAB               	incf	___aldiv@quotient+1,f
  1740  0677  1903               	skipnz
  1741  0678  0AAC               	incf	___aldiv@quotient+2,f
  1742  0679  1903               	skipnz
  1743  067A  0AAD               	incf	___aldiv@quotient+3,f
  1744  067B                     l1021:
  1745  067B  082D               	movf	___aldiv@quotient+3,w
  1746  067C  00A3               	movwf	?___aldiv+3
  1747  067D  082C               	movf	___aldiv@quotient+2,w
  1748  067E  00A2               	movwf	?___aldiv+2
  1749  067F  082B               	movf	___aldiv@quotient+1,w
  1750  0680  00A1               	movwf	?___aldiv+1
  1751  0681  082A               	movf	___aldiv@quotient,w
  1752  0682  00A0               	movwf	?___aldiv
  1753  0683                     l262:
  1754  0683  0008               	return
  1755  0684                     __end_of___aldiv:
  1756                           
  1757                           	psect	text9
  1758  04B9                     __ptext9:	
  1759 ;; *************** function _LCD_Char *****************
  1760 ;; Defined at:
  1761 ;;		line 26 in file "./lcd4bit.h"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  data            1    wreg     unsigned char 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  data            1    2[COMMON] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1775 ;;      Params:         0       0       0       0       0
  1776 ;;      Locals:         1       0       0       0       0
  1777 ;;      Temps:          2       0       0       0       0
  1778 ;;      Totals:         3       0       0       0       0
  1779 ;;Total ram usage:        3 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_LCD_num
  1785 ;;		_main
  1786 ;;		_show
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           
  1791                           ;psect for function _LCD_Char
  1792  04B9                     _LCD_Char:
  1793                           
  1794                           ;incstack = 0
  1795                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1796                           ;LCD_Char@data stored from wreg
  1797  04B9  00F2               	movwf	LCD_Char@data
  1798  04BA                     l951:
  1799                           
  1800                           ;./lcd4bit.h: 26: void LCD_Char (unsigned char data);./lcd4bit.h: 27: {;./lcd4bit.h: 28:
      +                               RC0 = 1;
  1801  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1802  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1803  04BC  1407               	bsf	7,0	;volatile
  1804  04BD                     l953:
  1805                           
  1806                           ;./lcd4bit.h: 29:     PORTB = data;
  1807  04BD  0872               	movf	LCD_Char@data,w
  1808  04BE  0086               	movwf	6	;volatile
  1809  04BF                     l955:
  1810                           
  1811                           ;./lcd4bit.h: 30:     RC1 = 1;
  1812  04BF  1487               	bsf	7,1	;volatile
  1813                           
  1814                           ;./lcd4bit.h: 31:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1815  04C0  3041               	movlw	65
  1816  04C1  00F1               	movwf	??_LCD_Char+1
  1817  04C2  30EE               	movlw	238
  1818  04C3  00F0               	movwf	??_LCD_Char
  1819  04C4                     u797:
  1820  04C4  0BF0               	decfsz	??_LCD_Char,f
  1821  04C5  2CC4               	goto	u797
  1822  04C6  0BF1               	decfsz	??_LCD_Char+1,f
  1823  04C7  2CC4               	goto	u797
  1824  04C8  0000               	nop
  1825  04C9                     l957:
  1826                           
  1827                           ;./lcd4bit.h: 32:     RC1 = 0;
  1828  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1829  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1830  04CB  1087               	bcf	7,1	;volatile
  1831                           
  1832                           ;./lcd4bit.h: 33:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1833  04CC  3041               	movlw	65
  1834  04CD  00F1               	movwf	??_LCD_Char+1
  1835  04CE  30EE               	movlw	238
  1836  04CF  00F0               	movwf	??_LCD_Char
  1837  04D0                     u807:
  1838  04D0  0BF0               	decfsz	??_LCD_Char,f
  1839  04D1  2CD0               	goto	u807
  1840  04D2  0BF1               	decfsz	??_LCD_Char+1,f
  1841  04D3  2CD0               	goto	u807
  1842  04D4  0000               	nop
  1843  04D5                     l959:
  1844                           
  1845                           ;./lcd4bit.h: 34:     PORTB = (data<<4);
  1846  04D5  0872               	movf	LCD_Char@data,w
  1847  04D6  00F0               	movwf	??_LCD_Char
  1848  04D7  3003               	movlw	3
  1849  04D8                     u405:
  1850  04D8  1003               	clrc
  1851  04D9  0DF0               	rlf	??_LCD_Char,f
  1852  04DA  3EFF               	addlw	-1
  1853  04DB  1D03               	skipz
  1854  04DC  2CD8               	goto	u405
  1855  04DD  1003               	clrc
  1856  04DE  0D70               	rlf	??_LCD_Char,w
  1857  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1858  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1859  04E1  0086               	movwf	6	;volatile
  1860  04E2                     l961:
  1861                           
  1862                           ;./lcd4bit.h: 35:     RC1 = 1;
  1863  04E2  1487               	bsf	7,1	;volatile
  1864  04E3                     l963:
  1865                           
  1866                           ;./lcd4bit.h: 36:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1867  04E3  3041               	movlw	65
  1868  04E4  00F1               	movwf	??_LCD_Char+1
  1869  04E5  30EE               	movlw	238
  1870  04E6  00F0               	movwf	??_LCD_Char
  1871  04E7                     u817:
  1872  04E7  0BF0               	decfsz	??_LCD_Char,f
  1873  04E8  2CE7               	goto	u817
  1874  04E9  0BF1               	decfsz	??_LCD_Char+1,f
  1875  04EA  2CE7               	goto	u817
  1876  04EB  0000               	nop
  1877  04EC                     l965:
  1878                           
  1879                           ;./lcd4bit.h: 37:     RC1 = 0;
  1880  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1881  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1882  04EE  1087               	bcf	7,1	;volatile
  1883  04EF                     l967:
  1884                           
  1885                           ;./lcd4bit.h: 38:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1886  04EF  3041               	movlw	65
  1887  04F0  00F1               	movwf	??_LCD_Char+1
  1888  04F1  30EE               	movlw	238
  1889  04F2  00F0               	movwf	??_LCD_Char
  1890  04F3                     u827:
  1891  04F3  0BF0               	decfsz	??_LCD_Char,f
  1892  04F4  2CF3               	goto	u827
  1893  04F5  0BF1               	decfsz	??_LCD_Char+1,f
  1894  04F6  2CF3               	goto	u827
  1895  04F7  0000               	nop
  1896  04F8                     l48:
  1897  04F8  0008               	return
  1898  04F9                     __end_of_LCD_Char:
  1899                           
  1900                           	psect	text10
  1901  0411                     __ptext10:	
  1902 ;; *************** function _LCD_init *****************
  1903 ;; Defined at:
  1904 ;;		line 40 in file "./lcd4bit.h"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0, pclath, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0
  1920 ;;      Temps:          2       0       0       0       0
  1921 ;;      Totals:         2       0       0       0       0
  1922 ;;Total ram usage:        2 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; Hardware stack levels required when called: 1
  1925 ;; This function calls:
  1926 ;;		_LCD_Command
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function _LCD_init
  1934  0411                     _LCD_init:
  1935  0411                     l1073:	
  1936                           ;incstack = 0
  1937                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1938                           
  1939                           
  1940                           ;./lcd4bit.h: 42:     LCD_Command (0x02);
  1941  0411  3002               	movlw	2
  1942  0412  120A  118A  2479  120A  118A  	fcall	_LCD_Command
  1943                           
  1944                           ;./lcd4bit.h: 43:     LCD_Command (0x28);
  1945  0417  3028               	movlw	40
  1946  0418  120A  118A  2479  120A  118A  	fcall	_LCD_Command
  1947                           
  1948                           ;./lcd4bit.h: 44:     LCD_Command (0x80);
  1949  041D  3080               	movlw	128
  1950  041E  120A  118A  2479  120A  118A  	fcall	_LCD_Command
  1951                           
  1952                           ;./lcd4bit.h: 45:     LCD_Command (0x0C);
  1953  0423  300C               	movlw	12
  1954  0424  120A  118A  2479  120A  118A  	fcall	_LCD_Command
  1955                           
  1956                           ;./lcd4bit.h: 46:     LCD_Command (0x06);
  1957  0429  3006               	movlw	6
  1958  042A  120A  118A  2479  120A  118A  	fcall	_LCD_Command
  1959                           
  1960                           ;./lcd4bit.h: 47:     LCD_Command (0x01);
  1961  042F  3001               	movlw	1
  1962  0430  120A  118A  2479  120A  118A  	fcall	_LCD_Command
  1963  0435                     l1075:
  1964                           
  1965                           ;./lcd4bit.h: 48:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1966  0435  3041               	movlw	65
  1967  0436  00F4               	movwf	??_LCD_init+1
  1968  0437  30EE               	movlw	238
  1969  0438  00F3               	movwf	??_LCD_init
  1970  0439                     u837:
  1971  0439  0BF3               	decfsz	??_LCD_init,f
  1972  043A  2C39               	goto	u837
  1973  043B  0BF4               	decfsz	??_LCD_init+1,f
  1974  043C  2C39               	goto	u837
  1975  043D  0000               	nop
  1976  043E                     l51:
  1977  043E  0008               	return
  1978  043F                     __end_of_LCD_init:
  1979                           
  1980                           	psect	text11
  1981  0479                     __ptext11:	
  1982 ;; *************** function _LCD_Command *****************
  1983 ;; Defined at:
  1984 ;;		line 12 in file "./lcd4bit.h"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  cmnd            1    wreg     unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  cmnd            1    2[COMMON] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       0       0       0       0
  1999 ;;      Locals:         1       0       0       0       0
  2000 ;;      Temps:          2       0       0       0       0
  2001 ;;      Totals:         3       0       0       0       0
  2002 ;;Total ram usage:        3 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_LCD_init
  2008 ;;		_main
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _LCD_Command
  2014  0479                     _LCD_Command:
  2015                           
  2016                           ;incstack = 0
  2017                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2018                           ;LCD_Command@cmnd stored from wreg
  2019  0479  00F2               	movwf	LCD_Command@cmnd
  2020  047A                     l933:
  2021                           
  2022                           ;./lcd4bit.h: 12: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 13: {;./lcd4bit.h: 
      +                          14:     RC0 = 0;
  2023  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2024  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2025  047C  1007               	bcf	7,0	;volatile
  2026  047D                     l935:
  2027                           
  2028                           ;./lcd4bit.h: 15:     PORTB = cmnd;
  2029  047D  0872               	movf	LCD_Command@cmnd,w
  2030  047E  0086               	movwf	6	;volatile
  2031  047F                     l937:
  2032                           
  2033                           ;./lcd4bit.h: 16:     RC1 = 1;
  2034  047F  1487               	bsf	7,1	;volatile
  2035                           
  2036                           ;./lcd4bit.h: 17:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2037  0480  3041               	movlw	65
  2038  0481  00F1               	movwf	??_LCD_Command+1
  2039  0482  30EE               	movlw	238
  2040  0483  00F0               	movwf	??_LCD_Command
  2041  0484                     u847:
  2042  0484  0BF0               	decfsz	??_LCD_Command,f
  2043  0485  2C84               	goto	u847
  2044  0486  0BF1               	decfsz	??_LCD_Command+1,f
  2045  0487  2C84               	goto	u847
  2046  0488  0000               	nop
  2047  0489                     l939:
  2048                           
  2049                           ;./lcd4bit.h: 18:     RC1 = 0;
  2050  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2051  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2052  048B  1087               	bcf	7,1	;volatile
  2053                           
  2054                           ;./lcd4bit.h: 19:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2055  048C  3041               	movlw	65
  2056  048D  00F1               	movwf	??_LCD_Command+1
  2057  048E  30EE               	movlw	238
  2058  048F  00F0               	movwf	??_LCD_Command
  2059  0490                     u857:
  2060  0490  0BF0               	decfsz	??_LCD_Command,f
  2061  0491  2C90               	goto	u857
  2062  0492  0BF1               	decfsz	??_LCD_Command+1,f
  2063  0493  2C90               	goto	u857
  2064  0494  0000               	nop
  2065  0495                     l941:
  2066                           
  2067                           ;./lcd4bit.h: 20:     PORTB = (cmnd<<4);
  2068  0495  0872               	movf	LCD_Command@cmnd,w
  2069  0496  00F0               	movwf	??_LCD_Command
  2070  0497  3003               	movlw	3
  2071  0498                     u395:
  2072  0498  1003               	clrc
  2073  0499  0DF0               	rlf	??_LCD_Command,f
  2074  049A  3EFF               	addlw	-1
  2075  049B  1D03               	skipz
  2076  049C  2C98               	goto	u395
  2077  049D  1003               	clrc
  2078  049E  0D70               	rlf	??_LCD_Command,w
  2079  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2080  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2081  04A1  0086               	movwf	6	;volatile
  2082  04A2                     l943:
  2083                           
  2084                           ;./lcd4bit.h: 21:     RC1 = 1;
  2085  04A2  1487               	bsf	7,1	;volatile
  2086  04A3                     l945:
  2087                           
  2088                           ;./lcd4bit.h: 22:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2089  04A3  3041               	movlw	65
  2090  04A4  00F1               	movwf	??_LCD_Command+1
  2091  04A5  30EE               	movlw	238
  2092  04A6  00F0               	movwf	??_LCD_Command
  2093  04A7                     u867:
  2094  04A7  0BF0               	decfsz	??_LCD_Command,f
  2095  04A8  2CA7               	goto	u867
  2096  04A9  0BF1               	decfsz	??_LCD_Command+1,f
  2097  04AA  2CA7               	goto	u867
  2098  04AB  0000               	nop
  2099  04AC                     l947:
  2100                           
  2101                           ;./lcd4bit.h: 23:     RC1 = 0;
  2102  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2103  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2104  04AE  1087               	bcf	7,1	;volatile
  2105  04AF                     l949:
  2106                           
  2107                           ;./lcd4bit.h: 24:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2108  04AF  3041               	movlw	65
  2109  04B0  00F1               	movwf	??_LCD_Command+1
  2110  04B1  30EE               	movlw	238
  2111  04B2  00F0               	movwf	??_LCD_Command
  2112  04B3                     u877:
  2113  04B3  0BF0               	decfsz	??_LCD_Command,f
  2114  04B4  2CB3               	goto	u877
  2115  04B5  0BF1               	decfsz	??_LCD_Command+1,f
  2116  04B6  2CB3               	goto	u877
  2117  04B7  0000               	nop
  2118  04B8                     l45:
  2119  04B8  0008               	return
  2120  04B9                     __end_of_LCD_Command:
  2121                           
  2122                           	psect	text12
  2123  0583                     __ptext12:	
  2124 ;; *************** function _ADC_Init *****************
  2125 ;; Defined at:
  2126 ;;		line 65 in file "main.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2140 ;;      Params:         0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0
  2142 ;;      Temps:          2       0       0       0       0
  2143 ;;      Totals:         2       0       0       0       0
  2144 ;;Total ram usage:        2 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _ADC_Init
  2155  0583                     _ADC_Init:
  2156  0583                     l1105:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _ADC_Init: [wreg]
  2159                           
  2160                           
  2161                           ;main.c: 67:     ADCON0 = 0x85;
  2162  0583  3085               	movlw	133
  2163  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0586  009F               	movwf	31	;volatile
  2166                           
  2167                           ;main.c: 68:     ADCON1 = 0xC0;
  2168  0587  30C0               	movlw	192
  2169  0588  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0589  1303               	bcf	3,6	;RP1=0, select bank1
  2171  058A  009F               	movwf	31	;volatile
  2172                           
  2173                           ;main.c: 69:     AV[0]= ((ADRESH<<8)+ADRESL);
  2174  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2175  058C  1303               	bcf	3,6	;RP1=0, select bank0
  2176  058D  081E               	movf	30,w	;volatile
  2177  058E  00C4               	movwf	_AV+1
  2178  058F  1683               	bsf	3,5	;RP0=1, select bank1
  2179  0590  1303               	bcf	3,6	;RP1=0, select bank1
  2180  0591  081E               	movf	30,w	;volatile
  2181  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2182  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2183  0594  00C3               	movwf	_AV
  2184                           
  2185                           ;main.c: 71:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2186  0595  3041               	movlw	65
  2187  0596  00F1               	movwf	??_ADC_Init+1
  2188  0597  30EE               	movlw	238
  2189  0598  00F0               	movwf	??_ADC_Init
  2190  0599                     u887:
  2191  0599  0BF0               	decfsz	??_ADC_Init,f
  2192  059A  2D99               	goto	u887
  2193  059B  0BF1               	decfsz	??_ADC_Init+1,f
  2194  059C  2D99               	goto	u887
  2195  059D  0000               	nop
  2196                           
  2197                           ;main.c: 72:     ADCON0 = 0x8D;
  2198  059E  308D               	movlw	141
  2199  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2200  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2201  05A1  009F               	movwf	31	;volatile
  2202                           
  2203                           ;main.c: 73:     ADCON1 = 0xC0;
  2204  05A2  30C0               	movlw	192
  2205  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  2206  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  2207  05A5  009F               	movwf	31	;volatile
  2208                           
  2209                           ;main.c: 74:     AV[1]= ((ADRESH<<8)+ADRESL);
  2210  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2211  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2212  05A8  081E               	movf	30,w	;volatile
  2213  05A9  00C6               	movwf	_AV+3
  2214  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  2215  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  2216  05AC  081E               	movf	30,w	;volatile
  2217  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  2218  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  2219  05AF  00C5               	movwf	_AV+2
  2220                           
  2221                           ;main.c: 76:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2222  05B0  3041               	movlw	65
  2223  05B1  00F1               	movwf	??_ADC_Init+1
  2224  05B2  30EE               	movlw	238
  2225  05B3  00F0               	movwf	??_ADC_Init
  2226  05B4                     u897:
  2227  05B4  0BF0               	decfsz	??_ADC_Init,f
  2228  05B5  2DB4               	goto	u897
  2229  05B6  0BF1               	decfsz	??_ADC_Init+1,f
  2230  05B7  2DB4               	goto	u897
  2231  05B8  0000               	nop
  2232                           
  2233                           ;main.c: 77:     ADCON0 = 0x95;
  2234  05B9  3095               	movlw	149
  2235  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2236  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2237  05BC  009F               	movwf	31	;volatile
  2238                           
  2239                           ;main.c: 78:     ADCON1 = 0xC0;
  2240  05BD  30C0               	movlw	192
  2241  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  2242  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  2243  05C0  009F               	movwf	31	;volatile
  2244                           
  2245                           ;main.c: 79:     AV[2]= ((ADRESH<<8)+ADRESL);
  2246  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2247  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2248  05C3  081E               	movf	30,w	;volatile
  2249  05C4  00C8               	movwf	_AV+5
  2250  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  2251  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  2252  05C7  081E               	movf	30,w	;volatile
  2253  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2254  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2255  05CA  00C7               	movwf	_AV+4
  2256                           
  2257                           ;main.c: 81:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2258  05CB  3041               	movlw	65
  2259  05CC  00F1               	movwf	??_ADC_Init+1
  2260  05CD  30EE               	movlw	238
  2261  05CE  00F0               	movwf	??_ADC_Init
  2262  05CF                     u907:
  2263  05CF  0BF0               	decfsz	??_ADC_Init,f
  2264  05D0  2DCF               	goto	u907
  2265  05D1  0BF1               	decfsz	??_ADC_Init+1,f
  2266  05D2  2DCF               	goto	u907
  2267  05D3  0000               	nop
  2268                           
  2269                           ;main.c: 82:     ADCON0 = 0x9D;
  2270  05D4  309D               	movlw	157
  2271  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  2272  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  2273  05D7  009F               	movwf	31	;volatile
  2274                           
  2275                           ;main.c: 83:     ADCON1 = 0xC0;
  2276  05D8  30C0               	movlw	192
  2277  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  2278  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  2279  05DB  009F               	movwf	31	;volatile
  2280                           
  2281                           ;main.c: 84:     AV[3]= ((ADRESH<<8)+ADRESL);
  2282  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2283  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2284  05DE  081E               	movf	30,w	;volatile
  2285  05DF  00CA               	movwf	_AV+7
  2286  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  2287  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  2288  05E2  081E               	movf	30,w	;volatile
  2289  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2290  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2291  05E5  00C9               	movwf	_AV+6
  2292  05E6                     l101:
  2293  05E6  0008               	return
  2294  05E7                     __end_of_ADC_Init:
  2295  007E                     btemp	set	126	;btemp
  2296  007E                     wtemp0	set	126
  2297                           
  2298                           	psect	idloc
  2299                           
  2300                           ;Config register IDLOC0 @ 0x2000
  2301                           ;	unspecified, using default values
  2302  2000                     	org	8192
  2303  2000  3FFF               	dw	16383
  2304                           
  2305                           ;Config register IDLOC1 @ 0x2001
  2306                           ;	unspecified, using default values
  2307  2001                     	org	8193
  2308  2001  3FFF               	dw	16383
  2309                           
  2310                           ;Config register IDLOC2 @ 0x2002
  2311                           ;	unspecified, using default values
  2312  2002                     	org	8194
  2313  2002  3FFF               	dw	16383
  2314                           
  2315                           ;Config register IDLOC3 @ 0x2003
  2316                           ;	unspecified, using default values
  2317  2003                     	org	8195
  2318  2003  3FFF               	dw	16383
  2319                           
  2320                           	psect	config
  2321                           
  2322                           ;Config register CONFIG @ 0x2007
  2323                           ;	Oscillator Selection bits
  2324                           ;	FOSC = HS, HS oscillator
  2325                           ;	Watchdog Timer Enable bit
  2326                           ;	WDTE = OFF, WDT disabled
  2327                           ;	Power-up Timer Enable bit
  2328                           ;	PWRTE = OFF, PWRT disabled
  2329                           ;	Brown-out Reset Enable bit
  2330                           ;	BOREN = ON, BOR enabled
  2331                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2332                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2333                           ;	Data EEPROM Memory Code Protection bit
  2334                           ;	CPD = OFF, Data EEPROM code protection off
  2335                           ;	Flash Program Memory Write Enable bits
  2336                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2337                           ;	In-Circuit Debugger Mode bit
  2338                           ;	DEBUG = 0x1, unprogrammed default
  2339                           ;	Flash Program Memory Code Protection bit
  2340                           ;	CP = OFF, Code protection off
  2341  2007                     	org	8199
  2342  2007  3FFA               	dw	16378

Data Sizes:
    Strings     2
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2712
                                             30 BANK0      5     5      0
                           _ADC_Init
                           _LCD_Char
                        _LCD_Command
                           _LCD_init
                            _LCD_num
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_num                                             18    14      4    2378
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (2) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Char
   _LCD_Command
   _LCD_init
     _LCD_Command
   _LCD_num
     _LCD_Char
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
     ___lwmod
     _intdigits_chardigits
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 04 16:53:36 2022

                            pc 0002                   ?_LCD_Command 0070                             l51 043E  
                           l45 04B8                             l54 07EE                             l63 0410  
                           l71 03F3                             l48 04F8                             l72 03F4  
                           l66 0401                             _AV 0043                             l69 03EF  
                           l86 069A                             _tx 03EA                             fsr 0004  
                          l101 05E6                            l201 0582                            l252 05FB  
                          l262 0683                            l459 053C                            ?_tx 0070  
                          l469 0478                            l941 0495                            l933 047A  
                          l943 04A2                            l935 047D                            l951 04BA  
                          l945 04A3                            l937 047F                            l961 04E2  
                          l953 04BD                            l947 04AC                            l939 0489  
                          l963 04E3                            l955 04BF                            l971 053D  
                          l949 04AF                            l965 04EC                            l957 04C9  
                          l981 057A                            l973 0545                            l967 04EF  
                          l959 04D5                            l991 05FF                            l975 0549  
                          l993 060A                            l985 05E7                            l977 0560  
                          l969 0402                            l995 060E                            l987 05EA  
                          l979 0569                            l997 0616                            l989 05EE  
                          l999 061E                            _RC0 0038                            _RC1 0039  
                          u410 0549                            u411 0548                            u500 0632  
                          u405 04D8                            u501 0631                            u421 0552  
                          u422 0559                            u423 0560                            u520 064D  
                          u600 0524                            u521 064C                            u601 0523  
                          u450 057A                            u515 0634                            u451 0579  
                          u435 0562                            u540 066B                            u460 05EE  
                          u620 0538                            u541 066A                            u525 0649  
                          u461 05ED                            u445 056A                            u621 0537  
                          u605 0520                            u550 0670                            u470 05FF  
                          u630 0445                            u710 069E                            u551 066F  
                          u535 065D                            u471 05FE                            u615 052C  
                          u631 0444                            u711 069D                            u480 061E  
                          u560 0501                            u720 06DD                            u481 061D  
                          u561 0500                            u721 06DC                            u650 0457  
                          u730 06EA                            u395 0498                            u651 0456  
                          u731 06E9                            u580 0513                            u660 0461  
                          u740 06FC                            u581 0512                            u661 0460  
                          u645 0449                            u741 06FB                            u750 0717  
                          u807 04D0                            u495 0623                            u575 0505  
                          u751 0716                            u680 0474                            u817 04E7  
                          u681 0473                            u665 045D                            u690 03F3  
                          u907 05CF                            u827 04F3                            u595 0514  
                          u675 0468                            u691 03F2                            u837 0439  
                          u847 0484                            u767 06A4                            u857 0490  
                          u777 0704                            u867 04A7                            u787 0725  
                          u877 04B3                            u797 04C4                            u887 0599  
                          u897 05B4                            _avv 004B                            fsr0 0004  
                          indf 0000                            tx@a 0070                           ??_tx 0070  
              __end_of_LCD_num 07EF                           l1001 0621                           l1011 065B  
                         l1003 062E                           l1021 067B                           l1013 065C  
                         l1005 0632                           l1101 03F5                           l1015 0665  
                         l1007 063B                           l1031 0504                           l1103 03EB  
                         l1105 0583                           l1009 064D                           l1017 066B  
                         l1041 052A                           l1033 050B                           l1025 04F9  
                         l1121 0692                           l1019 0670                           l1043 052B  
                         l1035 050F                           l1027 04FB                           l1051 043F  
                         l1123 0697                           l1115 0684                           l1045 0532  
                         l1037 0513                           l1029 0501                           l1061 0457  
                         l1053 0445                           l1133 06AC                           l1125 069E  
                         l1117 0688                           l1039 0524                           l1047 0538  
                         l1063 0461                           l1055 0448                           l1151 06EA  
                         l1143 06CB                           l1135 06C2                           l1127 06A9  
                         l1119 068D                           l1073 0411                           l1065 0467  
                         l1057 044F                           l1081 0764                           l1161 0711  
                         l1153 06F0                           l1145 06D6                           l1137 06C8  
                         l1075 0435                           l1067 046E                           l1059 0453  
                         l1091 07BC                           l1083 0777                           l1163 0717  
                         l1155 06F6                           l1147 06DD                           l1069 0474  
                         l1093 07C3                           l1085 078A                           l1077 0730  
                         l1165 071D                           l1157 06FC                           l1149 06E4  
                         l1095 07C9                           l1087 07A1                           l1079 0730  
                         l1159 070B                           l1097 07D2                           l1089 07A5  
                         l1099 07DB                           STR_1 0009                           _RCIF 0065  
                         _TXIF 0064                           _main 0684                           btemp 007E  
             __end_of_ADC_Init 05E7                           start 0000               __end_of_LCD_Char 04F9  
                 LCD_Char@data 0072               __end_of_LCD_init 043F                __end_of___aldiv 0684  
                        ?_main 0070                __end_of___lwdiv 053D                __end_of___lwmod 0479  
                        _RCREG 001A                          _RCSTA 0018                          _SPBRG 0099  
                        _PORTB 0006                          _TRISB 0086                          _TRISC 0087  
                        _TXREG 0019                          _TXSTA 0098            ___lmul@multiplicand 0074  
                        main@i 0041                          main@j 0042                __end_of_ser_int 0402  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __initialization 07EF                   __end_of_main 0730                         ??_main 003E  
               LCD_num@result1 003A           _intdigits_chardigits 0402                      ??_LCD_num 007E  
                       _ADCON0 001F                         _ADCON1 009F                         _ADRESH 001E  
                       _ADRESL 009E                         ___lmul 053D                      ??___aldiv 007D  
                    ??___lwdiv 0074                      ??___lwmod 0074           __size_of_LCD_Command 0040  
        ?_intdigits_chardigits 0070                      ?_ADC_Init 0070                      ??_ser_int 0070  
                    ?_LCD_Char 0070        __end_of__initialization 07FC                      ?_LCD_init 0070  
               __pcstackCOMMON 0070                     __end_of_tx 03F5                     ??_ADC_Init 0070  
                   __pbssBANK0 0043                     ??_LCD_Char 0070                     ??_LCD_init 0073  
                   __pmaintext 0684                        ?___lmul 0070                 ___lmul@product 0079  
       ??_intdigits_chardigits 0076                        _LCD_num 0730                     __stringtab 0003  
                      ___aldiv 05E7                __size_of___lmul 0046                        ___lwdiv 04F9  
                      ___lwmod 043F                        __ptext1 03EA                        __ptext2 03F5  
                      __ptext3 0730                        __ptext4 0402                        __ptext5 043F  
                      __ptext6 04F9                        __ptext7 053D                        __ptext8 05E7  
                      __ptext9 04B9               ___aldiv@dividend 0024                        _ser_int 03F5  
         end_of_initialization 07FC               ___aldiv@quotient 002A              __size_of_ADC_Init 0064  
            __size_of_LCD_Char 0040              __size_of_LCD_init 002E                  ??_LCD_Command 0070  
               __end_of___lmul 0583            start_initialization 07EF                  LCD_num@digit1 0032  
                LCD_num@digit2 0034                  LCD_num@digit3 0036                     LCD_num@val 002E  
                LCD_num@result 0038                       ??___lmul 0078               LCD_num@remainder 003C  
          __end_of_LCD_Command 04B9                       ?_LCD_num 002E                      ___latbits 0002  
                __pcstackBANK0 0020               ___lwdiv@dividend 0072                       ?___aldiv 0020  
                     ?___lwdiv 0070                       ?___lwmod 0070                      __pstrings 0003  
__size_of_intdigits_chardigits 000F                       _ADC_Init 0583                       ?_ser_int 0070  
             ___lwdiv@quotient 0075                    __size_of_tx 000B                ___aldiv@divisor 0020  
                     _LCD_Char 04B9                ___aldiv@counter 0028                       _LCD_init 0411  
                     _GO_nDONE 00FA                    _LCD_Command 0479                    __stringbase 0008  
             __size_of_LCD_num 00BF              ___lmul@multiplier 0070          intdigits_chardigits@a 0070  
        intdigits_chardigits@b 0072          intdigits_chardigits@c 0074               __size_of___aldiv 009D  
             __size_of___lwdiv 0044               __size_of___lwmod 003A             __end_of__stringtab 0009  
              ___lwdiv@divisor 0070                ___lwdiv@counter 0077                       __ptext10 0411  
                     __ptext11 0479                       __ptext12 0583               __size_of_ser_int 000D  
                __size_of_main 00AC                LCD_Command@cmnd 0072               ___lwmod@dividend 0072  
                    stringcode 0003                ___lwmod@divisor 0070                ___lwmod@counter 0075  
                     stringdir 0003                       stringtab 0003                   ___aldiv@sign 0029  
 __end_of_intdigits_chardigits 0411  
