

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 07 10:06:57 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.40
    51                           ; Generated 17/11/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F877A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	idataBANK0
   207  0C72                     __pidataBANK0:
   208                           
   209                           ;initializer for _sn
   210  0C72  3401               	retlw	1
   211  0C73  3400               	retlw	0
   212  001E                     _ADRESH	set	30
   213  001F                     _ADCON0	set	31
   214  0013                     _SSPBUF	set	19
   215  0014                     _SSPCON	set	20
   216  0008                     _PORTDbits	set	8
   217  001A                     _RCREG	set	26
   218  0019                     _TXREG	set	25
   219  0018                     _RCSTA	set	24
   220  0006                     _PORTB	set	6
   221  00FA                     _GO_nDONE	set	250
   222  0063                     _SSPIF	set	99
   223  0065                     _RCIF	set	101
   224  0064                     _TXIF	set	100
   225  0039                     _RC1	set	57
   226  0038                     _RC0	set	56
   227  009E                     _ADRESL	set	158
   228  009F                     _ADCON1	set	159
   229  0093                     _SSPADD	set	147
   230  0088                     _TRISDbits	set	136
   231  0099                     _SPBRG	set	153
   232  0098                     _TXSTA	set	152
   233  0087                     _TRISCbits	set	135
   234  0086                     _TRISBbits	set	134
   235  048C                     _ACKEN	set	1164
   236  048D                     _ACKDT	set	1165
   237  0489                     _RSEN	set	1161
   238  048A                     _PEN	set	1162
   239  0488                     _SEN	set	1160
   240  048B                     _RCEN	set	1163
   241  048E                     _ACKSTAT	set	1166
   242  043C                     _TRISC4	set	1084
   243  043B                     _TRISC3	set	1083
   244                           
   245                           	psect	strings
   246  0800                     __pstrings:
   247  0800                     stringtab:
   248  0800                     __stringtab:
   249  0800                     stringcode:	
   250                           ;	String table - string pointers are 1 byte each
   251                           
   252  0800                     stringdir:
   253  0800  3008               	movlw	high stringdir
   254  0801  008A               	movwf	10
   255  0802  0804               	movf	4,w
   256  0803  0A84               	incf	4,f
   257  0804  0782               	addwf	2,f
   258  0805                     __stringbase:
   259  0805  3400               	retlw	0
   260  0806                     __end_of__stringtab:
   261  0806                     STR_2:
   262  0806  3448               	retlw	72	;'H'
   263  0807  3475               	retlw	117	;'u'
   264  0808  346D               	retlw	109	;'m'
   265  0809  3469               	retlw	105	;'i'
   266  080A  343A               	retlw	58	;':'
   267  080B  3400               	retlw	0
   268  080C                     STR_1:
   269  080C  3454               	retlw	84	;'T'
   270  080D  3465               	retlw	101	;'e'
   271  080E  346D               	retlw	109	;'m'
   272  080F  3470               	retlw	112	;'p'
   273  0810  343A               	retlw	58	;':'
   274  0811  3400               	retlw	0
   275                           
   276                           	psect	cinit
   277  07E7                     start_initialization:	
   278                           ; #config settings
   279                           
   280  07E7                     __initialization:
   281                           
   282                           ; Initialize objects allocated to BANK0
   283  07E7  120A  158A  2472  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   284  07EC  00EB               	movwf	__pdataBANK0& (0+127)
   285  07ED  120A  158A  2473  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   286  07F2  00EC               	movwf	(__pdataBANK0+1)& (0+127)
   287                           
   288                           ; Clear objects allocated to BANK0
   289  07F3  1383               	bcf	3,7	;select IRP bank0
   290  07F4  3046               	movlw	low __pbssBANK0
   291  07F5  0084               	movwf	4
   292  07F6  306B               	movlw	low (__pbssBANK0+37)
   293  07F7  120A  158A  2481  120A  118A  	fcall	clear_ram0
   294  07FC                     end_of_initialization:	
   295                           ;End of C runtime variable initialization code
   296                           
   297  07FC                     __end_of__initialization:
   298  07FC  0183               	clrf	3
   299  07FD  120A  118A  2B34   	ljmp	_main	;jump to C main() function
   300                           
   301                           	psect	bssBANK0
   302  0046                     __pbssBANK0:
   303  0046                     _AV:
   304  0046                     	ds	8
   305  004E                     _message:
   306  004E                     	ds	3
   307  0051                     _avv:
   308  0051                     	ds	3
   309  0054                     _temperature:
   310  0054                     	ds	2
   311  0056                     _humidity:
   312  0056                     	ds	2
   313  0058                     _Sum:
   314  0058                     	ds	2
   315  005A                     _RH:
   316  005A                     	ds	2
   317  005C                     _Temp:
   318  005C                     	ds	2
   319  005E                     _year:
   320  005E                     	ds	1
   321  005F                     _month:
   322  005F                     	ds	1
   323  0060                     _date:
   324  0060                     	ds	1
   325  0061                     _day:
   326  0061                     	ds	1
   327  0062                     _hour:
   328  0062                     	ds	1
   329  0063                     _min:
   330  0063                     	ds	1
   331  0064                     _sec:
   332  0064                     	ds	1
   333  0065                     _Ch:
   334  0065                     	ds	1
   335  0066                     _RH_byte2:
   336  0066                     	ds	1
   337  0067                     _RH_byte1:
   338  0067                     	ds	1
   339  0068                     _T_byte2:
   340  0068                     	ds	1
   341  0069                     _T_byte1:
   342  0069                     	ds	1
   343  006A                     _Check:
   344  006A                     	ds	1
   345                           
   346                           	psect	dataBANK0
   347  006B                     __pdataBANK0:
   348  006B                     _sn:
   349  006B                     	ds	2
   350                           
   351                           	psect	clrtext
   352  0C81                     clear_ram0:	
   353                           ;	Called with FSR containing the base address, and
   354                           ;	W with the last address+1
   355                           
   356  0C81  0064               	clrwdt	;clear the watchdog before getting into this loop
   357  0C82                     clrloop0:
   358  0C82  0180               	clrf	0	;clear RAM location pointed to by FSR
   359  0C83  0A84               	incf	4,f	;increment pointer
   360  0C84  0604               	xorwf	4,w	;XOR with final address
   361  0C85  1903               	btfsc	3,2	;have we reached the end yet?
   362  0C86  3400               	retlw	0	;all done for this memory range, return
   363  0C87  0604               	xorwf	4,w	;XOR again to restore value
   364  0C88  2C82               	goto	clrloop0	;do the next byte
   365                           
   366                           	psect	cstackCOMMON
   367  0070                     __pcstackCOMMON:
   368  0070                     ?_intdigits_chardigits:
   369  0070                     ?_rtc_stop:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ??_rtc_stop:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_rtc_res:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ??_rtc_res:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_rtc_nak:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ??_rtc_nak:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_print_serialnumber:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_ADC_Init:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ??_ADC_Init:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_print_analogvoltages:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_print_dht11data:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_LCD_Command:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ??_LCD_Command:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_LCD_Char:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ??_LCD_Char:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_LCD_init:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_show:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_ser_int:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_ser_int:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_tx:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_tx:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_StartSignal:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_StartSignal:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_CheckResponse:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_CheckResponse:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_ReadData:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??_ReadData:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_rtc_int:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ??_rtc_int:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_waitmssp:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ??_waitmssp:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_rtc_send:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ??_rtc_send:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_rtc_read:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ??_rtc_read:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_rtc_read_byte:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_convup:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ??_convup:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_convd:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ??_convd:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_main:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?___awdiv:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?___awmod:	
   496                           ; 2 bytes @ 0x0
   497                           
   498  0070                     ?___lwdiv:	
   499                           ; 2 bytes @ 0x0
   500                           
   501  0070                     ?___lwmod:	
   502                           ; 2 bytes @ 0x0
   503                           
   504  0070                     ?___lmul:	
   505                           ; 2 bytes @ 0x0
   506                           
   507  0070                     tx@a:	
   508                           ; 4 bytes @ 0x0
   509                           
   510  0070                     rtc_send@a:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     convd@bcd:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     intdigits_chardigits@a:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ___awdiv@divisor:	
   520                           ; 2 bytes @ 0x0
   521                           
   522  0070                     ___awmod@divisor:	
   523                           ; 2 bytes @ 0x0
   524                           
   525  0070                     ___lwdiv@divisor:	
   526                           ; 2 bytes @ 0x0
   527                           
   528  0070                     ___lwmod@divisor:	
   529                           ; 2 bytes @ 0x0
   530                           
   531  0070                     ___lmul@multiplier:	
   532                           ; 2 bytes @ 0x0
   533                           
   534                           
   535                           ; 4 bytes @ 0x0
   536  0070                     	ds	1
   537  0071                     ??_rtc_read_byte:
   538  0071                     convup@bcd:	
   539                           ; 1 bytes @ 0x1
   540                           
   541                           
   542                           ; 1 bytes @ 0x1
   543  0071                     	ds	1
   544  0072                     LCD_Command@cmnd:
   545  0072                     LCD_Char@data:	
   546                           ; 1 bytes @ 0x2
   547                           
   548  0072                     ReadData@i:	
   549                           ; 1 bytes @ 0x2
   550                           
   551  0072                     rtc_read_byte@addr:	
   552                           ; 1 bytes @ 0x2
   553                           
   554  0072                     intdigits_chardigits@b:	
   555                           ; 1 bytes @ 0x2
   556                           
   557  0072                     ___awdiv@dividend:	
   558                           ; 2 bytes @ 0x2
   559                           
   560  0072                     ___awmod@dividend:	
   561                           ; 2 bytes @ 0x2
   562                           
   563  0072                     ___lwdiv@dividend:	
   564                           ; 2 bytes @ 0x2
   565                           
   566  0072                     ___lwmod@dividend:	
   567                           ; 2 bytes @ 0x2
   568                           
   569                           
   570                           ; 2 bytes @ 0x2
   571  0072                     	ds	1
   572  0073                     ??_LCD_init:
   573  0073                     ??_show:	
   574                           ; 1 bytes @ 0x3
   575                           
   576  0073                     ReadData@j:	
   577                           ; 1 bytes @ 0x3
   578                           
   579  0073                     rtc_read_byte@rec:	
   580                           ; 1 bytes @ 0x3
   581                           
   582                           
   583                           ; 1 bytes @ 0x3
   584  0073                     	ds	1
   585  0074                     ??___awdiv:
   586  0074                     ??___awmod:	
   587                           ; 1 bytes @ 0x4
   588                           
   589  0074                     ??___lwdiv:	
   590                           ; 1 bytes @ 0x4
   591                           
   592  0074                     ??___lwmod:	
   593                           ; 1 bytes @ 0x4
   594                           
   595  0074                     show@s:	
   596                           ; 1 bytes @ 0x4
   597                           
   598  0074                     intdigits_chardigits@c:	
   599                           ; 1 bytes @ 0x4
   600                           
   601  0074                     ___lmul@multiplicand:	
   602                           ; 2 bytes @ 0x4
   603                           
   604                           
   605                           ; 4 bytes @ 0x4
   606  0074                     	ds	1
   607  0075                     ___awdiv@counter:
   608  0075                     ___awmod@counter:	
   609                           ; 1 bytes @ 0x5
   610                           
   611  0075                     ___lwmod@counter:	
   612                           ; 1 bytes @ 0x5
   613                           
   614  0075                     ___lwdiv@quotient:	
   615                           ; 1 bytes @ 0x5
   616                           
   617                           
   618                           ; 2 bytes @ 0x5
   619  0075                     	ds	1
   620  0076                     ??_intdigits_chardigits:
   621  0076                     ___awdiv@sign:	
   622                           ; 1 bytes @ 0x6
   623                           
   624  0076                     ___awmod@sign:	
   625                           ; 1 bytes @ 0x6
   626                           
   627                           
   628                           ; 1 bytes @ 0x6
   629  0076                     	ds	1
   630  0077                     ___lwdiv@counter:
   631  0077                     ___awdiv@quotient:	
   632                           ; 1 bytes @ 0x7
   633                           
   634                           
   635                           ; 2 bytes @ 0x7
   636  0077                     	ds	1
   637  0078                     ??___lmul:
   638                           
   639                           ; 1 bytes @ 0x8
   640  0078                     	ds	1
   641  0079                     ?_show_multidigits:
   642  0079                     ?_tx_sn:	
   643                           ; 1 bytes @ 0x9
   644                           
   645  0079                     show_multidigits@val:	
   646                           ; 1 bytes @ 0x9
   647                           
   648  0079                     tx_sn@val:	
   649                           ; 2 bytes @ 0x9
   650                           
   651  0079                     ___lmul@product:	
   652                           ; 2 bytes @ 0x9
   653                           
   654                           
   655                           ; 4 bytes @ 0x9
   656  0079                     	ds	2
   657  007B                     ??_print_serialnumber:
   658  007B                     ??_show_multidigits:	
   659                           ; 1 bytes @ 0xB
   660                           
   661  007B                     ??_tx_sn:	
   662                           ; 1 bytes @ 0xB
   663                           
   664                           
   665                           ; 1 bytes @ 0xB
   666  007B                     	ds	2
   667  007D                     ??___aldiv:
   668                           
   669                           ; 1 bytes @ 0xD
   670  007D                     	ds	1
   671  007E                     ??_LCD_num:
   672                           
   673                           	psect	cstackBANK0
   674  0020                     __pcstackBANK0:	
   675                           ; 1 bytes @ 0xE
   676                           
   677  0020                     ?___aldiv:
   678  0020                     show_multidigits@digit4:	
   679                           ; 4 bytes @ 0x0
   680                           
   681  0020                     tx_sn@digit4:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0020                     ___aldiv@divisor:	
   685                           ; 2 bytes @ 0x0
   686                           
   687                           
   688                           ; 4 bytes @ 0x0
   689  0020                     	ds	2
   690  0022                     show_multidigits@result:
   691  0022                     tx_sn@result:	
   692                           ; 2 bytes @ 0x2
   693                           
   694                           
   695                           ; 2 bytes @ 0x2
   696  0022                     	ds	2
   697  0024                     show_multidigits@digit3:
   698  0024                     tx_sn@digit3:	
   699                           ; 2 bytes @ 0x4
   700                           
   701  0024                     ___aldiv@dividend:	
   702                           ; 2 bytes @ 0x4
   703                           
   704                           
   705                           ; 4 bytes @ 0x4
   706  0024                     	ds	2
   707  0026                     show_multidigits@digit1:
   708  0026                     tx_sn@digit1:	
   709                           ; 2 bytes @ 0x6
   710                           
   711                           
   712                           ; 2 bytes @ 0x6
   713  0026                     	ds	2
   714  0028                     ___aldiv@counter:
   715  0028                     show_multidigits@digit2:	
   716                           ; 1 bytes @ 0x8
   717                           
   718  0028                     tx_sn@digit2:	
   719                           ; 2 bytes @ 0x8
   720                           
   721                           
   722                           ; 2 bytes @ 0x8
   723  0028                     	ds	1
   724  0029                     ___aldiv@sign:
   725                           
   726                           ; 1 bytes @ 0x9
   727  0029                     	ds	1
   728  002A                     show_multidigits@result1:
   729  002A                     tx_sn@result1:	
   730                           ; 2 bytes @ 0xA
   731                           
   732  002A                     ___aldiv@quotient:	
   733                           ; 2 bytes @ 0xA
   734                           
   735                           
   736                           ; 4 bytes @ 0xA
   737  002A                     	ds	2
   738  002C                     show_multidigits@remainder:
   739  002C                     tx_sn@remainder:	
   740                           ; 2 bytes @ 0xC
   741                           
   742                           
   743                           ; 2 bytes @ 0xC
   744  002C                     	ds	2
   745  002E                     ??_print_dht11data:
   746  002E                     ?_LCD_num:	
   747                           ; 1 bytes @ 0xE
   748                           
   749  002E                     LCD_num@val:	
   750                           ; 1 bytes @ 0xE
   751                           
   752                           
   753                           ; 4 bytes @ 0xE
   754  002E                     	ds	4
   755  0032                     LCD_num@digit1:
   756                           
   757                           ; 2 bytes @ 0x12
   758  0032                     	ds	2
   759  0034                     LCD_num@digit2:
   760                           
   761                           ; 2 bytes @ 0x14
   762  0034                     	ds	2
   763  0036                     LCD_num@digit3:
   764                           
   765                           ; 2 bytes @ 0x16
   766  0036                     	ds	2
   767  0038                     LCD_num@result:
   768                           
   769                           ; 2 bytes @ 0x18
   770  0038                     	ds	2
   771  003A                     LCD_num@result1:
   772                           
   773                           ; 2 bytes @ 0x1A
   774  003A                     	ds	2
   775  003C                     LCD_num@remainder:
   776                           
   777                           ; 2 bytes @ 0x1C
   778  003C                     	ds	2
   779  003E                     ??_print_analogvoltages:
   780                           
   781                           ; 1 bytes @ 0x1E
   782  003E                     	ds	3
   783  0041                     print_analogvoltages@i:
   784                           
   785                           ; 1 bytes @ 0x21
   786  0041                     	ds	1
   787  0042                     print_analogvoltages@j:
   788                           
   789                           ; 1 bytes @ 0x22
   790  0042                     	ds	1
   791  0043                     ??_main:
   792                           
   793                           ; 1 bytes @ 0x23
   794  0043                     	ds	3
   795                           
   796                           	psect	maintext
   797  0334                     __pmaintext:	
   798 ;;
   799 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   800 ;;
   801 ;; *************** function _main *****************
   802 ;; Defined at:
   803 ;;		line 37 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : B00/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0
   819 ;;      Temps:          0       3       0       0       0
   820 ;;      Totals:         0       3       0       0       0
   821 ;;Total ram usage:        3 bytes
   822 ;; Hardware stack levels required when called: 3
   823 ;; This function calls:
   824 ;;		_ADC_Init
   825 ;;		_LCD_Char
   826 ;;		_LCD_Command
   827 ;;		_LCD_init
   828 ;;		_convd
   829 ;;		_convup
   830 ;;		_print_analogvoltages
   831 ;;		_print_dht11data
   832 ;;		_print_serialnumber
   833 ;;		_rtc_int
   834 ;;		_rtc_read_byte
   835 ;;		_ser_int
   836 ;;		_tx
   837 ;; This function is called by:
   838 ;;		Startup code after reset
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _main
   844  0334                     _main:
   845  0334                     l2054:	
   846                           ;incstack = 0
   847                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   848                           
   849                           
   850                           ;main.c: 39:     LCD_init();
   851  0334  120A  158A  254D  120A  118A  	fcall	_LCD_init
   852                           
   853                           ;main.c: 40:     ser_int();
   854  0339  120A  158A  24BF  120A  118A  	fcall	_ser_int
   855  033E                     l259:	
   856                           ;main.c: 41:     while (1)
   857                           
   858                           
   859                           ;main.c: 42:     {;main.c: 43:         LCD_Command(0x01);
   860  033E  3001               	movlw	1
   861  033F  120A  158A  25F7  120A  118A  	fcall	_LCD_Command
   862                           
   863                           ;main.c: 46:         print_serialnumber();
   864  0344  120A  158A  24EC  120A  118A  	fcall	_print_serialnumber
   865                           
   866                           ;main.c: 48:         rtc_int();
   867  0349  120A  158A  24FE  120A  118A  	fcall	_rtc_int
   868                           
   869                           ;main.c: 49:         sec =rtc_read_byte(0x00);
   870  034E  3000               	movlw	0
   871  034F  120A  158A  25BD  120A  118A  	fcall	_rtc_read_byte
   872  0354  1283               	bcf	3,5	;RP0=0, select bank0
   873  0355  1303               	bcf	3,6	;RP1=0, select bank0
   874  0356  00C3               	movwf	??_main
   875  0357  0843               	movf	??_main,w
   876  0358  00E4               	movwf	_sec
   877                           
   878                           ;main.c: 50:         min =rtc_read_byte(0x01);
   879  0359  3001               	movlw	1
   880  035A  120A  158A  25BD  120A  118A  	fcall	_rtc_read_byte
   881  035F  1283               	bcf	3,5	;RP0=0, select bank0
   882  0360  1303               	bcf	3,6	;RP1=0, select bank0
   883  0361  00C3               	movwf	??_main
   884  0362  0843               	movf	??_main,w
   885  0363  00E3               	movwf	_min
   886                           
   887                           ;main.c: 51:         hour =rtc_read_byte(0x02);
   888  0364  3002               	movlw	2
   889  0365  120A  158A  25BD  120A  118A  	fcall	_rtc_read_byte
   890  036A  1283               	bcf	3,5	;RP0=0, select bank0
   891  036B  1303               	bcf	3,6	;RP1=0, select bank0
   892  036C  00C3               	movwf	??_main
   893  036D  0843               	movf	??_main,w
   894  036E  00E2               	movwf	_hour
   895                           
   896                           ;main.c: 52:         day =rtc_read_byte(0x03);
   897  036F  3003               	movlw	3
   898  0370  120A  158A  25BD  120A  118A  	fcall	_rtc_read_byte
   899  0375  1283               	bcf	3,5	;RP0=0, select bank0
   900  0376  1303               	bcf	3,6	;RP1=0, select bank0
   901  0377  00C3               	movwf	??_main
   902  0378  0843               	movf	??_main,w
   903  0379  00E1               	movwf	_day
   904                           
   905                           ;main.c: 53:         date =rtc_read_byte(0x04);
   906  037A  3004               	movlw	4
   907  037B  120A  158A  25BD  120A  118A  	fcall	_rtc_read_byte
   908  0380  1283               	bcf	3,5	;RP0=0, select bank0
   909  0381  1303               	bcf	3,6	;RP1=0, select bank0
   910  0382  00C3               	movwf	??_main
   911  0383  0843               	movf	??_main,w
   912  0384  00E0               	movwf	_date
   913                           
   914                           ;main.c: 54:         month=rtc_read_byte(0x05);
   915  0385  3005               	movlw	5
   916  0386  120A  158A  25BD  120A  118A  	fcall	_rtc_read_byte
   917  038B  1283               	bcf	3,5	;RP0=0, select bank0
   918  038C  1303               	bcf	3,6	;RP1=0, select bank0
   919  038D  00C3               	movwf	??_main
   920  038E  0843               	movf	??_main,w
   921  038F  00DF               	movwf	_month
   922                           
   923                           ;main.c: 55:         year =rtc_read_byte(0x06);
   924  0390  3006               	movlw	6
   925  0391  120A  158A  25BD  120A  118A  	fcall	_rtc_read_byte
   926  0396  1283               	bcf	3,5	;RP0=0, select bank0
   927  0397  1303               	bcf	3,6	;RP1=0, select bank0
   928  0398  00C3               	movwf	??_main
   929  0399  0843               	movf	??_main,w
   930  039A  00DE               	movwf	_year
   931                           
   932                           ;main.c: 57:         LCD_Command(0x80);
   933  039B  3080               	movlw	128
   934  039C  120A  158A  25F7  120A  118A  	fcall	_LCD_Command
   935                           
   936                           ;main.c: 58:         LCD_Char(convup(hour));
   937  03A1  1283               	bcf	3,5	;RP0=0, select bank0
   938  03A2  1303               	bcf	3,6	;RP1=0, select bank0
   939  03A3  0862               	movf	_hour,w
   940  03A4  120A  158A  24A7  120A  118A  	fcall	_convup
   941  03A9  120A  158A  2637  120A  118A  	fcall	_LCD_Char
   942                           
   943                           ;main.c: 59:         LCD_Char(convd(hour));
   944  03AE  1283               	bcf	3,5	;RP0=0, select bank0
   945  03AF  1303               	bcf	3,6	;RP1=0, select bank0
   946  03B0  0862               	movf	_hour,w
   947  03B1  120A  158A  2474  120A  118A  	fcall	_convd
   948  03B6  120A  158A  2637  120A  118A  	fcall	_LCD_Char
   949                           
   950                           ;main.c: 60:         LCD_Char(':');
   951  03BB  303A               	movlw	58
   952  03BC  120A  158A  2637  120A  118A  	fcall	_LCD_Char
   953                           
   954                           ;main.c: 61:         LCD_Char(convup(min));
   955  03C1  1283               	bcf	3,5	;RP0=0, select bank0
   956  03C2  1303               	bcf	3,6	;RP1=0, select bank0
   957  03C3  0863               	movf	_min,w
   958  03C4  120A  158A  24A7  120A  118A  	fcall	_convup
   959  03C9  120A  158A  2637  120A  118A  	fcall	_LCD_Char
   960                           
   961                           ;main.c: 62:         LCD_Char(convd(min));
   962  03CE  1283               	bcf	3,5	;RP0=0, select bank0
   963  03CF  1303               	bcf	3,6	;RP1=0, select bank0
   964  03D0  0863               	movf	_min,w
   965  03D1  120A  158A  2474  120A  118A  	fcall	_convd
   966  03D6  120A  158A  2637  120A  118A  	fcall	_LCD_Char
   967                           
   968                           ;main.c: 63:         LCD_Char(':');
   969  03DB  303A               	movlw	58
   970  03DC  120A  158A  2637  120A  118A  	fcall	_LCD_Char
   971                           
   972                           ;main.c: 64:         LCD_Char(convup(sec));
   973  03E1  1283               	bcf	3,5	;RP0=0, select bank0
   974  03E2  1303               	bcf	3,6	;RP1=0, select bank0
   975  03E3  0864               	movf	_sec,w
   976  03E4  120A  158A  24A7  120A  118A  	fcall	_convup
   977  03E9  120A  158A  2637  120A  118A  	fcall	_LCD_Char
   978                           
   979                           ;main.c: 65:         LCD_Char(convd(sec));
   980  03EE  1283               	bcf	3,5	;RP0=0, select bank0
   981  03EF  1303               	bcf	3,6	;RP1=0, select bank0
   982  03F0  0864               	movf	_sec,w
   983  03F1  120A  158A  2474  120A  118A  	fcall	_convd
   984  03F6  120A  158A  2637  120A  118A  	fcall	_LCD_Char
   985                           
   986                           ;main.c: 67:         LCD_Command(0x89);
   987  03FB  3089               	movlw	137
   988  03FC  120A  158A  25F7  120A  118A  	fcall	_LCD_Command
   989                           
   990                           ;main.c: 68:         LCD_Char(convup(date));
   991  0401  1283               	bcf	3,5	;RP0=0, select bank0
   992  0402  1303               	bcf	3,6	;RP1=0, select bank0
   993  0403  0860               	movf	_date,w
   994  0404  120A  158A  24A7  120A  118A  	fcall	_convup
   995  0409  120A  158A  2637  120A  118A  	fcall	_LCD_Char
   996                           
   997                           ;main.c: 69:         LCD_Char(convd(date));
   998  040E  1283               	bcf	3,5	;RP0=0, select bank0
   999  040F  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0410  0860               	movf	_date,w
  1001  0411  120A  158A  2474  120A  118A  	fcall	_convd
  1002  0416  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1003                           
  1004                           ;main.c: 70:         LCD_Char(':');
  1005  041B  303A               	movlw	58
  1006  041C  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1007                           
  1008                           ;main.c: 71:         LCD_Char(convup(month));
  1009  0421  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0422  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0423  085F               	movf	_month,w
  1012  0424  120A  158A  24A7  120A  118A  	fcall	_convup
  1013  0429  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1014                           
  1015                           ;main.c: 72:         LCD_Char(convd(month));
  1016  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1017  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0430  085F               	movf	_month,w
  1019  0431  120A  158A  2474  120A  118A  	fcall	_convd
  1020  0436  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1021                           
  1022                           ;main.c: 73:         LCD_Char(':');
  1023  043B  303A               	movlw	58
  1024  043C  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1025                           
  1026                           ;main.c: 74:         LCD_Char(convup(year));
  1027  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0443  085E               	movf	_year,w
  1030  0444  120A  158A  24A7  120A  118A  	fcall	_convup
  1031  0449  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1032                           
  1033                           ;main.c: 75:         LCD_Char(convd(year));
  1034  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1035  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0450  085E               	movf	_year,w
  1037  0451  120A  158A  2474  120A  118A  	fcall	_convd
  1038  0456  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1039                           
  1040                           ;main.c: 76:         LCD_Char('/');
  1041  045B  302F               	movlw	47
  1042  045C  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1043                           
  1044                           ;main.c: 77:         LCD_Char(convup(day));
  1045  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0463  0861               	movf	_day,w
  1048  0464  120A  158A  24A7  120A  118A  	fcall	_convup
  1049  0469  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1050                           
  1051                           ;main.c: 78:         LCD_Char(convd(day));
  1052  046E  1283               	bcf	3,5	;RP0=0, select bank0
  1053  046F  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0470  0861               	movf	_day,w
  1055  0471  120A  158A  2474  120A  118A  	fcall	_convd
  1056  0476  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  1057                           
  1058                           ;main.c: 81:         ADC_Init ();
  1059  047B  120A  158A  279C  120A  118A  	fcall	_ADC_Init
  1060  0480                     l2056:
  1061                           
  1062                           ;main.c: 82:         GO_nDONE=1;
  1063  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0482  151F               	bsf	31,2	;volatile
  1066  0483                     l260:	
  1067                           ;main.c: 83:         while(GO_nDONE==1);
  1068                           
  1069  0483  191F               	btfsc	31,2	;volatile
  1070  0484  2C86               	goto	u1731
  1071  0485  2C87               	goto	u1730
  1072  0486                     u1731:
  1073  0486  2C83               	goto	l260
  1074  0487                     u1730:
  1075  0487                     l2058:
  1076                           
  1077                           ;main.c: 84:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1078  0487  3041               	movlw	65
  1079  0488  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0489  1303               	bcf	3,6	;RP1=0, select bank0
  1081  048A  00C4               	movwf	??_main+1
  1082  048B  30ED               	movlw	237
  1083  048C  00C3               	movwf	??_main
  1084  048D                     u1747:
  1085  048D  0BC3               	decfsz	??_main,f
  1086  048E  2C8D               	goto	u1747
  1087  048F  0BC4               	decfsz	??_main+1,f
  1088  0490  2C8D               	goto	u1747
  1089  0491  2C92               	nop2
  1090  0492                     l2060:
  1091                           
  1092                           ;main.c: 85:         LCD_Command(0xC0);
  1093  0492  30C0               	movlw	192
  1094  0493  120A  158A  25F7  120A  118A  	fcall	_LCD_Command
  1095  0498                     l2062:
  1096                           
  1097                           ;main.c: 86:         print_analogvoltages();
  1098  0498  120A  118A  2094  120A  118A  	fcall	_print_analogvoltages
  1099  049D                     l2064:
  1100                           
  1101                           ;main.c: 89:         print_dht11data();
  1102  049D  120A  118A  225E  120A  118A  	fcall	_print_dht11data
  1103  04A2                     l2066:
  1104                           
  1105                           ;main.c: 92:         tx(0x0d);
  1106  04A2  300D               	movlw	13
  1107  04A3  120A  158A  249C  120A  118A  	fcall	_tx
  1108                           
  1109                           ;main.c: 93:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1110  04A8  301A               	movlw	26
  1111  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1112  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1113  04AB  00C5               	movwf	??_main+2
  1114  04AC  305E               	movlw	94
  1115  04AD  00C4               	movwf	??_main+1
  1116  04AE  306D               	movlw	109
  1117  04AF  00C3               	movwf	??_main
  1118  04B0                     u1757:
  1119  04B0  0BC3               	decfsz	??_main,f
  1120  04B1  2CB0               	goto	u1757
  1121  04B2  0BC4               	decfsz	??_main+1,f
  1122  04B3  2CB0               	goto	u1757
  1123  04B4  0BC5               	decfsz	??_main+2,f
  1124  04B5  2CB0               	goto	u1757
  1125  04B6  2CB7               	nop2
  1126                           
  1127                           ;main.c: 94:         sn += 1;
  1128  04B7  3001               	movlw	1
  1129  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  1130  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  1131  04BA  07EB               	addwf	_sn,f
  1132  04BB  1803               	skipnc
  1133  04BC  0AEC               	incf	_sn+1,f
  1134  04BD  3000               	movlw	0
  1135  04BE  07EC               	addwf	_sn+1,f
  1136  04BF  2B3E               	goto	l259
  1137  04C0  120A  118A  2800   	ljmp	start
  1138  04C3                     __end_of_main:
  1139                           
  1140                           	psect	text1
  1141  0CBF                     __ptext1:	
  1142 ;; *************** function _ser_int *****************
  1143 ;; Defined at:
  1144 ;;		line 7 in file "./uart.h"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function _ser_int
  1173  0CBF                     _ser_int:
  1174  0CBF                     l1928:	
  1175                           ;incstack = 0
  1176                           ; Regs used in _ser_int: [wreg]
  1177                           
  1178                           
  1179                           ;./uart.h: 9:  TXSTA= 0x20;
  1180  0CBF  3020               	movlw	32
  1181  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  1182  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  1183  0CC2  0098               	movwf	24	;volatile
  1184                           
  1185                           ;./uart.h: 10:  RCSTA= 0b10010000;
  1186  0CC3  3090               	movlw	144
  1187  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0CC6  0098               	movwf	24	;volatile
  1190                           
  1191                           ;./uart.h: 11:  SPBRG=31;
  1192  0CC7  301F               	movlw	31
  1193  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  1194  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  1195  0CCA  0099               	movwf	25	;volatile
  1196  0CCB                     l120:
  1197  0CCB  0008               	return
  1198  0CCC                     __end_of_ser_int:
  1199                           
  1200                           	psect	text2
  1201  0DBD                     __ptext2:	
  1202 ;; *************** function _rtc_read_byte *****************
  1203 ;; Defined at:
  1204 ;;		line 52 in file "./ds1307.h"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  addr            1    wreg     unsigned char 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  addr            1    2[COMMON] unsigned char 
  1209 ;;  rec             1    3[COMMON] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      unsigned char 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         2       0       0       0       0
  1221 ;;      Temps:          1       0       0       0       0
  1222 ;;      Totals:         3       0       0       0       0
  1223 ;;Total ram usage:        3 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 2
  1226 ;; This function calls:
  1227 ;;		_rtc_nak
  1228 ;;		_rtc_read
  1229 ;;		_rtc_res
  1230 ;;		_rtc_send
  1231 ;;		_rtc_stop
  1232 ;;		_waitmssp
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _rtc_read_byte
  1240  0DBD                     _rtc_read_byte:
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in _rtc_read_byte: [wreg+status,2+status,0+pclath+cstack]
  1244                           ;rtc_read_byte@addr stored from wreg
  1245  0DBD  00F2               	movwf	rtc_read_byte@addr
  1246  0DBE                     l219:	
  1247                           ;./ds1307.h: 52: unsigned char rtc_read_byte(unsigned char addr);./ds1307.h: 53: {;./ds1
      +                          307.h: 54:     unsigned char rec;;./ds1307.h: 55: L: rtc_res();
  1248                           
  1249  0DBE                     l1934:
  1250  0DBE  120A  158A  2489  120A  158A  	fcall	_rtc_res
  1251  0DC3                     l1936:
  1252                           
  1253                           ;./ds1307.h: 56:     SSPBUF=0xD0;
  1254  0DC3  30D0               	movlw	208
  1255  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0DC6  0093               	movwf	19	;volatile
  1258  0DC7                     l1938:
  1259                           
  1260                           ;./ds1307.h: 57:     waitmssp();
  1261  0DC7  120A  158A  2479  120A  158A  	fcall	_waitmssp
  1262  0DCC                     l220:	
  1263                           ;./ds1307.h: 58:     while(ACKSTAT){goto L;}
  1264                           
  1265  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  1266  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0DCE  1B11               	btfsc	17,6	;volatile
  1268  0DCF  2DD1               	goto	u1651
  1269  0DD0  2DD2               	goto	u1650
  1270  0DD1                     u1651:
  1271  0DD1  2DBE               	goto	l219
  1272  0DD2                     u1650:
  1273  0DD2                     l1940:
  1274                           
  1275                           ;./ds1307.h: 60:     rtc_send(addr);
  1276  0DD2  0872               	movf	rtc_read_byte@addr,w
  1277  0DD3  120A  158A  24DB  120A  158A  	fcall	_rtc_send
  1278  0DD8                     l1942:
  1279                           
  1280                           ;./ds1307.h: 61:     rtc_res();
  1281  0DD8  120A  158A  2489  120A  158A  	fcall	_rtc_res
  1282  0DDD                     l1944:
  1283                           
  1284                           ;./ds1307.h: 62:     rtc_send(0xD1);
  1285  0DDD  30D1               	movlw	209
  1286  0DDE  120A  158A  24DB  120A  158A  	fcall	_rtc_send
  1287  0DE3                     l1946:
  1288                           
  1289                           ;./ds1307.h: 63:     rec=rtc_read();
  1290  0DE3  120A  158A  24B3  120A  158A  	fcall	_rtc_read
  1291  0DE8  00F1               	movwf	??_rtc_read_byte
  1292  0DE9  0871               	movf	??_rtc_read_byte,w
  1293  0DEA  00F3               	movwf	rtc_read_byte@rec
  1294  0DEB                     l1948:
  1295                           
  1296                           ;./ds1307.h: 64:     rtc_nak();
  1297  0DEB  120A  158A  2492  120A  158A  	fcall	_rtc_nak
  1298  0DF0                     l1950:
  1299                           
  1300                           ;./ds1307.h: 65:     rtc_stop();
  1301  0DF0  120A  118A  2003  120A  158A  	fcall	_rtc_stop
  1302                           
  1303                           ;./ds1307.h: 66:     return rec;
  1304  0DF5  0873               	movf	rtc_read_byte@rec,w
  1305  0DF6                     l223:
  1306  0DF6  0008               	return
  1307  0DF7                     __end_of_rtc_read_byte:
  1308                           
  1309                           	psect	text3
  1310  0003                     __ptext3:	
  1311 ;; *************** function _rtc_stop *****************
  1312 ;; Defined at:
  1313 ;;		line 75 in file "./ds1307.h"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		status,2, status,0, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 1
  1334 ;; This function calls:
  1335 ;;		_waitmssp
  1336 ;; This function is called by:
  1337 ;;		_rtc_read_byte
  1338 ;;		_rtc_send_byte
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _rtc_stop
  1344  0003                     _rtc_stop:
  1345  0003                     l1902:	
  1346                           ;incstack = 0
  1347                           ; Regs used in _rtc_stop: [status,2+status,0+pclath+cstack]
  1348                           
  1349                           
  1350                           ;./ds1307.h: 77:     PEN=1;
  1351  0003  1683               	bsf	3,5	;RP0=1, select bank1
  1352  0004  1303               	bcf	3,6	;RP1=0, select bank1
  1353  0005  1511               	bsf	17,2	;volatile
  1354  0006                     l1904:
  1355                           
  1356                           ;./ds1307.h: 78:     waitmssp();
  1357  0006  120A  158A  2479  120A  118A  	fcall	_waitmssp
  1358  000B                     l229:
  1359  000B  0008               	return
  1360  000C                     __end_of_rtc_stop:
  1361                           
  1362                           	psect	text4
  1363  0CDB                     __ptext4:	
  1364 ;; *************** function _rtc_send *****************
  1365 ;; Defined at:
  1366 ;;		line 30 in file "./ds1307.h"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  a               1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  a               1    0[COMMON] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         1       0       0       0       0
  1384 ;;Total ram usage:        1 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; Hardware stack levels required when called: 1
  1387 ;; This function calls:
  1388 ;;		_waitmssp
  1389 ;; This function is called by:
  1390 ;;		_rtc_read_byte
  1391 ;;		_rtc_send_byte
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _rtc_send
  1397  0CDB                     _rtc_send:
  1398                           
  1399                           ;incstack = 0
  1400                           ; Regs used in _rtc_send: [wreg+status,2+status,0+pclath+cstack]
  1401                           ;rtc_send@a stored from wreg
  1402  0CDB  00F0               	movwf	rtc_send@a
  1403  0CDC                     l1898:
  1404                           
  1405                           ;./ds1307.h: 30: void rtc_send(unsigned char a);./ds1307.h: 31: {;./ds1307.h: 32:     SS
      +                          PBUF=a;
  1406  0CDC  0870               	movf	rtc_send@a,w
  1407  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0CDF  0093               	movwf	19	;volatile
  1410  0CE0                     l1900:
  1411                           
  1412                           ;./ds1307.h: 33:     waitmssp();
  1413  0CE0  120A  158A  2479  120A  158A  	fcall	_waitmssp
  1414  0CE5                     l207:	
  1415                           ;./ds1307.h: 34:     while(ACKSTAT);
  1416                           
  1417  0CE5  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0CE6  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0CE7  1B11               	btfsc	17,6	;volatile
  1420  0CE8  2CEA               	goto	u1621
  1421  0CE9  2CEB               	goto	u1620
  1422  0CEA                     u1621:
  1423  0CEA  2CE5               	goto	l207
  1424  0CEB                     u1620:
  1425  0CEB                     l210:
  1426  0CEB  0008               	return
  1427  0CEC                     __end_of_rtc_send:
  1428                           
  1429                           	psect	text5
  1430  0C89                     __ptext5:	
  1431 ;; *************** function _rtc_res *****************
  1432 ;; Defined at:
  1433 ;;		line 80 in file "./ds1307.h"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 1
  1454 ;; This function calls:
  1455 ;;		_waitmssp
  1456 ;; This function is called by:
  1457 ;;		_rtc_read_byte
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _rtc_res
  1463  0C89                     _rtc_res:
  1464  0C89                     l1914:	
  1465                           ;incstack = 0
  1466                           ; Regs used in _rtc_res: [status,2+status,0+pclath+cstack]
  1467                           
  1468                           
  1469                           ;./ds1307.h: 82:     RSEN=1;
  1470  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  1471  0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  1472  0C8B  1491               	bsf	17,1	;volatile
  1473  0C8C                     l1916:
  1474                           
  1475                           ;./ds1307.h: 83:     waitmssp();
  1476  0C8C  120A  158A  2479  120A  158A  	fcall	_waitmssp
  1477  0C91                     l232:
  1478  0C91  0008               	return
  1479  0C92                     __end_of_rtc_res:
  1480                           
  1481                           	psect	text6
  1482  0CB3                     __ptext6:	
  1483 ;; *************** function _rtc_read *****************
  1484 ;; Defined at:
  1485 ;;		line 45 in file "./ds1307.h"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      unsigned char 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 1
  1506 ;; This function calls:
  1507 ;;		_waitmssp
  1508 ;; This function is called by:
  1509 ;;		_rtc_read_byte
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _rtc_read
  1515  0CB3                     _rtc_read:
  1516  0CB3                     l1906:	
  1517                           ;incstack = 0
  1518                           ; Regs used in _rtc_read: [wreg+status,2+status,0+pclath+cstack]
  1519                           
  1520                           
  1521                           ;./ds1307.h: 47:     RCEN=1;
  1522  0CB3  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0CB4  1303               	bcf	3,6	;RP1=0, select bank1
  1524  0CB5  1591               	bsf	17,3	;volatile
  1525  0CB6                     l1908:
  1526                           
  1527                           ;./ds1307.h: 48:     waitmssp();
  1528  0CB6  120A  158A  2479  120A  158A  	fcall	_waitmssp
  1529  0CBB                     l1910:
  1530                           
  1531                           ;./ds1307.h: 49:     return SSPBUF;
  1532  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0CBD  0813               	movf	19,w	;volatile
  1535  0CBE                     l216:
  1536  0CBE  0008               	return
  1537  0CBF                     __end_of_rtc_read:
  1538                           
  1539                           	psect	text7
  1540  0C92                     __ptext7:	
  1541 ;; *************** function _rtc_nak *****************
  1542 ;; Defined at:
  1543 ;;		line 91 in file "./ds1307.h"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		status,2, status,0, pclath, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0
  1560 ;;      Totals:         0       0       0       0       0
  1561 ;;Total ram usage:        0 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 1
  1564 ;; This function calls:
  1565 ;;		_waitmssp
  1566 ;; This function is called by:
  1567 ;;		_rtc_read_byte
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _rtc_nak
  1573  0C92                     _rtc_nak:
  1574  0C92                     l1918:	
  1575                           ;incstack = 0
  1576                           ; Regs used in _rtc_nak: [status,2+status,0+pclath+cstack]
  1577                           
  1578                           
  1579                           ;./ds1307.h: 93:     ACKDT=1;
  1580  0C92  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0C93  1303               	bcf	3,6	;RP1=0, select bank1
  1582  0C94  1691               	bsf	17,5	;volatile
  1583                           
  1584                           ;./ds1307.h: 94:     ACKEN=1;
  1585  0C95  1611               	bsf	17,4	;volatile
  1586  0C96                     l1920:
  1587                           
  1588                           ;./ds1307.h: 95:     waitmssp();
  1589  0C96  120A  158A  2479  120A  158A  	fcall	_waitmssp
  1590  0C9B                     l238:
  1591  0C9B  0008               	return
  1592  0C9C                     __end_of_rtc_nak:
  1593                           
  1594                           	psect	text8
  1595  0C79                     __ptext8:	
  1596 ;; *************** function _waitmssp *****************
  1597 ;; Defined at:
  1598 ;;		line 25 in file "./ds1307.h"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		None
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_rtc_send
  1622 ;;		_rtc_read
  1623 ;;		_rtc_read_byte
  1624 ;;		_rtc_stop
  1625 ;;		_rtc_res
  1626 ;;		_rtc_nak
  1627 ;;		_rtc_start
  1628 ;;		_rtc_ack
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _waitmssp
  1634  0C79                     _waitmssp:
  1635  0C79                     l1498:	
  1636                           ;incstack = 0
  1637                           ; Regs used in _waitmssp: []
  1638                           
  1639  0C79                     l201:	
  1640                           ;./ds1307.h: 27:     while(!SSPIF);
  1641                           
  1642  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0C7B  1D8C               	btfss	12,3	;volatile
  1645  0C7C  2C7E               	goto	u901
  1646  0C7D  2C7F               	goto	u900
  1647  0C7E                     u901:
  1648  0C7E  2C79               	goto	l201
  1649  0C7F                     u900:
  1650  0C7F                     l203:
  1651                           
  1652                           ;./ds1307.h: 28:     SSPIF=0;
  1653  0C7F  118C               	bcf	12,3	;volatile
  1654  0C80                     l204:
  1655  0C80  0008               	return
  1656  0C81                     __end_of_waitmssp:
  1657                           
  1658                           	psect	text9
  1659  0CFE                     __ptext9:	
  1660 ;; *************** function _rtc_int *****************
  1661 ;; Defined at:
  1662 ;;		line 19 in file "./ds1307.h"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1676 ;;      Params:         0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0
  1679 ;;      Totals:         0       0       0       0       0
  1680 ;;Total ram usage:        0 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function _rtc_int
  1691  0CFE                     _rtc_int:
  1692  0CFE                     l1930:	
  1693                           ;incstack = 0
  1694                           ; Regs used in _rtc_int: [wreg]
  1695                           
  1696                           
  1697                           ;./ds1307.h: 21:     TRISC3=TRISC4=1;
  1698  0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0CFF  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0D00  1607               	bsf	7,4	;volatile
  1701  0D01  1A07               	btfsc	7,4	;volatile
  1702  0D02  2D04               	goto	u1631
  1703  0D03  2D08               	goto	u1630
  1704  0D04                     u1631:
  1705  0D04  1683               	bsf	3,5	;RP0=1, select bank1
  1706  0D05  1303               	bcf	3,6	;RP1=0, select bank1
  1707  0D06  1587               	bsf	7,3	;volatile
  1708  0D07  2D0B               	goto	u1644
  1709  0D08                     u1630:
  1710  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  1711  0D09  1303               	bcf	3,6	;RP1=0, select bank1
  1712  0D0A  1187               	bcf	7,3	;volatile
  1713  0D0B                     u1644:
  1714  0D0B                     l1932:
  1715                           
  1716                           ;./ds1307.h: 22:     SSPCON=0x28;
  1717  0D0B  3028               	movlw	40
  1718  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0D0E  0094               	movwf	20	;volatile
  1721                           
  1722                           ;./ds1307.h: 23:     SSPADD= (((11059200/4)/100)-1);
  1723  0D0F  30FF               	movlw	255
  1724  0D10  1683               	bsf	3,5	;RP0=1, select bank1
  1725  0D11  1303               	bcf	3,6	;RP1=0, select bank1
  1726  0D12  0093               	movwf	19	;volatile
  1727  0D13                     l198:
  1728  0D13  0008               	return
  1729  0D14                     __end_of_rtc_int:
  1730                           
  1731                           	psect	text10
  1732  0CEC                     __ptext10:	
  1733 ;; *************** function _print_serialnumber *****************
  1734 ;; Defined at:
  1735 ;;		line 121 in file "main.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1749 ;;      Params:         0       0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0
  1752 ;;      Totals:         0       0       0       0       0
  1753 ;;Total ram usage:        0 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 2
  1756 ;; This function calls:
  1757 ;;		_tx
  1758 ;;		_tx_sn
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _print_serialnumber
  1766  0CEC                     _print_serialnumber:
  1767  0CEC                     l1962:	
  1768                           ;incstack = 0
  1769                           ; Regs used in _print_serialnumber: [wreg+status,2+status,0+pclath+cstack]
  1770                           
  1771                           
  1772                           ;main.c: 123:     tx_sn(sn);
  1773  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0CEE  086C               	movf	_sn+1,w
  1776  0CEF  00FA               	movwf	tx_sn@val+1
  1777  0CF0  086B               	movf	_sn,w
  1778  0CF1  00F9               	movwf	tx_sn@val
  1779  0CF2  120A  118A  2655  120A  158A  	fcall	_tx_sn
  1780                           
  1781                           ;main.c: 124:     tx(')');
  1782  0CF7  3029               	movlw	41
  1783  0CF8  120A  158A  249C  120A  158A  	fcall	_tx
  1784  0CFD                     l271:
  1785  0CFD  0008               	return
  1786  0CFE                     __end_of_print_serialnumber:
  1787                           
  1788                           	psect	text11
  1789  025E                     __ptext11:	
  1790 ;; *************** function _print_dht11data *****************
  1791 ;; Defined at:
  1792 ;;		line 151 in file "main.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0
  1808 ;;      Temps:          0       8       0       0       0
  1809 ;;      Totals:         0       8       0       0       0
  1810 ;;Total ram usage:        8 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; Hardware stack levels required when called: 2
  1813 ;; This function calls:
  1814 ;;		_CheckResponse
  1815 ;;		_LCD_Command
  1816 ;;		_ReadData
  1817 ;;		_StartSignal
  1818 ;;		_show
  1819 ;;		_show_multidigits
  1820 ;;		_tx
  1821 ;;		_tx_sn
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           
  1828                           ;psect for function _print_dht11data
  1829  025E                     _print_dht11data:
  1830  025E                     l2002:	
  1831                           ;incstack = 0
  1832                           ; Regs used in _print_dht11data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1833                           
  1834                           
  1835                           ;main.c: 153:         StartSignal();
  1836  025E  120A  158A  2514  120A  118A  	fcall	_StartSignal
  1837                           
  1838                           ;main.c: 154:         CheckResponse();
  1839  0263  120A  118A  200C  120A  118A  	fcall	_CheckResponse
  1840  0268                     l2004:
  1841                           
  1842                           ;main.c: 155:         if(Check == 1)
  1843  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0269  1303               	bcf	3,6	;RP1=0, select bank0
  1845  026A  036A               	decf	_Check,w
  1846  026B  1D03               	btfss	3,2
  1847  026C  2A6E               	goto	u1711
  1848  026D  2A6F               	goto	u1710
  1849  026E                     u1711:
  1850  026E  2AD7               	goto	l2012
  1851  026F                     u1710:
  1852  026F                     l2006:
  1853                           
  1854                           ;main.c: 156:         {;main.c: 157:             RH_byte1 = ReadData();
  1855  026F  120A  158A  2677  120A  118A  	fcall	_ReadData
  1856  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0276  00AE               	movwf	??_print_dht11data
  1859  0277  082E               	movf	??_print_dht11data,w
  1860  0278  00E7               	movwf	_RH_byte1
  1861                           
  1862                           ;main.c: 158:             RH_byte2 = ReadData();
  1863  0279  120A  158A  2677  120A  118A  	fcall	_ReadData
  1864  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1865  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0280  00AE               	movwf	??_print_dht11data
  1867  0281  082E               	movf	??_print_dht11data,w
  1868  0282  00E6               	movwf	_RH_byte2
  1869                           
  1870                           ;main.c: 159:             T_byte1 = ReadData();
  1871  0283  120A  158A  2677  120A  118A  	fcall	_ReadData
  1872  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0289  1303               	bcf	3,6	;RP1=0, select bank0
  1874  028A  00AE               	movwf	??_print_dht11data
  1875  028B  082E               	movf	??_print_dht11data,w
  1876  028C  00E9               	movwf	_T_byte1
  1877                           
  1878                           ;main.c: 160:             T_byte2 = ReadData();
  1879  028D  120A  158A  2677  120A  118A  	fcall	_ReadData
  1880  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0294  00AE               	movwf	??_print_dht11data
  1883  0295  082E               	movf	??_print_dht11data,w
  1884  0296  00E8               	movwf	_T_byte2
  1885                           
  1886                           ;main.c: 161:             Sum = ReadData();
  1887  0297  120A  158A  2677  120A  118A  	fcall	_ReadData
  1888  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1889  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1890  029E  00AE               	movwf	??_print_dht11data
  1891  029F  01AF               	clrf	??_print_dht11data+1
  1892  02A0  082E               	movf	??_print_dht11data,w
  1893  02A1  00D8               	movwf	_Sum
  1894  02A2  082F               	movf	??_print_dht11data+1,w
  1895  02A3  00D9               	movwf	_Sum+1
  1896  02A4                     l2008:
  1897                           
  1898                           ;main.c: 162:             if(Sum == ((RH_byte1+RH_byte2+T_byte1+T_byte2) & 0XFF))
  1899  02A4  0867               	movf	_RH_byte1,w
  1900  02A5  0766               	addwf	_RH_byte2,w
  1901  02A6  00AE               	movwf	??_print_dht11data
  1902  02A7  01AF               	clrf	??_print_dht11data+1
  1903  02A8  0DAF               	rlf	??_print_dht11data+1,f
  1904  02A9  0869               	movf	_T_byte1,w
  1905  02AA  072E               	addwf	??_print_dht11data,w
  1906  02AB  00B0               	movwf	??_print_dht11data+2
  1907  02AC  3000               	movlw	0
  1908  02AD  1803               	skipnc
  1909  02AE  3001               	movlw	1
  1910  02AF  072F               	addwf	??_print_dht11data+1,w
  1911  02B0  00B1               	movwf	??_print_dht11data+3
  1912  02B1  0868               	movf	_T_byte2,w
  1913  02B2  0730               	addwf	??_print_dht11data+2,w
  1914  02B3  00B2               	movwf	??_print_dht11data+4
  1915  02B4  3000               	movlw	0
  1916  02B5  1803               	skipnc
  1917  02B6  3001               	movlw	1
  1918  02B7  0731               	addwf	??_print_dht11data+3,w
  1919  02B8  00B3               	movwf	??_print_dht11data+5
  1920  02B9  30FF               	movlw	255
  1921  02BA  0532               	andwf	??_print_dht11data+4,w
  1922  02BB  00B4               	movwf	??_print_dht11data+6
  1923  02BC  3000               	movlw	0
  1924  02BD  0533               	andwf	??_print_dht11data+5,w
  1925  02BE  00B5               	movwf	??_print_dht11data+7
  1926  02BF  0859               	movf	_Sum+1,w
  1927  02C0  0635               	xorwf	??_print_dht11data+7,w
  1928  02C1  1D03               	skipz
  1929  02C2  2AC5               	goto	u1725
  1930  02C3  0858               	movf	_Sum,w
  1931  02C4  0634               	xorwf	??_print_dht11data+6,w
  1932  02C5                     u1725:
  1933  02C5  1D03               	skipz
  1934  02C6  2AC8               	goto	u1721
  1935  02C7  2AC9               	goto	u1720
  1936  02C8                     u1721:
  1937  02C8  2AD7               	goto	l2012
  1938  02C9                     u1720:
  1939  02C9                     l2010:
  1940                           
  1941                           ;main.c: 163:             {;main.c: 164:                 Temp = T_byte1;
  1942  02C9  0869               	movf	_T_byte1,w
  1943  02CA  00AE               	movwf	??_print_dht11data
  1944  02CB  01AF               	clrf	??_print_dht11data+1
  1945  02CC  082E               	movf	??_print_dht11data,w
  1946  02CD  00DC               	movwf	_Temp
  1947  02CE  082F               	movf	??_print_dht11data+1,w
  1948  02CF  00DD               	movwf	_Temp+1
  1949                           
  1950                           ;main.c: 165:                 RH = RH_byte1;
  1951  02D0  0867               	movf	_RH_byte1,w
  1952  02D1  00AE               	movwf	??_print_dht11data
  1953  02D2  01AF               	clrf	??_print_dht11data+1
  1954  02D3  082E               	movf	??_print_dht11data,w
  1955  02D4  00DA               	movwf	_RH
  1956  02D5  082F               	movf	??_print_dht11data+1,w
  1957  02D6  00DB               	movwf	_RH+1
  1958  02D7                     l2012:
  1959                           
  1960                           ;main.c: 168:         LCD_Command(0x94);
  1961  02D7  3094               	movlw	148
  1962  02D8  120A  158A  25F7  120A  118A  	fcall	_LCD_Command
  1963  02DD                     l2014:
  1964                           
  1965                           ;main.c: 169:         show("Temp:");
  1966  02DD  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1967  02DE  120A  158A  252E  120A  118A  	fcall	_show
  1968  02E3                     l2016:
  1969                           
  1970                           ;main.c: 170:         LCD_Command(0x99);
  1971  02E3  3099               	movlw	153
  1972  02E4  120A  158A  25F7  120A  118A  	fcall	_LCD_Command
  1973  02E9                     l2018:
  1974                           
  1975                           ;main.c: 171:         show_multidigits (Temp);
  1976  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1977  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1978  02EB  085D               	movf	_Temp+1,w
  1979  02EC  00FA               	movwf	show_multidigits@val+1
  1980  02ED  085C               	movf	_Temp,w
  1981  02EE  00F9               	movwf	show_multidigits@val
  1982  02EF  120A  118A  24C3  120A  118A  	fcall	_show_multidigits
  1983  02F4                     l2020:
  1984                           
  1985                           ;main.c: 172:         tx_sn(Temp);
  1986  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1987  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1988  02F6  085D               	movf	_Temp+1,w
  1989  02F7  00FA               	movwf	tx_sn@val+1
  1990  02F8  085C               	movf	_Temp,w
  1991  02F9  00F9               	movwf	tx_sn@val
  1992  02FA  120A  118A  2655  120A  118A  	fcall	_tx_sn
  1993  02FF                     l2022:
  1994                           
  1995                           ;main.c: 173:         tx(',');
  1996  02FF  302C               	movlw	44
  1997  0300  120A  158A  249C  120A  118A  	fcall	_tx
  1998  0305                     l2024:
  1999                           
  2000                           ;main.c: 174:         LCD_Command(0x9D);
  2001  0305  309D               	movlw	157
  2002  0306  120A  158A  25F7  120A  118A  	fcall	_LCD_Command
  2003  030B                     l2026:
  2004                           
  2005                           ;main.c: 175:         show("Humi:");
  2006  030B  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2007  030C  120A  158A  252E  120A  118A  	fcall	_show
  2008  0311                     l2028:
  2009                           
  2010                           ;main.c: 176:         LCD_Command(0xA2);
  2011  0311  30A2               	movlw	162
  2012  0312  120A  158A  25F7  120A  118A  	fcall	_LCD_Command
  2013  0317                     l2030:
  2014                           
  2015                           ;main.c: 177:         show_multidigits(RH);
  2016  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0319  085B               	movf	_RH+1,w
  2019  031A  00FA               	movwf	show_multidigits@val+1
  2020  031B  085A               	movf	_RH,w
  2021  031C  00F9               	movwf	show_multidigits@val
  2022  031D  120A  118A  24C3  120A  118A  	fcall	_show_multidigits
  2023  0322                     l2032:
  2024                           
  2025                           ;main.c: 178:         tx_sn(RH);
  2026  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0324  085B               	movf	_RH+1,w
  2029  0325  00FA               	movwf	tx_sn@val+1
  2030  0326  085A               	movf	_RH,w
  2031  0327  00F9               	movwf	tx_sn@val
  2032  0328  120A  118A  2655  120A  118A  	fcall	_tx_sn
  2033  032D                     l2034:
  2034                           
  2035                           ;main.c: 179:         tx(',');
  2036  032D  302C               	movlw	44
  2037  032E  120A  158A  249C  120A  118A  	fcall	_tx
  2038  0333                     l286:
  2039  0333  0008               	return
  2040  0334                     __end_of_print_dht11data:
  2041                           
  2042                           	psect	text12
  2043  0655                     __ptext12:	
  2044 ;; *************** function _tx_sn *****************
  2045 ;; Defined at:
  2046 ;;		line 27 in file "./uart.h"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  val             2    9[COMMON] unsigned int 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  remainder       2   12[BANK0 ] int 
  2051 ;;  result1         2   10[BANK0 ] int 
  2052 ;;  digit2          2    8[BANK0 ] int 
  2053 ;;  digit1          2    6[BANK0 ] int 
  2054 ;;  digit3          2    4[BANK0 ] int 
  2055 ;;  result          2    2[BANK0 ] int 
  2056 ;;  digit4          2    0[BANK0 ] int 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         2       0       0       0       0
  2067 ;;      Locals:         0      14       0       0       0
  2068 ;;      Temps:          0       0       0       0       0
  2069 ;;      Totals:         2      14       0       0       0
  2070 ;;Total ram usage:       16 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; Hardware stack levels required when called: 1
  2073 ;; This function calls:
  2074 ;;		___awdiv
  2075 ;;		___awmod
  2076 ;;		___lwdiv
  2077 ;;		___lwmod
  2078 ;;		_tx
  2079 ;; This function is called by:
  2080 ;;		_print_serialnumber
  2081 ;;		_print_dht11data
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _tx_sn
  2087  0655                     _tx_sn:
  2088  0655                     l1794:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _tx_sn: [wreg+status,2+status,0+pclath+cstack]
  2091                           
  2092                           
  2093                           ;./uart.h: 27: void tx_sn (unsigned int val);./uart.h: 28: {;./uart.h: 29:     int remai
      +                          nder, digit1, digit2, digit3, digit4, result, result1;;./uart.h: 30:     if (val<=9)
  2094  0655  3000               	movlw	0
  2095  0656  027A               	subwf	tx_sn@val+1,w
  2096  0657  300A               	movlw	10
  2097  0658  1903               	skipnz
  2098  0659  0279               	subwf	tx_sn@val,w
  2099  065A  1803               	skipnc
  2100  065B  2E5D               	goto	u1471
  2101  065C  2E5E               	goto	u1470
  2102  065D                     u1471:
  2103  065D  2E66               	goto	l1798
  2104  065E                     u1470:
  2105  065E                     l1796:
  2106                           
  2107                           ;./uart.h: 31:     {;./uart.h: 32:        tx(val+0x30);
  2108  065E  0879               	movf	tx_sn@val,w
  2109  065F  3E30               	addlw	48
  2110  0660  120A  158A  249C  120A  118A  	fcall	_tx
  2111                           
  2112                           ;./uart.h: 33:     }
  2113  0665  2FE6               	goto	l142
  2114  0666                     l1798:
  2115  0666  3000               	movlw	0
  2116  0667  027A               	subwf	tx_sn@val+1,w
  2117  0668  300A               	movlw	10
  2118  0669  1903               	skipnz
  2119  066A  0279               	subwf	tx_sn@val,w
  2120  066B  1C03               	skipc
  2121  066C  2E6E               	goto	u1481
  2122  066D  2E6F               	goto	u1480
  2123  066E                     u1481:
  2124  066E  2EB3               	goto	l1812
  2125  066F                     u1480:
  2126  066F                     l1800:
  2127  066F  3000               	movlw	0
  2128  0670  027A               	subwf	tx_sn@val+1,w
  2129  0671  3064               	movlw	100
  2130  0672  1903               	skipnz
  2131  0673  0279               	subwf	tx_sn@val,w
  2132  0674  1803               	skipnc
  2133  0675  2E77               	goto	u1491
  2134  0676  2E78               	goto	u1490
  2135  0677                     u1491:
  2136  0677  2EB3               	goto	l1812
  2137  0678                     u1490:
  2138  0678                     l1802:
  2139                           
  2140                           ;./uart.h: 35:     {;./uart.h: 36:         remainder = val % 10;
  2141  0678  300A               	movlw	10
  2142  0679  00F0               	movwf	___lwmod@divisor
  2143  067A  3000               	movlw	0
  2144  067B  00F1               	movwf	___lwmod@divisor+1
  2145  067C  087A               	movf	tx_sn@val+1,w
  2146  067D  00F3               	movwf	___lwmod@dividend+1
  2147  067E  0879               	movf	tx_sn@val,w
  2148  067F  00F2               	movwf	___lwmod@dividend
  2149  0680  120A  158A  2583  120A  118A  	fcall	___lwmod
  2150  0685  0871               	movf	?___lwmod+1,w
  2151  0686  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0687  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0688  00AD               	movwf	tx_sn@remainder+1
  2154  0689  0870               	movf	?___lwmod,w
  2155  068A  00AC               	movwf	tx_sn@remainder
  2156  068B                     l1804:
  2157                           
  2158                           ;./uart.h: 37:         digit1 = remainder;
  2159  068B  082D               	movf	tx_sn@remainder+1,w
  2160  068C  00A7               	movwf	tx_sn@digit1+1
  2161  068D  082C               	movf	tx_sn@remainder,w
  2162  068E  00A6               	movwf	tx_sn@digit1
  2163  068F                     l1806:
  2164                           
  2165                           ;./uart.h: 38:         digit2 = val/10;
  2166  068F  300A               	movlw	10
  2167  0690  00F0               	movwf	___lwdiv@divisor
  2168  0691  3000               	movlw	0
  2169  0692  00F1               	movwf	___lwdiv@divisor+1
  2170  0693  087A               	movf	tx_sn@val+1,w
  2171  0694  00F3               	movwf	___lwdiv@dividend+1
  2172  0695  0879               	movf	tx_sn@val,w
  2173  0696  00F2               	movwf	___lwdiv@dividend
  2174  0697  120A  158A  26B9  120A  118A  	fcall	___lwdiv
  2175  069C  0871               	movf	?___lwdiv+1,w
  2176  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2177  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2178  069F  00A9               	movwf	tx_sn@digit2+1
  2179  06A0  0870               	movf	?___lwdiv,w
  2180  06A1  00A8               	movwf	tx_sn@digit2
  2181  06A2                     l1808:
  2182                           
  2183                           ;./uart.h: 39:         tx(digit2+0x30);
  2184  06A2  0828               	movf	tx_sn@digit2,w
  2185  06A3  3E30               	addlw	48
  2186  06A4  120A  158A  249C  120A  118A  	fcall	_tx
  2187  06A9                     l1810:
  2188                           
  2189                           ;./uart.h: 40:         tx(digit1+0x30);
  2190  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  2191  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  2192  06AB  0826               	movf	tx_sn@digit1,w
  2193  06AC  3E30               	addlw	48
  2194  06AD  120A  158A  249C  120A  118A  	fcall	_tx
  2195                           
  2196                           ;./uart.h: 41:     }
  2197  06B2  2FE6               	goto	l142
  2198  06B3                     l1812:
  2199  06B3  3000               	movlw	0
  2200  06B4  027A               	subwf	tx_sn@val+1,w
  2201  06B5  3064               	movlw	100
  2202  06B6  1903               	skipnz
  2203  06B7  0279               	subwf	tx_sn@val,w
  2204  06B8  1C03               	skipc
  2205  06B9  2EBB               	goto	u1501
  2206  06BA  2EBC               	goto	u1500
  2207  06BB                     u1501:
  2208  06BB  2F33               	goto	l1830
  2209  06BC                     u1500:
  2210  06BC                     l1814:
  2211  06BC  3003               	movlw	3
  2212  06BD  027A               	subwf	tx_sn@val+1,w
  2213  06BE  30E8               	movlw	232
  2214  06BF  1903               	skipnz
  2215  06C0  0279               	subwf	tx_sn@val,w
  2216  06C1  1803               	skipnc
  2217  06C2  2EC4               	goto	u1511
  2218  06C3  2EC5               	goto	u1510
  2219  06C4                     u1511:
  2220  06C4  2F33               	goto	l1830
  2221  06C5                     u1510:
  2222  06C5                     l1816:
  2223                           
  2224                           ;./uart.h: 43:     {;./uart.h: 44:         remainder = val % 10;
  2225  06C5  300A               	movlw	10
  2226  06C6  00F0               	movwf	___lwmod@divisor
  2227  06C7  3000               	movlw	0
  2228  06C8  00F1               	movwf	___lwmod@divisor+1
  2229  06C9  087A               	movf	tx_sn@val+1,w
  2230  06CA  00F3               	movwf	___lwmod@dividend+1
  2231  06CB  0879               	movf	tx_sn@val,w
  2232  06CC  00F2               	movwf	___lwmod@dividend
  2233  06CD  120A  158A  2583  120A  118A  	fcall	___lwmod
  2234  06D2  0871               	movf	?___lwmod+1,w
  2235  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2236  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2237  06D5  00AD               	movwf	tx_sn@remainder+1
  2238  06D6  0870               	movf	?___lwmod,w
  2239  06D7  00AC               	movwf	tx_sn@remainder
  2240                           
  2241                           ;./uart.h: 45:         result1 = val /10;
  2242  06D8  300A               	movlw	10
  2243  06D9  00F0               	movwf	___lwdiv@divisor
  2244  06DA  3000               	movlw	0
  2245  06DB  00F1               	movwf	___lwdiv@divisor+1
  2246  06DC  087A               	movf	tx_sn@val+1,w
  2247  06DD  00F3               	movwf	___lwdiv@dividend+1
  2248  06DE  0879               	movf	tx_sn@val,w
  2249  06DF  00F2               	movwf	___lwdiv@dividend
  2250  06E0  120A  158A  26B9  120A  118A  	fcall	___lwdiv
  2251  06E5  0871               	movf	?___lwdiv+1,w
  2252  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2253  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2254  06E8  00AB               	movwf	tx_sn@result1+1
  2255  06E9  0870               	movf	?___lwdiv,w
  2256  06EA  00AA               	movwf	tx_sn@result1
  2257  06EB                     l1818:
  2258                           
  2259                           ;./uart.h: 46:         digit1 = remainder;
  2260  06EB  082D               	movf	tx_sn@remainder+1,w
  2261  06EC  00A7               	movwf	tx_sn@digit1+1
  2262  06ED  082C               	movf	tx_sn@remainder,w
  2263  06EE  00A6               	movwf	tx_sn@digit1
  2264  06EF                     l1820:
  2265                           
  2266                           ;./uart.h: 47:         remainder = result1%10;
  2267  06EF  300A               	movlw	10
  2268  06F0  00F0               	movwf	___awmod@divisor
  2269  06F1  3000               	movlw	0
  2270  06F2  00F1               	movwf	___awmod@divisor+1
  2271  06F3  082B               	movf	tx_sn@result1+1,w
  2272  06F4  00F3               	movwf	___awmod@dividend+1
  2273  06F5  082A               	movf	tx_sn@result1,w
  2274  06F6  00F2               	movwf	___awmod@dividend
  2275  06F7  120A  158A  2743  120A  118A  	fcall	___awmod
  2276  06FC  0871               	movf	?___awmod+1,w
  2277  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  2278  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  2279  06FF  00AD               	movwf	tx_sn@remainder+1
  2280  0700  0870               	movf	?___awmod,w
  2281  0701  00AC               	movwf	tx_sn@remainder
  2282                           
  2283                           ;./uart.h: 48:         digit2 = remainder;
  2284  0702  082D               	movf	tx_sn@remainder+1,w
  2285  0703  00A9               	movwf	tx_sn@digit2+1
  2286  0704  082C               	movf	tx_sn@remainder,w
  2287  0705  00A8               	movwf	tx_sn@digit2
  2288  0706                     l1822:
  2289                           
  2290                           ;./uart.h: 49:         digit3 = result1/10;
  2291  0706  300A               	movlw	10
  2292  0707  00F0               	movwf	___awdiv@divisor
  2293  0708  3000               	movlw	0
  2294  0709  00F1               	movwf	___awdiv@divisor+1
  2295  070A  082B               	movf	tx_sn@result1+1,w
  2296  070B  00F3               	movwf	___awdiv@dividend+1
  2297  070C  082A               	movf	tx_sn@result1,w
  2298  070D  00F2               	movwf	___awdiv@dividend
  2299  070E  120A  118A  202D  120A  118A  	fcall	___awdiv
  2300  0713  0871               	movf	?___awdiv+1,w
  2301  0714  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0715  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0716  00A5               	movwf	tx_sn@digit3+1
  2304  0717  0870               	movf	?___awdiv,w
  2305  0718  00A4               	movwf	tx_sn@digit3
  2306  0719                     l1824:
  2307                           
  2308                           ;./uart.h: 50:         tx(digit3+0x30);
  2309  0719  0824               	movf	tx_sn@digit3,w
  2310  071A  3E30               	addlw	48
  2311  071B  120A  158A  249C  120A  118A  	fcall	_tx
  2312  0720                     l1826:
  2313                           
  2314                           ;./uart.h: 51:         tx(digit2+0x30);
  2315  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0721  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0722  0828               	movf	tx_sn@digit2,w
  2318  0723  3E30               	addlw	48
  2319  0724  120A  158A  249C  120A  118A  	fcall	_tx
  2320  0729                     l1828:
  2321                           
  2322                           ;./uart.h: 52:         tx(digit1+0x30);
  2323  0729  1283               	bcf	3,5	;RP0=0, select bank0
  2324  072A  1303               	bcf	3,6	;RP1=0, select bank0
  2325  072B  0826               	movf	tx_sn@digit1,w
  2326  072C  3E30               	addlw	48
  2327  072D  120A  158A  249C  120A  118A  	fcall	_tx
  2328                           
  2329                           ;./uart.h: 53:     }
  2330  0732  2FE6               	goto	l142
  2331  0733                     l1830:
  2332  0733  3003               	movlw	3
  2333  0734  027A               	subwf	tx_sn@val+1,w
  2334  0735  30E8               	movlw	232
  2335  0736  1903               	skipnz
  2336  0737  0279               	subwf	tx_sn@val,w
  2337  0738  1C03               	skipc
  2338  0739  2F3B               	goto	u1521
  2339  073A  2F3C               	goto	u1520
  2340  073B                     u1521:
  2341  073B  2FE6               	goto	l138
  2342  073C                     u1520:
  2343  073C                     l1832:
  2344  073C  3027               	movlw	39
  2345  073D  027A               	subwf	tx_sn@val+1,w
  2346  073E  300F               	movlw	15
  2347  073F  1903               	skipnz
  2348  0740  0279               	subwf	tx_sn@val,w
  2349  0741  1803               	skipnc
  2350  0742  2F44               	goto	u1531
  2351  0743  2F45               	goto	u1530
  2352  0744                     u1531:
  2353  0744  2FE6               	goto	l138
  2354  0745                     u1530:
  2355  0745                     l1834:
  2356                           
  2357                           ;./uart.h: 55:     {;./uart.h: 56:         remainder = val % 10;
  2358  0745  300A               	movlw	10
  2359  0746  00F0               	movwf	___lwmod@divisor
  2360  0747  3000               	movlw	0
  2361  0748  00F1               	movwf	___lwmod@divisor+1
  2362  0749  087A               	movf	tx_sn@val+1,w
  2363  074A  00F3               	movwf	___lwmod@dividend+1
  2364  074B  0879               	movf	tx_sn@val,w
  2365  074C  00F2               	movwf	___lwmod@dividend
  2366  074D  120A  158A  2583  120A  118A  	fcall	___lwmod
  2367  0752  0871               	movf	?___lwmod+1,w
  2368  0753  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0754  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0755  00AD               	movwf	tx_sn@remainder+1
  2371  0756  0870               	movf	?___lwmod,w
  2372  0757  00AC               	movwf	tx_sn@remainder
  2373                           
  2374                           ;./uart.h: 57:         result1 = val /10;
  2375  0758  300A               	movlw	10
  2376  0759  00F0               	movwf	___lwdiv@divisor
  2377  075A  3000               	movlw	0
  2378  075B  00F1               	movwf	___lwdiv@divisor+1
  2379  075C  087A               	movf	tx_sn@val+1,w
  2380  075D  00F3               	movwf	___lwdiv@dividend+1
  2381  075E  0879               	movf	tx_sn@val,w
  2382  075F  00F2               	movwf	___lwdiv@dividend
  2383  0760  120A  158A  26B9  120A  118A  	fcall	___lwdiv
  2384  0765  0871               	movf	?___lwdiv+1,w
  2385  0766  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0767  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0768  00AB               	movwf	tx_sn@result1+1
  2388  0769  0870               	movf	?___lwdiv,w
  2389  076A  00AA               	movwf	tx_sn@result1
  2390  076B                     l1836:
  2391                           
  2392                           ;./uart.h: 58:         digit1 = remainder;
  2393  076B  082D               	movf	tx_sn@remainder+1,w
  2394  076C  00A7               	movwf	tx_sn@digit1+1
  2395  076D  082C               	movf	tx_sn@remainder,w
  2396  076E  00A6               	movwf	tx_sn@digit1
  2397  076F                     l1838:
  2398                           
  2399                           ;./uart.h: 59:         remainder = result1%10;
  2400  076F  300A               	movlw	10
  2401  0770  00F0               	movwf	___awmod@divisor
  2402  0771  3000               	movlw	0
  2403  0772  00F1               	movwf	___awmod@divisor+1
  2404  0773  082B               	movf	tx_sn@result1+1,w
  2405  0774  00F3               	movwf	___awmod@dividend+1
  2406  0775  082A               	movf	tx_sn@result1,w
  2407  0776  00F2               	movwf	___awmod@dividend
  2408  0777  120A  158A  2743  120A  118A  	fcall	___awmod
  2409  077C  0871               	movf	?___awmod+1,w
  2410  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2411  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2412  077F  00AD               	movwf	tx_sn@remainder+1
  2413  0780  0870               	movf	?___awmod,w
  2414  0781  00AC               	movwf	tx_sn@remainder
  2415                           
  2416                           ;./uart.h: 60:         digit2 = remainder;
  2417  0782  082D               	movf	tx_sn@remainder+1,w
  2418  0783  00A9               	movwf	tx_sn@digit2+1
  2419  0784  082C               	movf	tx_sn@remainder,w
  2420  0785  00A8               	movwf	tx_sn@digit2
  2421  0786                     l1840:
  2422                           
  2423                           ;./uart.h: 61:         result = result1/10;
  2424  0786  300A               	movlw	10
  2425  0787  00F0               	movwf	___awdiv@divisor
  2426  0788  3000               	movlw	0
  2427  0789  00F1               	movwf	___awdiv@divisor+1
  2428  078A  082B               	movf	tx_sn@result1+1,w
  2429  078B  00F3               	movwf	___awdiv@dividend+1
  2430  078C  082A               	movf	tx_sn@result1,w
  2431  078D  00F2               	movwf	___awdiv@dividend
  2432  078E  120A  118A  202D  120A  118A  	fcall	___awdiv
  2433  0793  0871               	movf	?___awdiv+1,w
  2434  0794  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0795  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0796  00A3               	movwf	tx_sn@result+1
  2437  0797  0870               	movf	?___awdiv,w
  2438  0798  00A2               	movwf	tx_sn@result
  2439  0799                     l1842:
  2440                           
  2441                           ;./uart.h: 62:         remainder = result%10;
  2442  0799  300A               	movlw	10
  2443  079A  00F0               	movwf	___awmod@divisor
  2444  079B  3000               	movlw	0
  2445  079C  00F1               	movwf	___awmod@divisor+1
  2446  079D  0823               	movf	tx_sn@result+1,w
  2447  079E  00F3               	movwf	___awmod@dividend+1
  2448  079F  0822               	movf	tx_sn@result,w
  2449  07A0  00F2               	movwf	___awmod@dividend
  2450  07A1  120A  158A  2743  120A  118A  	fcall	___awmod
  2451  07A6  0871               	movf	?___awmod+1,w
  2452  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  2453  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  2454  07A9  00AD               	movwf	tx_sn@remainder+1
  2455  07AA  0870               	movf	?___awmod,w
  2456  07AB  00AC               	movwf	tx_sn@remainder
  2457                           
  2458                           ;./uart.h: 63:         digit3=remainder;
  2459  07AC  082D               	movf	tx_sn@remainder+1,w
  2460  07AD  00A5               	movwf	tx_sn@digit3+1
  2461  07AE  082C               	movf	tx_sn@remainder,w
  2462  07AF  00A4               	movwf	tx_sn@digit3
  2463  07B0                     l1844:
  2464                           
  2465                           ;./uart.h: 64:         digit4 = result/10;
  2466  07B0  300A               	movlw	10
  2467  07B1  00F0               	movwf	___awdiv@divisor
  2468  07B2  3000               	movlw	0
  2469  07B3  00F1               	movwf	___awdiv@divisor+1
  2470  07B4  0823               	movf	tx_sn@result+1,w
  2471  07B5  00F3               	movwf	___awdiv@dividend+1
  2472  07B6  0822               	movf	tx_sn@result,w
  2473  07B7  00F2               	movwf	___awdiv@dividend
  2474  07B8  120A  118A  202D  120A  118A  	fcall	___awdiv
  2475  07BD  0871               	movf	?___awdiv+1,w
  2476  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  2477  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  2478  07C0  00A1               	movwf	tx_sn@digit4+1
  2479  07C1  0870               	movf	?___awdiv,w
  2480  07C2  00A0               	movwf	tx_sn@digit4
  2481  07C3                     l1846:
  2482                           
  2483                           ;./uart.h: 65:         tx(digit4+0x30);
  2484  07C3  0820               	movf	tx_sn@digit4,w
  2485  07C4  3E30               	addlw	48
  2486  07C5  120A  158A  249C  120A  118A  	fcall	_tx
  2487  07CA                     l1848:
  2488                           
  2489                           ;./uart.h: 66:         tx(digit3+0x30);
  2490  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  2491  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  2492  07CC  0824               	movf	tx_sn@digit3,w
  2493  07CD  3E30               	addlw	48
  2494  07CE  120A  158A  249C  120A  118A  	fcall	_tx
  2495  07D3                     l1850:
  2496                           
  2497                           ;./uart.h: 67:         tx(digit2+0x30);
  2498  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  2499  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  2500  07D5  0828               	movf	tx_sn@digit2,w
  2501  07D6  3E30               	addlw	48
  2502  07D7  120A  158A  249C  120A  118A  	fcall	_tx
  2503  07DC                     l1852:
  2504                           
  2505                           ;./uart.h: 68:         tx(digit1+0x30);
  2506  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  2507  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  2508  07DE  0826               	movf	tx_sn@digit1,w
  2509  07DF  3E30               	addlw	48
  2510  07E0  120A  158A  249C  120A  118A  	fcall	_tx
  2511  07E5  2FE6               	goto	l142
  2512  07E6                     l138:
  2513  07E6                     l142:
  2514  07E6  0008               	return
  2515  07E7                     __end_of_tx_sn:
  2516                           
  2517                           	psect	text13
  2518  04C3                     __ptext13:	
  2519 ;; *************** function _show_multidigits *****************
  2520 ;; Defined at:
  2521 ;;		line 93 in file "./lcd4bit.h"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  val             2    9[COMMON] unsigned int 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  remainder       2   12[BANK0 ] int 
  2526 ;;  result1         2   10[BANK0 ] int 
  2527 ;;  digit2          2    8[BANK0 ] int 
  2528 ;;  digit1          2    6[BANK0 ] int 
  2529 ;;  digit3          2    4[BANK0 ] int 
  2530 ;;  result          2    2[BANK0 ] int 
  2531 ;;  digit4          2    0[BANK0 ] int 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         2       0       0       0       0
  2542 ;;      Locals:         0      14       0       0       0
  2543 ;;      Temps:          0       0       0       0       0
  2544 ;;      Totals:         2      14       0       0       0
  2545 ;;Total ram usage:       16 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 1
  2548 ;; This function calls:
  2549 ;;		_LCD_Char
  2550 ;;		___awdiv
  2551 ;;		___awmod
  2552 ;;		___lwdiv
  2553 ;;		___lwmod
  2554 ;; This function is called by:
  2555 ;;		_print_dht11data
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function _show_multidigits
  2561  04C3                     _show_multidigits:
  2562  04C3                     l1734:	
  2563                           ;incstack = 0
  2564                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  2565                           
  2566                           
  2567                           ;./lcd4bit.h: 93: void show_multidigits (unsigned int val);./lcd4bit.h: 94: {;./lcd4bit.
      +                          h: 95:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          96:     if (val<=9)
  2568  04C3  3000               	movlw	0
  2569  04C4  027A               	subwf	show_multidigits@val+1,w
  2570  04C5  300A               	movlw	10
  2571  04C6  1903               	skipnz
  2572  04C7  0279               	subwf	show_multidigits@val,w
  2573  04C8  1803               	skipnc
  2574  04C9  2CCB               	goto	u1401
  2575  04CA  2CCC               	goto	u1400
  2576  04CB                     u1401:
  2577  04CB  2CD4               	goto	l1738
  2578  04CC                     u1400:
  2579  04CC                     l1736:
  2580                           
  2581                           ;./lcd4bit.h: 97:     {;./lcd4bit.h: 98:        LCD_Char(val+0x30);
  2582  04CC  0879               	movf	show_multidigits@val,w
  2583  04CD  3E30               	addlw	48
  2584  04CE  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2585                           
  2586                           ;./lcd4bit.h: 99:     }
  2587  04D3  2E54               	goto	l117
  2588  04D4                     l1738:
  2589  04D4  3000               	movlw	0
  2590  04D5  027A               	subwf	show_multidigits@val+1,w
  2591  04D6  300A               	movlw	10
  2592  04D7  1903               	skipnz
  2593  04D8  0279               	subwf	show_multidigits@val,w
  2594  04D9  1C03               	skipc
  2595  04DA  2CDC               	goto	u1411
  2596  04DB  2CDD               	goto	u1410
  2597  04DC                     u1411:
  2598  04DC  2D21               	goto	l1752
  2599  04DD                     u1410:
  2600  04DD                     l1740:
  2601  04DD  3000               	movlw	0
  2602  04DE  027A               	subwf	show_multidigits@val+1,w
  2603  04DF  3064               	movlw	100
  2604  04E0  1903               	skipnz
  2605  04E1  0279               	subwf	show_multidigits@val,w
  2606  04E2  1803               	skipnc
  2607  04E3  2CE5               	goto	u1421
  2608  04E4  2CE6               	goto	u1420
  2609  04E5                     u1421:
  2610  04E5  2D21               	goto	l1752
  2611  04E6                     u1420:
  2612  04E6                     l1742:
  2613                           
  2614                           ;./lcd4bit.h: 101:     {;./lcd4bit.h: 102:         remainder = val % 10;
  2615  04E6  300A               	movlw	10
  2616  04E7  00F0               	movwf	___lwmod@divisor
  2617  04E8  3000               	movlw	0
  2618  04E9  00F1               	movwf	___lwmod@divisor+1
  2619  04EA  087A               	movf	show_multidigits@val+1,w
  2620  04EB  00F3               	movwf	___lwmod@dividend+1
  2621  04EC  0879               	movf	show_multidigits@val,w
  2622  04ED  00F2               	movwf	___lwmod@dividend
  2623  04EE  120A  158A  2583  120A  118A  	fcall	___lwmod
  2624  04F3  0871               	movf	?___lwmod+1,w
  2625  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2626  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2627  04F6  00AD               	movwf	show_multidigits@remainder+1
  2628  04F7  0870               	movf	?___lwmod,w
  2629  04F8  00AC               	movwf	show_multidigits@remainder
  2630  04F9                     l1744:
  2631                           
  2632                           ;./lcd4bit.h: 103:         digit1 = remainder;
  2633  04F9  082D               	movf	show_multidigits@remainder+1,w
  2634  04FA  00A7               	movwf	show_multidigits@digit1+1
  2635  04FB  082C               	movf	show_multidigits@remainder,w
  2636  04FC  00A6               	movwf	show_multidigits@digit1
  2637  04FD                     l1746:
  2638                           
  2639                           ;./lcd4bit.h: 104:         digit2 = val/10;
  2640  04FD  300A               	movlw	10
  2641  04FE  00F0               	movwf	___lwdiv@divisor
  2642  04FF  3000               	movlw	0
  2643  0500  00F1               	movwf	___lwdiv@divisor+1
  2644  0501  087A               	movf	show_multidigits@val+1,w
  2645  0502  00F3               	movwf	___lwdiv@dividend+1
  2646  0503  0879               	movf	show_multidigits@val,w
  2647  0504  00F2               	movwf	___lwdiv@dividend
  2648  0505  120A  158A  26B9  120A  118A  	fcall	___lwdiv
  2649  050A  0871               	movf	?___lwdiv+1,w
  2650  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2651  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2652  050D  00A9               	movwf	show_multidigits@digit2+1
  2653  050E  0870               	movf	?___lwdiv,w
  2654  050F  00A8               	movwf	show_multidigits@digit2
  2655  0510                     l1748:
  2656                           
  2657                           ;./lcd4bit.h: 105:         LCD_Char(digit2+0x30);
  2658  0510  0828               	movf	show_multidigits@digit2,w
  2659  0511  3E30               	addlw	48
  2660  0512  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2661  0517                     l1750:
  2662                           
  2663                           ;./lcd4bit.h: 106:         LCD_Char(digit1+0x30);
  2664  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0519  0826               	movf	show_multidigits@digit1,w
  2667  051A  3E30               	addlw	48
  2668  051B  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2669                           
  2670                           ;./lcd4bit.h: 107:     }
  2671  0520  2E54               	goto	l117
  2672  0521                     l1752:
  2673  0521  3000               	movlw	0
  2674  0522  027A               	subwf	show_multidigits@val+1,w
  2675  0523  3064               	movlw	100
  2676  0524  1903               	skipnz
  2677  0525  0279               	subwf	show_multidigits@val,w
  2678  0526  1C03               	skipc
  2679  0527  2D29               	goto	u1431
  2680  0528  2D2A               	goto	u1430
  2681  0529                     u1431:
  2682  0529  2DA1               	goto	l1770
  2683  052A                     u1430:
  2684  052A                     l1754:
  2685  052A  3003               	movlw	3
  2686  052B  027A               	subwf	show_multidigits@val+1,w
  2687  052C  30E8               	movlw	232
  2688  052D  1903               	skipnz
  2689  052E  0279               	subwf	show_multidigits@val,w
  2690  052F  1803               	skipnc
  2691  0530  2D32               	goto	u1441
  2692  0531  2D33               	goto	u1440
  2693  0532                     u1441:
  2694  0532  2DA1               	goto	l1770
  2695  0533                     u1440:
  2696  0533                     l1756:
  2697                           
  2698                           ;./lcd4bit.h: 109:     {;./lcd4bit.h: 110:         remainder = val % 10;
  2699  0533  300A               	movlw	10
  2700  0534  00F0               	movwf	___lwmod@divisor
  2701  0535  3000               	movlw	0
  2702  0536  00F1               	movwf	___lwmod@divisor+1
  2703  0537  087A               	movf	show_multidigits@val+1,w
  2704  0538  00F3               	movwf	___lwmod@dividend+1
  2705  0539  0879               	movf	show_multidigits@val,w
  2706  053A  00F2               	movwf	___lwmod@dividend
  2707  053B  120A  158A  2583  120A  118A  	fcall	___lwmod
  2708  0540  0871               	movf	?___lwmod+1,w
  2709  0541  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0542  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0543  00AD               	movwf	show_multidigits@remainder+1
  2712  0544  0870               	movf	?___lwmod,w
  2713  0545  00AC               	movwf	show_multidigits@remainder
  2714                           
  2715                           ;./lcd4bit.h: 111:         result1 = val /10;
  2716  0546  300A               	movlw	10
  2717  0547  00F0               	movwf	___lwdiv@divisor
  2718  0548  3000               	movlw	0
  2719  0549  00F1               	movwf	___lwdiv@divisor+1
  2720  054A  087A               	movf	show_multidigits@val+1,w
  2721  054B  00F3               	movwf	___lwdiv@dividend+1
  2722  054C  0879               	movf	show_multidigits@val,w
  2723  054D  00F2               	movwf	___lwdiv@dividend
  2724  054E  120A  158A  26B9  120A  118A  	fcall	___lwdiv
  2725  0553  0871               	movf	?___lwdiv+1,w
  2726  0554  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0555  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0556  00AB               	movwf	show_multidigits@result1+1
  2729  0557  0870               	movf	?___lwdiv,w
  2730  0558  00AA               	movwf	show_multidigits@result1
  2731  0559                     l1758:
  2732                           
  2733                           ;./lcd4bit.h: 112:         digit1 = remainder;
  2734  0559  082D               	movf	show_multidigits@remainder+1,w
  2735  055A  00A7               	movwf	show_multidigits@digit1+1
  2736  055B  082C               	movf	show_multidigits@remainder,w
  2737  055C  00A6               	movwf	show_multidigits@digit1
  2738  055D                     l1760:
  2739                           
  2740                           ;./lcd4bit.h: 113:         remainder = result1%10;
  2741  055D  300A               	movlw	10
  2742  055E  00F0               	movwf	___awmod@divisor
  2743  055F  3000               	movlw	0
  2744  0560  00F1               	movwf	___awmod@divisor+1
  2745  0561  082B               	movf	show_multidigits@result1+1,w
  2746  0562  00F3               	movwf	___awmod@dividend+1
  2747  0563  082A               	movf	show_multidigits@result1,w
  2748  0564  00F2               	movwf	___awmod@dividend
  2749  0565  120A  158A  2743  120A  118A  	fcall	___awmod
  2750  056A  0871               	movf	?___awmod+1,w
  2751  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2752  056C  1303               	bcf	3,6	;RP1=0, select bank0
  2753  056D  00AD               	movwf	show_multidigits@remainder+1
  2754  056E  0870               	movf	?___awmod,w
  2755  056F  00AC               	movwf	show_multidigits@remainder
  2756                           
  2757                           ;./lcd4bit.h: 114:         digit2 = remainder;
  2758  0570  082D               	movf	show_multidigits@remainder+1,w
  2759  0571  00A9               	movwf	show_multidigits@digit2+1
  2760  0572  082C               	movf	show_multidigits@remainder,w
  2761  0573  00A8               	movwf	show_multidigits@digit2
  2762  0574                     l1762:
  2763                           
  2764                           ;./lcd4bit.h: 115:         digit3 = result1/10;
  2765  0574  300A               	movlw	10
  2766  0575  00F0               	movwf	___awdiv@divisor
  2767  0576  3000               	movlw	0
  2768  0577  00F1               	movwf	___awdiv@divisor+1
  2769  0578  082B               	movf	show_multidigits@result1+1,w
  2770  0579  00F3               	movwf	___awdiv@dividend+1
  2771  057A  082A               	movf	show_multidigits@result1,w
  2772  057B  00F2               	movwf	___awdiv@dividend
  2773  057C  120A  118A  202D  120A  118A  	fcall	___awdiv
  2774  0581  0871               	movf	?___awdiv+1,w
  2775  0582  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0583  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0584  00A5               	movwf	show_multidigits@digit3+1
  2778  0585  0870               	movf	?___awdiv,w
  2779  0586  00A4               	movwf	show_multidigits@digit3
  2780  0587                     l1764:
  2781                           
  2782                           ;./lcd4bit.h: 116:         LCD_Char(digit3+0x30);
  2783  0587  0824               	movf	show_multidigits@digit3,w
  2784  0588  3E30               	addlw	48
  2785  0589  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2786  058E                     l1766:
  2787                           
  2788                           ;./lcd4bit.h: 117:         LCD_Char(digit2+0x30);
  2789  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2790  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0590  0828               	movf	show_multidigits@digit2,w
  2792  0591  3E30               	addlw	48
  2793  0592  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2794  0597                     l1768:
  2795                           
  2796                           ;./lcd4bit.h: 118:         LCD_Char(digit1+0x30);
  2797  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0599  0826               	movf	show_multidigits@digit1,w
  2800  059A  3E30               	addlw	48
  2801  059B  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2802                           
  2803                           ;./lcd4bit.h: 119:     }
  2804  05A0  2E54               	goto	l117
  2805  05A1                     l1770:
  2806  05A1  3003               	movlw	3
  2807  05A2  027A               	subwf	show_multidigits@val+1,w
  2808  05A3  30E8               	movlw	232
  2809  05A4  1903               	skipnz
  2810  05A5  0279               	subwf	show_multidigits@val,w
  2811  05A6  1C03               	skipc
  2812  05A7  2DA9               	goto	u1451
  2813  05A8  2DAA               	goto	u1450
  2814  05A9                     u1451:
  2815  05A9  2E54               	goto	l113
  2816  05AA                     u1450:
  2817  05AA                     l1772:
  2818  05AA  3027               	movlw	39
  2819  05AB  027A               	subwf	show_multidigits@val+1,w
  2820  05AC  300F               	movlw	15
  2821  05AD  1903               	skipnz
  2822  05AE  0279               	subwf	show_multidigits@val,w
  2823  05AF  1803               	skipnc
  2824  05B0  2DB2               	goto	u1461
  2825  05B1  2DB3               	goto	u1460
  2826  05B2                     u1461:
  2827  05B2  2E54               	goto	l113
  2828  05B3                     u1460:
  2829  05B3                     l1774:
  2830                           
  2831                           ;./lcd4bit.h: 121:     {;./lcd4bit.h: 122:         remainder = val % 10;
  2832  05B3  300A               	movlw	10
  2833  05B4  00F0               	movwf	___lwmod@divisor
  2834  05B5  3000               	movlw	0
  2835  05B6  00F1               	movwf	___lwmod@divisor+1
  2836  05B7  087A               	movf	show_multidigits@val+1,w
  2837  05B8  00F3               	movwf	___lwmod@dividend+1
  2838  05B9  0879               	movf	show_multidigits@val,w
  2839  05BA  00F2               	movwf	___lwmod@dividend
  2840  05BB  120A  158A  2583  120A  118A  	fcall	___lwmod
  2841  05C0  0871               	movf	?___lwmod+1,w
  2842  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2843  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2844  05C3  00AD               	movwf	show_multidigits@remainder+1
  2845  05C4  0870               	movf	?___lwmod,w
  2846  05C5  00AC               	movwf	show_multidigits@remainder
  2847                           
  2848                           ;./lcd4bit.h: 123:         result1 = val /10;
  2849  05C6  300A               	movlw	10
  2850  05C7  00F0               	movwf	___lwdiv@divisor
  2851  05C8  3000               	movlw	0
  2852  05C9  00F1               	movwf	___lwdiv@divisor+1
  2853  05CA  087A               	movf	show_multidigits@val+1,w
  2854  05CB  00F3               	movwf	___lwdiv@dividend+1
  2855  05CC  0879               	movf	show_multidigits@val,w
  2856  05CD  00F2               	movwf	___lwdiv@dividend
  2857  05CE  120A  158A  26B9  120A  118A  	fcall	___lwdiv
  2858  05D3  0871               	movf	?___lwdiv+1,w
  2859  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2860  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2861  05D6  00AB               	movwf	show_multidigits@result1+1
  2862  05D7  0870               	movf	?___lwdiv,w
  2863  05D8  00AA               	movwf	show_multidigits@result1
  2864  05D9                     l1776:
  2865                           
  2866                           ;./lcd4bit.h: 124:         digit1 = remainder;
  2867  05D9  082D               	movf	show_multidigits@remainder+1,w
  2868  05DA  00A7               	movwf	show_multidigits@digit1+1
  2869  05DB  082C               	movf	show_multidigits@remainder,w
  2870  05DC  00A6               	movwf	show_multidigits@digit1
  2871  05DD                     l1778:
  2872                           
  2873                           ;./lcd4bit.h: 125:         remainder = result1%10;
  2874  05DD  300A               	movlw	10
  2875  05DE  00F0               	movwf	___awmod@divisor
  2876  05DF  3000               	movlw	0
  2877  05E0  00F1               	movwf	___awmod@divisor+1
  2878  05E1  082B               	movf	show_multidigits@result1+1,w
  2879  05E2  00F3               	movwf	___awmod@dividend+1
  2880  05E3  082A               	movf	show_multidigits@result1,w
  2881  05E4  00F2               	movwf	___awmod@dividend
  2882  05E5  120A  158A  2743  120A  118A  	fcall	___awmod
  2883  05EA  0871               	movf	?___awmod+1,w
  2884  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2885  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2886  05ED  00AD               	movwf	show_multidigits@remainder+1
  2887  05EE  0870               	movf	?___awmod,w
  2888  05EF  00AC               	movwf	show_multidigits@remainder
  2889                           
  2890                           ;./lcd4bit.h: 126:         digit2 = remainder;
  2891  05F0  082D               	movf	show_multidigits@remainder+1,w
  2892  05F1  00A9               	movwf	show_multidigits@digit2+1
  2893  05F2  082C               	movf	show_multidigits@remainder,w
  2894  05F3  00A8               	movwf	show_multidigits@digit2
  2895  05F4                     l1780:
  2896                           
  2897                           ;./lcd4bit.h: 127:         result = result1/10;
  2898  05F4  300A               	movlw	10
  2899  05F5  00F0               	movwf	___awdiv@divisor
  2900  05F6  3000               	movlw	0
  2901  05F7  00F1               	movwf	___awdiv@divisor+1
  2902  05F8  082B               	movf	show_multidigits@result1+1,w
  2903  05F9  00F3               	movwf	___awdiv@dividend+1
  2904  05FA  082A               	movf	show_multidigits@result1,w
  2905  05FB  00F2               	movwf	___awdiv@dividend
  2906  05FC  120A  118A  202D  120A  118A  	fcall	___awdiv
  2907  0601  0871               	movf	?___awdiv+1,w
  2908  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0604  00A3               	movwf	show_multidigits@result+1
  2911  0605  0870               	movf	?___awdiv,w
  2912  0606  00A2               	movwf	show_multidigits@result
  2913  0607                     l1782:
  2914                           
  2915                           ;./lcd4bit.h: 128:         remainder = result%10;
  2916  0607  300A               	movlw	10
  2917  0608  00F0               	movwf	___awmod@divisor
  2918  0609  3000               	movlw	0
  2919  060A  00F1               	movwf	___awmod@divisor+1
  2920  060B  0823               	movf	show_multidigits@result+1,w
  2921  060C  00F3               	movwf	___awmod@dividend+1
  2922  060D  0822               	movf	show_multidigits@result,w
  2923  060E  00F2               	movwf	___awmod@dividend
  2924  060F  120A  158A  2743  120A  118A  	fcall	___awmod
  2925  0614  0871               	movf	?___awmod+1,w
  2926  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0617  00AD               	movwf	show_multidigits@remainder+1
  2929  0618  0870               	movf	?___awmod,w
  2930  0619  00AC               	movwf	show_multidigits@remainder
  2931                           
  2932                           ;./lcd4bit.h: 129:         digit3=remainder;
  2933  061A  082D               	movf	show_multidigits@remainder+1,w
  2934  061B  00A5               	movwf	show_multidigits@digit3+1
  2935  061C  082C               	movf	show_multidigits@remainder,w
  2936  061D  00A4               	movwf	show_multidigits@digit3
  2937  061E                     l1784:
  2938                           
  2939                           ;./lcd4bit.h: 130:         digit4 = result/10;
  2940  061E  300A               	movlw	10
  2941  061F  00F0               	movwf	___awdiv@divisor
  2942  0620  3000               	movlw	0
  2943  0621  00F1               	movwf	___awdiv@divisor+1
  2944  0622  0823               	movf	show_multidigits@result+1,w
  2945  0623  00F3               	movwf	___awdiv@dividend+1
  2946  0624  0822               	movf	show_multidigits@result,w
  2947  0625  00F2               	movwf	___awdiv@dividend
  2948  0626  120A  118A  202D  120A  118A  	fcall	___awdiv
  2949  062B  0871               	movf	?___awdiv+1,w
  2950  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2951  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2952  062E  00A1               	movwf	show_multidigits@digit4+1
  2953  062F  0870               	movf	?___awdiv,w
  2954  0630  00A0               	movwf	show_multidigits@digit4
  2955  0631                     l1786:
  2956                           
  2957                           ;./lcd4bit.h: 131:         LCD_Char(digit4+0x30);
  2958  0631  0820               	movf	show_multidigits@digit4,w
  2959  0632  3E30               	addlw	48
  2960  0633  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2961  0638                     l1788:
  2962                           
  2963                           ;./lcd4bit.h: 132:         LCD_Char(digit3+0x30);
  2964  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2966  063A  0824               	movf	show_multidigits@digit3,w
  2967  063B  3E30               	addlw	48
  2968  063C  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2969  0641                     l1790:
  2970                           
  2971                           ;./lcd4bit.h: 133:         LCD_Char(digit2+0x30);
  2972  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0643  0828               	movf	show_multidigits@digit2,w
  2975  0644  3E30               	addlw	48
  2976  0645  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2977  064A                     l1792:
  2978                           
  2979                           ;./lcd4bit.h: 134:         LCD_Char(digit1+0x30);
  2980  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2981  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2982  064C  0826               	movf	show_multidigits@digit1,w
  2983  064D  3E30               	addlw	48
  2984  064E  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  2985  0653  2E54               	goto	l117
  2986  0654                     l113:
  2987  0654                     l117:
  2988  0654  0008               	return
  2989  0655                     __end_of_show_multidigits:
  2990                           
  2991                           	psect	text14
  2992  0F43                     __ptext14:	
  2993 ;; *************** function ___awmod *****************
  2994 ;; Defined at:
  2995 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  divisor         2    0[COMMON] int 
  2998 ;;  dividend        2    2[COMMON] int 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  sign            1    6[COMMON] unsigned char 
  3001 ;;  counter         1    5[COMMON] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  2    0[COMMON] int 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         4       0       0       0       0
  3012 ;;      Locals:         2       0       0       0       0
  3013 ;;      Temps:          1       0       0       0       0
  3014 ;;      Totals:         7       0       0       0       0
  3015 ;;Total ram usage:        7 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_show_multidigits
  3021 ;;		_tx_sn
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function ___awmod
  3027  0F43                     ___awmod:
  3028  0F43                     l1598:	
  3029                           ;incstack = 0
  3030                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3031                           
  3032  0F43  01F6               	clrf	___awmod@sign
  3033  0F44                     l1600:
  3034  0F44  1FF3               	btfss	___awmod@dividend+1,7
  3035  0F45  2F47               	goto	u1161
  3036  0F46  2F48               	goto	u1160
  3037  0F47                     u1161:
  3038  0F47  2F4F               	goto	l1606
  3039  0F48                     u1160:
  3040  0F48                     l1602:
  3041  0F48  09F2               	comf	___awmod@dividend,f
  3042  0F49  09F3               	comf	___awmod@dividend+1,f
  3043  0F4A  0AF2               	incf	___awmod@dividend,f
  3044  0F4B  1903               	skipnz
  3045  0F4C  0AF3               	incf	___awmod@dividend+1,f
  3046  0F4D                     l1604:
  3047  0F4D  01F6               	clrf	___awmod@sign
  3048  0F4E  0AF6               	incf	___awmod@sign,f
  3049  0F4F                     l1606:
  3050  0F4F  1FF1               	btfss	___awmod@divisor+1,7
  3051  0F50  2F52               	goto	u1171
  3052  0F51  2F53               	goto	u1170
  3053  0F52                     u1171:
  3054  0F52  2F58               	goto	l1610
  3055  0F53                     u1170:
  3056  0F53                     l1608:
  3057  0F53  09F0               	comf	___awmod@divisor,f
  3058  0F54  09F1               	comf	___awmod@divisor+1,f
  3059  0F55  0AF0               	incf	___awmod@divisor,f
  3060  0F56  1903               	skipnz
  3061  0F57  0AF1               	incf	___awmod@divisor+1,f
  3062  0F58                     l1610:
  3063  0F58  0870               	movf	___awmod@divisor,w
  3064  0F59  0471               	iorwf	___awmod@divisor+1,w
  3065  0F5A  1903               	btfsc	3,2
  3066  0F5B  2F5D               	goto	u1181
  3067  0F5C  2F5E               	goto	u1180
  3068  0F5D                     u1181:
  3069  0F5D  2F8D               	goto	l1628
  3070  0F5E                     u1180:
  3071  0F5E                     l1612:
  3072  0F5E  01F5               	clrf	___awmod@counter
  3073  0F5F  0AF5               	incf	___awmod@counter,f
  3074  0F60  2F6C               	goto	l1618
  3075  0F61                     l1614:
  3076  0F61  3001               	movlw	1
  3077  0F62                     u1195:
  3078  0F62  1003               	clrc
  3079  0F63  0DF0               	rlf	___awmod@divisor,f
  3080  0F64  0DF1               	rlf	___awmod@divisor+1,f
  3081  0F65  3EFF               	addlw	-1
  3082  0F66  1D03               	skipz
  3083  0F67  2F62               	goto	u1195
  3084  0F68                     l1616:
  3085  0F68  3001               	movlw	1
  3086  0F69  00F4               	movwf	??___awmod
  3087  0F6A  0874               	movf	??___awmod,w
  3088  0F6B  07F5               	addwf	___awmod@counter,f
  3089  0F6C                     l1618:
  3090  0F6C  1FF1               	btfss	___awmod@divisor+1,7
  3091  0F6D  2F6F               	goto	u1201
  3092  0F6E  2F70               	goto	u1200
  3093  0F6F                     u1201:
  3094  0F6F  2F61               	goto	l1614
  3095  0F70                     u1200:
  3096  0F70                     l1620:
  3097  0F70  0871               	movf	___awmod@divisor+1,w
  3098  0F71  0273               	subwf	___awmod@dividend+1,w
  3099  0F72  1D03               	skipz
  3100  0F73  2F76               	goto	u1215
  3101  0F74  0870               	movf	___awmod@divisor,w
  3102  0F75  0272               	subwf	___awmod@dividend,w
  3103  0F76                     u1215:
  3104  0F76  1C03               	skipc
  3105  0F77  2F79               	goto	u1211
  3106  0F78  2F7A               	goto	u1210
  3107  0F79                     u1211:
  3108  0F79  2F80               	goto	l1624
  3109  0F7A                     u1210:
  3110  0F7A                     l1622:
  3111  0F7A  0870               	movf	___awmod@divisor,w
  3112  0F7B  02F2               	subwf	___awmod@dividend,f
  3113  0F7C  0871               	movf	___awmod@divisor+1,w
  3114  0F7D  1C03               	skipc
  3115  0F7E  03F3               	decf	___awmod@dividend+1,f
  3116  0F7F  02F3               	subwf	___awmod@dividend+1,f
  3117  0F80                     l1624:
  3118  0F80  3001               	movlw	1
  3119  0F81                     u1225:
  3120  0F81  1003               	clrc
  3121  0F82  0CF1               	rrf	___awmod@divisor+1,f
  3122  0F83  0CF0               	rrf	___awmod@divisor,f
  3123  0F84  3EFF               	addlw	-1
  3124  0F85  1D03               	skipz
  3125  0F86  2F81               	goto	u1225
  3126  0F87                     l1626:
  3127  0F87  3001               	movlw	1
  3128  0F88  02F5               	subwf	___awmod@counter,f
  3129  0F89  1D03               	btfss	3,2
  3130  0F8A  2F8C               	goto	u1231
  3131  0F8B  2F8D               	goto	u1230
  3132  0F8C                     u1231:
  3133  0F8C  2F70               	goto	l1620
  3134  0F8D                     u1230:
  3135  0F8D                     l1628:
  3136  0F8D  0876               	movf	___awmod@sign,w
  3137  0F8E  1903               	btfsc	3,2
  3138  0F8F  2F91               	goto	u1241
  3139  0F90  2F92               	goto	u1240
  3140  0F91                     u1241:
  3141  0F91  2F97               	goto	l1632
  3142  0F92                     u1240:
  3143  0F92                     l1630:
  3144  0F92  09F2               	comf	___awmod@dividend,f
  3145  0F93  09F3               	comf	___awmod@dividend+1,f
  3146  0F94  0AF2               	incf	___awmod@dividend,f
  3147  0F95  1903               	skipnz
  3148  0F96  0AF3               	incf	___awmod@dividend+1,f
  3149  0F97                     l1632:
  3150  0F97  0873               	movf	___awmod@dividend+1,w
  3151  0F98  00F1               	movwf	?___awmod+1
  3152  0F99  0872               	movf	___awmod@dividend,w
  3153  0F9A  00F0               	movwf	?___awmod
  3154  0F9B                     l538:
  3155  0F9B  0008               	return
  3156  0F9C                     __end_of___awmod:
  3157                           
  3158                           	psect	text15
  3159  002D                     __ptext15:	
  3160 ;; *************** function ___awdiv *****************
  3161 ;; Defined at:
  3162 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  divisor         2    0[COMMON] int 
  3165 ;;  dividend        2    2[COMMON] int 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  quotient        2    7[COMMON] int 
  3168 ;;  sign            1    6[COMMON] unsigned char 
  3169 ;;  counter         1    5[COMMON] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  2    0[COMMON] int 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         4       0       0       0       0
  3180 ;;      Locals:         4       0       0       0       0
  3181 ;;      Temps:          1       0       0       0       0
  3182 ;;      Totals:         9       0       0       0       0
  3183 ;;Total ram usage:        9 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_show_multidigits
  3189 ;;		_tx_sn
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           
  3194                           ;psect for function ___awdiv
  3195  002D                     ___awdiv:
  3196  002D                     l1554:	
  3197                           ;incstack = 0
  3198                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3199                           
  3200  002D  01F6               	clrf	___awdiv@sign
  3201  002E                     l1556:
  3202  002E  1FF1               	btfss	___awdiv@divisor+1,7
  3203  002F  2831               	goto	u1061
  3204  0030  2832               	goto	u1060
  3205  0031                     u1061:
  3206  0031  2839               	goto	l1562
  3207  0032                     u1060:
  3208  0032                     l1558:
  3209  0032  09F0               	comf	___awdiv@divisor,f
  3210  0033  09F1               	comf	___awdiv@divisor+1,f
  3211  0034  0AF0               	incf	___awdiv@divisor,f
  3212  0035  1903               	skipnz
  3213  0036  0AF1               	incf	___awdiv@divisor+1,f
  3214  0037                     l1560:
  3215  0037  01F6               	clrf	___awdiv@sign
  3216  0038  0AF6               	incf	___awdiv@sign,f
  3217  0039                     l1562:
  3218  0039  1FF3               	btfss	___awdiv@dividend+1,7
  3219  003A  283C               	goto	u1071
  3220  003B  283D               	goto	u1070
  3221  003C                     u1071:
  3222  003C  2846               	goto	l1568
  3223  003D                     u1070:
  3224  003D                     l1564:
  3225  003D  09F2               	comf	___awdiv@dividend,f
  3226  003E  09F3               	comf	___awdiv@dividend+1,f
  3227  003F  0AF2               	incf	___awdiv@dividend,f
  3228  0040  1903               	skipnz
  3229  0041  0AF3               	incf	___awdiv@dividend+1,f
  3230  0042                     l1566:
  3231  0042  3001               	movlw	1
  3232  0043  00F4               	movwf	??___awdiv
  3233  0044  0874               	movf	??___awdiv,w
  3234  0045  06F6               	xorwf	___awdiv@sign,f
  3235  0046                     l1568:
  3236  0046  01F7               	clrf	___awdiv@quotient
  3237  0047  01F8               	clrf	___awdiv@quotient+1
  3238  0048                     l1570:
  3239  0048  0870               	movf	___awdiv@divisor,w
  3240  0049  0471               	iorwf	___awdiv@divisor+1,w
  3241  004A  1903               	btfsc	3,2
  3242  004B  284D               	goto	u1081
  3243  004C  284E               	goto	u1080
  3244  004D                     u1081:
  3245  004D  2885               	goto	l1590
  3246  004E                     u1080:
  3247  004E                     l1572:
  3248  004E  01F5               	clrf	___awdiv@counter
  3249  004F  0AF5               	incf	___awdiv@counter,f
  3250  0050  285C               	goto	l1578
  3251  0051                     l1574:
  3252  0051  3001               	movlw	1
  3253  0052                     u1095:
  3254  0052  1003               	clrc
  3255  0053  0DF0               	rlf	___awdiv@divisor,f
  3256  0054  0DF1               	rlf	___awdiv@divisor+1,f
  3257  0055  3EFF               	addlw	-1
  3258  0056  1D03               	skipz
  3259  0057  2852               	goto	u1095
  3260  0058                     l1576:
  3261  0058  3001               	movlw	1
  3262  0059  00F4               	movwf	??___awdiv
  3263  005A  0874               	movf	??___awdiv,w
  3264  005B  07F5               	addwf	___awdiv@counter,f
  3265  005C                     l1578:
  3266  005C  1FF1               	btfss	___awdiv@divisor+1,7
  3267  005D  285F               	goto	u1101
  3268  005E  2860               	goto	u1100
  3269  005F                     u1101:
  3270  005F  2851               	goto	l1574
  3271  0060                     u1100:
  3272  0060                     l1580:
  3273  0060  3001               	movlw	1
  3274  0061                     u1115:
  3275  0061  1003               	clrc
  3276  0062  0DF7               	rlf	___awdiv@quotient,f
  3277  0063  0DF8               	rlf	___awdiv@quotient+1,f
  3278  0064  3EFF               	addlw	-1
  3279  0065  1D03               	skipz
  3280  0066  2861               	goto	u1115
  3281  0067  0871               	movf	___awdiv@divisor+1,w
  3282  0068  0273               	subwf	___awdiv@dividend+1,w
  3283  0069  1D03               	skipz
  3284  006A  286D               	goto	u1125
  3285  006B  0870               	movf	___awdiv@divisor,w
  3286  006C  0272               	subwf	___awdiv@dividend,w
  3287  006D                     u1125:
  3288  006D  1C03               	skipc
  3289  006E  2870               	goto	u1121
  3290  006F  2871               	goto	u1120
  3291  0070                     u1121:
  3292  0070  2878               	goto	l1586
  3293  0071                     u1120:
  3294  0071                     l1582:
  3295  0071  0870               	movf	___awdiv@divisor,w
  3296  0072  02F2               	subwf	___awdiv@dividend,f
  3297  0073  0871               	movf	___awdiv@divisor+1,w
  3298  0074  1C03               	skipc
  3299  0075  03F3               	decf	___awdiv@dividend+1,f
  3300  0076  02F3               	subwf	___awdiv@dividend+1,f
  3301  0077                     l1584:
  3302  0077  1477               	bsf	___awdiv@quotient,0
  3303  0078                     l1586:
  3304  0078  3001               	movlw	1
  3305  0079                     u1135:
  3306  0079  1003               	clrc
  3307  007A  0CF1               	rrf	___awdiv@divisor+1,f
  3308  007B  0CF0               	rrf	___awdiv@divisor,f
  3309  007C  3EFF               	addlw	-1
  3310  007D  1D03               	skipz
  3311  007E  2879               	goto	u1135
  3312  007F                     l1588:
  3313  007F  3001               	movlw	1
  3314  0080  02F5               	subwf	___awdiv@counter,f
  3315  0081  1D03               	btfss	3,2
  3316  0082  2884               	goto	u1141
  3317  0083  2885               	goto	u1140
  3318  0084                     u1141:
  3319  0084  2860               	goto	l1580
  3320  0085                     u1140:
  3321  0085                     l1590:
  3322  0085  0876               	movf	___awdiv@sign,w
  3323  0086  1903               	btfsc	3,2
  3324  0087  2889               	goto	u1151
  3325  0088  288A               	goto	u1150
  3326  0089                     u1151:
  3327  0089  288F               	goto	l1594
  3328  008A                     u1150:
  3329  008A                     l1592:
  3330  008A  09F7               	comf	___awdiv@quotient,f
  3331  008B  09F8               	comf	___awdiv@quotient+1,f
  3332  008C  0AF7               	incf	___awdiv@quotient,f
  3333  008D  1903               	skipnz
  3334  008E  0AF8               	incf	___awdiv@quotient+1,f
  3335  008F                     l1594:
  3336  008F  0878               	movf	___awdiv@quotient+1,w
  3337  0090  00F1               	movwf	?___awdiv+1
  3338  0091  0877               	movf	___awdiv@quotient,w
  3339  0092  00F0               	movwf	?___awdiv
  3340  0093                     l525:
  3341  0093  0008               	return
  3342  0094                     __end_of___awdiv:
  3343                           
  3344                           	psect	text16
  3345  0D2E                     __ptext16:	
  3346 ;; *************** function _show *****************
  3347 ;; Defined at:
  3348 ;;		line 79 in file "./lcd4bit.h"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  s               1    wreg     PTR unsigned char 
  3351 ;;		 -> STR_2(6), STR_1(6), 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  s               1    4[COMMON] PTR unsigned char 
  3354 ;;		 -> STR_2(6), STR_1(6), 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3364 ;;      Params:         0       0       0       0       0
  3365 ;;      Locals:         1       0       0       0       0
  3366 ;;      Temps:          1       0       0       0       0
  3367 ;;      Totals:         2       0       0       0       0
  3368 ;;Total ram usage:        2 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 1
  3371 ;; This function calls:
  3372 ;;		_LCD_Char
  3373 ;; This function is called by:
  3374 ;;		_print_dht11data
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           
  3379                           ;psect for function _show
  3380  0D2E                     _show:
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3384                           ;show@s stored from wreg
  3385  0D2E  00F4               	movwf	show@s
  3386  0D2F                     l1726:
  3387                           
  3388                           ;./lcd4bit.h: 79: void show(unsigned char *s);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     wh
      +                          ile(*s) {
  3389  0D2F  2D40               	goto	l1732
  3390  0D30                     l1728:
  3391                           
  3392                           ;./lcd4bit.h: 82:         LCD_Char(*s++);
  3393  0D30  0874               	movf	show@s,w
  3394  0D31  0084               	movwf	4
  3395  0D32  120A  158A  2000  120A  158A  	fcall	stringdir
  3396  0D37  120A  158A  2637  120A  158A  	fcall	_LCD_Char
  3397  0D3C                     l1730:
  3398  0D3C  3001               	movlw	1
  3399  0D3D  00F3               	movwf	??_show
  3400  0D3E  0873               	movf	??_show,w
  3401  0D3F  07F4               	addwf	show@s,f
  3402  0D40                     l1732:
  3403                           
  3404                           ;./lcd4bit.h: 81:     while(*s) {
  3405  0D40  0874               	movf	show@s,w
  3406  0D41  0084               	movwf	4
  3407  0D42  120A  158A  2000  120A  158A  	fcall	stringdir
  3408  0D47  3A00               	xorlw	0
  3409  0D48  1D03               	skipz
  3410  0D49  2D4B               	goto	u1391
  3411  0D4A  2D4C               	goto	u1390
  3412  0D4B                     u1391:
  3413  0D4B  2D30               	goto	l1728
  3414  0D4C                     u1390:
  3415  0D4C                     l104:
  3416  0D4C  0008               	return
  3417  0D4D                     __end_of_show:
  3418                           
  3419                           	psect	text17
  3420  0D14                     __ptext17:	
  3421 ;; *************** function _StartSignal *****************
  3422 ;; Defined at:
  3423 ;;		line 7 in file "./dht11.h"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		wreg
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0
  3439 ;;      Temps:          2       0       0       0       0
  3440 ;;      Totals:         2       0       0       0       0
  3441 ;;Total ram usage:        2 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_print_dht11data
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           
  3451                           ;psect for function _StartSignal
  3452  0D14                     _StartSignal:
  3453  0D14                     l1854:	
  3454                           ;incstack = 0
  3455                           ; Regs used in _StartSignal: [wreg]
  3456                           
  3457                           
  3458                           ;./dht11.h: 9:     TRISDbits.TRISD0 = 0;
  3459  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  3461  0D16  1008               	bcf	8,0	;volatile
  3462                           
  3463                           ;./dht11.h: 10:     PORTDbits.RD0 = 0;
  3464  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  3466  0D19  1008               	bcf	8,0	;volatile
  3467  0D1A                     l1856:
  3468                           
  3469                           ;./dht11.h: 11:     _delay((unsigned long)((25)*(20000000/4000.0)));
  3470  0D1A  30A3               	movlw	163
  3471  0D1B  00F1               	movwf	??_StartSignal+1
  3472  0D1C  3055               	movlw	85
  3473  0D1D  00F0               	movwf	??_StartSignal
  3474  0D1E                     u1767:
  3475  0D1E  0BF0               	decfsz	??_StartSignal,f
  3476  0D1F  2D1E               	goto	u1767
  3477  0D20  0BF1               	decfsz	??_StartSignal+1,f
  3478  0D21  2D1E               	goto	u1767
  3479  0D22                     l1858:
  3480                           
  3481                           ;./dht11.h: 12:     PORTDbits.RD0 = 1;
  3482  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0D24  1408               	bsf	8,0	;volatile
  3485                           
  3486                           ;./dht11.h: 13:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  3487  0D25  3031               	movlw	49
  3488  0D26  00F0               	movwf	??_StartSignal
  3489  0D27                     u1777:
  3490  0D27  0BF0               	decfsz	??_StartSignal,f
  3491  0D28  2D27               	goto	u1777
  3492  0D29  2D2A               	nop2
  3493  0D2A                     l1860:
  3494                           
  3495                           ;./dht11.h: 14:     TRISDbits.TRISD0 = 1;
  3496  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  3497  0D2B  1303               	bcf	3,6	;RP1=0, select bank1
  3498  0D2C  1408               	bsf	8,0	;volatile
  3499  0D2D                     l163:
  3500  0D2D  0008               	return
  3501  0D2E                     __end_of_StartSignal:
  3502                           
  3503                           	psect	text18
  3504  0E77                     __ptext18:	
  3505 ;; *************** function _ReadData *****************
  3506 ;; Defined at:
  3507 ;;		line 32 in file "./dht11.h"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  j               1    3[COMMON] unsigned char 
  3512 ;;  i               1    2[COMMON] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      unsigned char 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3522 ;;      Params:         0       0       0       0       0
  3523 ;;      Locals:         2       0       0       0       0
  3524 ;;      Temps:          2       0       0       0       0
  3525 ;;      Totals:         4       0       0       0       0
  3526 ;;Total ram usage:        4 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_print_dht11data
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function _ReadData
  3537  0E77                     _ReadData:
  3538  0E77                     l1876:	
  3539                           ;incstack = 0
  3540                           ; Regs used in _ReadData: [wreg+status,2+status,0]
  3541                           
  3542                           
  3543                           ;./dht11.h: 34:     char i, j;;./dht11.h: 35:     for(j = 0; j < 8; j++)
  3544  0E77  01F3               	clrf	ReadData@j
  3545  0E78                     l173:
  3546  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0E7A  1C08               	btfss	8,0	;volatile
  3549  0E7B  2E7D               	goto	u1561
  3550  0E7C  2E7E               	goto	u1560
  3551  0E7D                     u1561:
  3552  0E7D  2E78               	goto	l173
  3553  0E7E                     u1560:
  3554  0E7E                     l1882:
  3555                           
  3556                           ;./dht11.h: 38:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  3557  0E7E  3031               	movlw	49
  3558  0E7F  00F0               	movwf	??_ReadData
  3559  0E80                     u1787:
  3560  0E80  0BF0               	decfsz	??_ReadData,f
  3561  0E81  2E80               	goto	u1787
  3562  0E82  2E83               	nop2
  3563  0E83                     l1884:
  3564                           
  3565                           ;./dht11.h: 39:         if(PORTDbits.RD0 == 0)
  3566  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  3568  0E85  1808               	btfsc	8,0	;volatile
  3569  0E86  2E88               	goto	u1571
  3570  0E87  2E89               	goto	u1570
  3571  0E88                     u1571:
  3572  0E88  2E9A               	goto	l1888
  3573  0E89                     u1570:
  3574  0E89                     l1886:
  3575                           
  3576                           ;./dht11.h: 40:         i&= ~(1<<(7 - j));
  3577  0E89  3001               	movlw	1
  3578  0E8A  00F0               	movwf	??_ReadData
  3579  0E8B  0873               	movf	ReadData@j,w
  3580  0E8C  3C07               	sublw	7
  3581  0E8D  3E01               	addlw	1
  3582  0E8E  2E91               	goto	u1584
  3583  0E8F                     u1585:
  3584  0E8F  1003               	clrc
  3585  0E90  0DF0               	rlf	??_ReadData,f
  3586  0E91                     u1584:
  3587  0E91  3EFF               	addlw	-1
  3588  0E92  1D03               	skipz
  3589  0E93  2E8F               	goto	u1585
  3590  0E94  0870               	movf	??_ReadData,w
  3591  0E95  3AFF               	xorlw	255
  3592  0E96  00F1               	movwf	??_ReadData+1
  3593  0E97  0871               	movf	??_ReadData+1,w
  3594  0E98  05F2               	andwf	ReadData@i,f
  3595  0E99  2EAD               	goto	l1890
  3596  0E9A                     l1888:
  3597                           
  3598                           ;./dht11.h: 42:         {;./dht11.h: 43:             i|= (1 << (7 - j));
  3599  0E9A  3001               	movlw	1
  3600  0E9B  00F0               	movwf	??_ReadData
  3601  0E9C  0873               	movf	ReadData@j,w
  3602  0E9D  3C07               	sublw	7
  3603  0E9E  3E01               	addlw	1
  3604  0E9F  2EA2               	goto	u1594
  3605  0EA0                     u1595:
  3606  0EA0  1003               	clrc
  3607  0EA1  0DF0               	rlf	??_ReadData,f
  3608  0EA2                     u1594:
  3609  0EA2  3EFF               	addlw	-1
  3610  0EA3  1D03               	skipz
  3611  0EA4  2EA0               	goto	u1595
  3612  0EA5  0870               	movf	??_ReadData,w
  3613  0EA6  00F1               	movwf	??_ReadData+1
  3614  0EA7  0871               	movf	??_ReadData+1,w
  3615  0EA8  04F2               	iorwf	ReadData@i,f
  3616  0EA9                     l178:	
  3617                           ;./dht11.h: 44:             while(PORTDbits.RD0);
  3618                           
  3619  0EA9  1808               	btfsc	8,0	;volatile
  3620  0EAA  2EAC               	goto	u1601
  3621  0EAB  2EAD               	goto	u1600
  3622  0EAC                     u1601:
  3623  0EAC  2EA9               	goto	l178
  3624  0EAD                     u1600:
  3625  0EAD                     l1890:
  3626                           
  3627                           ;./dht11.h: 46:     }
  3628  0EAD  3001               	movlw	1
  3629  0EAE  00F0               	movwf	??_ReadData
  3630  0EAF  0870               	movf	??_ReadData,w
  3631  0EB0  07F3               	addwf	ReadData@j,f
  3632  0EB1                     l1892:
  3633  0EB1  3008               	movlw	8
  3634  0EB2  0273               	subwf	ReadData@j,w
  3635  0EB3  1C03               	skipc
  3636  0EB4  2EB6               	goto	u1611
  3637  0EB5  2EB7               	goto	u1610
  3638  0EB6                     u1611:
  3639  0EB6  2E78               	goto	l173
  3640  0EB7                     u1610:
  3641  0EB7                     l1894:
  3642                           
  3643                           ;./dht11.h: 47:     return i;
  3644  0EB7  0872               	movf	ReadData@i,w
  3645  0EB8                     l181:
  3646  0EB8  0008               	return
  3647  0EB9                     __end_of_ReadData:
  3648                           
  3649                           	psect	text19
  3650  000C                     __ptext19:	
  3651 ;; *************** function _CheckResponse *****************
  3652 ;; Defined at:
  3653 ;;		line 17 in file "./dht11.h"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0
  3669 ;;      Temps:          1       0       0       0       0
  3670 ;;      Totals:         1       0       0       0       0
  3671 ;;Total ram usage:        1 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_print_dht11data
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function _CheckResponse
  3682  000C                     _CheckResponse:
  3683  000C                     l1862:	
  3684                           ;incstack = 0
  3685                           ; Regs used in _CheckResponse: [wreg+status,2]
  3686                           
  3687                           
  3688                           ;./dht11.h: 19:     Check = 0;
  3689  000C  1283               	bcf	3,5	;RP0=0, select bank0
  3690  000D  1303               	bcf	3,6	;RP1=0, select bank0
  3691  000E  01EA               	clrf	_Check
  3692  000F                     l1864:
  3693                           
  3694                           ;./dht11.h: 20:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  3695  000F  3042               	movlw	66
  3696  0010  00F0               	movwf	??_CheckResponse
  3697  0011                     u1797:
  3698  0011  0BF0               	decfsz	??_CheckResponse,f
  3699  0012  2811               	goto	u1797
  3700  0013  0000               	nop
  3701  0014                     l1866:
  3702                           
  3703                           ;./dht11.h: 21:     if (PORTDbits.RD0 == 0)
  3704  0014  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0015  1303               	bcf	3,6	;RP1=0, select bank0
  3706  0016  1808               	btfsc	8,0	;volatile
  3707  0017  2819               	goto	u1541
  3708  0018  281A               	goto	u1540
  3709  0019                     u1541:
  3710  0019  282C               	goto	l168
  3711  001A                     u1540:
  3712  001A                     l1868:
  3713                           
  3714                           ;./dht11.h: 22:     {;./dht11.h: 23:         _delay((unsigned long)((80)*(20000000/40000
      +                          00.0)));
  3715  001A  3085               	movlw	133
  3716  001B  00F0               	movwf	??_CheckResponse
  3717  001C                     u1807:
  3718  001C  0BF0               	decfsz	??_CheckResponse,f
  3719  001D  281C               	goto	u1807
  3720  001E                     l1870:
  3721                           
  3722                           ;./dht11.h: 24:         if (PORTDbits.RD0 == 1)
  3723  001E  1283               	bcf	3,5	;RP0=0, select bank0
  3724  001F  1303               	bcf	3,6	;RP1=0, select bank0
  3725  0020  1C08               	btfss	8,0	;volatile
  3726  0021  2823               	goto	u1551
  3727  0022  2824               	goto	u1550
  3728  0023                     u1551:
  3729  0023  282C               	goto	l168
  3730  0024                     u1550:
  3731  0024                     l1872:
  3732                           
  3733                           ;./dht11.h: 25:         {;./dht11.h: 26:             _delay((unsigned long)((50)*(200000
      +                          00/4000000.0)));
  3734  0024  3053               	movlw	83
  3735  0025  00F0               	movwf	??_CheckResponse
  3736  0026                     u1817:
  3737  0026  0BF0               	decfsz	??_CheckResponse,f
  3738  0027  2826               	goto	u1817
  3739  0028                     l1874:
  3740                           
  3741                           ;./dht11.h: 27:            Check = 1;
  3742  0028  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0029  1303               	bcf	3,6	;RP1=0, select bank0
  3744  002A  01EA               	clrf	_Check
  3745  002B  0AEA               	incf	_Check,f
  3746  002C                     l168:
  3747  002C  0008               	return
  3748  002D                     __end_of_CheckResponse:
  3749                           
  3750                           	psect	text20
  3751  0094                     __ptext20:	
  3752 ;; *************** function _print_analogvoltages *****************
  3753 ;; Defined at:
  3754 ;;		line 127 in file "main.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  j               1   34[BANK0 ] unsigned char 
  3759 ;;  i               1   33[BANK0 ] unsigned char 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3769 ;;      Params:         0       0       0       0       0
  3770 ;;      Locals:         0       2       0       0       0
  3771 ;;      Temps:          0       3       0       0       0
  3772 ;;      Totals:         0       5       0       0       0
  3773 ;;Total ram usage:        5 bytes
  3774 ;; Hardware stack levels used: 1
  3775 ;; Hardware stack levels required when called: 2
  3776 ;; This function calls:
  3777 ;;		_LCD_Char
  3778 ;;		_LCD_num
  3779 ;;		_tx
  3780 ;; This function is called by:
  3781 ;;		_main
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           
  3786                           ;psect for function _print_analogvoltages
  3787  0094                     _print_analogvoltages:
  3788  0094                     l1966:	
  3789                           ;incstack = 0
  3790                           ; Regs used in _print_analogvoltages: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3791                           
  3792                           
  3793                           ;main.c: 129:     for (unsigned char i=0;i<4;i++)
  3794  0094  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0095  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0096  01C1               	clrf	print_analogvoltages@i
  3797  0097                     l1972:
  3798                           
  3799                           ;main.c: 130:         {;main.c: 131:             LCD_num(AV[i]);
  3800  0097  0841               	movf	print_analogvoltages@i,w
  3801  0098  00BE               	movwf	??_print_analogvoltages
  3802  0099  073E               	addwf	??_print_analogvoltages,w
  3803  009A  3E46               	addlw	(low (_AV| 0))& (0+255)
  3804  009B  0084               	movwf	4
  3805  009C  1383               	bcf	3,7	;select IRP bank0
  3806  009D  0800               	movf	0,w
  3807  009E  00BF               	movwf	??_print_analogvoltages+1
  3808  009F  0A84               	incf	4,f
  3809  00A0  0800               	movf	0,w
  3810  00A1  00C0               	movwf	??_print_analogvoltages+2
  3811  00A2  083F               	movf	??_print_analogvoltages+1,w
  3812  00A3  00AE               	movwf	LCD_num@val
  3813  00A4  0840               	movf	??_print_analogvoltages+2,w
  3814  00A5  00AF               	movwf	LCD_num@val+1
  3815  00A6  01B0               	clrf	LCD_num@val+2
  3816  00A7  01B1               	clrf	LCD_num@val+3
  3817  00A8  120A  118A  219F  120A  118A  	fcall	_LCD_num
  3818  00AD                     l1974:
  3819                           
  3820                           ;main.c: 132:             LCD_Char(' ');
  3821  00AD  3020               	movlw	32
  3822  00AE  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  3823  00B3                     l1976:
  3824                           
  3825                           ;main.c: 133:             for (unsigned char j=0;j<3;j++)
  3826  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  3827  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  3828  00B5  01C2               	clrf	print_analogvoltages@j
  3829  00B6                     l1982:
  3830                           
  3831                           ;main.c: 134:             {;main.c: 135:                 tx((avv[j]+0x30));
  3832  00B6  0842               	movf	print_analogvoltages@j,w
  3833  00B7  3E51               	addlw	(low (_avv| 0))& (0+255)
  3834  00B8  0084               	movwf	4
  3835  00B9  1383               	bcf	3,7	;select IRP bank0
  3836  00BA  0800               	movf	0,w
  3837  00BB  3E30               	addlw	48
  3838  00BC  120A  158A  249C  120A  118A  	fcall	_tx
  3839  00C1                     l1984:
  3840                           
  3841                           ;main.c: 136:                 if (j == 0)
  3842  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  3843  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  3844  00C3  0842               	movf	print_analogvoltages@j,w
  3845  00C4  1D03               	btfss	3,2
  3846  00C5  28C7               	goto	u1671
  3847  00C6  28C8               	goto	u1670
  3848  00C7                     u1671:
  3849  00C7  28CF               	goto	l1988
  3850  00C8                     u1670:
  3851  00C8                     l1986:
  3852                           
  3853                           ;main.c: 137:                 {;main.c: 138:                     tx('.');
  3854  00C8  302E               	movlw	46
  3855  00C9  120A  158A  249C  120A  118A  	fcall	_tx
  3856                           
  3857                           ;main.c: 139:                 }
  3858  00CE  28DB               	goto	l1992
  3859  00CF                     l1988:
  3860  00CF  3002               	movlw	2
  3861  00D0  0642               	xorwf	print_analogvoltages@j,w
  3862  00D1  1D03               	btfss	3,2
  3863  00D2  28D4               	goto	u1681
  3864  00D3  28D5               	goto	u1680
  3865  00D4                     u1681:
  3866  00D4  28DB               	goto	l1992
  3867  00D5                     u1680:
  3868  00D5                     l1990:
  3869                           
  3870                           ;main.c: 141:                 {;main.c: 142:                     tx(',');
  3871  00D5  302C               	movlw	44
  3872  00D6  120A  158A  249C  120A  118A  	fcall	_tx
  3873  00DB                     l1992:
  3874                           
  3875                           ;main.c: 144:             }
  3876  00DB  3001               	movlw	1
  3877  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  3878  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  3879  00DE  00BE               	movwf	??_print_analogvoltages
  3880  00DF  083E               	movf	??_print_analogvoltages,w
  3881  00E0  07C2               	addwf	print_analogvoltages@j,f
  3882  00E1                     l1994:
  3883  00E1  3003               	movlw	3
  3884  00E2  0242               	subwf	print_analogvoltages@j,w
  3885  00E3  1C03               	skipc
  3886  00E4  28E6               	goto	u1691
  3887  00E5  28E7               	goto	u1690
  3888  00E6                     u1691:
  3889  00E6  28B6               	goto	l1982
  3890  00E7                     u1690:
  3891  00E7                     l1996:
  3892                           
  3893                           ;main.c: 146:             _delay((unsigned long)((100)*(20000000/4000.0)));
  3894  00E7  3003               	movlw	3
  3895  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  3896  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  3897  00EA  00C0               	movwf	??_print_analogvoltages+2
  3898  00EB  308A               	movlw	138
  3899  00EC  00BF               	movwf	??_print_analogvoltages+1
  3900  00ED  3055               	movlw	85
  3901  00EE  00BE               	movwf	??_print_analogvoltages
  3902  00EF                     u1827:
  3903  00EF  0BBE               	decfsz	??_print_analogvoltages,f
  3904  00F0  28EF               	goto	u1827
  3905  00F1  0BBF               	decfsz	??_print_analogvoltages+1,f
  3906  00F2  28EF               	goto	u1827
  3907  00F3  0BC0               	decfsz	??_print_analogvoltages+2,f
  3908  00F4  28EF               	goto	u1827
  3909  00F5                     l1998:
  3910                           
  3911                           ;main.c: 147:         }
  3912  00F5  3001               	movlw	1
  3913  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  3914  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  3915  00F8  00BE               	movwf	??_print_analogvoltages
  3916  00F9  083E               	movf	??_print_analogvoltages,w
  3917  00FA  07C1               	addwf	print_analogvoltages@i,f
  3918  00FB                     l2000:
  3919  00FB  3004               	movlw	4
  3920  00FC  0241               	subwf	print_analogvoltages@i,w
  3921  00FD  1C03               	skipc
  3922  00FE  2900               	goto	u1701
  3923  00FF  2901               	goto	u1700
  3924  0100                     u1701:
  3925  0100  2897               	goto	l1972
  3926  0101                     u1700:
  3927  0101                     l281:
  3928  0101  0008               	return
  3929  0102                     __end_of_print_analogvoltages:
  3930                           
  3931                           	psect	text21
  3932  0C9C                     __ptext21:	
  3933 ;; *************** function _tx *****************
  3934 ;; Defined at:
  3935 ;;		line 14 in file "./uart.h"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  a               1    wreg     unsigned char 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  a               1    0[COMMON] unsigned char 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      unsigned char 
  3942 ;; Registers used:
  3943 ;;		wreg
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3949 ;;      Params:         0       0       0       0       0
  3950 ;;      Locals:         1       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0
  3952 ;;      Totals:         1       0       0       0       0
  3953 ;;Total ram usage:        1 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_tx_sn
  3959 ;;		_main
  3960 ;;		_print_serialnumber
  3961 ;;		_print_analogvoltages
  3962 ;;		_print_dht11data
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           
  3967                           ;psect for function _tx
  3968  0C9C                     _tx:
  3969                           
  3970                           ;incstack = 0
  3971                           ; Regs used in _tx: [wreg]
  3972                           ;tx@a stored from wreg
  3973  0C9C  00F0               	movwf	tx@a
  3974  0C9D                     l1496:
  3975                           
  3976                           ;./uart.h: 14: unsigned char tx(unsigned char a);./uart.h: 15: {;./uart.h: 16:  TXREG=a;
  3977  0C9D  0870               	movf	tx@a,w
  3978  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0CA0  0099               	movwf	25	;volatile
  3981  0CA1                     l123:	
  3982                           ;./uart.h: 17:  while(!TXIF);
  3983                           
  3984  0CA1  1E0C               	btfss	12,4	;volatile
  3985  0CA2  2CA4               	goto	u891
  3986  0CA3  2CA5               	goto	u890
  3987  0CA4                     u891:
  3988  0CA4  2CA1               	goto	l123
  3989  0CA5                     u890:
  3990  0CA5                     l125:
  3991                           
  3992                           ;./uart.h: 18:  TXIF = 0;
  3993  0CA5  120C               	bcf	12,4	;volatile
  3994  0CA6                     l126:
  3995  0CA6  0008               	return
  3996  0CA7                     __end_of_tx:
  3997                           
  3998                           	psect	text22
  3999  019F                     __ptext22:	
  4000 ;; *************** function _LCD_num *****************
  4001 ;; Defined at:
  4002 ;;		line 58 in file "./lcd4bit.h"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  val             4   14[BANK0 ] long 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  remainder       2   28[BANK0 ] unsigned int 
  4007 ;;  result1         2   26[BANK0 ] unsigned int 
  4008 ;;  result          2   24[BANK0 ] unsigned int 
  4009 ;;  digit3          2   22[BANK0 ] unsigned int 
  4010 ;;  digit2          2   20[BANK0 ] unsigned int 
  4011 ;;  digit1          2   18[BANK0 ] unsigned int 
  4012 ;;  calb_val        2    0        int 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0, pclath, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4022 ;;      Params:         0       4       0       0       0
  4023 ;;      Locals:         0      12       0       0       0
  4024 ;;      Temps:          0       0       0       0       0
  4025 ;;      Totals:         0      16       0       0       0
  4026 ;;Total ram usage:       16 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 1
  4029 ;; This function calls:
  4030 ;;		_LCD_Char
  4031 ;;		___aldiv
  4032 ;;		___lmul
  4033 ;;		___lwdiv
  4034 ;;		___lwmod
  4035 ;;		_intdigits_chardigits
  4036 ;; This function is called by:
  4037 ;;		_print_analogvoltages
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           
  4042                           ;psect for function _LCD_num
  4043  019F                     _LCD_num:
  4044  019F                     l1702:	
  4045                           ;incstack = 0
  4046                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  4047                           
  4048  019F                     l1704:
  4049                           
  4050                           ;./lcd4bit.h: 61:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 62:     result1;;./lcd4bit.h: 63:     result = ((val*100)/calb_val);
  4051  019F  3000               	movlw	0
  4052  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  4053  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  4054  01A2  00A3               	movwf	___aldiv@divisor+3
  4055  01A3  3000               	movlw	0
  4056  01A4  00A2               	movwf	___aldiv@divisor+2
  4057  01A5  3000               	movlw	0
  4058  01A6  00A1               	movwf	___aldiv@divisor+1
  4059  01A7  30C8               	movlw	200
  4060  01A8  00A0               	movwf	___aldiv@divisor
  4061  01A9  0831               	movf	LCD_num@val+3,w
  4062  01AA  00F3               	movwf	___lmul@multiplier+3
  4063  01AB  0830               	movf	LCD_num@val+2,w
  4064  01AC  00F2               	movwf	___lmul@multiplier+2
  4065  01AD  082F               	movf	LCD_num@val+1,w
  4066  01AE  00F1               	movwf	___lmul@multiplier+1
  4067  01AF  082E               	movf	LCD_num@val,w
  4068  01B0  00F0               	movwf	___lmul@multiplier
  4069  01B1  3000               	movlw	0
  4070  01B2  00F7               	movwf	___lmul@multiplicand+3
  4071  01B3  3000               	movlw	0
  4072  01B4  00F6               	movwf	___lmul@multiplicand+2
  4073  01B5  3000               	movlw	0
  4074  01B6  00F5               	movwf	___lmul@multiplicand+1
  4075  01B7  3064               	movlw	100
  4076  01B8  00F4               	movwf	___lmul@multiplicand
  4077  01B9  120A  158A  26FD  120A  118A  	fcall	___lmul
  4078  01BE  0873               	movf	?___lmul+3,w
  4079  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  4080  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  4081  01C1  00A7               	movwf	___aldiv@dividend+3
  4082  01C2  0872               	movf	?___lmul+2,w
  4083  01C3  00A6               	movwf	___aldiv@dividend+2
  4084  01C4  0871               	movf	?___lmul+1,w
  4085  01C5  00A5               	movwf	___aldiv@dividend+1
  4086  01C6  0870               	movf	?___lmul,w
  4087  01C7  00A4               	movwf	___aldiv@dividend
  4088  01C8  120A  118A  2102  120A  118A  	fcall	___aldiv
  4089  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  4090  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  4091  01CF  0821               	movf	?___aldiv+1,w
  4092  01D0  00B9               	movwf	LCD_num@result+1
  4093  01D1  0820               	movf	?___aldiv,w
  4094  01D2  00B8               	movwf	LCD_num@result
  4095  01D3                     l1706:
  4096                           
  4097                           ;./lcd4bit.h: 64:     remainder = result% 10;
  4098  01D3  300A               	movlw	10
  4099  01D4  00F0               	movwf	___lwmod@divisor
  4100  01D5  3000               	movlw	0
  4101  01D6  00F1               	movwf	___lwmod@divisor+1
  4102  01D7  0839               	movf	LCD_num@result+1,w
  4103  01D8  00F3               	movwf	___lwmod@dividend+1
  4104  01D9  0838               	movf	LCD_num@result,w
  4105  01DA  00F2               	movwf	___lwmod@dividend
  4106  01DB  120A  158A  2583  120A  118A  	fcall	___lwmod
  4107  01E0  0871               	movf	?___lwmod+1,w
  4108  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  4109  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  4110  01E3  00BD               	movwf	LCD_num@remainder+1
  4111  01E4  0870               	movf	?___lwmod,w
  4112  01E5  00BC               	movwf	LCD_num@remainder
  4113  01E6                     l1708:
  4114                           
  4115                           ;./lcd4bit.h: 65:     result1 = result /10;
  4116  01E6  300A               	movlw	10
  4117  01E7  00F0               	movwf	___lwdiv@divisor
  4118  01E8  3000               	movlw	0
  4119  01E9  00F1               	movwf	___lwdiv@divisor+1
  4120  01EA  0839               	movf	LCD_num@result+1,w
  4121  01EB  00F3               	movwf	___lwdiv@dividend+1
  4122  01EC  0838               	movf	LCD_num@result,w
  4123  01ED  00F2               	movwf	___lwdiv@dividend
  4124  01EE  120A  158A  26B9  120A  118A  	fcall	___lwdiv
  4125  01F3  0871               	movf	?___lwdiv+1,w
  4126  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  4127  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  4128  01F6  00BB               	movwf	LCD_num@result1+1
  4129  01F7  0870               	movf	?___lwdiv,w
  4130  01F8  00BA               	movwf	LCD_num@result1
  4131  01F9                     l1710:
  4132                           
  4133                           ;./lcd4bit.h: 66:     digit1 = remainder;
  4134  01F9  083D               	movf	LCD_num@remainder+1,w
  4135  01FA  00B3               	movwf	LCD_num@digit1+1
  4136  01FB  083C               	movf	LCD_num@remainder,w
  4137  01FC  00B2               	movwf	LCD_num@digit1
  4138                           
  4139                           ;./lcd4bit.h: 67:     remainder = result1%10;
  4140  01FD  300A               	movlw	10
  4141  01FE  00F0               	movwf	___lwmod@divisor
  4142  01FF  3000               	movlw	0
  4143  0200  00F1               	movwf	___lwmod@divisor+1
  4144  0201  083B               	movf	LCD_num@result1+1,w
  4145  0202  00F3               	movwf	___lwmod@dividend+1
  4146  0203  083A               	movf	LCD_num@result1,w
  4147  0204  00F2               	movwf	___lwmod@dividend
  4148  0205  120A  158A  2583  120A  118A  	fcall	___lwmod
  4149  020A  0871               	movf	?___lwmod+1,w
  4150  020B  1283               	bcf	3,5	;RP0=0, select bank0
  4151  020C  1303               	bcf	3,6	;RP1=0, select bank0
  4152  020D  00BD               	movwf	LCD_num@remainder+1
  4153  020E  0870               	movf	?___lwmod,w
  4154  020F  00BC               	movwf	LCD_num@remainder
  4155  0210                     l1712:
  4156                           
  4157                           ;./lcd4bit.h: 68:     digit2 = remainder;
  4158  0210  083D               	movf	LCD_num@remainder+1,w
  4159  0211  00B5               	movwf	LCD_num@digit2+1
  4160  0212  083C               	movf	LCD_num@remainder,w
  4161  0213  00B4               	movwf	LCD_num@digit2
  4162  0214                     l1714:
  4163                           
  4164                           ;./lcd4bit.h: 69:     remainder = (result1/10);
  4165  0214  300A               	movlw	10
  4166  0215  00F0               	movwf	___lwdiv@divisor
  4167  0216  3000               	movlw	0
  4168  0217  00F1               	movwf	___lwdiv@divisor+1
  4169  0218  083B               	movf	LCD_num@result1+1,w
  4170  0219  00F3               	movwf	___lwdiv@dividend+1
  4171  021A  083A               	movf	LCD_num@result1,w
  4172  021B  00F2               	movwf	___lwdiv@dividend
  4173  021C  120A  158A  26B9  120A  118A  	fcall	___lwdiv
  4174  0221  0871               	movf	?___lwdiv+1,w
  4175  0222  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0223  1303               	bcf	3,6	;RP1=0, select bank0
  4177  0224  00BD               	movwf	LCD_num@remainder+1
  4178  0225  0870               	movf	?___lwdiv,w
  4179  0226  00BC               	movwf	LCD_num@remainder
  4180                           
  4181                           ;./lcd4bit.h: 70:     digit3=remainder;
  4182  0227  083D               	movf	LCD_num@remainder+1,w
  4183  0228  00B7               	movwf	LCD_num@digit3+1
  4184  0229  083C               	movf	LCD_num@remainder,w
  4185  022A  00B6               	movwf	LCD_num@digit3
  4186  022B                     l1716:
  4187                           
  4188                           ;./lcd4bit.h: 71:     LCD_Char(digit3+0x30);
  4189  022B  0836               	movf	LCD_num@digit3,w
  4190  022C  3E30               	addlw	48
  4191  022D  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  4192  0232                     l1718:
  4193                           
  4194                           ;./lcd4bit.h: 72:     LCD_Char('.');
  4195  0232  302E               	movlw	46
  4196  0233  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  4197  0238                     l1720:
  4198                           
  4199                           ;./lcd4bit.h: 73:     LCD_Char(digit2+0x30);
  4200  0238  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0239  1303               	bcf	3,6	;RP1=0, select bank0
  4202  023A  0834               	movf	LCD_num@digit2,w
  4203  023B  3E30               	addlw	48
  4204  023C  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  4205  0241                     l1722:
  4206                           
  4207                           ;./lcd4bit.h: 74:     LCD_Char(digit1+0x30);
  4208  0241  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0242  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0243  0832               	movf	LCD_num@digit1,w
  4211  0244  3E30               	addlw	48
  4212  0245  120A  158A  2637  120A  118A  	fcall	_LCD_Char
  4213  024A                     l1724:
  4214                           
  4215                           ;./lcd4bit.h: 76:     intdigits_chardigits(digit3,digit2,digit1);
  4216  024A  1283               	bcf	3,5	;RP0=0, select bank0
  4217  024B  1303               	bcf	3,6	;RP1=0, select bank0
  4218  024C  0837               	movf	LCD_num@digit3+1,w
  4219  024D  00F1               	movwf	intdigits_chardigits@a+1
  4220  024E  0836               	movf	LCD_num@digit3,w
  4221  024F  00F0               	movwf	intdigits_chardigits@a
  4222  0250  0835               	movf	LCD_num@digit2+1,w
  4223  0251  00F3               	movwf	intdigits_chardigits@b+1
  4224  0252  0834               	movf	LCD_num@digit2,w
  4225  0253  00F2               	movwf	intdigits_chardigits@b
  4226  0254  0833               	movf	LCD_num@digit1+1,w
  4227  0255  00F5               	movwf	intdigits_chardigits@c+1
  4228  0256  0832               	movf	LCD_num@digit1,w
  4229  0257  00F4               	movwf	intdigits_chardigits@c
  4230  0258  120A  158A  24CC  120A  118A  	fcall	_intdigits_chardigits
  4231  025D                     l98:
  4232  025D  0008               	return
  4233  025E                     __end_of_LCD_num:
  4234                           
  4235                           	psect	text23
  4236  0CCC                     __ptext23:	
  4237 ;; *************** function _intdigits_chardigits *****************
  4238 ;; Defined at:
  4239 ;;		line 86 in file "./lcd4bit.h"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  a               2    0[COMMON] unsigned int 
  4242 ;;  b               2    2[COMMON] unsigned int 
  4243 ;;  c               2    4[COMMON] unsigned int 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      unsigned char 
  4248 ;; Registers used:
  4249 ;;		wreg
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4255 ;;      Params:         6       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0
  4257 ;;      Temps:          1       0       0       0       0
  4258 ;;      Totals:         7       0       0       0       0
  4259 ;;Total ram usage:        7 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_LCD_num
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           
  4269                           ;psect for function _intdigits_chardigits
  4270  0CCC                     _intdigits_chardigits:
  4271  0CCC                     l1494:	
  4272                           ;incstack = 0
  4273                           ; Regs used in _intdigits_chardigits: [wreg]
  4274                           
  4275                           
  4276                           ;./lcd4bit.h: 86: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 87: {;./lcd4bit.h: 88:     avv[0] = (unsigned char)a;
  4277  0CCC  0870               	movf	intdigits_chardigits@a,w
  4278  0CCD  00F6               	movwf	??_intdigits_chardigits
  4279  0CCE  0876               	movf	??_intdigits_chardigits,w
  4280  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  4281  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0CD1  00D1               	movwf	_avv
  4283                           
  4284                           ;./lcd4bit.h: 89:     avv[1] = (unsigned char)b;
  4285  0CD2  0872               	movf	intdigits_chardigits@b,w
  4286  0CD3  00F6               	movwf	??_intdigits_chardigits
  4287  0CD4  0876               	movf	??_intdigits_chardigits,w
  4288  0CD5  00D2               	movwf	_avv+1
  4289                           
  4290                           ;./lcd4bit.h: 90:     avv[2] = (unsigned char)c;
  4291  0CD6  0874               	movf	intdigits_chardigits@c,w
  4292  0CD7  00F6               	movwf	??_intdigits_chardigits
  4293  0CD8  0876               	movf	??_intdigits_chardigits,w
  4294  0CD9  00D3               	movwf	_avv+2
  4295  0CDA                     l107:
  4296  0CDA  0008               	return
  4297  0CDB                     __end_of_intdigits_chardigits:
  4298                           
  4299                           	psect	text24
  4300  0D83                     __ptext24:	
  4301 ;; *************** function ___lwmod *****************
  4302 ;; Defined at:
  4303 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  divisor         2    0[COMMON] unsigned int 
  4306 ;;  dividend        2    2[COMMON] unsigned int 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  counter         1    5[COMMON] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  2    0[COMMON] unsigned int 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4318 ;;      Params:         4       0       0       0       0
  4319 ;;      Locals:         1       0       0       0       0
  4320 ;;      Temps:          1       0       0       0       0
  4321 ;;      Totals:         6       0       0       0       0
  4322 ;;Total ram usage:        6 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_LCD_num
  4328 ;;		_show_multidigits
  4329 ;;		_tx_sn
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function ___lwmod
  4335  0D83                     ___lwmod:
  4336  0D83                     l1662:	
  4337                           ;incstack = 0
  4338                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4339                           
  4340  0D83  0870               	movf	___lwmod@divisor,w
  4341  0D84  0471               	iorwf	___lwmod@divisor+1,w
  4342  0D85  1903               	btfsc	3,2
  4343  0D86  2D88               	goto	u1321
  4344  0D87  2D89               	goto	u1320
  4345  0D88                     u1321:
  4346  0D88  2DB8               	goto	l1680
  4347  0D89                     u1320:
  4348  0D89                     l1664:
  4349  0D89  01F5               	clrf	___lwmod@counter
  4350  0D8A  0AF5               	incf	___lwmod@counter,f
  4351  0D8B  2D97               	goto	l1670
  4352  0D8C                     l1666:
  4353  0D8C  3001               	movlw	1
  4354  0D8D                     u1335:
  4355  0D8D  1003               	clrc
  4356  0D8E  0DF0               	rlf	___lwmod@divisor,f
  4357  0D8F  0DF1               	rlf	___lwmod@divisor+1,f
  4358  0D90  3EFF               	addlw	-1
  4359  0D91  1D03               	skipz
  4360  0D92  2D8D               	goto	u1335
  4361  0D93                     l1668:
  4362  0D93  3001               	movlw	1
  4363  0D94  00F4               	movwf	??___lwmod
  4364  0D95  0874               	movf	??___lwmod,w
  4365  0D96  07F5               	addwf	___lwmod@counter,f
  4366  0D97                     l1670:
  4367  0D97  1FF1               	btfss	___lwmod@divisor+1,7
  4368  0D98  2D9A               	goto	u1341
  4369  0D99  2D9B               	goto	u1340
  4370  0D9A                     u1341:
  4371  0D9A  2D8C               	goto	l1666
  4372  0D9B                     u1340:
  4373  0D9B                     l1672:
  4374  0D9B  0871               	movf	___lwmod@divisor+1,w
  4375  0D9C  0273               	subwf	___lwmod@dividend+1,w
  4376  0D9D  1D03               	skipz
  4377  0D9E  2DA1               	goto	u1355
  4378  0D9F  0870               	movf	___lwmod@divisor,w
  4379  0DA0  0272               	subwf	___lwmod@dividend,w
  4380  0DA1                     u1355:
  4381  0DA1  1C03               	skipc
  4382  0DA2  2DA4               	goto	u1351
  4383  0DA3  2DA5               	goto	u1350
  4384  0DA4                     u1351:
  4385  0DA4  2DAB               	goto	l1676
  4386  0DA5                     u1350:
  4387  0DA5                     l1674:
  4388  0DA5  0870               	movf	___lwmod@divisor,w
  4389  0DA6  02F2               	subwf	___lwmod@dividend,f
  4390  0DA7  0871               	movf	___lwmod@divisor+1,w
  4391  0DA8  1C03               	skipc
  4392  0DA9  03F3               	decf	___lwmod@dividend+1,f
  4393  0DAA  02F3               	subwf	___lwmod@dividend+1,f
  4394  0DAB                     l1676:
  4395  0DAB  3001               	movlw	1
  4396  0DAC                     u1365:
  4397  0DAC  1003               	clrc
  4398  0DAD  0CF1               	rrf	___lwmod@divisor+1,f
  4399  0DAE  0CF0               	rrf	___lwmod@divisor,f
  4400  0DAF  3EFF               	addlw	-1
  4401  0DB0  1D03               	skipz
  4402  0DB1  2DAC               	goto	u1365
  4403  0DB2                     l1678:
  4404  0DB2  3001               	movlw	1
  4405  0DB3  02F5               	subwf	___lwmod@counter,f
  4406  0DB4  1D03               	btfss	3,2
  4407  0DB5  2DB7               	goto	u1371
  4408  0DB6  2DB8               	goto	u1370
  4409  0DB7                     u1371:
  4410  0DB7  2D9B               	goto	l1672
  4411  0DB8                     u1370:
  4412  0DB8                     l1680:
  4413  0DB8  0873               	movf	___lwmod@dividend+1,w
  4414  0DB9  00F1               	movwf	?___lwmod+1
  4415  0DBA  0872               	movf	___lwmod@dividend,w
  4416  0DBB  00F0               	movwf	?___lwmod
  4417  0DBC                     l654:
  4418  0DBC  0008               	return
  4419  0DBD                     __end_of___lwmod:
  4420                           
  4421                           	psect	text25
  4422  0EB9                     __ptext25:	
  4423 ;; *************** function ___lwdiv *****************
  4424 ;; Defined at:
  4425 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  divisor         2    0[COMMON] unsigned int 
  4428 ;;  dividend        2    2[COMMON] unsigned int 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  quotient        2    5[COMMON] unsigned int 
  4431 ;;  counter         1    7[COMMON] unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  2    0[COMMON] unsigned int 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4441 ;;      Params:         4       0       0       0       0
  4442 ;;      Locals:         3       0       0       0       0
  4443 ;;      Temps:          1       0       0       0       0
  4444 ;;      Totals:         8       0       0       0       0
  4445 ;;Total ram usage:        8 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_LCD_num
  4451 ;;		_show_multidigits
  4452 ;;		_tx_sn
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           
  4457                           ;psect for function ___lwdiv
  4458  0EB9                     ___lwdiv:
  4459  0EB9                     l1636:	
  4460                           ;incstack = 0
  4461                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4462                           
  4463  0EB9  01F5               	clrf	___lwdiv@quotient
  4464  0EBA  01F6               	clrf	___lwdiv@quotient+1
  4465  0EBB                     l1638:
  4466  0EBB  0870               	movf	___lwdiv@divisor,w
  4467  0EBC  0471               	iorwf	___lwdiv@divisor+1,w
  4468  0EBD  1903               	btfsc	3,2
  4469  0EBE  2EC0               	goto	u1251
  4470  0EBF  2EC1               	goto	u1250
  4471  0EC0                     u1251:
  4472  0EC0  2EF8               	goto	l1658
  4473  0EC1                     u1250:
  4474  0EC1                     l1640:
  4475  0EC1  01F7               	clrf	___lwdiv@counter
  4476  0EC2  0AF7               	incf	___lwdiv@counter,f
  4477  0EC3  2ECF               	goto	l1646
  4478  0EC4                     l1642:
  4479  0EC4  3001               	movlw	1
  4480  0EC5                     u1265:
  4481  0EC5  1003               	clrc
  4482  0EC6  0DF0               	rlf	___lwdiv@divisor,f
  4483  0EC7  0DF1               	rlf	___lwdiv@divisor+1,f
  4484  0EC8  3EFF               	addlw	-1
  4485  0EC9  1D03               	skipz
  4486  0ECA  2EC5               	goto	u1265
  4487  0ECB                     l1644:
  4488  0ECB  3001               	movlw	1
  4489  0ECC  00F4               	movwf	??___lwdiv
  4490  0ECD  0874               	movf	??___lwdiv,w
  4491  0ECE  07F7               	addwf	___lwdiv@counter,f
  4492  0ECF                     l1646:
  4493  0ECF  1FF1               	btfss	___lwdiv@divisor+1,7
  4494  0ED0  2ED2               	goto	u1271
  4495  0ED1  2ED3               	goto	u1270
  4496  0ED2                     u1271:
  4497  0ED2  2EC4               	goto	l1642
  4498  0ED3                     u1270:
  4499  0ED3                     l1648:
  4500  0ED3  3001               	movlw	1
  4501  0ED4                     u1285:
  4502  0ED4  1003               	clrc
  4503  0ED5  0DF5               	rlf	___lwdiv@quotient,f
  4504  0ED6  0DF6               	rlf	___lwdiv@quotient+1,f
  4505  0ED7  3EFF               	addlw	-1
  4506  0ED8  1D03               	skipz
  4507  0ED9  2ED4               	goto	u1285
  4508  0EDA  0871               	movf	___lwdiv@divisor+1,w
  4509  0EDB  0273               	subwf	___lwdiv@dividend+1,w
  4510  0EDC  1D03               	skipz
  4511  0EDD  2EE0               	goto	u1295
  4512  0EDE  0870               	movf	___lwdiv@divisor,w
  4513  0EDF  0272               	subwf	___lwdiv@dividend,w
  4514  0EE0                     u1295:
  4515  0EE0  1C03               	skipc
  4516  0EE1  2EE3               	goto	u1291
  4517  0EE2  2EE4               	goto	u1290
  4518  0EE3                     u1291:
  4519  0EE3  2EEB               	goto	l1654
  4520  0EE4                     u1290:
  4521  0EE4                     l1650:
  4522  0EE4  0870               	movf	___lwdiv@divisor,w
  4523  0EE5  02F2               	subwf	___lwdiv@dividend,f
  4524  0EE6  0871               	movf	___lwdiv@divisor+1,w
  4525  0EE7  1C03               	skipc
  4526  0EE8  03F3               	decf	___lwdiv@dividend+1,f
  4527  0EE9  02F3               	subwf	___lwdiv@dividend+1,f
  4528  0EEA                     l1652:
  4529  0EEA  1475               	bsf	___lwdiv@quotient,0
  4530  0EEB                     l1654:
  4531  0EEB  3001               	movlw	1
  4532  0EEC                     u1305:
  4533  0EEC  1003               	clrc
  4534  0EED  0CF1               	rrf	___lwdiv@divisor+1,f
  4535  0EEE  0CF0               	rrf	___lwdiv@divisor,f
  4536  0EEF  3EFF               	addlw	-1
  4537  0EF0  1D03               	skipz
  4538  0EF1  2EEC               	goto	u1305
  4539  0EF2                     l1656:
  4540  0EF2  3001               	movlw	1
  4541  0EF3  02F7               	subwf	___lwdiv@counter,f
  4542  0EF4  1D03               	btfss	3,2
  4543  0EF5  2EF7               	goto	u1311
  4544  0EF6  2EF8               	goto	u1310
  4545  0EF7                     u1311:
  4546  0EF7  2ED3               	goto	l1648
  4547  0EF8                     u1310:
  4548  0EF8                     l1658:
  4549  0EF8  0876               	movf	___lwdiv@quotient+1,w
  4550  0EF9  00F1               	movwf	?___lwdiv+1
  4551  0EFA  0875               	movf	___lwdiv@quotient,w
  4552  0EFB  00F0               	movwf	?___lwdiv
  4553  0EFC                     l644:
  4554  0EFC  0008               	return
  4555  0EFD                     __end_of___lwdiv:
  4556                           
  4557                           	psect	text26
  4558  0EFD                     __ptext26:	
  4559 ;; *************** function ___lmul *****************
  4560 ;; Defined at:
  4561 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  multiplier      4    0[COMMON] unsigned long 
  4564 ;;  multiplicand    4    4[COMMON] unsigned long 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  product         4    9[COMMON] unsigned long 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  4    0[COMMON] unsigned long 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4576 ;;      Params:         8       0       0       0       0
  4577 ;;      Locals:         4       0       0       0       0
  4578 ;;      Temps:          1       0       0       0       0
  4579 ;;      Totals:        13       0       0       0       0
  4580 ;;Total ram usage:       13 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_LCD_num
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           
  4590                           ;psect for function ___lmul
  4591  0EFD                     ___lmul:
  4592  0EFD                     l1500:	
  4593                           ;incstack = 0
  4594                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4595                           
  4596  0EFD  3000               	movlw	0
  4597  0EFE  00FC               	movwf	___lmul@product+3
  4598  0EFF  3000               	movlw	0
  4599  0F00  00FB               	movwf	___lmul@product+2
  4600  0F01  3000               	movlw	0
  4601  0F02  00FA               	movwf	___lmul@product+1
  4602  0F03  3000               	movlw	0
  4603  0F04  00F9               	movwf	___lmul@product
  4604  0F05                     l1502:
  4605  0F05  1C70               	btfss	___lmul@multiplier,0
  4606  0F06  2F08               	goto	u911
  4607  0F07  2F09               	goto	u910
  4608  0F08                     u911:
  4609  0F08  2F20               	goto	l1506
  4610  0F09                     u910:
  4611  0F09                     l1504:
  4612  0F09  0874               	movf	___lmul@multiplicand,w
  4613  0F0A  07F9               	addwf	___lmul@product,f
  4614  0F0B  0875               	movf	___lmul@multiplicand+1,w
  4615  0F0C  1103               	clrz
  4616  0F0D  1803               	skipnc
  4617  0F0E  3E01               	addlw	1
  4618  0F0F  1903               	skipnz
  4619  0F10  2F12               	goto	u921
  4620  0F11  07FA               	addwf	___lmul@product+1,f
  4621  0F12                     u921:
  4622  0F12  0876               	movf	___lmul@multiplicand+2,w
  4623  0F13  1103               	clrz
  4624  0F14  1803               	skipnc
  4625  0F15  3E01               	addlw	1
  4626  0F16  1903               	skipnz
  4627  0F17  2F19               	goto	u922
  4628  0F18  07FB               	addwf	___lmul@product+2,f
  4629  0F19                     u922:
  4630  0F19  0877               	movf	___lmul@multiplicand+3,w
  4631  0F1A  1103               	clrz
  4632  0F1B  1803               	skipnc
  4633  0F1C  3E01               	addlw	1
  4634  0F1D  1903               	skipnz
  4635  0F1E  2F20               	goto	u923
  4636  0F1F  07FC               	addwf	___lmul@product+3,f
  4637  0F20                     u923:
  4638  0F20                     l1506:
  4639  0F20  3001               	movlw	1
  4640  0F21  00F8               	movwf	??___lmul
  4641  0F22                     u935:
  4642  0F22  1003               	clrc
  4643  0F23  0DF4               	rlf	___lmul@multiplicand,f
  4644  0F24  0DF5               	rlf	___lmul@multiplicand+1,f
  4645  0F25  0DF6               	rlf	___lmul@multiplicand+2,f
  4646  0F26  0DF7               	rlf	___lmul@multiplicand+3,f
  4647  0F27  0BF8               	decfsz	??___lmul,f
  4648  0F28  2F22               	goto	u935
  4649  0F29                     l1508:
  4650  0F29  3001               	movlw	1
  4651  0F2A                     u945:
  4652  0F2A  1003               	clrc
  4653  0F2B  0CF3               	rrf	___lmul@multiplier+3,f
  4654  0F2C  0CF2               	rrf	___lmul@multiplier+2,f
  4655  0F2D  0CF1               	rrf	___lmul@multiplier+1,f
  4656  0F2E  0CF0               	rrf	___lmul@multiplier,f
  4657  0F2F  3EFF               	addlw	-1
  4658  0F30  1D03               	skipz
  4659  0F31  2F2A               	goto	u945
  4660  0F32  0873               	movf	___lmul@multiplier+3,w
  4661  0F33  0472               	iorwf	___lmul@multiplier+2,w
  4662  0F34  0471               	iorwf	___lmul@multiplier+1,w
  4663  0F35  0470               	iorwf	___lmul@multiplier,w
  4664  0F36  1D03               	skipz
  4665  0F37  2F39               	goto	u951
  4666  0F38  2F3A               	goto	u950
  4667  0F39                     u951:
  4668  0F39  2F05               	goto	l1502
  4669  0F3A                     u950:
  4670  0F3A                     l1510:
  4671  0F3A  087C               	movf	___lmul@product+3,w
  4672  0F3B  00F3               	movwf	?___lmul+3
  4673  0F3C  087B               	movf	___lmul@product+2,w
  4674  0F3D  00F2               	movwf	?___lmul+2
  4675  0F3E  087A               	movf	___lmul@product+1,w
  4676  0F3F  00F1               	movwf	?___lmul+1
  4677  0F40  0879               	movf	___lmul@product,w
  4678  0F41  00F0               	movwf	?___lmul
  4679  0F42                     l386:
  4680  0F42  0008               	return
  4681  0F43                     __end_of___lmul:
  4682                           
  4683                           	psect	text27
  4684  0102                     __ptext27:	
  4685 ;; *************** function ___aldiv *****************
  4686 ;; Defined at:
  4687 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  divisor         4    0[BANK0 ] long 
  4690 ;;  dividend        4    4[BANK0 ] long 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  quotient        4   10[BANK0 ] long 
  4693 ;;  sign            1    9[BANK0 ] unsigned char 
  4694 ;;  counter         1    8[BANK0 ] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  4    0[BANK0 ] long 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4704 ;;      Params:         0       8       0       0       0
  4705 ;;      Locals:         0       6       0       0       0
  4706 ;;      Temps:          1       0       0       0       0
  4707 ;;      Totals:         1      14       0       0       0
  4708 ;;Total ram usage:       15 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_LCD_num
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           
  4718                           ;psect for function ___aldiv
  4719  0102                     ___aldiv:
  4720  0102                     l1514:	
  4721                           ;incstack = 0
  4722                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4723                           
  4724  0102  1283               	bcf	3,5	;RP0=0, select bank0
  4725  0103  1303               	bcf	3,6	;RP1=0, select bank0
  4726  0104  01A9               	clrf	___aldiv@sign
  4727  0105                     l1516:
  4728  0105  1FA3               	btfss	___aldiv@divisor+3,7
  4729  0106  2908               	goto	u961
  4730  0107  2909               	goto	u960
  4731  0108                     u961:
  4732  0108  2916               	goto	l437
  4733  0109                     u960:
  4734  0109                     l1518:
  4735  0109  09A0               	comf	___aldiv@divisor,f
  4736  010A  09A1               	comf	___aldiv@divisor+1,f
  4737  010B  09A2               	comf	___aldiv@divisor+2,f
  4738  010C  09A3               	comf	___aldiv@divisor+3,f
  4739  010D  0AA0               	incf	___aldiv@divisor,f
  4740  010E  1903               	skipnz
  4741  010F  0AA1               	incf	___aldiv@divisor+1,f
  4742  0110  1903               	skipnz
  4743  0111  0AA2               	incf	___aldiv@divisor+2,f
  4744  0112  1903               	skipnz
  4745  0113  0AA3               	incf	___aldiv@divisor+3,f
  4746  0114  01A9               	clrf	___aldiv@sign
  4747  0115  0AA9               	incf	___aldiv@sign,f
  4748  0116                     l437:
  4749  0116  1FA7               	btfss	___aldiv@dividend+3,7
  4750  0117  2919               	goto	u971
  4751  0118  291A               	goto	u970
  4752  0119                     u971:
  4753  0119  2929               	goto	l1524
  4754  011A                     u970:
  4755  011A                     l1520:
  4756  011A  09A4               	comf	___aldiv@dividend,f
  4757  011B  09A5               	comf	___aldiv@dividend+1,f
  4758  011C  09A6               	comf	___aldiv@dividend+2,f
  4759  011D  09A7               	comf	___aldiv@dividend+3,f
  4760  011E  0AA4               	incf	___aldiv@dividend,f
  4761  011F  1903               	skipnz
  4762  0120  0AA5               	incf	___aldiv@dividend+1,f
  4763  0121  1903               	skipnz
  4764  0122  0AA6               	incf	___aldiv@dividend+2,f
  4765  0123  1903               	skipnz
  4766  0124  0AA7               	incf	___aldiv@dividend+3,f
  4767  0125                     l1522:
  4768  0125  3001               	movlw	1
  4769  0126  00FD               	movwf	??___aldiv
  4770  0127  087D               	movf	??___aldiv,w
  4771  0128  06A9               	xorwf	___aldiv@sign,f
  4772  0129                     l1524:
  4773  0129  3000               	movlw	0
  4774  012A  00AD               	movwf	___aldiv@quotient+3
  4775  012B  3000               	movlw	0
  4776  012C  00AC               	movwf	___aldiv@quotient+2
  4777  012D  3000               	movlw	0
  4778  012E  00AB               	movwf	___aldiv@quotient+1
  4779  012F  3000               	movlw	0
  4780  0130  00AA               	movwf	___aldiv@quotient
  4781  0131                     l1526:
  4782  0131  0823               	movf	___aldiv@divisor+3,w
  4783  0132  0422               	iorwf	___aldiv@divisor+2,w
  4784  0133  0421               	iorwf	___aldiv@divisor+1,w
  4785  0134  0420               	iorwf	___aldiv@divisor,w
  4786  0135  1903               	skipnz
  4787  0136  2938               	goto	u981
  4788  0137  2939               	goto	u980
  4789  0138                     u981:
  4790  0138  2986               	goto	l1546
  4791  0139                     u980:
  4792  0139                     l1528:
  4793  0139  01A8               	clrf	___aldiv@counter
  4794  013A  0AA8               	incf	___aldiv@counter,f
  4795  013B  2949               	goto	l1532
  4796  013C                     l1530:
  4797  013C  3001               	movlw	1
  4798  013D  00FD               	movwf	??___aldiv
  4799  013E                     u995:
  4800  013E  1003               	clrc
  4801  013F  0DA0               	rlf	___aldiv@divisor,f
  4802  0140  0DA1               	rlf	___aldiv@divisor+1,f
  4803  0141  0DA2               	rlf	___aldiv@divisor+2,f
  4804  0142  0DA3               	rlf	___aldiv@divisor+3,f
  4805  0143  0BFD               	decfsz	??___aldiv,f
  4806  0144  293E               	goto	u995
  4807  0145  3001               	movlw	1
  4808  0146  00FD               	movwf	??___aldiv
  4809  0147  087D               	movf	??___aldiv,w
  4810  0148  07A8               	addwf	___aldiv@counter,f
  4811  0149                     l1532:
  4812  0149  1FA3               	btfss	___aldiv@divisor+3,7
  4813  014A  294C               	goto	u1001
  4814  014B  294D               	goto	u1000
  4815  014C                     u1001:
  4816  014C  293C               	goto	l1530
  4817  014D                     u1000:
  4818  014D                     l1534:
  4819  014D  3001               	movlw	1
  4820  014E  00FD               	movwf	??___aldiv
  4821  014F                     u1015:
  4822  014F  1003               	clrc
  4823  0150  0DAA               	rlf	___aldiv@quotient,f
  4824  0151  0DAB               	rlf	___aldiv@quotient+1,f
  4825  0152  0DAC               	rlf	___aldiv@quotient+2,f
  4826  0153  0DAD               	rlf	___aldiv@quotient+3,f
  4827  0154  0BFD               	decfsz	??___aldiv,f
  4828  0155  294F               	goto	u1015
  4829  0156                     l1536:
  4830  0156  0823               	movf	___aldiv@divisor+3,w
  4831  0157  0227               	subwf	___aldiv@dividend+3,w
  4832  0158  1D03               	skipz
  4833  0159  2964               	goto	u1025
  4834  015A  0822               	movf	___aldiv@divisor+2,w
  4835  015B  0226               	subwf	___aldiv@dividend+2,w
  4836  015C  1D03               	skipz
  4837  015D  2964               	goto	u1025
  4838  015E  0821               	movf	___aldiv@divisor+1,w
  4839  015F  0225               	subwf	___aldiv@dividend+1,w
  4840  0160  1D03               	skipz
  4841  0161  2964               	goto	u1025
  4842  0162  0820               	movf	___aldiv@divisor,w
  4843  0163  0224               	subwf	___aldiv@dividend,w
  4844  0164                     u1025:
  4845  0164  1C03               	skipc
  4846  0165  2967               	goto	u1021
  4847  0166  2968               	goto	u1020
  4848  0167                     u1021:
  4849  0167  2977               	goto	l1542
  4850  0168                     u1020:
  4851  0168                     l1538:
  4852  0168  0820               	movf	___aldiv@divisor,w
  4853  0169  02A4               	subwf	___aldiv@dividend,f
  4854  016A  0821               	movf	___aldiv@divisor+1,w
  4855  016B  1C03               	skipc
  4856  016C  0F21               	incfsz	___aldiv@divisor+1,w
  4857  016D  02A5               	subwf	___aldiv@dividend+1,f
  4858  016E  0822               	movf	___aldiv@divisor+2,w
  4859  016F  1C03               	skipc
  4860  0170  0F22               	incfsz	___aldiv@divisor+2,w
  4861  0171  02A6               	subwf	___aldiv@dividend+2,f
  4862  0172  0823               	movf	___aldiv@divisor+3,w
  4863  0173  1C03               	skipc
  4864  0174  0F23               	incfsz	___aldiv@divisor+3,w
  4865  0175  02A7               	subwf	___aldiv@dividend+3,f
  4866  0176                     l1540:
  4867  0176  142A               	bsf	___aldiv@quotient,0
  4868  0177                     l1542:
  4869  0177  3001               	movlw	1
  4870  0178                     u1035:
  4871  0178  1003               	clrc
  4872  0179  0CA3               	rrf	___aldiv@divisor+3,f
  4873  017A  0CA2               	rrf	___aldiv@divisor+2,f
  4874  017B  0CA1               	rrf	___aldiv@divisor+1,f
  4875  017C  0CA0               	rrf	___aldiv@divisor,f
  4876  017D  3EFF               	addlw	-1
  4877  017E  1D03               	skipz
  4878  017F  2978               	goto	u1035
  4879  0180                     l1544:
  4880  0180  3001               	movlw	1
  4881  0181  02A8               	subwf	___aldiv@counter,f
  4882  0182  1D03               	btfss	3,2
  4883  0183  2985               	goto	u1041
  4884  0184  2986               	goto	u1040
  4885  0185                     u1041:
  4886  0185  294D               	goto	l1534
  4887  0186                     u1040:
  4888  0186                     l1546:
  4889  0186  0829               	movf	___aldiv@sign,w
  4890  0187  1903               	btfsc	3,2
  4891  0188  298A               	goto	u1051
  4892  0189  298B               	goto	u1050
  4893  018A                     u1051:
  4894  018A  2996               	goto	l1550
  4895  018B                     u1050:
  4896  018B                     l1548:
  4897  018B  09AA               	comf	___aldiv@quotient,f
  4898  018C  09AB               	comf	___aldiv@quotient+1,f
  4899  018D  09AC               	comf	___aldiv@quotient+2,f
  4900  018E  09AD               	comf	___aldiv@quotient+3,f
  4901  018F  0AAA               	incf	___aldiv@quotient,f
  4902  0190  1903               	skipnz
  4903  0191  0AAB               	incf	___aldiv@quotient+1,f
  4904  0192  1903               	skipnz
  4905  0193  0AAC               	incf	___aldiv@quotient+2,f
  4906  0194  1903               	skipnz
  4907  0195  0AAD               	incf	___aldiv@quotient+3,f
  4908  0196                     l1550:
  4909  0196  082D               	movf	___aldiv@quotient+3,w
  4910  0197  00A3               	movwf	?___aldiv+3
  4911  0198  082C               	movf	___aldiv@quotient+2,w
  4912  0199  00A2               	movwf	?___aldiv+2
  4913  019A  082B               	movf	___aldiv@quotient+1,w
  4914  019B  00A1               	movwf	?___aldiv+1
  4915  019C  082A               	movf	___aldiv@quotient,w
  4916  019D  00A0               	movwf	?___aldiv
  4917  019E                     l447:
  4918  019E  0008               	return
  4919  019F                     __end_of___aldiv:
  4920                           
  4921                           	psect	text28
  4922  0E37                     __ptext28:	
  4923 ;; *************** function _LCD_Char *****************
  4924 ;; Defined at:
  4925 ;;		line 27 in file "./lcd4bit.h"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  data            1    wreg     unsigned char 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  data            1    2[COMMON] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4939 ;;      Params:         0       0       0       0       0
  4940 ;;      Locals:         1       0       0       0       0
  4941 ;;      Temps:          2       0       0       0       0
  4942 ;;      Totals:         3       0       0       0       0
  4943 ;;Total ram usage:        3 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_LCD_num
  4949 ;;		_show
  4950 ;;		_show_multidigits
  4951 ;;		_main
  4952 ;;		_print_analogvoltages
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           
  4957                           ;psect for function _LCD_Char
  4958  0E37                     _LCD_Char:
  4959                           
  4960                           ;incstack = 0
  4961                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  4962                           ;LCD_Char@data stored from wreg
  4963  0E37  00F2               	movwf	LCD_Char@data
  4964  0E38                     l1476:
  4965                           
  4966                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  4967  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  4968  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  4969  0E3A  1407               	bsf	7,0	;volatile
  4970  0E3B                     l1478:
  4971                           
  4972                           ;./lcd4bit.h: 30:     PORTB = data;
  4973  0E3B  0872               	movf	LCD_Char@data,w
  4974  0E3C  0086               	movwf	6	;volatile
  4975  0E3D                     l1480:
  4976                           
  4977                           ;./lcd4bit.h: 31:     RC1 = 1;
  4978  0E3D  1487               	bsf	7,1	;volatile
  4979                           
  4980                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4981  0E3E  3041               	movlw	65
  4982  0E3F  00F1               	movwf	??_LCD_Char+1
  4983  0E40  30EE               	movlw	238
  4984  0E41  00F0               	movwf	??_LCD_Char
  4985  0E42                     u1837:
  4986  0E42  0BF0               	decfsz	??_LCD_Char,f
  4987  0E43  2E42               	goto	u1837
  4988  0E44  0BF1               	decfsz	??_LCD_Char+1,f
  4989  0E45  2E42               	goto	u1837
  4990  0E46  0000               	nop
  4991  0E47                     l1482:
  4992                           
  4993                           ;./lcd4bit.h: 33:     RC1 = 0;
  4994  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  4995  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  4996  0E49  1087               	bcf	7,1	;volatile
  4997                           
  4998                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4999  0E4A  3041               	movlw	65
  5000  0E4B  00F1               	movwf	??_LCD_Char+1
  5001  0E4C  30EE               	movlw	238
  5002  0E4D  00F0               	movwf	??_LCD_Char
  5003  0E4E                     u1847:
  5004  0E4E  0BF0               	decfsz	??_LCD_Char,f
  5005  0E4F  2E4E               	goto	u1847
  5006  0E50  0BF1               	decfsz	??_LCD_Char+1,f
  5007  0E51  2E4E               	goto	u1847
  5008  0E52  0000               	nop
  5009  0E53                     l1484:
  5010                           
  5011                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  5012  0E53  0872               	movf	LCD_Char@data,w
  5013  0E54  00F0               	movwf	??_LCD_Char
  5014  0E55  3003               	movlw	3
  5015  0E56                     u885:
  5016  0E56  1003               	clrc
  5017  0E57  0DF0               	rlf	??_LCD_Char,f
  5018  0E58  3EFF               	addlw	-1
  5019  0E59  1D03               	skipz
  5020  0E5A  2E56               	goto	u885
  5021  0E5B  1003               	clrc
  5022  0E5C  0D70               	rlf	??_LCD_Char,w
  5023  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  5024  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  5025  0E5F  0086               	movwf	6	;volatile
  5026  0E60                     l1486:
  5027                           
  5028                           ;./lcd4bit.h: 36:     RC1 = 1;
  5029  0E60  1487               	bsf	7,1	;volatile
  5030  0E61                     l1488:
  5031                           
  5032                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5033  0E61  3041               	movlw	65
  5034  0E62  00F1               	movwf	??_LCD_Char+1
  5035  0E63  30EE               	movlw	238
  5036  0E64  00F0               	movwf	??_LCD_Char
  5037  0E65                     u1857:
  5038  0E65  0BF0               	decfsz	??_LCD_Char,f
  5039  0E66  2E65               	goto	u1857
  5040  0E67  0BF1               	decfsz	??_LCD_Char+1,f
  5041  0E68  2E65               	goto	u1857
  5042  0E69  0000               	nop
  5043  0E6A                     l1490:
  5044                           
  5045                           ;./lcd4bit.h: 38:     RC1 = 0;
  5046  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5047  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5048  0E6C  1087               	bcf	7,1	;volatile
  5049  0E6D                     l1492:
  5050                           
  5051                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5052  0E6D  3041               	movlw	65
  5053  0E6E  00F1               	movwf	??_LCD_Char+1
  5054  0E6F  30EE               	movlw	238
  5055  0E70  00F0               	movwf	??_LCD_Char
  5056  0E71                     u1867:
  5057  0E71  0BF0               	decfsz	??_LCD_Char,f
  5058  0E72  2E71               	goto	u1867
  5059  0E73  0BF1               	decfsz	??_LCD_Char+1,f
  5060  0E74  2E71               	goto	u1867
  5061  0E75  0000               	nop
  5062  0E76                     l92:
  5063  0E76  0008               	return
  5064  0E77                     __end_of_LCD_Char:
  5065                           
  5066                           	psect	text29
  5067  0CA7                     __ptext29:	
  5068 ;; *************** function _convup *****************
  5069 ;; Defined at:
  5070 ;;		line 97 in file "./ds1307.h"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  bcd             1    wreg     unsigned char 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  bcd             1    1[COMMON] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      unsigned char 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, status,0
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5084 ;;      Params:         0       0       0       0       0
  5085 ;;      Locals:         1       0       0       0       0
  5086 ;;      Temps:          1       0       0       0       0
  5087 ;;      Totals:         2       0       0       0       0
  5088 ;;Total ram usage:        2 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_main
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           
  5098                           ;psect for function _convup
  5099  0CA7                     _convup:
  5100                           
  5101                           ;incstack = 0
  5102                           ; Regs used in _convup: [wreg+status,2+status,0]
  5103                           ;convup@bcd stored from wreg
  5104  0CA7  00F1               	movwf	convup@bcd
  5105  0CA8                     l1954:
  5106                           
  5107                           ;./ds1307.h: 97: unsigned char convup(unsigned char bcd);./ds1307.h: 98: {;./ds1307.h: 9
      +                          9:     return ((bcd>>4)+48);
  5108  0CA8  0871               	movf	convup@bcd,w
  5109  0CA9  00F0               	movwf	??_convup
  5110  0CAA  3004               	movlw	4
  5111  0CAB                     u1665:
  5112  0CAB  1003               	clrc
  5113  0CAC  0CF0               	rrf	??_convup,f
  5114  0CAD  3EFF               	addlw	-1
  5115  0CAE  1D03               	skipz
  5116  0CAF  2CAB               	goto	u1665
  5117  0CB0  0870               	movf	??_convup,w
  5118  0CB1  3E30               	addlw	48
  5119  0CB2                     l241:
  5120  0CB2  0008               	return
  5121  0CB3                     __end_of_convup:
  5122                           
  5123                           	psect	text30
  5124  0C74                     __ptext30:	
  5125 ;; *************** function _convd *****************
  5126 ;; Defined at:
  5127 ;;		line 101 in file "./ds1307.h"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  bcd             1    wreg     unsigned char 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  bcd             1    0[COMMON] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      unsigned char 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5141 ;;      Params:         0       0       0       0       0
  5142 ;;      Locals:         1       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0
  5144 ;;      Totals:         1       0       0       0       0
  5145 ;;Total ram usage:        1 bytes
  5146 ;; Hardware stack levels used: 1
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_main
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function _convd
  5156  0C74                     _convd:
  5157                           
  5158                           ;incstack = 0
  5159                           ; Regs used in _convd: [wreg+status,2+status,0]
  5160                           ;convd@bcd stored from wreg
  5161  0C74  00F0               	movwf	convd@bcd
  5162  0C75                     l1958:
  5163                           
  5164                           ;./ds1307.h: 101: unsigned char convd(unsigned char bcd);./ds1307.h: 102: {;./ds1307.h: 
      +                          103:     return ((bcd&0x0F)+48);
  5165  0C75  0870               	movf	convd@bcd,w
  5166  0C76  390F               	andlw	15
  5167  0C77  3E30               	addlw	48
  5168  0C78                     l244:
  5169  0C78  0008               	return
  5170  0C79                     __end_of_convd:
  5171                           
  5172                           	psect	text31
  5173  0D4D                     __ptext31:	
  5174 ;; *************** function _LCD_init *****************
  5175 ;; Defined at:
  5176 ;;		line 41 in file "./lcd4bit.h"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0, pclath, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5190 ;;      Params:         0       0       0       0       0
  5191 ;;      Locals:         0       0       0       0       0
  5192 ;;      Temps:          2       0       0       0       0
  5193 ;;      Totals:         2       0       0       0       0
  5194 ;;Total ram usage:        2 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; Hardware stack levels required when called: 1
  5197 ;; This function calls:
  5198 ;;		_LCD_Command
  5199 ;; This function is called by:
  5200 ;;		_main
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _LCD_init
  5206  0D4D                     _LCD_init:
  5207  0D4D                     l1922:	
  5208                           ;incstack = 0
  5209                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  5210                           
  5211                           
  5212                           ;./lcd4bit.h: 43:     TRISBbits.TRISB7 =0;
  5213  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  5214  0D4E  1303               	bcf	3,6	;RP1=0, select bank1
  5215  0D4F  1386               	bcf	6,7	;volatile
  5216                           
  5217                           ;./lcd4bit.h: 44:     TRISBbits.TRISB6 =0;
  5218  0D50  1306               	bcf	6,6	;volatile
  5219                           
  5220                           ;./lcd4bit.h: 45:     TRISBbits.TRISB5 =0;
  5221  0D51  1286               	bcf	6,5	;volatile
  5222                           
  5223                           ;./lcd4bit.h: 46:     TRISBbits.TRISB4 =0;
  5224  0D52  1206               	bcf	6,4	;volatile
  5225                           
  5226                           ;./lcd4bit.h: 47:     TRISCbits.TRISC0 =0;
  5227  0D53  1007               	bcf	7,0	;volatile
  5228                           
  5229                           ;./lcd4bit.h: 48:     TRISCbits.TRISC1 =0;
  5230  0D54  1087               	bcf	7,1	;volatile
  5231  0D55                     l1924:
  5232                           
  5233                           ;./lcd4bit.h: 50:     LCD_Command (0x02);
  5234  0D55  3002               	movlw	2
  5235  0D56  120A  158A  25F7  120A  158A  	fcall	_LCD_Command
  5236                           
  5237                           ;./lcd4bit.h: 51:     LCD_Command (0x28);
  5238  0D5B  3028               	movlw	40
  5239  0D5C  120A  158A  25F7  120A  158A  	fcall	_LCD_Command
  5240                           
  5241                           ;./lcd4bit.h: 52:     LCD_Command (0x80);
  5242  0D61  3080               	movlw	128
  5243  0D62  120A  158A  25F7  120A  158A  	fcall	_LCD_Command
  5244                           
  5245                           ;./lcd4bit.h: 53:     LCD_Command (0x0C);
  5246  0D67  300C               	movlw	12
  5247  0D68  120A  158A  25F7  120A  158A  	fcall	_LCD_Command
  5248                           
  5249                           ;./lcd4bit.h: 54:     LCD_Command (0x06);
  5250  0D6D  3006               	movlw	6
  5251  0D6E  120A  158A  25F7  120A  158A  	fcall	_LCD_Command
  5252                           
  5253                           ;./lcd4bit.h: 55:     LCD_Command (0x01);
  5254  0D73  3001               	movlw	1
  5255  0D74  120A  158A  25F7  120A  158A  	fcall	_LCD_Command
  5256  0D79                     l1926:
  5257                           
  5258                           ;./lcd4bit.h: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5259  0D79  3041               	movlw	65
  5260  0D7A  00F4               	movwf	??_LCD_init+1
  5261  0D7B  30EE               	movlw	238
  5262  0D7C  00F3               	movwf	??_LCD_init
  5263  0D7D                     u1877:
  5264  0D7D  0BF3               	decfsz	??_LCD_init,f
  5265  0D7E  2D7D               	goto	u1877
  5266  0D7F  0BF4               	decfsz	??_LCD_init+1,f
  5267  0D80  2D7D               	goto	u1877
  5268  0D81  0000               	nop
  5269  0D82                     l95:
  5270  0D82  0008               	return
  5271  0D83                     __end_of_LCD_init:
  5272                           
  5273                           	psect	text32
  5274  0DF7                     __ptext32:	
  5275 ;; *************** function _LCD_Command *****************
  5276 ;; Defined at:
  5277 ;;		line 13 in file "./lcd4bit.h"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  cmnd            1    wreg     unsigned char 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  cmnd            1    2[COMMON] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5291 ;;      Params:         0       0       0       0       0
  5292 ;;      Locals:         1       0       0       0       0
  5293 ;;      Temps:          2       0       0       0       0
  5294 ;;      Totals:         3       0       0       0       0
  5295 ;;Total ram usage:        3 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_LCD_init
  5301 ;;		_main
  5302 ;;		_print_dht11data
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           
  5307                           ;psect for function _LCD_Command
  5308  0DF7                     _LCD_Command:
  5309                           
  5310                           ;incstack = 0
  5311                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  5312                           ;LCD_Command@cmnd stored from wreg
  5313  0DF7  00F2               	movwf	LCD_Command@cmnd
  5314  0DF8                     l1684:
  5315                           
  5316                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  5317  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  5318  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  5319  0DFA  1007               	bcf	7,0	;volatile
  5320  0DFB                     l1686:
  5321                           
  5322                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  5323  0DFB  0872               	movf	LCD_Command@cmnd,w
  5324  0DFC  0086               	movwf	6	;volatile
  5325  0DFD                     l1688:
  5326                           
  5327                           ;./lcd4bit.h: 17:     RC1 = 1;
  5328  0DFD  1487               	bsf	7,1	;volatile
  5329                           
  5330                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5331  0DFE  3041               	movlw	65
  5332  0DFF  00F1               	movwf	??_LCD_Command+1
  5333  0E00  30EE               	movlw	238
  5334  0E01  00F0               	movwf	??_LCD_Command
  5335  0E02                     u1887:
  5336  0E02  0BF0               	decfsz	??_LCD_Command,f
  5337  0E03  2E02               	goto	u1887
  5338  0E04  0BF1               	decfsz	??_LCD_Command+1,f
  5339  0E05  2E02               	goto	u1887
  5340  0E06  0000               	nop
  5341  0E07                     l1690:
  5342                           
  5343                           ;./lcd4bit.h: 19:     RC1 = 0;
  5344  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5345  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5346  0E09  1087               	bcf	7,1	;volatile
  5347                           
  5348                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5349  0E0A  3041               	movlw	65
  5350  0E0B  00F1               	movwf	??_LCD_Command+1
  5351  0E0C  30EE               	movlw	238
  5352  0E0D  00F0               	movwf	??_LCD_Command
  5353  0E0E                     u1897:
  5354  0E0E  0BF0               	decfsz	??_LCD_Command,f
  5355  0E0F  2E0E               	goto	u1897
  5356  0E10  0BF1               	decfsz	??_LCD_Command+1,f
  5357  0E11  2E0E               	goto	u1897
  5358  0E12  0000               	nop
  5359  0E13                     l1692:
  5360                           
  5361                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  5362  0E13  0872               	movf	LCD_Command@cmnd,w
  5363  0E14  00F0               	movwf	??_LCD_Command
  5364  0E15  3003               	movlw	3
  5365  0E16                     u1385:
  5366  0E16  1003               	clrc
  5367  0E17  0DF0               	rlf	??_LCD_Command,f
  5368  0E18  3EFF               	addlw	-1
  5369  0E19  1D03               	skipz
  5370  0E1A  2E16               	goto	u1385
  5371  0E1B  1003               	clrc
  5372  0E1C  0D70               	rlf	??_LCD_Command,w
  5373  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  5374  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  5375  0E1F  0086               	movwf	6	;volatile
  5376  0E20                     l1694:
  5377                           
  5378                           ;./lcd4bit.h: 22:     RC1 = 1;
  5379  0E20  1487               	bsf	7,1	;volatile
  5380  0E21                     l1696:
  5381                           
  5382                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5383  0E21  3041               	movlw	65
  5384  0E22  00F1               	movwf	??_LCD_Command+1
  5385  0E23  30EE               	movlw	238
  5386  0E24  00F0               	movwf	??_LCD_Command
  5387  0E25                     u1907:
  5388  0E25  0BF0               	decfsz	??_LCD_Command,f
  5389  0E26  2E25               	goto	u1907
  5390  0E27  0BF1               	decfsz	??_LCD_Command+1,f
  5391  0E28  2E25               	goto	u1907
  5392  0E29  0000               	nop
  5393  0E2A                     l1698:
  5394                           
  5395                           ;./lcd4bit.h: 24:     RC1 = 0;
  5396  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  5397  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  5398  0E2C  1087               	bcf	7,1	;volatile
  5399  0E2D                     l1700:
  5400                           
  5401                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5402  0E2D  3041               	movlw	65
  5403  0E2E  00F1               	movwf	??_LCD_Command+1
  5404  0E2F  30EE               	movlw	238
  5405  0E30  00F0               	movwf	??_LCD_Command
  5406  0E31                     u1917:
  5407  0E31  0BF0               	decfsz	??_LCD_Command,f
  5408  0E32  2E31               	goto	u1917
  5409  0E33  0BF1               	decfsz	??_LCD_Command+1,f
  5410  0E34  2E31               	goto	u1917
  5411  0E35  0000               	nop
  5412  0E36                     l89:
  5413  0E36  0008               	return
  5414  0E37                     __end_of_LCD_Command:
  5415                           
  5416                           	psect	text33
  5417  0F9C                     __ptext33:	
  5418 ;; *************** function _ADC_Init *****************
  5419 ;; Defined at:
  5420 ;;		line 98 in file "main.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5434 ;;      Params:         0       0       0       0       0
  5435 ;;      Locals:         0       0       0       0       0
  5436 ;;      Temps:          2       0       0       0       0
  5437 ;;      Totals:         2       0       0       0       0
  5438 ;;Total ram usage:        2 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_main
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           
  5448                           ;psect for function _ADC_Init
  5449  0F9C                     _ADC_Init:
  5450  0F9C                     l1964:	
  5451                           ;incstack = 0
  5452                           ; Regs used in _ADC_Init: [wreg]
  5453                           
  5454                           
  5455                           ;main.c: 100:     ADCON0 = 0x85;
  5456  0F9C  3085               	movlw	133
  5457  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  5458  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  5459  0F9F  009F               	movwf	31	;volatile
  5460                           
  5461                           ;main.c: 101:     ADCON1 = 0xC0;
  5462  0FA0  30C0               	movlw	192
  5463  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  5464  0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  5465  0FA3  009F               	movwf	31	;volatile
  5466                           
  5467                           ;main.c: 102:     AV[0]= ((ADRESH<<8)+ADRESL);
  5468  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  5469  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  5470  0FA6  081E               	movf	30,w	;volatile
  5471  0FA7  00C7               	movwf	_AV+1
  5472  0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  5473  0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  5474  0FAA  081E               	movf	30,w	;volatile
  5475  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  5476  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  5477  0FAD  00C6               	movwf	_AV
  5478                           
  5479                           ;main.c: 104:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5480  0FAE  3041               	movlw	65
  5481  0FAF  00F1               	movwf	??_ADC_Init+1
  5482  0FB0  30EE               	movlw	238
  5483  0FB1  00F0               	movwf	??_ADC_Init
  5484  0FB2                     u1927:
  5485  0FB2  0BF0               	decfsz	??_ADC_Init,f
  5486  0FB3  2FB2               	goto	u1927
  5487  0FB4  0BF1               	decfsz	??_ADC_Init+1,f
  5488  0FB5  2FB2               	goto	u1927
  5489  0FB6  0000               	nop
  5490                           
  5491                           ;main.c: 105:     ADCON0 = 0x8D;
  5492  0FB7  308D               	movlw	141
  5493  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  5494  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  5495  0FBA  009F               	movwf	31	;volatile
  5496                           
  5497                           ;main.c: 106:     ADCON1 = 0xC0;
  5498  0FBB  30C0               	movlw	192
  5499  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  5500  0FBD  1303               	bcf	3,6	;RP1=0, select bank1
  5501  0FBE  009F               	movwf	31	;volatile
  5502                           
  5503                           ;main.c: 107:     AV[1]= ((ADRESH<<8)+ADRESL);
  5504  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  5505  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  5506  0FC1  081E               	movf	30,w	;volatile
  5507  0FC2  00C9               	movwf	_AV+3
  5508  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  5509  0FC4  1303               	bcf	3,6	;RP1=0, select bank1
  5510  0FC5  081E               	movf	30,w	;volatile
  5511  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  5512  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  5513  0FC8  00C8               	movwf	_AV+2
  5514                           
  5515                           ;main.c: 109:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5516  0FC9  3041               	movlw	65
  5517  0FCA  00F1               	movwf	??_ADC_Init+1
  5518  0FCB  30EE               	movlw	238
  5519  0FCC  00F0               	movwf	??_ADC_Init
  5520  0FCD                     u1937:
  5521  0FCD  0BF0               	decfsz	??_ADC_Init,f
  5522  0FCE  2FCD               	goto	u1937
  5523  0FCF  0BF1               	decfsz	??_ADC_Init+1,f
  5524  0FD0  2FCD               	goto	u1937
  5525  0FD1  0000               	nop
  5526                           
  5527                           ;main.c: 110:     ADCON0 = 0x95;
  5528  0FD2  3095               	movlw	149
  5529  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  5530  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  5531  0FD5  009F               	movwf	31	;volatile
  5532                           
  5533                           ;main.c: 111:     ADCON1 = 0xC0;
  5534  0FD6  30C0               	movlw	192
  5535  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  5536  0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  5537  0FD9  009F               	movwf	31	;volatile
  5538                           
  5539                           ;main.c: 112:     AV[2]= ((ADRESH<<8)+ADRESL);
  5540  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  5541  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  5542  0FDC  081E               	movf	30,w	;volatile
  5543  0FDD  00CB               	movwf	_AV+5
  5544  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  5545  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  5546  0FE0  081E               	movf	30,w	;volatile
  5547  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  5548  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  5549  0FE3  00CA               	movwf	_AV+4
  5550                           
  5551                           ;main.c: 114:     _delay((unsigned long)((10)*(20000000/4000.0)));
  5552  0FE4  3041               	movlw	65
  5553  0FE5  00F1               	movwf	??_ADC_Init+1
  5554  0FE6  30EE               	movlw	238
  5555  0FE7  00F0               	movwf	??_ADC_Init
  5556  0FE8                     u1947:
  5557  0FE8  0BF0               	decfsz	??_ADC_Init,f
  5558  0FE9  2FE8               	goto	u1947
  5559  0FEA  0BF1               	decfsz	??_ADC_Init+1,f
  5560  0FEB  2FE8               	goto	u1947
  5561  0FEC  0000               	nop
  5562                           
  5563                           ;main.c: 115:     ADCON0 = 0x9D;
  5564  0FED  309D               	movlw	157
  5565  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  5566  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  5567  0FF0  009F               	movwf	31	;volatile
  5568                           
  5569                           ;main.c: 116:     ADCON1 = 0xC0;
  5570  0FF1  30C0               	movlw	192
  5571  0FF2  1683               	bsf	3,5	;RP0=1, select bank1
  5572  0FF3  1303               	bcf	3,6	;RP1=0, select bank1
  5573  0FF4  009F               	movwf	31	;volatile
  5574                           
  5575                           ;main.c: 117:     AV[3]= ((ADRESH<<8)+ADRESL);
  5576  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  5578  0FF7  081E               	movf	30,w	;volatile
  5579  0FF8  00CD               	movwf	_AV+7
  5580  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  5581  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  5582  0FFB  081E               	movf	30,w	;volatile
  5583  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  5584  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  5585  0FFE  00CC               	movwf	_AV+6
  5586  0FFF                     l268:
  5587  0FFF  0008               	return
  5588  1000                     __end_of_ADC_Init:
  5589  007E                     btemp	set	126	;btemp
  5590  007E                     wtemp0	set	126
  5591                           
  5592                           	psect	idloc
  5593                           
  5594                           ;Config register IDLOC0 @ 0x2000
  5595                           ;	unspecified, using default values
  5596  2000                     	org	8192
  5597  2000  3FFF               	dw	16383
  5598                           
  5599                           ;Config register IDLOC1 @ 0x2001
  5600                           ;	unspecified, using default values
  5601  2001                     	org	8193
  5602  2001  3FFF               	dw	16383
  5603                           
  5604                           ;Config register IDLOC2 @ 0x2002
  5605                           ;	unspecified, using default values
  5606  2002                     	org	8194
  5607  2002  3FFF               	dw	16383
  5608                           
  5609                           ;Config register IDLOC3 @ 0x2003
  5610                           ;	unspecified, using default values
  5611  2003                     	org	8195
  5612  2003  3FFF               	dw	16383
  5613                           
  5614                           	psect	config
  5615                           
  5616                           ;Config register CONFIG @ 0x2007
  5617                           ;	Oscillator Selection bits
  5618                           ;	FOSC = HS, HS oscillator
  5619                           ;	Watchdog Timer Enable bit
  5620                           ;	WDTE = OFF, WDT disabled
  5621                           ;	Power-up Timer Enable bit
  5622                           ;	PWRTE = OFF, PWRT disabled
  5623                           ;	Brown-out Reset Enable bit
  5624                           ;	BOREN = ON, BOR enabled
  5625                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5626                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  5627                           ;	Data EEPROM Memory Code Protection bit
  5628                           ;	CPD = OFF, Data EEPROM code protection off
  5629                           ;	Flash Program Memory Write Enable bits
  5630                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5631                           ;	In-Circuit Debugger Mode bit
  5632                           ;	DEBUG = 0x1, unprogrammed default
  5633                           ;	Flash Program Memory Code Protection bit
  5634                           ;	CP = OFF, Code protection off
  5635  2007                     	org	8199
  5636  2007  3FFA               	dw	16378

Data Sizes:
    Strings     12
    Constant    0
    Data        2
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      77
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _rtc_read_byte->_rtc_send
    _print_serialnumber->_tx_sn
    _print_dht11data->_show_multidigits
    _print_dht11data->_tx_sn
    _tx_sn->___awdiv
    _show_multidigits->___awdiv
    _show->_LCD_Char
    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_print_analogvoltages
    _print_serialnumber->_tx_sn
    _print_dht11data->_show_multidigits
    _print_dht11data->_tx_sn
    _print_analogvoltages->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   23649
                                             35 BANK0      3     3      0
                           _ADC_Init
                           _LCD_Char
                        _LCD_Command
                           _LCD_init
                              _convd
                             _convup
               _print_analogvoltages
                    _print_dht11data
                 _print_serialnumber
                            _rtc_int
                      _rtc_read_byte
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_read_byte                                        3     3      0      67
                                              1 COMMON     3     3      0
                            _rtc_nak
                           _rtc_read
                            _rtc_res
                           _rtc_send
                           _rtc_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_stop                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_res                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_read                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_nak                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_serialnumber                                   0     0      0    6233
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (1) _print_dht11data                                      8     8      0   12703
                                             14 BANK0      8     8      0
                      _CheckResponse
                        _LCD_Command
                           _ReadData
                        _StartSignal
                               _show
                   _show_multidigits
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (2) _tx_sn                                               16    14      2    6211
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _show_multidigits                                    16    14      2    6157
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _show                                                 2     2      0     155
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _StartSignal                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadData                                             4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _CheckResponse                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _print_analogvoltages                                 5     5      0    4448
                                             30 BANK0      5     5      0
                           _LCD_Char
                            _LCD_num
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_num                                             18    14      4    4202
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (3) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1375
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _convup                                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _convd                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Char
   _LCD_Command
   _LCD_init
     _LCD_Command
   _convd
   _convup
   _print_analogvoltages
     _LCD_Char
     _LCD_num
       _LCD_Char
       ___aldiv
         ___lmul (ARG)
       ___lmul
       ___lwdiv
       ___lwmod
       _intdigits_chardigits
     _tx
   _print_dht11data
     _CheckResponse
     _LCD_Command
     _ReadData
     _StartSignal
     _show
       _LCD_Char
     _show_multidigits
       _LCD_Char
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
     _tx
     _tx_sn
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
       _tx
   _print_serialnumber
     _tx
     _tx_sn
   _rtc_int
   _rtc_read_byte
     _rtc_nak
       _waitmssp
     _rtc_read
       _waitmssp
     _rtc_res
       _waitmssp
     _rtc_send
       _waitmssp
     _rtc_stop
       _waitmssp
     _waitmssp
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 07 10:06:57 2022

                            pc 0002                   ?_LCD_Command 0070                             l92 0E76  
                           _AV 0046                             l95 0D82                             l89 0E36  
                           l98 025D                             _RH 005A                             _Ch 0065  
                 ___awdiv@sign 0076                             _sn 006B                             _tx 0C9C  
                           fsr 0004          print_analogvoltages@i 0041          print_analogvoltages@j 0042  
                          l104 0D4C                            l120 0CCB                            l113 0654  
                          l201 0C79                            l210 0CEB                            l107 0CDA  
                          l123 0CA1                            l203 0C7F                            l204 0C80  
                          l220 0DCC                            l125 0CA5                            l117 0654  
                          l126 0CA6                            l142 07E6                            l207 0CE5  
                          l223 0DF6                            l216 0CBE                            l232 0C91  
                          l241 0CB2                            l138 07E6                            l163 0D2D  
                          l219 0DBE                            l244 0C78                            l260 0483  
                          l181 0EB8                            l173 0E78                            l229 000B  
                          l238 0C9B                            l271 0CFD                            l168 002C  
                          l281 0101                            l178 0EA9                            l259 033E  
                          l268 0FFF                            l437 0116                            l525 0093  
                          l286 0333                            l198 0D13                            l447 019E  
                          l386 0F42                            l538 0F9B                            l644 0EFC  
                          ?_tx 0070                            l654 0DBC                            _RC0 0038  
                          _RC1 0039                            _PEN 048A                            u900 0C7F  
                          _SEN 0488                            u901 0C7E                            u910 0F09  
                          u911 0F08                            u921 0F12                            u922 0F19  
                          u923 0F20                            u950 0F3A                            u951 0F39  
                          u935 0F22                            u960 0109                            u961 0108  
                          u945 0F2A                            u970 011A                            u890 0CA5  
                          u971 0119                            u891 0CA4                            u980 0139  
                          u885 0E56                            u981 0138                            u995 013E  
                          _Sum 0058                            _day 0061                            _avv 0051  
                          _min 0063                            _sec 0064                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0076                            tx@a 0070  
       show_multidigits@digit1 0026         show_multidigits@digit2 0028         show_multidigits@digit3 0024  
       show_multidigits@digit4 0020                           ??_tx 0070                __end_of_LCD_num 025E  
                         l2000 00FB                           l2010 02C9                           l2002 025E  
                         l2020 02F4                           l2012 02D7                           l2004 0268  
                         l2030 0317                           l2022 02FF                           l2014 02DD  
                         l2006 026F                           l2032 0322                           l2024 0305  
                         l2016 02E3                           l2008 02A4                           l2034 032D  
                         l2026 030B                           l2018 02E9                           l1500 0EFD  
                         l2028 0311                           l2060 0492                           l1510 0F3A  
                         l1502 0F05                           l2062 0498                           l2054 0334  
                         l1520 011A                           l1504 0F09                           l1600 0F44  
                         l2064 049D                           l2056 0480                           l1530 013C  
                         l1522 0125                           l1514 0102                           l1506 0F20  
                         l1610 0F58                           l1602 0F48                           l2066 04A2  
                         l2058 0487                           l1700 0E2D                           l1540 0176  
                         l1532 0149                           l1524 0129                           l1516 0105  
                         l1508 0F29                           l1620 0F70                           l1612 0F5E  
                         l1604 0F4D                           l1550 0196                           l1542 0177  
                         l1534 014D                           l1526 0131                           l1518 0109  
                         l1710 01F9                           l1702 019F                           l1630 0F92  
                         l1622 0F7A                           l1614 0F61                           l1606 0F4F  
                         l1480 0E3D                           l1544 0180                           l1536 0156  
                         l1528 0139                           l1640 0EC1                           l1720 0238  
                         l1712 0210                           l1704 019F                           l1560 0037  
                         l1632 0F97                           l1624 0F80                           l1616 0F68  
                         l1608 0F53                           l1800 066F                           l1490 0E6A  
                         l1482 0E47                           l1538 0168                           l1546 0186  
                         l1650 0EE4                           l1642 0EC4                           l1722 0241  
                         l1714 0214                           l1706 01D3                           l1730 0D3C  
                         l1570 0048                           l1562 0039                           l1554 002D  
                         l1626 0F87                           l1618 0F6C                           l1810 06A9  
                         l1802 0678                           l1492 0E6D                           l1484 0E53  
                         l1476 0E38                           l1548 018B                           l1652 0EEA  
                         l1644 0ECB                           l1636 0EB9                           l1724 024A  
                         l1716 022B                           l1708 01E6                           l1732 0D40  
                         l1580 0060                           l1572 004E                           l1564 003D  
                         l1556 002E                           l1628 0F8D                           l1740 04DD  
                         l1820 06EF                           l1804 068B                           l1812 06B3  
                         l1900 0CE0                           l1486 0E60                           l1478 0E3B  
                         l1654 0EEB                           l1646 0ECF                           l1638 0EBB  
                         l1670 0D97                           l1662 0D83                           l1494 0CCC  
                         l1718 0232                           l1726 0D2F                           l1582 0071  
                         l1574 0051                           l1590 0085                           l1566 0042  
                         l1558 0032                           l1750 0517                           l1742 04E6  
                         l1734 04C3                           l1822 0706                           l1814 06BC  
                         l1830 0733                           l1806 068F                           l1910 0CBB  
                         l1902 0003                           l1488 0E61                           l1656 0EF2  
                         l1648 0ED3                           l1672 0D9B                           l1664 0D89  
                         l1680 0DB8                           l1496 0C9D                           l1728 0D30  
                         l1592 008A                           l1584 0077                           l1576 0058  
                         l1568 0046                           l1760 055D                           l1744 04F9  
                         l1752 0521                           l1736 04CC                           l1840 0786  
                         l1832 073C                           l1824 0719                           l1816 06C5  
                         l1808 06A2                           l1920 0C96                           l1904 0006  
                         l1690 0E07                           l1922 0D4D                           l1658 0EF8  
                         l1674 0DA5                           l1666 0D8C                           l1594 008F  
                         l1586 0078                           l1578 005C                           l1762 0574  
                         l1754 052A                           l1770 05A1                           l1746 04FD  
                         l1738 04D4                           l1850 07D3                           l1842 0799  
                         l1834 0745                           l1826 0720                           l1818 06EB  
                         l1930 0CFE                           l1498 0C79                           l1906 0CB3  
                         l1914 0C89                           l1692 0E13                           l1684 0DF8  
                         l1924 0D55                           l1676 0DAB                           l1668 0D93  
                         l1860 0D2A                           l1588 007F                           l1780 05F4  
                         l1772 05AA                           l1764 0587                           l1756 0533  
                         l1748 0510                           l1852 07DC                           l1844 07B0  
                         l1836 076B                           l1828 0729                           l1932 0D0B  
                         l1908 0CB6                           l1916 0C8C                           l1940 0DD2  
                         l1694 0E20                           l1686 0DFB                           l1926 0D79  
                         l1678 0DB2                           l1870 001E                           l1862 000C  
                         l1854 0D14                           l1598 0F43                           l1790 0641  
                         l1782 0607                           l1774 05B3                           l1766 058E  
                         l1758 0559                           l1846 07C3                           l1838 076F  
                         l1918 0C92                           l1950 0DF0                           l1942 0DD8  
                         l1934 0DBE                           l1696 0E21                           l1688 0DFD  
                         l1872 0024                           l1864 000F                           l1856 0D1A  
                         l1792 064A                           l1784 061E                           l1776 05D9  
                         l1768 0597                           l1848 07CA                           l1944 0DDD  
                         l1936 0DC3                           l1928 0CBF                           l1698 0E2A  
                         l1954 0CA8                           l1874 0028                           l1866 0014  
                         l1890 0EAD                           l1882 0E7E                           l1858 0D22  
                         l1786 0631                           l1778 05DD                           l1794 0655  
                         l1962 0CEC                           l1946 0DE3                           l1938 0DC7  
                         l1964 0F9C                           l1972 0097                           l1868 001A  
                         l1892 0EB1                           l1884 0E83                           l1876 0E77  
                         l1788 0638                           l1796 065E                           l1948 0DEB  
                         l1958 0C75                           l1990 00D5                           l1982 00B6  
                         l1974 00AD                           l1966 0094                           l1894 0EB7  
                         l1886 0E89                           l1798 0666                           l1992 00DB  
                         l1984 00C1                           l1976 00B3                           l1888 0E9A  
                         l1994 00E1                           l1986 00C8                           l1898 0CDC  
                         l1996 00E7                           l1988 00CF                           l1998 00F5  
                         STR_1 080C                           STR_2 0806                           u1000 014D  
                         u1001 014C                           u1020 0168                           u1100 0060  
                         u1021 0167                           u1101 005F                           u1015 014F  
                         u1040 0186                           u1120 0071                           u1200 0F70  
                         u1041 0185                           u1025 0164                           u1121 0070  
                         u1201 0F6F                           u1050 018B                           u1210 0F7A  
                         u1051 018A                           u1035 0178                           u1115 0061  
                         u1211 0F79                           u1140 0085                           u1060 0032  
                         u1141 0084                           u1125 006D                           u1061 0031  
                         u1310 0EF8                           u1150 008A                           u1070 003D  
                         u1230 0F8D                           u1311 0EF7                           u1151 0089  
                         u1135 0079                           u1071 003C                           u1231 0F8C  
                         u1215 0F76                           u1320 0D89                           u1080 004E  
                         u1240 0F92                           u1160 0F48                           u1400 04CC  
                         u1305 0EEC                           u1321 0D88                           u1081 004D  
                         u1241 0F91                           u1225 0F81                           u1161 0F47  
                         u1401 04CB                           u1250 0EC1                           u1170 0F53  
                         u1410 04DD                           u1251 0EC0                           u1171 0F52  
                         u1411 04DC                           u1340 0D9B                           u1180 0F5E  
                         u1420 04E6                           u1500 06BC                           u1341 0D9A  
                         u1181 0F5D                           u1421 04E5                           u1501 06BB  
                         u1270 0ED3                           u1350 0DA5                           u1430 052A  
                         u1510 06C5                           u1271 0ED2                           u1351 0DA4  
                         u1335 0D8D                           u1095 0052                           u1431 0529  
                         u1511 06C4                           u1600 0EAD                           u1440 0533  
                         u1520 073C                           u1265 0EC5                           u1601 0EAC  
                         u1441 0532                           u1521 073B                           u1290 0EE4  
                         u1370 0DB8                           u1610 0EB7                           u1450 05AA  
                         u1530 0745                           u1291 0EE3                           u1371 0DB7  
                         u1355 0DA1                           u1611 0EB6                           u1195 0F62  
                         u1451 05A9                           u1531 0744                           u1700 0101  
                         u1540 001A                           u1460 05B3                           u1620 0CEB  
                         u1285 0ED4                           u1365 0DAC                           u1701 0100  
                         u1541 0019                           u1461 05B2                           u1621 0CEA  
                         u1550 0024                           u1390 0D4C                           u1470 065E  
                         u1710 026F                           u1630 0D08                           u1295 0EE0  
                         u1551 0023                           u1391 0D4B                           u1471 065D  
                         u1711 026E                           u1631 0D04                           u1560 0E7E  
                         u1480 066F                           u1720 02C9                           u1385 0E16  
                         u1561 0E7D                           u1481 066E                           u1721 02C8  
                         u1570 0E89                           u1490 0678                           u1650 0DD2  
                         u1730 0487                           u1571 0E88                           u1491 0677  
                         u1651 0DD1                           u1731 0486                           u1644 0D0B  
                         u1725 02C5                           u1670 00C8                           u1671 00C7  
                         u1807 001C                           u1680 00D5                           u1584 0E91  
                         u1665 0CAB                           u1681 00D4                           u1817 0026  
                         u1585 0E8F                           u1690 00E7                           u1594 0EA2  
                         u1907 0E25                           u1827 00EF                           u1691 00E6  
                         u1595 0EA0                           u1747 048D                           u1917 0E31  
                         u1837 0E42                           u1757 04B0                           u1927 0FB2  
                         u1847 0E4E                           u1767 0D1E                           u1937 0FCD  
                         u1857 0E65                           u1777 0D27                           u1947 0FE8  
                         u1867 0E71                           u1787 0E80                           u1877 0D7D  
                         u1797 0011                           u1887 0E02                           u1897 0E0E  
                         _RCEN 048B                           _RCIF 0065         show_multidigits@result 0022  
                         _RSEN 0489                           _TXIF 0064   __end_of_print_analogvoltages 0102  
                         _Temp 005C                           _date 0060                           _main 0334  
                         _hour 0062                           _show 0D2E                           _year 005E  
                         btemp 007E               __end_of_ADC_Init 1000                           start 0000  
             __end_of_LCD_Char 0E77                   LCD_Char@data 0072               __end_of_LCD_init 0D83  
              ??_rtc_read_byte 0071                __end_of___aldiv 019F                          ?_main 0070  
                        _ACKEN 048C                          _ACKDT 048D                __end_of___awdiv 0094  
              __end_of___awmod 0F9C                          ?_show 0070                ___awdiv@divisor 0070  
              __end_of___lwdiv 0EFD                __end_of___lwmod 0DBD                ___awdiv@counter 0075  
                        _RCREG 001A                          _RCSTA 0018        show_multidigits@result1 002A  
                        _SPBRG 0099                          _PORTB 0006                          _SSPIF 0063  
                        _TXREG 0019                          _TXSTA 0098                          _Check 006A  
          ___lmul@multiplicand 0074                          _convd 0C74                          _month 005F  
                        _tx_sn 0655                __end_of_ser_int 0CCC                          pclath 000A  
           _print_serialnumber 0CEC                __end_of_rtc_nak 0C9C                __end_of_rtc_int 0D14  
              __end_of_rtc_res 0C92                          show@s 0074                          status 0003  
                        wtemp0 007E            ?_print_serialnumber 0070                __initialization 07E7  
                 __end_of_main 04C3                   __end_of_show 0D4D               __end_of_ReadData 0EB9  
                       ??_main 0043                         ??_show 0073                 LCD_num@result1 003A  
         _intdigits_chardigits 0CCC                      ??_LCD_num 007E           ??_print_serialnumber 007B  
                       _ADCON0 001F                         _ADCON1 009F                         ?_convd 0070  
                       _ADRESH 001E                         _ADRESL 009E               ___awdiv@dividend 0072  
                       ?_tx_sn 0079                         _SSPADD 0093                         _TRISC3 043B  
                       _TRISC4 043C                         _SSPCON 0014                         _SSPBUF 0013  
                       ___lmul 0EFD                      ??___aldiv 007D                      ??___awdiv 0074  
                    ??___awmod 0074                      ??___lwdiv 0074                      ??___lwmod 0074  
                       _convup 0CA7               ___awdiv@quotient 0077                ___awmod@divisor 0070  
              ___awmod@counter 0075           _print_analogvoltages 0094           __size_of_LCD_Command 0040  
        ?_intdigits_chardigits 0070         __size_of_CheckResponse 0021                      ?_ADC_Init 0070  
             __end_of_rtc_read 0CBF               __end_of_waitmssp 0C81               __end_of_rtc_send 0CEC  
                    ??_ser_int 0070               __end_of_rtc_stop 000C                      ??_rtc_nak 0070  
                    ??_rtc_int 0070                      ??_rtc_res 0070      __size_of_show_multidigits 0192  
                    ?_LCD_Char 0070        __end_of__initialization 07FC                      ?_LCD_init 0070  
               __pcstackCOMMON 0070       __size_of_print_dht11data 00D6                   __pidataBANK0 0C72  
                ??_StartSignal 0070                  __end_of_convd 0C79                  __end_of_tx_sn 07E7  
        ?_print_analogvoltages 0070                     __end_of_tx 0CA7                     ??_ADC_Init 0070  
                      ??_convd 0070                        ??_tx_sn 007B                     __pbssBANK0 0046  
                    ?_ReadData 0070                 tx_sn@remainder 002C                     ??_LCD_Char 0070  
                   ??_LCD_init 0073                  _CheckResponse 000C                   tx_sn@result1 002A  
                   __pmaintext 0334                        ?___lmul 0070                        ?_convup 0070  
                      _ACKSTAT 048E                 ___lmul@product 0079         ??_intdigits_chardigits 0076  
          __end_of_StartSignal 0D2E                        _LCD_num 019F                     __stringtab 0800  
          show_multidigits@val 0079                     ??_ReadData 0070                 ?_CheckResponse 0070  
                      _T_byte1 0069                        _T_byte2 0068                      ?_rtc_read 0070  
                    ?_waitmssp 0070                        ___aldiv 0102                      ?_rtc_send 0070  
                    ?_rtc_stop 0070                        ___awdiv 002D                __size_of___lmul 0046  
                      ___awmod 0F43                        ___lwdiv 0EB9                        ___lwmod 0D83  
       ??_print_analogvoltages 003E                __size_of_convup 000C                        __ptext1 0CBF  
                      __ptext2 0DBD                        __ptext3 0003                        __ptext4 0CDB  
                      __ptext5 0C89                        __ptext6 0CB3                        __ptext7 0C92  
                      __ptext8 0C79                        __ptext9 0CFE              ??_print_dht11data 002E  
        __end_of_rtc_read_byte 0DF7                        _message 004E               ___awmod@dividend 0072  
             ___aldiv@dividend 0024                        _ser_int 0CBF                        _rtc_nak 0C92  
                      _rtc_int 0CFE                        _rtc_res 0C89                        clrloop0 0C82  
         end_of_initialization 07FC               _show_multidigits 04C3               ___aldiv@quotient 002A  
                   ??_rtc_read 0070                     ??_waitmssp 0070                     ??_rtc_send 0070  
                   ??_rtc_stop 0070                    _StartSignal 0D14                      _PORTDbits 0008  
             rtc_read_byte@rec 0073    __size_of_print_serialnumber 0012                      _TRISBbits 0086  
                    _TRISCbits 0087                      _TRISDbits 0088              __size_of_ADC_Init 0064  
              ??_CheckResponse 0070                      ReadData@i 0072                      ReadData@j 0073  
            __size_of_LCD_Char 0040              __size_of_LCD_init 0036                  ??_LCD_Command 0070  
               __end_of___lmul 0F43                 __end_of_convup 0CB3            start_initialization 07E7  
                LCD_num@digit1 0032                  LCD_num@digit2 0034                  LCD_num@digit3 0036  
                   LCD_num@val 002E                  LCD_num@result 0038              __size_of_ReadData 0042  
                     ??___lmul 0078                    __pdataBANK0 006B                       ??_convup 0070  
             LCD_num@remainder 003C            __end_of_LCD_Command 0E37                       ?_LCD_num 002E  
                    ___latbits 0002                  __pcstackBANK0 0020                    tx_sn@digit1 0026  
                  tx_sn@digit2 0028                    tx_sn@digit3 0024                    tx_sn@digit4 0020  
             ___lwdiv@dividend 0072                _print_dht11data 025E                    tx_sn@result 0022  
                     ?___aldiv 0020                       ?___awdiv 0070                       ?___awmod 0070  
                     ?___lwdiv 0070                       ?___lwmod 0070       __end_of_show_multidigits 0655  
            __size_of_rtc_read 000C              __size_of_waitmssp 0008              __size_of_rtc_send 0011  
            __size_of_rtc_stop 0009                      __pstrings 0800  __size_of_intdigits_chardigits 000F  
                     _ADC_Init 0F9C                       ?_ser_int 0070                       ?_rtc_nak 0070  
                     ?_rtc_int 0070                       ?_rtc_res 0070               ___lwdiv@quotient 0075  
               __size_of_convd 0005                 __size_of_tx_sn 0192                    __size_of_tx 000B  
              ___aldiv@divisor 0020                       _LCD_Char 0E37                ___aldiv@counter 0028  
                     _LCD_init 0D4D                      clear_ram0 0C81                       _GO_nDONE 00FA  
                 ?_StartSignal 0070                    _LCD_Command 0DF7  __size_of_print_analogvoltages 006E  
                  __stringbase 0805                       _RH_byte1 0067                       _RH_byte2 0066  
             __size_of_LCD_num 00BF              ___lmul@multiplier 0070                      convup@bcd 0071  
        intdigits_chardigits@a 0070          intdigits_chardigits@b 0072          intdigits_chardigits@c 0074  
      __end_of_print_dht11data 0334                       _ReadData 0E77         __size_of_rtc_read_byte 003A  
             __size_of___aldiv 009D               __size_of___awdiv 0067               __size_of___awmod 0059  
             __size_of___lwdiv 0044               __size_of___lwmod 003A             __end_of__stringtab 0806  
   __end_of_print_serialnumber 0CFE                ___lwdiv@divisor 0070                ___lwdiv@counter 0077  
                     __ptext10 0CEC                       __ptext11 025E                       __ptext20 0094  
                     __ptext12 0655                       __ptext21 0C9C                       __ptext13 04C3  
                     __ptext30 0C74                       __ptext22 019F                       __ptext14 0F43  
                     __ptext31 0D4D                       __ptext23 0CCC                       __ptext15 002D  
                     __ptext32 0DF7                       __ptext24 0D83                       __ptext16 0D2E  
                     __ptext33 0F9C                       __ptext25 0EB9                       __ptext17 0D14  
                     __ptext26 0EFD                       __ptext18 0E77                       __ptext27 0102  
                     __ptext19 000C                       __ptext28 0E37                       __ptext29 0CA7  
             __size_of_ser_int 000D               __size_of_rtc_nak 000A               __size_of_rtc_int 0016  
             __size_of_rtc_res 0009          __end_of_CheckResponse 002D                  __size_of_main 018F  
                __size_of_show 001F                       _humidity 0056                       _rtc_read 0CB3  
                     _waitmssp 0C79                       _rtc_send 0CDB                       _rtc_stop 0003  
                    rtc_send@a 0070                       convd@bcd 0070                  _rtc_read_byte 0DBD  
              LCD_Command@cmnd 0072               ?_print_dht11data 0070               ___lwmod@dividend 0072  
                    stringcode 0800      show_multidigits@remainder 002C              ?_show_multidigits 0079  
         __size_of_StartSignal 001A             ??_show_multidigits 007B                    _temperature 0054  
                     tx_sn@val 0079                 ?_rtc_read_byte 0070                ___lwmod@divisor 0070  
              ___lwmod@counter 0075                       stringdir 0800                       stringtab 0800  
                 ___aldiv@sign 0029              rtc_read_byte@addr 0072   __end_of_intdigits_chardigits 0CDB  
