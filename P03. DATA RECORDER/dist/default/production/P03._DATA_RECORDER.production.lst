

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 05 11:12:05 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191                           
   192                           	psect	idataBANK0
   193  0004                     __pidataBANK0:
   194                           
   195                           ;initializer for _sn
   196  0004  3401               	retlw	1
   197  0005  3400               	retlw	0
   198  001E                     _ADRESH	set	30
   199  001F                     _ADCON0	set	31
   200  0008                     _PORTDbits	set	8
   201  001A                     _RCREG	set	26
   202  0019                     _TXREG	set	25
   203  0018                     _RCSTA	set	24
   204  0006                     _PORTB	set	6
   205  00FA                     _GO_nDONE	set	250
   206  0065                     _RCIF	set	101
   207  0064                     _TXIF	set	100
   208  0039                     _RC1	set	57
   209  0038                     _RC0	set	56
   210  009E                     _ADRESL	set	158
   211  009F                     _ADCON1	set	159
   212  0087                     _TRISC	set	135
   213  0086                     _TRISB	set	134
   214  0088                     _TRISDbits	set	136
   215  0099                     _SPBRG	set	153
   216  0098                     _TXSTA	set	152
   217                           
   218                           	psect	strings
   219  0800                     __pstrings:
   220  0800                     stringtab:
   221  0800                     __stringtab:
   222  0800                     stringcode:	
   223                           ;	String table - string pointers are 1 byte each
   224                           
   225  0800                     stringdir:
   226  0800  3008               	movlw	high stringdir
   227  0801  008A               	movwf	10
   228  0802  0804               	movf	4,w
   229  0803  0A84               	incf	4,f
   230  0804  0782               	addwf	2,f
   231  0805                     __stringbase:
   232  0805  3400               	retlw	0
   233  0806                     __end_of__stringtab:
   234  0806                     STR_1:
   235  0806  3420               	retlw	32	;' '
   236  0807  3400               	retlw	0
   237                           
   238                           	psect	cinit
   239  07E7                     start_initialization:	
   240                           ; #config settings
   241                           
   242  07E7                     __initialization:
   243                           
   244                           ; Initialize objects allocated to BANK0
   245  07E7  120A  118A  2004  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   246  07EC  00D6               	movwf	__pdataBANK0& (0+127)
   247  07ED  120A  118A  2005  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   248  07F2  00D7               	movwf	(__pdataBANK0+1)& (0+127)
   249                           
   250                           ; Clear objects allocated to BANK0
   251  07F3  1383               	bcf	3,7	;select IRP bank0
   252  07F4  3043               	movlw	low __pbssBANK0
   253  07F5  0084               	movwf	4
   254  07F6  3056               	movlw	low (__pbssBANK0+19)
   255  07F7  120A  158A  2730  120A  118A  	fcall	clear_ram0
   256  07FC                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  07FC                     __end_of__initialization:
   260  07FC  0183               	clrf	3
   261  07FD  120A  118A  2BD2   	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	bssBANK0
   264  0043                     __pbssBANK0:
   265  0043                     _AV:
   266  0043                     	ds	8
   267  004B                     _avv:
   268  004B                     	ds	3
   269  004E                     _Summation:
   270  004E                     	ds	1
   271  004F                     _check_bit:
   272  004F                     	ds	1
   273  0050                     _Temp_byte_2:
   274  0050                     	ds	1
   275  0051                     _Temp_byte_1:
   276  0051                     	ds	1
   277  0052                     _RH_byte_2:
   278  0052                     	ds	1
   279  0053                     _RH_byte_1:
   280  0053                     	ds	1
   281  0054                     _Temp:
   282  0054                     	ds	1
   283  0055                     _Humidity:
   284  0055                     	ds	1
   285                           
   286                           	psect	dataBANK0
   287  0056                     __pdataBANK0:
   288  0056                     _sn:
   289  0056                     	ds	2
   290                           
   291                           	psect	clrtext
   292  0F30                     clear_ram0:	
   293                           ;	Called with FSR containing the base address, and
   294                           ;	W with the last address+1
   295                           
   296  0F30  0064               	clrwdt	;clear the watchdog before getting into this loop
   297  0F31                     clrloop0:
   298  0F31  0180               	clrf	0	;clear RAM location pointed to by FSR
   299  0F32  0A84               	incf	4,f	;increment pointer
   300  0F33  0604               	xorwf	4,w	;XOR with final address
   301  0F34  1903               	btfsc	3,2	;have we reached the end yet?
   302  0F35  3400               	retlw	0	;all done for this memory range, return
   303  0F36  0604               	xorwf	4,w	;XOR again to restore value
   304  0F37  2F31               	goto	clrloop0	;do the next byte
   305                           
   306                           	psect	cstackCOMMON
   307  0070                     __pcstackCOMMON:
   308  0070                     ?_intdigits_chardigits:
   309  0070                     ?_ADC_Init:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ??_ADC_Init:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_LCD_Command:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ??_LCD_Command:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_LCD_Char:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ??_LCD_Char:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_LCD_init:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_ser_int:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ??_ser_int:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_tx:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_tx:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_dht11_init:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_dht11_init:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_find_response:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_find_response:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_read_dht11:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??_read_dht11:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_main:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?___awdiv:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?___awmod:	
   367                           ; 2 bytes @ 0x0
   368                           
   369  0070                     ?___lwdiv:	
   370                           ; 2 bytes @ 0x0
   371                           
   372  0070                     ?___lwmod:	
   373                           ; 2 bytes @ 0x0
   374                           
   375  0070                     ?___lmul:	
   376                           ; 2 bytes @ 0x0
   377                           
   378  0070                     tx@a:	
   379                           ; 4 bytes @ 0x0
   380                           
   381  0070                     intdigits_chardigits@a:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ___awdiv@divisor:	
   385                           ; 2 bytes @ 0x0
   386                           
   387  0070                     ___awmod@divisor:	
   388                           ; 2 bytes @ 0x0
   389                           
   390  0070                     ___lwdiv@divisor:	
   391                           ; 2 bytes @ 0x0
   392                           
   393  0070                     ___lwmod@divisor:	
   394                           ; 2 bytes @ 0x0
   395                           
   396  0070                     ___lmul@multiplier:	
   397                           ; 2 bytes @ 0x0
   398                           
   399                           
   400                           ; 4 bytes @ 0x0
   401  0070                     	ds	2
   402  0072                     LCD_Command@cmnd:
   403  0072                     LCD_Char@data:	
   404                           ; 1 bytes @ 0x2
   405                           
   406  0072                     read_dht11@data:	
   407                           ; 1 bytes @ 0x2
   408                           
   409  0072                     intdigits_chardigits@b:	
   410                           ; 1 bytes @ 0x2
   411                           
   412  0072                     ___awdiv@dividend:	
   413                           ; 2 bytes @ 0x2
   414                           
   415  0072                     ___awmod@dividend:	
   416                           ; 2 bytes @ 0x2
   417                           
   418  0072                     ___lwdiv@dividend:	
   419                           ; 2 bytes @ 0x2
   420                           
   421  0072                     ___lwmod@dividend:	
   422                           ; 2 bytes @ 0x2
   423                           
   424                           
   425                           ; 2 bytes @ 0x2
   426  0072                     	ds	1
   427  0073                     ??_LCD_init:
   428  0073                     read_dht11@for_count:	
   429                           ; 1 bytes @ 0x3
   430                           
   431                           
   432                           ; 1 bytes @ 0x3
   433  0073                     	ds	1
   434  0074                     ??___awdiv:
   435  0074                     ??___awmod:	
   436                           ; 1 bytes @ 0x4
   437                           
   438  0074                     ??___lwdiv:	
   439                           ; 1 bytes @ 0x4
   440                           
   441  0074                     ??___lwmod:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     intdigits_chardigits@c:	
   445                           ; 1 bytes @ 0x4
   446                           
   447  0074                     ___lmul@multiplicand:	
   448                           ; 2 bytes @ 0x4
   449                           
   450                           
   451                           ; 4 bytes @ 0x4
   452  0074                     	ds	1
   453  0075                     ___awdiv@counter:
   454  0075                     ___awmod@counter:	
   455                           ; 1 bytes @ 0x5
   456                           
   457  0075                     ___lwmod@counter:	
   458                           ; 1 bytes @ 0x5
   459                           
   460  0075                     ___lwdiv@quotient:	
   461                           ; 1 bytes @ 0x5
   462                           
   463                           
   464                           ; 2 bytes @ 0x5
   465  0075                     	ds	1
   466  0076                     ??_intdigits_chardigits:
   467  0076                     ___awdiv@sign:	
   468                           ; 1 bytes @ 0x6
   469                           
   470  0076                     ___awmod@sign:	
   471                           ; 1 bytes @ 0x6
   472                           
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     ___lwdiv@counter:
   477  0077                     ___awdiv@quotient:	
   478                           ; 1 bytes @ 0x7
   479                           
   480                           
   481                           ; 2 bytes @ 0x7
   482  0077                     	ds	1
   483  0078                     ??___lmul:
   484                           
   485                           ; 1 bytes @ 0x8
   486  0078                     	ds	1
   487  0079                     ?_show_multidigits:
   488  0079                     ?_tx_sn:	
   489                           ; 1 bytes @ 0x9
   490                           
   491  0079                     show_multidigits@val:	
   492                           ; 1 bytes @ 0x9
   493                           
   494  0079                     tx_sn@val:	
   495                           ; 2 bytes @ 0x9
   496                           
   497  0079                     ___lmul@product:	
   498                           ; 2 bytes @ 0x9
   499                           
   500                           
   501                           ; 4 bytes @ 0x9
   502  0079                     	ds	2
   503  007B                     ??_show_multidigits:
   504  007B                     ??_tx_sn:	
   505                           ; 1 bytes @ 0xB
   506                           
   507                           
   508                           ; 1 bytes @ 0xB
   509  007B                     	ds	2
   510  007D                     ??___aldiv:
   511                           
   512                           ; 1 bytes @ 0xD
   513  007D                     	ds	1
   514  007E                     ??_LCD_num:
   515                           
   516                           	psect	cstackBANK0
   517  0020                     __pcstackBANK0:	
   518                           ; 1 bytes @ 0xE
   519                           
   520  0020                     ?___aldiv:
   521  0020                     show_multidigits@digit4:	
   522                           ; 4 bytes @ 0x0
   523                           
   524  0020                     tx_sn@digit4:	
   525                           ; 2 bytes @ 0x0
   526                           
   527  0020                     ___aldiv@divisor:	
   528                           ; 2 bytes @ 0x0
   529                           
   530                           
   531                           ; 4 bytes @ 0x0
   532  0020                     	ds	2
   533  0022                     show_multidigits@result:
   534  0022                     tx_sn@result:	
   535                           ; 2 bytes @ 0x2
   536                           
   537                           
   538                           ; 2 bytes @ 0x2
   539  0022                     	ds	2
   540  0024                     show_multidigits@digit3:
   541  0024                     tx_sn@digit3:	
   542                           ; 2 bytes @ 0x4
   543                           
   544  0024                     ___aldiv@dividend:	
   545                           ; 2 bytes @ 0x4
   546                           
   547                           
   548                           ; 4 bytes @ 0x4
   549  0024                     	ds	2
   550  0026                     show_multidigits@digit1:
   551  0026                     tx_sn@digit1:	
   552                           ; 2 bytes @ 0x6
   553                           
   554                           
   555                           ; 2 bytes @ 0x6
   556  0026                     	ds	2
   557  0028                     ___aldiv@counter:
   558  0028                     show_multidigits@digit2:	
   559                           ; 1 bytes @ 0x8
   560                           
   561  0028                     tx_sn@digit2:	
   562                           ; 2 bytes @ 0x8
   563                           
   564                           
   565                           ; 2 bytes @ 0x8
   566  0028                     	ds	1
   567  0029                     ___aldiv@sign:
   568                           
   569                           ; 1 bytes @ 0x9
   570  0029                     	ds	1
   571  002A                     show_multidigits@result1:
   572  002A                     tx_sn@result1:	
   573                           ; 2 bytes @ 0xA
   574                           
   575  002A                     ___aldiv@quotient:	
   576                           ; 2 bytes @ 0xA
   577                           
   578                           
   579                           ; 4 bytes @ 0xA
   580  002A                     	ds	2
   581  002C                     show_multidigits@remainder:
   582  002C                     tx_sn@remainder:	
   583                           ; 2 bytes @ 0xC
   584                           
   585                           
   586                           ; 2 bytes @ 0xC
   587  002C                     	ds	2
   588  002E                     ?_LCD_num:
   589  002E                     LCD_num@val:	
   590                           ; 1 bytes @ 0xE
   591                           
   592                           
   593                           ; 4 bytes @ 0xE
   594  002E                     	ds	4
   595  0032                     LCD_num@digit1:
   596                           
   597                           ; 2 bytes @ 0x12
   598  0032                     	ds	2
   599  0034                     LCD_num@digit2:
   600                           
   601                           ; 2 bytes @ 0x14
   602  0034                     	ds	2
   603  0036                     LCD_num@digit3:
   604                           
   605                           ; 2 bytes @ 0x16
   606  0036                     	ds	2
   607  0038                     LCD_num@result:
   608                           
   609                           ; 2 bytes @ 0x18
   610  0038                     	ds	2
   611  003A                     LCD_num@result1:
   612                           
   613                           ; 2 bytes @ 0x1A
   614  003A                     	ds	2
   615  003C                     LCD_num@remainder:
   616                           
   617                           ; 2 bytes @ 0x1C
   618  003C                     	ds	2
   619  003E                     ??_main:
   620                           
   621                           ; 1 bytes @ 0x1E
   622  003E                     	ds	3
   623  0041                     main@i:
   624                           
   625                           ; 1 bytes @ 0x21
   626  0041                     	ds	1
   627  0042                     main@j:
   628                           
   629                           ; 1 bytes @ 0x22
   630  0042                     	ds	1
   631                           
   632                           	psect	maintext
   633  03D2                     __pmaintext:	
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 30 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  j               1   34[BANK0 ] unsigned char 
   644 ;;  i               1   33[BANK0 ] unsigned char 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : B00/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   654 ;;      Params:         0       0       0       0       0
   655 ;;      Locals:         0       2       0       0       0
   656 ;;      Temps:          0       3       0       0       0
   657 ;;      Totals:         0       5       0       0       0
   658 ;;Total ram usage:        5 bytes
   659 ;; Hardware stack levels required when called: 2
   660 ;; This function calls:
   661 ;;		_ADC_Init
   662 ;;		_LCD_Char
   663 ;;		_LCD_Command
   664 ;;		_LCD_init
   665 ;;		_LCD_num
   666 ;;		_dht11_init
   667 ;;		_find_response
   668 ;;		_read_dht11
   669 ;;		_ser_int
   670 ;;		_show_multidigits
   671 ;;		_tx
   672 ;;		_tx_sn
   673 ;; This function is called by:
   674 ;;		Startup code after reset
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _main
   680  03D2                     _main:
   681  03D2                     l1705:	
   682                           ;incstack = 0
   683                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   684                           
   685                           
   686                           ;main.c: 32:     TRISB =0x00;
   687  03D2  1683               	bsf	3,5	;RP0=1, select bank1
   688  03D3  1303               	bcf	3,6	;RP1=0, select bank1
   689  03D4  0186               	clrf	6	;volatile
   690                           
   691                           ;main.c: 33:     TRISC =0x00;
   692  03D5  0187               	clrf	7	;volatile
   693  03D6                     l1707:
   694                           
   695                           ;main.c: 35:     LCD_init();
   696  03D6  120A  158A  2798  120A  118A  	fcall	_LCD_init
   697  03DB                     l1709:
   698                           
   699                           ;main.c: 36:     ser_int();
   700  03DB  120A  158A  2743  120A  118A  	fcall	_ser_int
   701  03E0                     l1711:
   702                           
   703                           ;main.c: 38:     {;main.c: 39:         ADC_Init ();
   704  03E0  120A  118A  21AB  120A  118A  	fcall	_ADC_Init
   705  03E5                     l1713:
   706                           
   707                           ;main.c: 40:         GO_nDONE=1;
   708  03E5  1283               	bcf	3,5	;RP0=0, select bank0
   709  03E6  1303               	bcf	3,6	;RP1=0, select bank0
   710  03E7  151F               	bsf	31,2	;volatile
   711  03E8                     l149:	
   712                           ;main.c: 41:         while(GO_nDONE==1);
   713                           
   714  03E8  191F               	btfsc	31,2	;volatile
   715  03E9  2BEB               	goto	u1541
   716  03EA  2BEC               	goto	u1540
   717  03EB                     u1541:
   718  03EB  2BE8               	goto	l149
   719  03EC                     u1540:
   720  03EC                     l1715:
   721                           
   722                           ;main.c: 42:         _delay((unsigned long)((10)*(20000000/4000.0)));
   723  03EC  3041               	movlw	65
   724  03ED  1283               	bcf	3,5	;RP0=0, select bank0
   725  03EE  1303               	bcf	3,6	;RP1=0, select bank0
   726  03EF  00BF               	movwf	??_main+1
   727  03F0  30ED               	movlw	237
   728  03F1  00BE               	movwf	??_main
   729  03F2                     u1607:
   730  03F2  0BBE               	decfsz	??_main,f
   731  03F3  2BF2               	goto	u1607
   732  03F4  0BBF               	decfsz	??_main+1,f
   733  03F5  2BF2               	goto	u1607
   734  03F6  2BF7               	nop2
   735  03F7                     l1717:
   736                           
   737                           ;main.c: 44:         tx_sn(sn);
   738  03F7  1283               	bcf	3,5	;RP0=0, select bank0
   739  03F8  1303               	bcf	3,6	;RP1=0, select bank0
   740  03F9  0857               	movf	_sn+1,w
   741  03FA  00FA               	movwf	tx_sn@val+1
   742  03FB  0856               	movf	_sn,w
   743  03FC  00F9               	movwf	tx_sn@val
   744  03FD  120A  118A  2655  120A  118A  	fcall	_tx_sn
   745  0402                     l1719:
   746                           
   747                           ;main.c: 45:         tx(')');
   748  0402  3029               	movlw	41
   749  0403  120A  158A  2738  120A  118A  	fcall	_tx
   750  0408                     l1721:
   751                           
   752                           ;main.c: 48:         for (unsigned char i=0;i<4;i++)
   753  0408  1283               	bcf	3,5	;RP0=0, select bank0
   754  0409  1303               	bcf	3,6	;RP1=0, select bank0
   755  040A  01C1               	clrf	main@i
   756  040B                     l1727:
   757                           
   758                           ;main.c: 49:         {;main.c: 50:             LCD_num(AV[i]);
   759  040B  0841               	movf	main@i,w
   760  040C  00BE               	movwf	??_main
   761  040D  073E               	addwf	??_main,w
   762  040E  3E43               	addlw	(low (_AV| 0))& (0+255)
   763  040F  0084               	movwf	4
   764  0410  1383               	bcf	3,7	;select IRP bank0
   765  0411  0800               	movf	0,w
   766  0412  00BF               	movwf	??_main+1
   767  0413  0A84               	incf	4,f
   768  0414  0800               	movf	0,w
   769  0415  00C0               	movwf	??_main+2
   770  0416  083F               	movf	??_main+1,w
   771  0417  00AE               	movwf	LCD_num@val
   772  0418  0840               	movf	??_main+2,w
   773  0419  00AF               	movwf	LCD_num@val+1
   774  041A  01B0               	clrf	LCD_num@val+2
   775  041B  01B1               	clrf	LCD_num@val+3
   776  041C  120A  118A  2313  120A  118A  	fcall	_LCD_num
   777  0421                     l1729:
   778                           
   779                           ;main.c: 51:             LCD_Char(" ");
   780  0421  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   781  0422  120A  118A  2046  120A  118A  	fcall	_LCD_Char
   782  0427                     l1731:
   783                           
   784                           ;main.c: 52:             for (unsigned char j=0;j<3;j++)
   785  0427  1283               	bcf	3,5	;RP0=0, select bank0
   786  0428  1303               	bcf	3,6	;RP1=0, select bank0
   787  0429  01C2               	clrf	main@j
   788  042A                     l1737:
   789                           
   790                           ;main.c: 53:             {;main.c: 54:                 tx((avv[j]+0x30));
   791  042A  0842               	movf	main@j,w
   792  042B  3E4B               	addlw	(low (_avv| 0))& (0+255)
   793  042C  0084               	movwf	4
   794  042D  1383               	bcf	3,7	;select IRP bank0
   795  042E  0800               	movf	0,w
   796  042F  3E30               	addlw	48
   797  0430  120A  158A  2738  120A  118A  	fcall	_tx
   798  0435                     l1739:
   799                           
   800                           ;main.c: 55:                 if (j == 0)
   801  0435  1283               	bcf	3,5	;RP0=0, select bank0
   802  0436  1303               	bcf	3,6	;RP1=0, select bank0
   803  0437  0842               	movf	main@j,w
   804  0438  1D03               	btfss	3,2
   805  0439  2C3B               	goto	u1551
   806  043A  2C3C               	goto	u1550
   807  043B                     u1551:
   808  043B  2C43               	goto	l1743
   809  043C                     u1550:
   810  043C                     l1741:
   811                           
   812                           ;main.c: 56:                 {;main.c: 57:                     tx('.');
   813  043C  302E               	movlw	46
   814  043D  120A  158A  2738  120A  118A  	fcall	_tx
   815                           
   816                           ;main.c: 58:                 }
   817  0442  2C4F               	goto	l1747
   818  0443                     l1743:
   819  0443  3002               	movlw	2
   820  0444  0642               	xorwf	main@j,w
   821  0445  1D03               	btfss	3,2
   822  0446  2C48               	goto	u1561
   823  0447  2C49               	goto	u1560
   824  0448                     u1561:
   825  0448  2C4F               	goto	l1747
   826  0449                     u1560:
   827  0449                     l1745:
   828                           
   829                           ;main.c: 60:                 {;main.c: 61:                     tx(',');
   830  0449  302C               	movlw	44
   831  044A  120A  158A  2738  120A  118A  	fcall	_tx
   832  044F                     l1747:
   833                           
   834                           ;main.c: 63:             }
   835  044F  3001               	movlw	1
   836  0450  1283               	bcf	3,5	;RP0=0, select bank0
   837  0451  1303               	bcf	3,6	;RP1=0, select bank0
   838  0452  00BE               	movwf	??_main
   839  0453  083E               	movf	??_main,w
   840  0454  07C2               	addwf	main@j,f
   841  0455                     l1749:
   842  0455  3003               	movlw	3
   843  0456  0242               	subwf	main@j,w
   844  0457  1C03               	skipc
   845  0458  2C5A               	goto	u1571
   846  0459  2C5B               	goto	u1570
   847  045A                     u1571:
   848  045A  2C2A               	goto	l1737
   849  045B                     u1570:
   850  045B                     l1751:
   851                           
   852                           ;main.c: 65:             _delay((unsigned long)((100)*(20000000/4000.0)));
   853  045B  3003               	movlw	3
   854  045C  1283               	bcf	3,5	;RP0=0, select bank0
   855  045D  1303               	bcf	3,6	;RP1=0, select bank0
   856  045E  00C0               	movwf	??_main+2
   857  045F  308A               	movlw	138
   858  0460  00BF               	movwf	??_main+1
   859  0461  3055               	movlw	85
   860  0462  00BE               	movwf	??_main
   861  0463                     u1617:
   862  0463  0BBE               	decfsz	??_main,f
   863  0464  2C63               	goto	u1617
   864  0465  0BBF               	decfsz	??_main+1,f
   865  0466  2C63               	goto	u1617
   866  0467  0BC0               	decfsz	??_main+2,f
   867  0468  2C63               	goto	u1617
   868  0469                     l1753:
   869                           
   870                           ;main.c: 66:         }
   871  0469  3001               	movlw	1
   872  046A  1283               	bcf	3,5	;RP0=0, select bank0
   873  046B  1303               	bcf	3,6	;RP1=0, select bank0
   874  046C  00BE               	movwf	??_main
   875  046D  083E               	movf	??_main,w
   876  046E  07C1               	addwf	main@i,f
   877  046F                     l1755:
   878  046F  3004               	movlw	4
   879  0470  0241               	subwf	main@i,w
   880  0471  1C03               	skipc
   881  0472  2C74               	goto	u1581
   882  0473  2C75               	goto	u1580
   883  0474                     u1581:
   884  0474  2C0B               	goto	l1727
   885  0475                     u1580:
   886  0475                     l1757:
   887                           
   888                           ;main.c: 72:         dht11_init();
   889  0475  120A  158A  275F  120A  118A  	fcall	_dht11_init
   890                           
   891                           ;main.c: 73:         find_response();
   892  047A  120A  158A  2779  120A  118A  	fcall	_find_response
   893  047F                     l1759:
   894                           
   895                           ;main.c: 74:         if(check_bit == 1)
   896  047F  1283               	bcf	3,5	;RP0=0, select bank0
   897  0480  1303               	bcf	3,6	;RP1=0, select bank0
   898  0481  034F               	decf	_check_bit,w
   899  0482  1D03               	btfss	3,2
   900  0483  2C85               	goto	u1591
   901  0484  2C86               	goto	u1590
   902  0485                     u1591:
   903  0485  2C9C               	goto	l1779
   904  0486                     u1590:
   905  0486                     l1761:
   906                           
   907                           ;main.c: 75:         {;main.c: 76:             LCD_Command(0x01);
   908  0486  3001               	movlw	1
   909  0487  120A  118A  2006  120A  118A  	fcall	_LCD_Command
   910                           
   911                           ;main.c: 77:             LCD_Command(0x80);
   912  048C  3080               	movlw	128
   913  048D  120A  118A  2006  120A  118A  	fcall	_LCD_Command
   914                           
   915                           ;main.c: 78:             LCD_Char(check_bit+0x30);
   916  0492  1283               	bcf	3,5	;RP0=0, select bank0
   917  0493  1303               	bcf	3,6	;RP1=0, select bank0
   918  0494  084F               	movf	_check_bit,w
   919  0495  3E30               	addlw	48
   920  0496  120A  118A  2046  120A  118A  	fcall	_LCD_Char
   921  049B                     l160:	
   922                           ;main.c: 79:             while(1);
   923                           
   924  049B                     l161:
   925  049B  2C9B               	goto	l160
   926  049C                     l1779:
   927                           
   928                           ;main.c: 100:         tx(0x0d);
   929  049C  300D               	movlw	13
   930  049D  120A  158A  2738  120A  118A  	fcall	_tx
   931  04A2                     l1781:
   932                           
   933                           ;main.c: 101:         LCD_Command(0x01);
   934  04A2  3001               	movlw	1
   935  04A3  120A  118A  2006  120A  118A  	fcall	_LCD_Command
   936  04A8                     l1783:
   937                           
   938                           ;main.c: 102:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   939  04A8  301A               	movlw	26
   940  04A9  1283               	bcf	3,5	;RP0=0, select bank0
   941  04AA  1303               	bcf	3,6	;RP1=0, select bank0
   942  04AB  00C0               	movwf	??_main+2
   943  04AC  305E               	movlw	94
   944  04AD  00BF               	movwf	??_main+1
   945  04AE  306D               	movlw	109
   946  04AF  00BE               	movwf	??_main
   947  04B0                     u1627:
   948  04B0  0BBE               	decfsz	??_main,f
   949  04B1  2CB0               	goto	u1627
   950  04B2  0BBF               	decfsz	??_main+1,f
   951  04B3  2CB0               	goto	u1627
   952  04B4  0BC0               	decfsz	??_main+2,f
   953  04B5  2CB0               	goto	u1627
   954  04B6  2CB7               	nop2
   955  04B7                     l1785:
   956                           
   957                           ;main.c: 103:         sn += 1;
   958  04B7  3001               	movlw	1
   959  04B8  1283               	bcf	3,5	;RP0=0, select bank0
   960  04B9  1303               	bcf	3,6	;RP1=0, select bank0
   961  04BA  07D6               	addwf	_sn,f
   962  04BB  1803               	skipnc
   963  04BC  0AD7               	incf	_sn+1,f
   964  04BD  3000               	movlw	0
   965  04BE  07D7               	addwf	_sn+1,f
   966  04BF  2BE0               	goto	l1711
   967  04C0  120A  118A  2800   	ljmp	start
   968  04C3                     __end_of_main:
   969                           
   970                           	psect	text1
   971  0655                     __ptext1:	
   972 ;; *************** function _tx_sn *****************
   973 ;; Defined at:
   974 ;;		line 27 in file "./uart.h"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  val             2    9[COMMON] unsigned int 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  remainder       2   12[BANK0 ] int 
   979 ;;  result1         2   10[BANK0 ] int 
   980 ;;  digit2          2    8[BANK0 ] int 
   981 ;;  digit1          2    6[BANK0 ] int 
   982 ;;  digit3          2    4[BANK0 ] int 
   983 ;;  result          2    2[BANK0 ] int 
   984 ;;  digit4          2    0[BANK0 ] int 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         2       0       0       0       0
   995 ;;      Locals:         0      14       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         2      14       0       0       0
   998 ;;Total ram usage:       16 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; Hardware stack levels required when called: 1
  1001 ;; This function calls:
  1002 ;;		___awdiv
  1003 ;;		___awmod
  1004 ;;		___lwdiv
  1005 ;;		___lwmod
  1006 ;;		_tx
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _tx_sn
  1014  0655                     _tx_sn:
  1015  0655                     l1591:	
  1016                           ;incstack = 0
  1017                           ; Regs used in _tx_sn: [wreg+status,2+status,0+pclath+cstack]
  1018                           
  1019                           
  1020                           ;./uart.h: 27: void tx_sn (unsigned int val);./uart.h: 28: {;./uart.h: 29:     int remai
      +                          nder, digit1, digit2, digit3, digit4, result, result1;;./uart.h: 30:     if (val<=9)
  1021  0655  3000               	movlw	0
  1022  0656  027A               	subwf	tx_sn@val+1,w
  1023  0657  300A               	movlw	10
  1024  0658  1903               	skipnz
  1025  0659  0279               	subwf	tx_sn@val,w
  1026  065A  1803               	skipnc
  1027  065B  2E5D               	goto	u1381
  1028  065C  2E5E               	goto	u1380
  1029  065D                     u1381:
  1030  065D  2E66               	goto	l1595
  1031  065E                     u1380:
  1032  065E                     l1593:
  1033                           
  1034                           ;./uart.h: 31:     {;./uart.h: 32:        tx(val+0x30);
  1035  065E  0879               	movf	tx_sn@val,w
  1036  065F  3E30               	addlw	48
  1037  0660  120A  158A  2738  120A  118A  	fcall	_tx
  1038                           
  1039                           ;./uart.h: 33:     }
  1040  0665  2FE6               	goto	l102
  1041  0666                     l1595:
  1042  0666  3000               	movlw	0
  1043  0667  027A               	subwf	tx_sn@val+1,w
  1044  0668  300A               	movlw	10
  1045  0669  1903               	skipnz
  1046  066A  0279               	subwf	tx_sn@val,w
  1047  066B  1C03               	skipc
  1048  066C  2E6E               	goto	u1391
  1049  066D  2E6F               	goto	u1390
  1050  066E                     u1391:
  1051  066E  2EB3               	goto	l1609
  1052  066F                     u1390:
  1053  066F                     l1597:
  1054  066F  3000               	movlw	0
  1055  0670  027A               	subwf	tx_sn@val+1,w
  1056  0671  3064               	movlw	100
  1057  0672  1903               	skipnz
  1058  0673  0279               	subwf	tx_sn@val,w
  1059  0674  1803               	skipnc
  1060  0675  2E77               	goto	u1401
  1061  0676  2E78               	goto	u1400
  1062  0677                     u1401:
  1063  0677  2EB3               	goto	l1609
  1064  0678                     u1400:
  1065  0678                     l1599:
  1066                           
  1067                           ;./uart.h: 35:     {;./uart.h: 36:         remainder = val % 10;
  1068  0678  300A               	movlw	10
  1069  0679  00F0               	movwf	___lwmod@divisor
  1070  067A  3000               	movlw	0
  1071  067B  00F1               	movwf	___lwmod@divisor+1
  1072  067C  087A               	movf	tx_sn@val+1,w
  1073  067D  00F3               	movwf	___lwmod@dividend+1
  1074  067E  0879               	movf	tx_sn@val,w
  1075  067F  00F2               	movwf	___lwmod@dividend
  1076  0680  120A  158A  27C6  120A  118A  	fcall	___lwmod
  1077  0685  0871               	movf	?___lwmod+1,w
  1078  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0688  00AD               	movwf	tx_sn@remainder+1
  1081  0689  0870               	movf	?___lwmod,w
  1082  068A  00AC               	movwf	tx_sn@remainder
  1083  068B                     l1601:
  1084                           
  1085                           ;./uart.h: 37:         digit1 = remainder;
  1086  068B  082D               	movf	tx_sn@remainder+1,w
  1087  068C  00A7               	movwf	tx_sn@digit1+1
  1088  068D  082C               	movf	tx_sn@remainder,w
  1089  068E  00A6               	movwf	tx_sn@digit1
  1090  068F                     l1603:
  1091                           
  1092                           ;./uart.h: 38:         digit2 = val/10;
  1093  068F  300A               	movlw	10
  1094  0690  00F0               	movwf	___lwdiv@divisor
  1095  0691  3000               	movlw	0
  1096  0692  00F1               	movwf	___lwdiv@divisor+1
  1097  0693  087A               	movf	tx_sn@val+1,w
  1098  0694  00F3               	movwf	___lwdiv@dividend+1
  1099  0695  0879               	movf	tx_sn@val,w
  1100  0696  00F2               	movwf	___lwdiv@dividend
  1101  0697  120A  118A  20C8  120A  118A  	fcall	___lwdiv
  1102  069C  0871               	movf	?___lwdiv+1,w
  1103  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1104  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1105  069F  00A9               	movwf	tx_sn@digit2+1
  1106  06A0  0870               	movf	?___lwdiv,w
  1107  06A1  00A8               	movwf	tx_sn@digit2
  1108  06A2                     l1605:
  1109                           
  1110                           ;./uart.h: 39:         tx(digit2+0x30);
  1111  06A2  0828               	movf	tx_sn@digit2,w
  1112  06A3  3E30               	addlw	48
  1113  06A4  120A  158A  2738  120A  118A  	fcall	_tx
  1114  06A9                     l1607:
  1115                           
  1116                           ;./uart.h: 40:         tx(digit1+0x30);
  1117  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1118  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1119  06AB  0826               	movf	tx_sn@digit1,w
  1120  06AC  3E30               	addlw	48
  1121  06AD  120A  158A  2738  120A  118A  	fcall	_tx
  1122                           
  1123                           ;./uart.h: 41:     }
  1124  06B2  2FE6               	goto	l102
  1125  06B3                     l1609:
  1126  06B3  3000               	movlw	0
  1127  06B4  027A               	subwf	tx_sn@val+1,w
  1128  06B5  3064               	movlw	100
  1129  06B6  1903               	skipnz
  1130  06B7  0279               	subwf	tx_sn@val,w
  1131  06B8  1C03               	skipc
  1132  06B9  2EBB               	goto	u1411
  1133  06BA  2EBC               	goto	u1410
  1134  06BB                     u1411:
  1135  06BB  2F33               	goto	l1627
  1136  06BC                     u1410:
  1137  06BC                     l1611:
  1138  06BC  3003               	movlw	3
  1139  06BD  027A               	subwf	tx_sn@val+1,w
  1140  06BE  30E8               	movlw	232
  1141  06BF  1903               	skipnz
  1142  06C0  0279               	subwf	tx_sn@val,w
  1143  06C1  1803               	skipnc
  1144  06C2  2EC4               	goto	u1421
  1145  06C3  2EC5               	goto	u1420
  1146  06C4                     u1421:
  1147  06C4  2F33               	goto	l1627
  1148  06C5                     u1420:
  1149  06C5                     l1613:
  1150                           
  1151                           ;./uart.h: 43:     {;./uart.h: 44:         remainder = val % 10;
  1152  06C5  300A               	movlw	10
  1153  06C6  00F0               	movwf	___lwmod@divisor
  1154  06C7  3000               	movlw	0
  1155  06C8  00F1               	movwf	___lwmod@divisor+1
  1156  06C9  087A               	movf	tx_sn@val+1,w
  1157  06CA  00F3               	movwf	___lwmod@dividend+1
  1158  06CB  0879               	movf	tx_sn@val,w
  1159  06CC  00F2               	movwf	___lwmod@dividend
  1160  06CD  120A  158A  27C6  120A  118A  	fcall	___lwmod
  1161  06D2  0871               	movf	?___lwmod+1,w
  1162  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1163  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1164  06D5  00AD               	movwf	tx_sn@remainder+1
  1165  06D6  0870               	movf	?___lwmod,w
  1166  06D7  00AC               	movwf	tx_sn@remainder
  1167                           
  1168                           ;./uart.h: 45:         result1 = val /10;
  1169  06D8  300A               	movlw	10
  1170  06D9  00F0               	movwf	___lwdiv@divisor
  1171  06DA  3000               	movlw	0
  1172  06DB  00F1               	movwf	___lwdiv@divisor+1
  1173  06DC  087A               	movf	tx_sn@val+1,w
  1174  06DD  00F3               	movwf	___lwdiv@dividend+1
  1175  06DE  0879               	movf	tx_sn@val,w
  1176  06DF  00F2               	movwf	___lwdiv@dividend
  1177  06E0  120A  118A  20C8  120A  118A  	fcall	___lwdiv
  1178  06E5  0871               	movf	?___lwdiv+1,w
  1179  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1180  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1181  06E8  00AB               	movwf	tx_sn@result1+1
  1182  06E9  0870               	movf	?___lwdiv,w
  1183  06EA  00AA               	movwf	tx_sn@result1
  1184  06EB                     l1615:
  1185                           
  1186                           ;./uart.h: 46:         digit1 = remainder;
  1187  06EB  082D               	movf	tx_sn@remainder+1,w
  1188  06EC  00A7               	movwf	tx_sn@digit1+1
  1189  06ED  082C               	movf	tx_sn@remainder,w
  1190  06EE  00A6               	movwf	tx_sn@digit1
  1191  06EF                     l1617:
  1192                           
  1193                           ;./uart.h: 47:         remainder = result1%10;
  1194  06EF  300A               	movlw	10
  1195  06F0  00F0               	movwf	___awmod@divisor
  1196  06F1  3000               	movlw	0
  1197  06F2  00F1               	movwf	___awmod@divisor+1
  1198  06F3  082B               	movf	tx_sn@result1+1,w
  1199  06F4  00F3               	movwf	___awmod@dividend+1
  1200  06F5  082A               	movf	tx_sn@result1,w
  1201  06F6  00F2               	movwf	___awmod@dividend
  1202  06F7  120A  118A  2152  120A  118A  	fcall	___awmod
  1203  06FC  0871               	movf	?___awmod+1,w
  1204  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1205  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1206  06FF  00AD               	movwf	tx_sn@remainder+1
  1207  0700  0870               	movf	?___awmod,w
  1208  0701  00AC               	movwf	tx_sn@remainder
  1209                           
  1210                           ;./uart.h: 48:         digit2 = remainder;
  1211  0702  082D               	movf	tx_sn@remainder+1,w
  1212  0703  00A9               	movwf	tx_sn@digit2+1
  1213  0704  082C               	movf	tx_sn@remainder,w
  1214  0705  00A8               	movwf	tx_sn@digit2
  1215  0706                     l1619:
  1216                           
  1217                           ;./uart.h: 49:         digit3 = result1/10;
  1218  0706  300A               	movlw	10
  1219  0707  00F0               	movwf	___awdiv@divisor
  1220  0708  3000               	movlw	0
  1221  0709  00F1               	movwf	___awdiv@divisor+1
  1222  070A  082B               	movf	tx_sn@result1+1,w
  1223  070B  00F3               	movwf	___awdiv@dividend+1
  1224  070C  082A               	movf	tx_sn@result1,w
  1225  070D  00F2               	movwf	___awdiv@dividend
  1226  070E  120A  118A  220F  120A  118A  	fcall	___awdiv
  1227  0713  0871               	movf	?___awdiv+1,w
  1228  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0716  00A5               	movwf	tx_sn@digit3+1
  1231  0717  0870               	movf	?___awdiv,w
  1232  0718  00A4               	movwf	tx_sn@digit3
  1233  0719                     l1621:
  1234                           
  1235                           ;./uart.h: 50:         tx(digit3+0x30);
  1236  0719  0824               	movf	tx_sn@digit3,w
  1237  071A  3E30               	addlw	48
  1238  071B  120A  158A  2738  120A  118A  	fcall	_tx
  1239  0720                     l1623:
  1240                           
  1241                           ;./uart.h: 51:         tx(digit2+0x30);
  1242  0720  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0721  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0722  0828               	movf	tx_sn@digit2,w
  1245  0723  3E30               	addlw	48
  1246  0724  120A  158A  2738  120A  118A  	fcall	_tx
  1247  0729                     l1625:
  1248                           
  1249                           ;./uart.h: 52:         tx(digit1+0x30);
  1250  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1251  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1252  072B  0826               	movf	tx_sn@digit1,w
  1253  072C  3E30               	addlw	48
  1254  072D  120A  158A  2738  120A  118A  	fcall	_tx
  1255                           
  1256                           ;./uart.h: 53:     }
  1257  0732  2FE6               	goto	l102
  1258  0733                     l1627:
  1259  0733  3003               	movlw	3
  1260  0734  027A               	subwf	tx_sn@val+1,w
  1261  0735  30E8               	movlw	232
  1262  0736  1903               	skipnz
  1263  0737  0279               	subwf	tx_sn@val,w
  1264  0738  1C03               	skipc
  1265  0739  2F3B               	goto	u1431
  1266  073A  2F3C               	goto	u1430
  1267  073B                     u1431:
  1268  073B  2FE6               	goto	l98
  1269  073C                     u1430:
  1270  073C                     l1629:
  1271  073C  3027               	movlw	39
  1272  073D  027A               	subwf	tx_sn@val+1,w
  1273  073E  300F               	movlw	15
  1274  073F  1903               	skipnz
  1275  0740  0279               	subwf	tx_sn@val,w
  1276  0741  1803               	skipnc
  1277  0742  2F44               	goto	u1441
  1278  0743  2F45               	goto	u1440
  1279  0744                     u1441:
  1280  0744  2FE6               	goto	l98
  1281  0745                     u1440:
  1282  0745                     l1631:
  1283                           
  1284                           ;./uart.h: 55:     {;./uart.h: 56:         remainder = val % 10;
  1285  0745  300A               	movlw	10
  1286  0746  00F0               	movwf	___lwmod@divisor
  1287  0747  3000               	movlw	0
  1288  0748  00F1               	movwf	___lwmod@divisor+1
  1289  0749  087A               	movf	tx_sn@val+1,w
  1290  074A  00F3               	movwf	___lwmod@dividend+1
  1291  074B  0879               	movf	tx_sn@val,w
  1292  074C  00F2               	movwf	___lwmod@dividend
  1293  074D  120A  158A  27C6  120A  118A  	fcall	___lwmod
  1294  0752  0871               	movf	?___lwmod+1,w
  1295  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0755  00AD               	movwf	tx_sn@remainder+1
  1298  0756  0870               	movf	?___lwmod,w
  1299  0757  00AC               	movwf	tx_sn@remainder
  1300                           
  1301                           ;./uart.h: 57:         result1 = val /10;
  1302  0758  300A               	movlw	10
  1303  0759  00F0               	movwf	___lwdiv@divisor
  1304  075A  3000               	movlw	0
  1305  075B  00F1               	movwf	___lwdiv@divisor+1
  1306  075C  087A               	movf	tx_sn@val+1,w
  1307  075D  00F3               	movwf	___lwdiv@dividend+1
  1308  075E  0879               	movf	tx_sn@val,w
  1309  075F  00F2               	movwf	___lwdiv@dividend
  1310  0760  120A  118A  20C8  120A  118A  	fcall	___lwdiv
  1311  0765  0871               	movf	?___lwdiv+1,w
  1312  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0768  00AB               	movwf	tx_sn@result1+1
  1315  0769  0870               	movf	?___lwdiv,w
  1316  076A  00AA               	movwf	tx_sn@result1
  1317  076B                     l1633:
  1318                           
  1319                           ;./uart.h: 58:         digit1 = remainder;
  1320  076B  082D               	movf	tx_sn@remainder+1,w
  1321  076C  00A7               	movwf	tx_sn@digit1+1
  1322  076D  082C               	movf	tx_sn@remainder,w
  1323  076E  00A6               	movwf	tx_sn@digit1
  1324  076F                     l1635:
  1325                           
  1326                           ;./uart.h: 59:         remainder = result1%10;
  1327  076F  300A               	movlw	10
  1328  0770  00F0               	movwf	___awmod@divisor
  1329  0771  3000               	movlw	0
  1330  0772  00F1               	movwf	___awmod@divisor+1
  1331  0773  082B               	movf	tx_sn@result1+1,w
  1332  0774  00F3               	movwf	___awmod@dividend+1
  1333  0775  082A               	movf	tx_sn@result1,w
  1334  0776  00F2               	movwf	___awmod@dividend
  1335  0777  120A  118A  2152  120A  118A  	fcall	___awmod
  1336  077C  0871               	movf	?___awmod+1,w
  1337  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1338  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1339  077F  00AD               	movwf	tx_sn@remainder+1
  1340  0780  0870               	movf	?___awmod,w
  1341  0781  00AC               	movwf	tx_sn@remainder
  1342                           
  1343                           ;./uart.h: 60:         digit2 = remainder;
  1344  0782  082D               	movf	tx_sn@remainder+1,w
  1345  0783  00A9               	movwf	tx_sn@digit2+1
  1346  0784  082C               	movf	tx_sn@remainder,w
  1347  0785  00A8               	movwf	tx_sn@digit2
  1348  0786                     l1637:
  1349                           
  1350                           ;./uart.h: 61:         result = result1/10;
  1351  0786  300A               	movlw	10
  1352  0787  00F0               	movwf	___awdiv@divisor
  1353  0788  3000               	movlw	0
  1354  0789  00F1               	movwf	___awdiv@divisor+1
  1355  078A  082B               	movf	tx_sn@result1+1,w
  1356  078B  00F3               	movwf	___awdiv@dividend+1
  1357  078C  082A               	movf	tx_sn@result1,w
  1358  078D  00F2               	movwf	___awdiv@dividend
  1359  078E  120A  118A  220F  120A  118A  	fcall	___awdiv
  1360  0793  0871               	movf	?___awdiv+1,w
  1361  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0796  00A3               	movwf	tx_sn@result+1
  1364  0797  0870               	movf	?___awdiv,w
  1365  0798  00A2               	movwf	tx_sn@result
  1366  0799                     l1639:
  1367                           
  1368                           ;./uart.h: 62:         remainder = result%10;
  1369  0799  300A               	movlw	10
  1370  079A  00F0               	movwf	___awmod@divisor
  1371  079B  3000               	movlw	0
  1372  079C  00F1               	movwf	___awmod@divisor+1
  1373  079D  0823               	movf	tx_sn@result+1,w
  1374  079E  00F3               	movwf	___awmod@dividend+1
  1375  079F  0822               	movf	tx_sn@result,w
  1376  07A0  00F2               	movwf	___awmod@dividend
  1377  07A1  120A  118A  2152  120A  118A  	fcall	___awmod
  1378  07A6  0871               	movf	?___awmod+1,w
  1379  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1380  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1381  07A9  00AD               	movwf	tx_sn@remainder+1
  1382  07AA  0870               	movf	?___awmod,w
  1383  07AB  00AC               	movwf	tx_sn@remainder
  1384                           
  1385                           ;./uart.h: 63:         digit3=remainder;
  1386  07AC  082D               	movf	tx_sn@remainder+1,w
  1387  07AD  00A5               	movwf	tx_sn@digit3+1
  1388  07AE  082C               	movf	tx_sn@remainder,w
  1389  07AF  00A4               	movwf	tx_sn@digit3
  1390  07B0                     l1641:
  1391                           
  1392                           ;./uart.h: 64:         digit4 = result/10;
  1393  07B0  300A               	movlw	10
  1394  07B1  00F0               	movwf	___awdiv@divisor
  1395  07B2  3000               	movlw	0
  1396  07B3  00F1               	movwf	___awdiv@divisor+1
  1397  07B4  0823               	movf	tx_sn@result+1,w
  1398  07B5  00F3               	movwf	___awdiv@dividend+1
  1399  07B6  0822               	movf	tx_sn@result,w
  1400  07B7  00F2               	movwf	___awdiv@dividend
  1401  07B8  120A  118A  220F  120A  118A  	fcall	___awdiv
  1402  07BD  0871               	movf	?___awdiv+1,w
  1403  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1404  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1405  07C0  00A1               	movwf	tx_sn@digit4+1
  1406  07C1  0870               	movf	?___awdiv,w
  1407  07C2  00A0               	movwf	tx_sn@digit4
  1408  07C3                     l1643:
  1409                           
  1410                           ;./uart.h: 65:         tx(digit4+0x30);
  1411  07C3  0820               	movf	tx_sn@digit4,w
  1412  07C4  3E30               	addlw	48
  1413  07C5  120A  158A  2738  120A  118A  	fcall	_tx
  1414  07CA                     l1645:
  1415                           
  1416                           ;./uart.h: 66:         tx(digit3+0x30);
  1417  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1418  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1419  07CC  0824               	movf	tx_sn@digit3,w
  1420  07CD  3E30               	addlw	48
  1421  07CE  120A  158A  2738  120A  118A  	fcall	_tx
  1422  07D3                     l1647:
  1423                           
  1424                           ;./uart.h: 67:         tx(digit2+0x30);
  1425  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1426  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1427  07D5  0828               	movf	tx_sn@digit2,w
  1428  07D6  3E30               	addlw	48
  1429  07D7  120A  158A  2738  120A  118A  	fcall	_tx
  1430  07DC                     l1649:
  1431                           
  1432                           ;./uart.h: 68:         tx(digit1+0x30);
  1433  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1434  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1435  07DE  0826               	movf	tx_sn@digit1,w
  1436  07DF  3E30               	addlw	48
  1437  07E0  120A  158A  2738  120A  118A  	fcall	_tx
  1438  07E5  2FE6               	goto	l102
  1439  07E6                     l98:
  1440  07E6                     l102:
  1441  07E6  0008               	return
  1442  07E7                     __end_of_tx_sn:
  1443                           
  1444                           	psect	text2
  1445  0F38                     __ptext2:	
  1446 ;; *************** function _tx *****************
  1447 ;; Defined at:
  1448 ;;		line 14 in file "./uart.h"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  a               1    wreg     unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  a               1    0[COMMON] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      unsigned char 
  1455 ;; Registers used:
  1456 ;;		wreg
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         0       0       0       0       0
  1463 ;;      Locals:         1       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0
  1465 ;;      Totals:         1       0       0       0       0
  1466 ;;Total ram usage:        1 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_tx_sn
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           
  1477                           ;psect for function _tx
  1478  0F38                     _tx:
  1479                           
  1480                           ;incstack = 0
  1481                           ; Regs used in _tx: [wreg]
  1482                           ;tx@a stored from wreg
  1483  0F38  00F0               	movwf	tx@a
  1484  0F39                     l1315:
  1485                           
  1486                           ;./uart.h: 14: unsigned char tx(unsigned char a);./uart.h: 15: {;./uart.h: 16:  TXREG=a;
  1487  0F39  0870               	movf	tx@a,w
  1488  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0F3C  0099               	movwf	25	;volatile
  1491  0F3D                     l83:	
  1492                           ;./uart.h: 17:  while(!TXIF);
  1493                           
  1494  0F3D  1E0C               	btfss	12,4	;volatile
  1495  0F3E  2F40               	goto	u831
  1496  0F3F  2F41               	goto	u830
  1497  0F40                     u831:
  1498  0F40  2F3D               	goto	l83
  1499  0F41                     u830:
  1500  0F41                     l85:
  1501                           
  1502                           ;./uart.h: 18:  TXIF = 0;
  1503  0F41  120C               	bcf	12,4	;volatile
  1504  0F42                     l86:
  1505  0F42  0008               	return
  1506  0F43                     __end_of_tx:
  1507                           
  1508                           	psect	text3
  1509  04C3                     __ptext3:	
  1510 ;; *************** function _show_multidigits *****************
  1511 ;; Defined at:
  1512 ;;		line 86 in file "./lcd4bit.h"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  val             2    9[COMMON] unsigned int 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  remainder       2   12[BANK0 ] int 
  1517 ;;  result1         2   10[BANK0 ] int 
  1518 ;;  digit2          2    8[BANK0 ] int 
  1519 ;;  digit1          2    6[BANK0 ] int 
  1520 ;;  digit3          2    4[BANK0 ] int 
  1521 ;;  result          2    2[BANK0 ] int 
  1522 ;;  digit4          2    0[BANK0 ] int 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         2       0       0       0       0
  1533 ;;      Locals:         0      14       0       0       0
  1534 ;;      Temps:          0       0       0       0       0
  1535 ;;      Totals:         2      14       0       0       0
  1536 ;;Total ram usage:       16 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 1
  1539 ;; This function calls:
  1540 ;;		_LCD_Char
  1541 ;;		___awdiv
  1542 ;;		___awmod
  1543 ;;		___lwdiv
  1544 ;;		___lwmod
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           
  1551                           ;psect for function _show_multidigits
  1552  04C3                     _show_multidigits:
  1553  04C3                     l1529:	
  1554                           ;incstack = 0
  1555                           ; Regs used in _show_multidigits: [wreg+status,2+status,0+pclath+cstack]
  1556                           
  1557                           
  1558                           ;./lcd4bit.h: 86: void show_multidigits (unsigned int val);./lcd4bit.h: 87: {;./lcd4bit.
      +                          h: 88:     int remainder, digit1, digit2, digit3, digit4, result, result1;;./lcd4bit.h: 
      +                          89:     if (val<=9)
  1559  04C3  3000               	movlw	0
  1560  04C4  027A               	subwf	show_multidigits@val+1,w
  1561  04C5  300A               	movlw	10
  1562  04C6  1903               	skipnz
  1563  04C7  0279               	subwf	show_multidigits@val,w
  1564  04C8  1803               	skipnc
  1565  04C9  2CCB               	goto	u1311
  1566  04CA  2CCC               	goto	u1310
  1567  04CB                     u1311:
  1568  04CB  2CD4               	goto	l1533
  1569  04CC                     u1310:
  1570  04CC                     l1531:
  1571                           
  1572                           ;./lcd4bit.h: 90:     {;./lcd4bit.h: 91:        LCD_Char(val+0x30);
  1573  04CC  0879               	movf	show_multidigits@val,w
  1574  04CD  3E30               	addlw	48
  1575  04CE  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1576                           
  1577                           ;./lcd4bit.h: 92:     }
  1578  04D3  2E54               	goto	l77
  1579  04D4                     l1533:
  1580  04D4  3000               	movlw	0
  1581  04D5  027A               	subwf	show_multidigits@val+1,w
  1582  04D6  300A               	movlw	10
  1583  04D7  1903               	skipnz
  1584  04D8  0279               	subwf	show_multidigits@val,w
  1585  04D9  1C03               	skipc
  1586  04DA  2CDC               	goto	u1321
  1587  04DB  2CDD               	goto	u1320
  1588  04DC                     u1321:
  1589  04DC  2D21               	goto	l1547
  1590  04DD                     u1320:
  1591  04DD                     l1535:
  1592  04DD  3000               	movlw	0
  1593  04DE  027A               	subwf	show_multidigits@val+1,w
  1594  04DF  3064               	movlw	100
  1595  04E0  1903               	skipnz
  1596  04E1  0279               	subwf	show_multidigits@val,w
  1597  04E2  1803               	skipnc
  1598  04E3  2CE5               	goto	u1331
  1599  04E4  2CE6               	goto	u1330
  1600  04E5                     u1331:
  1601  04E5  2D21               	goto	l1547
  1602  04E6                     u1330:
  1603  04E6                     l1537:
  1604                           
  1605                           ;./lcd4bit.h: 94:     {;./lcd4bit.h: 95:         remainder = val % 10;
  1606  04E6  300A               	movlw	10
  1607  04E7  00F0               	movwf	___lwmod@divisor
  1608  04E8  3000               	movlw	0
  1609  04E9  00F1               	movwf	___lwmod@divisor+1
  1610  04EA  087A               	movf	show_multidigits@val+1,w
  1611  04EB  00F3               	movwf	___lwmod@dividend+1
  1612  04EC  0879               	movf	show_multidigits@val,w
  1613  04ED  00F2               	movwf	___lwmod@dividend
  1614  04EE  120A  158A  27C6  120A  118A  	fcall	___lwmod
  1615  04F3  0871               	movf	?___lwmod+1,w
  1616  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1617  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1618  04F6  00AD               	movwf	show_multidigits@remainder+1
  1619  04F7  0870               	movf	?___lwmod,w
  1620  04F8  00AC               	movwf	show_multidigits@remainder
  1621  04F9                     l1539:
  1622                           
  1623                           ;./lcd4bit.h: 96:         digit1 = remainder;
  1624  04F9  082D               	movf	show_multidigits@remainder+1,w
  1625  04FA  00A7               	movwf	show_multidigits@digit1+1
  1626  04FB  082C               	movf	show_multidigits@remainder,w
  1627  04FC  00A6               	movwf	show_multidigits@digit1
  1628  04FD                     l1541:
  1629                           
  1630                           ;./lcd4bit.h: 97:         digit2 = val/10;
  1631  04FD  300A               	movlw	10
  1632  04FE  00F0               	movwf	___lwdiv@divisor
  1633  04FF  3000               	movlw	0
  1634  0500  00F1               	movwf	___lwdiv@divisor+1
  1635  0501  087A               	movf	show_multidigits@val+1,w
  1636  0502  00F3               	movwf	___lwdiv@dividend+1
  1637  0503  0879               	movf	show_multidigits@val,w
  1638  0504  00F2               	movwf	___lwdiv@dividend
  1639  0505  120A  118A  20C8  120A  118A  	fcall	___lwdiv
  1640  050A  0871               	movf	?___lwdiv+1,w
  1641  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1642  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1643  050D  00A9               	movwf	show_multidigits@digit2+1
  1644  050E  0870               	movf	?___lwdiv,w
  1645  050F  00A8               	movwf	show_multidigits@digit2
  1646  0510                     l1543:
  1647                           
  1648                           ;./lcd4bit.h: 98:         LCD_Char(digit2+0x48);
  1649  0510  0828               	movf	show_multidigits@digit2,w
  1650  0511  3E48               	addlw	72
  1651  0512  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1652  0517                     l1545:
  1653                           
  1654                           ;./lcd4bit.h: 99:         LCD_Char(digit1+0x48);
  1655  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0519  0826               	movf	show_multidigits@digit1,w
  1658  051A  3E48               	addlw	72
  1659  051B  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1660                           
  1661                           ;./lcd4bit.h: 100:     }
  1662  0520  2E54               	goto	l77
  1663  0521                     l1547:
  1664  0521  3000               	movlw	0
  1665  0522  027A               	subwf	show_multidigits@val+1,w
  1666  0523  3064               	movlw	100
  1667  0524  1903               	skipnz
  1668  0525  0279               	subwf	show_multidigits@val,w
  1669  0526  1C03               	skipc
  1670  0527  2D29               	goto	u1341
  1671  0528  2D2A               	goto	u1340
  1672  0529                     u1341:
  1673  0529  2DA1               	goto	l1565
  1674  052A                     u1340:
  1675  052A                     l1549:
  1676  052A  3003               	movlw	3
  1677  052B  027A               	subwf	show_multidigits@val+1,w
  1678  052C  30E8               	movlw	232
  1679  052D  1903               	skipnz
  1680  052E  0279               	subwf	show_multidigits@val,w
  1681  052F  1803               	skipnc
  1682  0530  2D32               	goto	u1351
  1683  0531  2D33               	goto	u1350
  1684  0532                     u1351:
  1685  0532  2DA1               	goto	l1565
  1686  0533                     u1350:
  1687  0533                     l1551:
  1688                           
  1689                           ;./lcd4bit.h: 102:     {;./lcd4bit.h: 103:         remainder = val % 10;
  1690  0533  300A               	movlw	10
  1691  0534  00F0               	movwf	___lwmod@divisor
  1692  0535  3000               	movlw	0
  1693  0536  00F1               	movwf	___lwmod@divisor+1
  1694  0537  087A               	movf	show_multidigits@val+1,w
  1695  0538  00F3               	movwf	___lwmod@dividend+1
  1696  0539  0879               	movf	show_multidigits@val,w
  1697  053A  00F2               	movwf	___lwmod@dividend
  1698  053B  120A  158A  27C6  120A  118A  	fcall	___lwmod
  1699  0540  0871               	movf	?___lwmod+1,w
  1700  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0543  00AD               	movwf	show_multidigits@remainder+1
  1703  0544  0870               	movf	?___lwmod,w
  1704  0545  00AC               	movwf	show_multidigits@remainder
  1705                           
  1706                           ;./lcd4bit.h: 104:         result1 = val /10;
  1707  0546  300A               	movlw	10
  1708  0547  00F0               	movwf	___lwdiv@divisor
  1709  0548  3000               	movlw	0
  1710  0549  00F1               	movwf	___lwdiv@divisor+1
  1711  054A  087A               	movf	show_multidigits@val+1,w
  1712  054B  00F3               	movwf	___lwdiv@dividend+1
  1713  054C  0879               	movf	show_multidigits@val,w
  1714  054D  00F2               	movwf	___lwdiv@dividend
  1715  054E  120A  118A  20C8  120A  118A  	fcall	___lwdiv
  1716  0553  0871               	movf	?___lwdiv+1,w
  1717  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0556  00AB               	movwf	show_multidigits@result1+1
  1720  0557  0870               	movf	?___lwdiv,w
  1721  0558  00AA               	movwf	show_multidigits@result1
  1722  0559                     l1553:
  1723                           
  1724                           ;./lcd4bit.h: 105:         digit1 = remainder;
  1725  0559  082D               	movf	show_multidigits@remainder+1,w
  1726  055A  00A7               	movwf	show_multidigits@digit1+1
  1727  055B  082C               	movf	show_multidigits@remainder,w
  1728  055C  00A6               	movwf	show_multidigits@digit1
  1729  055D                     l1555:
  1730                           
  1731                           ;./lcd4bit.h: 106:         remainder = result1%10;
  1732  055D  300A               	movlw	10
  1733  055E  00F0               	movwf	___awmod@divisor
  1734  055F  3000               	movlw	0
  1735  0560  00F1               	movwf	___awmod@divisor+1
  1736  0561  082B               	movf	show_multidigits@result1+1,w
  1737  0562  00F3               	movwf	___awmod@dividend+1
  1738  0563  082A               	movf	show_multidigits@result1,w
  1739  0564  00F2               	movwf	___awmod@dividend
  1740  0565  120A  118A  2152  120A  118A  	fcall	___awmod
  1741  056A  0871               	movf	?___awmod+1,w
  1742  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1743  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1744  056D  00AD               	movwf	show_multidigits@remainder+1
  1745  056E  0870               	movf	?___awmod,w
  1746  056F  00AC               	movwf	show_multidigits@remainder
  1747                           
  1748                           ;./lcd4bit.h: 107:         digit2 = remainder;
  1749  0570  082D               	movf	show_multidigits@remainder+1,w
  1750  0571  00A9               	movwf	show_multidigits@digit2+1
  1751  0572  082C               	movf	show_multidigits@remainder,w
  1752  0573  00A8               	movwf	show_multidigits@digit2
  1753  0574                     l1557:
  1754                           
  1755                           ;./lcd4bit.h: 108:         digit3 = result1/10;
  1756  0574  300A               	movlw	10
  1757  0575  00F0               	movwf	___awdiv@divisor
  1758  0576  3000               	movlw	0
  1759  0577  00F1               	movwf	___awdiv@divisor+1
  1760  0578  082B               	movf	show_multidigits@result1+1,w
  1761  0579  00F3               	movwf	___awdiv@dividend+1
  1762  057A  082A               	movf	show_multidigits@result1,w
  1763  057B  00F2               	movwf	___awdiv@dividend
  1764  057C  120A  118A  220F  120A  118A  	fcall	___awdiv
  1765  0581  0871               	movf	?___awdiv+1,w
  1766  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0584  00A5               	movwf	show_multidigits@digit3+1
  1769  0585  0870               	movf	?___awdiv,w
  1770  0586  00A4               	movwf	show_multidigits@digit3
  1771  0587                     l1559:
  1772                           
  1773                           ;./lcd4bit.h: 109:         LCD_Char(digit3+0x30);
  1774  0587  0824               	movf	show_multidigits@digit3,w
  1775  0588  3E30               	addlw	48
  1776  0589  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1777  058E                     l1561:
  1778                           
  1779                           ;./lcd4bit.h: 110:         LCD_Char(digit2+0x30);
  1780  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1781  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0590  0828               	movf	show_multidigits@digit2,w
  1783  0591  3E30               	addlw	48
  1784  0592  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1785  0597                     l1563:
  1786                           
  1787                           ;./lcd4bit.h: 111:         LCD_Char(digit1+0x30);
  1788  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0599  0826               	movf	show_multidigits@digit1,w
  1791  059A  3E30               	addlw	48
  1792  059B  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1793                           
  1794                           ;./lcd4bit.h: 112:     }
  1795  05A0  2E54               	goto	l77
  1796  05A1                     l1565:
  1797  05A1  3003               	movlw	3
  1798  05A2  027A               	subwf	show_multidigits@val+1,w
  1799  05A3  30E8               	movlw	232
  1800  05A4  1903               	skipnz
  1801  05A5  0279               	subwf	show_multidigits@val,w
  1802  05A6  1C03               	skipc
  1803  05A7  2DA9               	goto	u1361
  1804  05A8  2DAA               	goto	u1360
  1805  05A9                     u1361:
  1806  05A9  2E54               	goto	l73
  1807  05AA                     u1360:
  1808  05AA                     l1567:
  1809  05AA  3027               	movlw	39
  1810  05AB  027A               	subwf	show_multidigits@val+1,w
  1811  05AC  300F               	movlw	15
  1812  05AD  1903               	skipnz
  1813  05AE  0279               	subwf	show_multidigits@val,w
  1814  05AF  1803               	skipnc
  1815  05B0  2DB2               	goto	u1371
  1816  05B1  2DB3               	goto	u1370
  1817  05B2                     u1371:
  1818  05B2  2E54               	goto	l73
  1819  05B3                     u1370:
  1820  05B3                     l1569:
  1821                           
  1822                           ;./lcd4bit.h: 114:     {;./lcd4bit.h: 115:         remainder = val % 10;
  1823  05B3  300A               	movlw	10
  1824  05B4  00F0               	movwf	___lwmod@divisor
  1825  05B5  3000               	movlw	0
  1826  05B6  00F1               	movwf	___lwmod@divisor+1
  1827  05B7  087A               	movf	show_multidigits@val+1,w
  1828  05B8  00F3               	movwf	___lwmod@dividend+1
  1829  05B9  0879               	movf	show_multidigits@val,w
  1830  05BA  00F2               	movwf	___lwmod@dividend
  1831  05BB  120A  158A  27C6  120A  118A  	fcall	___lwmod
  1832  05C0  0871               	movf	?___lwmod+1,w
  1833  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1834  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1835  05C3  00AD               	movwf	show_multidigits@remainder+1
  1836  05C4  0870               	movf	?___lwmod,w
  1837  05C5  00AC               	movwf	show_multidigits@remainder
  1838                           
  1839                           ;./lcd4bit.h: 116:         result1 = val /10;
  1840  05C6  300A               	movlw	10
  1841  05C7  00F0               	movwf	___lwdiv@divisor
  1842  05C8  3000               	movlw	0
  1843  05C9  00F1               	movwf	___lwdiv@divisor+1
  1844  05CA  087A               	movf	show_multidigits@val+1,w
  1845  05CB  00F3               	movwf	___lwdiv@dividend+1
  1846  05CC  0879               	movf	show_multidigits@val,w
  1847  05CD  00F2               	movwf	___lwdiv@dividend
  1848  05CE  120A  118A  20C8  120A  118A  	fcall	___lwdiv
  1849  05D3  0871               	movf	?___lwdiv+1,w
  1850  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1851  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1852  05D6  00AB               	movwf	show_multidigits@result1+1
  1853  05D7  0870               	movf	?___lwdiv,w
  1854  05D8  00AA               	movwf	show_multidigits@result1
  1855  05D9                     l1571:
  1856                           
  1857                           ;./lcd4bit.h: 117:         digit1 = remainder;
  1858  05D9  082D               	movf	show_multidigits@remainder+1,w
  1859  05DA  00A7               	movwf	show_multidigits@digit1+1
  1860  05DB  082C               	movf	show_multidigits@remainder,w
  1861  05DC  00A6               	movwf	show_multidigits@digit1
  1862  05DD                     l1573:
  1863                           
  1864                           ;./lcd4bit.h: 118:         remainder = result1%10;
  1865  05DD  300A               	movlw	10
  1866  05DE  00F0               	movwf	___awmod@divisor
  1867  05DF  3000               	movlw	0
  1868  05E0  00F1               	movwf	___awmod@divisor+1
  1869  05E1  082B               	movf	show_multidigits@result1+1,w
  1870  05E2  00F3               	movwf	___awmod@dividend+1
  1871  05E3  082A               	movf	show_multidigits@result1,w
  1872  05E4  00F2               	movwf	___awmod@dividend
  1873  05E5  120A  118A  2152  120A  118A  	fcall	___awmod
  1874  05EA  0871               	movf	?___awmod+1,w
  1875  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1876  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1877  05ED  00AD               	movwf	show_multidigits@remainder+1
  1878  05EE  0870               	movf	?___awmod,w
  1879  05EF  00AC               	movwf	show_multidigits@remainder
  1880                           
  1881                           ;./lcd4bit.h: 119:         digit2 = remainder;
  1882  05F0  082D               	movf	show_multidigits@remainder+1,w
  1883  05F1  00A9               	movwf	show_multidigits@digit2+1
  1884  05F2  082C               	movf	show_multidigits@remainder,w
  1885  05F3  00A8               	movwf	show_multidigits@digit2
  1886  05F4                     l1575:
  1887                           
  1888                           ;./lcd4bit.h: 120:         result = result1/10;
  1889  05F4  300A               	movlw	10
  1890  05F5  00F0               	movwf	___awdiv@divisor
  1891  05F6  3000               	movlw	0
  1892  05F7  00F1               	movwf	___awdiv@divisor+1
  1893  05F8  082B               	movf	show_multidigits@result1+1,w
  1894  05F9  00F3               	movwf	___awdiv@dividend+1
  1895  05FA  082A               	movf	show_multidigits@result1,w
  1896  05FB  00F2               	movwf	___awdiv@dividend
  1897  05FC  120A  118A  220F  120A  118A  	fcall	___awdiv
  1898  0601  0871               	movf	?___awdiv+1,w
  1899  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0604  00A3               	movwf	show_multidigits@result+1
  1902  0605  0870               	movf	?___awdiv,w
  1903  0606  00A2               	movwf	show_multidigits@result
  1904  0607                     l1577:
  1905                           
  1906                           ;./lcd4bit.h: 121:         remainder = result%10;
  1907  0607  300A               	movlw	10
  1908  0608  00F0               	movwf	___awmod@divisor
  1909  0609  3000               	movlw	0
  1910  060A  00F1               	movwf	___awmod@divisor+1
  1911  060B  0823               	movf	show_multidigits@result+1,w
  1912  060C  00F3               	movwf	___awmod@dividend+1
  1913  060D  0822               	movf	show_multidigits@result,w
  1914  060E  00F2               	movwf	___awmod@dividend
  1915  060F  120A  118A  2152  120A  118A  	fcall	___awmod
  1916  0614  0871               	movf	?___awmod+1,w
  1917  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0617  00AD               	movwf	show_multidigits@remainder+1
  1920  0618  0870               	movf	?___awmod,w
  1921  0619  00AC               	movwf	show_multidigits@remainder
  1922                           
  1923                           ;./lcd4bit.h: 122:         digit3=remainder;
  1924  061A  082D               	movf	show_multidigits@remainder+1,w
  1925  061B  00A5               	movwf	show_multidigits@digit3+1
  1926  061C  082C               	movf	show_multidigits@remainder,w
  1927  061D  00A4               	movwf	show_multidigits@digit3
  1928  061E                     l1579:
  1929                           
  1930                           ;./lcd4bit.h: 123:         digit4 = result/10;
  1931  061E  300A               	movlw	10
  1932  061F  00F0               	movwf	___awdiv@divisor
  1933  0620  3000               	movlw	0
  1934  0621  00F1               	movwf	___awdiv@divisor+1
  1935  0622  0823               	movf	show_multidigits@result+1,w
  1936  0623  00F3               	movwf	___awdiv@dividend+1
  1937  0624  0822               	movf	show_multidigits@result,w
  1938  0625  00F2               	movwf	___awdiv@dividend
  1939  0626  120A  118A  220F  120A  118A  	fcall	___awdiv
  1940  062B  0871               	movf	?___awdiv+1,w
  1941  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1942  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1943  062E  00A1               	movwf	show_multidigits@digit4+1
  1944  062F  0870               	movf	?___awdiv,w
  1945  0630  00A0               	movwf	show_multidigits@digit4
  1946  0631                     l1581:
  1947                           
  1948                           ;./lcd4bit.h: 124:         LCD_Char(digit4+0x30);
  1949  0631  0820               	movf	show_multidigits@digit4,w
  1950  0632  3E30               	addlw	48
  1951  0633  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1952  0638                     l1583:
  1953                           
  1954                           ;./lcd4bit.h: 125:         LCD_Char(digit3+0x30);
  1955  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1957  063A  0824               	movf	show_multidigits@digit3,w
  1958  063B  3E30               	addlw	48
  1959  063C  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1960  0641                     l1585:
  1961                           
  1962                           ;./lcd4bit.h: 126:         LCD_Char(digit2+0x30);
  1963  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0643  0828               	movf	show_multidigits@digit2,w
  1966  0644  3E30               	addlw	48
  1967  0645  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1968  064A                     l1587:
  1969                           
  1970                           ;./lcd4bit.h: 127:         LCD_Char(digit1+0x30);
  1971  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1972  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1973  064C  0826               	movf	show_multidigits@digit1,w
  1974  064D  3E30               	addlw	48
  1975  064E  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  1976  0653  2E54               	goto	l77
  1977  0654                     l73:
  1978  0654                     l77:
  1979  0654  0008               	return
  1980  0655                     __end_of_show_multidigits:
  1981                           
  1982                           	psect	text4
  1983  0152                     __ptext4:	
  1984 ;; *************** function ___awmod *****************
  1985 ;; Defined at:
  1986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  divisor         2    0[COMMON] int 
  1989 ;;  dividend        2    2[COMMON] int 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  sign            1    6[COMMON] unsigned char 
  1992 ;;  counter         1    5[COMMON] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  2    0[COMMON] int 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         4       0       0       0       0
  2003 ;;      Locals:         2       0       0       0       0
  2004 ;;      Temps:          1       0       0       0       0
  2005 ;;      Totals:         7       0       0       0       0
  2006 ;;Total ram usage:        7 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_show_multidigits
  2012 ;;		_tx_sn
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function ___awmod
  2018  0152                     ___awmod:
  2019  0152                     l1415:	
  2020                           ;incstack = 0
  2021                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2022                           
  2023  0152  01F6               	clrf	___awmod@sign
  2024  0153                     l1417:
  2025  0153  1FF3               	btfss	___awmod@dividend+1,7
  2026  0154  2956               	goto	u1091
  2027  0155  2957               	goto	u1090
  2028  0156                     u1091:
  2029  0156  295E               	goto	l1423
  2030  0157                     u1090:
  2031  0157                     l1419:
  2032  0157  09F2               	comf	___awmod@dividend,f
  2033  0158  09F3               	comf	___awmod@dividend+1,f
  2034  0159  0AF2               	incf	___awmod@dividend,f
  2035  015A  1903               	skipnz
  2036  015B  0AF3               	incf	___awmod@dividend+1,f
  2037  015C                     l1421:
  2038  015C  01F6               	clrf	___awmod@sign
  2039  015D  0AF6               	incf	___awmod@sign,f
  2040  015E                     l1423:
  2041  015E  1FF1               	btfss	___awmod@divisor+1,7
  2042  015F  2961               	goto	u1101
  2043  0160  2962               	goto	u1100
  2044  0161                     u1101:
  2045  0161  2967               	goto	l1427
  2046  0162                     u1100:
  2047  0162                     l1425:
  2048  0162  09F0               	comf	___awmod@divisor,f
  2049  0163  09F1               	comf	___awmod@divisor+1,f
  2050  0164  0AF0               	incf	___awmod@divisor,f
  2051  0165  1903               	skipnz
  2052  0166  0AF1               	incf	___awmod@divisor+1,f
  2053  0167                     l1427:
  2054  0167  0870               	movf	___awmod@divisor,w
  2055  0168  0471               	iorwf	___awmod@divisor+1,w
  2056  0169  1903               	btfsc	3,2
  2057  016A  296C               	goto	u1111
  2058  016B  296D               	goto	u1110
  2059  016C                     u1111:
  2060  016C  299C               	goto	l1445
  2061  016D                     u1110:
  2062  016D                     l1429:
  2063  016D  01F5               	clrf	___awmod@counter
  2064  016E  0AF5               	incf	___awmod@counter,f
  2065  016F  297B               	goto	l1435
  2066  0170                     l1431:
  2067  0170  3001               	movlw	1
  2068  0171                     u1125:
  2069  0171  1003               	clrc
  2070  0172  0DF0               	rlf	___awmod@divisor,f
  2071  0173  0DF1               	rlf	___awmod@divisor+1,f
  2072  0174  3EFF               	addlw	-1
  2073  0175  1D03               	skipz
  2074  0176  2971               	goto	u1125
  2075  0177                     l1433:
  2076  0177  3001               	movlw	1
  2077  0178  00F4               	movwf	??___awmod
  2078  0179  0874               	movf	??___awmod,w
  2079  017A  07F5               	addwf	___awmod@counter,f
  2080  017B                     l1435:
  2081  017B  1FF1               	btfss	___awmod@divisor+1,7
  2082  017C  297E               	goto	u1131
  2083  017D  297F               	goto	u1130
  2084  017E                     u1131:
  2085  017E  2970               	goto	l1431
  2086  017F                     u1130:
  2087  017F                     l1437:
  2088  017F  0871               	movf	___awmod@divisor+1,w
  2089  0180  0273               	subwf	___awmod@dividend+1,w
  2090  0181  1D03               	skipz
  2091  0182  2985               	goto	u1145
  2092  0183  0870               	movf	___awmod@divisor,w
  2093  0184  0272               	subwf	___awmod@dividend,w
  2094  0185                     u1145:
  2095  0185  1C03               	skipc
  2096  0186  2988               	goto	u1141
  2097  0187  2989               	goto	u1140
  2098  0188                     u1141:
  2099  0188  298F               	goto	l1441
  2100  0189                     u1140:
  2101  0189                     l1439:
  2102  0189  0870               	movf	___awmod@divisor,w
  2103  018A  02F2               	subwf	___awmod@dividend,f
  2104  018B  0871               	movf	___awmod@divisor+1,w
  2105  018C  1C03               	skipc
  2106  018D  03F3               	decf	___awmod@dividend+1,f
  2107  018E  02F3               	subwf	___awmod@dividend+1,f
  2108  018F                     l1441:
  2109  018F  3001               	movlw	1
  2110  0190                     u1155:
  2111  0190  1003               	clrc
  2112  0191  0CF1               	rrf	___awmod@divisor+1,f
  2113  0192  0CF0               	rrf	___awmod@divisor,f
  2114  0193  3EFF               	addlw	-1
  2115  0194  1D03               	skipz
  2116  0195  2990               	goto	u1155
  2117  0196                     l1443:
  2118  0196  3001               	movlw	1
  2119  0197  02F5               	subwf	___awmod@counter,f
  2120  0198  1D03               	btfss	3,2
  2121  0199  299B               	goto	u1161
  2122  019A  299C               	goto	u1160
  2123  019B                     u1161:
  2124  019B  297F               	goto	l1437
  2125  019C                     u1160:
  2126  019C                     l1445:
  2127  019C  0876               	movf	___awmod@sign,w
  2128  019D  1903               	btfsc	3,2
  2129  019E  29A0               	goto	u1171
  2130  019F  29A1               	goto	u1170
  2131  01A0                     u1171:
  2132  01A0  29A6               	goto	l1449
  2133  01A1                     u1170:
  2134  01A1                     l1447:
  2135  01A1  09F2               	comf	___awmod@dividend,f
  2136  01A2  09F3               	comf	___awmod@dividend+1,f
  2137  01A3  0AF2               	incf	___awmod@dividend,f
  2138  01A4  1903               	skipnz
  2139  01A5  0AF3               	incf	___awmod@dividend+1,f
  2140  01A6                     l1449:
  2141  01A6  0873               	movf	___awmod@dividend+1,w
  2142  01A7  00F1               	movwf	?___awmod+1
  2143  01A8  0872               	movf	___awmod@dividend,w
  2144  01A9  00F0               	movwf	?___awmod
  2145  01AA                     l421:
  2146  01AA  0008               	return
  2147  01AB                     __end_of___awmod:
  2148                           
  2149                           	psect	text5
  2150  020F                     __ptext5:	
  2151 ;; *************** function ___awdiv *****************
  2152 ;; Defined at:
  2153 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  divisor         2    0[COMMON] int 
  2156 ;;  dividend        2    2[COMMON] int 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  quotient        2    7[COMMON] int 
  2159 ;;  sign            1    6[COMMON] unsigned char 
  2160 ;;  counter         1    5[COMMON] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2    0[COMMON] int 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         4       0       0       0       0
  2171 ;;      Locals:         4       0       0       0       0
  2172 ;;      Temps:          1       0       0       0       0
  2173 ;;      Totals:         9       0       0       0       0
  2174 ;;Total ram usage:        9 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_show_multidigits
  2180 ;;		_tx_sn
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function ___awdiv
  2186  020F                     ___awdiv:
  2187  020F                     l1371:	
  2188                           ;incstack = 0
  2189                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2190                           
  2191  020F  01F6               	clrf	___awdiv@sign
  2192  0210                     l1373:
  2193  0210  1FF1               	btfss	___awdiv@divisor+1,7
  2194  0211  2A13               	goto	u991
  2195  0212  2A14               	goto	u990
  2196  0213                     u991:
  2197  0213  2A1B               	goto	l1379
  2198  0214                     u990:
  2199  0214                     l1375:
  2200  0214  09F0               	comf	___awdiv@divisor,f
  2201  0215  09F1               	comf	___awdiv@divisor+1,f
  2202  0216  0AF0               	incf	___awdiv@divisor,f
  2203  0217  1903               	skipnz
  2204  0218  0AF1               	incf	___awdiv@divisor+1,f
  2205  0219                     l1377:
  2206  0219  01F6               	clrf	___awdiv@sign
  2207  021A  0AF6               	incf	___awdiv@sign,f
  2208  021B                     l1379:
  2209  021B  1FF3               	btfss	___awdiv@dividend+1,7
  2210  021C  2A1E               	goto	u1001
  2211  021D  2A1F               	goto	u1000
  2212  021E                     u1001:
  2213  021E  2A28               	goto	l1385
  2214  021F                     u1000:
  2215  021F                     l1381:
  2216  021F  09F2               	comf	___awdiv@dividend,f
  2217  0220  09F3               	comf	___awdiv@dividend+1,f
  2218  0221  0AF2               	incf	___awdiv@dividend,f
  2219  0222  1903               	skipnz
  2220  0223  0AF3               	incf	___awdiv@dividend+1,f
  2221  0224                     l1383:
  2222  0224  3001               	movlw	1
  2223  0225  00F4               	movwf	??___awdiv
  2224  0226  0874               	movf	??___awdiv,w
  2225  0227  06F6               	xorwf	___awdiv@sign,f
  2226  0228                     l1385:
  2227  0228  01F7               	clrf	___awdiv@quotient
  2228  0229  01F8               	clrf	___awdiv@quotient+1
  2229  022A                     l1387:
  2230  022A  0870               	movf	___awdiv@divisor,w
  2231  022B  0471               	iorwf	___awdiv@divisor+1,w
  2232  022C  1903               	btfsc	3,2
  2233  022D  2A2F               	goto	u1011
  2234  022E  2A30               	goto	u1010
  2235  022F                     u1011:
  2236  022F  2A67               	goto	l1407
  2237  0230                     u1010:
  2238  0230                     l1389:
  2239  0230  01F5               	clrf	___awdiv@counter
  2240  0231  0AF5               	incf	___awdiv@counter,f
  2241  0232  2A3E               	goto	l1395
  2242  0233                     l1391:
  2243  0233  3001               	movlw	1
  2244  0234                     u1025:
  2245  0234  1003               	clrc
  2246  0235  0DF0               	rlf	___awdiv@divisor,f
  2247  0236  0DF1               	rlf	___awdiv@divisor+1,f
  2248  0237  3EFF               	addlw	-1
  2249  0238  1D03               	skipz
  2250  0239  2A34               	goto	u1025
  2251  023A                     l1393:
  2252  023A  3001               	movlw	1
  2253  023B  00F4               	movwf	??___awdiv
  2254  023C  0874               	movf	??___awdiv,w
  2255  023D  07F5               	addwf	___awdiv@counter,f
  2256  023E                     l1395:
  2257  023E  1FF1               	btfss	___awdiv@divisor+1,7
  2258  023F  2A41               	goto	u1031
  2259  0240  2A42               	goto	u1030
  2260  0241                     u1031:
  2261  0241  2A33               	goto	l1391
  2262  0242                     u1030:
  2263  0242                     l1397:
  2264  0242  3001               	movlw	1
  2265  0243                     u1045:
  2266  0243  1003               	clrc
  2267  0244  0DF7               	rlf	___awdiv@quotient,f
  2268  0245  0DF8               	rlf	___awdiv@quotient+1,f
  2269  0246  3EFF               	addlw	-1
  2270  0247  1D03               	skipz
  2271  0248  2A43               	goto	u1045
  2272  0249  0871               	movf	___awdiv@divisor+1,w
  2273  024A  0273               	subwf	___awdiv@dividend+1,w
  2274  024B  1D03               	skipz
  2275  024C  2A4F               	goto	u1055
  2276  024D  0870               	movf	___awdiv@divisor,w
  2277  024E  0272               	subwf	___awdiv@dividend,w
  2278  024F                     u1055:
  2279  024F  1C03               	skipc
  2280  0250  2A52               	goto	u1051
  2281  0251  2A53               	goto	u1050
  2282  0252                     u1051:
  2283  0252  2A5A               	goto	l1403
  2284  0253                     u1050:
  2285  0253                     l1399:
  2286  0253  0870               	movf	___awdiv@divisor,w
  2287  0254  02F2               	subwf	___awdiv@dividend,f
  2288  0255  0871               	movf	___awdiv@divisor+1,w
  2289  0256  1C03               	skipc
  2290  0257  03F3               	decf	___awdiv@dividend+1,f
  2291  0258  02F3               	subwf	___awdiv@dividend+1,f
  2292  0259                     l1401:
  2293  0259  1477               	bsf	___awdiv@quotient,0
  2294  025A                     l1403:
  2295  025A  3001               	movlw	1
  2296  025B                     u1065:
  2297  025B  1003               	clrc
  2298  025C  0CF1               	rrf	___awdiv@divisor+1,f
  2299  025D  0CF0               	rrf	___awdiv@divisor,f
  2300  025E  3EFF               	addlw	-1
  2301  025F  1D03               	skipz
  2302  0260  2A5B               	goto	u1065
  2303  0261                     l1405:
  2304  0261  3001               	movlw	1
  2305  0262  02F5               	subwf	___awdiv@counter,f
  2306  0263  1D03               	btfss	3,2
  2307  0264  2A66               	goto	u1071
  2308  0265  2A67               	goto	u1070
  2309  0266                     u1071:
  2310  0266  2A42               	goto	l1397
  2311  0267                     u1070:
  2312  0267                     l1407:
  2313  0267  0876               	movf	___awdiv@sign,w
  2314  0268  1903               	btfsc	3,2
  2315  0269  2A6B               	goto	u1081
  2316  026A  2A6C               	goto	u1080
  2317  026B                     u1081:
  2318  026B  2A71               	goto	l1411
  2319  026C                     u1080:
  2320  026C                     l1409:
  2321  026C  09F7               	comf	___awdiv@quotient,f
  2322  026D  09F8               	comf	___awdiv@quotient+1,f
  2323  026E  0AF7               	incf	___awdiv@quotient,f
  2324  026F  1903               	skipnz
  2325  0270  0AF8               	incf	___awdiv@quotient+1,f
  2326  0271                     l1411:
  2327  0271  0878               	movf	___awdiv@quotient+1,w
  2328  0272  00F1               	movwf	?___awdiv+1
  2329  0273  0877               	movf	___awdiv@quotient,w
  2330  0274  00F0               	movwf	?___awdiv
  2331  0275                     l408:
  2332  0275  0008               	return
  2333  0276                     __end_of___awdiv:
  2334                           
  2335                           	psect	text6
  2336  0F43                     __ptext6:	
  2337 ;; *************** function _ser_int *****************
  2338 ;; Defined at:
  2339 ;;		line 7 in file "./uart.h"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2353 ;;      Params:         0       0       0       0       0
  2354 ;;      Locals:         0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0
  2356 ;;      Totals:         0       0       0       0       0
  2357 ;;Total ram usage:        0 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function _ser_int
  2368  0F43                     _ser_int:
  2369  0F43                     l1589:	
  2370                           ;incstack = 0
  2371                           ; Regs used in _ser_int: [wreg]
  2372                           
  2373                           
  2374                           ;./uart.h: 9:  TXSTA= 0x20;
  2375  0F43  3020               	movlw	32
  2376  0F44  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0F45  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0F46  0098               	movwf	24	;volatile
  2379                           
  2380                           ;./uart.h: 10:  RCSTA= 0b10010000;
  2381  0F47  3090               	movlw	144
  2382  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0F4A  0098               	movwf	24	;volatile
  2385                           
  2386                           ;./uart.h: 11:  SPBRG=31;
  2387  0F4B  301F               	movlw	31
  2388  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  2390  0F4E  0099               	movwf	25	;volatile
  2391  0F4F                     l80:
  2392  0F4F  0008               	return
  2393  0F50                     __end_of_ser_int:
  2394                           
  2395                           	psect	text7
  2396  0086                     __ptext7:	
  2397 ;; *************** function _read_dht11 *****************
  2398 ;; Defined at:
  2399 ;;		line 39 in file "./dht11.h"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  for_count       1    3[COMMON] unsigned char 
  2404 ;;  data            1    2[COMMON] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      unsigned char 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         0       0       0       0       0
  2415 ;;      Locals:         2       0       0       0       0
  2416 ;;      Temps:          2       0       0       0       0
  2417 ;;      Totals:         4       0       0       0       0
  2418 ;;Total ram usage:        4 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _read_dht11
  2429  0086                     _read_dht11:
  2430  0086                     l1673:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _read_dht11: [wreg+status,2+status,0]
  2433                           
  2434                           
  2435                           ;./dht11.h: 41:     char data, for_count;;./dht11.h: 42:     for(for_count = 0; for_coun
      +                          t < 8; for_count++)
  2436  0086  01F3               	clrf	read_dht11@for_count
  2437  0087                     l131:
  2438  0087  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0088  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0089  1C08               	btfss	8,0	;volatile
  2441  008A  288C               	goto	u1471
  2442  008B  288D               	goto	u1470
  2443  008C                     u1471:
  2444  008C  2887               	goto	l131
  2445  008D                     u1470:
  2446  008D                     l1679:
  2447                           
  2448                           ;./dht11.h: 45:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  2449  008D  3031               	movlw	49
  2450  008E  00F0               	movwf	??_read_dht11
  2451  008F                     u1637:
  2452  008F  0BF0               	decfsz	??_read_dht11,f
  2453  0090  288F               	goto	u1637
  2454  0091  2892               	nop2
  2455  0092                     l1681:
  2456                           
  2457                           ;./dht11.h: 46:         if(PORTDbits.RD0 == 0)
  2458  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0094  1808               	btfsc	8,0	;volatile
  2461  0095  2897               	goto	u1481
  2462  0096  2898               	goto	u1480
  2463  0097                     u1481:
  2464  0097  28A9               	goto	l1685
  2465  0098                     u1480:
  2466  0098                     l1683:
  2467                           
  2468                           ;./dht11.h: 47:         {;./dht11.h: 48:             data&= ~(1<<(7 - for_count));
  2469  0098  3001               	movlw	1
  2470  0099  00F0               	movwf	??_read_dht11
  2471  009A  0873               	movf	read_dht11@for_count,w
  2472  009B  3C07               	sublw	7
  2473  009C  3E01               	addlw	1
  2474  009D  28A0               	goto	u1494
  2475  009E                     u1495:
  2476  009E  1003               	clrc
  2477  009F  0DF0               	rlf	??_read_dht11,f
  2478  00A0                     u1494:
  2479  00A0  3EFF               	addlw	-1
  2480  00A1  1D03               	skipz
  2481  00A2  289E               	goto	u1495
  2482  00A3  0870               	movf	??_read_dht11,w
  2483  00A4  3AFF               	xorlw	255
  2484  00A5  00F1               	movwf	??_read_dht11+1
  2485  00A6  0871               	movf	??_read_dht11+1,w
  2486  00A7  05F2               	andwf	read_dht11@data,f
  2487                           
  2488                           ;./dht11.h: 49:         }
  2489  00A8  28BC               	goto	l1687
  2490  00A9                     l1685:
  2491                           
  2492                           ;./dht11.h: 51:         {;./dht11.h: 52:             data|= (1 << (7 - for_count));
  2493  00A9  3001               	movlw	1
  2494  00AA  00F0               	movwf	??_read_dht11
  2495  00AB  0873               	movf	read_dht11@for_count,w
  2496  00AC  3C07               	sublw	7
  2497  00AD  3E01               	addlw	1
  2498  00AE  28B1               	goto	u1504
  2499  00AF                     u1505:
  2500  00AF  1003               	clrc
  2501  00B0  0DF0               	rlf	??_read_dht11,f
  2502  00B1                     u1504:
  2503  00B1  3EFF               	addlw	-1
  2504  00B2  1D03               	skipz
  2505  00B3  28AF               	goto	u1505
  2506  00B4  0870               	movf	??_read_dht11,w
  2507  00B5  00F1               	movwf	??_read_dht11+1
  2508  00B6  0871               	movf	??_read_dht11+1,w
  2509  00B7  04F2               	iorwf	read_dht11@data,f
  2510  00B8                     l136:	
  2511                           ;./dht11.h: 53:             while(PORTDbits.RD0);
  2512                           
  2513  00B8  1808               	btfsc	8,0	;volatile
  2514  00B9  28BB               	goto	u1511
  2515  00BA  28BC               	goto	u1510
  2516  00BB                     u1511:
  2517  00BB  28B8               	goto	l136
  2518  00BC                     u1510:
  2519  00BC                     l1687:
  2520                           
  2521                           ;./dht11.h: 55:     }
  2522  00BC  3001               	movlw	1
  2523  00BD  00F0               	movwf	??_read_dht11
  2524  00BE  0870               	movf	??_read_dht11,w
  2525  00BF  07F3               	addwf	read_dht11@for_count,f
  2526  00C0                     l1689:
  2527  00C0  3008               	movlw	8
  2528  00C1  0273               	subwf	read_dht11@for_count,w
  2529  00C2  1C03               	skipc
  2530  00C3  28C5               	goto	u1521
  2531  00C4  28C6               	goto	u1520
  2532  00C5                     u1521:
  2533  00C5  2887               	goto	l131
  2534  00C6                     u1520:
  2535  00C6                     l1691:
  2536                           
  2537                           ;./dht11.h: 56:     return data;
  2538  00C6  0872               	movf	read_dht11@data,w
  2539  00C7                     l139:
  2540  00C7  0008               	return
  2541  00C8                     __end_of_read_dht11:
  2542                           
  2543                           	psect	text8
  2544  0F79                     __ptext8:	
  2545 ;; *************** function _find_response *****************
  2546 ;; Defined at:
  2547 ;;		line 24 in file "./dht11.h"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0
  2563 ;;      Temps:          1       0       0       0       0
  2564 ;;      Totals:         1       0       0       0       0
  2565 ;;Total ram usage:        1 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function _find_response
  2576  0F79                     _find_response:
  2577  0F79                     l1659:	
  2578                           ;incstack = 0
  2579                           ; Regs used in _find_response: [wreg+status,2]
  2580                           
  2581                           
  2582                           ;./dht11.h: 26:     check_bit = 0;
  2583  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0F7B  01CF               	clrf	_check_bit
  2586  0F7C                     l1661:
  2587                           
  2588                           ;./dht11.h: 27:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  2589  0F7C  3042               	movlw	66
  2590  0F7D  00F0               	movwf	??_find_response
  2591  0F7E                     u1647:
  2592  0F7E  0BF0               	decfsz	??_find_response,f
  2593  0F7F  2F7E               	goto	u1647
  2594  0F80  0000               	nop
  2595  0F81                     l1663:
  2596                           
  2597                           ;./dht11.h: 28:     if (PORTDbits.RD0 == 0)
  2598  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0F83  1808               	btfsc	8,0	;volatile
  2601  0F84  2F86               	goto	u1451
  2602  0F85  2F87               	goto	u1450
  2603  0F86                     u1451:
  2604  0F86  2F97               	goto	l126
  2605  0F87                     u1450:
  2606  0F87                     l1665:
  2607                           
  2608                           ;./dht11.h: 29:     {;./dht11.h: 30:         _delay((unsigned long)((80)*(20000000/40000
      +                          00.0)));
  2609  0F87  3085               	movlw	133
  2610  0F88  00F0               	movwf	??_find_response
  2611  0F89                     u1657:
  2612  0F89  0BF0               	decfsz	??_find_response,f
  2613  0F8A  2F89               	goto	u1657
  2614  0F8B                     l1667:
  2615                           
  2616                           ;./dht11.h: 31:         if (PORTDbits.RD0 == 1)
  2617  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  2618  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  2619  0F8D  1C08               	btfss	8,0	;volatile
  2620  0F8E  2F90               	goto	u1461
  2621  0F8F  2F91               	goto	u1460
  2622  0F90                     u1461:
  2623  0F90  2F93               	goto	l1671
  2624  0F91                     u1460:
  2625  0F91                     l1669:
  2626                           
  2627                           ;./dht11.h: 32:         {;./dht11.h: 33:             check_bit = 1;
  2628  0F91  01CF               	clrf	_check_bit
  2629  0F92  0ACF               	incf	_check_bit,f
  2630  0F93                     l1671:
  2631                           
  2632                           ;./dht11.h: 35:         _delay((unsigned long)((50)*(20000000/4000000.0)));;
  2633  0F93  3053               	movlw	83
  2634  0F94  00F0               	movwf	??_find_response
  2635  0F95                     u1667:
  2636  0F95  0BF0               	decfsz	??_find_response,f
  2637  0F96  2F95               	goto	u1667
  2638  0F97                     l126:
  2639  0F97  0008               	return
  2640  0F98                     __end_of_find_response:
  2641                           
  2642                           	psect	text9
  2643  0F5F                     __ptext9:	
  2644 ;; *************** function _dht11_init *****************
  2645 ;; Defined at:
  2646 ;;		line 14 in file "./dht11.h"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0
  2662 ;;      Temps:          2       0       0       0       0
  2663 ;;      Totals:         2       0       0       0       0
  2664 ;;Total ram usage:        2 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _dht11_init
  2675  0F5F                     _dht11_init:
  2676  0F5F                     l1651:	
  2677                           ;incstack = 0
  2678                           ; Regs used in _dht11_init: [wreg]
  2679                           
  2680                           
  2681                           ;./dht11.h: 16:     TRISDbits.TRISD0= 0;
  2682  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  2683  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  2684  0F61  1008               	bcf	8,0	;volatile
  2685                           
  2686                           ;./dht11.h: 17:     PORTDbits.RD0 = 0;
  2687  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0F64  1008               	bcf	8,0	;volatile
  2690  0F65                     l1653:
  2691                           
  2692                           ;./dht11.h: 18:     _delay((unsigned long)((18)*(20000000/4000.0)));
  2693  0F65  3075               	movlw	117
  2694  0F66  00F1               	movwf	??_dht11_init+1
  2695  0F67  30E1               	movlw	225
  2696  0F68  00F0               	movwf	??_dht11_init
  2697  0F69                     u1677:
  2698  0F69  0BF0               	decfsz	??_dht11_init,f
  2699  0F6A  2F69               	goto	u1677
  2700  0F6B  0BF1               	decfsz	??_dht11_init+1,f
  2701  0F6C  2F69               	goto	u1677
  2702  0F6D                     l1655:
  2703                           
  2704                           ;./dht11.h: 19:     PORTDbits.RD0 = 1;
  2705  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0F6F  1408               	bsf	8,0	;volatile
  2708                           
  2709                           ;./dht11.h: 20:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  2710  0F70  3031               	movlw	49
  2711  0F71  00F0               	movwf	??_dht11_init
  2712  0F72                     u1687:
  2713  0F72  0BF0               	decfsz	??_dht11_init,f
  2714  0F73  2F72               	goto	u1687
  2715  0F74  2F75               	nop2
  2716  0F75                     l1657:
  2717                           
  2718                           ;./dht11.h: 21:     TRISDbits.TRISD0 = 1;
  2719  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  2720  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  2721  0F77  1408               	bsf	8,0	;volatile
  2722  0F78                     l121:
  2723  0F78  0008               	return
  2724  0F79                     __end_of_dht11_init:
  2725                           
  2726                           	psect	text10
  2727  0313                     __ptext10:	
  2728 ;; *************** function _LCD_num *****************
  2729 ;; Defined at:
  2730 ;;		line 51 in file "./lcd4bit.h"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  val             4   14[BANK0 ] long 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  remainder       2   28[BANK0 ] unsigned int 
  2735 ;;  result1         2   26[BANK0 ] unsigned int 
  2736 ;;  result          2   24[BANK0 ] unsigned int 
  2737 ;;  digit3          2   22[BANK0 ] unsigned int 
  2738 ;;  digit2          2   20[BANK0 ] unsigned int 
  2739 ;;  digit1          2   18[BANK0 ] unsigned int 
  2740 ;;  calb_val        2    0        int 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       4       0       0       0
  2751 ;;      Locals:         0      12       0       0       0
  2752 ;;      Temps:          0       0       0       0       0
  2753 ;;      Totals:         0      16       0       0       0
  2754 ;;Total ram usage:       16 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 1
  2757 ;; This function calls:
  2758 ;;		_LCD_Char
  2759 ;;		___aldiv
  2760 ;;		___lmul
  2761 ;;		___lwdiv
  2762 ;;		___lwmod
  2763 ;;		_intdigits_chardigits
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function _LCD_num
  2771  0313                     _LCD_num:
  2772  0313                     l1505:	
  2773                           ;incstack = 0
  2774                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  2775                           
  2776  0313                     l1507:
  2777                           
  2778                           ;./lcd4bit.h: 54:     unsigned int remainder, digit1, digit2, digit3, result,;./lcd4bit.
      +                          h: 55:     result1;;./lcd4bit.h: 56:     result = ((val*100)/calb_val);
  2779  0313  3000               	movlw	0
  2780  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0316  00A3               	movwf	___aldiv@divisor+3
  2783  0317  3000               	movlw	0
  2784  0318  00A2               	movwf	___aldiv@divisor+2
  2785  0319  3000               	movlw	0
  2786  031A  00A1               	movwf	___aldiv@divisor+1
  2787  031B  30C8               	movlw	200
  2788  031C  00A0               	movwf	___aldiv@divisor
  2789  031D  0831               	movf	LCD_num@val+3,w
  2790  031E  00F3               	movwf	___lmul@multiplier+3
  2791  031F  0830               	movf	LCD_num@val+2,w
  2792  0320  00F2               	movwf	___lmul@multiplier+2
  2793  0321  082F               	movf	LCD_num@val+1,w
  2794  0322  00F1               	movwf	___lmul@multiplier+1
  2795  0323  082E               	movf	LCD_num@val,w
  2796  0324  00F0               	movwf	___lmul@multiplier
  2797  0325  3000               	movlw	0
  2798  0326  00F7               	movwf	___lmul@multiplicand+3
  2799  0327  3000               	movlw	0
  2800  0328  00F6               	movwf	___lmul@multiplicand+2
  2801  0329  3000               	movlw	0
  2802  032A  00F5               	movwf	___lmul@multiplicand+1
  2803  032B  3064               	movlw	100
  2804  032C  00F4               	movwf	___lmul@multiplicand
  2805  032D  120A  118A  210C  120A  118A  	fcall	___lmul
  2806  0332  0873               	movf	?___lmul+3,w
  2807  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0335  00A7               	movwf	___aldiv@dividend+3
  2810  0336  0872               	movf	?___lmul+2,w
  2811  0337  00A6               	movwf	___aldiv@dividend+2
  2812  0338  0871               	movf	?___lmul+1,w
  2813  0339  00A5               	movwf	___aldiv@dividend+1
  2814  033A  0870               	movf	?___lmul,w
  2815  033B  00A4               	movwf	___aldiv@dividend
  2816  033C  120A  118A  2276  120A  118A  	fcall	___aldiv
  2817  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2818  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2819  0343  0821               	movf	?___aldiv+1,w
  2820  0344  00B9               	movwf	LCD_num@result+1
  2821  0345  0820               	movf	?___aldiv,w
  2822  0346  00B8               	movwf	LCD_num@result
  2823  0347                     l1509:
  2824                           
  2825                           ;./lcd4bit.h: 57:     remainder = result% 10;
  2826  0347  300A               	movlw	10
  2827  0348  00F0               	movwf	___lwmod@divisor
  2828  0349  3000               	movlw	0
  2829  034A  00F1               	movwf	___lwmod@divisor+1
  2830  034B  0839               	movf	LCD_num@result+1,w
  2831  034C  00F3               	movwf	___lwmod@dividend+1
  2832  034D  0838               	movf	LCD_num@result,w
  2833  034E  00F2               	movwf	___lwmod@dividend
  2834  034F  120A  158A  27C6  120A  118A  	fcall	___lwmod
  2835  0354  0871               	movf	?___lwmod+1,w
  2836  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0357  00BD               	movwf	LCD_num@remainder+1
  2839  0358  0870               	movf	?___lwmod,w
  2840  0359  00BC               	movwf	LCD_num@remainder
  2841  035A                     l1511:
  2842                           
  2843                           ;./lcd4bit.h: 58:     result1 = result /10;
  2844  035A  300A               	movlw	10
  2845  035B  00F0               	movwf	___lwdiv@divisor
  2846  035C  3000               	movlw	0
  2847  035D  00F1               	movwf	___lwdiv@divisor+1
  2848  035E  0839               	movf	LCD_num@result+1,w
  2849  035F  00F3               	movwf	___lwdiv@dividend+1
  2850  0360  0838               	movf	LCD_num@result,w
  2851  0361  00F2               	movwf	___lwdiv@dividend
  2852  0362  120A  118A  20C8  120A  118A  	fcall	___lwdiv
  2853  0367  0871               	movf	?___lwdiv+1,w
  2854  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2855  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2856  036A  00BB               	movwf	LCD_num@result1+1
  2857  036B  0870               	movf	?___lwdiv,w
  2858  036C  00BA               	movwf	LCD_num@result1
  2859  036D                     l1513:
  2860                           
  2861                           ;./lcd4bit.h: 59:     digit1 = remainder;
  2862  036D  083D               	movf	LCD_num@remainder+1,w
  2863  036E  00B3               	movwf	LCD_num@digit1+1
  2864  036F  083C               	movf	LCD_num@remainder,w
  2865  0370  00B2               	movwf	LCD_num@digit1
  2866                           
  2867                           ;./lcd4bit.h: 60:     remainder = result1%10;
  2868  0371  300A               	movlw	10
  2869  0372  00F0               	movwf	___lwmod@divisor
  2870  0373  3000               	movlw	0
  2871  0374  00F1               	movwf	___lwmod@divisor+1
  2872  0375  083B               	movf	LCD_num@result1+1,w
  2873  0376  00F3               	movwf	___lwmod@dividend+1
  2874  0377  083A               	movf	LCD_num@result1,w
  2875  0378  00F2               	movwf	___lwmod@dividend
  2876  0379  120A  158A  27C6  120A  118A  	fcall	___lwmod
  2877  037E  0871               	movf	?___lwmod+1,w
  2878  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0381  00BD               	movwf	LCD_num@remainder+1
  2881  0382  0870               	movf	?___lwmod,w
  2882  0383  00BC               	movwf	LCD_num@remainder
  2883  0384                     l1515:
  2884                           
  2885                           ;./lcd4bit.h: 61:     digit2 = remainder;
  2886  0384  083D               	movf	LCD_num@remainder+1,w
  2887  0385  00B5               	movwf	LCD_num@digit2+1
  2888  0386  083C               	movf	LCD_num@remainder,w
  2889  0387  00B4               	movwf	LCD_num@digit2
  2890  0388                     l1517:
  2891                           
  2892                           ;./lcd4bit.h: 62:     remainder = (result1/10);
  2893  0388  300A               	movlw	10
  2894  0389  00F0               	movwf	___lwdiv@divisor
  2895  038A  3000               	movlw	0
  2896  038B  00F1               	movwf	___lwdiv@divisor+1
  2897  038C  083B               	movf	LCD_num@result1+1,w
  2898  038D  00F3               	movwf	___lwdiv@dividend+1
  2899  038E  083A               	movf	LCD_num@result1,w
  2900  038F  00F2               	movwf	___lwdiv@dividend
  2901  0390  120A  118A  20C8  120A  118A  	fcall	___lwdiv
  2902  0395  0871               	movf	?___lwdiv+1,w
  2903  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0398  00BD               	movwf	LCD_num@remainder+1
  2906  0399  0870               	movf	?___lwdiv,w
  2907  039A  00BC               	movwf	LCD_num@remainder
  2908                           
  2909                           ;./lcd4bit.h: 63:     digit3=remainder;
  2910  039B  083D               	movf	LCD_num@remainder+1,w
  2911  039C  00B7               	movwf	LCD_num@digit3+1
  2912  039D  083C               	movf	LCD_num@remainder,w
  2913  039E  00B6               	movwf	LCD_num@digit3
  2914  039F                     l1519:
  2915                           
  2916                           ;./lcd4bit.h: 64:     LCD_Char(digit3+0x30);
  2917  039F  0836               	movf	LCD_num@digit3,w
  2918  03A0  3E30               	addlw	48
  2919  03A1  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  2920  03A6                     l1521:
  2921                           
  2922                           ;./lcd4bit.h: 65:     LCD_Char('.');
  2923  03A6  302E               	movlw	46
  2924  03A7  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  2925  03AC                     l1523:
  2926                           
  2927                           ;./lcd4bit.h: 66:     LCD_Char(digit2+0x30);
  2928  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2929  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2930  03AE  0834               	movf	LCD_num@digit2,w
  2931  03AF  3E30               	addlw	48
  2932  03B0  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  2933  03B5                     l1525:
  2934                           
  2935                           ;./lcd4bit.h: 67:     LCD_Char(digit1+0x30);
  2936  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2937  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2938  03B7  0832               	movf	LCD_num@digit1,w
  2939  03B8  3E30               	addlw	48
  2940  03B9  120A  118A  2046  120A  118A  	fcall	_LCD_Char
  2941  03BE                     l1527:
  2942                           
  2943                           ;./lcd4bit.h: 69:     intdigits_chardigits(digit3,digit2,digit1);
  2944  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2945  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2946  03C0  0837               	movf	LCD_num@digit3+1,w
  2947  03C1  00F1               	movwf	intdigits_chardigits@a+1
  2948  03C2  0836               	movf	LCD_num@digit3,w
  2949  03C3  00F0               	movwf	intdigits_chardigits@a
  2950  03C4  0835               	movf	LCD_num@digit2+1,w
  2951  03C5  00F3               	movwf	intdigits_chardigits@b+1
  2952  03C6  0834               	movf	LCD_num@digit2,w
  2953  03C7  00F2               	movwf	intdigits_chardigits@b
  2954  03C8  0833               	movf	LCD_num@digit1+1,w
  2955  03C9  00F5               	movwf	intdigits_chardigits@c+1
  2956  03CA  0832               	movf	LCD_num@digit1,w
  2957  03CB  00F4               	movwf	intdigits_chardigits@c
  2958  03CC  120A  158A  2750  120A  118A  	fcall	_intdigits_chardigits
  2959  03D1                     l58:
  2960  03D1  0008               	return
  2961  03D2                     __end_of_LCD_num:
  2962                           
  2963                           	psect	text11
  2964  0F50                     __ptext11:	
  2965 ;; *************** function _intdigits_chardigits *****************
  2966 ;; Defined at:
  2967 ;;		line 79 in file "./lcd4bit.h"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  a               2    0[COMMON] unsigned int 
  2970 ;;  b               2    2[COMMON] unsigned int 
  2971 ;;  c               2    4[COMMON] unsigned int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      unsigned char 
  2976 ;; Registers used:
  2977 ;;		wreg
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         6       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0
  2985 ;;      Temps:          1       0       0       0       0
  2986 ;;      Totals:         7       0       0       0       0
  2987 ;;Total ram usage:        7 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_LCD_num
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _intdigits_chardigits
  2998  0F50                     _intdigits_chardigits:
  2999  0F50                     l1313:	
  3000                           ;incstack = 0
  3001                           ; Regs used in _intdigits_chardigits: [wreg]
  3002                           
  3003                           
  3004                           ;./lcd4bit.h: 79: unsigned char intdigits_chardigits(unsigned int a, unsigned int b, uns
      +                          igned int c);./lcd4bit.h: 80: {;./lcd4bit.h: 81:     avv[0] = (unsigned char)a;
  3005  0F50  0870               	movf	intdigits_chardigits@a,w
  3006  0F51  00F6               	movwf	??_intdigits_chardigits
  3007  0F52  0876               	movf	??_intdigits_chardigits,w
  3008  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0F55  00CB               	movwf	_avv
  3011                           
  3012                           ;./lcd4bit.h: 82:     avv[1] = (unsigned char)b;
  3013  0F56  0872               	movf	intdigits_chardigits@b,w
  3014  0F57  00F6               	movwf	??_intdigits_chardigits
  3015  0F58  0876               	movf	??_intdigits_chardigits,w
  3016  0F59  00CC               	movwf	_avv+1
  3017                           
  3018                           ;./lcd4bit.h: 83:     avv[2] = (unsigned char)c;
  3019  0F5A  0874               	movf	intdigits_chardigits@c,w
  3020  0F5B  00F6               	movwf	??_intdigits_chardigits
  3021  0F5C  0876               	movf	??_intdigits_chardigits,w
  3022  0F5D  00CD               	movwf	_avv+2
  3023  0F5E                     l67:
  3024  0F5E  0008               	return
  3025  0F5F                     __end_of_intdigits_chardigits:
  3026                           
  3027                           	psect	text12
  3028  0FC6                     __ptext12:	
  3029 ;; *************** function ___lwmod *****************
  3030 ;; Defined at:
  3031 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  divisor         2    0[COMMON] unsigned int 
  3034 ;;  dividend        2    2[COMMON] unsigned int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  counter         1    5[COMMON] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2    0[COMMON] unsigned int 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         4       0       0       0       0
  3047 ;;      Locals:         1       0       0       0       0
  3048 ;;      Temps:          1       0       0       0       0
  3049 ;;      Totals:         6       0       0       0       0
  3050 ;;Total ram usage:        6 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_LCD_num
  3056 ;;		_show_multidigits
  3057 ;;		_tx_sn
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function ___lwmod
  3063  0FC6                     ___lwmod:
  3064  0FC6                     l1479:	
  3065                           ;incstack = 0
  3066                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3067                           
  3068  0FC6  0870               	movf	___lwmod@divisor,w
  3069  0FC7  0471               	iorwf	___lwmod@divisor+1,w
  3070  0FC8  1903               	btfsc	3,2
  3071  0FC9  2FCB               	goto	u1251
  3072  0FCA  2FCC               	goto	u1250
  3073  0FCB                     u1251:
  3074  0FCB  2FFB               	goto	l1497
  3075  0FCC                     u1250:
  3076  0FCC                     l1481:
  3077  0FCC  01F5               	clrf	___lwmod@counter
  3078  0FCD  0AF5               	incf	___lwmod@counter,f
  3079  0FCE  2FDA               	goto	l1487
  3080  0FCF                     l1483:
  3081  0FCF  3001               	movlw	1
  3082  0FD0                     u1265:
  3083  0FD0  1003               	clrc
  3084  0FD1  0DF0               	rlf	___lwmod@divisor,f
  3085  0FD2  0DF1               	rlf	___lwmod@divisor+1,f
  3086  0FD3  3EFF               	addlw	-1
  3087  0FD4  1D03               	skipz
  3088  0FD5  2FD0               	goto	u1265
  3089  0FD6                     l1485:
  3090  0FD6  3001               	movlw	1
  3091  0FD7  00F4               	movwf	??___lwmod
  3092  0FD8  0874               	movf	??___lwmod,w
  3093  0FD9  07F5               	addwf	___lwmod@counter,f
  3094  0FDA                     l1487:
  3095  0FDA  1FF1               	btfss	___lwmod@divisor+1,7
  3096  0FDB  2FDD               	goto	u1271
  3097  0FDC  2FDE               	goto	u1270
  3098  0FDD                     u1271:
  3099  0FDD  2FCF               	goto	l1483
  3100  0FDE                     u1270:
  3101  0FDE                     l1489:
  3102  0FDE  0871               	movf	___lwmod@divisor+1,w
  3103  0FDF  0273               	subwf	___lwmod@dividend+1,w
  3104  0FE0  1D03               	skipz
  3105  0FE1  2FE4               	goto	u1285
  3106  0FE2  0870               	movf	___lwmod@divisor,w
  3107  0FE3  0272               	subwf	___lwmod@dividend,w
  3108  0FE4                     u1285:
  3109  0FE4  1C03               	skipc
  3110  0FE5  2FE7               	goto	u1281
  3111  0FE6  2FE8               	goto	u1280
  3112  0FE7                     u1281:
  3113  0FE7  2FEE               	goto	l1493
  3114  0FE8                     u1280:
  3115  0FE8                     l1491:
  3116  0FE8  0870               	movf	___lwmod@divisor,w
  3117  0FE9  02F2               	subwf	___lwmod@dividend,f
  3118  0FEA  0871               	movf	___lwmod@divisor+1,w
  3119  0FEB  1C03               	skipc
  3120  0FEC  03F3               	decf	___lwmod@dividend+1,f
  3121  0FED  02F3               	subwf	___lwmod@dividend+1,f
  3122  0FEE                     l1493:
  3123  0FEE  3001               	movlw	1
  3124  0FEF                     u1295:
  3125  0FEF  1003               	clrc
  3126  0FF0  0CF1               	rrf	___lwmod@divisor+1,f
  3127  0FF1  0CF0               	rrf	___lwmod@divisor,f
  3128  0FF2  3EFF               	addlw	-1
  3129  0FF3  1D03               	skipz
  3130  0FF4  2FEF               	goto	u1295
  3131  0FF5                     l1495:
  3132  0FF5  3001               	movlw	1
  3133  0FF6  02F5               	subwf	___lwmod@counter,f
  3134  0FF7  1D03               	btfss	3,2
  3135  0FF8  2FFA               	goto	u1301
  3136  0FF9  2FFB               	goto	u1300
  3137  0FFA                     u1301:
  3138  0FFA  2FDE               	goto	l1489
  3139  0FFB                     u1300:
  3140  0FFB                     l1497:
  3141  0FFB  0873               	movf	___lwmod@dividend+1,w
  3142  0FFC  00F1               	movwf	?___lwmod+1
  3143  0FFD  0872               	movf	___lwmod@dividend,w
  3144  0FFE  00F0               	movwf	?___lwmod
  3145  0FFF                     l537:
  3146  0FFF  0008               	return
  3147  1000                     __end_of___lwmod:
  3148                           
  3149                           	psect	text13
  3150  00C8                     __ptext13:	
  3151 ;; *************** function ___lwdiv *****************
  3152 ;; Defined at:
  3153 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  divisor         2    0[COMMON] unsigned int 
  3156 ;;  dividend        2    2[COMMON] unsigned int 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  quotient        2    5[COMMON] unsigned int 
  3159 ;;  counter         1    7[COMMON] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2    0[COMMON] unsigned int 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         4       0       0       0       0
  3170 ;;      Locals:         3       0       0       0       0
  3171 ;;      Temps:          1       0       0       0       0
  3172 ;;      Totals:         8       0       0       0       0
  3173 ;;Total ram usage:        8 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_LCD_num
  3179 ;;		_show_multidigits
  3180 ;;		_tx_sn
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function ___lwdiv
  3186  00C8                     ___lwdiv:
  3187  00C8                     l1453:	
  3188                           ;incstack = 0
  3189                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3190                           
  3191  00C8  01F5               	clrf	___lwdiv@quotient
  3192  00C9  01F6               	clrf	___lwdiv@quotient+1
  3193  00CA                     l1455:
  3194  00CA  0870               	movf	___lwdiv@divisor,w
  3195  00CB  0471               	iorwf	___lwdiv@divisor+1,w
  3196  00CC  1903               	btfsc	3,2
  3197  00CD  28CF               	goto	u1181
  3198  00CE  28D0               	goto	u1180
  3199  00CF                     u1181:
  3200  00CF  2907               	goto	l1475
  3201  00D0                     u1180:
  3202  00D0                     l1457:
  3203  00D0  01F7               	clrf	___lwdiv@counter
  3204  00D1  0AF7               	incf	___lwdiv@counter,f
  3205  00D2  28DE               	goto	l1463
  3206  00D3                     l1459:
  3207  00D3  3001               	movlw	1
  3208  00D4                     u1195:
  3209  00D4  1003               	clrc
  3210  00D5  0DF0               	rlf	___lwdiv@divisor,f
  3211  00D6  0DF1               	rlf	___lwdiv@divisor+1,f
  3212  00D7  3EFF               	addlw	-1
  3213  00D8  1D03               	skipz
  3214  00D9  28D4               	goto	u1195
  3215  00DA                     l1461:
  3216  00DA  3001               	movlw	1
  3217  00DB  00F4               	movwf	??___lwdiv
  3218  00DC  0874               	movf	??___lwdiv,w
  3219  00DD  07F7               	addwf	___lwdiv@counter,f
  3220  00DE                     l1463:
  3221  00DE  1FF1               	btfss	___lwdiv@divisor+1,7
  3222  00DF  28E1               	goto	u1201
  3223  00E0  28E2               	goto	u1200
  3224  00E1                     u1201:
  3225  00E1  28D3               	goto	l1459
  3226  00E2                     u1200:
  3227  00E2                     l1465:
  3228  00E2  3001               	movlw	1
  3229  00E3                     u1215:
  3230  00E3  1003               	clrc
  3231  00E4  0DF5               	rlf	___lwdiv@quotient,f
  3232  00E5  0DF6               	rlf	___lwdiv@quotient+1,f
  3233  00E6  3EFF               	addlw	-1
  3234  00E7  1D03               	skipz
  3235  00E8  28E3               	goto	u1215
  3236  00E9  0871               	movf	___lwdiv@divisor+1,w
  3237  00EA  0273               	subwf	___lwdiv@dividend+1,w
  3238  00EB  1D03               	skipz
  3239  00EC  28EF               	goto	u1225
  3240  00ED  0870               	movf	___lwdiv@divisor,w
  3241  00EE  0272               	subwf	___lwdiv@dividend,w
  3242  00EF                     u1225:
  3243  00EF  1C03               	skipc
  3244  00F0  28F2               	goto	u1221
  3245  00F1  28F3               	goto	u1220
  3246  00F2                     u1221:
  3247  00F2  28FA               	goto	l1471
  3248  00F3                     u1220:
  3249  00F3                     l1467:
  3250  00F3  0870               	movf	___lwdiv@divisor,w
  3251  00F4  02F2               	subwf	___lwdiv@dividend,f
  3252  00F5  0871               	movf	___lwdiv@divisor+1,w
  3253  00F6  1C03               	skipc
  3254  00F7  03F3               	decf	___lwdiv@dividend+1,f
  3255  00F8  02F3               	subwf	___lwdiv@dividend+1,f
  3256  00F9                     l1469:
  3257  00F9  1475               	bsf	___lwdiv@quotient,0
  3258  00FA                     l1471:
  3259  00FA  3001               	movlw	1
  3260  00FB                     u1235:
  3261  00FB  1003               	clrc
  3262  00FC  0CF1               	rrf	___lwdiv@divisor+1,f
  3263  00FD  0CF0               	rrf	___lwdiv@divisor,f
  3264  00FE  3EFF               	addlw	-1
  3265  00FF  1D03               	skipz
  3266  0100  28FB               	goto	u1235
  3267  0101                     l1473:
  3268  0101  3001               	movlw	1
  3269  0102  02F7               	subwf	___lwdiv@counter,f
  3270  0103  1D03               	btfss	3,2
  3271  0104  2906               	goto	u1241
  3272  0105  2907               	goto	u1240
  3273  0106                     u1241:
  3274  0106  28E2               	goto	l1465
  3275  0107                     u1240:
  3276  0107                     l1475:
  3277  0107  0876               	movf	___lwdiv@quotient+1,w
  3278  0108  00F1               	movwf	?___lwdiv+1
  3279  0109  0875               	movf	___lwdiv@quotient,w
  3280  010A  00F0               	movwf	?___lwdiv
  3281  010B                     l527:
  3282  010B  0008               	return
  3283  010C                     __end_of___lwdiv:
  3284                           
  3285                           	psect	text14
  3286  010C                     __ptext14:	
  3287 ;; *************** function ___lmul *****************
  3288 ;; Defined at:
  3289 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  multiplier      4    0[COMMON] unsigned long 
  3292 ;;  multiplicand    4    4[COMMON] unsigned long 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  product         4    9[COMMON] unsigned long 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  4    0[COMMON] unsigned long 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         8       0       0       0       0
  3305 ;;      Locals:         4       0       0       0       0
  3306 ;;      Temps:          1       0       0       0       0
  3307 ;;      Totals:        13       0       0       0       0
  3308 ;;Total ram usage:       13 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_LCD_num
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function ___lmul
  3319  010C                     ___lmul:
  3320  010C                     l1317:	
  3321                           ;incstack = 0
  3322                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3323                           
  3324  010C  3000               	movlw	0
  3325  010D  00FC               	movwf	___lmul@product+3
  3326  010E  3000               	movlw	0
  3327  010F  00FB               	movwf	___lmul@product+2
  3328  0110  3000               	movlw	0
  3329  0111  00FA               	movwf	___lmul@product+1
  3330  0112  3000               	movlw	0
  3331  0113  00F9               	movwf	___lmul@product
  3332  0114                     l1319:
  3333  0114  1C70               	btfss	___lmul@multiplier,0
  3334  0115  2917               	goto	u841
  3335  0116  2918               	goto	u840
  3336  0117                     u841:
  3337  0117  292F               	goto	l1323
  3338  0118                     u840:
  3339  0118                     l1321:
  3340  0118  0874               	movf	___lmul@multiplicand,w
  3341  0119  07F9               	addwf	___lmul@product,f
  3342  011A  0875               	movf	___lmul@multiplicand+1,w
  3343  011B  1103               	clrz
  3344  011C  1803               	skipnc
  3345  011D  3E01               	addlw	1
  3346  011E  1903               	skipnz
  3347  011F  2921               	goto	u851
  3348  0120  07FA               	addwf	___lmul@product+1,f
  3349  0121                     u851:
  3350  0121  0876               	movf	___lmul@multiplicand+2,w
  3351  0122  1103               	clrz
  3352  0123  1803               	skipnc
  3353  0124  3E01               	addlw	1
  3354  0125  1903               	skipnz
  3355  0126  2928               	goto	u852
  3356  0127  07FB               	addwf	___lmul@product+2,f
  3357  0128                     u852:
  3358  0128  0877               	movf	___lmul@multiplicand+3,w
  3359  0129  1103               	clrz
  3360  012A  1803               	skipnc
  3361  012B  3E01               	addlw	1
  3362  012C  1903               	skipnz
  3363  012D  292F               	goto	u853
  3364  012E  07FC               	addwf	___lmul@product+3,f
  3365  012F                     u853:
  3366  012F                     l1323:
  3367  012F  3001               	movlw	1
  3368  0130  00F8               	movwf	??___lmul
  3369  0131                     u865:
  3370  0131  1003               	clrc
  3371  0132  0DF4               	rlf	___lmul@multiplicand,f
  3372  0133  0DF5               	rlf	___lmul@multiplicand+1,f
  3373  0134  0DF6               	rlf	___lmul@multiplicand+2,f
  3374  0135  0DF7               	rlf	___lmul@multiplicand+3,f
  3375  0136  0BF8               	decfsz	??___lmul,f
  3376  0137  2931               	goto	u865
  3377  0138                     l1325:
  3378  0138  3001               	movlw	1
  3379  0139                     u875:
  3380  0139  1003               	clrc
  3381  013A  0CF3               	rrf	___lmul@multiplier+3,f
  3382  013B  0CF2               	rrf	___lmul@multiplier+2,f
  3383  013C  0CF1               	rrf	___lmul@multiplier+1,f
  3384  013D  0CF0               	rrf	___lmul@multiplier,f
  3385  013E  3EFF               	addlw	-1
  3386  013F  1D03               	skipz
  3387  0140  2939               	goto	u875
  3388  0141  0873               	movf	___lmul@multiplier+3,w
  3389  0142  0472               	iorwf	___lmul@multiplier+2,w
  3390  0143  0471               	iorwf	___lmul@multiplier+1,w
  3391  0144  0470               	iorwf	___lmul@multiplier,w
  3392  0145  1D03               	skipz
  3393  0146  2948               	goto	u881
  3394  0147  2949               	goto	u880
  3395  0148                     u881:
  3396  0148  2914               	goto	l1319
  3397  0149                     u880:
  3398  0149                     l1327:
  3399  0149  087C               	movf	___lmul@product+3,w
  3400  014A  00F3               	movwf	?___lmul+3
  3401  014B  087B               	movf	___lmul@product+2,w
  3402  014C  00F2               	movwf	?___lmul+2
  3403  014D  087A               	movf	___lmul@product+1,w
  3404  014E  00F1               	movwf	?___lmul+1
  3405  014F  0879               	movf	___lmul@product,w
  3406  0150  00F0               	movwf	?___lmul
  3407  0151                     l269:
  3408  0151  0008               	return
  3409  0152                     __end_of___lmul:
  3410                           
  3411                           	psect	text15
  3412  0276                     __ptext15:	
  3413 ;; *************** function ___aldiv *****************
  3414 ;; Defined at:
  3415 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  divisor         4    0[BANK0 ] long 
  3418 ;;  dividend        4    4[BANK0 ] long 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  quotient        4   10[BANK0 ] long 
  3421 ;;  sign            1    9[BANK0 ] unsigned char 
  3422 ;;  counter         1    8[BANK0 ] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  4    0[BANK0 ] long 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3432 ;;      Params:         0       8       0       0       0
  3433 ;;      Locals:         0       6       0       0       0
  3434 ;;      Temps:          1       0       0       0       0
  3435 ;;      Totals:         1      14       0       0       0
  3436 ;;Total ram usage:       15 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_LCD_num
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function ___aldiv
  3447  0276                     ___aldiv:
  3448  0276                     l1331:	
  3449                           ;incstack = 0
  3450                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3451                           
  3452  0276  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0277  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0278  01A9               	clrf	___aldiv@sign
  3455  0279                     l1333:
  3456  0279  1FA3               	btfss	___aldiv@divisor+3,7
  3457  027A  2A7C               	goto	u891
  3458  027B  2A7D               	goto	u890
  3459  027C                     u891:
  3460  027C  2A8A               	goto	l320
  3461  027D                     u890:
  3462  027D                     l1335:
  3463  027D  09A0               	comf	___aldiv@divisor,f
  3464  027E  09A1               	comf	___aldiv@divisor+1,f
  3465  027F  09A2               	comf	___aldiv@divisor+2,f
  3466  0280  09A3               	comf	___aldiv@divisor+3,f
  3467  0281  0AA0               	incf	___aldiv@divisor,f
  3468  0282  1903               	skipnz
  3469  0283  0AA1               	incf	___aldiv@divisor+1,f
  3470  0284  1903               	skipnz
  3471  0285  0AA2               	incf	___aldiv@divisor+2,f
  3472  0286  1903               	skipnz
  3473  0287  0AA3               	incf	___aldiv@divisor+3,f
  3474  0288  01A9               	clrf	___aldiv@sign
  3475  0289  0AA9               	incf	___aldiv@sign,f
  3476  028A                     l320:
  3477  028A  1FA7               	btfss	___aldiv@dividend+3,7
  3478  028B  2A8D               	goto	u901
  3479  028C  2A8E               	goto	u900
  3480  028D                     u901:
  3481  028D  2A9D               	goto	l1341
  3482  028E                     u900:
  3483  028E                     l1337:
  3484  028E  09A4               	comf	___aldiv@dividend,f
  3485  028F  09A5               	comf	___aldiv@dividend+1,f
  3486  0290  09A6               	comf	___aldiv@dividend+2,f
  3487  0291  09A7               	comf	___aldiv@dividend+3,f
  3488  0292  0AA4               	incf	___aldiv@dividend,f
  3489  0293  1903               	skipnz
  3490  0294  0AA5               	incf	___aldiv@dividend+1,f
  3491  0295  1903               	skipnz
  3492  0296  0AA6               	incf	___aldiv@dividend+2,f
  3493  0297  1903               	skipnz
  3494  0298  0AA7               	incf	___aldiv@dividend+3,f
  3495  0299                     l1339:
  3496  0299  3001               	movlw	1
  3497  029A  00FD               	movwf	??___aldiv
  3498  029B  087D               	movf	??___aldiv,w
  3499  029C  06A9               	xorwf	___aldiv@sign,f
  3500  029D                     l1341:
  3501  029D  3000               	movlw	0
  3502  029E  00AD               	movwf	___aldiv@quotient+3
  3503  029F  3000               	movlw	0
  3504  02A0  00AC               	movwf	___aldiv@quotient+2
  3505  02A1  3000               	movlw	0
  3506  02A2  00AB               	movwf	___aldiv@quotient+1
  3507  02A3  3000               	movlw	0
  3508  02A4  00AA               	movwf	___aldiv@quotient
  3509  02A5                     l1343:
  3510  02A5  0823               	movf	___aldiv@divisor+3,w
  3511  02A6  0422               	iorwf	___aldiv@divisor+2,w
  3512  02A7  0421               	iorwf	___aldiv@divisor+1,w
  3513  02A8  0420               	iorwf	___aldiv@divisor,w
  3514  02A9  1903               	skipnz
  3515  02AA  2AAC               	goto	u911
  3516  02AB  2AAD               	goto	u910
  3517  02AC                     u911:
  3518  02AC  2AFA               	goto	l1363
  3519  02AD                     u910:
  3520  02AD                     l1345:
  3521  02AD  01A8               	clrf	___aldiv@counter
  3522  02AE  0AA8               	incf	___aldiv@counter,f
  3523  02AF  2ABD               	goto	l1349
  3524  02B0                     l1347:
  3525  02B0  3001               	movlw	1
  3526  02B1  00FD               	movwf	??___aldiv
  3527  02B2                     u925:
  3528  02B2  1003               	clrc
  3529  02B3  0DA0               	rlf	___aldiv@divisor,f
  3530  02B4  0DA1               	rlf	___aldiv@divisor+1,f
  3531  02B5  0DA2               	rlf	___aldiv@divisor+2,f
  3532  02B6  0DA3               	rlf	___aldiv@divisor+3,f
  3533  02B7  0BFD               	decfsz	??___aldiv,f
  3534  02B8  2AB2               	goto	u925
  3535  02B9  3001               	movlw	1
  3536  02BA  00FD               	movwf	??___aldiv
  3537  02BB  087D               	movf	??___aldiv,w
  3538  02BC  07A8               	addwf	___aldiv@counter,f
  3539  02BD                     l1349:
  3540  02BD  1FA3               	btfss	___aldiv@divisor+3,7
  3541  02BE  2AC0               	goto	u931
  3542  02BF  2AC1               	goto	u930
  3543  02C0                     u931:
  3544  02C0  2AB0               	goto	l1347
  3545  02C1                     u930:
  3546  02C1                     l1351:
  3547  02C1  3001               	movlw	1
  3548  02C2  00FD               	movwf	??___aldiv
  3549  02C3                     u945:
  3550  02C3  1003               	clrc
  3551  02C4  0DAA               	rlf	___aldiv@quotient,f
  3552  02C5  0DAB               	rlf	___aldiv@quotient+1,f
  3553  02C6  0DAC               	rlf	___aldiv@quotient+2,f
  3554  02C7  0DAD               	rlf	___aldiv@quotient+3,f
  3555  02C8  0BFD               	decfsz	??___aldiv,f
  3556  02C9  2AC3               	goto	u945
  3557  02CA                     l1353:
  3558  02CA  0823               	movf	___aldiv@divisor+3,w
  3559  02CB  0227               	subwf	___aldiv@dividend+3,w
  3560  02CC  1D03               	skipz
  3561  02CD  2AD8               	goto	u955
  3562  02CE  0822               	movf	___aldiv@divisor+2,w
  3563  02CF  0226               	subwf	___aldiv@dividend+2,w
  3564  02D0  1D03               	skipz
  3565  02D1  2AD8               	goto	u955
  3566  02D2  0821               	movf	___aldiv@divisor+1,w
  3567  02D3  0225               	subwf	___aldiv@dividend+1,w
  3568  02D4  1D03               	skipz
  3569  02D5  2AD8               	goto	u955
  3570  02D6  0820               	movf	___aldiv@divisor,w
  3571  02D7  0224               	subwf	___aldiv@dividend,w
  3572  02D8                     u955:
  3573  02D8  1C03               	skipc
  3574  02D9  2ADB               	goto	u951
  3575  02DA  2ADC               	goto	u950
  3576  02DB                     u951:
  3577  02DB  2AEB               	goto	l1359
  3578  02DC                     u950:
  3579  02DC                     l1355:
  3580  02DC  0820               	movf	___aldiv@divisor,w
  3581  02DD  02A4               	subwf	___aldiv@dividend,f
  3582  02DE  0821               	movf	___aldiv@divisor+1,w
  3583  02DF  1C03               	skipc
  3584  02E0  0F21               	incfsz	___aldiv@divisor+1,w
  3585  02E1  02A5               	subwf	___aldiv@dividend+1,f
  3586  02E2  0822               	movf	___aldiv@divisor+2,w
  3587  02E3  1C03               	skipc
  3588  02E4  0F22               	incfsz	___aldiv@divisor+2,w
  3589  02E5  02A6               	subwf	___aldiv@dividend+2,f
  3590  02E6  0823               	movf	___aldiv@divisor+3,w
  3591  02E7  1C03               	skipc
  3592  02E8  0F23               	incfsz	___aldiv@divisor+3,w
  3593  02E9  02A7               	subwf	___aldiv@dividend+3,f
  3594  02EA                     l1357:
  3595  02EA  142A               	bsf	___aldiv@quotient,0
  3596  02EB                     l1359:
  3597  02EB  3001               	movlw	1
  3598  02EC                     u965:
  3599  02EC  1003               	clrc
  3600  02ED  0CA3               	rrf	___aldiv@divisor+3,f
  3601  02EE  0CA2               	rrf	___aldiv@divisor+2,f
  3602  02EF  0CA1               	rrf	___aldiv@divisor+1,f
  3603  02F0  0CA0               	rrf	___aldiv@divisor,f
  3604  02F1  3EFF               	addlw	-1
  3605  02F2  1D03               	skipz
  3606  02F3  2AEC               	goto	u965
  3607  02F4                     l1361:
  3608  02F4  3001               	movlw	1
  3609  02F5  02A8               	subwf	___aldiv@counter,f
  3610  02F6  1D03               	btfss	3,2
  3611  02F7  2AF9               	goto	u971
  3612  02F8  2AFA               	goto	u970
  3613  02F9                     u971:
  3614  02F9  2AC1               	goto	l1351
  3615  02FA                     u970:
  3616  02FA                     l1363:
  3617  02FA  0829               	movf	___aldiv@sign,w
  3618  02FB  1903               	btfsc	3,2
  3619  02FC  2AFE               	goto	u981
  3620  02FD  2AFF               	goto	u980
  3621  02FE                     u981:
  3622  02FE  2B0A               	goto	l1367
  3623  02FF                     u980:
  3624  02FF                     l1365:
  3625  02FF  09AA               	comf	___aldiv@quotient,f
  3626  0300  09AB               	comf	___aldiv@quotient+1,f
  3627  0301  09AC               	comf	___aldiv@quotient+2,f
  3628  0302  09AD               	comf	___aldiv@quotient+3,f
  3629  0303  0AAA               	incf	___aldiv@quotient,f
  3630  0304  1903               	skipnz
  3631  0305  0AAB               	incf	___aldiv@quotient+1,f
  3632  0306  1903               	skipnz
  3633  0307  0AAC               	incf	___aldiv@quotient+2,f
  3634  0308  1903               	skipnz
  3635  0309  0AAD               	incf	___aldiv@quotient+3,f
  3636  030A                     l1367:
  3637  030A  082D               	movf	___aldiv@quotient+3,w
  3638  030B  00A3               	movwf	?___aldiv+3
  3639  030C  082C               	movf	___aldiv@quotient+2,w
  3640  030D  00A2               	movwf	?___aldiv+2
  3641  030E  082B               	movf	___aldiv@quotient+1,w
  3642  030F  00A1               	movwf	?___aldiv+1
  3643  0310  082A               	movf	___aldiv@quotient,w
  3644  0311  00A0               	movwf	?___aldiv
  3645  0312                     l330:
  3646  0312  0008               	return
  3647  0313                     __end_of___aldiv:
  3648                           
  3649                           	psect	text16
  3650  0046                     __ptext16:	
  3651 ;; *************** function _LCD_Char *****************
  3652 ;; Defined at:
  3653 ;;		line 27 in file "./lcd4bit.h"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  data            1    wreg     unsigned char 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  data            1    2[COMMON] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       0       0       0       0
  3668 ;;      Locals:         1       0       0       0       0
  3669 ;;      Temps:          2       0       0       0       0
  3670 ;;      Totals:         3       0       0       0       0
  3671 ;;Total ram usage:        3 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_LCD_num
  3677 ;;		_show_multidigits
  3678 ;;		_main
  3679 ;;		_show
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           
  3684                           ;psect for function _LCD_Char
  3685  0046                     _LCD_Char:
  3686                           
  3687                           ;incstack = 0
  3688                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3689                           ;LCD_Char@data stored from wreg
  3690  0046  00F2               	movwf	LCD_Char@data
  3691  0047                     l1295:
  3692                           
  3693                           ;./lcd4bit.h: 27: void LCD_Char (unsigned char data);./lcd4bit.h: 28: {;./lcd4bit.h: 29:
      +                               RC0 = 1;
  3694  0047  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0048  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0049  1407               	bsf	7,0	;volatile
  3697  004A                     l1297:
  3698                           
  3699                           ;./lcd4bit.h: 30:     PORTB = data;
  3700  004A  0872               	movf	LCD_Char@data,w
  3701  004B  0086               	movwf	6	;volatile
  3702  004C                     l1299:
  3703                           
  3704                           ;./lcd4bit.h: 31:     RC1 = 1;
  3705  004C  1487               	bsf	7,1	;volatile
  3706                           
  3707                           ;./lcd4bit.h: 32:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3708  004D  3041               	movlw	65
  3709  004E  00F1               	movwf	??_LCD_Char+1
  3710  004F  30EE               	movlw	238
  3711  0050  00F0               	movwf	??_LCD_Char
  3712  0051                     u1697:
  3713  0051  0BF0               	decfsz	??_LCD_Char,f
  3714  0052  2851               	goto	u1697
  3715  0053  0BF1               	decfsz	??_LCD_Char+1,f
  3716  0054  2851               	goto	u1697
  3717  0055  0000               	nop
  3718  0056                     l1301:
  3719                           
  3720                           ;./lcd4bit.h: 33:     RC1 = 0;
  3721  0056  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0057  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0058  1087               	bcf	7,1	;volatile
  3724                           
  3725                           ;./lcd4bit.h: 34:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3726  0059  3041               	movlw	65
  3727  005A  00F1               	movwf	??_LCD_Char+1
  3728  005B  30EE               	movlw	238
  3729  005C  00F0               	movwf	??_LCD_Char
  3730  005D                     u1707:
  3731  005D  0BF0               	decfsz	??_LCD_Char,f
  3732  005E  285D               	goto	u1707
  3733  005F  0BF1               	decfsz	??_LCD_Char+1,f
  3734  0060  285D               	goto	u1707
  3735  0061  0000               	nop
  3736  0062                     l1303:
  3737                           
  3738                           ;./lcd4bit.h: 35:     PORTB = (data<<4);
  3739  0062  0872               	movf	LCD_Char@data,w
  3740  0063  00F0               	movwf	??_LCD_Char
  3741  0064  3003               	movlw	3
  3742  0065                     u825:
  3743  0065  1003               	clrc
  3744  0066  0DF0               	rlf	??_LCD_Char,f
  3745  0067  3EFF               	addlw	-1
  3746  0068  1D03               	skipz
  3747  0069  2865               	goto	u825
  3748  006A  1003               	clrc
  3749  006B  0D70               	rlf	??_LCD_Char,w
  3750  006C  1283               	bcf	3,5	;RP0=0, select bank0
  3751  006D  1303               	bcf	3,6	;RP1=0, select bank0
  3752  006E  0086               	movwf	6	;volatile
  3753  006F                     l1305:
  3754                           
  3755                           ;./lcd4bit.h: 36:     RC1 = 1;
  3756  006F  1487               	bsf	7,1	;volatile
  3757  0070                     l1307:
  3758                           
  3759                           ;./lcd4bit.h: 37:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3760  0070  3041               	movlw	65
  3761  0071  00F1               	movwf	??_LCD_Char+1
  3762  0072  30EE               	movlw	238
  3763  0073  00F0               	movwf	??_LCD_Char
  3764  0074                     u1717:
  3765  0074  0BF0               	decfsz	??_LCD_Char,f
  3766  0075  2874               	goto	u1717
  3767  0076  0BF1               	decfsz	??_LCD_Char+1,f
  3768  0077  2874               	goto	u1717
  3769  0078  0000               	nop
  3770  0079                     l1309:
  3771                           
  3772                           ;./lcd4bit.h: 38:     RC1 = 0;
  3773  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3774  007A  1303               	bcf	3,6	;RP1=0, select bank0
  3775  007B  1087               	bcf	7,1	;volatile
  3776  007C                     l1311:
  3777                           
  3778                           ;./lcd4bit.h: 39:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3779  007C  3041               	movlw	65
  3780  007D  00F1               	movwf	??_LCD_Char+1
  3781  007E  30EE               	movlw	238
  3782  007F  00F0               	movwf	??_LCD_Char
  3783  0080                     u1727:
  3784  0080  0BF0               	decfsz	??_LCD_Char,f
  3785  0081  2880               	goto	u1727
  3786  0082  0BF1               	decfsz	??_LCD_Char+1,f
  3787  0083  2880               	goto	u1727
  3788  0084  0000               	nop
  3789  0085                     l52:
  3790  0085  0008               	return
  3791  0086                     __end_of_LCD_Char:
  3792                           
  3793                           	psect	text17
  3794  0F98                     __ptext17:	
  3795 ;; *************** function _LCD_init *****************
  3796 ;; Defined at:
  3797 ;;		line 41 in file "./lcd4bit.h"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      void 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0, pclath, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3811 ;;      Params:         0       0       0       0       0
  3812 ;;      Locals:         0       0       0       0       0
  3813 ;;      Temps:          2       0       0       0       0
  3814 ;;      Totals:         2       0       0       0       0
  3815 ;;Total ram usage:        2 bytes
  3816 ;; Hardware stack levels used: 1
  3817 ;; Hardware stack levels required when called: 1
  3818 ;; This function calls:
  3819 ;;		_LCD_Command
  3820 ;; This function is called by:
  3821 ;;		_main
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           
  3826                           ;psect for function _LCD_init
  3827  0F98                     _LCD_init:
  3828  0F98                     l1501:	
  3829                           ;incstack = 0
  3830                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3831                           
  3832                           
  3833                           ;./lcd4bit.h: 43:     LCD_Command (0x02);
  3834  0F98  3002               	movlw	2
  3835  0F99  120A  118A  2006  120A  158A  	fcall	_LCD_Command
  3836                           
  3837                           ;./lcd4bit.h: 44:     LCD_Command (0x28);
  3838  0F9E  3028               	movlw	40
  3839  0F9F  120A  118A  2006  120A  158A  	fcall	_LCD_Command
  3840                           
  3841                           ;./lcd4bit.h: 45:     LCD_Command (0x80);
  3842  0FA4  3080               	movlw	128
  3843  0FA5  120A  118A  2006  120A  158A  	fcall	_LCD_Command
  3844                           
  3845                           ;./lcd4bit.h: 46:     LCD_Command (0x0C);
  3846  0FAA  300C               	movlw	12
  3847  0FAB  120A  118A  2006  120A  158A  	fcall	_LCD_Command
  3848                           
  3849                           ;./lcd4bit.h: 47:     LCD_Command (0x06);
  3850  0FB0  3006               	movlw	6
  3851  0FB1  120A  118A  2006  120A  158A  	fcall	_LCD_Command
  3852                           
  3853                           ;./lcd4bit.h: 48:     LCD_Command (0x01);
  3854  0FB6  3001               	movlw	1
  3855  0FB7  120A  118A  2006  120A  158A  	fcall	_LCD_Command
  3856  0FBC                     l1503:
  3857                           
  3858                           ;./lcd4bit.h: 49:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3859  0FBC  3041               	movlw	65
  3860  0FBD  00F4               	movwf	??_LCD_init+1
  3861  0FBE  30EE               	movlw	238
  3862  0FBF  00F3               	movwf	??_LCD_init
  3863  0FC0                     u1737:
  3864  0FC0  0BF3               	decfsz	??_LCD_init,f
  3865  0FC1  2FC0               	goto	u1737
  3866  0FC2  0BF4               	decfsz	??_LCD_init+1,f
  3867  0FC3  2FC0               	goto	u1737
  3868  0FC4  0000               	nop
  3869  0FC5                     l55:
  3870  0FC5  0008               	return
  3871  0FC6                     __end_of_LCD_init:
  3872                           
  3873                           	psect	text18
  3874  0006                     __ptext18:	
  3875 ;; *************** function _LCD_Command *****************
  3876 ;; Defined at:
  3877 ;;		line 13 in file "./lcd4bit.h"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  cmnd            1    wreg     unsigned char 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  cmnd            1    2[COMMON] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3891 ;;      Params:         0       0       0       0       0
  3892 ;;      Locals:         1       0       0       0       0
  3893 ;;      Temps:          2       0       0       0       0
  3894 ;;      Totals:         3       0       0       0       0
  3895 ;;Total ram usage:        3 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_LCD_init
  3901 ;;		_main
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           
  3906                           ;psect for function _LCD_Command
  3907  0006                     _LCD_Command:
  3908                           
  3909                           ;incstack = 0
  3910                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  3911                           ;LCD_Command@cmnd stored from wreg
  3912  0006  00F2               	movwf	LCD_Command@cmnd
  3913  0007                     l1277:
  3914                           
  3915                           ;./lcd4bit.h: 13: void LCD_Command (unsigned char cmnd);./lcd4bit.h: 14: {;./lcd4bit.h: 
      +                          15:     RC0 = 0;
  3916  0007  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0008  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0009  1007               	bcf	7,0	;volatile
  3919  000A                     l1279:
  3920                           
  3921                           ;./lcd4bit.h: 16:     PORTB = cmnd;
  3922  000A  0872               	movf	LCD_Command@cmnd,w
  3923  000B  0086               	movwf	6	;volatile
  3924  000C                     l1281:
  3925                           
  3926                           ;./lcd4bit.h: 17:     RC1 = 1;
  3927  000C  1487               	bsf	7,1	;volatile
  3928                           
  3929                           ;./lcd4bit.h: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3930  000D  3041               	movlw	65
  3931  000E  00F1               	movwf	??_LCD_Command+1
  3932  000F  30EE               	movlw	238
  3933  0010  00F0               	movwf	??_LCD_Command
  3934  0011                     u1747:
  3935  0011  0BF0               	decfsz	??_LCD_Command,f
  3936  0012  2811               	goto	u1747
  3937  0013  0BF1               	decfsz	??_LCD_Command+1,f
  3938  0014  2811               	goto	u1747
  3939  0015  0000               	nop
  3940  0016                     l1283:
  3941                           
  3942                           ;./lcd4bit.h: 19:     RC1 = 0;
  3943  0016  1283               	bcf	3,5	;RP0=0, select bank0
  3944  0017  1303               	bcf	3,6	;RP1=0, select bank0
  3945  0018  1087               	bcf	7,1	;volatile
  3946                           
  3947                           ;./lcd4bit.h: 20:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3948  0019  3041               	movlw	65
  3949  001A  00F1               	movwf	??_LCD_Command+1
  3950  001B  30EE               	movlw	238
  3951  001C  00F0               	movwf	??_LCD_Command
  3952  001D                     u1757:
  3953  001D  0BF0               	decfsz	??_LCD_Command,f
  3954  001E  281D               	goto	u1757
  3955  001F  0BF1               	decfsz	??_LCD_Command+1,f
  3956  0020  281D               	goto	u1757
  3957  0021  0000               	nop
  3958  0022                     l1285:
  3959                           
  3960                           ;./lcd4bit.h: 21:     PORTB = (cmnd<<4);
  3961  0022  0872               	movf	LCD_Command@cmnd,w
  3962  0023  00F0               	movwf	??_LCD_Command
  3963  0024  3003               	movlw	3
  3964  0025                     u815:
  3965  0025  1003               	clrc
  3966  0026  0DF0               	rlf	??_LCD_Command,f
  3967  0027  3EFF               	addlw	-1
  3968  0028  1D03               	skipz
  3969  0029  2825               	goto	u815
  3970  002A  1003               	clrc
  3971  002B  0D70               	rlf	??_LCD_Command,w
  3972  002C  1283               	bcf	3,5	;RP0=0, select bank0
  3973  002D  1303               	bcf	3,6	;RP1=0, select bank0
  3974  002E  0086               	movwf	6	;volatile
  3975  002F                     l1287:
  3976                           
  3977                           ;./lcd4bit.h: 22:     RC1 = 1;
  3978  002F  1487               	bsf	7,1	;volatile
  3979  0030                     l1289:
  3980                           
  3981                           ;./lcd4bit.h: 23:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3982  0030  3041               	movlw	65
  3983  0031  00F1               	movwf	??_LCD_Command+1
  3984  0032  30EE               	movlw	238
  3985  0033  00F0               	movwf	??_LCD_Command
  3986  0034                     u1767:
  3987  0034  0BF0               	decfsz	??_LCD_Command,f
  3988  0035  2834               	goto	u1767
  3989  0036  0BF1               	decfsz	??_LCD_Command+1,f
  3990  0037  2834               	goto	u1767
  3991  0038  0000               	nop
  3992  0039                     l1291:
  3993                           
  3994                           ;./lcd4bit.h: 24:     RC1 = 0;
  3995  0039  1283               	bcf	3,5	;RP0=0, select bank0
  3996  003A  1303               	bcf	3,6	;RP1=0, select bank0
  3997  003B  1087               	bcf	7,1	;volatile
  3998  003C                     l1293:
  3999                           
  4000                           ;./lcd4bit.h: 25:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4001  003C  3041               	movlw	65
  4002  003D  00F1               	movwf	??_LCD_Command+1
  4003  003E  30EE               	movlw	238
  4004  003F  00F0               	movwf	??_LCD_Command
  4005  0040                     u1777:
  4006  0040  0BF0               	decfsz	??_LCD_Command,f
  4007  0041  2840               	goto	u1777
  4008  0042  0BF1               	decfsz	??_LCD_Command+1,f
  4009  0043  2840               	goto	u1777
  4010  0044  0000               	nop
  4011  0045                     l49:
  4012  0045  0008               	return
  4013  0046                     __end_of_LCD_Command:
  4014                           
  4015                           	psect	text19
  4016  01AB                     __ptext19:	
  4017 ;; *************** function _ADC_Init *****************
  4018 ;; Defined at:
  4019 ;;		line 107 in file "main.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4033 ;;      Params:         0       0       0       0       0
  4034 ;;      Locals:         0       0       0       0       0
  4035 ;;      Temps:          2       0       0       0       0
  4036 ;;      Totals:         2       0       0       0       0
  4037 ;;Total ram usage:        2 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _ADC_Init
  4048  01AB                     _ADC_Init:
  4049  01AB                     l1695:	
  4050                           ;incstack = 0
  4051                           ; Regs used in _ADC_Init: [wreg]
  4052                           
  4053                           
  4054                           ;main.c: 109:     ADCON0 = 0x85;
  4055  01AB  3085               	movlw	133
  4056  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  4057  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  4058  01AE  009F               	movwf	31	;volatile
  4059                           
  4060                           ;main.c: 110:     ADCON1 = 0xC0;
  4061  01AF  30C0               	movlw	192
  4062  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  4063  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  4064  01B2  009F               	movwf	31	;volatile
  4065                           
  4066                           ;main.c: 111:     AV[0]= ((ADRESH<<8)+ADRESL);
  4067  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4068  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4069  01B5  081E               	movf	30,w	;volatile
  4070  01B6  00C4               	movwf	_AV+1
  4071  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  4072  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  4073  01B9  081E               	movf	30,w	;volatile
  4074  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  4075  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  4076  01BC  00C3               	movwf	_AV
  4077                           
  4078                           ;main.c: 113:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4079  01BD  3041               	movlw	65
  4080  01BE  00F1               	movwf	??_ADC_Init+1
  4081  01BF  30EE               	movlw	238
  4082  01C0  00F0               	movwf	??_ADC_Init
  4083  01C1                     u1787:
  4084  01C1  0BF0               	decfsz	??_ADC_Init,f
  4085  01C2  29C1               	goto	u1787
  4086  01C3  0BF1               	decfsz	??_ADC_Init+1,f
  4087  01C4  29C1               	goto	u1787
  4088  01C5  0000               	nop
  4089                           
  4090                           ;main.c: 114:     ADCON0 = 0x8D;
  4091  01C6  308D               	movlw	141
  4092  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  4093  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  4094  01C9  009F               	movwf	31	;volatile
  4095                           
  4096                           ;main.c: 115:     ADCON1 = 0xC0;
  4097  01CA  30C0               	movlw	192
  4098  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  4099  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  4100  01CD  009F               	movwf	31	;volatile
  4101                           
  4102                           ;main.c: 116:     AV[1]= ((ADRESH<<8)+ADRESL);
  4103  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  4104  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  4105  01D0  081E               	movf	30,w	;volatile
  4106  01D1  00C6               	movwf	_AV+3
  4107  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  4108  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  4109  01D4  081E               	movf	30,w	;volatile
  4110  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  4111  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  4112  01D7  00C5               	movwf	_AV+2
  4113                           
  4114                           ;main.c: 118:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4115  01D8  3041               	movlw	65
  4116  01D9  00F1               	movwf	??_ADC_Init+1
  4117  01DA  30EE               	movlw	238
  4118  01DB  00F0               	movwf	??_ADC_Init
  4119  01DC                     u1797:
  4120  01DC  0BF0               	decfsz	??_ADC_Init,f
  4121  01DD  29DC               	goto	u1797
  4122  01DE  0BF1               	decfsz	??_ADC_Init+1,f
  4123  01DF  29DC               	goto	u1797
  4124  01E0  0000               	nop
  4125                           
  4126                           ;main.c: 119:     ADCON0 = 0x95;
  4127  01E1  3095               	movlw	149
  4128  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  4129  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  4130  01E4  009F               	movwf	31	;volatile
  4131                           
  4132                           ;main.c: 120:     ADCON1 = 0xC0;
  4133  01E5  30C0               	movlw	192
  4134  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  4135  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  4136  01E8  009F               	movwf	31	;volatile
  4137                           
  4138                           ;main.c: 121:     AV[2]= ((ADRESH<<8)+ADRESL);
  4139  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  4140  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  4141  01EB  081E               	movf	30,w	;volatile
  4142  01EC  00C8               	movwf	_AV+5
  4143  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  4144  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  4145  01EF  081E               	movf	30,w	;volatile
  4146  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  4147  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  4148  01F2  00C7               	movwf	_AV+4
  4149                           
  4150                           ;main.c: 123:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4151  01F3  3041               	movlw	65
  4152  01F4  00F1               	movwf	??_ADC_Init+1
  4153  01F5  30EE               	movlw	238
  4154  01F6  00F0               	movwf	??_ADC_Init
  4155  01F7                     u1807:
  4156  01F7  0BF0               	decfsz	??_ADC_Init,f
  4157  01F8  29F7               	goto	u1807
  4158  01F9  0BF1               	decfsz	??_ADC_Init+1,f
  4159  01FA  29F7               	goto	u1807
  4160  01FB  0000               	nop
  4161                           
  4162                           ;main.c: 124:     ADCON0 = 0x9D;
  4163  01FC  309D               	movlw	157
  4164  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  4165  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  4166  01FF  009F               	movwf	31	;volatile
  4167                           
  4168                           ;main.c: 125:     ADCON1 = 0xC0;
  4169  0200  30C0               	movlw	192
  4170  0201  1683               	bsf	3,5	;RP0=1, select bank1
  4171  0202  1303               	bcf	3,6	;RP1=0, select bank1
  4172  0203  009F               	movwf	31	;volatile
  4173                           
  4174                           ;main.c: 126:     AV[3]= ((ADRESH<<8)+ADRESL);
  4175  0204  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0205  1303               	bcf	3,6	;RP1=0, select bank0
  4177  0206  081E               	movf	30,w	;volatile
  4178  0207  00CA               	movwf	_AV+7
  4179  0208  1683               	bsf	3,5	;RP0=1, select bank1
  4180  0209  1303               	bcf	3,6	;RP1=0, select bank1
  4181  020A  081E               	movf	30,w	;volatile
  4182  020B  1283               	bcf	3,5	;RP0=0, select bank0
  4183  020C  1303               	bcf	3,6	;RP1=0, select bank0
  4184  020D  00C9               	movwf	_AV+6
  4185  020E                     l169:
  4186  020E  0008               	return
  4187  020F                     __end_of_ADC_Init:
  4188  007E                     btemp	set	126	;btemp
  4189  007E                     wtemp0	set	126
  4190                           
  4191                           	psect	idloc
  4192                           
  4193                           ;Config register IDLOC0 @ 0x2000
  4194                           ;	unspecified, using default values
  4195  2000                     	org	8192
  4196  2000  3FFF               	dw	16383
  4197                           
  4198                           ;Config register IDLOC1 @ 0x2001
  4199                           ;	unspecified, using default values
  4200  2001                     	org	8193
  4201  2001  3FFF               	dw	16383
  4202                           
  4203                           ;Config register IDLOC2 @ 0x2002
  4204                           ;	unspecified, using default values
  4205  2002                     	org	8194
  4206  2002  3FFF               	dw	16383
  4207                           
  4208                           ;Config register IDLOC3 @ 0x2003
  4209                           ;	unspecified, using default values
  4210  2003                     	org	8195
  4211  2003  3FFF               	dw	16383
  4212                           
  4213                           	psect	config
  4214                           
  4215                           ;Config register CONFIG @ 0x2007
  4216                           ;	Oscillator Selection bits
  4217                           ;	FOSC = HS, HS oscillator
  4218                           ;	Watchdog Timer Enable bit
  4219                           ;	WDTE = OFF, WDT disabled
  4220                           ;	Power-up Timer Enable bit
  4221                           ;	PWRTE = OFF, PWRT disabled
  4222                           ;	Brown-out Reset Enable bit
  4223                           ;	BOREN = ON, BOR enabled
  4224                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4225                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4226                           ;	Data EEPROM Memory Code Protection bit
  4227                           ;	CPD = OFF, Data EEPROM code protection off
  4228                           ;	Flash Program Memory Write Enable bits
  4229                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4230                           ;	In-Circuit Debugger Mode bit
  4231                           ;	DEBUG = 0x1, unprogrammed default
  4232                           ;	Flash Program Memory Code Protection bit
  4233                           ;	CP = OFF, Code protection off
  4234  2007                     	org	8199
  4235  2007  3FFA               	dw	16378

Data Sizes:
    Strings     2
    Constant    0
    Data        2
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _tx_sn->___awdiv
    _show_multidigits->___awdiv
    _LCD_num->___aldiv
    ___aldiv->___lmul
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_LCD_num
    _LCD_num->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   16866
                                             30 BANK0      5     5      0
                           _ADC_Init
                           _LCD_Char
                        _LCD_Command
                           _LCD_init
                            _LCD_num
                         _dht11_init
                      _find_response
                         _read_dht11
                            _ser_int
                   _show_multidigits
                                 _tx
                              _tx_sn
 ---------------------------------------------------------------------------------
 (1) _tx_sn                                               16    14      2    6059
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _show_multidigits                                    16    14      2    6157
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                           _LCD_Char
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_dht11                                           4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _find_response                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _dht11_init                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_num                                             18    14      4    4202
                                             14 BANK0     16    12      4
                           _LCD_Char
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
               _intdigits_chardigits
 ---------------------------------------------------------------------------------
 (2) _intdigits_chardigits                                 7     1      6     294
                                              0 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1375
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Char
   _LCD_Command
   _LCD_init
     _LCD_Command
   _LCD_num
     _LCD_Char
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
     ___lwmod
     _intdigits_chardigits
   _dht11_init
   _find_response
   _read_dht11
   _ser_int
   _show_multidigits
     _LCD_Char
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   _tx
   _tx_sn
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 05 11:12:05 2022

                            pc 0002                   ?_LCD_Command 0070                             l52 0085  
                           l55 0FC5                             l80 0F4F                             l49 0045  
                           l73 0654                             l58 03D1                             l67 0F5E  
                           l83 0F3D                             _AV 0043                             l77 0654  
                           l85 0F41                             l86 0F42                             l98 07E6  
                 ___awdiv@sign 0076                             _sn 0056                             _tx 0F38  
                           fsr 0004                            l102 07E6                            l121 0F78  
                          l131 0087                            l126 0F97                            l320 028A  
                          l136 00B8                            l160 049B                            l161 049B  
                          l330 0312                            l139 00C7                            l421 01AA  
                          l149 03E8                            l408 0275                            l169 020E  
                          l269 0151                            l527 010B                            l537 0FFF  
                          ?_tx 0070                            _RC0 0038                            _RC1 0039  
                          u900 028E                            u901 028D                            u910 02AD  
                          u830 0F41                            u815 0025                            u911 02AC  
                          u831 0F40                            u840 0118                            u825 0065  
                          u841 0117                            u930 02C1                            u931 02C0  
                          u851 0121                            u852 0128                            u925 02B2  
                          u853 012F                            u950 02DC                            u951 02DB  
                          u880 0149                            u945 02C3                            u881 0148  
                          u865 0131                            u970 02FA                            u890 027D  
                          u971 02F9                            u955 02D8                            u891 027C  
                          u875 0139                            u980 02FF                            u981 02FE  
                          u965 02EC                            u990 0214                            u991 0213  
                          _avv 004B                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0076                            tx@a 0070         show_multidigits@digit1 0026  
       show_multidigits@digit2 0028         show_multidigits@digit3 0024         show_multidigits@digit4 0020  
                         ??_tx 0070                __end_of_LCD_num 03D2                           l1301 0056  
                         l1311 007C                           l1303 0062                           l1305 006F  
                         l1321 0118                           l1313 0F50                           l1401 0259  
                         l1307 0070                           l1331 0276                           l1323 012F  
                         l1411 0271                           l1403 025A                           l1315 0F39  
                         l1501 0F98                           l1309 0079                           l1341 029D  
                         l1333 0279                           l1325 0138                           l1317 010C  
                         l1405 0261                           l1421 015C                           l1503 0FBC  
                         l1351 02C1                           l1343 02A5                           l1335 027D  
                         l1327 0149                           l1319 0114                           l1511 035A  
                         l1407 0267                           l1431 0170                           l1423 015E  
                         l1415 0152                           l1281 000C                           l1361 02F4  
                         l1353 02CA                           l1345 02AD                           l1337 028E  
                         l1521 03A6                           l1513 036D                           l1505 0313  
                         l1409 026C                           l1441 018F                           l1433 0177  
                         l1425 0162                           l1417 0153                           l1601 068B  
                         l1291 0039                           l1283 0016                           l1355 02DC  
                         l1347 02B0                           l1363 02FA                           l1339 0299  
                         l1523 03AC                           l1515 0384                           l1507 0313  
                         l1371 020F                           l1443 0196                           l1435 017B  
                         l1427 0167                           l1419 0157                           l1531 04CC  
                         l1611 06BC                           l1603 068F                           l1293 003C  
                         l1285 0022                           l1277 0007                           l1365 02FF  
                         l1357 02EA                           l1349 02BD                           l1461 00DA  
                         l1453 00C8                           l1525 03B5                           l1517 0388  
                         l1509 0347                           l1381 021F                           l1373 0210  
                         l1437 017F                           l1429 016D                           l1445 019C  
                         l1541 04FD                           l1533 04D4                           l1621 0719  
                         l1613 06C5                           l1605 06A2                           l1287 002F  
                         l1279 000A                           l1295 0047                           l1367 030A  
                         l1359 02EB                           l1471 00FA                           l1463 00DE  
                         l1455 00CA                           l1527 03BE                           l1519 039F  
                         l1391 0233                           l1383 0224                           l1375 0214  
                         l1447 01A1                           l1439 0189                           l1551 0533  
                         l1543 0510                           l1535 04DD                           l1631 0745  
                         l1623 0720                           l1615 06EB                           l1607 06A9  
                         l1711 03E0                           l1289 0030                           l1297 004A  
                         l1473 0101                           l1465 00E2                           l1457 00D0  
                         l1481 0FCC                           l1393 023A                           l1385 0228  
                         l1377 0219                           l1449 01A6                           l1561 058E  
                         l1553 0559                           l1545 0517                           l1537 04E6  
                         l1529 04C3                           l1641 07B0                           l1633 076B  
                         l1625 0729                           l1617 06EF                           l1609 06B3  
                         l1721 0408                           l1713 03E5                           l1705 03D2  
                         l1299 004C                           l1467 00F3                           l1459 00D3  
                         l1475 0107                           l1491 0FE8                           l1483 0FCF  
                         l1651 0F5F                           l1395 023E                           l1387 022A  
                         l1379 021B                           l1571 05D9                           l1563 0597  
                         l1555 055D                           l1539 04F9                           l1547 0521  
                         l1643 07C3                           l1635 076F                           l1619 0706  
                         l1627 0733                           l1731 0427                           l1715 03EC  
                         l1707 03D6                           l1469 00F9                           l1493 0FEE  
                         l1485 0FD6                           l1653 0F65                           l1661 0F7C  
                         l1397 0242                           l1389 0230                           l1581 0631  
                         l1573 05DD                           l1557 0574                           l1549 052A  
                         l1565 05A1                           l1645 07CA                           l1637 0786  
                         l1629 073C                           l1741 043C                           l1717 03F7  
                         l1709 03DB                           l1495 0FF5                           l1487 0FDA  
                         l1479 0FC6                           l1655 0F6D                           l1671 0F93  
                         l1663 0F81                           l1399 0253                           l1583 0638  
                         l1575 05F4                           l1567 05AA                           l1559 0587  
                         l1647 07D3                           l1639 0799                           l1591 0655  
                         l1751 045B                           l1743 0443                           l1727 040B  
                         l1719 0402                           l1489 0FDE                           l1497 0FFB  
                         l1657 0F75                           l1665 0F87                           l1681 0092  
                         l1673 0086                           l1585 0641                           l1577 0607  
                         l1569 05B3                           l1649 07DC                           l1593 065E  
                         l1761 0486                           l1753 0469                           l1745 0449  
                         l1737 042A                           l1729 0421                           l1667 0F8B  
                         l1659 0F79                           l1691 00C6                           l1683 0098  
                         l1587 064A                           l1579 061E                           l1595 0666  
                         l1755 046F                           l1747 044F                           l1739 0435  
                         l1669 0F91                           l1685 00A9                           l1589 0F43  
                         l1597 066F                           l1781 04A2                           l1757 0475  
                         l1749 0455                           l1695 01AB                           l1687 00BC  
                         l1679 008D                           l1599 0678                           l1783 04A8  
                         l1759 047F                           l1689 00C0                           l1785 04B7  
                         l1779 049C                           STR_1 0806                           u1000 021F  
                         u1001 021E                           u1010 0230                           u1011 022F  
                         u1100 0162                           u1101 0161                           u1030 0242  
                         u1110 016D                           u1031 0241                           u1111 016C  
                         u1200 00E2                           u1201 00E1                           u1025 0234  
                         u1050 0253                           u1130 017F                           u1051 0252  
                         u1131 017E                           u1220 00F3                           u1300 0FFB  
                         u1140 0189                           u1221 00F2                           u1301 0FFA  
                         u1045 0243                           u1141 0188                           u1125 0171  
                         u1070 0267                           u1310 04CC                           u1215 00E3  
                         u1071 0266                           u1055 024F                           u1311 04CB  
                         u1240 0107                           u1080 026C                           u1160 019C  
                         u1320 04DD                           u1400 0678                           u1241 0106  
                         u1225 00EF                           u1081 026B                           u1065 025B  
                         u1161 019B                           u1145 0185                           u1321 04DC  
                         u1401 0677                           u1250 0FCC                           u1170 01A1  
                         u1090 0157                           u1330 04E6                           u1410 06BC  
                         u1235 00FB                           u1251 0FCB                           u1171 01A0  
                         u1155 0190                           u1091 0156                           u1331 04E5  
                         u1411 06BB                           u1180 00D0                           u1340 052A  
                         u1420 06C5                           u1181 00CF                           u1341 0529  
                         u1421 06C4                           u1270 0FDE                           u1510 00BC  
                         u1350 0533                           u1430 073C                           u1271 0FDD  
                         u1511 00BB                           u1351 0532                           u1431 073B  
                         u1280 0FE8                           u1520 00C6                           u1504 00B1  
                         u1360 05AA                           u1440 0745                           u1281 0FE7  
                         u1265 0FD0                           u1521 00C5                           u1505 00AF  
                         u1361 05A9                           u1441 0744                           u1450 0F87  
                         u1370 05B3                           u1195 00D4                           u1451 0F86  
                         u1371 05B2                           u1460 0F91                           u1380 065E  
                         u1540 03EC                           u1285 0FE4                           u1461 0F90  
                         u1381 065D                           u1541 03EB                           u1470 008D  
                         u1390 066F                           u1550 043C                           u1295 0FEF  
                         u1471 008C                           u1391 066E                           u1551 043B  
                         u1607 03F2                           u1480 0098                           u1560 0449  
                         u1481 0097                           u1617 0463                           u1561 0448  
                         u1570 045B                           u1707 005D                           u1627 04B0  
                         u1571 045A                           u1580 0475                           u1717 0074  
                         u1637 008F                           u1581 0474                           u1494 00A0  
                         u1590 0486                           u1807 01F7                           u1727 0080  
                         u1647 0F7E                           u1495 009E                           u1591 0485  
                         u1737 0FC0                           u1657 0F89                           u1747 0011  
                         u1667 0F95                           u1757 001D                           u1677 0F69  
                         u1767 0034                           u1687 0F72                           u1777 0040  
                         u1697 0051                           u1787 01C1                           u1797 01DC  
                         _RCIF 0065         show_multidigits@result 0022                           _TXIF 0064  
                         _Temp 0054                           _main 03D2                           btemp 007E  
             __end_of_ADC_Init 020F                           start 0000               __end_of_LCD_Char 0086  
                 LCD_Char@data 0072               __end_of_LCD_init 0FC6                __end_of___aldiv 0313  
                        ?_main 0070                __end_of___awdiv 0276                __end_of___awmod 01AB  
              ___awdiv@divisor 0070                __end_of___lwdiv 010C                __end_of___lwmod 1000  
              ___awdiv@counter 0075                          _RCREG 001A                          _RCSTA 0018  
      show_multidigits@result1 002A                          _SPBRG 0099                          _PORTB 0006  
              ??_find_response 0070                          _TRISB 0086                          _TRISC 0087  
                        _TXREG 0019                          _TXSTA 0098            ___lmul@multiplicand 0074  
                        main@i 0041                          main@j 0042                          _tx_sn 0655  
              __end_of_ser_int 0F50                          pclath 000A                          status 0003  
                        wtemp0 007E                __initialization 07E7                   __end_of_main 04C3  
                       ??_main 003E                 LCD_num@result1 003A           _intdigits_chardigits 0F50  
                    ??_LCD_num 007E                         _ADCON0 001F                         _ADCON1 009F  
                       _ADRESH 001E                         _ADRESL 009E               ___awdiv@dividend 0072  
                       ?_tx_sn 0079                         ___lmul 010C                      ??___aldiv 007D  
                    ??___awdiv 0074                      ??___awmod 0074                      ??___lwdiv 0074  
                    ??___lwmod 0074               ___awdiv@quotient 0077                ___awmod@divisor 0070  
              ___awmod@counter 0075           __size_of_LCD_Command 0040          ?_intdigits_chardigits 0070  
                    ?_ADC_Init 0070                      ??_ser_int 0070      __size_of_show_multidigits 0192  
                    ?_LCD_Char 0070        __end_of__initialization 07FC                      ?_LCD_init 0070  
               __pcstackCOMMON 0070                     _dht11_init 0F5F                   __pidataBANK0 0004  
                __end_of_tx_sn 07E7                     __end_of_tx 0F43                     ??_ADC_Init 0070  
                      ??_tx_sn 007B                     __pbssBANK0 0043                 tx_sn@remainder 002C  
                   ??_LCD_Char 0070                     ??_LCD_init 0073                   tx_sn@result1 002A  
                   __pmaintext 03D2                        ?___lmul 0070                 ___lmul@product 0079  
       ??_intdigits_chardigits 0076                        _LCD_num 0313                     __stringtab 0800  
          show_multidigits@val 0079                    _Temp_byte_1 0051                    _Temp_byte_2 0050  
                  ?_dht11_init 0070                        ___aldiv 0276                        ___awdiv 020F  
              __size_of___lmul 0046                        ___awmod 0152                        ___lwdiv 00C8  
                      ___lwmod 0FC6                     _read_dht11 0086                        __ptext1 0655  
                      __ptext2 0F38                        __ptext3 04C3                        __ptext4 0152  
                      __ptext5 020F                        __ptext6 0F43                        __ptext7 0086  
                      __ptext8 0F79                        __ptext9 0F5F               ___awmod@dividend 0072  
             ___aldiv@dividend 0024                        _ser_int 0F43          __end_of_find_response 0F98  
                      clrloop0 0F31           end_of_initialization 07FC               _show_multidigits 04C3  
             ___aldiv@quotient 002A                      _PORTDbits 0008                      _TRISDbits 0088  
            __size_of_ADC_Init 0064            __size_of_dht11_init 001A                      _RH_byte_1 0053  
                    _RH_byte_2 0052              __size_of_LCD_Char 0040              __size_of_LCD_init 002E  
                ??_LCD_Command 0070                 __end_of___lmul 0152                    ?_read_dht11 0070  
          start_initialization 07E7                  LCD_num@digit1 0032                  LCD_num@digit2 0034  
                LCD_num@digit3 0036                     LCD_num@val 002E                  LCD_num@result 0038  
                     ??___lmul 0078                    __pdataBANK0 0056            read_dht11@for_count 0073  
             LCD_num@remainder 003C            __end_of_LCD_Command 0046                       ?_LCD_num 002E  
                    ___latbits 0002                      _Summation 004E                  __pcstackBANK0 0020  
          __size_of_read_dht11 0042                      _check_bit 004F                    tx_sn@digit1 0026  
                  tx_sn@digit2 0028                    tx_sn@digit3 0024                    tx_sn@digit4 0020  
             ___lwdiv@dividend 0072                    tx_sn@result 0022                   ??_dht11_init 0070  
                     ?___aldiv 0020                       ?___awdiv 0070                       ?___awmod 0070  
                     ?___lwdiv 0070                       ?___lwmod 0070       __end_of_show_multidigits 0655  
                    __pstrings 0800  __size_of_intdigits_chardigits 000F                       _ADC_Init 01AB  
                     ?_ser_int 0070               ___lwdiv@quotient 0075                 __size_of_tx_sn 0192  
           __end_of_dht11_init 0F79                    __size_of_tx 000B                ___aldiv@divisor 0020  
                     _LCD_Char 0046                ___aldiv@counter 0028                       _LCD_init 0F98  
                    clear_ram0 0F30                       _GO_nDONE 00FA                    _LCD_Command 0006  
                  __stringbase 0805               __size_of_LCD_num 00BF                 read_dht11@data 0072  
            ___lmul@multiplier 0070          intdigits_chardigits@a 0070          intdigits_chardigits@b 0072  
        intdigits_chardigits@c 0074                       _Humidity 0055         __size_of_find_response 001F  
             __size_of___aldiv 009D               __size_of___awdiv 0067               __size_of___awmod 0059  
                 ??_read_dht11 0070               __size_of___lwdiv 0044               __size_of___lwmod 003A  
           __end_of__stringtab 0806                ___lwdiv@divisor 0070                ___lwdiv@counter 0077  
                     __ptext10 0313                       __ptext11 0F50                       __ptext12 0FC6  
                     __ptext13 00C8                       __ptext14 010C                       __ptext15 0276  
                     __ptext16 0046                       __ptext17 0F98                       __ptext18 0006  
                     __ptext19 01AB               __size_of_ser_int 000D                  __size_of_main 00F1  
           __end_of_read_dht11 00C8                  _find_response 0F79                LCD_Command@cmnd 0072  
             ___lwmod@dividend 0072                      stringcode 0800      show_multidigits@remainder 002C  
            ?_show_multidigits 0079             ??_show_multidigits 007B                       tx_sn@val 0079  
              ___lwmod@divisor 0070                ___lwmod@counter 0075                       stringdir 0800  
                     stringtab 0800                   ___aldiv@sign 0029                 ?_find_response 0070  
 __end_of_intdigits_chardigits 0F5F  
