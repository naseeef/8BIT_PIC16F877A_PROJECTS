

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 21 21:12:57 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.40
    34                           ; Generated 17/11/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F877A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  009F                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188                           
   189                           	psect	idataBANK0
   190  0FB2                     __pidataBANK0:
   191                           
   192                           ;initializer for _keypad
   193  0FB2  3437               	retlw	55
   194  0FB3  3438               	retlw	56
   195  0FB4  3439               	retlw	57
   196  0FB5  342F               	retlw	47
   197  0FB6  3434               	retlw	52
   198  0FB7  3435               	retlw	53
   199  0FB8  3436               	retlw	54
   200  0FB9  342A               	retlw	42
   201  0FBA  3431               	retlw	49
   202  0FBB  3432               	retlw	50
   203  0FBC  3433               	retlw	51
   204  0FBD  342D               	retlw	45
   205  0FBE  3443               	retlw	67
   206  0FBF  3430               	retlw	48
   207  0FC0  343D               	retlw	61
   208  0FC1  342B               	retlw	43
   209  0007                     _PORTC	set	7
   210  0008                     _PORTD	set	8
   211  0043                     _RD3	set	67
   212  0042                     _RD2	set	66
   213  0041                     _RD1	set	65
   214  0040                     _RD0	set	64
   215  0047                     _RD7	set	71
   216  0046                     _RD6	set	70
   217  0045                     _RD5	set	69
   218  0044                     _RD4	set	68
   219  003B                     _RC3	set	59
   220  003A                     _RC2	set	58
   221  0031                     _RB1	set	49
   222  0030                     _RB0	set	48
   223  0088                     _TRISD	set	136
   224  0087                     _TRISC	set	135
   225  0086                     _TRISB	set	134
   226                           
   227                           	psect	strings
   228  0003                     __pstrings:
   229  0003                     stringtab:
   230  0003                     __stringtab:
   231  0003                     stringcode:	
   232                           ;	String table - string pointers are 1 byte each
   233                           
   234  0003                     stringdir:
   235  0003  3000               	movlw	high stringdir
   236  0004  008A               	movwf	10
   237  0005  0804               	movf	4,w
   238  0006  0A84               	incf	4,f
   239  0007  0782               	addwf	2,f
   240  0008                     __stringbase:
   241  0008  3400               	retlw	0
   242  0009                     __end_of__stringtab:
   243  0009                     STR_5:
   244  0009  3445               	retlw	69	;'E'
   245  000A  346E               	retlw	110	;'n'
   246  000B  3474               	retlw	116	;'t'
   247  000C  3465               	retlw	101	;'e'
   248  000D  3472               	retlw	114	;'r'
   249  000E  3420               	retlw	32	;' '
   250  000F  3474               	retlw	116	;'t'
   251  0010  3468               	retlw	104	;'h'
   252  0011  3465               	retlw	101	;'e'
   253  0012  3420               	retlw	32	;' '
   254  0013  3442               	retlw	66	;'B'
   255  0014  346F               	retlw	111	;'o'
   256  0015  3462               	retlw	98	;'b'
   257  0016  3462               	retlw	98	;'b'
   258  0017  3469               	retlw	105	;'i'
   259  0018  346E               	retlw	110	;'n'
   260  0019  3420               	retlw	32	;' '
   261  001A  3453               	retlw	83	;'S'
   262  001B  3469               	retlw	105	;'i'
   263  001C  347A               	retlw	122	;'z'
   264  001D  3465               	retlw	101	;'e'
   265  001E  343A               	retlw	58	;':'
   266  001F  3400               	retlw	0
   267  0020                     STR_4:
   268  0020  3445               	retlw	69	;'E'
   269  0021  346E               	retlw	110	;'n'
   270  0022  3474               	retlw	116	;'t'
   271  0023  3465               	retlw	101	;'e'
   272  0024  3472               	retlw	114	;'r'
   273  0025  3420               	retlw	32	;' '
   274  0026  3474               	retlw	116	;'t'
   275  0027  3468               	retlw	104	;'h'
   276  0028  3465               	retlw	101	;'e'
   277  0029  3420               	retlw	32	;' '
   278  002A  3443               	retlw	67	;'C'
   279  002B  346F               	retlw	111	;'o'
   280  002C  3469               	retlw	105	;'i'
   281  002D  346C               	retlw	108	;'l'
   282  002E  3420               	retlw	32	;' '
   283  002F  3453               	retlw	83	;'S'
   284  0030  3469               	retlw	105	;'i'
   285  0031  347A               	retlw	122	;'z'
   286  0032  3465               	retlw	101	;'e'
   287  0033  343A               	retlw	58	;':'
   288  0034  3400               	retlw	0
   289  0035                     STR_6:
   290  0035  3445               	retlw	69	;'E'
   291  0036  346E               	retlw	110	;'n'
   292  0037  3474               	retlw	116	;'t'
   293  0038  3465               	retlw	101	;'e'
   294  0039  3472               	retlw	114	;'r'
   295  003A  3420               	retlw	32	;' '
   296  003B  3474               	retlw	116	;'t'
   297  003C  3468               	retlw	104	;'h'
   298  003D  3465               	retlw	101	;'e'
   299  003E  3420               	retlw	32	;' '
   300  003F  344E               	retlw	78	;'N'
   301  0040  346F               	retlw	111	;'o'
   302  0041  342E               	retlw	46	;'.'
   303  0042  3420               	retlw	32	;' '
   304  0043  3454               	retlw	84	;'T'
   305  0044  3475               	retlw	117	;'u'
   306  0045  3472               	retlw	114	;'r'
   307  0046  346E               	retlw	110	;'n'
   308  0047  3473               	retlw	115	;'s'
   309  0048  343A               	retlw	58	;':'
   310  0049  3400               	retlw	0
   311  004A                     STR_3:
   312  004A  3454               	retlw	84	;'T'
   313  004B  346F               	retlw	111	;'o'
   314  004C  3474               	retlw	116	;'t'
   315  004D  3461               	retlw	97	;'a'
   316  004E  346C               	retlw	108	;'l'
   317  004F  3420               	retlw	32	;' '
   318  0050  3454               	retlw	84	;'T'
   319  0051  3469               	retlw	105	;'i'
   320  0052  346D               	retlw	109	;'m'
   321  0053  3465               	retlw	101	;'e'
   322  0054  3420               	retlw	32	;' '
   323  0055  3454               	retlw	84	;'T'
   324  0056  3461               	retlw	97	;'a'
   325  0057  346B               	retlw	107	;'k'
   326  0058  3465               	retlw	101	;'e'
   327  0059  346E               	retlw	110	;'n'
   328  005A  343A               	retlw	58	;':'
   329  005B  3400               	retlw	0
   330  005C                     STR_2:
   331  005C  3457               	retlw	87	;'W'
   332  005D  3469               	retlw	105	;'i'
   333  005E  346E               	retlw	110	;'n'
   334  005F  3464               	retlw	100	;'d'
   335  0060  3469               	retlw	105	;'i'
   336  0061  346E               	retlw	110	;'n'
   337  0062  3467               	retlw	103	;'g'
   338  0063  3420               	retlw	32	;' '
   339  0064  3443               	retlw	67	;'C'
   340  0065  346F               	retlw	111	;'o'
   341  0066  346D               	retlw	109	;'m'
   342  0067  3470               	retlw	112	;'p'
   343  0068  346C               	retlw	108	;'l'
   344  0069  3465               	retlw	101	;'e'
   345  006A  3474               	retlw	116	;'t'
   346  006B  3465               	retlw	101	;'e'
   347  006C  3473               	retlw	115	;'s'
   348  006D  3400               	retlw	0
   349  006E                     STR_1:
   350  006E  3457               	retlw	87	;'W'
   351  006F  3469               	retlw	105	;'i'
   352  0070  346E               	retlw	110	;'n'
   353  0071  3464               	retlw	100	;'d'
   354  0072  3469               	retlw	105	;'i'
   355  0073  346E               	retlw	110	;'n'
   356  0074  3467               	retlw	103	;'g'
   357  0075  3420               	retlw	32	;' '
   358  0076  3453               	retlw	83	;'S'
   359  0077  3474               	retlw	116	;'t'
   360  0078  3461               	retlw	97	;'a'
   361  0079  3472               	retlw	114	;'r'
   362  007A  3474               	retlw	116	;'t'
   363  007B  3473               	retlw	115	;'s'
   364  007C  3400               	retlw	0
   365  007D                     STR_8:
   366  007D  3442               	retlw	66	;'B'
   367  007E  346F               	retlw	111	;'o'
   368  007F  3462               	retlw	98	;'b'
   369  0080  3462               	retlw	98	;'b'
   370  0081  3469               	retlw	105	;'i'
   371  0082  346E               	retlw	110	;'n'
   372  0083  3420               	retlw	32	;' '
   373  0084  3453               	retlw	83	;'S'
   374  0085  3469               	retlw	105	;'i'
   375  0086  347A               	retlw	122	;'z'
   376  0087  3465               	retlw	101	;'e'
   377  0088  343A               	retlw	58	;':'
   378  0089  3420               	retlw	32	;' '
   379  008A  3400               	retlw	0
   380  008B                     STR_7:
   381  008B  3443               	retlw	67	;'C'
   382  008C  346F               	retlw	111	;'o'
   383  008D  3469               	retlw	105	;'i'
   384  008E  346C               	retlw	108	;'l'
   385  008F  3420               	retlw	32	;' '
   386  0090  3453               	retlw	83	;'S'
   387  0091  3469               	retlw	105	;'i'
   388  0092  347A               	retlw	122	;'z'
   389  0093  3465               	retlw	101	;'e'
   390  0094  343A               	retlw	58	;':'
   391  0095  3420               	retlw	32	;' '
   392  0096  3400               	retlw	0
   393  0097                     STR_9:
   394  0097  344E               	retlw	78	;'N'
   395  0098  346F               	retlw	111	;'o'
   396  0099  342E               	retlw	46	;'.'
   397  009A  3420               	retlw	32	;' '
   398  009B  3454               	retlw	84	;'T'
   399  009C  3475               	retlw	117	;'u'
   400  009D  3472               	retlw	114	;'r'
   401  009E  346E               	retlw	110	;'n'
   402  009F  3473               	retlw	115	;'s'
   403  00A0  343A               	retlw	58	;':'
   404  00A1  3420               	retlw	32	;' '
   405  00A2  3400               	retlw	0
   406                           
   407                           	psect	cinit
   408  07E2                     start_initialization:	
   409                           ; #config settings
   410                           
   411  07E2                     __initialization:
   412                           
   413                           ; Initialize objects allocated to BANK0
   414  07E2  1383               	bcf	3,7	;select IRP bank0
   415  07E3  3043               	movlw	low (__pdataBANK0+16)
   416  07E4  00FD               	movwf	btemp+-1
   417  07E5  300F               	movlw	high __pidataBANK0
   418  07E6  00FE               	movwf	btemp
   419  07E7  30B2               	movlw	low __pidataBANK0
   420  07E8  00FF               	movwf	btemp+1
   421  07E9  3033               	movlw	low __pdataBANK0
   422  07EA  0084               	movwf	4
   423  07EB  120A  118A  20AE  120A  118A  	fcall	init_ram0
   424                           
   425                           ; Clear objects allocated to BANK0
   426  07F0  01C3               	clrf	__pbssBANK0& (0+127)
   427  07F1  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   428  07F2  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   429  07F3  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   430  07F4  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   431  07F5  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   432  07F6  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   433  07F7  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   434  07F8  01CB               	clrf	(__pbssBANK0+8)& (0+127)
   435  07F9  01CC               	clrf	(__pbssBANK0+9)& (0+127)
   436  07FA  01CD               	clrf	(__pbssBANK0+10)& (0+127)
   437  07FB  01CE               	clrf	(__pbssBANK0+11)& (0+127)
   438  07FC                     end_of_initialization:	
   439                           ;End of C runtime variable initialization code
   440                           
   441  07FC                     __end_of__initialization:
   442  07FC  0183               	clrf	3
   443  07FD  120A  118A  2B73   	ljmp	_main	;jump to C main() function
   444                           
   445                           	psect	bssBANK0
   446  0043                     __pbssBANK0:
   447  0043                     _winding_time:
   448  0043                     	ds	2
   449  0045                     _turn_time:
   450  0045                     	ds	2
   451  0047                     _no_turns:
   452  0047                     	ds	2
   453  0049                     _bobbin_size:
   454  0049                     	ds	2
   455  004B                     _coil_size:
   456  004B                     	ds	2
   457  004D                     _colloc:
   458  004D                     	ds	1
   459  004E                     _rowloc:
   460  004E                     	ds	1
   461                           
   462                           	psect	dataBANK0
   463  0033                     __pdataBANK0:
   464  0033                     _keypad:
   465  0033                     	ds	16
   466                           
   467                           	psect	inittext
   468  00AA                     init_fetch0:	
   469                           ;	Called with low address in FSR and high address in W
   470                           
   471  00AA  087E               	movf	btemp,w
   472  00AB  008A               	movwf	10
   473  00AC  087F               	movf	btemp+1,w
   474  00AD  0082               	movwf	2
   475  00AE                     init_ram0:	
   476                           ;Called with:
   477                           ;	high address of idata address in btemp 
   478                           ;	low address of idata address in btemp+1 
   479                           ;	low address of data in FSR
   480                           ;	high address + 1 of data in btemp-1
   481                           
   482  00AE  120A  118A  20AA  120A  118A  	fcall	init_fetch0
   483  00B3  0080               	movwf	0
   484  00B4  0A84               	incf	4,f
   485  00B5  0804               	movf	4,w
   486  00B6  067D               	xorwf	btemp+-1,w
   487  00B7  1903               	btfsc	3,2
   488  00B8  3400               	retlw	0
   489  00B9  0AFF               	incf	btemp+1,f
   490  00BA  1903               	btfsc	3,2
   491  00BB  0AFE               	incf	btemp,f
   492  00BC  28AE               	goto	init_ram0
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:
   496  0070                     ?_LCD_init:
   497  0070                     ?_keyinit:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ??_keyinit:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_fetch_sizes:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_lut:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ??_lut:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_display_data:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_LCD_cmd:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ??_LCD_cmd:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_show:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_LCD_dat:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_LCD_dat:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_key:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??_key:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?___wmul:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?___awdiv:	
   543                           ; 2 bytes @ 0x0
   544                           
   545  0070                     ?___awmod:	
   546                           ; 2 bytes @ 0x0
   547                           
   548  0070                     ?___lwdiv:	
   549                           ; 2 bytes @ 0x0
   550                           
   551  0070                     ?___lwmod:	
   552                           ; 2 bytes @ 0x0
   553                           
   554  0070                     ___wmul@multiplier:	
   555                           ; 2 bytes @ 0x0
   556                           
   557  0070                     ___awdiv@divisor:	
   558                           ; 2 bytes @ 0x0
   559                           
   560  0070                     ___awmod@divisor:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     ___lwdiv@divisor:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     ___lwmod@divisor:	
   567                           ; 2 bytes @ 0x0
   568                           
   569                           
   570                           ; 2 bytes @ 0x0
   571  0070                     	ds	2
   572  0072                     LCD_cmd@cmd:
   573  0072                     LCD_dat@data:	
   574                           ; 1 bytes @ 0x2
   575                           
   576  0072                     ___wmul@multiplicand:	
   577                           ; 1 bytes @ 0x2
   578                           
   579  0072                     ___awdiv@dividend:	
   580                           ; 2 bytes @ 0x2
   581                           
   582  0072                     ___awmod@dividend:	
   583                           ; 2 bytes @ 0x2
   584                           
   585  0072                     ___lwdiv@dividend:	
   586                           ; 2 bytes @ 0x2
   587                           
   588  0072                     ___lwmod@dividend:	
   589                           ; 2 bytes @ 0x2
   590                           
   591                           
   592                           ; 2 bytes @ 0x2
   593  0072                     	ds	1
   594  0073                     ??_LCD_init:
   595  0073                     ??_show:	
   596                           ; 1 bytes @ 0x3
   597                           
   598                           
   599                           ; 1 bytes @ 0x3
   600  0073                     	ds	1
   601  0074                     ??___wmul:
   602  0074                     ??___awdiv:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0074                     ??___awmod:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0074                     ??___lwdiv:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0074                     ??___lwmod:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0074                     show@s:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0074                     ___wmul@product:	
   618                           ; 1 bytes @ 0x4
   619                           
   620                           
   621                           ; 2 bytes @ 0x4
   622  0074                     	ds	1
   623  0075                     ___awdiv@counter:
   624  0075                     ___awmod@counter:	
   625                           ; 1 bytes @ 0x5
   626                           
   627  0075                     ___lwmod@counter:	
   628                           ; 1 bytes @ 0x5
   629                           
   630  0075                     ___lwdiv@quotient:	
   631                           ; 1 bytes @ 0x5
   632                           
   633                           
   634                           ; 2 bytes @ 0x5
   635  0075                     	ds	1
   636  0076                     ??_fetch_sizes:
   637  0076                     ?_fn_winding_time:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0076                     ___awdiv@sign:	
   641                           ; 2 bytes @ 0x6
   642                           
   643  0076                     ___awmod@sign:	
   644                           ; 1 bytes @ 0x6
   645                           
   646  0076                     fn_winding_time@a:	
   647                           ; 1 bytes @ 0x6
   648                           
   649                           
   650                           ; 2 bytes @ 0x6
   651  0076                     	ds	1
   652  0077                     ___lwdiv@counter:
   653  0077                     ___awdiv@quotient:	
   654                           ; 1 bytes @ 0x7
   655                           
   656                           
   657                           ; 2 bytes @ 0x7
   658  0077                     	ds	1
   659  0078                     fn_winding_time@b:
   660                           
   661                           ; 2 bytes @ 0x8
   662  0078                     	ds	1
   663  0079                     ?_LCD_num:
   664  0079                     fetch_sizes@i:	
   665                           ; 1 bytes @ 0x9
   666                           
   667  0079                     LCD_num@val:	
   668                           ; 2 bytes @ 0x9
   669                           
   670                           
   671                           ; 2 bytes @ 0x9
   672  0079                     	ds	1
   673  007A                     fn_winding_time@c:
   674                           
   675                           ; 2 bytes @ 0xA
   676  007A                     	ds	1
   677  007B                     ??_display_data:
   678  007B                     ??_LCD_num:	
   679                           ; 1 bytes @ 0xB
   680                           
   681                           
   682                           ; 1 bytes @ 0xB
   683  007B                     	ds	1
   684  007C                     ??_fn_winding_time:
   685                           
   686                           ; 1 bytes @ 0xC
   687  007C                     	ds	2
   688                           
   689                           	psect	cstackBANK0
   690  0020                     __pcstackBANK0:
   691  0020                     fn_winding_time@d:
   692  0020                     LCD_num@digit4:	
   693                           ; 2 bytes @ 0x0
   694                           
   695                           
   696                           ; 2 bytes @ 0x0
   697  0020                     	ds	2
   698  0022                     LCD_num@result:
   699  0022                     _fn_winding_time$746:	
   700                           ; 2 bytes @ 0x2
   701                           
   702                           
   703                           ; 2 bytes @ 0x2
   704  0022                     	ds	2
   705  0024                     LCD_num@digit3:
   706                           
   707                           ; 2 bytes @ 0x4
   708  0024                     	ds	2
   709  0026                     LCD_num@digit1:
   710                           
   711                           ; 2 bytes @ 0x6
   712  0026                     	ds	2
   713  0028                     LCD_num@digit2:
   714                           
   715                           ; 2 bytes @ 0x8
   716  0028                     	ds	2
   717  002A                     LCD_num@result1:
   718                           
   719                           ; 2 bytes @ 0xA
   720  002A                     	ds	2
   721  002C                     LCD_num@remainder:
   722                           
   723                           ; 2 bytes @ 0xC
   724  002C                     	ds	2
   725  002E                     ??_main:
   726                           
   727                           ; 1 bytes @ 0xE
   728  002E                     	ds	3
   729  0031                     _main$745:
   730                           
   731                           ; 2 bytes @ 0x11
   732  0031                     	ds	2
   733                           
   734                           	psect	maintext
   735  0373                     __pmaintext:	
   736 ;;
   737 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   738 ;;
   739 ;; *************** function _main *****************
   740 ;; Defined at:
   741 ;;		line 48 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  i               2    0        unsigned int 
   746 ;;  b               1    0        unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : B00/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       2       0       0       0
   758 ;;      Temps:          0       3       0       0       0
   759 ;;      Totals:         0       5       0       0       0
   760 ;;Total ram usage:        5 bytes
   761 ;; Hardware stack levels required when called: 3
   762 ;; This function calls:
   763 ;;		_LCD_cmd
   764 ;;		_LCD_init
   765 ;;		_LCD_num
   766 ;;		___awdiv
   767 ;;		_display_data
   768 ;;		_fetch_sizes
   769 ;;		_fn_winding_time
   770 ;;		_keyinit
   771 ;;		_lut
   772 ;;		_show
   773 ;; This function is called by:
   774 ;;		Startup code after reset
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           
   779                           ;psect for function _main
   780  0373                     _main:
   781  0373                     l1689:	
   782                           ;incstack = 0
   783                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   784                           
   785                           
   786                           ;main.c: 50:     unsigned int i;;main.c: 51:     TRISB=0;
   787  0373  1683               	bsf	3,5	;RP0=1, select bank1
   788  0374  1303               	bcf	3,6	;RP1=0, select bank1
   789  0375  0186               	clrf	6	;volatile
   790                           
   791                           ;main.c: 52:     TRISC=0;
   792  0376  0187               	clrf	7	;volatile
   793                           
   794                           ;main.c: 53:     PORTD = 0;
   795  0377  1283               	bcf	3,5	;RP0=0, select bank0
   796  0378  1303               	bcf	3,6	;RP1=0, select bank0
   797  0379  0188               	clrf	8	;volatile
   798  037A                     l1691:
   799                           
   800                           ;main.c: 54:     LCD_init();
   801  037A  120A  158A  27C2  120A  118A  	fcall	_LCD_init
   802  037F                     l1693:
   803                           
   804                           ;main.c: 55:     keyinit();
   805  037F  120A  158A  27AA  120A  118A  	fcall	_keyinit
   806  0384                     l1695:
   807                           
   808                           ;main.c: 59:     {;main.c: 60:         fetch_sizes();
   809  0384  120A  118A  2419  120A  118A  	fcall	_fetch_sizes
   810  0389                     l1697:
   811                           
   812                           ;main.c: 61:         lut();
   813  0389  120A  118A  20E2  120A  118A  	fcall	_lut
   814  038E                     l1699:
   815                           
   816                           ;main.c: 62:         winding_time = fn_winding_time(bobbin_size, turn_time, no_turns);
   817  038E  1283               	bcf	3,5	;RP0=0, select bank0
   818  038F  1303               	bcf	3,6	;RP1=0, select bank0
   819  0390  084A               	movf	_bobbin_size+1,w
   820  0391  00F7               	movwf	fn_winding_time@a+1
   821  0392  0849               	movf	_bobbin_size,w
   822  0393  00F6               	movwf	fn_winding_time@a
   823  0394  0846               	movf	_turn_time+1,w
   824  0395  00F9               	movwf	fn_winding_time@b+1
   825  0396  0845               	movf	_turn_time,w
   826  0397  00F8               	movwf	fn_winding_time@b
   827  0398  0848               	movf	_no_turns+1,w
   828  0399  00FB               	movwf	fn_winding_time@c+1
   829  039A  0847               	movf	_no_turns,w
   830  039B  00FA               	movwf	fn_winding_time@c
   831  039C  120A  118A  2107  120A  118A  	fcall	_fn_winding_time
   832  03A1  0877               	movf	?_fn_winding_time+1,w
   833  03A2  1283               	bcf	3,5	;RP0=0, select bank0
   834  03A3  1303               	bcf	3,6	;RP1=0, select bank0
   835  03A4  00C4               	movwf	_winding_time+1
   836  03A5  0876               	movf	?_fn_winding_time,w
   837  03A6  00C3               	movwf	_winding_time
   838  03A7                     l1701:
   839                           
   840                           ;main.c: 64:         display_data();
   841  03A7  120A  118A  2308  120A  118A  	fcall	_display_data
   842  03AC                     l1703:
   843                           
   844                           ;main.c: 65:         LCD_cmd(0x01);
   845  03AC  3001               	movlw	1
   846  03AD  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
   847  03B2                     l1705:
   848                           
   849                           ;main.c: 66:         LCD_cmd(0x80);
   850  03B2  3080               	movlw	128
   851  03B3  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
   852  03B8                     l1707:
   853                           
   854                           ;main.c: 67:         show("Winding Starts");
   855  03B8  3066               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   856  03B9  120A  158A  27E1  120A  118A  	fcall	_show
   857  03BE                     l1709:
   858                           
   859                           ;main.c: 68:         RB0 = 1;
   860  03BE  1283               	bcf	3,5	;RP0=0, select bank0
   861  03BF  1303               	bcf	3,6	;RP1=0, select bank0
   862  03C0  1406               	bsf	6,0	;volatile
   863  03C1                     l1711:
   864                           
   865                           ;main.c: 70:         _delay((unsigned long)((3000)*(20000000/4000.0)));
   866  03C1  304D               	movlw	77
   867  03C2  1283               	bcf	3,5	;RP0=0, select bank0
   868  03C3  1303               	bcf	3,6	;RP1=0, select bank0
   869  03C4  00B0               	movwf	??_main+2
   870  03C5  3019               	movlw	25
   871  03C6  00AF               	movwf	??_main+1
   872  03C7  304F               	movlw	79
   873  03C8  00AE               	movwf	??_main
   874  03C9                     u2197:
   875  03C9  0BAE               	decfsz	??_main,f
   876  03CA  2BC9               	goto	u2197
   877  03CB  0BAF               	decfsz	??_main+1,f
   878  03CC  2BC9               	goto	u2197
   879  03CD  0BB0               	decfsz	??_main+2,f
   880  03CE  2BC9               	goto	u2197
   881  03CF                     l1713:
   882                           
   883                           ;main.c: 71:         RB0 = 0;
   884  03CF  1283               	bcf	3,5	;RP0=0, select bank0
   885  03D0  1303               	bcf	3,6	;RP1=0, select bank0
   886  03D1  1006               	bcf	6,0	;volatile
   887  03D2                     l1715:
   888                           
   889                           ;main.c: 72:         RB1 = 1;
   890  03D2  1486               	bsf	6,1	;volatile
   891  03D3                     l1717:
   892                           
   893                           ;main.c: 73:         LCD_cmd(0x01);
   894  03D3  3001               	movlw	1
   895  03D4  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
   896  03D9                     l1719:
   897                           
   898                           ;main.c: 74:         LCD_cmd(0x80);
   899  03D9  3080               	movlw	128
   900  03DA  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
   901  03DF                     l1721:
   902                           
   903                           ;main.c: 75:         show("Winding Completes");
   904  03DF  3054               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   905  03E0  120A  158A  27E1  120A  118A  	fcall	_show
   906  03E5                     l1723:
   907                           
   908                           ;main.c: 76:         LCD_cmd(0x94);
   909  03E5  3094               	movlw	148
   910  03E6  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
   911  03EB                     l1725:
   912                           
   913                           ;main.c: 77:         show("Total Time Taken:");
   914  03EB  3042               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   915  03EC  120A  158A  27E1  120A  118A  	fcall	_show
   916  03F1                     l1727:
   917                           
   918                           ;main.c: 78:         LCD_cmd(0xD4);
   919  03F1  30D4               	movlw	212
   920  03F2  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
   921  03F7                     l1729:
   922                           
   923                           ;main.c: 79:         LCD_num((winding_time/60));
   924  03F7  303C               	movlw	60
   925  03F8  00F0               	movwf	___awdiv@divisor
   926  03F9  3000               	movlw	0
   927  03FA  00F1               	movwf	___awdiv@divisor+1
   928  03FB  1283               	bcf	3,5	;RP0=0, select bank0
   929  03FC  1303               	bcf	3,6	;RP1=0, select bank0
   930  03FD  0844               	movf	_winding_time+1,w
   931  03FE  00F3               	movwf	___awdiv@dividend+1
   932  03FF  0843               	movf	_winding_time,w
   933  0400  00F2               	movwf	___awdiv@dividend
   934  0401  120A  118A  22A1  120A  118A  	fcall	___awdiv
   935  0406  0871               	movf	?___awdiv+1,w
   936  0407  1283               	bcf	3,5	;RP0=0, select bank0
   937  0408  1303               	bcf	3,6	;RP1=0, select bank0
   938  0409  00B2               	movwf	_main$745+1
   939  040A  0870               	movf	?___awdiv,w
   940  040B  00B1               	movwf	_main$745
   941  040C                     l1731:
   942                           
   943                           ;main.c: 79:         LCD_num((winding_time/60));
   944  040C  0832               	movf	_main$745+1,w
   945  040D  00FA               	movwf	LCD_num@val+1
   946  040E  0831               	movf	_main$745,w
   947  040F  00F9               	movwf	LCD_num@val
   948  0410  120A  118A  2650  120A  118A  	fcall	_LCD_num
   949  0415                     l76:	
   950                           ;main.c: 80:         while(1);
   951                           
   952  0415                     l77:
   953  0415  2C15               	goto	l76
   954  0416  120A  118A  2800   	ljmp	start
   955  0419                     __end_of_main:
   956                           
   957                           	psect	text1
   958  00E2                     __ptext1:	
   959 ;; *************** function _lut *****************
   960 ;; Defined at:
   961 ;;		line 224 in file "main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0
   978 ;;      Totals:         0       0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           
   989                           ;psect for function _lut
   990  00E2                     _lut:
   991  00E2                     l1651:	
   992                           ;incstack = 0
   993                           ; Regs used in _lut: [wreg+status,2+status,0]
   994                           
   995                           
   996                           ;main.c: 226:     if (bobbin_size == 1)
   997  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   998  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   999  00E4  0349               	decf	_bobbin_size,w
  1000  00E5  044A               	iorwf	_bobbin_size+1,w
  1001  00E6  1D03               	btfss	3,2
  1002  00E7  28E9               	goto	u2161
  1003  00E8  28EA               	goto	u2160
  1004  00E9                     u2161:
  1005  00E9  28EF               	goto	l1655
  1006  00EA                     u2160:
  1007  00EA                     l1653:
  1008                           
  1009                           ;main.c: 227:     {;main.c: 228:         turn_time = 100;
  1010  00EA  3064               	movlw	100
  1011  00EB  00C5               	movwf	_turn_time
  1012  00EC  3000               	movlw	0
  1013  00ED  00C6               	movwf	_turn_time+1
  1014                           
  1015                           ;main.c: 229:     }
  1016  00EE  2906               	goto	l149
  1017  00EF                     l1655:
  1018  00EF  3002               	movlw	2
  1019  00F0  0649               	xorwf	_bobbin_size,w
  1020  00F1  044A               	iorwf	_bobbin_size+1,w
  1021  00F2  1D03               	btfss	3,2
  1022  00F3  28F5               	goto	u2171
  1023  00F4  28F6               	goto	u2170
  1024  00F5                     u2171:
  1025  00F5  28FB               	goto	l1659
  1026  00F6                     u2170:
  1027  00F6                     l1657:
  1028                           
  1029                           ;main.c: 231:     {;main.c: 232:         turn_time = 125;
  1030  00F6  307D               	movlw	125
  1031  00F7  00C5               	movwf	_turn_time
  1032  00F8  3000               	movlw	0
  1033  00F9  00C6               	movwf	_turn_time+1
  1034                           
  1035                           ;main.c: 233:     }
  1036  00FA  2906               	goto	l149
  1037  00FB                     l1659:
  1038  00FB  3003               	movlw	3
  1039  00FC  0649               	xorwf	_bobbin_size,w
  1040  00FD  044A               	iorwf	_bobbin_size+1,w
  1041  00FE  1D03               	btfss	3,2
  1042  00FF  2901               	goto	u2181
  1043  0100  2902               	goto	u2180
  1044  0101                     u2181:
  1045  0101  2906               	goto	l149
  1046  0102                     u2180:
  1047  0102                     l1661:
  1048                           
  1049                           ;main.c: 235:     {;main.c: 236:         turn_time = 150;
  1050  0102  3096               	movlw	150
  1051  0103  00C5               	movwf	_turn_time
  1052  0104  3000               	movlw	0
  1053  0105  00C6               	movwf	_turn_time+1
  1054  0106                     l149:
  1055  0106  0008               	return
  1056  0107                     __end_of_lut:
  1057                           
  1058                           	psect	text2
  1059  0FAA                     __ptext2:	
  1060 ;; *************** function _keyinit *****************
  1061 ;; Defined at:
  1062 ;;		line 135 in file "main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0
  1079 ;;      Totals:         0       0       0       0       0
  1080 ;;Total ram usage:        0 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_main
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _keyinit
  1091  0FAA                     _keyinit:
  1092  0FAA                     l1593:	
  1093                           ;incstack = 0
  1094                           ; Regs used in _keyinit: [wreg+status,2]
  1095                           
  1096                           
  1097                           ;main.c: 137:     TRISD=0XF0;
  1098  0FAA  30F0               	movlw	240
  1099  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  1101  0FAD  0088               	movwf	8	;volatile
  1102  0FAE                     l1595:
  1103                           
  1104                           ;main.c: 138:     PORTD=0X00;
  1105  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0FB0  0188               	clrf	8	;volatile
  1108  0FB1                     l99:
  1109  0FB1  0008               	return
  1110  0FB2                     __end_of_keyinit:
  1111                           
  1112                           	psect	text3
  1113  0107                     __ptext3:	
  1114 ;; *************** function _fn_winding_time *****************
  1115 ;; Defined at:
  1116 ;;		line 240 in file "main.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  a               2    6[COMMON] int 
  1119 ;;  b               2    8[COMMON] int 
  1120 ;;  c               2   10[COMMON] int 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  d               2    0[BANK0 ] int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2    6[COMMON] int 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         6       0       0       0       0
  1133 ;;      Locals:         0       4       0       0       0
  1134 ;;      Temps:          0       0       0       0       0
  1135 ;;      Totals:         6       4       0       0       0
  1136 ;;Total ram usage:       10 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 1
  1139 ;; This function calls:
  1140 ;;		___wmul
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _fn_winding_time
  1148  0107                     _fn_winding_time:
  1149  0107                     l1663:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _fn_winding_time: [wreg+status,2+status,0+pclath+cstack]
  1152                           
  1153                           
  1154                           ;main.c: 240: int fn_winding_time(int a, int b, int c);main.c: 241: {;main.c: 242:     i
      +                          nt d = a*b*c;
  1155  0107  0877               	movf	fn_winding_time@a+1,w
  1156  0108  00F1               	movwf	___wmul@multiplier+1
  1157  0109  0876               	movf	fn_winding_time@a,w
  1158  010A  00F0               	movwf	___wmul@multiplier
  1159  010B  0879               	movf	fn_winding_time@b+1,w
  1160  010C  00F3               	movwf	___wmul@multiplicand+1
  1161  010D  0878               	movf	fn_winding_time@b,w
  1162  010E  00F2               	movwf	___wmul@multiplicand
  1163  010F  120A  118A  20BD  120A  118A  	fcall	___wmul
  1164  0114  0871               	movf	?___wmul+1,w
  1165  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0117  00A3               	movwf	_fn_winding_time$746+1
  1168  0118  0870               	movf	?___wmul,w
  1169  0119  00A2               	movwf	_fn_winding_time$746
  1170                           
  1171                           ;main.c: 240: int fn_winding_time(int a, int b, int c);main.c: 241: {;main.c: 242:     i
      +                          nt d = a*b*c;
  1172  011A  0823               	movf	_fn_winding_time$746+1,w
  1173  011B  00F1               	movwf	___wmul@multiplier+1
  1174  011C  0822               	movf	_fn_winding_time$746,w
  1175  011D  00F0               	movwf	___wmul@multiplier
  1176  011E  087B               	movf	fn_winding_time@c+1,w
  1177  011F  00F3               	movwf	___wmul@multiplicand+1
  1178  0120  087A               	movf	fn_winding_time@c,w
  1179  0121  00F2               	movwf	___wmul@multiplicand
  1180  0122  120A  118A  20BD  120A  118A  	fcall	___wmul
  1181  0127  0871               	movf	?___wmul+1,w
  1182  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1184  012A  00A1               	movwf	fn_winding_time@d+1
  1185  012B  0870               	movf	?___wmul,w
  1186  012C  00A0               	movwf	fn_winding_time@d
  1187  012D                     l1665:
  1188                           
  1189                           ;main.c: 243:     return d;
  1190  012D  0821               	movf	fn_winding_time@d+1,w
  1191  012E  00F7               	movwf	?_fn_winding_time+1
  1192  012F  0820               	movf	fn_winding_time@d,w
  1193  0130  00F6               	movwf	?_fn_winding_time
  1194  0131                     l152:
  1195  0131  0008               	return
  1196  0132                     __end_of_fn_winding_time:
  1197                           
  1198                           	psect	text4
  1199  0419                     __ptext4:	
  1200 ;; *************** function _fetch_sizes *****************
  1201 ;; Defined at:
  1202 ;;		line 195 in file "main.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  i               2    9[COMMON] int 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         2       0       0       0       0
  1218 ;;      Temps:          3       0       0       0       0
  1219 ;;      Totals:         5       0       0       0       0
  1220 ;;Total ram usage:        5 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; Hardware stack levels required when called: 2
  1223 ;; This function calls:
  1224 ;;		_LCD_cmd
  1225 ;;		___wmul
  1226 ;;		_key
  1227 ;;		_show
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function _fetch_sizes
  1235  0419                     _fetch_sizes:
  1236  0419                     l1597:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _fetch_sizes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1239                           
  1240                           
  1241                           ;main.c: 197:     int i;;main.c: 199:     LCD_cmd(0x80);
  1242  0419  3080               	movlw	128
  1243  041A  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  1244  041F                     l1599:
  1245                           
  1246                           ;main.c: 200:     show("Enter the Coil Size:");
  1247  041F  3018               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1248  0420  120A  158A  27E1  120A  118A  	fcall	_show
  1249  0425                     l1601:
  1250                           
  1251                           ;main.c: 201:     for(i=0;i<2;i++)
  1252  0425  01F9               	clrf	fetch_sizes@i
  1253  0426  01FA               	clrf	fetch_sizes@i+1
  1254  0427                     l1607:
  1255                           
  1256                           ;main.c: 202:     {;main.c: 203:         coil_size = coil_size*10+key();
  1257  0427  120A  118A  2504  120A  118A  	fcall	_key
  1258  042C  00F6               	movwf	??_fetch_sizes
  1259  042D  01F7               	clrf	??_fetch_sizes+1
  1260  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1261  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0430  084C               	movf	_coil_size+1,w
  1263  0431  00F1               	movwf	___wmul@multiplier+1
  1264  0432  084B               	movf	_coil_size,w
  1265  0433  00F0               	movwf	___wmul@multiplier
  1266  0434  300A               	movlw	10
  1267  0435  00F2               	movwf	___wmul@multiplicand
  1268  0436  3000               	movlw	0
  1269  0437  00F3               	movwf	___wmul@multiplicand+1
  1270  0438  120A  118A  20BD  120A  118A  	fcall	___wmul
  1271  043D  0876               	movf	??_fetch_sizes,w
  1272  043E  0770               	addwf	?___wmul,w
  1273  043F  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0440  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0441  00CB               	movwf	_coil_size
  1276  0442  0877               	movf	??_fetch_sizes+1,w
  1277  0443  1803               	skipnc
  1278  0444  0A77               	incf	??_fetch_sizes+1,w
  1279  0445  0771               	addwf	?___wmul+1,w
  1280  0446  00CC               	movwf	_coil_size+1
  1281  0447                     l1609:
  1282                           
  1283                           ;main.c: 204:     }
  1284  0447  3001               	movlw	1
  1285  0448  07F9               	addwf	fetch_sizes@i,f
  1286  0449  1803               	skipnc
  1287  044A  0AFA               	incf	fetch_sizes@i+1,f
  1288  044B  3000               	movlw	0
  1289  044C  07FA               	addwf	fetch_sizes@i+1,f
  1290  044D                     l1611:
  1291  044D  087A               	movf	fetch_sizes@i+1,w
  1292  044E  3A80               	xorlw	128
  1293  044F  00FF               	movwf	btemp+1
  1294  0450  3080               	movlw	128
  1295  0451  027F               	subwf	btemp+1,w
  1296  0452  1D03               	skipz
  1297  0453  2C56               	goto	u2135
  1298  0454  3002               	movlw	2
  1299  0455  0279               	subwf	fetch_sizes@i,w
  1300  0456                     u2135:
  1301  0456  1C03               	skipc
  1302  0457  2C59               	goto	u2131
  1303  0458  2C5A               	goto	u2130
  1304  0459                     u2131:
  1305  0459  2C27               	goto	l1607
  1306  045A                     u2130:
  1307  045A                     l1613:
  1308                           
  1309                           ;main.c: 205:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1310  045A  301A               	movlw	26
  1311  045B  00F8               	movwf	??_fetch_sizes+2
  1312  045C  305E               	movlw	94
  1313  045D  00F7               	movwf	??_fetch_sizes+1
  1314  045E  306E               	movlw	110
  1315  045F  00F6               	movwf	??_fetch_sizes
  1316  0460                     u2207:
  1317  0460  0BF6               	decfsz	??_fetch_sizes,f
  1318  0461  2C60               	goto	u2207
  1319  0462  0BF7               	decfsz	??_fetch_sizes+1,f
  1320  0463  2C60               	goto	u2207
  1321  0464  0BF8               	decfsz	??_fetch_sizes+2,f
  1322  0465  2C60               	goto	u2207
  1323  0466  0000               	nop
  1324  0467                     l1615:
  1325                           
  1326                           ;main.c: 207:     LCD_cmd(0x80);
  1327  0467  3080               	movlw	128
  1328  0468  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  1329  046D                     l1617:
  1330                           
  1331                           ;main.c: 208:     show("Enter the Bobbin Size:");
  1332  046D  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1333  046E  120A  158A  27E1  120A  118A  	fcall	_show
  1334  0473                     l1619:
  1335                           
  1336                           ;main.c: 209:     for(i=0;i<1;i++)
  1337  0473  01F9               	clrf	fetch_sizes@i
  1338  0474  01FA               	clrf	fetch_sizes@i+1
  1339  0475                     l1625:
  1340                           
  1341                           ;main.c: 210:     {;main.c: 211:         bobbin_size = bobbin_size*10+key();
  1342  0475  120A  118A  2504  120A  118A  	fcall	_key
  1343  047A  00F6               	movwf	??_fetch_sizes
  1344  047B  01F7               	clrf	??_fetch_sizes+1
  1345  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1346  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1347  047E  084A               	movf	_bobbin_size+1,w
  1348  047F  00F1               	movwf	___wmul@multiplier+1
  1349  0480  0849               	movf	_bobbin_size,w
  1350  0481  00F0               	movwf	___wmul@multiplier
  1351  0482  300A               	movlw	10
  1352  0483  00F2               	movwf	___wmul@multiplicand
  1353  0484  3000               	movlw	0
  1354  0485  00F3               	movwf	___wmul@multiplicand+1
  1355  0486  120A  118A  20BD  120A  118A  	fcall	___wmul
  1356  048B  0876               	movf	??_fetch_sizes,w
  1357  048C  0770               	addwf	?___wmul,w
  1358  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1359  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1360  048F  00C9               	movwf	_bobbin_size
  1361  0490  0877               	movf	??_fetch_sizes+1,w
  1362  0491  1803               	skipnc
  1363  0492  0A77               	incf	??_fetch_sizes+1,w
  1364  0493  0771               	addwf	?___wmul+1,w
  1365  0494  00CA               	movwf	_bobbin_size+1
  1366  0495                     l1627:
  1367                           
  1368                           ;main.c: 212:     }
  1369  0495  3001               	movlw	1
  1370  0496  07F9               	addwf	fetch_sizes@i,f
  1371  0497  1803               	skipnc
  1372  0498  0AFA               	incf	fetch_sizes@i+1,f
  1373  0499  3000               	movlw	0
  1374  049A  07FA               	addwf	fetch_sizes@i+1,f
  1375  049B                     l1629:
  1376  049B  087A               	movf	fetch_sizes@i+1,w
  1377  049C  3A80               	xorlw	128
  1378  049D  00FF               	movwf	btemp+1
  1379  049E  3080               	movlw	128
  1380  049F  027F               	subwf	btemp+1,w
  1381  04A0  1D03               	skipz
  1382  04A1  2CA4               	goto	u2145
  1383  04A2  3001               	movlw	1
  1384  04A3  0279               	subwf	fetch_sizes@i,w
  1385  04A4                     u2145:
  1386  04A4  1C03               	skipc
  1387  04A5  2CA7               	goto	u2141
  1388  04A6  2CA8               	goto	u2140
  1389  04A7                     u2141:
  1390  04A7  2C75               	goto	l1625
  1391  04A8                     u2140:
  1392  04A8                     l1631:
  1393                           
  1394                           ;main.c: 213:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1395  04A8  301A               	movlw	26
  1396  04A9  00F8               	movwf	??_fetch_sizes+2
  1397  04AA  305E               	movlw	94
  1398  04AB  00F7               	movwf	??_fetch_sizes+1
  1399  04AC  306E               	movlw	110
  1400  04AD  00F6               	movwf	??_fetch_sizes
  1401  04AE                     u2217:
  1402  04AE  0BF6               	decfsz	??_fetch_sizes,f
  1403  04AF  2CAE               	goto	u2217
  1404  04B0  0BF7               	decfsz	??_fetch_sizes+1,f
  1405  04B1  2CAE               	goto	u2217
  1406  04B2  0BF8               	decfsz	??_fetch_sizes+2,f
  1407  04B3  2CAE               	goto	u2217
  1408  04B4  0000               	nop
  1409  04B5                     l1633:
  1410                           
  1411                           ;main.c: 215:     LCD_cmd(0x80);
  1412  04B5  3080               	movlw	128
  1413  04B6  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  1414  04BB                     l1635:
  1415                           
  1416                           ;main.c: 216:     show("Enter the No. Turns:");
  1417  04BB  302D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1418  04BC  120A  158A  27E1  120A  118A  	fcall	_show
  1419  04C1                     l1637:
  1420                           
  1421                           ;main.c: 217:     for(i=0;i<2;i++)
  1422  04C1  01F9               	clrf	fetch_sizes@i
  1423  04C2  01FA               	clrf	fetch_sizes@i+1
  1424  04C3                     l1643:
  1425                           
  1426                           ;main.c: 218:     {;main.c: 219:         no_turns = no_turns*10+key();
  1427  04C3  120A  118A  2504  120A  118A  	fcall	_key
  1428  04C8  00F6               	movwf	??_fetch_sizes
  1429  04C9  01F7               	clrf	??_fetch_sizes+1
  1430  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1431  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1432  04CC  0848               	movf	_no_turns+1,w
  1433  04CD  00F1               	movwf	___wmul@multiplier+1
  1434  04CE  0847               	movf	_no_turns,w
  1435  04CF  00F0               	movwf	___wmul@multiplier
  1436  04D0  300A               	movlw	10
  1437  04D1  00F2               	movwf	___wmul@multiplicand
  1438  04D2  3000               	movlw	0
  1439  04D3  00F3               	movwf	___wmul@multiplicand+1
  1440  04D4  120A  118A  20BD  120A  118A  	fcall	___wmul
  1441  04D9  0876               	movf	??_fetch_sizes,w
  1442  04DA  0770               	addwf	?___wmul,w
  1443  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1444  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1445  04DD  00C7               	movwf	_no_turns
  1446  04DE  0877               	movf	??_fetch_sizes+1,w
  1447  04DF  1803               	skipnc
  1448  04E0  0A77               	incf	??_fetch_sizes+1,w
  1449  04E1  0771               	addwf	?___wmul+1,w
  1450  04E2  00C8               	movwf	_no_turns+1
  1451  04E3                     l1645:
  1452                           
  1453                           ;main.c: 220:     }
  1454  04E3  3001               	movlw	1
  1455  04E4  07F9               	addwf	fetch_sizes@i,f
  1456  04E5  1803               	skipnc
  1457  04E6  0AFA               	incf	fetch_sizes@i+1,f
  1458  04E7  3000               	movlw	0
  1459  04E8  07FA               	addwf	fetch_sizes@i+1,f
  1460  04E9                     l1647:
  1461  04E9  087A               	movf	fetch_sizes@i+1,w
  1462  04EA  3A80               	xorlw	128
  1463  04EB  00FF               	movwf	btemp+1
  1464  04EC  3080               	movlw	128
  1465  04ED  027F               	subwf	btemp+1,w
  1466  04EE  1D03               	skipz
  1467  04EF  2CF2               	goto	u2155
  1468  04F0  3002               	movlw	2
  1469  04F1  0279               	subwf	fetch_sizes@i,w
  1470  04F2                     u2155:
  1471  04F2  1C03               	skipc
  1472  04F3  2CF5               	goto	u2151
  1473  04F4  2CF6               	goto	u2150
  1474  04F5                     u2151:
  1475  04F5  2CC3               	goto	l1643
  1476  04F6                     u2150:
  1477  04F6                     l1649:
  1478                           
  1479                           ;main.c: 221:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1480  04F6  301A               	movlw	26
  1481  04F7  00F8               	movwf	??_fetch_sizes+2
  1482  04F8  305E               	movlw	94
  1483  04F9  00F7               	movwf	??_fetch_sizes+1
  1484  04FA  306E               	movlw	110
  1485  04FB  00F6               	movwf	??_fetch_sizes
  1486  04FC                     u2227:
  1487  04FC  0BF6               	decfsz	??_fetch_sizes,f
  1488  04FD  2CFC               	goto	u2227
  1489  04FE  0BF7               	decfsz	??_fetch_sizes+1,f
  1490  04FF  2CFC               	goto	u2227
  1491  0500  0BF8               	decfsz	??_fetch_sizes+2,f
  1492  0501  2CFC               	goto	u2227
  1493  0502  0000               	nop
  1494  0503                     l141:
  1495  0503  0008               	return
  1496  0504                     __end_of_fetch_sizes:
  1497                           
  1498                           	psect	text5
  1499  0504                     __ptext5:	
  1500 ;; *************** function _key *****************
  1501 ;; Defined at:
  1502 ;;		line 141 in file "main.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      unsigned char 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       0       0       0       0
  1517 ;;      Locals:         0       0       0       0       0
  1518 ;;      Temps:          3       0       0       0       0
  1519 ;;      Totals:         3       0       0       0       0
  1520 ;;Total ram usage:        3 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_fetch_sizes
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _key
  1531  0504                     _key:
  1532  0504                     l1483:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _key: [wreg-fsr0h+status,2+status,0]
  1535                           
  1536                           
  1537                           ;main.c: 143:     PORTD=0X00;
  1538  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0505  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0506  0188               	clrf	8	;volatile
  1541  0507                     l102:	
  1542                           ;main.c: 144:     while(RD4&&RD5&&RD6&&RD7);
  1543                           
  1544  0507  1E08               	btfss	8,4	;volatile
  1545  0508  2D0A               	goto	u1521
  1546  0509  2D0B               	goto	u1520
  1547  050A                     u1521:
  1548  050A  2DCE               	goto	l107
  1549  050B                     u1520:
  1550  050B                     l1485:
  1551  050B  1E88               	btfss	8,5	;volatile
  1552  050C  2D0E               	goto	u1531
  1553  050D  2D0F               	goto	u1530
  1554  050E                     u1531:
  1555  050E  2DCE               	goto	l107
  1556  050F                     u1530:
  1557  050F                     l1487:
  1558  050F  1F08               	btfss	8,6	;volatile
  1559  0510  2D12               	goto	u1541
  1560  0511  2D13               	goto	u1540
  1561  0512                     u1541:
  1562  0512  2DCE               	goto	l107
  1563  0513                     u1540:
  1564  0513                     l1489:
  1565  0513  1B88               	btfsc	8,7	;volatile
  1566  0514  2D16               	goto	u1551
  1567  0515  2D17               	goto	u1550
  1568  0516                     u1551:
  1569  0516  2D07               	goto	l102
  1570  0517                     u1550:
  1571  0517  2DCE               	goto	l107
  1572  0518                     l1491:
  1573                           
  1574                           ;main.c: 147:             {;main.c: 148:             _delay((unsigned long)((100)*(20000
      +                          000/4000.0)));
  1575  0518  3003               	movlw	3
  1576  0519  00F2               	movwf	??_key+2
  1577  051A  308A               	movlw	138
  1578  051B  00F1               	movwf	??_key+1
  1579  051C  3055               	movlw	85
  1580  051D  00F0               	movwf	??_key
  1581  051E                     u2237:
  1582  051E  0BF0               	decfsz	??_key,f
  1583  051F  2D1E               	goto	u2237
  1584  0520  0BF1               	decfsz	??_key+1,f
  1585  0521  2D1E               	goto	u2237
  1586  0522  0BF2               	decfsz	??_key+2,f
  1587  0523  2D1E               	goto	u2237
  1588  0524  2D25               	nop2
  1589  0525                     l1493:
  1590                           
  1591                           ;main.c: 150:             RD0=0;
  1592  0525  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0526  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0527  1008               	bcf	8,0	;volatile
  1595  0528                     l1495:
  1596                           
  1597                           ;main.c: 151:             RD1=RD2=RD3=1;
  1598  0528  1588               	bsf	8,3	;volatile
  1599  0529  1988               	btfsc	8,3	;volatile
  1600  052A  2D2C               	goto	u1561
  1601  052B  2D30               	goto	u1560
  1602  052C                     u1561:
  1603  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1604  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1605  052E  1508               	bsf	8,2	;volatile
  1606  052F  2D33               	goto	u1574
  1607  0530                     u1560:
  1608  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0532  1108               	bcf	8,2	;volatile
  1611  0533                     u1574:
  1612  0533  1908               	btfsc	8,2	;volatile
  1613  0534  2D36               	goto	u1571
  1614  0535  2D3A               	goto	u1570
  1615  0536                     u1571:
  1616  0536  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0537  1303               	bcf	3,6	;RP1=0, select bank0
  1618  0538  1488               	bsf	8,1	;volatile
  1619  0539  2D3D               	goto	u1584
  1620  053A                     u1570:
  1621  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1622  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1623  053C  1088               	bcf	8,1	;volatile
  1624  053D                     u1584:
  1625  053D                     l1497:
  1626                           
  1627                           ;main.c: 152:             if(!RD4||!RD5||!RD6||!RD7)
  1628  053D  1E08               	btfss	8,4	;volatile
  1629  053E  2D40               	goto	u1591
  1630  053F  2D41               	goto	u1590
  1631  0540                     u1591:
  1632  0540  2D4D               	goto	l1505
  1633  0541                     u1590:
  1634  0541                     l1499:
  1635  0541  1E88               	btfss	8,5	;volatile
  1636  0542  2D44               	goto	u1601
  1637  0543  2D45               	goto	u1600
  1638  0544                     u1601:
  1639  0544  2D4D               	goto	l1505
  1640  0545                     u1600:
  1641  0545                     l1501:
  1642  0545  1F08               	btfss	8,6	;volatile
  1643  0546  2D48               	goto	u1611
  1644  0547  2D49               	goto	u1610
  1645  0548                     u1611:
  1646  0548  2D4D               	goto	l1505
  1647  0549                     u1610:
  1648  0549                     l1503:
  1649  0549  1B88               	btfsc	8,7	;volatile
  1650  054A  2D4C               	goto	u1621
  1651  054B  2D4D               	goto	u1620
  1652  054C                     u1621:
  1653  054C  2D4F               	goto	l109
  1654  054D                     u1620:
  1655  054D                     l1505:
  1656                           
  1657                           ;main.c: 153:                 {;main.c: 154:                     rowloc=0;
  1658  054D  01CE               	clrf	_rowloc
  1659                           
  1660                           ;main.c: 155:                     break;
  1661  054E  2DDE               	goto	l112
  1662  054F                     l109:	
  1663                           ;main.c: 156:                 }
  1664                           
  1665                           
  1666                           ;main.c: 157:             RD1=0;
  1667  054F  1088               	bcf	8,1	;volatile
  1668                           
  1669                           ;main.c: 158:             RD0=RD2=RD3=1;
  1670  0550  1588               	bsf	8,3	;volatile
  1671  0551  1988               	btfsc	8,3	;volatile
  1672  0552  2D54               	goto	u1631
  1673  0553  2D58               	goto	u1630
  1674  0554                     u1631:
  1675  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0556  1508               	bsf	8,2	;volatile
  1678  0557  2D5B               	goto	u1644
  1679  0558                     u1630:
  1680  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1681  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1682  055A  1108               	bcf	8,2	;volatile
  1683  055B                     u1644:
  1684  055B  1908               	btfsc	8,2	;volatile
  1685  055C  2D5E               	goto	u1641
  1686  055D  2D62               	goto	u1640
  1687  055E                     u1641:
  1688  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1689  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0560  1408               	bsf	8,0	;volatile
  1691  0561  2D65               	goto	u1654
  1692  0562                     u1640:
  1693  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0564  1008               	bcf	8,0	;volatile
  1696  0565                     u1654:
  1697                           
  1698                           ;main.c: 159:             if(!RD4||!RD5||!RD6||!RD7)
  1699  0565  1E08               	btfss	8,4	;volatile
  1700  0566  2D68               	goto	u1661
  1701  0567  2D69               	goto	u1660
  1702  0568                     u1661:
  1703  0568  2D75               	goto	l115
  1704  0569                     u1660:
  1705  0569                     l1507:
  1706  0569  1E88               	btfss	8,5	;volatile
  1707  056A  2D6C               	goto	u1671
  1708  056B  2D6D               	goto	u1670
  1709  056C                     u1671:
  1710  056C  2D75               	goto	l115
  1711  056D                     u1670:
  1712  056D                     l1509:
  1713  056D  1F08               	btfss	8,6	;volatile
  1714  056E  2D70               	goto	u1681
  1715  056F  2D71               	goto	u1680
  1716  0570                     u1681:
  1717  0570  2D75               	goto	l115
  1718  0571                     u1680:
  1719  0571                     l1511:
  1720  0571  1B88               	btfsc	8,7	;volatile
  1721  0572  2D74               	goto	u1691
  1722  0573  2D75               	goto	u1690
  1723  0574                     u1691:
  1724  0574  2D78               	goto	l113
  1725  0575                     u1690:
  1726  0575                     l115:
  1727                           
  1728                           ;main.c: 160:                 {;main.c: 161:                     rowloc=1;
  1729  0575  01CE               	clrf	_rowloc
  1730  0576  0ACE               	incf	_rowloc,f
  1731                           
  1732                           ;main.c: 162:                     break;
  1733  0577  2DDE               	goto	l112
  1734  0578                     l113:	
  1735                           ;main.c: 163:                 }
  1736                           
  1737                           
  1738                           ;main.c: 164:             RD2=0;
  1739  0578  1108               	bcf	8,2	;volatile
  1740                           
  1741                           ;main.c: 165:             RD1=RD0=RD3=1;
  1742  0579  1588               	bsf	8,3	;volatile
  1743  057A  1988               	btfsc	8,3	;volatile
  1744  057B  2D7D               	goto	u1701
  1745  057C  2D81               	goto	u1700
  1746  057D                     u1701:
  1747  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1748  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1749  057F  1408               	bsf	8,0	;volatile
  1750  0580  2D84               	goto	u1714
  1751  0581                     u1700:
  1752  0581  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0582  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0583  1008               	bcf	8,0	;volatile
  1755  0584                     u1714:
  1756  0584  1808               	btfsc	8,0	;volatile
  1757  0585  2D87               	goto	u1711
  1758  0586  2D8B               	goto	u1710
  1759  0587                     u1711:
  1760  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0589  1488               	bsf	8,1	;volatile
  1763  058A  2D8E               	goto	u1724
  1764  058B                     u1710:
  1765  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1766  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1767  058D  1088               	bcf	8,1	;volatile
  1768  058E                     u1724:
  1769                           
  1770                           ;main.c: 166:             if(!RD4||!RD5||!RD6||!RD7)
  1771  058E  1E08               	btfss	8,4	;volatile
  1772  058F  2D91               	goto	u1731
  1773  0590  2D92               	goto	u1730
  1774  0591                     u1731:
  1775  0591  2D9E               	goto	l1519
  1776  0592                     u1730:
  1777  0592                     l1513:
  1778  0592  1E88               	btfss	8,5	;volatile
  1779  0593  2D95               	goto	u1741
  1780  0594  2D96               	goto	u1740
  1781  0595                     u1741:
  1782  0595  2D9E               	goto	l1519
  1783  0596                     u1740:
  1784  0596                     l1515:
  1785  0596  1F08               	btfss	8,6	;volatile
  1786  0597  2D99               	goto	u1751
  1787  0598  2D9A               	goto	u1750
  1788  0599                     u1751:
  1789  0599  2D9E               	goto	l1519
  1790  059A                     u1750:
  1791  059A                     l1517:
  1792  059A  1B88               	btfsc	8,7	;volatile
  1793  059B  2D9D               	goto	u1761
  1794  059C  2D9E               	goto	u1760
  1795  059D                     u1761:
  1796  059D  2DA3               	goto	l116
  1797  059E                     u1760:
  1798  059E                     l1519:
  1799                           
  1800                           ;main.c: 167:                 {;main.c: 168:                     rowloc=2;
  1801  059E  3002               	movlw	2
  1802  059F  00F0               	movwf	??_key
  1803  05A0  0870               	movf	??_key,w
  1804  05A1  00CE               	movwf	_rowloc
  1805                           
  1806                           ;main.c: 169:                     break;
  1807  05A2  2DDE               	goto	l112
  1808  05A3                     l116:	
  1809                           ;main.c: 170:                 }
  1810                           
  1811                           
  1812                           ;main.c: 171:             RD3=0;
  1813  05A3  1188               	bcf	8,3	;volatile
  1814                           
  1815                           ;main.c: 172:             RD1=RD2=RD0=1;
  1816  05A4  1408               	bsf	8,0	;volatile
  1817  05A5  1808               	btfsc	8,0	;volatile
  1818  05A6  2DA8               	goto	u1771
  1819  05A7  2DAC               	goto	u1770
  1820  05A8                     u1771:
  1821  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1822  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1823  05AA  1508               	bsf	8,2	;volatile
  1824  05AB  2DAF               	goto	u1784
  1825  05AC                     u1770:
  1826  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1827  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1828  05AE  1108               	bcf	8,2	;volatile
  1829  05AF                     u1784:
  1830  05AF  1908               	btfsc	8,2	;volatile
  1831  05B0  2DB2               	goto	u1781
  1832  05B1  2DB6               	goto	u1780
  1833  05B2                     u1781:
  1834  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1835  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1836  05B4  1488               	bsf	8,1	;volatile
  1837  05B5  2DB9               	goto	u1794
  1838  05B6                     u1780:
  1839  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1840  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1841  05B8  1088               	bcf	8,1	;volatile
  1842  05B9                     u1794:
  1843                           
  1844                           ;main.c: 173:             if(!RD4||!RD5||!RD6||!RD7)
  1845  05B9  1E08               	btfss	8,4	;volatile
  1846  05BA  2DBC               	goto	u1801
  1847  05BB  2DBD               	goto	u1800
  1848  05BC                     u1801:
  1849  05BC  2DC9               	goto	l1527
  1850  05BD                     u1800:
  1851  05BD                     l1521:
  1852  05BD  1E88               	btfss	8,5	;volatile
  1853  05BE  2DC0               	goto	u1811
  1854  05BF  2DC1               	goto	u1810
  1855  05C0                     u1811:
  1856  05C0  2DC9               	goto	l1527
  1857  05C1                     u1810:
  1858  05C1                     l1523:
  1859  05C1  1F08               	btfss	8,6	;volatile
  1860  05C2  2DC4               	goto	u1821
  1861  05C3  2DC5               	goto	u1820
  1862  05C4                     u1821:
  1863  05C4  2DC9               	goto	l1527
  1864  05C5                     u1820:
  1865  05C5                     l1525:
  1866  05C5  1B88               	btfsc	8,7	;volatile
  1867  05C6  2DC8               	goto	u1831
  1868  05C7  2DC9               	goto	u1830
  1869  05C8                     u1831:
  1870  05C8  2DCE               	goto	l107
  1871  05C9                     u1830:
  1872  05C9                     l1527:
  1873                           
  1874                           ;main.c: 174:                 {;main.c: 175:                     rowloc=3;
  1875  05C9  3003               	movlw	3
  1876  05CA  00F0               	movwf	??_key
  1877  05CB  0870               	movf	??_key,w
  1878  05CC  00CE               	movwf	_rowloc
  1879                           
  1880                           ;main.c: 176:                     break;
  1881  05CD  2DDE               	goto	l112
  1882  05CE                     l107:	
  1883                           ;main.c: 179:             }
  1884                           
  1885                           
  1886                           ;main.c: 146:         while(!RD4||!RD5||!RD6||!RD7)
  1887  05CE  1E08               	btfss	8,4	;volatile
  1888  05CF  2DD1               	goto	u1841
  1889  05D0  2DD2               	goto	u1840
  1890  05D1                     u1841:
  1891  05D1  2D18               	goto	l1491
  1892  05D2                     u1840:
  1893  05D2                     l1529:
  1894  05D2  1E88               	btfss	8,5	;volatile
  1895  05D3  2DD5               	goto	u1851
  1896  05D4  2DD6               	goto	u1850
  1897  05D5                     u1851:
  1898  05D5  2D18               	goto	l1491
  1899  05D6                     u1850:
  1900  05D6                     l1531:
  1901  05D6  1F08               	btfss	8,6	;volatile
  1902  05D7  2DD9               	goto	u1861
  1903  05D8  2DDA               	goto	u1860
  1904  05D9                     u1861:
  1905  05D9  2D18               	goto	l1491
  1906  05DA                     u1860:
  1907  05DA                     l1533:
  1908  05DA  1F88               	btfss	8,7	;volatile
  1909  05DB  2DDD               	goto	u1871
  1910  05DC  2DDE               	goto	u1870
  1911  05DD                     u1871:
  1912  05DD  2D18               	goto	l1491
  1913  05DE                     u1870:
  1914  05DE                     l112:
  1915                           
  1916                           ;main.c: 180:        };main.c: 182:     if(RD4==0&&RD5!=0&&RD6!=0&&RD7!=0)
  1917  05DE  1A08               	btfsc	8,4	;volatile
  1918  05DF  2DE1               	goto	u1881
  1919  05E0  2DE2               	goto	u1880
  1920  05E1                     u1881:
  1921  05E1  2DF0               	goto	l122
  1922  05E2                     u1880:
  1923  05E2                     l1535:
  1924  05E2  1E88               	btfss	8,5	;volatile
  1925  05E3  2DE5               	goto	u1891
  1926  05E4  2DE6               	goto	u1890
  1927  05E5                     u1891:
  1928  05E5  2DF0               	goto	l122
  1929  05E6                     u1890:
  1930  05E6                     l1537:
  1931  05E6  1F08               	btfss	8,6	;volatile
  1932  05E7  2DE9               	goto	u1901
  1933  05E8  2DEA               	goto	u1900
  1934  05E9                     u1901:
  1935  05E9  2DF0               	goto	l122
  1936  05EA                     u1900:
  1937  05EA                     l1539:
  1938  05EA  1F88               	btfss	8,7	;volatile
  1939  05EB  2DED               	goto	u1911
  1940  05EC  2DEE               	goto	u1910
  1941  05ED                     u1911:
  1942  05ED  2DF0               	goto	l122
  1943  05EE                     u1910:
  1944  05EE                     l1541:
  1945                           
  1946                           ;main.c: 183:     colloc=0;
  1947  05EE  01CD               	clrf	_colloc
  1948  05EF  2E2D               	goto	l129
  1949  05F0                     l122:	
  1950                           ;main.c: 184:     else if(RD4!=0&&RD5==0&&RD6!=0&&RD7!=0)
  1951                           
  1952  05F0  1E08               	btfss	8,4	;volatile
  1953  05F1  2DF3               	goto	u1921
  1954  05F2  2DF4               	goto	u1920
  1955  05F3                     u1921:
  1956  05F3  2E03               	goto	l124
  1957  05F4                     u1920:
  1958  05F4                     l1543:
  1959  05F4  1A88               	btfsc	8,5	;volatile
  1960  05F5  2DF7               	goto	u1931
  1961  05F6  2DF8               	goto	u1930
  1962  05F7                     u1931:
  1963  05F7  2E03               	goto	l124
  1964  05F8                     u1930:
  1965  05F8                     l1545:
  1966  05F8  1F08               	btfss	8,6	;volatile
  1967  05F9  2DFB               	goto	u1941
  1968  05FA  2DFC               	goto	u1940
  1969  05FB                     u1941:
  1970  05FB  2E03               	goto	l124
  1971  05FC                     u1940:
  1972  05FC                     l1547:
  1973  05FC  1F88               	btfss	8,7	;volatile
  1974  05FD  2DFF               	goto	u1951
  1975  05FE  2E00               	goto	u1950
  1976  05FF                     u1951:
  1977  05FF  2E03               	goto	l124
  1978  0600                     u1950:
  1979  0600                     l1549:
  1980                           
  1981                           ;main.c: 185:     colloc=1;
  1982  0600  01CD               	clrf	_colloc
  1983  0601  0ACD               	incf	_colloc,f
  1984  0602  2E2D               	goto	l129
  1985  0603                     l124:	
  1986                           ;main.c: 186:     else if(RD4!=0&&RD5!=0&&RD6==0&&RD7!=0)
  1987                           
  1988  0603  1E08               	btfss	8,4	;volatile
  1989  0604  2E06               	goto	u1961
  1990  0605  2E07               	goto	u1960
  1991  0606                     u1961:
  1992  0606  2E18               	goto	l126
  1993  0607                     u1960:
  1994  0607                     l1551:
  1995  0607  1E88               	btfss	8,5	;volatile
  1996  0608  2E0A               	goto	u1971
  1997  0609  2E0B               	goto	u1970
  1998  060A                     u1971:
  1999  060A  2E18               	goto	l126
  2000  060B                     u1970:
  2001  060B                     l1553:
  2002  060B  1B08               	btfsc	8,6	;volatile
  2003  060C  2E0E               	goto	u1981
  2004  060D  2E0F               	goto	u1980
  2005  060E                     u1981:
  2006  060E  2E18               	goto	l126
  2007  060F                     u1980:
  2008  060F                     l1555:
  2009  060F  1F88               	btfss	8,7	;volatile
  2010  0610  2E12               	goto	u1991
  2011  0611  2E13               	goto	u1990
  2012  0612                     u1991:
  2013  0612  2E18               	goto	l126
  2014  0613                     u1990:
  2015  0613                     l1557:
  2016                           
  2017                           ;main.c: 187:     colloc=2;
  2018  0613  3002               	movlw	2
  2019  0614  00F0               	movwf	??_key
  2020  0615  0870               	movf	??_key,w
  2021  0616  00CD               	movwf	_colloc
  2022  0617  2E2D               	goto	l129
  2023  0618                     l126:	
  2024                           ;main.c: 188:     else if(RD4!=0&&RD5!=0&&RD6!=0&&RD7==0)
  2025                           
  2026  0618  1E08               	btfss	8,4	;volatile
  2027  0619  2E1B               	goto	u2001
  2028  061A  2E1C               	goto	u2000
  2029  061B                     u2001:
  2030  061B  2E2D               	goto	l125
  2031  061C                     u2000:
  2032  061C                     l1559:
  2033  061C  1E88               	btfss	8,5	;volatile
  2034  061D  2E1F               	goto	u2011
  2035  061E  2E20               	goto	u2010
  2036  061F                     u2011:
  2037  061F  2E2D               	goto	l125
  2038  0620                     u2010:
  2039  0620                     l1561:
  2040  0620  1F08               	btfss	8,6	;volatile
  2041  0621  2E23               	goto	u2021
  2042  0622  2E24               	goto	u2020
  2043  0623                     u2021:
  2044  0623  2E2D               	goto	l125
  2045  0624                     u2020:
  2046  0624                     l1563:
  2047  0624  1B88               	btfsc	8,7	;volatile
  2048  0625  2E27               	goto	u2031
  2049  0626  2E28               	goto	u2030
  2050  0627                     u2031:
  2051  0627  2E2D               	goto	l125
  2052  0628                     u2030:
  2053  0628                     l1565:
  2054                           
  2055                           ;main.c: 189:     colloc=3;
  2056  0628  3003               	movlw	3
  2057  0629  00F0               	movwf	??_key
  2058  062A  0870               	movf	??_key,w
  2059  062B  00CD               	movwf	_colloc
  2060  062C  2E2D               	goto	l129
  2061  062D                     l125:
  2062  062D                     l129:
  2063  062D  1E08               	btfss	8,4	;volatile
  2064  062E  2E30               	goto	u2041
  2065  062F  2E31               	goto	u2040
  2066  0630                     u2041:
  2067  0630  2E2D               	goto	l129
  2068  0631                     u2040:
  2069  0631                     l1567:
  2070  0631  1E88               	btfss	8,5	;volatile
  2071  0632  2E34               	goto	u2051
  2072  0633  2E35               	goto	u2050
  2073  0634                     u2051:
  2074  0634  2E2D               	goto	l129
  2075  0635                     u2050:
  2076  0635                     l1569:
  2077  0635  1F08               	btfss	8,6	;volatile
  2078  0636  2E38               	goto	u2061
  2079  0637  2E39               	goto	u2060
  2080  0638                     u2061:
  2081  0638  2E2D               	goto	l129
  2082  0639                     u2060:
  2083  0639                     l1571:
  2084  0639  1F88               	btfss	8,7	;volatile
  2085  063A  2E3C               	goto	u2071
  2086  063B  2E3D               	goto	u2070
  2087  063C                     u2071:
  2088  063C  2E2D               	goto	l129
  2089  063D                     u2070:
  2090  063D                     l1573:
  2091                           
  2092                           ;main.c: 192:     return (keypad[rowloc][colloc]);
  2093  063D  084E               	movf	_rowloc,w
  2094  063E  00F0               	movwf	??_key
  2095  063F  3002               	movlw	2
  2096  0640                     u2085:
  2097  0640  1003               	clrc
  2098  0641  0DF0               	rlf	??_key,f
  2099  0642  3EFF               	addlw	-1
  2100  0643  1D03               	skipz
  2101  0644  2E40               	goto	u2085
  2102  0645  3033               	movlw	(low (_keypad| 0))& (0+255)
  2103  0646  0770               	addwf	??_key,w
  2104  0647  00F1               	movwf	??_key+1
  2105  0648  084D               	movf	_colloc,w
  2106  0649  0771               	addwf	??_key+1,w
  2107  064A  00F2               	movwf	??_key+2
  2108  064B  0872               	movf	??_key+2,w
  2109  064C  0084               	movwf	4
  2110  064D  1383               	bcf	3,7	;select IRP bank0
  2111  064E  0800               	movf	0,w
  2112  064F                     l132:
  2113  064F  0008               	return
  2114  0650                     __end_of_key:
  2115                           
  2116                           	psect	text6
  2117  00BD                     __ptext6:	
  2118 ;; *************** function ___wmul *****************
  2119 ;; Defined at:
  2120 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  multiplier      2    0[COMMON] unsigned int 
  2123 ;;  multiplicand    2    2[COMMON] unsigned int 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  product         2    4[COMMON] unsigned int 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  2    0[COMMON] unsigned int 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         4       0       0       0       0
  2136 ;;      Locals:         2       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0
  2138 ;;      Totals:         6       0       0       0       0
  2139 ;;Total ram usage:        6 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_fetch_sizes
  2145 ;;		_fn_winding_time
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function ___wmul
  2151  00BD                     ___wmul:
  2152  00BD                     l1577:	
  2153                           ;incstack = 0
  2154                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2155                           
  2156  00BD  01F4               	clrf	___wmul@product
  2157  00BE  01F5               	clrf	___wmul@product+1
  2158  00BF                     l1579:
  2159  00BF  1C70               	btfss	___wmul@multiplier,0
  2160  00C0  28C2               	goto	u2091
  2161  00C1  28C3               	goto	u2090
  2162  00C2                     u2091:
  2163  00C2  28C9               	goto	l251
  2164  00C3                     u2090:
  2165  00C3                     l1581:
  2166  00C3  0872               	movf	___wmul@multiplicand,w
  2167  00C4  07F4               	addwf	___wmul@product,f
  2168  00C5  1803               	skipnc
  2169  00C6  0AF5               	incf	___wmul@product+1,f
  2170  00C7  0873               	movf	___wmul@multiplicand+1,w
  2171  00C8  07F5               	addwf	___wmul@product+1,f
  2172  00C9                     l251:
  2173  00C9  3001               	movlw	1
  2174  00CA                     u2105:
  2175  00CA  1003               	clrc
  2176  00CB  0DF2               	rlf	___wmul@multiplicand,f
  2177  00CC  0DF3               	rlf	___wmul@multiplicand+1,f
  2178  00CD  3EFF               	addlw	-1
  2179  00CE  1D03               	skipz
  2180  00CF  28CA               	goto	u2105
  2181  00D0                     l1583:
  2182  00D0  3001               	movlw	1
  2183  00D1                     u2115:
  2184  00D1  1003               	clrc
  2185  00D2  0CF1               	rrf	___wmul@multiplier+1,f
  2186  00D3  0CF0               	rrf	___wmul@multiplier,f
  2187  00D4  3EFF               	addlw	-1
  2188  00D5  1D03               	skipz
  2189  00D6  28D1               	goto	u2115
  2190  00D7                     l1585:
  2191  00D7  0870               	movf	___wmul@multiplier,w
  2192  00D8  0471               	iorwf	___wmul@multiplier+1,w
  2193  00D9  1D03               	btfss	3,2
  2194  00DA  28DC               	goto	u2121
  2195  00DB  28DD               	goto	u2120
  2196  00DC                     u2121:
  2197  00DC  28BF               	goto	l1579
  2198  00DD                     u2120:
  2199  00DD                     l1587:
  2200  00DD  0875               	movf	___wmul@product+1,w
  2201  00DE  00F1               	movwf	?___wmul+1
  2202  00DF  0874               	movf	___wmul@product,w
  2203  00E0  00F0               	movwf	?___wmul
  2204  00E1                     l253:
  2205  00E1  0008               	return
  2206  00E2                     __end_of___wmul:
  2207                           
  2208                           	psect	text7
  2209  0308                     __ptext7:	
  2210 ;; *************** function _display_data *****************
  2211 ;; Defined at:
  2212 ;;		line 291 in file "main.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          3       0       0       0       0
  2229 ;;      Totals:         3       0       0       0       0
  2230 ;;Total ram usage:        3 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 2
  2233 ;; This function calls:
  2234 ;;		_LCD_cmd
  2235 ;;		_LCD_num
  2236 ;;		_show
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _display_data
  2244  0308                     _display_data:
  2245  0308                     l1669:	
  2246                           ;incstack = 0
  2247                           ; Regs used in _display_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2248                           
  2249                           
  2250                           ;main.c: 293:         LCD_cmd(0x01);
  2251  0308  3001               	movlw	1
  2252  0309  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  2253                           
  2254                           ;main.c: 294:         LCD_cmd(0xC0);
  2255  030E  30C0               	movlw	192
  2256  030F  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  2257  0314                     l1671:
  2258                           
  2259                           ;main.c: 295:         show("Coil Size: ");
  2260  0314  3083               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2261  0315  120A  158A  27E1  120A  118A  	fcall	_show
  2262  031A                     l1673:
  2263                           
  2264                           ;main.c: 296:         LCD_cmd(0xCB);
  2265  031A  30CB               	movlw	203
  2266  031B  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  2267  0320                     l1675:
  2268                           
  2269                           ;main.c: 297:         LCD_num(coil_size);
  2270  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0321  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0322  084C               	movf	_coil_size+1,w
  2273  0323  00FA               	movwf	LCD_num@val+1
  2274  0324  084B               	movf	_coil_size,w
  2275  0325  00F9               	movwf	LCD_num@val
  2276  0326  120A  118A  2650  120A  118A  	fcall	_LCD_num
  2277  032B                     l1677:
  2278                           
  2279                           ;main.c: 298:         LCD_cmd(0x94);
  2280  032B  3094               	movlw	148
  2281  032C  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  2282                           
  2283                           ;main.c: 299:         show("Bobbin Size: ");
  2284  0331  3075               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2285  0332  120A  158A  27E1  120A  118A  	fcall	_show
  2286  0337                     l1679:
  2287                           
  2288                           ;main.c: 300:         LCD_cmd(0x9F);
  2289  0337  309F               	movlw	159
  2290  0338  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  2291  033D                     l1681:
  2292                           
  2293                           ;main.c: 301:         LCD_num(bobbin_size);
  2294  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2295  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2296  033F  084A               	movf	_bobbin_size+1,w
  2297  0340  00FA               	movwf	LCD_num@val+1
  2298  0341  0849               	movf	_bobbin_size,w
  2299  0342  00F9               	movwf	LCD_num@val
  2300  0343  120A  118A  2650  120A  118A  	fcall	_LCD_num
  2301  0348                     l1683:
  2302                           
  2303                           ;main.c: 302:         LCD_cmd(0xD4);
  2304  0348  30D4               	movlw	212
  2305  0349  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  2306  034E                     l1685:
  2307                           
  2308                           ;main.c: 303:         show("No. Turns: ");
  2309  034E  308F               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2310  034F  120A  158A  27E1  120A  118A  	fcall	_show
  2311                           
  2312                           ;main.c: 304:         LCD_cmd(0xDF);
  2313  0354  30DF               	movlw	223
  2314  0355  120A  118A  21B0  120A  118A  	fcall	_LCD_cmd
  2315                           
  2316                           ;main.c: 305:         LCD_num(no_turns);
  2317  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2318  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2319  035C  0848               	movf	_no_turns+1,w
  2320  035D  00FA               	movwf	LCD_num@val+1
  2321  035E  0847               	movf	_no_turns,w
  2322  035F  00F9               	movwf	LCD_num@val
  2323  0360  120A  118A  2650  120A  118A  	fcall	_LCD_num
  2324  0365                     l1687:
  2325                           
  2326                           ;main.c: 306:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  2327  0365  301A               	movlw	26
  2328  0366  00FD               	movwf	??_display_data+2
  2329  0367  305E               	movlw	94
  2330  0368  00FC               	movwf	??_display_data+1
  2331  0369  306E               	movlw	110
  2332  036A  00FB               	movwf	??_display_data
  2333  036B                     u2247:
  2334  036B  0BFB               	decfsz	??_display_data,f
  2335  036C  2B6B               	goto	u2247
  2336  036D  0BFC               	decfsz	??_display_data+1,f
  2337  036E  2B6B               	goto	u2247
  2338  036F  0BFD               	decfsz	??_display_data+2,f
  2339  0370  2B6B               	goto	u2247
  2340  0371  0000               	nop
  2341  0372                     l165:
  2342  0372  0008               	return
  2343  0373                     __end_of_display_data:
  2344                           
  2345                           	psect	text8
  2346  0FE1                     __ptext8:	
  2347 ;; *************** function _show *****************
  2348 ;; Defined at:
  2349 ;;		line 127 in file "main.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  s               1    wreg     PTR unsigned char 
  2352 ;;		 -> STR_9(12), STR_8(14), STR_7(12), STR_6(21), 
  2353 ;;		 -> STR_5(23), STR_4(21), STR_3(18), STR_2(18), 
  2354 ;;		 -> STR_1(15), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  s               1    4[COMMON] PTR unsigned char 
  2357 ;;		 -> STR_9(12), STR_8(14), STR_7(12), STR_6(21), 
  2358 ;;		 -> STR_5(23), STR_4(21), STR_3(18), STR_2(18), 
  2359 ;;		 -> STR_1(15), 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         1       0       0       0       0
  2371 ;;      Temps:          1       0       0       0       0
  2372 ;;      Totals:         2       0       0       0       0
  2373 ;;Total ram usage:        2 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 1
  2376 ;; This function calls:
  2377 ;;		_LCD_dat
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;;		_fetch_sizes
  2381 ;;		_display_data
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _show
  2387  0FE1                     _show:
  2388                           
  2389                           ;incstack = 0
  2390                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2391                           ;show@s stored from wreg
  2392  0FE1  00F4               	movwf	show@s
  2393  0FE2                     l1415:
  2394                           
  2395                           ;main.c: 127: void show(unsigned char *s);main.c: 128: {;main.c: 129:  while(*s)
  2396  0FE2  2FF3               	goto	l1421
  2397  0FE3                     l1417:
  2398                           
  2399                           ;main.c: 130:     {;main.c: 131:         LCD_dat(*s++);
  2400  0FE3  0874               	movf	show@s,w
  2401  0FE4  0084               	movwf	4
  2402  0FE5  120A  118A  2003  120A  158A  	fcall	stringdir
  2403  0FEA  120A  118A  21FC  120A  158A  	fcall	_LCD_dat
  2404  0FEF                     l1419:
  2405  0FEF  3001               	movlw	1
  2406  0FF0  00F3               	movwf	??_show
  2407  0FF1  0873               	movf	??_show,w
  2408  0FF2  07F4               	addwf	show@s,f
  2409  0FF3                     l1421:
  2410                           
  2411                           ;main.c: 129:  while(*s)
  2412  0FF3  0874               	movf	show@s,w
  2413  0FF4  0084               	movwf	4
  2414  0FF5  120A  118A  2003  120A  158A  	fcall	stringdir
  2415  0FFA  3A00               	xorlw	0
  2416  0FFB  1D03               	skipz
  2417  0FFC  2FFE               	goto	u1441
  2418  0FFD  2FFF               	goto	u1440
  2419  0FFE                     u1441:
  2420  0FFE  2FE3               	goto	l1417
  2421  0FFF                     u1440:
  2422  0FFF                     l96:
  2423  0FFF  0008               	return
  2424  1000                     __end_of_show:
  2425                           
  2426                           	psect	text9
  2427  0650                     __ptext9:	
  2428 ;; *************** function _LCD_num *****************
  2429 ;; Defined at:
  2430 ;;		line 246 in file "main.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  val             2    9[COMMON] unsigned int 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  remainder       2   12[BANK0 ] int 
  2435 ;;  result1         2   10[BANK0 ] int 
  2436 ;;  digit2          2    8[BANK0 ] int 
  2437 ;;  digit1          2    6[BANK0 ] int 
  2438 ;;  digit3          2    4[BANK0 ] int 
  2439 ;;  result          2    2[BANK0 ] int 
  2440 ;;  digit4          2    0[BANK0 ] int 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         2       0       0       0       0
  2451 ;;      Locals:         0      14       0       0       0
  2452 ;;      Temps:          0       0       0       0       0
  2453 ;;      Totals:         2      14       0       0       0
  2454 ;;Total ram usage:       16 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 1
  2457 ;; This function calls:
  2458 ;;		_LCD_dat
  2459 ;;		___awdiv
  2460 ;;		___awmod
  2461 ;;		___lwdiv
  2462 ;;		___lwmod
  2463 ;; This function is called by:
  2464 ;;		_main
  2465 ;;		_display_data
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _LCD_num
  2471  0650                     _LCD_num:
  2472  0650                     l1423:	
  2473                           ;incstack = 0
  2474                           ; Regs used in _LCD_num: [wreg+status,2+status,0+pclath+cstack]
  2475                           
  2476                           
  2477                           ;main.c: 246: void LCD_num (unsigned int val);main.c: 247: {;main.c: 248:     int remain
      +                          der, digit1, digit2, digit3, digit4, result, result1;;main.c: 249:     if (val<=9)
  2478  0650  3000               	movlw	0
  2479  0651  027A               	subwf	LCD_num@val+1,w
  2480  0652  300A               	movlw	10
  2481  0653  1903               	skipnz
  2482  0654  0279               	subwf	LCD_num@val,w
  2483  0655  1803               	skipnc
  2484  0656  2E58               	goto	u1451
  2485  0657  2E59               	goto	u1450
  2486  0658                     u1451:
  2487  0658  2E61               	goto	l1427
  2488  0659                     u1450:
  2489  0659                     l1425:
  2490                           
  2491                           ;main.c: 250:     {;main.c: 251:         LCD_dat (val+0x30);
  2492  0659  0879               	movf	LCD_num@val,w
  2493  065A  3E30               	addlw	48
  2494  065B  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2495                           
  2496                           ;main.c: 252:     }
  2497  0660  2FE1               	goto	l162
  2498  0661                     l1427:
  2499  0661  3000               	movlw	0
  2500  0662  027A               	subwf	LCD_num@val+1,w
  2501  0663  300A               	movlw	10
  2502  0664  1903               	skipnz
  2503  0665  0279               	subwf	LCD_num@val,w
  2504  0666  1C03               	skipc
  2505  0667  2E69               	goto	u1461
  2506  0668  2E6A               	goto	u1460
  2507  0669                     u1461:
  2508  0669  2EAE               	goto	l1441
  2509  066A                     u1460:
  2510  066A                     l1429:
  2511  066A  3000               	movlw	0
  2512  066B  027A               	subwf	LCD_num@val+1,w
  2513  066C  3064               	movlw	100
  2514  066D  1903               	skipnz
  2515  066E  0279               	subwf	LCD_num@val,w
  2516  066F  1803               	skipnc
  2517  0670  2E72               	goto	u1471
  2518  0671  2E73               	goto	u1470
  2519  0672                     u1471:
  2520  0672  2EAE               	goto	l1441
  2521  0673                     u1470:
  2522  0673                     l1431:
  2523                           
  2524                           ;main.c: 254:     {;main.c: 255:         remainder = val % 10;
  2525  0673  300A               	movlw	10
  2526  0674  00F0               	movwf	___lwmod@divisor
  2527  0675  3000               	movlw	0
  2528  0676  00F1               	movwf	___lwmod@divisor+1
  2529  0677  087A               	movf	LCD_num@val+1,w
  2530  0678  00F3               	movwf	___lwmod@dividend+1
  2531  0679  0879               	movf	LCD_num@val,w
  2532  067A  00F2               	movwf	___lwmod@dividend
  2533  067B  120A  118A  2132  120A  118A  	fcall	___lwmod
  2534  0680  0871               	movf	?___lwmod+1,w
  2535  0681  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0682  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0683  00AD               	movwf	LCD_num@remainder+1
  2538  0684  0870               	movf	?___lwmod,w
  2539  0685  00AC               	movwf	LCD_num@remainder
  2540  0686                     l1433:
  2541                           
  2542                           ;main.c: 256:         digit1 = remainder;
  2543  0686  082D               	movf	LCD_num@remainder+1,w
  2544  0687  00A7               	movwf	LCD_num@digit1+1
  2545  0688  082C               	movf	LCD_num@remainder,w
  2546  0689  00A6               	movwf	LCD_num@digit1
  2547  068A                     l1435:
  2548                           
  2549                           ;main.c: 257:         digit2 = val/10;
  2550  068A  300A               	movlw	10
  2551  068B  00F0               	movwf	___lwdiv@divisor
  2552  068C  3000               	movlw	0
  2553  068D  00F1               	movwf	___lwdiv@divisor+1
  2554  068E  087A               	movf	LCD_num@val+1,w
  2555  068F  00F3               	movwf	___lwdiv@dividend+1
  2556  0690  0879               	movf	LCD_num@val,w
  2557  0691  00F2               	movwf	___lwdiv@dividend
  2558  0692  120A  118A  216C  120A  118A  	fcall	___lwdiv
  2559  0697  0871               	movf	?___lwdiv+1,w
  2560  0698  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0699  1303               	bcf	3,6	;RP1=0, select bank0
  2562  069A  00A9               	movwf	LCD_num@digit2+1
  2563  069B  0870               	movf	?___lwdiv,w
  2564  069C  00A8               	movwf	LCD_num@digit2
  2565  069D                     l1437:
  2566                           
  2567                           ;main.c: 258:         LCD_dat(digit2+0x30);
  2568  069D  0828               	movf	LCD_num@digit2,w
  2569  069E  3E30               	addlw	48
  2570  069F  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2571  06A4                     l1439:
  2572                           
  2573                           ;main.c: 259:         LCD_dat(digit1+0x30);
  2574  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2575  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2576  06A6  0826               	movf	LCD_num@digit1,w
  2577  06A7  3E30               	addlw	48
  2578  06A8  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2579                           
  2580                           ;main.c: 260:     }
  2581  06AD  2FE1               	goto	l162
  2582  06AE                     l1441:
  2583  06AE  3000               	movlw	0
  2584  06AF  027A               	subwf	LCD_num@val+1,w
  2585  06B0  3064               	movlw	100
  2586  06B1  1903               	skipnz
  2587  06B2  0279               	subwf	LCD_num@val,w
  2588  06B3  1C03               	skipc
  2589  06B4  2EB6               	goto	u1481
  2590  06B5  2EB7               	goto	u1480
  2591  06B6                     u1481:
  2592  06B6  2F2E               	goto	l1459
  2593  06B7                     u1480:
  2594  06B7                     l1443:
  2595  06B7  3003               	movlw	3
  2596  06B8  027A               	subwf	LCD_num@val+1,w
  2597  06B9  30E8               	movlw	232
  2598  06BA  1903               	skipnz
  2599  06BB  0279               	subwf	LCD_num@val,w
  2600  06BC  1803               	skipnc
  2601  06BD  2EBF               	goto	u1491
  2602  06BE  2EC0               	goto	u1490
  2603  06BF                     u1491:
  2604  06BF  2F2E               	goto	l1459
  2605  06C0                     u1490:
  2606  06C0                     l1445:
  2607                           
  2608                           ;main.c: 262:     {;main.c: 263:         remainder = val % 10;
  2609  06C0  300A               	movlw	10
  2610  06C1  00F0               	movwf	___lwmod@divisor
  2611  06C2  3000               	movlw	0
  2612  06C3  00F1               	movwf	___lwmod@divisor+1
  2613  06C4  087A               	movf	LCD_num@val+1,w
  2614  06C5  00F3               	movwf	___lwmod@dividend+1
  2615  06C6  0879               	movf	LCD_num@val,w
  2616  06C7  00F2               	movwf	___lwmod@dividend
  2617  06C8  120A  118A  2132  120A  118A  	fcall	___lwmod
  2618  06CD  0871               	movf	?___lwmod+1,w
  2619  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2620  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2621  06D0  00AD               	movwf	LCD_num@remainder+1
  2622  06D1  0870               	movf	?___lwmod,w
  2623  06D2  00AC               	movwf	LCD_num@remainder
  2624                           
  2625                           ;main.c: 264:         result1 = val /10;
  2626  06D3  300A               	movlw	10
  2627  06D4  00F0               	movwf	___lwdiv@divisor
  2628  06D5  3000               	movlw	0
  2629  06D6  00F1               	movwf	___lwdiv@divisor+1
  2630  06D7  087A               	movf	LCD_num@val+1,w
  2631  06D8  00F3               	movwf	___lwdiv@dividend+1
  2632  06D9  0879               	movf	LCD_num@val,w
  2633  06DA  00F2               	movwf	___lwdiv@dividend
  2634  06DB  120A  118A  216C  120A  118A  	fcall	___lwdiv
  2635  06E0  0871               	movf	?___lwdiv+1,w
  2636  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2637  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2638  06E3  00AB               	movwf	LCD_num@result1+1
  2639  06E4  0870               	movf	?___lwdiv,w
  2640  06E5  00AA               	movwf	LCD_num@result1
  2641  06E6                     l1447:
  2642                           
  2643                           ;main.c: 265:         digit1 = remainder;
  2644  06E6  082D               	movf	LCD_num@remainder+1,w
  2645  06E7  00A7               	movwf	LCD_num@digit1+1
  2646  06E8  082C               	movf	LCD_num@remainder,w
  2647  06E9  00A6               	movwf	LCD_num@digit1
  2648  06EA                     l1449:
  2649                           
  2650                           ;main.c: 266:         remainder = result1%10;
  2651  06EA  300A               	movlw	10
  2652  06EB  00F0               	movwf	___awmod@divisor
  2653  06EC  3000               	movlw	0
  2654  06ED  00F1               	movwf	___awmod@divisor+1
  2655  06EE  082B               	movf	LCD_num@result1+1,w
  2656  06EF  00F3               	movwf	___awmod@dividend+1
  2657  06F0  082A               	movf	LCD_num@result1,w
  2658  06F1  00F2               	movwf	___awmod@dividend
  2659  06F2  120A  118A  2248  120A  118A  	fcall	___awmod
  2660  06F7  0871               	movf	?___awmod+1,w
  2661  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  2662  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  2663  06FA  00AD               	movwf	LCD_num@remainder+1
  2664  06FB  0870               	movf	?___awmod,w
  2665  06FC  00AC               	movwf	LCD_num@remainder
  2666                           
  2667                           ;main.c: 267:         digit2 = remainder;
  2668  06FD  082D               	movf	LCD_num@remainder+1,w
  2669  06FE  00A9               	movwf	LCD_num@digit2+1
  2670  06FF  082C               	movf	LCD_num@remainder,w
  2671  0700  00A8               	movwf	LCD_num@digit2
  2672  0701                     l1451:
  2673                           
  2674                           ;main.c: 268:         digit3 = result1/10;
  2675  0701  300A               	movlw	10
  2676  0702  00F0               	movwf	___awdiv@divisor
  2677  0703  3000               	movlw	0
  2678  0704  00F1               	movwf	___awdiv@divisor+1
  2679  0705  082B               	movf	LCD_num@result1+1,w
  2680  0706  00F3               	movwf	___awdiv@dividend+1
  2681  0707  082A               	movf	LCD_num@result1,w
  2682  0708  00F2               	movwf	___awdiv@dividend
  2683  0709  120A  118A  22A1  120A  118A  	fcall	___awdiv
  2684  070E  0871               	movf	?___awdiv+1,w
  2685  070F  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0710  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0711  00A5               	movwf	LCD_num@digit3+1
  2688  0712  0870               	movf	?___awdiv,w
  2689  0713  00A4               	movwf	LCD_num@digit3
  2690  0714                     l1453:
  2691                           
  2692                           ;main.c: 269:         LCD_dat(digit3+0x30);
  2693  0714  0824               	movf	LCD_num@digit3,w
  2694  0715  3E30               	addlw	48
  2695  0716  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2696  071B                     l1455:
  2697                           
  2698                           ;main.c: 270:         LCD_dat(digit2+0x30);
  2699  071B  1283               	bcf	3,5	;RP0=0, select bank0
  2700  071C  1303               	bcf	3,6	;RP1=0, select bank0
  2701  071D  0828               	movf	LCD_num@digit2,w
  2702  071E  3E30               	addlw	48
  2703  071F  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2704  0724                     l1457:
  2705                           
  2706                           ;main.c: 271:         LCD_dat(digit1+0x30);
  2707  0724  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0725  1303               	bcf	3,6	;RP1=0, select bank0
  2709  0726  0826               	movf	LCD_num@digit1,w
  2710  0727  3E30               	addlw	48
  2711  0728  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2712                           
  2713                           ;main.c: 272:     }
  2714  072D  2FE1               	goto	l162
  2715  072E                     l1459:
  2716  072E  3003               	movlw	3
  2717  072F  027A               	subwf	LCD_num@val+1,w
  2718  0730  30E8               	movlw	232
  2719  0731  1903               	skipnz
  2720  0732  0279               	subwf	LCD_num@val,w
  2721  0733  1C03               	skipc
  2722  0734  2F36               	goto	u1501
  2723  0735  2F37               	goto	u1500
  2724  0736                     u1501:
  2725  0736  2FE1               	goto	l158
  2726  0737                     u1500:
  2727  0737                     l1461:
  2728  0737  3027               	movlw	39
  2729  0738  027A               	subwf	LCD_num@val+1,w
  2730  0739  300F               	movlw	15
  2731  073A  1903               	skipnz
  2732  073B  0279               	subwf	LCD_num@val,w
  2733  073C  1803               	skipnc
  2734  073D  2F3F               	goto	u1511
  2735  073E  2F40               	goto	u1510
  2736  073F                     u1511:
  2737  073F  2FE1               	goto	l158
  2738  0740                     u1510:
  2739  0740                     l1463:
  2740                           
  2741                           ;main.c: 274:     {;main.c: 275:         remainder = val % 10;
  2742  0740  300A               	movlw	10
  2743  0741  00F0               	movwf	___lwmod@divisor
  2744  0742  3000               	movlw	0
  2745  0743  00F1               	movwf	___lwmod@divisor+1
  2746  0744  087A               	movf	LCD_num@val+1,w
  2747  0745  00F3               	movwf	___lwmod@dividend+1
  2748  0746  0879               	movf	LCD_num@val,w
  2749  0747  00F2               	movwf	___lwmod@dividend
  2750  0748  120A  118A  2132  120A  118A  	fcall	___lwmod
  2751  074D  0871               	movf	?___lwmod+1,w
  2752  074E  1283               	bcf	3,5	;RP0=0, select bank0
  2753  074F  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0750  00AD               	movwf	LCD_num@remainder+1
  2755  0751  0870               	movf	?___lwmod,w
  2756  0752  00AC               	movwf	LCD_num@remainder
  2757                           
  2758                           ;main.c: 276:         result1 = val /10;
  2759  0753  300A               	movlw	10
  2760  0754  00F0               	movwf	___lwdiv@divisor
  2761  0755  3000               	movlw	0
  2762  0756  00F1               	movwf	___lwdiv@divisor+1
  2763  0757  087A               	movf	LCD_num@val+1,w
  2764  0758  00F3               	movwf	___lwdiv@dividend+1
  2765  0759  0879               	movf	LCD_num@val,w
  2766  075A  00F2               	movwf	___lwdiv@dividend
  2767  075B  120A  118A  216C  120A  118A  	fcall	___lwdiv
  2768  0760  0871               	movf	?___lwdiv+1,w
  2769  0761  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0762  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0763  00AB               	movwf	LCD_num@result1+1
  2772  0764  0870               	movf	?___lwdiv,w
  2773  0765  00AA               	movwf	LCD_num@result1
  2774  0766                     l1465:
  2775                           
  2776                           ;main.c: 277:         digit1 = remainder;
  2777  0766  082D               	movf	LCD_num@remainder+1,w
  2778  0767  00A7               	movwf	LCD_num@digit1+1
  2779  0768  082C               	movf	LCD_num@remainder,w
  2780  0769  00A6               	movwf	LCD_num@digit1
  2781  076A                     l1467:
  2782                           
  2783                           ;main.c: 278:         remainder = result1%10;
  2784  076A  300A               	movlw	10
  2785  076B  00F0               	movwf	___awmod@divisor
  2786  076C  3000               	movlw	0
  2787  076D  00F1               	movwf	___awmod@divisor+1
  2788  076E  082B               	movf	LCD_num@result1+1,w
  2789  076F  00F3               	movwf	___awmod@dividend+1
  2790  0770  082A               	movf	LCD_num@result1,w
  2791  0771  00F2               	movwf	___awmod@dividend
  2792  0772  120A  118A  2248  120A  118A  	fcall	___awmod
  2793  0777  0871               	movf	?___awmod+1,w
  2794  0778  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0779  1303               	bcf	3,6	;RP1=0, select bank0
  2796  077A  00AD               	movwf	LCD_num@remainder+1
  2797  077B  0870               	movf	?___awmod,w
  2798  077C  00AC               	movwf	LCD_num@remainder
  2799                           
  2800                           ;main.c: 279:         digit2 = remainder;
  2801  077D  082D               	movf	LCD_num@remainder+1,w
  2802  077E  00A9               	movwf	LCD_num@digit2+1
  2803  077F  082C               	movf	LCD_num@remainder,w
  2804  0780  00A8               	movwf	LCD_num@digit2
  2805  0781                     l1469:
  2806                           
  2807                           ;main.c: 280:         result = result1/10;
  2808  0781  300A               	movlw	10
  2809  0782  00F0               	movwf	___awdiv@divisor
  2810  0783  3000               	movlw	0
  2811  0784  00F1               	movwf	___awdiv@divisor+1
  2812  0785  082B               	movf	LCD_num@result1+1,w
  2813  0786  00F3               	movwf	___awdiv@dividend+1
  2814  0787  082A               	movf	LCD_num@result1,w
  2815  0788  00F2               	movwf	___awdiv@dividend
  2816  0789  120A  118A  22A1  120A  118A  	fcall	___awdiv
  2817  078E  0871               	movf	?___awdiv+1,w
  2818  078F  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0790  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0791  00A3               	movwf	LCD_num@result+1
  2821  0792  0870               	movf	?___awdiv,w
  2822  0793  00A2               	movwf	LCD_num@result
  2823  0794                     l1471:
  2824                           
  2825                           ;main.c: 281:         remainder = result%10;
  2826  0794  300A               	movlw	10
  2827  0795  00F0               	movwf	___awmod@divisor
  2828  0796  3000               	movlw	0
  2829  0797  00F1               	movwf	___awmod@divisor+1
  2830  0798  0823               	movf	LCD_num@result+1,w
  2831  0799  00F3               	movwf	___awmod@dividend+1
  2832  079A  0822               	movf	LCD_num@result,w
  2833  079B  00F2               	movwf	___awmod@dividend
  2834  079C  120A  118A  2248  120A  118A  	fcall	___awmod
  2835  07A1  0871               	movf	?___awmod+1,w
  2836  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  2837  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  2838  07A4  00AD               	movwf	LCD_num@remainder+1
  2839  07A5  0870               	movf	?___awmod,w
  2840  07A6  00AC               	movwf	LCD_num@remainder
  2841                           
  2842                           ;main.c: 282:         digit3=remainder;
  2843  07A7  082D               	movf	LCD_num@remainder+1,w
  2844  07A8  00A5               	movwf	LCD_num@digit3+1
  2845  07A9  082C               	movf	LCD_num@remainder,w
  2846  07AA  00A4               	movwf	LCD_num@digit3
  2847  07AB                     l1473:
  2848                           
  2849                           ;main.c: 283:         digit4 = result/10;
  2850  07AB  300A               	movlw	10
  2851  07AC  00F0               	movwf	___awdiv@divisor
  2852  07AD  3000               	movlw	0
  2853  07AE  00F1               	movwf	___awdiv@divisor+1
  2854  07AF  0823               	movf	LCD_num@result+1,w
  2855  07B0  00F3               	movwf	___awdiv@dividend+1
  2856  07B1  0822               	movf	LCD_num@result,w
  2857  07B2  00F2               	movwf	___awdiv@dividend
  2858  07B3  120A  118A  22A1  120A  118A  	fcall	___awdiv
  2859  07B8  0871               	movf	?___awdiv+1,w
  2860  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  2861  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  2862  07BB  00A1               	movwf	LCD_num@digit4+1
  2863  07BC  0870               	movf	?___awdiv,w
  2864  07BD  00A0               	movwf	LCD_num@digit4
  2865  07BE                     l1475:
  2866                           
  2867                           ;main.c: 284:         LCD_dat(digit4+0x30);
  2868  07BE  0820               	movf	LCD_num@digit4,w
  2869  07BF  3E30               	addlw	48
  2870  07C0  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2871  07C5                     l1477:
  2872                           
  2873                           ;main.c: 285:         LCD_dat(digit3+0x30);
  2874  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  2875  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  2876  07C7  0824               	movf	LCD_num@digit3,w
  2877  07C8  3E30               	addlw	48
  2878  07C9  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2879  07CE                     l1479:
  2880                           
  2881                           ;main.c: 286:         LCD_dat(digit2+0x30);
  2882  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2883  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2884  07D0  0828               	movf	LCD_num@digit2,w
  2885  07D1  3E30               	addlw	48
  2886  07D2  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2887  07D7                     l1481:
  2888                           
  2889                           ;main.c: 287:         LCD_dat(digit1+0x30);
  2890  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  2891  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  2892  07D9  0826               	movf	LCD_num@digit1,w
  2893  07DA  3E30               	addlw	48
  2894  07DB  120A  118A  21FC  120A  118A  	fcall	_LCD_dat
  2895  07E0  2FE1               	goto	l162
  2896  07E1                     l158:
  2897  07E1                     l162:
  2898  07E1  0008               	return
  2899  07E2                     __end_of_LCD_num:
  2900                           
  2901                           	psect	text10
  2902  0132                     __ptext10:	
  2903 ;; *************** function ___lwmod *****************
  2904 ;; Defined at:
  2905 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  divisor         2    0[COMMON] unsigned int 
  2908 ;;  dividend        2    2[COMMON] unsigned int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  counter         1    5[COMMON] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  2    0[COMMON] unsigned int 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2920 ;;      Params:         4       0       0       0       0
  2921 ;;      Locals:         1       0       0       0       0
  2922 ;;      Temps:          1       0       0       0       0
  2923 ;;      Totals:         6       0       0       0       0
  2924 ;;Total ram usage:        6 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_LCD_num
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           
  2934                           ;psect for function ___lwmod
  2935  0132                     ___lwmod:
  2936  0132                     l1373:	
  2937                           ;incstack = 0
  2938                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2939                           
  2940  0132  0870               	movf	___lwmod@divisor,w
  2941  0133  0471               	iorwf	___lwmod@divisor+1,w
  2942  0134  1903               	btfsc	3,2
  2943  0135  2937               	goto	u1371
  2944  0136  2938               	goto	u1370
  2945  0137                     u1371:
  2946  0137  2967               	goto	l1391
  2947  0138                     u1370:
  2948  0138                     l1375:
  2949  0138  01F5               	clrf	___lwmod@counter
  2950  0139  0AF5               	incf	___lwmod@counter,f
  2951  013A  2946               	goto	l1381
  2952  013B                     l1377:
  2953  013B  3001               	movlw	1
  2954  013C                     u1385:
  2955  013C  1003               	clrc
  2956  013D  0DF0               	rlf	___lwmod@divisor,f
  2957  013E  0DF1               	rlf	___lwmod@divisor+1,f
  2958  013F  3EFF               	addlw	-1
  2959  0140  1D03               	skipz
  2960  0141  293C               	goto	u1385
  2961  0142                     l1379:
  2962  0142  3001               	movlw	1
  2963  0143  00F4               	movwf	??___lwmod
  2964  0144  0874               	movf	??___lwmod,w
  2965  0145  07F5               	addwf	___lwmod@counter,f
  2966  0146                     l1381:
  2967  0146  1FF1               	btfss	___lwmod@divisor+1,7
  2968  0147  2949               	goto	u1391
  2969  0148  294A               	goto	u1390
  2970  0149                     u1391:
  2971  0149  293B               	goto	l1377
  2972  014A                     u1390:
  2973  014A                     l1383:
  2974  014A  0871               	movf	___lwmod@divisor+1,w
  2975  014B  0273               	subwf	___lwmod@dividend+1,w
  2976  014C  1D03               	skipz
  2977  014D  2950               	goto	u1405
  2978  014E  0870               	movf	___lwmod@divisor,w
  2979  014F  0272               	subwf	___lwmod@dividend,w
  2980  0150                     u1405:
  2981  0150  1C03               	skipc
  2982  0151  2953               	goto	u1401
  2983  0152  2954               	goto	u1400
  2984  0153                     u1401:
  2985  0153  295A               	goto	l1387
  2986  0154                     u1400:
  2987  0154                     l1385:
  2988  0154  0870               	movf	___lwmod@divisor,w
  2989  0155  02F2               	subwf	___lwmod@dividend,f
  2990  0156  0871               	movf	___lwmod@divisor+1,w
  2991  0157  1C03               	skipc
  2992  0158  03F3               	decf	___lwmod@dividend+1,f
  2993  0159  02F3               	subwf	___lwmod@dividend+1,f
  2994  015A                     l1387:
  2995  015A  3001               	movlw	1
  2996  015B                     u1415:
  2997  015B  1003               	clrc
  2998  015C  0CF1               	rrf	___lwmod@divisor+1,f
  2999  015D  0CF0               	rrf	___lwmod@divisor,f
  3000  015E  3EFF               	addlw	-1
  3001  015F  1D03               	skipz
  3002  0160  295B               	goto	u1415
  3003  0161                     l1389:
  3004  0161  3001               	movlw	1
  3005  0162  02F5               	subwf	___lwmod@counter,f
  3006  0163  1D03               	btfss	3,2
  3007  0164  2966               	goto	u1421
  3008  0165  2967               	goto	u1420
  3009  0166                     u1421:
  3010  0166  294A               	goto	l1383
  3011  0167                     u1420:
  3012  0167                     l1391:
  3013  0167  0873               	movf	___lwmod@dividend+1,w
  3014  0168  00F1               	movwf	?___lwmod+1
  3015  0169  0872               	movf	___lwmod@dividend,w
  3016  016A  00F0               	movwf	?___lwmod
  3017  016B                     l533:
  3018  016B  0008               	return
  3019  016C                     __end_of___lwmod:
  3020                           
  3021                           	psect	text11
  3022  016C                     __ptext11:	
  3023 ;; *************** function ___lwdiv *****************
  3024 ;; Defined at:
  3025 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  divisor         2    0[COMMON] unsigned int 
  3028 ;;  dividend        2    2[COMMON] unsigned int 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  quotient        2    5[COMMON] unsigned int 
  3031 ;;  counter         1    7[COMMON] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  2    0[COMMON] unsigned int 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         4       0       0       0       0
  3042 ;;      Locals:         3       0       0       0       0
  3043 ;;      Temps:          1       0       0       0       0
  3044 ;;      Totals:         8       0       0       0       0
  3045 ;;Total ram usage:        8 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_LCD_num
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           
  3055                           ;psect for function ___lwdiv
  3056  016C                     ___lwdiv:
  3057  016C                     l1347:	
  3058                           ;incstack = 0
  3059                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3060                           
  3061  016C  01F5               	clrf	___lwdiv@quotient
  3062  016D  01F6               	clrf	___lwdiv@quotient+1
  3063  016E                     l1349:
  3064  016E  0870               	movf	___lwdiv@divisor,w
  3065  016F  0471               	iorwf	___lwdiv@divisor+1,w
  3066  0170  1903               	btfsc	3,2
  3067  0171  2973               	goto	u1301
  3068  0172  2974               	goto	u1300
  3069  0173                     u1301:
  3070  0173  29AB               	goto	l1369
  3071  0174                     u1300:
  3072  0174                     l1351:
  3073  0174  01F7               	clrf	___lwdiv@counter
  3074  0175  0AF7               	incf	___lwdiv@counter,f
  3075  0176  2982               	goto	l1357
  3076  0177                     l1353:
  3077  0177  3001               	movlw	1
  3078  0178                     u1315:
  3079  0178  1003               	clrc
  3080  0179  0DF0               	rlf	___lwdiv@divisor,f
  3081  017A  0DF1               	rlf	___lwdiv@divisor+1,f
  3082  017B  3EFF               	addlw	-1
  3083  017C  1D03               	skipz
  3084  017D  2978               	goto	u1315
  3085  017E                     l1355:
  3086  017E  3001               	movlw	1
  3087  017F  00F4               	movwf	??___lwdiv
  3088  0180  0874               	movf	??___lwdiv,w
  3089  0181  07F7               	addwf	___lwdiv@counter,f
  3090  0182                     l1357:
  3091  0182  1FF1               	btfss	___lwdiv@divisor+1,7
  3092  0183  2985               	goto	u1321
  3093  0184  2986               	goto	u1320
  3094  0185                     u1321:
  3095  0185  2977               	goto	l1353
  3096  0186                     u1320:
  3097  0186                     l1359:
  3098  0186  3001               	movlw	1
  3099  0187                     u1335:
  3100  0187  1003               	clrc
  3101  0188  0DF5               	rlf	___lwdiv@quotient,f
  3102  0189  0DF6               	rlf	___lwdiv@quotient+1,f
  3103  018A  3EFF               	addlw	-1
  3104  018B  1D03               	skipz
  3105  018C  2987               	goto	u1335
  3106  018D  0871               	movf	___lwdiv@divisor+1,w
  3107  018E  0273               	subwf	___lwdiv@dividend+1,w
  3108  018F  1D03               	skipz
  3109  0190  2993               	goto	u1345
  3110  0191  0870               	movf	___lwdiv@divisor,w
  3111  0192  0272               	subwf	___lwdiv@dividend,w
  3112  0193                     u1345:
  3113  0193  1C03               	skipc
  3114  0194  2996               	goto	u1341
  3115  0195  2997               	goto	u1340
  3116  0196                     u1341:
  3117  0196  299E               	goto	l1365
  3118  0197                     u1340:
  3119  0197                     l1361:
  3120  0197  0870               	movf	___lwdiv@divisor,w
  3121  0198  02F2               	subwf	___lwdiv@dividend,f
  3122  0199  0871               	movf	___lwdiv@divisor+1,w
  3123  019A  1C03               	skipc
  3124  019B  03F3               	decf	___lwdiv@dividend+1,f
  3125  019C  02F3               	subwf	___lwdiv@dividend+1,f
  3126  019D                     l1363:
  3127  019D  1475               	bsf	___lwdiv@quotient,0
  3128  019E                     l1365:
  3129  019E  3001               	movlw	1
  3130  019F                     u1355:
  3131  019F  1003               	clrc
  3132  01A0  0CF1               	rrf	___lwdiv@divisor+1,f
  3133  01A1  0CF0               	rrf	___lwdiv@divisor,f
  3134  01A2  3EFF               	addlw	-1
  3135  01A3  1D03               	skipz
  3136  01A4  299F               	goto	u1355
  3137  01A5                     l1367:
  3138  01A5  3001               	movlw	1
  3139  01A6  02F7               	subwf	___lwdiv@counter,f
  3140  01A7  1D03               	btfss	3,2
  3141  01A8  29AA               	goto	u1361
  3142  01A9  29AB               	goto	u1360
  3143  01AA                     u1361:
  3144  01AA  2986               	goto	l1359
  3145  01AB                     u1360:
  3146  01AB                     l1369:
  3147  01AB  0876               	movf	___lwdiv@quotient+1,w
  3148  01AC  00F1               	movwf	?___lwdiv+1
  3149  01AD  0875               	movf	___lwdiv@quotient,w
  3150  01AE  00F0               	movwf	?___lwdiv
  3151  01AF                     l523:
  3152  01AF  0008               	return
  3153  01B0                     __end_of___lwdiv:
  3154                           
  3155                           	psect	text12
  3156  0248                     __ptext12:	
  3157 ;; *************** function ___awmod *****************
  3158 ;; Defined at:
  3159 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  divisor         2    0[COMMON] int 
  3162 ;;  dividend        2    2[COMMON] int 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  sign            1    6[COMMON] unsigned char 
  3165 ;;  counter         1    5[COMMON] unsigned char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  2    0[COMMON] int 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3175 ;;      Params:         4       0       0       0       0
  3176 ;;      Locals:         2       0       0       0       0
  3177 ;;      Temps:          1       0       0       0       0
  3178 ;;      Totals:         7       0       0       0       0
  3179 ;;Total ram usage:        7 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_LCD_num
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function ___awmod
  3190  0248                     ___awmod:
  3191  0248                     l1309:	
  3192                           ;incstack = 0
  3193                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3194                           
  3195  0248  01F6               	clrf	___awmod@sign
  3196  0249                     l1311:
  3197  0249  1FF3               	btfss	___awmod@dividend+1,7
  3198  024A  2A4C               	goto	u1211
  3199  024B  2A4D               	goto	u1210
  3200  024C                     u1211:
  3201  024C  2A54               	goto	l1317
  3202  024D                     u1210:
  3203  024D                     l1313:
  3204  024D  09F2               	comf	___awmod@dividend,f
  3205  024E  09F3               	comf	___awmod@dividend+1,f
  3206  024F  0AF2               	incf	___awmod@dividend,f
  3207  0250  1903               	skipnz
  3208  0251  0AF3               	incf	___awmod@dividend+1,f
  3209  0252                     l1315:
  3210  0252  01F6               	clrf	___awmod@sign
  3211  0253  0AF6               	incf	___awmod@sign,f
  3212  0254                     l1317:
  3213  0254  1FF1               	btfss	___awmod@divisor+1,7
  3214  0255  2A57               	goto	u1221
  3215  0256  2A58               	goto	u1220
  3216  0257                     u1221:
  3217  0257  2A5D               	goto	l1321
  3218  0258                     u1220:
  3219  0258                     l1319:
  3220  0258  09F0               	comf	___awmod@divisor,f
  3221  0259  09F1               	comf	___awmod@divisor+1,f
  3222  025A  0AF0               	incf	___awmod@divisor,f
  3223  025B  1903               	skipnz
  3224  025C  0AF1               	incf	___awmod@divisor+1,f
  3225  025D                     l1321:
  3226  025D  0870               	movf	___awmod@divisor,w
  3227  025E  0471               	iorwf	___awmod@divisor+1,w
  3228  025F  1903               	btfsc	3,2
  3229  0260  2A62               	goto	u1231
  3230  0261  2A63               	goto	u1230
  3231  0262                     u1231:
  3232  0262  2A92               	goto	l1339
  3233  0263                     u1230:
  3234  0263                     l1323:
  3235  0263  01F5               	clrf	___awmod@counter
  3236  0264  0AF5               	incf	___awmod@counter,f
  3237  0265  2A71               	goto	l1329
  3238  0266                     l1325:
  3239  0266  3001               	movlw	1
  3240  0267                     u1245:
  3241  0267  1003               	clrc
  3242  0268  0DF0               	rlf	___awmod@divisor,f
  3243  0269  0DF1               	rlf	___awmod@divisor+1,f
  3244  026A  3EFF               	addlw	-1
  3245  026B  1D03               	skipz
  3246  026C  2A67               	goto	u1245
  3247  026D                     l1327:
  3248  026D  3001               	movlw	1
  3249  026E  00F4               	movwf	??___awmod
  3250  026F  0874               	movf	??___awmod,w
  3251  0270  07F5               	addwf	___awmod@counter,f
  3252  0271                     l1329:
  3253  0271  1FF1               	btfss	___awmod@divisor+1,7
  3254  0272  2A74               	goto	u1251
  3255  0273  2A75               	goto	u1250
  3256  0274                     u1251:
  3257  0274  2A66               	goto	l1325
  3258  0275                     u1250:
  3259  0275                     l1331:
  3260  0275  0871               	movf	___awmod@divisor+1,w
  3261  0276  0273               	subwf	___awmod@dividend+1,w
  3262  0277  1D03               	skipz
  3263  0278  2A7B               	goto	u1265
  3264  0279  0870               	movf	___awmod@divisor,w
  3265  027A  0272               	subwf	___awmod@dividend,w
  3266  027B                     u1265:
  3267  027B  1C03               	skipc
  3268  027C  2A7E               	goto	u1261
  3269  027D  2A7F               	goto	u1260
  3270  027E                     u1261:
  3271  027E  2A85               	goto	l1335
  3272  027F                     u1260:
  3273  027F                     l1333:
  3274  027F  0870               	movf	___awmod@divisor,w
  3275  0280  02F2               	subwf	___awmod@dividend,f
  3276  0281  0871               	movf	___awmod@divisor+1,w
  3277  0282  1C03               	skipc
  3278  0283  03F3               	decf	___awmod@dividend+1,f
  3279  0284  02F3               	subwf	___awmod@dividend+1,f
  3280  0285                     l1335:
  3281  0285  3001               	movlw	1
  3282  0286                     u1275:
  3283  0286  1003               	clrc
  3284  0287  0CF1               	rrf	___awmod@divisor+1,f
  3285  0288  0CF0               	rrf	___awmod@divisor,f
  3286  0289  3EFF               	addlw	-1
  3287  028A  1D03               	skipz
  3288  028B  2A86               	goto	u1275
  3289  028C                     l1337:
  3290  028C  3001               	movlw	1
  3291  028D  02F5               	subwf	___awmod@counter,f
  3292  028E  1D03               	btfss	3,2
  3293  028F  2A91               	goto	u1281
  3294  0290  2A92               	goto	u1280
  3295  0291                     u1281:
  3296  0291  2A75               	goto	l1331
  3297  0292                     u1280:
  3298  0292                     l1339:
  3299  0292  0876               	movf	___awmod@sign,w
  3300  0293  1903               	btfsc	3,2
  3301  0294  2A96               	goto	u1291
  3302  0295  2A97               	goto	u1290
  3303  0296                     u1291:
  3304  0296  2A9C               	goto	l1343
  3305  0297                     u1290:
  3306  0297                     l1341:
  3307  0297  09F2               	comf	___awmod@dividend,f
  3308  0298  09F3               	comf	___awmod@dividend+1,f
  3309  0299  0AF2               	incf	___awmod@dividend,f
  3310  029A  1903               	skipnz
  3311  029B  0AF3               	incf	___awmod@dividend+1,f
  3312  029C                     l1343:
  3313  029C  0873               	movf	___awmod@dividend+1,w
  3314  029D  00F1               	movwf	?___awmod+1
  3315  029E  0872               	movf	___awmod@dividend,w
  3316  029F  00F0               	movwf	?___awmod
  3317  02A0                     l417:
  3318  02A0  0008               	return
  3319  02A1                     __end_of___awmod:
  3320                           
  3321                           	psect	text13
  3322  02A1                     __ptext13:	
  3323 ;; *************** function ___awdiv *****************
  3324 ;; Defined at:
  3325 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  divisor         2    0[COMMON] int 
  3328 ;;  dividend        2    2[COMMON] int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  quotient        2    7[COMMON] int 
  3331 ;;  sign            1    6[COMMON] unsigned char 
  3332 ;;  counter         1    5[COMMON] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  2    0[COMMON] int 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         4       0       0       0       0
  3343 ;;      Locals:         4       0       0       0       0
  3344 ;;      Temps:          1       0       0       0       0
  3345 ;;      Totals:         9       0       0       0       0
  3346 ;;Total ram usage:        9 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;;		_LCD_num
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function ___awdiv
  3358  02A1                     ___awdiv:
  3359  02A1                     l1265:	
  3360                           ;incstack = 0
  3361                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3362                           
  3363  02A1  01F6               	clrf	___awdiv@sign
  3364  02A2                     l1267:
  3365  02A2  1FF1               	btfss	___awdiv@divisor+1,7
  3366  02A3  2AA5               	goto	u1111
  3367  02A4  2AA6               	goto	u1110
  3368  02A5                     u1111:
  3369  02A5  2AAD               	goto	l1273
  3370  02A6                     u1110:
  3371  02A6                     l1269:
  3372  02A6  09F0               	comf	___awdiv@divisor,f
  3373  02A7  09F1               	comf	___awdiv@divisor+1,f
  3374  02A8  0AF0               	incf	___awdiv@divisor,f
  3375  02A9  1903               	skipnz
  3376  02AA  0AF1               	incf	___awdiv@divisor+1,f
  3377  02AB                     l1271:
  3378  02AB  01F6               	clrf	___awdiv@sign
  3379  02AC  0AF6               	incf	___awdiv@sign,f
  3380  02AD                     l1273:
  3381  02AD  1FF3               	btfss	___awdiv@dividend+1,7
  3382  02AE  2AB0               	goto	u1121
  3383  02AF  2AB1               	goto	u1120
  3384  02B0                     u1121:
  3385  02B0  2ABA               	goto	l1279
  3386  02B1                     u1120:
  3387  02B1                     l1275:
  3388  02B1  09F2               	comf	___awdiv@dividend,f
  3389  02B2  09F3               	comf	___awdiv@dividend+1,f
  3390  02B3  0AF2               	incf	___awdiv@dividend,f
  3391  02B4  1903               	skipnz
  3392  02B5  0AF3               	incf	___awdiv@dividend+1,f
  3393  02B6                     l1277:
  3394  02B6  3001               	movlw	1
  3395  02B7  00F4               	movwf	??___awdiv
  3396  02B8  0874               	movf	??___awdiv,w
  3397  02B9  06F6               	xorwf	___awdiv@sign,f
  3398  02BA                     l1279:
  3399  02BA  01F7               	clrf	___awdiv@quotient
  3400  02BB  01F8               	clrf	___awdiv@quotient+1
  3401  02BC                     l1281:
  3402  02BC  0870               	movf	___awdiv@divisor,w
  3403  02BD  0471               	iorwf	___awdiv@divisor+1,w
  3404  02BE  1903               	btfsc	3,2
  3405  02BF  2AC1               	goto	u1131
  3406  02C0  2AC2               	goto	u1130
  3407  02C1                     u1131:
  3408  02C1  2AF9               	goto	l1301
  3409  02C2                     u1130:
  3410  02C2                     l1283:
  3411  02C2  01F5               	clrf	___awdiv@counter
  3412  02C3  0AF5               	incf	___awdiv@counter,f
  3413  02C4  2AD0               	goto	l1289
  3414  02C5                     l1285:
  3415  02C5  3001               	movlw	1
  3416  02C6                     u1145:
  3417  02C6  1003               	clrc
  3418  02C7  0DF0               	rlf	___awdiv@divisor,f
  3419  02C8  0DF1               	rlf	___awdiv@divisor+1,f
  3420  02C9  3EFF               	addlw	-1
  3421  02CA  1D03               	skipz
  3422  02CB  2AC6               	goto	u1145
  3423  02CC                     l1287:
  3424  02CC  3001               	movlw	1
  3425  02CD  00F4               	movwf	??___awdiv
  3426  02CE  0874               	movf	??___awdiv,w
  3427  02CF  07F5               	addwf	___awdiv@counter,f
  3428  02D0                     l1289:
  3429  02D0  1FF1               	btfss	___awdiv@divisor+1,7
  3430  02D1  2AD3               	goto	u1151
  3431  02D2  2AD4               	goto	u1150
  3432  02D3                     u1151:
  3433  02D3  2AC5               	goto	l1285
  3434  02D4                     u1150:
  3435  02D4                     l1291:
  3436  02D4  3001               	movlw	1
  3437  02D5                     u1165:
  3438  02D5  1003               	clrc
  3439  02D6  0DF7               	rlf	___awdiv@quotient,f
  3440  02D7  0DF8               	rlf	___awdiv@quotient+1,f
  3441  02D8  3EFF               	addlw	-1
  3442  02D9  1D03               	skipz
  3443  02DA  2AD5               	goto	u1165
  3444  02DB  0871               	movf	___awdiv@divisor+1,w
  3445  02DC  0273               	subwf	___awdiv@dividend+1,w
  3446  02DD  1D03               	skipz
  3447  02DE  2AE1               	goto	u1175
  3448  02DF  0870               	movf	___awdiv@divisor,w
  3449  02E0  0272               	subwf	___awdiv@dividend,w
  3450  02E1                     u1175:
  3451  02E1  1C03               	skipc
  3452  02E2  2AE4               	goto	u1171
  3453  02E3  2AE5               	goto	u1170
  3454  02E4                     u1171:
  3455  02E4  2AEC               	goto	l1297
  3456  02E5                     u1170:
  3457  02E5                     l1293:
  3458  02E5  0870               	movf	___awdiv@divisor,w
  3459  02E6  02F2               	subwf	___awdiv@dividend,f
  3460  02E7  0871               	movf	___awdiv@divisor+1,w
  3461  02E8  1C03               	skipc
  3462  02E9  03F3               	decf	___awdiv@dividend+1,f
  3463  02EA  02F3               	subwf	___awdiv@dividend+1,f
  3464  02EB                     l1295:
  3465  02EB  1477               	bsf	___awdiv@quotient,0
  3466  02EC                     l1297:
  3467  02EC  3001               	movlw	1
  3468  02ED                     u1185:
  3469  02ED  1003               	clrc
  3470  02EE  0CF1               	rrf	___awdiv@divisor+1,f
  3471  02EF  0CF0               	rrf	___awdiv@divisor,f
  3472  02F0  3EFF               	addlw	-1
  3473  02F1  1D03               	skipz
  3474  02F2  2AED               	goto	u1185
  3475  02F3                     l1299:
  3476  02F3  3001               	movlw	1
  3477  02F4  02F5               	subwf	___awdiv@counter,f
  3478  02F5  1D03               	btfss	3,2
  3479  02F6  2AF8               	goto	u1191
  3480  02F7  2AF9               	goto	u1190
  3481  02F8                     u1191:
  3482  02F8  2AD4               	goto	l1291
  3483  02F9                     u1190:
  3484  02F9                     l1301:
  3485  02F9  0876               	movf	___awdiv@sign,w
  3486  02FA  1903               	btfsc	3,2
  3487  02FB  2AFD               	goto	u1201
  3488  02FC  2AFE               	goto	u1200
  3489  02FD                     u1201:
  3490  02FD  2B03               	goto	l1305
  3491  02FE                     u1200:
  3492  02FE                     l1303:
  3493  02FE  09F7               	comf	___awdiv@quotient,f
  3494  02FF  09F8               	comf	___awdiv@quotient+1,f
  3495  0300  0AF7               	incf	___awdiv@quotient,f
  3496  0301  1903               	skipnz
  3497  0302  0AF8               	incf	___awdiv@quotient+1,f
  3498  0303                     l1305:
  3499  0303  0878               	movf	___awdiv@quotient+1,w
  3500  0304  00F1               	movwf	?___awdiv+1
  3501  0305  0877               	movf	___awdiv@quotient,w
  3502  0306  00F0               	movwf	?___awdiv
  3503  0307                     l404:
  3504  0307  0008               	return
  3505  0308                     __end_of___awdiv:
  3506                           
  3507                           	psect	text14
  3508  01FC                     __ptext14:	
  3509 ;; *************** function _LCD_dat *****************
  3510 ;; Defined at:
  3511 ;;		line 110 in file "main.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  data            1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  data            1    2[COMMON] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       0       0       0       0
  3526 ;;      Locals:         1       0       0       0       0
  3527 ;;      Temps:          2       0       0       0       0
  3528 ;;      Totals:         3       0       0       0       0
  3529 ;;Total ram usage:        3 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_show
  3535 ;;		_LCD_num
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           
  3540                           ;psect for function _LCD_dat
  3541  01FC                     _LCD_dat:
  3542                           
  3543                           ;incstack = 0
  3544                           ; Regs used in _LCD_dat: [wreg+status,2+status,0]
  3545                           ;LCD_dat@data stored from wreg
  3546  01FC  00F2               	movwf	LCD_dat@data
  3547  01FD                     l1245:
  3548                           
  3549                           ;main.c: 110: void LCD_dat(unsigned char data);main.c: 111: {;main.c: 112:     RC2 =1;
  3550  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  3551  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  3552  01FF  1507               	bsf	7,2	;volatile
  3553  0200                     l1247:
  3554                           
  3555                           ;main.c: 113:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3556  0200  3041               	movlw	65
  3557  0201  00F1               	movwf	??_LCD_dat+1
  3558  0202  30EE               	movlw	238
  3559  0203  00F0               	movwf	??_LCD_dat
  3560  0204                     u2257:
  3561  0204  0BF0               	decfsz	??_LCD_dat,f
  3562  0205  2A04               	goto	u2257
  3563  0206  0BF1               	decfsz	??_LCD_dat+1,f
  3564  0207  2A04               	goto	u2257
  3565  0208  0000               	nop
  3566                           
  3567                           ;main.c: 114:    PORTC =(data);
  3568  0209  0872               	movf	LCD_dat@data,w
  3569  020A  1283               	bcf	3,5	;RP0=0, select bank0
  3570  020B  1303               	bcf	3,6	;RP1=0, select bank0
  3571  020C  0087               	movwf	7	;volatile
  3572  020D                     l1249:
  3573                           
  3574                           ;main.c: 115:    RC3=1;
  3575  020D  1587               	bsf	7,3	;volatile
  3576                           
  3577                           ;main.c: 116:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3578  020E  3041               	movlw	65
  3579  020F  00F1               	movwf	??_LCD_dat+1
  3580  0210  30EE               	movlw	238
  3581  0211  00F0               	movwf	??_LCD_dat
  3582  0212                     u2267:
  3583  0212  0BF0               	decfsz	??_LCD_dat,f
  3584  0213  2A12               	goto	u2267
  3585  0214  0BF1               	decfsz	??_LCD_dat+1,f
  3586  0215  2A12               	goto	u2267
  3587  0216  0000               	nop
  3588  0217                     l1251:
  3589                           
  3590                           ;main.c: 117:    RC3=0;
  3591  0217  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0218  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0219  1187               	bcf	7,3	;volatile
  3594                           
  3595                           ;main.c: 118:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3596  021A  3041               	movlw	65
  3597  021B  00F1               	movwf	??_LCD_dat+1
  3598  021C  30EE               	movlw	238
  3599  021D  00F0               	movwf	??_LCD_dat
  3600  021E                     u2277:
  3601  021E  0BF0               	decfsz	??_LCD_dat,f
  3602  021F  2A1E               	goto	u2277
  3603  0220  0BF1               	decfsz	??_LCD_dat+1,f
  3604  0221  2A1E               	goto	u2277
  3605  0222  0000               	nop
  3606  0223                     l1253:
  3607                           
  3608                           ;main.c: 119:    PORTC=(data<<4);
  3609  0223  0872               	movf	LCD_dat@data,w
  3610  0224  00F0               	movwf	??_LCD_dat
  3611  0225  3003               	movlw	3
  3612  0226                     u1105:
  3613  0226  1003               	clrc
  3614  0227  0DF0               	rlf	??_LCD_dat,f
  3615  0228  3EFF               	addlw	-1
  3616  0229  1D03               	skipz
  3617  022A  2A26               	goto	u1105
  3618  022B  1003               	clrc
  3619  022C  0D70               	rlf	??_LCD_dat,w
  3620  022D  1283               	bcf	3,5	;RP0=0, select bank0
  3621  022E  1303               	bcf	3,6	;RP1=0, select bank0
  3622  022F  0087               	movwf	7	;volatile
  3623  0230                     l1255:
  3624                           
  3625                           ;main.c: 120:    RC2 =1;
  3626  0230  1507               	bsf	7,2	;volatile
  3627  0231                     l1257:
  3628                           
  3629                           ;main.c: 121:    RC3=1;
  3630  0231  1587               	bsf	7,3	;volatile
  3631  0232                     l1259:
  3632                           
  3633                           ;main.c: 122:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3634  0232  3041               	movlw	65
  3635  0233  00F1               	movwf	??_LCD_dat+1
  3636  0234  30EE               	movlw	238
  3637  0235  00F0               	movwf	??_LCD_dat
  3638  0236                     u2287:
  3639  0236  0BF0               	decfsz	??_LCD_dat,f
  3640  0237  2A36               	goto	u2287
  3641  0238  0BF1               	decfsz	??_LCD_dat+1,f
  3642  0239  2A36               	goto	u2287
  3643  023A  0000               	nop
  3644  023B                     l1261:
  3645                           
  3646                           ;main.c: 123:    RC3=0;
  3647  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3648  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3649  023D  1187               	bcf	7,3	;volatile
  3650  023E                     l1263:
  3651                           
  3652                           ;main.c: 124:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3653  023E  3041               	movlw	65
  3654  023F  00F1               	movwf	??_LCD_dat+1
  3655  0240  30EE               	movlw	238
  3656  0241  00F0               	movwf	??_LCD_dat
  3657  0242                     u2297:
  3658  0242  0BF0               	decfsz	??_LCD_dat,f
  3659  0243  2A42               	goto	u2297
  3660  0244  0BF1               	decfsz	??_LCD_dat+1,f
  3661  0245  2A42               	goto	u2297
  3662  0246  0000               	nop
  3663  0247                     l90:
  3664  0247  0008               	return
  3665  0248                     __end_of_LCD_dat:
  3666                           
  3667                           	psect	text15
  3668  0FC2                     __ptext15:	
  3669 ;; *************** function _LCD_init *****************
  3670 ;; Defined at:
  3671 ;;		line 84 in file "main.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, pclath, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 1
  3692 ;; This function calls:
  3693 ;;		_LCD_cmd
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function _LCD_init
  3701  0FC2                     _LCD_init:
  3702  0FC2                     l1591:	
  3703                           ;incstack = 0
  3704                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3705                           
  3706                           
  3707                           ;main.c: 86:     LCD_cmd(0x02);
  3708  0FC2  3002               	movlw	2
  3709  0FC3  120A  118A  21B0  120A  158A  	fcall	_LCD_cmd
  3710                           
  3711                           ;main.c: 87:     LCD_cmd(0x28);
  3712  0FC8  3028               	movlw	40
  3713  0FC9  120A  118A  21B0  120A  158A  	fcall	_LCD_cmd
  3714                           
  3715                           ;main.c: 88:     LCD_cmd(0x0e);
  3716  0FCE  300E               	movlw	14
  3717  0FCF  120A  118A  21B0  120A  158A  	fcall	_LCD_cmd
  3718                           
  3719                           ;main.c: 89:     LCD_cmd(0x06);
  3720  0FD4  3006               	movlw	6
  3721  0FD5  120A  118A  21B0  120A  158A  	fcall	_LCD_cmd
  3722                           
  3723                           ;main.c: 90:     LCD_cmd(0x80);
  3724  0FDA  3080               	movlw	128
  3725  0FDB  120A  118A  21B0  120A  158A  	fcall	_LCD_cmd
  3726  0FE0                     l84:
  3727  0FE0  0008               	return
  3728  0FE1                     __end_of_LCD_init:
  3729                           
  3730                           	psect	text16
  3731  01B0                     __ptext16:	
  3732 ;; *************** function _LCD_cmd *****************
  3733 ;; Defined at:
  3734 ;;		line 93 in file "main.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  cmd             1    wreg     unsigned char 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  cmd             1    2[COMMON] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3748 ;;      Params:         0       0       0       0       0
  3749 ;;      Locals:         1       0       0       0       0
  3750 ;;      Temps:          2       0       0       0       0
  3751 ;;      Totals:         3       0       0       0       0
  3752 ;;Total ram usage:        3 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;;		_LCD_init
  3759 ;;		_fetch_sizes
  3760 ;;		_display_data
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _LCD_cmd
  3766  01B0                     _LCD_cmd:
  3767                           
  3768                           ;incstack = 0
  3769                           ; Regs used in _LCD_cmd: [wreg+status,2+status,0]
  3770                           ;LCD_cmd@cmd stored from wreg
  3771  01B0  00F2               	movwf	LCD_cmd@cmd
  3772  01B1                     l1395:
  3773                           
  3774                           ;main.c: 93: void LCD_cmd(unsigned char cmd);main.c: 94: {;main.c: 95:     RC2=0;
  3775  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  3776  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  3777  01B3  1107               	bcf	7,2	;volatile
  3778  01B4                     l1397:
  3779                           
  3780                           ;main.c: 96:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3781  01B4  3041               	movlw	65
  3782  01B5  00F1               	movwf	??_LCD_cmd+1
  3783  01B6  30EE               	movlw	238
  3784  01B7  00F0               	movwf	??_LCD_cmd
  3785  01B8                     u2307:
  3786  01B8  0BF0               	decfsz	??_LCD_cmd,f
  3787  01B9  29B8               	goto	u2307
  3788  01BA  0BF1               	decfsz	??_LCD_cmd+1,f
  3789  01BB  29B8               	goto	u2307
  3790  01BC  0000               	nop
  3791                           
  3792                           ;main.c: 97:    PORTC =(cmd);
  3793  01BD  0872               	movf	LCD_cmd@cmd,w
  3794  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3795  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3796  01C0  0087               	movwf	7	;volatile
  3797  01C1                     l1399:
  3798                           
  3799                           ;main.c: 98:    RC3=1;
  3800  01C1  1587               	bsf	7,3	;volatile
  3801                           
  3802                           ;main.c: 99:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3803  01C2  3041               	movlw	65
  3804  01C3  00F1               	movwf	??_LCD_cmd+1
  3805  01C4  30EE               	movlw	238
  3806  01C5  00F0               	movwf	??_LCD_cmd
  3807  01C6                     u2317:
  3808  01C6  0BF0               	decfsz	??_LCD_cmd,f
  3809  01C7  29C6               	goto	u2317
  3810  01C8  0BF1               	decfsz	??_LCD_cmd+1,f
  3811  01C9  29C6               	goto	u2317
  3812  01CA  0000               	nop
  3813  01CB                     l1401:
  3814                           
  3815                           ;main.c: 100:    RC3=0;
  3816  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  3817  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  3818  01CD  1187               	bcf	7,3	;volatile
  3819                           
  3820                           ;main.c: 101:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3821  01CE  3041               	movlw	65
  3822  01CF  00F1               	movwf	??_LCD_cmd+1
  3823  01D0  30EE               	movlw	238
  3824  01D1  00F0               	movwf	??_LCD_cmd
  3825  01D2                     u2327:
  3826  01D2  0BF0               	decfsz	??_LCD_cmd,f
  3827  01D3  29D2               	goto	u2327
  3828  01D4  0BF1               	decfsz	??_LCD_cmd+1,f
  3829  01D5  29D2               	goto	u2327
  3830  01D6  0000               	nop
  3831  01D7                     l1403:
  3832                           
  3833                           ;main.c: 102:    PORTC=(cmd<<4);
  3834  01D7  0872               	movf	LCD_cmd@cmd,w
  3835  01D8  00F0               	movwf	??_LCD_cmd
  3836  01D9  3003               	movlw	3
  3837  01DA                     u1435:
  3838  01DA  1003               	clrc
  3839  01DB  0DF0               	rlf	??_LCD_cmd,f
  3840  01DC  3EFF               	addlw	-1
  3841  01DD  1D03               	skipz
  3842  01DE  29DA               	goto	u1435
  3843  01DF  1003               	clrc
  3844  01E0  0D70               	rlf	??_LCD_cmd,w
  3845  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  3846  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  3847  01E3  0087               	movwf	7	;volatile
  3848  01E4                     l1405:
  3849                           
  3850                           ;main.c: 103:    RC2 =0;
  3851  01E4  1107               	bcf	7,2	;volatile
  3852  01E5                     l1407:
  3853                           
  3854                           ;main.c: 104:    RC3 =1;
  3855  01E5  1587               	bsf	7,3	;volatile
  3856  01E6                     l1409:
  3857                           
  3858                           ;main.c: 105:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3859  01E6  3041               	movlw	65
  3860  01E7  00F1               	movwf	??_LCD_cmd+1
  3861  01E8  30EE               	movlw	238
  3862  01E9  00F0               	movwf	??_LCD_cmd
  3863  01EA                     u2337:
  3864  01EA  0BF0               	decfsz	??_LCD_cmd,f
  3865  01EB  29EA               	goto	u2337
  3866  01EC  0BF1               	decfsz	??_LCD_cmd+1,f
  3867  01ED  29EA               	goto	u2337
  3868  01EE  0000               	nop
  3869  01EF                     l1411:
  3870                           
  3871                           ;main.c: 106:    RC3 =0;
  3872  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  3873  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  3874  01F1  1187               	bcf	7,3	;volatile
  3875  01F2                     l1413:
  3876                           
  3877                           ;main.c: 107:    _delay((unsigned long)((10)*(20000000/4000.0)));
  3878  01F2  3041               	movlw	65
  3879  01F3  00F1               	movwf	??_LCD_cmd+1
  3880  01F4  30EE               	movlw	238
  3881  01F5  00F0               	movwf	??_LCD_cmd
  3882  01F6                     u2347:
  3883  01F6  0BF0               	decfsz	??_LCD_cmd,f
  3884  01F7  29F6               	goto	u2347
  3885  01F8  0BF1               	decfsz	??_LCD_cmd+1,f
  3886  01F9  29F6               	goto	u2347
  3887  01FA  0000               	nop
  3888  01FB                     l87:
  3889  01FB  0008               	return
  3890  01FC                     __end_of_LCD_cmd:
  3891  007E                     btemp	set	126	;btemp
  3892  007E                     wtemp0	set	126
  3893                           
  3894                           	psect	idloc
  3895                           
  3896                           ;Config register IDLOC0 @ 0x2000
  3897                           ;	unspecified, using default values
  3898  2000                     	org	8192
  3899  2000  3FFF               	dw	16383
  3900                           
  3901                           ;Config register IDLOC1 @ 0x2001
  3902                           ;	unspecified, using default values
  3903  2001                     	org	8193
  3904  2001  3FFF               	dw	16383
  3905                           
  3906                           ;Config register IDLOC2 @ 0x2002
  3907                           ;	unspecified, using default values
  3908  2002                     	org	8194
  3909  2002  3FFF               	dw	16383
  3910                           
  3911                           ;Config register IDLOC3 @ 0x2003
  3912                           ;	unspecified, using default values
  3913  2003                     	org	8195
  3914  2003  3FFF               	dw	16383
  3915                           
  3916                           	psect	config
  3917                           
  3918                           ;Config register CONFIG @ 0x2007
  3919                           ;	Oscillator Selection bits
  3920                           ;	FOSC = HS, HS oscillator
  3921                           ;	Watchdog Timer Enable bit
  3922                           ;	WDTE = OFF, WDT disabled
  3923                           ;	Power-up Timer Enable bit
  3924                           ;	PWRTE = OFF, PWRT disabled
  3925                           ;	Brown-out Reset Enable bit
  3926                           ;	BOREN = ON, BOR enabled
  3927                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3928                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3929                           ;	Data EEPROM Memory Code Protection bit
  3930                           ;	CPD = OFF, Data EEPROM code protection off
  3931                           ;	Flash Program Memory Write Enable bits
  3932                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3933                           ;	In-Circuit Debugger Mode bit
  3934                           ;	DEBUG = 0x1, unprogrammed default
  3935                           ;	Flash Program Memory Code Protection bit
  3936                           ;	CP = OFF, Code protection off
  3937  2007                     	org	8199
  3938  2007  3FFA               	dw	16378

Data Sizes:
    Strings     154
    Constant    0
    Data        16
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 23
		 -> STR_9(CODE[12]), STR_8(CODE[14]), STR_7(CODE[12]), STR_6(CODE[21]), 
		 -> STR_5(CODE[23]), STR_4(CODE[21]), STR_3(CODE[18]), STR_2(CODE[18]), 
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_display_data
    _fn_winding_time->___wmul
    _fetch_sizes->___wmul
    _display_data->_LCD_num
    _show->_LCD_dat
    _LCD_num->___awdiv
    _LCD_init->_LCD_cmd

Critical Paths under _main in BANK0

    _main->_LCD_num
    _display_data->_LCD_num

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   12505
                                             14 BANK0      5     5      0
                            _LCD_cmd
                           _LCD_init
                            _LCD_num
                            ___awdiv
                       _display_data
                        _fetch_sizes
                    _fn_winding_time
                            _keyinit
                                _lut
                               _show
 ---------------------------------------------------------------------------------
 (1) _lut                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fn_winding_time                                     10     4      6    1192
                                              6 COMMON     6     0      6
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _fetch_sizes                                          5     5      0    1420
                                              6 COMMON     5     5      0
                            _LCD_cmd
                             ___wmul
                                _key
                               _show
 ---------------------------------------------------------------------------------
 (2) _key                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     852
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_data                                         3     3      0    4459
                                             11 COMMON     3     3      0
                            _LCD_cmd
                            _LCD_num
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     386
                                              3 COMMON     2     2      0
                            _LCD_dat
 ---------------------------------------------------------------------------------
 (2) _LCD_num                                             16    14      2    4029
                                              9 COMMON     2     0      2
                                              0 BANK0     14    14      0
                            _LCD_dat
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_dat                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      44
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_cmd
   _LCD_init
     _LCD_cmd
   _LCD_num
     _LCD_dat
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
   ___awdiv
   _display_data
     _LCD_cmd
     _LCD_num
     _show
       _LCD_dat
   _fetch_sizes
     _LCD_cmd
     ___wmul
     _key
     _show
   _fn_winding_time
     ___wmul
   _keyinit
   _lut
   _show

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D      12        0.0%
ABS                  0      0      3D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 21 21:12:57 2022

            fetch_sizes@i 0079                         pc 0002                        l90 0247  
                      l84 0FE0                        l76 0415                        l77 0415  
                      l87 01FB                        l96 0FFF                        l99 0FB1  
            ___awdiv@sign 0076                        fsr 0004       ___wmul@multiplicand 0072  
           ?_display_data 0070                       l102 0507                       l112 05DE  
                     l113 0578                       l122 05F0                       l115 0575  
                     l107 05CE                       l132 064F                       l124 0603  
                     l116 05A3                       l125 062D                       l109 054F  
                     l141 0503                       l126 0618                       l152 0131  
                     l129 062D                       l162 07E1                       l251 00C9  
                     l404 0307                       l165 0372                       l253 00E1  
                     l149 0106                       l158 07E1                       l417 02A0  
                     l523 01AF                       l533 016B           _fn_winding_time 0107  
                     _RB0 0030                       _RB1 0031                       _RC2 003A  
                     _RD0 0040                       _RC3 003B                       _RD1 0041  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     _key 0504                       _lut 00E2                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076              _winding_time 0043  
         __end_of_LCD_dat 0248           __end_of_LCD_cmd 01FC           __end_of_LCD_num 07E2  
                    l1301 02F9                      l1303 02FE                      l1311 0249  
                    l1401 01CB                      l1305 0303                      l1321 025D  
                    l1313 024D                      l1411 01EF                      l1403 01D7  
                    l1251 0217                      l1331 0275                      l1323 0263  
                    l1315 0252                      l1413 01F2                      l1405 01E4  
                    l1261 023B                      l1253 0223                      l1245 01FD  
                    l1341 0297                      l1333 027F                      l1325 0266  
                    l1317 0254                      l1309 0248                      l1421 0FF3  
                    l1501 0545                      l1407 01E5                      l1263 023E  
                    l1255 0230                      l1247 0200                      l1271 02AB  
                    l1343 029C                      l1335 0285                      l1327 026D  
                    l1319 0258                      l1351 0174                      l1431 0673  
                    l1423 0650                      l1415 0FE2                      l1511 0571  
                    l1503 0549                      l1409 01E6                      l1257 0231  
                    l1249 020D                      l1281 02BC                      l1273 02AD  
                    l1265 02A1                      l1337 028C                      l1329 0271  
                    l1361 0197                      l1353 0177                      l1433 0686  
                    l1441 06AE                      l1425 0659                      l1417 0FE3  
                    l1521 05BD                      l1513 0592                      l1505 054D  
                    l1601 0425                      l1259 0232                      l1291 02D4  
                    l1283 02C2                      l1275 02B1                      l1267 02A2  
                    l1339 0292                      l1363 019D                      l1355 017E  
                    l1347 016C                      l1451 0701                      l1443 06B7  
                    l1435 068A                      l1427 0661                      l1419 0FEF  
                    l1531 05D6                      l1523 05C1                      l1515 0596  
                    l1507 0569                      l1611 044D                      l1293 02E5  
                    l1285 02C5                      l1277 02B6                      l1269 02A6  
                    l1365 019E                      l1357 0182                      l1349 016E  
                    l1381 0146                      l1373 0132                      l1461 0737  
                    l1453 0714                      l1445 06C0                      l1437 069D  
                    l1429 066A                      l1541 05EE                      l1533 05DA  
                    l1525 05C5                      l1517 059A                      l1509 056D  
                    l1613 045A                      l1701 03A7                      l1295 02EB  
                    l1287 02CC                      l1279 02BA                      l1367 01A5  
                    l1359 0186                      l1383 014A                      l1375 0138  
                    l1391 0167                      l1471 0794                      l1463 0740  
                    l1455 071B                      l1447 06E6                      l1439 06A4  
                    l1551 0607                      l1543 05F4                      l1535 05E2  
                    l1527 05C9                      l1519 059E                      l1631 04A8  
                    l1615 0467                      l1607 0427                      l1711 03C1  
                    l1703 03AC                      l1297 02EC                      l1289 02D0  
                    l1369 01AB                      l1385 0154                      l1377 013B  
                    l1481 07D7                      l1473 07AB                      l1465 0766  
                    l1457 0724                      l1449 06EA                      l1561 0620  
                    l1553 060B                      l1545 05F8                      l1537 05E6  
                    l1529 05D2                      l1633 04B5                      l1625 0475  
                    l1617 046D                      l1609 0447                      l1721 03DF  
                    l1713 03CF                      l1705 03B2                      l1395 01B1  
                    l1299 02F3                      l1387 015A                      l1379 0142  
                    l1475 07BE                      l1467 076A                      l1459 072E  
                    l1571 0639                      l1563 0624                      l1555 060F  
                    l1547 05FC                      l1539 05EA                      l1491 0518  
                    l1483 0504                      l1643 04C3                      l1635 04BB  
                    l1627 0495                      l1619 0473                      l1651 00E2  
                    l1731 040C                      l1723 03E5                      l1715 03D2  
                    l1707 03B8                      l1397 01B4                      l1389 0161  
                    l1477 07C5                      l1469 0781                      l1581 00C3  
                    l1573 063D                      l1565 0628                      l1557 0613  
                    l1549 0600                      l1493 0525                      l1485 050B  
                    l1645 04E3                      l1637 04C1                      l1629 049B  
                    l1661 0102                      l1653 00EA                      l1725 03EB  
                    l1717 03D3                      l1709 03BE                      l1399 01C1  
                    l1591 0FC2                      l1479 07CE                      l1671 0314  
                    l1583 00D0                      l1567 0631                      l1559 061C  
                    l1495 0528                      l1487 050F                      l1647 04E9  
                    l1663 0107                      l1655 00EF                      l1727 03F1  
                    l1719 03D9                      l1681 033D                      l1673 031A  
                    l1585 00D7                      l1577 00BD                      l1569 0635  
                    l1497 053D                      l1489 0513                      l1649 04F6  
                    l1665 012D                      l1593 0FAA                      l1657 00F6  
                    l1729 03F7                      l1683 0348                      l1675 0320  
                    l1587 00DD                      l1579 00BF                      l1499 0541  
                    l1595 0FAE                      l1659 00FB                      l1691 037A  
                    l1685 034E                      l1677 032B                      l1669 0308  
                    l1597 0419                      l1693 037F                      l1687 0365  
                    l1679 0337                      l1599 041F                      l1695 0384  
                    l1697 0389                      l1689 0373                      l1699 038E  
                    ?_key 0070                      ?_lut 0070                      STR_1 006E  
                    STR_2 005C                      STR_3 004A                      STR_4 0020  
                    STR_5 0009                      STR_6 0035                      STR_7 008B  
                    STR_8 007D                      STR_9 0097                      u1110 02A6  
                    u1111 02A5                      u1200 02FE                      u1120 02B1  
                    u2000 061C                      u1105 0226                      u1201 02FD  
                    u1121 02B0                      u2001 061B                      u1130 02C2  
                    u1210 024D                      u2010 0620                      u1131 02C1  
                    u1211 024C                      u2011 061F                      u1220 0258  
                    u1300 0174                      u2020 0624                      u1221 0257  
                    u1301 0173                      u2021 0623                      u1150 02D4  
                    u1230 0263                      u2030 0628                      u1151 02D3  
                    u1231 0262                      u2031 0627                      u1320 0186  
                    u1400 0154                      u2120 00DD                      u2040 0631  
                    u1145 02C6                      u1321 0185                      u1401 0153  
                    u2121 00DC                      u2105 00CA                      u2041 0630  
                    u1170 02E5                      u1250 0275                      u2050 0635  
                    u2130 045A                      u1171 02E4                      u1251 0274  
                    u1315 0178                      u2115 00D1                      u2051 0634  
                    u2131 0459                      u1260 027F                      u1340 0197  
                    u1420 0167                      u1500 0737                      u2060 0639  
                    u2140 04A8                      u1165 02D5                      u1261 027E  
                    u1245 0267                      u1341 0196                      u1421 0166  
                    u1405 0150                      u1501 0736                      u2061 0638  
                    u2141 04A7                      u1190 02F9                      u1510 0740  
                    u2070 063D                      u2150 04F6                      u1191 02F8  
                    u1175 02E1                      u1335 0187                      u1415 015B  
                    u1511 073F                      u2071 063C                      u2151 04F5  
                    u2207 0460                      u2135 0456                      u1280 0292  
                    u1360 01AB                      u1440 0FFF                      u1600 0545  
                    u1520 050B                      u2160 00EA                      u1185 02ED  
                    u1281 0291                      u1265 027B                      u1361 01AA  
                    u1345 0193                      u1441 0FFE                      u1601 0544  
                    u1521 050A                      u2217 04AE                      u2145 04A4  
                    u2161 00E9                      u1290 0297                      u1370 0138  
                    u1450 0659                      u2090 00C3                      u1610 0549  
                    u1530 050F                      u2170 00F6                      u1435 01DA  
                    u2307 01B8                      u1291 0296                      u1275 0286  
                    u1355 019F                      u1371 0137                      u1451 0658  
                    u2091 00C2                      u1611 0548                      u1531 050E  
                    u2227 04FC                      u2155 04F2                      u2171 00F5  
                    u1460 066A                      u1700 0581                      u1620 054D  
                    u1540 0513                      u2180 0102                      u2317 01C6  
                    u1461 0669                      u2085 0640                      u1701 057D  
                    u1621 054C                      u2237 051E                      u1541 0512  
                    u2181 0101                      u1390 014A                      u1470 0673  
                    u1710 058B                      u1630 0558                      u1550 0517  
                    u2327 01D2                      u1391 0149                      u1471 0672  
                    u2247 036B                      u1711 0587                      u1631 0554  
                    u1551 0516                      u1480 06B7                      u1800 05BD  
                    u1640 0562                      u1560 0530                      u2337 01EA  
                    u2257 0204                      u1385 013C                      u1481 06B6  
                    u1801 05BC                      u1641 055E                      u1561 052C  
                    u1490 06C0                      u1810 05C1                      u1730 0592  
                    u1714 0584                      u1570 053A                      u2347 01F6  
                    u2267 0212                      u1491 06BF                      u1811 05C0  
                    u1731 0591                      u1571 0536                      u1900 05EA  
                    u1820 05C5                      u1740 0596                      u1724 058E  
                    u1660 0569                      u1644 055B                      u2277 021E  
                    u1901 05E9                      u1821 05C4                      u1741 0595  
                    u1661 0568                      u2197 03C9                      u1910 05EE  
                    u1830 05C9                      u1750 059A                      u1670 056D  
                    u1654 0565                      u1590 0541                      u1574 0533  
                    u2287 0236                      u1911 05ED                      u1831 05C8  
                    u1751 0599                      u1671 056C                      u1591 0540  
                    u1920 05F4                      u1840 05D2                      u1760 059E  
                    u1680 0571                      u1584 053D                      u2297 0242  
                    u1921 05F3                      u1841 05D1                      u1761 059D  
                    u1681 0570                      u1930 05F8                      u1850 05D6  
                    u1770 05AC                      u1690 0575                      u1931 05F7  
                    u1851 05D5                      u1771 05A8                      u1691 0574  
                    u1940 05FC                      u1860 05DA                      u1780 05B6  
                    u1941 05FB                      u1861 05D9                      u1781 05B2  
                    u1950 0600                      u1870 05DE                      u1951 05FF  
                    u1871 05DD                      u1960 0607                      u1880 05E2  
                    u1784 05AF                      u1961 0606                      u1881 05E1  
                    u1970 060B                      u1890 05E6                      u1794 05B9  
                    u1971 060A                      u1891 05E5                      u1980 060F  
                    u1981 060E                      u1990 0613                      u1991 0612  
                    _main 0373                      _show 0FE1                      btemp 007E  
                    start 0000                     ??_key 0070                     ??_lut 0070  
        __end_of_LCD_init 0FE1            ??_display_data 007B                     ?_main 0070  
         __end_of___awdiv 0308           __end_of___awmod 02A1                     ?_show 0070  
         ___awdiv@divisor 0070           __end_of___lwdiv 01B0           __end_of___lwmod 016C  
         ___awdiv@counter 0075                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
             LCD_dat@data 0072           __end_of_keyinit 0FB2                     pclath 000A  
                   show@s 0074                     status 0003                     wtemp0 007E  
         __initialization 07E2              __end_of_main 0419   __end_of_fn_winding_time 0132  
            __end_of_show 1000                    ??_main 002E                    ??_show 0073  
          LCD_num@result1 002A                 ??_LCD_dat 0070                 ??_LCD_cmd 0070  
               ??_LCD_num 007B          ___awdiv@dividend 0072      __size_of_fetch_sizes 00EB  
                  ___wmul 00BD                 ??___awdiv 0074                 ??___awmod 0074  
               ??___lwdiv 0074                 ??___lwmod 0074                    _colloc 004D  
                  _keypad 0033          ___awdiv@quotient 0077           ___awmod@divisor 0070  
         ___awmod@counter 0075                    _rowloc 004E                 ??_keyinit 0070  
        fn_winding_time@a 0076          fn_winding_time@b 0078          fn_winding_time@c 007A  
        fn_winding_time@d 0020   __end_of__initialization 07FC      __end_of_display_data 0373  
               ?_LCD_init 0070            __pcstackCOMMON 0070              __pidataBANK0 0FB2  
        ?_fn_winding_time 0076                __pbssBANK0 0043                ??_LCD_init 0073  
              __pmaintext 0373                   ?___wmul 0070       _fn_winding_time$746 0022  
                 _LCD_dat 01FC                   _LCD_cmd 01B0                   _LCD_num 0650  
              __stringtab 0003                   ___awdiv 02A1                   ___awmod 0248  
         __size_of___wmul 0025                   ___lwdiv 016C                   ___lwmod 0132  
                 __ptext1 00E2                   __ptext2 0FAA                   __ptext3 0107  
                 __ptext4 0419                   __ptext5 0504                   __ptext6 00BD  
                 __ptext7 0308                   __ptext8 0FE1                   __ptext9 0650  
            __size_of_key 014C              __size_of_lut 0025                   _keyinit 0FAA  
        ___awmod@dividend 0072     __size_of_display_data 006B      end_of_initialization 07FC  
            _display_data 0308             ??_fetch_sizes 0076         __size_of_LCD_init 001F  
          __end_of___wmul 00E2                LCD_cmd@cmd 0072       start_initialization 07E2  
             __end_of_key 0650               __end_of_lut 0107             LCD_num@digit1 0026  
           LCD_num@digit2 0028             LCD_num@digit3 0024             LCD_num@digit4 0020  
              LCD_num@val 0079             LCD_num@result 0022       __end_of_fetch_sizes 0504  
                ??___wmul 0074                init_fetch0 00AA               __pdataBANK0 0033  
        LCD_num@remainder 002C  __size_of_fn_winding_time 002B                  ?_LCD_dat 0070  
                ?_LCD_cmd 0070                  ?_LCD_num 0079                 ___latbits 0002  
           __pcstackBANK0 0020               _bobbin_size 0049          ___lwdiv@dividend 0072  
                ?___awdiv 0070                  ?___awmod 0070                  ?___lwdiv 0070  
                ?___lwmod 0070                 _coil_size 004B                 __pstrings 0003  
                ?_keyinit 0070          ___lwdiv@quotient 0075               _fetch_sizes 0419  
          ___wmul@product 0074                  _LCD_init 0FC2               __stringbase 0008  
       ___wmul@multiplier 0070          __size_of_LCD_dat 004C          __size_of_LCD_cmd 004C  
        __size_of_LCD_num 0192                 _turn_time 0045         ??_fn_winding_time 007C  
        __size_of___awdiv 0067          __size_of___awmod 0059          __size_of___lwdiv 0044  
        __size_of___lwmod 003A        __end_of__stringtab 0009          __size_of_keyinit 0008  
                _main$745 0031           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 0132                  __ptext11 016C                  __ptext12 0248  
                __ptext13 02A1                  __ptext14 01FC                  __ptext15 0FC2  
                __ptext16 01B0             __size_of_main 00A6             __size_of_show 001F  
                _no_turns 0047                  init_ram0 00AE          ___lwmod@dividend 0072  
               stringcode 0003           ___lwmod@divisor 0070           ___lwmod@counter 0075  
                stringdir 0003                  stringtab 0003              ?_fetch_sizes 0070  
