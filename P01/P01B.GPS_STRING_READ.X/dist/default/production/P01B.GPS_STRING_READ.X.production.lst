

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu May 19 17:17:35 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0088                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0093                     	;# 
   169  0094                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182                           
   183                           	psect	idataBANK0
   184  052D                     __pidataBANK0:
   185                           
   186                           ;initializer for _pv
   187  052D  3447               	retlw	71
   188  052E  3450               	retlw	80
   189  052F  3452               	retlw	82
   190  0018                     _RCSTA	set	24
   191  001A                     _RCREG	set	26
   192  0008                     _PORTD	set	8
   193  0065                     _RCIF	set	101
   194  003D                     _RC5	set	61
   195  003C                     _RC4	set	60
   196  0099                     _SPBRG	set	153
   197  0088                     _TRISD	set	136
   198  043D                     _TRISC5	set	1085
   199  043C                     _TRISC4	set	1084
   200                           
   201                           	psect	strings
   202  0003                     __pstrings:
   203  0003                     stringtab:
   204  0003                     __stringtab:
   205  0003                     stringcode:	
   206                           ;	String table - string pointers are 1 byte each
   207                           
   208  0003                     stringdir:
   209  0003  3000               	movlw	high stringdir
   210  0004  008A               	movwf	10
   211  0005  0804               	movf	4,w
   212  0006  0A84               	incf	4,f
   213  0007  0782               	addwf	2,f
   214  0008                     __stringbase:
   215  0008  3400               	retlw	0
   216  0009                     __end_of__stringtab:
   217  0009                     STR_5:
   218  0009  3446               	retlw	70	;'F'
   219  000A  344F               	retlw	79	;'O'
   220  000B  3452               	retlw	82	;'R'
   221  000C  3420               	retlw	32	;' '
   222  000D  3452               	retlw	82	;'R'
   223  000E  3445               	retlw	69	;'E'
   224  000F  3453               	retlw	83	;'S'
   225  0010  3445               	retlw	69	;'E'
   226  0011  3454               	retlw	84	;'T'
   227  0012  3454               	retlw	84	;'T'
   228  0013  3449               	retlw	73	;'I'
   229  0014  344E               	retlw	78	;'N'
   230  0015  3447               	retlw	71	;'G'
   231  0016  3420               	retlw	32	;' '
   232  0017  3444               	retlw	68	;'D'
   233  0018  3445               	retlw	69	;'E'
   234  0019  3456               	retlw	86	;'V'
   235  001A  3449               	retlw	73	;'I'
   236  001B  3443               	retlw	67	;'C'
   237  001C  3445               	retlw	69	;'E'
   238  001D  3400               	retlw	0
   239  001E                     STR_4:
   240  001E  3450               	retlw	80	;'P'
   241  001F  3452               	retlw	82	;'R'
   242  0020  3445               	retlw	69	;'E'
   243  0021  3453               	retlw	83	;'S'
   244  0022  3453               	retlw	83	;'S'
   245  0023  3420               	retlw	32	;' '
   246  0024  3450               	retlw	80	;'P'
   247  0025  3455               	retlw	85	;'U'
   248  0026  3453               	retlw	83	;'S'
   249  0027  3448               	retlw	72	;'H'
   250  0028  3420               	retlw	32	;' '
   251  0029  3442               	retlw	66	;'B'
   252  002A  3455               	retlw	85	;'U'
   253  002B  3454               	retlw	84	;'T'
   254  002C  3454               	retlw	84	;'T'
   255  002D  344F               	retlw	79	;'O'
   256  002E  344E               	retlw	78	;'N'
   257  002F  3400               	retlw	0
   258  0030                     STR_1:
   259  0030  3443               	retlw	67	;'C'
   260  0031  346F               	retlw	111	;'o'
   261  0032  346E               	retlw	110	;'n'
   262  0033  346E               	retlw	110	;'n'
   263  0034  3465               	retlw	101	;'e'
   264  0035  3463               	retlw	99	;'c'
   265  0036  3474               	retlw	116	;'t'
   266  0037  3469               	retlw	105	;'i'
   267  0038  346E               	retlw	110	;'n'
   268  0039  3467               	retlw	103	;'g'
   269  003A  342E               	retlw	46	;'.'
   270  003B  342E               	retlw	46	;'.'
   271  003C  342E               	retlw	46	;'.'
   272  003D  3400               	retlw	0
   273  003E                     STR_2:
   274  003E  344C               	retlw	76	;'L'
   275  003F  344F               	retlw	79	;'O'
   276  0040  344E               	retlw	78	;'N'
   277  0041  343A               	retlw	58	;':'
   278  0042  3400               	retlw	0
   279  0043                     STR_3:
   280  0043  344C               	retlw	76	;'L'
   281  0044  3441               	retlw	65	;'A'
   282  0045  3454               	retlw	84	;'T'
   283  0046  343A               	retlw	58	;':'
   284  0047  3400               	retlw	0
   285                           
   286                           	psect	cinit
   287  07D6                     start_initialization:	
   288                           ; #config settings
   289                           
   290  07D6                     __initialization:
   291                           
   292                           ; Initialize objects allocated to BANK0
   293  07D6  120A  118A  252D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   294  07DB  00A7               	movwf	__pdataBANK0& (0+127)
   295  07DC  120A  118A  252E  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   296  07E1  00A8               	movwf	(__pdataBANK0+1)& (0+127)
   297  07E2  120A  118A  252F  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   298  07E7  00A9               	movwf	(__pdataBANK0+2)& (0+127)
   299                           
   300                           ; Clear objects allocated to BANK3
   301  07E8  1783               	bsf	3,7	;select IRP bank2
   302  07E9  3090               	movlw	low __pbssBANK3
   303  07EA  0084               	movwf	4
   304  07EB  30EF               	movlw	low (__pbssBANK3+95)
   305  07EC  120A  118A  2530  120A  118A  	fcall	clear_ram0
   306                           
   307                           ; Clear objects allocated to BANK0
   308  07F1  01A0               	clrf	__pbssBANK0& (0+127)
   309  07F2  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   310  07F3  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   311  07F4  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   312  07F5  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   313  07F6  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   314  07F7  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   315                           
   316                           ; Clear objects allocated to COMMON
   317  07F8  01FA               	clrf	__pbssCOMMON& (0+127)
   318  07F9  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   319  07FA  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   320  07FB  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   321  07FC                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  07FC                     __end_of__initialization:
   325  07FC  0183               	clrf	3
   326  07FD  120A  118A  2DC9   	ljmp	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMMON
   329  007A                     __pbssCOMMON:
   330  007A                     _h:
   331  007A                     	ds	2
   332  007C                     _f:
   333  007C                     	ds	2
   334                           
   335                           	psect	bssBANK0
   336  0020                     __pbssBANK0:
   337  0020                     _r:
   338  0020                     	ds	3
   339  0023                     _i:
   340  0023                     	ds	2
   341  0025                     _checkgps:
   342  0025                     	ds	2
   343                           
   344                           	psect	dataBANK0
   345  0027                     __pdataBANK0:
   346  0027                     _pv:
   347  0027                     	ds	3
   348                           
   349                           	psect	bssBANK3
   350  0190                     __pbssBANK3:
   351  0190                     _a:
   352  0190                     	ds	95
   353                           
   354                           	psect	clrtext
   355  0530                     clear_ram0:	
   356                           ;	Called with FSR containing the base address, and
   357                           ;	W with the last address+1
   358                           
   359  0530  0064               	clrwdt	;clear the watchdog before getting into this loop
   360  0531                     clrloop0:
   361  0531  0180               	clrf	0	;clear RAM location pointed to by FSR
   362  0532  0A84               	incf	4,f	;increment pointer
   363  0533  0604               	xorwf	4,w	;XOR with final address
   364  0534  1903               	btfsc	3,2	;have we reached the end yet?
   365  0535  3400               	retlw	0	;all done for this memory range, return
   366  0536  0604               	xorwf	4,w	;XOR again to restore value
   367  0537  2D31               	goto	clrloop0	;do the next byte
   368                           
   369                           	psect	cstackCOMMON
   370  0070                     __pcstackCOMMON:
   371  0070                     ?_ser_int:
   372  0070                     ??_ser_int:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_read_data:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_show:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_print_data:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_reset_dispaly:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_main:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ??_LCD_command:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ??_LCD_data:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_rx:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ??_rx:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_LCD_init:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_LCD_command:	
   406                           ; 2 bytes @ 0x0
   407                           
   408  0070                     ?_LCD_data:	
   409                           ; 2 bytes @ 0x0
   410                           
   411                           
   412                           ; 2 bytes @ 0x0
   413  0070                     	ds	2
   414  0072                     LCD_command@cmd:
   415  0072                     LCD_data@data:	
   416                           ; 1 bytes @ 0x2
   417                           
   418                           
   419                           ; 1 bytes @ 0x2
   420  0072                     	ds	1
   421  0073                     ??_read_data:
   422  0073                     ??_LCD_init:	
   423                           ; 1 bytes @ 0x3
   424                           
   425  0073                     ??_show:	
   426                           ; 1 bytes @ 0x3
   427                           
   428                           
   429                           ; 1 bytes @ 0x3
   430  0073                     	ds	1
   431  0074                     show@s:
   432  0074                     read_data@gps:	
   433                           ; 1 bytes @ 0x4
   434                           
   435                           
   436                           ; 1 bytes @ 0x4
   437  0074                     	ds	1
   438  0075                     ??_print_data:
   439  0075                     ??_reset_dispaly:	
   440                           ; 1 bytes @ 0x5
   441                           
   442  0075                     read_data@j:	
   443                           ; 1 bytes @ 0x5
   444                           
   445                           
   446                           ; 2 bytes @ 0x5
   447  0075                     	ds	2
   448  0077                     ??_main:
   449                           
   450                           ; 1 bytes @ 0x7
   451  0077                     	ds	3
   452                           
   453                           	psect	maintext
   454  05C9                     __pmaintext:	
   455 ;;
   456 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   457 ;;
   458 ;; *************** function _main *****************
   459 ;; Defined at:
   460 ;;		line 38 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : B00/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0
   476 ;;      Temps:          3       0       0       0       0
   477 ;;      Totals:         3       0       0       0       0
   478 ;;Total ram usage:        3 bytes
   479 ;; Hardware stack levels required when called: 3
   480 ;; This function calls:
   481 ;;		_LCD_init
   482 ;;		_print_data
   483 ;;		_read_data
   484 ;;		_reset_dispaly
   485 ;;		_ser_int
   486 ;;		_show
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           
   493                           ;psect for function _main
   494  05C9                     _main:
   495  05C9                     l1085:	
   496                           ;incstack = 0
   497                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   498                           
   499                           
   500                           ;main.c: 40: TRISD=0x00;
   501  05C9  1683               	bsf	3,5	;RP0=1, select bank1
   502  05CA  1303               	bcf	3,6	;RP1=0, select bank1
   503  05CB  0188               	clrf	8	;volatile
   504  05CC                     l1087:
   505                           
   506                           ;main.c: 41: TRISC4 = TRISC5 = 0;
   507  05CC  1287               	bcf	7,5	;volatile
   508  05CD  1207               	bcf	7,4	;volatile
   509  05CE                     l1089:
   510                           
   511                           ;main.c: 42: ser_int();
   512  05CE  120A  118A  2541  120A  118A  	fcall	_ser_int
   513  05D3                     l1091:
   514                           
   515                           ;main.c: 44: read_data();
   516  05D3  120A  118A  260A  120A  118A  	fcall	_read_data
   517  05D8                     l1093:
   518                           
   519                           ;main.c: 45: LCD_init();
   520  05D8  120A  118A  258B  120A  118A  	fcall	_LCD_init
   521  05DD                     l1095:
   522                           
   523                           ;main.c: 46: show("Connecting...");
   524  05DD  3028               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   525  05DE  120A  118A  25AA  120A  118A  	fcall	_show
   526  05E3                     l1097:
   527                           
   528                           ;main.c: 47: _delay((unsigned long)((1000)*(20000000/4000.0)));
   529  05E3  301A               	movlw	26
   530  05E4  00F9               	movwf	??_main+2
   531  05E5  305E               	movlw	94
   532  05E6  00F8               	movwf	??_main+1
   533  05E7  306E               	movlw	110
   534  05E8  00F7               	movwf	??_main
   535  05E9                     u337:
   536  05E9  0BF7               	decfsz	??_main,f
   537  05EA  2DE9               	goto	u337
   538  05EB  0BF8               	decfsz	??_main+1,f
   539  05EC  2DE9               	goto	u337
   540  05ED  0BF9               	decfsz	??_main+2,f
   541  05EE  2DE9               	goto	u337
   542  05EF  0000               	nop
   543  05F0                     l1099:
   544                           
   545                           ;main.c: 48: print_data();
   546  05F0  120A  118A  26B5  120A  118A  	fcall	_print_data
   547  05F5                     l1101:
   548                           
   549                           ;main.c: 49: _delay((unsigned long)((300)*(20000000/4000.0)));
   550  05F5  3008               	movlw	8
   551  05F6  00F9               	movwf	??_main+2
   552  05F7  309D               	movlw	157
   553  05F8  00F8               	movwf	??_main+1
   554  05F9  3005               	movlw	5
   555  05FA  00F7               	movwf	??_main
   556  05FB                     u347:
   557  05FB  0BF7               	decfsz	??_main,f
   558  05FC  2DFB               	goto	u347
   559  05FD  0BF8               	decfsz	??_main+1,f
   560  05FE  2DFB               	goto	u347
   561  05FF  0BF9               	decfsz	??_main+2,f
   562  0600  2DFB               	goto	u347
   563  0601  2E02               	nop2
   564  0602                     l1103:
   565                           
   566                           ;main.c: 50: reset_dispaly();
   567  0602  120A  118A  2572  120A  118A  	fcall	_reset_dispaly
   568  0607                     l53:
   569  0607  120A  118A  2800   	ljmp	start
   570  060A                     __end_of_main:
   571                           
   572                           	psect	text1
   573  0541                     __ptext1:	
   574 ;; *************** function _ser_int *****************
   575 ;; Defined at:
   576 ;;		line 83 in file "main.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           
   604                           ;psect for function _ser_int
   605  0541                     _ser_int:
   606  0541                     l735:	
   607                           ;incstack = 0
   608                           ; Regs used in _ser_int: [wreg]
   609                           
   610                           
   611                           ;main.c: 85:  RCSTA= 0b10010000;
   612  0541  3090               	movlw	144
   613  0542  1283               	bcf	3,5	;RP0=0, select bank0
   614  0543  1303               	bcf	3,6	;RP1=0, select bank0
   615  0544  0098               	movwf	24	;volatile
   616                           
   617                           ;main.c: 86:  SPBRG=31;
   618  0545  301F               	movlw	31
   619  0546  1683               	bsf	3,5	;RP0=1, select bank1
   620  0547  1303               	bcf	3,6	;RP1=0, select bank1
   621  0548  0099               	movwf	25	;volatile
   622  0549                     l71:
   623  0549  0008               	return
   624  054A                     __end_of_ser_int:
   625                           
   626                           	psect	text2
   627  0572                     __ptext2:	
   628 ;; *************** function _reset_dispaly *****************
   629 ;; Defined at:
   630 ;;		line 171 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 2
   651 ;; This function calls:
   652 ;;		_LCD_command
   653 ;;		_show
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           
   660                           ;psect for function _reset_dispaly
   661  0572                     _reset_dispaly:
   662  0572                     l1079:	
   663                           ;incstack = 0
   664                           ; Regs used in _reset_dispaly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   665                           
   666                           
   667                           ;main.c: 173:     LCD_command(0x94);
   668  0572  3094               	movlw	148
   669  0573  120A  118A  254A  120A  118A  	fcall	_LCD_command
   670  0578                     l1081:
   671                           
   672                           ;main.c: 174:     show("PRESS PUSH BUTTON");
   673  0578  3016               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   674  0579  120A  118A  25AA  120A  118A  	fcall	_show
   675  057E                     l1083:
   676                           
   677                           ;main.c: 175:     LCD_command(0xD4);
   678  057E  30D4               	movlw	212
   679  057F  120A  118A  254A  120A  118A  	fcall	_LCD_command
   680                           
   681                           ;main.c: 176:     show("FOR RESETTING DEVICE");
   682  0584  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   683  0585  120A  118A  25AA  120A  118A  	fcall	_show
   684  058A                     l113:
   685  058A  0008               	return
   686  058B                     __end_of_reset_dispaly:
   687                           
   688                           	psect	text3
   689  060A                     __ptext3:	
   690 ;; *************** function _read_data *****************
   691 ;; Defined at:
   692 ;;		line 95 in file "main.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  gps             1    4[COMMON] unsigned char 
   697 ;;  j               2    5[COMMON] int 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       0       0       0       0
   708 ;;      Locals:         3       0       0       0       0
   709 ;;      Temps:          1       0       0       0       0
   710 ;;      Totals:         4       0       0       0       0
   711 ;;Total ram usage:        4 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; Hardware stack levels required when called: 1
   714 ;; This function calls:
   715 ;;		_LCD_data
   716 ;;		_rx
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           
   723                           ;psect for function _read_data
   724  060A                     _read_data:
   725  060A                     l933:	
   726                           ;incstack = 0
   727                           ; Regs used in _read_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   728                           
   729                           
   730                           ;main.c: 97:     for (int j=0; j<95;j++)
   731  060A  01F5               	clrf	read_data@j
   732  060B  01F6               	clrf	read_data@j+1
   733  060C                     l939:
   734                           
   735                           ;main.c: 98: {;main.c: 99: char gps = rx();
   736  060C  120A  118A  2538  120A  118A  	fcall	_rx
   737  0611  00F3               	movwf	??_read_data
   738  0612  0873               	movf	??_read_data,w
   739  0613  00F4               	movwf	read_data@gps
   740  0614                     l941:
   741                           
   742                           ;main.c: 100: if (gps == '$')
   743  0614  3024               	movlw	36
   744  0615  0674               	xorwf	read_data@gps,w
   745  0616  1D03               	btfss	3,2
   746  0617  2E19               	goto	u191
   747  0618  2E1A               	goto	u190
   748  0619                     u191:
   749  0619  2EA1               	goto	l985
   750  061A                     u190:
   751  061A                     l943:
   752                           
   753                           ;main.c: 101: {;main.c: 103:     for(f=0;f<3;f++) {
   754  061A  01FC               	clrf	_f
   755  061B  01FD               	clrf	_f+1
   756  061C                     l85:
   757  061C  1283               	bcf	3,5	;RP0=0, select bank0
   758  061D  1303               	bcf	3,6	;RP1=0, select bank0
   759  061E  1E8C               	btfss	12,5	;volatile
   760  061F  2E21               	goto	u201
   761  0620  2E22               	goto	u200
   762  0621                     u201:
   763  0621  2E1C               	goto	l85
   764  0622                     u200:
   765  0622                     l949:
   766                           
   767                           ;main.c: 105:         r[f]=RCREG;
   768  0622  081A               	movf	26,w	;volatile
   769  0623  00F3               	movwf	??_read_data
   770  0624  087C               	movf	_f,w
   771  0625  3E20               	addlw	(low (_r| 0))& (0+255)
   772  0626  0084               	movwf	4
   773  0627  0873               	movf	??_read_data,w
   774  0628  1383               	bcf	3,7	;select IRP bank0
   775  0629  0080               	movwf	0
   776  062A                     l951:
   777                           
   778                           ;main.c: 106:       }
   779  062A  3001               	movlw	1
   780  062B  07FC               	addwf	_f,f
   781  062C  1803               	skipnc
   782  062D  0AFD               	incf	_f+1,f
   783  062E  3000               	movlw	0
   784  062F  07FD               	addwf	_f+1,f
   785  0630                     l953:
   786  0630  087D               	movf	_f+1,w
   787  0631  3A80               	xorlw	128
   788  0632  00FF               	movwf	btemp+1
   789  0633  3080               	movlw	128
   790  0634  027F               	subwf	btemp+1,w
   791  0635  1D03               	skipz
   792  0636  2E39               	goto	u215
   793  0637  3003               	movlw	3
   794  0638  027C               	subwf	_f,w
   795  0639                     u215:
   796  0639  1C03               	skipc
   797  063A  2E3C               	goto	u211
   798  063B  2E3D               	goto	u210
   799  063C                     u211:
   800  063C  2E1C               	goto	l85
   801  063D                     u210:
   802  063D                     l955:
   803                           
   804                           ;main.c: 107:         r[f]='\0';
   805  063D  087C               	movf	_f,w
   806  063E  3E20               	addlw	(low (_r| 0))& (0+255)
   807  063F  0084               	movwf	4
   808  0640  1383               	bcf	3,7	;select IRP bank0
   809  0641  0180               	clrf	0
   810  0642                     l957:
   811                           
   812                           ;main.c: 111:         for (f=0;pv[f]!='\0';f++)
   813  0642  01FC               	clrf	_f
   814  0643  01FD               	clrf	_f+1
   815  0644  2E66               	goto	l967
   816  0645                     l959:
   817                           
   818                           ;main.c: 112:         {;main.c: 113:             if(r[f]!=pv[f])
   819  0645  087C               	movf	_f,w
   820  0646  3E27               	addlw	(low (_pv| 0))& (0+255)
   821  0647  0084               	movwf	4
   822  0648  0800               	movf	0,w
   823  0649  00F3               	movwf	??_read_data
   824  064A  087C               	movf	_f,w
   825  064B  3E20               	addlw	(low (_r| 0))& (0+255)
   826  064C  0084               	movwf	4
   827  064D  0800               	movf	0,w
   828  064E  0673               	xorwf	??_read_data,w
   829  064F  1903               	skipnz
   830  0650  2E52               	goto	u221
   831  0651  2E53               	goto	u220
   832  0652                     u221:
   833  0652  2E60               	goto	l965
   834  0653                     u220:
   835  0653                     l961:
   836                           
   837                           ;main.c: 114:             {;main.c: 115:                 checkgps=1;
   838  0653  3001               	movlw	1
   839  0654  1283               	bcf	3,5	;RP0=0, select bank0
   840  0655  1303               	bcf	3,6	;RP1=0, select bank0
   841  0656  00A5               	movwf	_checkgps
   842  0657  3000               	movlw	0
   843  0658  00A6               	movwf	_checkgps+1
   844  0659                     l963:
   845                           
   846                           ;main.c: 116:                 LCD_data('X');
   847  0659  3058               	movlw	88
   848  065A  120A  118A  255E  120A  118A  	fcall	_LCD_data
   849                           
   850                           ;main.c: 117:                 break;
   851  065F  2E6E               	goto	l969
   852  0660                     l965:
   853                           
   854                           ;main.c: 119:         }
   855  0660  3001               	movlw	1
   856  0661  07FC               	addwf	_f,f
   857  0662  1803               	skipnc
   858  0663  0AFD               	incf	_f+1,f
   859  0664  3000               	movlw	0
   860  0665  07FD               	addwf	_f+1,f
   861  0666                     l967:
   862  0666  087C               	movf	_f,w
   863  0667  3E27               	addlw	(low (_pv| 0))& (0+255)
   864  0668  0084               	movwf	4
   865  0669  0800               	movf	0,w
   866  066A  1D03               	btfss	3,2
   867  066B  2E6D               	goto	u231
   868  066C  2E6E               	goto	u230
   869  066D                     u231:
   870  066D  2E45               	goto	l959
   871  066E                     u230:
   872  066E                     l969:
   873                           
   874                           ;main.c: 121:          if(checkgps==0) {
   875  066E  1283               	bcf	3,5	;RP0=0, select bank0
   876  066F  1303               	bcf	3,6	;RP1=0, select bank0
   877  0670  0825               	movf	_checkgps,w
   878  0671  0426               	iorwf	_checkgps+1,w
   879  0672  1D03               	btfss	3,2
   880  0673  2E75               	goto	u241
   881  0674  2E76               	goto	u240
   882  0675                     u241:
   883  0675  2EA1               	goto	l985
   884  0676                     u240:
   885  0676                     l971:
   886                           
   887                           ;main.c: 122:              for(i=0;i<68;i++)
   888  0676  01A3               	clrf	_i
   889  0677  01A4               	clrf	_i+1
   890  0678                     l977:
   891                           
   892                           ;main.c: 123:             {;main.c: 124:                 a[i]=rx();
   893  0678  120A  118A  2538  120A  118A  	fcall	_rx
   894  067D  00F3               	movwf	??_read_data
   895  067E  1283               	bcf	3,5	;RP0=0, select bank0
   896  067F  1303               	bcf	3,6	;RP1=0, select bank0
   897  0680  0823               	movf	_i,w
   898  0681  3E90               	addlw	(low (_a| (0+256)))& (0+255)
   899  0682  0084               	movwf	4
   900  0683  0873               	movf	??_read_data,w
   901  0684  1783               	bsf	3,7	;select IRP bank3
   902  0685  0080               	movwf	0
   903  0686                     l979:
   904                           
   905                           ;main.c: 125:             }
   906  0686  3001               	movlw	1
   907  0687  07A3               	addwf	_i,f
   908  0688  1803               	skipnc
   909  0689  0AA4               	incf	_i+1,f
   910  068A  3000               	movlw	0
   911  068B  07A4               	addwf	_i+1,f
   912  068C                     l981:
   913  068C  0824               	movf	_i+1,w
   914  068D  3A80               	xorlw	128
   915  068E  00FF               	movwf	btemp+1
   916  068F  3080               	movlw	128
   917  0690  027F               	subwf	btemp+1,w
   918  0691  1D03               	skipz
   919  0692  2E95               	goto	u255
   920  0693  3044               	movlw	68
   921  0694  0223               	subwf	_i,w
   922  0695                     u255:
   923  0695  1C03               	skipc
   924  0696  2E98               	goto	u251
   925  0697  2E99               	goto	u250
   926  0698                     u251:
   927  0698  2E78               	goto	l977
   928  0699                     u250:
   929  0699                     l983:
   930                           
   931                           ;main.c: 126:          a[i]='\0';
   932  0699  1283               	bcf	3,5	;RP0=0, select bank0
   933  069A  1303               	bcf	3,6	;RP1=0, select bank0
   934  069B  0823               	movf	_i,w
   935  069C  3E90               	addlw	(low (_a| (0+256)))& (0+255)
   936  069D  0084               	movwf	4
   937  069E  1783               	bsf	3,7	;select IRP bank3
   938  069F  0180               	clrf	0
   939                           
   940                           ;main.c: 127:          break;
   941  06A0  2EB4               	goto	l95
   942  06A1                     l985:
   943                           
   944                           ;main.c: 130: }
   945  06A1  3001               	movlw	1
   946  06A2  07F5               	addwf	read_data@j,f
   947  06A3  1803               	skipnc
   948  06A4  0AF6               	incf	read_data@j+1,f
   949  06A5  3000               	movlw	0
   950  06A6  07F6               	addwf	read_data@j+1,f
   951  06A7                     l987:
   952  06A7  0876               	movf	read_data@j+1,w
   953  06A8  3A80               	xorlw	128
   954  06A9  00FF               	movwf	btemp+1
   955  06AA  3080               	movlw	128
   956  06AB  027F               	subwf	btemp+1,w
   957  06AC  1D03               	skipz
   958  06AD  2EB0               	goto	u265
   959  06AE  305F               	movlw	95
   960  06AF  0275               	subwf	read_data@j,w
   961  06B0                     u265:
   962  06B0  1C03               	skipc
   963  06B1  2EB3               	goto	u261
   964  06B2  2EB4               	goto	u260
   965  06B3                     u261:
   966  06B3  2E0C               	goto	l939
   967  06B4                     u260:
   968  06B4                     l95:
   969  06B4  0008               	return
   970  06B5                     __end_of_read_data:
   971                           
   972                           	psect	text4
   973  0538                     __ptext4:	
   974 ;; *************** function _rx *****************
   975 ;; Defined at:
   976 ;;		line 77 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      unsigned char 
   983 ;; Registers used:
   984 ;;		wreg
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_read_data
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _rx
  1005  0538                     _rx:
  1006  0538                     l927:	
  1007                           ;incstack = 0
  1008                           ; Regs used in _rx: [wreg]
  1009                           
  1010  0538                     l65:	
  1011                           ;main.c: 79:  while(!RCIF);
  1012                           
  1013  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1015  053A  1E8C               	btfss	12,5	;volatile
  1016  053B  2D3D               	goto	u181
  1017  053C  2D3E               	goto	u180
  1018  053D                     u181:
  1019  053D  2D38               	goto	l65
  1020  053E                     u180:
  1021  053E                     l67:
  1022                           
  1023                           ;main.c: 80:  RCIF=0;
  1024  053E  128C               	bcf	12,5	;volatile
  1025  053F                     l929:
  1026                           
  1027                           ;main.c: 81:  return RCREG;
  1028  053F  081A               	movf	26,w	;volatile
  1029  0540                     l68:
  1030  0540  0008               	return
  1031  0541                     __end_of_rx:
  1032                           
  1033                           	psect	text5
  1034  06B5                     __ptext5:	
  1035 ;; *************** function _print_data *****************
  1036 ;; Defined at:
  1037 ;;		line 132 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         0       0       0       0       0
  1055 ;;Total ram usage:        0 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 2
  1058 ;; This function calls:
  1059 ;;		_LCD_command
  1060 ;;		_LCD_data
  1061 ;;		_show
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _print_data
  1069  06B5                     _print_data:
  1070  06B5                     l989:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _print_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1073                           
  1074                           
  1075                           ;main.c: 134:     LCD_command(0x01);
  1076  06B5  3001               	movlw	1
  1077  06B6  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1078                           
  1079                           ;main.c: 135:     LCD_command(0x80);
  1080  06BB  3080               	movlw	128
  1081  06BC  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1082  06C1                     l991:
  1083                           
  1084                           ;main.c: 136:     show("LON:");
  1085  06C1  3036               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1086  06C2  120A  118A  25AA  120A  118A  	fcall	_show
  1087  06C7                     l993:
  1088                           
  1089                           ;main.c: 138:         LCD_command(0x84);
  1090  06C7  3084               	movlw	132
  1091  06C8  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1092  06CD                     l995:
  1093                           
  1094                           ;main.c: 139:         for(h=16;h<18;h++) {
  1095  06CD  3010               	movlw	16
  1096  06CE  00FA               	movwf	_h
  1097  06CF  3000               	movlw	0
  1098  06D0  00FB               	movwf	_h+1
  1099  06D1                     l1001:
  1100                           
  1101                           ;main.c: 140:           LCD_data(a[h]);
  1102  06D1  087A               	movf	_h,w
  1103  06D2  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1104  06D3  0084               	movwf	4
  1105  06D4  1783               	bsf	3,7	;select IRP bank3
  1106  06D5  0800               	movf	0,w
  1107  06D6  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1108  06DB                     l1003:
  1109                           
  1110                           ;main.c: 141:         }
  1111  06DB  3001               	movlw	1
  1112  06DC  07FA               	addwf	_h,f
  1113  06DD  1803               	skipnc
  1114  06DE  0AFB               	incf	_h+1,f
  1115  06DF  3000               	movlw	0
  1116  06E0  07FB               	addwf	_h+1,f
  1117  06E1                     l1005:
  1118  06E1  087B               	movf	_h+1,w
  1119  06E2  3A80               	xorlw	128
  1120  06E3  00FF               	movwf	btemp+1
  1121  06E4  3080               	movlw	128
  1122  06E5  027F               	subwf	btemp+1,w
  1123  06E6  1D03               	skipz
  1124  06E7  2EEA               	goto	u275
  1125  06E8  3012               	movlw	18
  1126  06E9  027A               	subwf	_h,w
  1127  06EA                     u275:
  1128  06EA  1C03               	skipc
  1129  06EB  2EED               	goto	u271
  1130  06EC  2EEE               	goto	u270
  1131  06ED                     u271:
  1132  06ED  2ED1               	goto	l1001
  1133  06EE                     u270:
  1134  06EE                     l1007:
  1135                           
  1136                           ;main.c: 142:         LCD_data('.');
  1137  06EE  302E               	movlw	46
  1138  06EF  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1139  06F4                     l1009:
  1140                           
  1141                           ;main.c: 143:         for(h=18;h<20;h++) {
  1142  06F4  3012               	movlw	18
  1143  06F5  00FA               	movwf	_h
  1144  06F6  3000               	movlw	0
  1145  06F7  00FB               	movwf	_h+1
  1146  06F8                     l1015:
  1147                           
  1148                           ;main.c: 144:           LCD_data(a[h]);
  1149  06F8  087A               	movf	_h,w
  1150  06F9  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1151  06FA  0084               	movwf	4
  1152  06FB  1783               	bsf	3,7	;select IRP bank3
  1153  06FC  0800               	movf	0,w
  1154  06FD  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1155  0702                     l1017:
  1156                           
  1157                           ;main.c: 145:         }
  1158  0702  3001               	movlw	1
  1159  0703  07FA               	addwf	_h,f
  1160  0704  1803               	skipnc
  1161  0705  0AFB               	incf	_h+1,f
  1162  0706  3000               	movlw	0
  1163  0707  07FB               	addwf	_h+1,f
  1164  0708                     l1019:
  1165  0708  087B               	movf	_h+1,w
  1166  0709  3A80               	xorlw	128
  1167  070A  00FF               	movwf	btemp+1
  1168  070B  3080               	movlw	128
  1169  070C  027F               	subwf	btemp+1,w
  1170  070D  1D03               	skipz
  1171  070E  2F11               	goto	u285
  1172  070F  3014               	movlw	20
  1173  0710  027A               	subwf	_h,w
  1174  0711                     u285:
  1175  0711  1C03               	skipc
  1176  0712  2F14               	goto	u281
  1177  0713  2F15               	goto	u280
  1178  0714                     u281:
  1179  0714  2EF8               	goto	l1015
  1180  0715                     u280:
  1181  0715                     l1021:
  1182                           
  1183                           ;main.c: 146:         for(h=21;h<25;h++) {
  1184  0715  3015               	movlw	21
  1185  0716  00FA               	movwf	_h
  1186  0717  3000               	movlw	0
  1187  0718  00FB               	movwf	_h+1
  1188  0719                     l1027:
  1189                           
  1190                           ;main.c: 147:           LCD_data(a[h]);
  1191  0719  087A               	movf	_h,w
  1192  071A  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1193  071B  0084               	movwf	4
  1194  071C  1783               	bsf	3,7	;select IRP bank3
  1195  071D  0800               	movf	0,w
  1196  071E  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1197  0723                     l1029:
  1198                           
  1199                           ;main.c: 148:         }
  1200  0723  3001               	movlw	1
  1201  0724  07FA               	addwf	_h,f
  1202  0725  1803               	skipnc
  1203  0726  0AFB               	incf	_h+1,f
  1204  0727  3000               	movlw	0
  1205  0728  07FB               	addwf	_h+1,f
  1206  0729                     l1031:
  1207  0729  087B               	movf	_h+1,w
  1208  072A  3A80               	xorlw	128
  1209  072B  00FF               	movwf	btemp+1
  1210  072C  3080               	movlw	128
  1211  072D  027F               	subwf	btemp+1,w
  1212  072E  1D03               	skipz
  1213  072F  2F32               	goto	u295
  1214  0730  3019               	movlw	25
  1215  0731  027A               	subwf	_h,w
  1216  0732                     u295:
  1217  0732  1C03               	skipc
  1218  0733  2F35               	goto	u291
  1219  0734  2F36               	goto	u290
  1220  0735                     u291:
  1221  0735  2F19               	goto	l1027
  1222  0736                     u290:
  1223  0736                     l1033:
  1224                           
  1225                           ;main.c: 149:         LCD_data(223);
  1226  0736  30DF               	movlw	223
  1227  0737  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1228                           
  1229                           ;main.c: 150:         LCD_data(' ');
  1230  073C  3020               	movlw	32
  1231  073D  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1232                           
  1233                           ;main.c: 151:         LCD_data('N');
  1234  0742  304E               	movlw	78
  1235  0743  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1236                           
  1237                           ;main.c: 153: LCD_command(0xc0);
  1238  0748  30C0               	movlw	192
  1239  0749  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1240  074E                     l1035:
  1241                           
  1242                           ;main.c: 154:         show("LAT:");
  1243  074E  303B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1244  074F  120A  118A  25AA  120A  118A  	fcall	_show
  1245  0754                     l1037:
  1246                           
  1247                           ;main.c: 156:         LCD_command(0xc4);
  1248  0754  30C4               	movlw	196
  1249  0755  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1250  075A                     l1039:
  1251                           
  1252                           ;main.c: 157:         for(h=29;h<31;h++) {
  1253  075A  301D               	movlw	29
  1254  075B  00FA               	movwf	_h
  1255  075C  3000               	movlw	0
  1256  075D  00FB               	movwf	_h+1
  1257  075E                     l1045:
  1258                           
  1259                           ;main.c: 158:           LCD_data(a[h]);
  1260  075E  087A               	movf	_h,w
  1261  075F  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1262  0760  0084               	movwf	4
  1263  0761  1783               	bsf	3,7	;select IRP bank3
  1264  0762  0800               	movf	0,w
  1265  0763  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1266  0768                     l1047:
  1267                           
  1268                           ;main.c: 159:         }
  1269  0768  3001               	movlw	1
  1270  0769  07FA               	addwf	_h,f
  1271  076A  1803               	skipnc
  1272  076B  0AFB               	incf	_h+1,f
  1273  076C  3000               	movlw	0
  1274  076D  07FB               	addwf	_h+1,f
  1275  076E                     l1049:
  1276  076E  087B               	movf	_h+1,w
  1277  076F  3A80               	xorlw	128
  1278  0770  00FF               	movwf	btemp+1
  1279  0771  3080               	movlw	128
  1280  0772  027F               	subwf	btemp+1,w
  1281  0773  1D03               	skipz
  1282  0774  2F77               	goto	u305
  1283  0775  301F               	movlw	31
  1284  0776  027A               	subwf	_h,w
  1285  0777                     u305:
  1286  0777  1C03               	skipc
  1287  0778  2F7A               	goto	u301
  1288  0779  2F7B               	goto	u300
  1289  077A                     u301:
  1290  077A  2F5E               	goto	l1045
  1291  077B                     u300:
  1292  077B                     l1051:
  1293                           
  1294                           ;main.c: 160:         LCD_data('.');
  1295  077B  302E               	movlw	46
  1296  077C  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1297  0781                     l1053:
  1298                           
  1299                           ;main.c: 161:         for(h=31;h<33;h++) {
  1300  0781  301F               	movlw	31
  1301  0782  00FA               	movwf	_h
  1302  0783  3000               	movlw	0
  1303  0784  00FB               	movwf	_h+1
  1304  0785                     l1059:
  1305                           
  1306                           ;main.c: 162:           LCD_data(a[h]);
  1307  0785  087A               	movf	_h,w
  1308  0786  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1309  0787  0084               	movwf	4
  1310  0788  1783               	bsf	3,7	;select IRP bank3
  1311  0789  0800               	movf	0,w
  1312  078A  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1313  078F                     l1061:
  1314                           
  1315                           ;main.c: 163:         }
  1316  078F  3001               	movlw	1
  1317  0790  07FA               	addwf	_h,f
  1318  0791  1803               	skipnc
  1319  0792  0AFB               	incf	_h+1,f
  1320  0793  3000               	movlw	0
  1321  0794  07FB               	addwf	_h+1,f
  1322  0795                     l1063:
  1323  0795  087B               	movf	_h+1,w
  1324  0796  3A80               	xorlw	128
  1325  0797  00FF               	movwf	btemp+1
  1326  0798  3080               	movlw	128
  1327  0799  027F               	subwf	btemp+1,w
  1328  079A  1D03               	skipz
  1329  079B  2F9E               	goto	u315
  1330  079C  3021               	movlw	33
  1331  079D  027A               	subwf	_h,w
  1332  079E                     u315:
  1333  079E  1C03               	skipc
  1334  079F  2FA1               	goto	u311
  1335  07A0  2FA2               	goto	u310
  1336  07A1                     u311:
  1337  07A1  2F85               	goto	l1059
  1338  07A2                     u310:
  1339  07A2                     l1065:
  1340                           
  1341                           ;main.c: 164:         for(h=34;h<38;h++) {
  1342  07A2  3022               	movlw	34
  1343  07A3  00FA               	movwf	_h
  1344  07A4  3000               	movlw	0
  1345  07A5  00FB               	movwf	_h+1
  1346  07A6                     l1071:
  1347                           
  1348                           ;main.c: 165:           LCD_data(a[h]);
  1349  07A6  087A               	movf	_h,w
  1350  07A7  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1351  07A8  0084               	movwf	4
  1352  07A9  1783               	bsf	3,7	;select IRP bank3
  1353  07AA  0800               	movf	0,w
  1354  07AB  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1355  07B0                     l1073:
  1356                           
  1357                           ;main.c: 166:         }
  1358  07B0  3001               	movlw	1
  1359  07B1  07FA               	addwf	_h,f
  1360  07B2  1803               	skipnc
  1361  07B3  0AFB               	incf	_h+1,f
  1362  07B4  3000               	movlw	0
  1363  07B5  07FB               	addwf	_h+1,f
  1364  07B6                     l1075:
  1365  07B6  087B               	movf	_h+1,w
  1366  07B7  3A80               	xorlw	128
  1367  07B8  00FF               	movwf	btemp+1
  1368  07B9  3080               	movlw	128
  1369  07BA  027F               	subwf	btemp+1,w
  1370  07BB  1D03               	skipz
  1371  07BC  2FBF               	goto	u325
  1372  07BD  3026               	movlw	38
  1373  07BE  027A               	subwf	_h,w
  1374  07BF                     u325:
  1375  07BF  1C03               	skipc
  1376  07C0  2FC2               	goto	u321
  1377  07C1  2FC3               	goto	u320
  1378  07C2                     u321:
  1379  07C2  2FA6               	goto	l1071
  1380  07C3                     u320:
  1381  07C3                     l1077:
  1382                           
  1383                           ;main.c: 167:         LCD_data(223);
  1384  07C3  30DF               	movlw	223
  1385  07C4  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1386                           
  1387                           ;main.c: 168:         LCD_data(' ');
  1388  07C9  3020               	movlw	32
  1389  07CA  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1390                           
  1391                           ;main.c: 169:         LCD_data('E');
  1392  07CF  3045               	movlw	69
  1393  07D0  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1394  07D5                     l110:
  1395  07D5  0008               	return
  1396  07D6                     __end_of_print_data:
  1397                           
  1398                           	psect	text6
  1399  05AA                     __ptext6:	
  1400 ;; *************** function _show *****************
  1401 ;; Defined at:
  1402 ;;		line 88 in file "main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  s               1    wreg     PTR unsigned char 
  1405 ;;		 -> STR_5(21), STR_4(18), STR_3(5), STR_2(5), 
  1406 ;;		 -> STR_1(14), 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  s               1    4[COMMON] PTR unsigned char 
  1409 ;;		 -> STR_5(21), STR_4(18), STR_3(5), STR_2(5), 
  1410 ;;		 -> STR_1(14), 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         1       0       0       0       0
  1422 ;;      Temps:          1       0       0       0       0
  1423 ;;      Totals:         2       0       0       0       0
  1424 ;;Total ram usage:        2 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 1
  1427 ;; This function calls:
  1428 ;;		_LCD_data
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;;		_print_data
  1432 ;;		_reset_dispaly
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _show
  1438  05AA                     _show:
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1442                           ;show@s stored from wreg
  1443  05AA  00F4               	movwf	show@s
  1444  05AB                     l919:
  1445                           
  1446                           ;main.c: 88: void show(unsigned char *s);main.c: 89: {;main.c: 90:   while(*s)
  1447  05AB  2DBC               	goto	l925
  1448  05AC                     l921:
  1449                           
  1450                           ;main.c: 91:   {;main.c: 92:     LCD_data(*s++);
  1451  05AC  0874               	movf	show@s,w
  1452  05AD  0084               	movwf	4
  1453  05AE  120A  118A  2003  120A  118A  	fcall	stringdir
  1454  05B3  120A  118A  255E  120A  118A  	fcall	_LCD_data
  1455  05B8                     l923:
  1456  05B8  3001               	movlw	1
  1457  05B9  00F3               	movwf	??_show
  1458  05BA  0873               	movf	??_show,w
  1459  05BB  07F4               	addwf	show@s,f
  1460  05BC                     l925:
  1461                           
  1462                           ;main.c: 90:   while(*s)
  1463  05BC  0874               	movf	show@s,w
  1464  05BD  0084               	movwf	4
  1465  05BE  120A  118A  2003  120A  118A  	fcall	stringdir
  1466  05C3  3A00               	xorlw	0
  1467  05C4  1D03               	skipz
  1468  05C5  2DC7               	goto	u171
  1469  05C6  2DC8               	goto	u170
  1470  05C7                     u171:
  1471  05C7  2DAC               	goto	l921
  1472  05C8                     u170:
  1473  05C8                     l77:
  1474  05C8  0008               	return
  1475  05C9                     __end_of_show:
  1476                           
  1477                           	psect	text7
  1478  055E                     __ptext7:	
  1479 ;; *************** function _LCD_data *****************
  1480 ;; Defined at:
  1481 ;;		line 61 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  data            1    wreg     unsigned char 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  data            1    2[COMMON] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  2   58[None  ] int 
  1488 ;; Registers used:
  1489 ;;		wreg
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       0       0       0       0
  1496 ;;      Locals:         1       0       0       0       0
  1497 ;;      Temps:          2       0       0       0       0
  1498 ;;      Totals:         3       0       0       0       0
  1499 ;;Total ram usage:        3 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_show
  1505 ;;		_read_data
  1506 ;;		_print_data
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _LCD_data
  1512  055E                     _LCD_data:
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _LCD_data: [wreg]
  1516                           ;LCD_data@data stored from wreg
  1517  055E  00F2               	movwf	LCD_data@data
  1518  055F                     l911:
  1519                           
  1520                           ;main.c: 61: LCD_data(unsigned char data);main.c: 62: {;main.c: 63:     PORTD = data;
  1521  055F  0872               	movf	LCD_data@data,w
  1522  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0562  0088               	movwf	8	;volatile
  1525  0563                     l913:
  1526                           
  1527                           ;main.c: 64:     RC4 = 1;
  1528  0563  1607               	bsf	7,4	;volatile
  1529  0564                     l915:
  1530                           
  1531                           ;main.c: 65:     RC5 = 1;
  1532  0564  1687               	bsf	7,5	;volatile
  1533                           
  1534                           ;main.c: 66:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1535  0565  3041               	movlw	65
  1536  0566  00F1               	movwf	??_LCD_data+1
  1537  0567  30EE               	movlw	238
  1538  0568  00F0               	movwf	??_LCD_data
  1539  0569                     u357:
  1540  0569  0BF0               	decfsz	??_LCD_data,f
  1541  056A  2D69               	goto	u357
  1542  056B  0BF1               	decfsz	??_LCD_data+1,f
  1543  056C  2D69               	goto	u357
  1544  056D  0000               	nop
  1545  056E                     l917:
  1546                           
  1547                           ;main.c: 67:     RC5 = 0;
  1548  056E  1283               	bcf	3,5	;RP0=0, select bank0
  1549  056F  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0570  1287               	bcf	7,5	;volatile
  1551  0571                     l59:
  1552  0571  0008               	return
  1553  0572                     __end_of_LCD_data:
  1554                           
  1555                           	psect	text8
  1556  058B                     __ptext8:	
  1557 ;; *************** function _LCD_init *****************
  1558 ;; Defined at:
  1559 ;;		line 69 in file "main.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  2   12[None  ] int 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, pclath, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0
  1576 ;;      Totals:         0       0       0       0       0
  1577 ;;Total ram usage:        0 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 1
  1580 ;; This function calls:
  1581 ;;		_LCD_command
  1582 ;; This function is called by:
  1583 ;;		_main
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           
  1588                           ;psect for function _LCD_init
  1589  058B                     _LCD_init:
  1590  058B                     l793:	
  1591                           ;incstack = 0
  1592                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1593                           
  1594                           
  1595                           ;main.c: 71:     LCD_command(0x38);
  1596  058B  3038               	movlw	56
  1597  058C  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1598                           
  1599                           ;main.c: 72:     LCD_command(0x0E);
  1600  0591  300E               	movlw	14
  1601  0592  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1602                           
  1603                           ;main.c: 73:     LCD_command(0x01);
  1604  0597  3001               	movlw	1
  1605  0598  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1606                           
  1607                           ;main.c: 74:     LCD_command(0x06);
  1608  059D  3006               	movlw	6
  1609  059E  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1610                           
  1611                           ;main.c: 75:     LCD_command(0x80);
  1612  05A3  3080               	movlw	128
  1613  05A4  120A  118A  254A  120A  118A  	fcall	_LCD_command
  1614  05A9                     l62:
  1615  05A9  0008               	return
  1616  05AA                     __end_of_LCD_init:
  1617                           
  1618                           	psect	text9
  1619  054A                     __ptext9:	
  1620 ;; *************** function _LCD_command *****************
  1621 ;; Defined at:
  1622 ;;		line 53 in file "main.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  cmd             1    wreg     unsigned char 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  cmd             1    2[COMMON] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2   55[None  ] int 
  1629 ;; Registers used:
  1630 ;;		wreg
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         0       0       0       0       0
  1637 ;;      Locals:         1       0       0       0       0
  1638 ;;      Temps:          2       0       0       0       0
  1639 ;;      Totals:         3       0       0       0       0
  1640 ;;Total ram usage:        3 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_LCD_init
  1646 ;;		_print_data
  1647 ;;		_reset_dispaly
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           
  1652                           ;psect for function _LCD_command
  1653  054A                     _LCD_command:
  1654                           
  1655                           ;incstack = 0
  1656                           ; Regs used in _LCD_command: [wreg]
  1657                           ;LCD_command@cmd stored from wreg
  1658  054A  00F2               	movwf	LCD_command@cmd
  1659  054B                     l721:
  1660                           
  1661                           ;main.c: 53: LCD_command(unsigned char cmd);main.c: 54: {;main.c: 55:     PORTD = cmd;
  1662  054B  0872               	movf	LCD_command@cmd,w
  1663  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1664  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1665  054E  0088               	movwf	8	;volatile
  1666  054F                     l723:
  1667                           
  1668                           ;main.c: 56:     RC4 = 0;
  1669  054F  1207               	bcf	7,4	;volatile
  1670  0550                     l725:
  1671                           
  1672                           ;main.c: 57:     RC5 = 1;
  1673  0550  1687               	bsf	7,5	;volatile
  1674                           
  1675                           ;main.c: 58:     _delay((unsigned long)((10)*(20000000/4000.0)));
  1676  0551  3041               	movlw	65
  1677  0552  00F1               	movwf	??_LCD_command+1
  1678  0553  30EE               	movlw	238
  1679  0554  00F0               	movwf	??_LCD_command
  1680  0555                     u367:
  1681  0555  0BF0               	decfsz	??_LCD_command,f
  1682  0556  2D55               	goto	u367
  1683  0557  0BF1               	decfsz	??_LCD_command+1,f
  1684  0558  2D55               	goto	u367
  1685  0559  0000               	nop
  1686  055A                     l727:
  1687                           
  1688                           ;main.c: 59:     RC5 = 0;
  1689  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1690  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1691  055C  1287               	bcf	7,5	;volatile
  1692  055D                     l56:
  1693  055D  0008               	return
  1694  055E                     __end_of_LCD_command:
  1695  007E                     btemp	set	126	;btemp
  1696  007E                     wtemp0	set	126
  1697                           
  1698                           	psect	idloc
  1699                           
  1700                           ;Config register IDLOC0 @ 0x2000
  1701                           ;	unspecified, using default values
  1702  2000                     	org	8192
  1703  2000  3FFF               	dw	16383
  1704                           
  1705                           ;Config register IDLOC1 @ 0x2001
  1706                           ;	unspecified, using default values
  1707  2001                     	org	8193
  1708  2001  3FFF               	dw	16383
  1709                           
  1710                           ;Config register IDLOC2 @ 0x2002
  1711                           ;	unspecified, using default values
  1712  2002                     	org	8194
  1713  2002  3FFF               	dw	16383
  1714                           
  1715                           ;Config register IDLOC3 @ 0x2003
  1716                           ;	unspecified, using default values
  1717  2003                     	org	8195
  1718  2003  3FFF               	dw	16383
  1719                           
  1720                           	psect	config
  1721                           
  1722                           ;Config register CONFIG @ 0x2007
  1723                           ;	Oscillator Selection bits
  1724                           ;	FOSC = HS, HS oscillator
  1725                           ;	Watchdog Timer Enable bit
  1726                           ;	WDTE = OFF, WDT disabled
  1727                           ;	Power-up Timer Enable bit
  1728                           ;	PWRTE = OFF, PWRT disabled
  1729                           ;	Brown-out Reset Enable bit
  1730                           ;	BOREN = ON, BOR enabled
  1731                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1732                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1733                           ;	Data EEPROM Memory Code Protection bit
  1734                           ;	CPD = OFF, Data EEPROM code protection off
  1735                           ;	Flash Program Memory Write Enable bits
  1736                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1737                           ;	In-Circuit Debugger Mode bit
  1738                           ;	DEBUG = 0x1, unprogrammed default
  1739                           ;	Flash Program Memory Code Protection bit
  1740                           ;	CP = OFF, Code protection off
  1741  2007                     	org	8199
  1742  2007  3FFA               	dw	16378

Data Sizes:
    Strings     63
    Constant    0
    Data        3
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0      95
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 21
		 -> STR_5(CODE[21]), STR_4(CODE[18]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_read_data
    _reset_dispaly->_show
    _read_data->_LCD_data
    _print_data->_show
    _show->_LCD_data
    _LCD_init->_LCD_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     854
                                              7 COMMON     3     3      0
                           _LCD_init
                         _print_data
                          _read_data
                      _reset_dispaly
                            _ser_int
                               _show
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reset_dispaly                                        0     0      0     247
                        _LCD_command
                               _show
 ---------------------------------------------------------------------------------
 (1) _read_data                                            4     4      0      91
                                              3 COMMON     4     4      0
                           _LCD_data
                                 _rx
 ---------------------------------------------------------------------------------
 (2) _rx                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_data                                           0     0      0     269
                        _LCD_command
                           _LCD_data
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     232
                                              3 COMMON     2     2      0
                           _LCD_data
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      15
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_command
   _print_data
     _LCD_command
     _LCD_data
     _show
       _LCD_data
   _read_data
     _LCD_data
     _rx
   _reset_dispaly
     _LCD_command
     _show
   _ser_int
   _show

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      5F       9       99.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      77      12        0.0%
ABS                  0      0      77       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu May 19 17:17:35 2022

                      _a 0190                        _f 007C                        _h 007A  
                      _i 0023                        _r 0020                        pc 0002  
                     l53 0607                       l62 05A9                       l71 0549  
                     l56 055D                       l65 0538                       l59 0571  
                     l67 053E                       l68 0540                       l77 05C8  
                     l85 061C                       l95 06B4                       _pv 0027  
                     _rx 0538                       fsr 0004                      l110 07D5  
                    l113 058A                      ?_rx 0070                      l721 054B  
                    l723 054F                      l725 0550                      l727 055A  
                    l911 055F                      l735 0541                      l913 0563  
                    l921 05AC                      l915 0564                      l923 05B8  
                    l917 056E                      l925 05BC                      l941 0614  
                    l933 060A                      l919 05AB                      l927 0538  
                    l951 062A                      l943 061A                      l793 058B  
                    l929 053F                      l961 0653                      l953 0630  
                    l971 0676                      l963 0659                      l955 063D  
                    l939 060C                      l981 068C                      l965 0660  
                    l957 0642                      l949 0622                      l991 06C1  
                    l983 0699                      l959 0645                      l967 0666  
                    l993 06C7                      l977 0678                      l969 066E  
                    l985 06A1                      l995 06CD                      l987 06A7  
                    l979 0686                      l989 06B5                      _RC4 003C  
                    _RC5 003D                      u200 0622                      u201 0621  
                    u210 063D                      u211 063C                      u300 077B  
                    u220 0653                      u301 077A                      u221 0652  
                    u310 07A2                      u230 066E                      u311 07A1  
                    u231 066D                      u215 0639                      u320 07C3  
                    u240 0676                      u321 07C2                      u305 0777  
                    u241 0675                      u170 05C8                      u250 0699  
                    u171 05C7                      u315 079E                      u251 0698  
                    u180 053E                      u260 06B4                      u325 07BF  
                    u181 053D                      u261 06B3                      u270 06EE  
                    u190 061A                      u271 06ED                      u255 0695  
                    u191 0619                      u280 0715                      u281 0714  
                    u265 06B0                      u337 05E9                      u290 0736  
                    u291 0735                      u275 06EA                      u347 05FB  
                    u357 0569                      u285 0711                      u367 0555  
                    u295 0732                      fsr0 0004                      indf 0000  
                   ??_rx 0070                     l1001 06D1                     l1003 06DB  
                   l1021 0715                     l1005 06E1                     l1101 05F5  
                   l1031 0729                     l1015 06F8                     l1007 06EE  
                   l1103 0602                     l1033 0736                     l1017 0702  
                   l1009 06F4                     l1051 077B                     l1035 074E  
                   l1027 0719                     l1019 0708                     l1061 078F  
                   l1053 0781                     l1045 075E                     l1037 0754  
                   l1029 0723                     l1071 07A6                     l1063 0795  
                   l1047 0768                     l1039 075A                     l1073 07B0  
                   l1065 07A2                     l1049 076E                     l1081 0578  
                   l1075 07B6                     l1059 0785                     l1083 057E  
                   l1091 05D3                     l1077 07C3                     l1093 05D8  
                   l1085 05C9                     l1079 0572                     l1095 05DD  
                   l1087 05CC                     l1097 05E3                     l1089 05CE  
                   l1099 05F0                     STR_1 0030                     STR_2 003E  
                   STR_3 0043                     STR_4 001E                     STR_5 0009  
           ?_LCD_command 0070                     _RCIF 0065                     _main 05C9  
                   _show 05AA                     btemp 007E                     start 0000  
       __end_of_LCD_data 0572         __end_of_LCD_init 05AA                    ?_main 0070  
                  ?_show 0070                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTD 0008                    _TRISD 0088  
        __end_of_ser_int 054A                    pclath 000A                    show@s 0074  
                  status 0003                    wtemp0 007E          __initialization 07D6  
           __end_of_main 060A             __end_of_show 05C9                   ??_main 0077  
                 ??_show 0073                   _TRISC4 043C                   _TRISC5 043D  
           LCD_data@data 0072                ??_ser_int 0070    __end_of_reset_dispaly 058B  
__end_of__initialization 07FC     __size_of_LCD_command 0014                ?_LCD_data 0070  
              ?_LCD_init 0070           __pcstackCOMMON 0070             __pidataBANK0 052D  
             __end_of_rx 0541               __pbssBANK0 0020               __pbssBANK3 0190  
             ??_LCD_data 0070               ??_LCD_init 0073       __size_of_read_data 00AB  
             __pmaintext 05C9               __stringtab 0003                  __ptext1 0541  
                __ptext2 0572                  __ptext3 060A                  __ptext4 0538  
                __ptext5 06B5                  __ptext6 05AA                  __ptext7 055E  
                __ptext8 058B                  __ptext9 054A        __end_of_read_data 06B5  
                _ser_int 0541                  clrloop0 0531     end_of_initialization 07FC  
           read_data@gps 0074               _print_data 06B5        __size_of_LCD_data 0014  
      __size_of_LCD_init 001F      start_initialization 07D6            ??_LCD_command 0070  
            __pdataBANK0 0027               read_data@j 0075   __size_of_reset_dispaly 0019  
            ?_print_data 0070              __pbssCOMMON 007A                ___latbits 0002  
    __end_of_LCD_command 055E                __pstrings 0003                 ?_ser_int 0070  
              _read_data 060A              __size_of_rx 0009            _reset_dispaly 0572  
               _LCD_data 055E                 _LCD_init 058B                clear_ram0 0530  
    __size_of_print_data 0121              __stringbase 0008               ?_read_data 0070  
            _LCD_command 054A           ?_reset_dispaly 0070       __end_of__stringtab 0009  
               _checkgps 0025         __size_of_ser_int 0009            __size_of_main 0041  
          __size_of_show 001F             ??_print_data 0075          ??_reset_dispaly 0075  
            ??_read_data 0073                stringcode 0003       __end_of_print_data 07D6  
               stringdir 0003                 stringtab 0003           LCD_command@cmd 0072  
