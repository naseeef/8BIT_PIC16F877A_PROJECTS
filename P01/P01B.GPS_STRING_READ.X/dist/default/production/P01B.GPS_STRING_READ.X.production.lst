

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 21 16:16:54 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186                           
   187                           	psect	idataBANK0
   188  0417                     __pidataBANK0:
   189                           
   190                           ;initializer for main@F1148
   191  0417  34C0               	retlw	192
   192  0418  3400               	retlw	0
   193  0419  34F9               	retlw	249
   194  041A  3400               	retlw	0
   195  041B  34A4               	retlw	164
   196  041C  3400               	retlw	0
   197  041D  34B0               	retlw	176
   198  041E  3400               	retlw	0
   199  041F  3499               	retlw	153
   200  0420  3400               	retlw	0
   201  0421  3492               	retlw	146
   202  0422  3400               	retlw	0
   203  0423  3482               	retlw	130
   204  0424  3400               	retlw	0
   205  0425  34F8               	retlw	248
   206  0426  3400               	retlw	0
   207  0427  3480               	retlw	128
   208  0428  3400               	retlw	0
   209  0429  3490               	retlw	144
   210  042A  3400               	retlw	0
   211  042B  34C0               	retlw	192
   212  042C  3400               	retlw	0
   213                           
   214                           ;initializer for _randx
   215  042D  3401               	retlw	1
   216  042E  3400               	retlw	0
   217  042F  3400               	retlw	0
   218  0430  3400               	retlw	0
   219                           
   220                           ;initializer for _pv
   221  0431  3447               	retlw	71
   222  0432  3450               	retlw	80
   223  0433  3452               	retlw	82
   224  0018                     _RCSTA	set	24
   225  001A                     _RCREG	set	26
   226  0008                     _PORTD	set	8
   227  0006                     _PORTB	set	6
   228  0065                     _RCIF	set	101
   229  003D                     _RC5	set	61
   230  003C                     _RC4	set	60
   231  003B                     _RC3	set	59
   232  0099                     _SPBRG	set	153
   233  0086                     _TRISB	set	134
   234  0088                     _TRISD	set	136
   235  043D                     _TRISC5	set	1085
   236  043C                     _TRISC4	set	1084
   237  043B                     _TRISC3	set	1083
   238                           
   239                           	psect	strings
   240  0003                     __pstrings:
   241  0003                     stringtab:
   242  0003                     __stringtab:
   243  0003                     stringcode:	
   244                           ;	String table - string pointers are 1 byte each
   245                           
   246  0003                     stringdir:
   247  0003  3000               	movlw	high stringdir
   248  0004  008A               	movwf	10
   249  0005  0804               	movf	4,w
   250  0006  0A84               	incf	4,f
   251  0007  0782               	addwf	2,f
   252  0008                     __stringbase:
   253  0008  3400               	retlw	0
   254  0009                     __end_of__stringtab:
   255  0009                     STR_9:
   256  0009  3421               	retlw	33	;'!'
   257  000A  3421               	retlw	33	;'!'
   258  000B  3443               	retlw	67	;'C'
   259  000C  3441               	retlw	65	;'A'
   260  000D  344E               	retlw	78	;'N'
   261  000E  3427               	retlw	39	;'''
   262  000F  3454               	retlw	84	;'T'
   263  0010  3420               	retlw	32	;' '
   264  0011  3446               	retlw	70	;'F'
   265  0012  3445               	retlw	69	;'E'
   266  0013  3454               	retlw	84	;'T'
   267  0014  3443               	retlw	67	;'C'
   268  0015  3448               	retlw	72	;'H'
   269  0016  3420               	retlw	32	;' '
   270  0017  3444               	retlw	68	;'D'
   271  0018  3441               	retlw	65	;'A'
   272  0019  3454               	retlw	84	;'T'
   273  001A  3441               	retlw	65	;'A'
   274  001B  3421               	retlw	33	;'!'
   275  001C  3421               	retlw	33	;'!'
   276  001D  3400               	retlw	0
   277  001E                     STR_8:
   278  001E  3421               	retlw	33	;'!'
   279  001F  3443               	retlw	67	;'C'
   280  0020  344C               	retlw	76	;'L'
   281  0021  344F               	retlw	79	;'O'
   282  0022  3455               	retlw	85	;'U'
   283  0023  3444               	retlw	68	;'D'
   284  0024  3459               	retlw	89	;'Y'
   285  0025  3420               	retlw	32	;' '
   286  0026  3445               	retlw	69	;'E'
   287  0027  344E               	retlw	78	;'N'
   288  0028  3456               	retlw	86	;'V'
   289  0029  3449               	retlw	73	;'I'
   290  002A  3452               	retlw	82	;'R'
   291  002B  344F               	retlw	79	;'O'
   292  002C  344E               	retlw	78	;'N'
   293  002D  344D               	retlw	77	;'M'
   294  002E  3445               	retlw	69	;'E'
   295  002F  344E               	retlw	78	;'N'
   296  0030  3454               	retlw	84	;'T'
   297  0031  3421               	retlw	33	;'!'
   298  0032  3400               	retlw	0
   299  0033                     STR_11:
   300  0033  342D               	retlw	45	;'-'
   301  0034  342D               	retlw	45	;'-'
   302  0035  342D               	retlw	45	;'-'
   303  0036  3454               	retlw	84	;'T'
   304  0037  3452               	retlw	82	;'R'
   305  0038  3459               	retlw	89	;'Y'
   306  0039  3420               	retlw	32	;' '
   307  003A  3420               	retlw	32	;' '
   308  003B  3452               	retlw	82	;'R'
   309  003C  3445               	retlw	69	;'E'
   310  003D  3453               	retlw	83	;'S'
   311  003E  3445               	retlw	69	;'E'
   312  003F  3454               	retlw	84	;'T'
   313  0040  3454               	retlw	84	;'T'
   314  0041  3449               	retlw	73	;'I'
   315  0042  344E               	retlw	78	;'N'
   316  0043  3447               	retlw	71	;'G'
   317  0044  342D               	retlw	45	;'-'
   318  0045  342D               	retlw	45	;'-'
   319  0046  342D               	retlw	45	;'-'
   320  0047  3400               	retlw	0
   321  0048                     STR_14:
   322  0048  3452               	retlw	82	;'R'
   323  0049  3445               	retlw	69	;'E'
   324  004A  3443               	retlw	67	;'C'
   325  004B  3448               	retlw	72	;'H'
   326  004C  3441               	retlw	65	;'A'
   327  004D  3452               	retlw	82	;'R'
   328  004E  3447               	retlw	71	;'G'
   329  004F  3445               	retlw	69	;'E'
   330  0050  3420               	retlw	32	;' '
   331  0051  3449               	retlw	73	;'I'
   332  0052  344D               	retlw	77	;'M'
   333  0053  344D               	retlw	77	;'M'
   334  0054  3445               	retlw	69	;'E'
   335  0055  3444               	retlw	68	;'D'
   336  0056  3449               	retlw	73	;'I'
   337  0057  3441               	retlw	65	;'A'
   338  0058  3454               	retlw	84	;'T'
   339  0059  3445               	retlw	69	;'E'
   340  005A  344C               	retlw	76	;'L'
   341  005B  3459               	retlw	89	;'Y'
   342  005C  3400               	retlw	0
   343  005D                     STR_12:
   344  005D  342D               	retlw	45	;'-'
   345  005E  3421               	retlw	33	;'!'
   346  005F  3421               	retlw	33	;'!'
   347  0060  3421               	retlw	33	;'!'
   348  0061  3442               	retlw	66	;'B'
   349  0062  3441               	retlw	65	;'A'
   350  0063  3454               	retlw	84	;'T'
   351  0064  3454               	retlw	84	;'T'
   352  0065  3445               	retlw	69	;'E'
   353  0066  3452               	retlw	82	;'R'
   354  0067  3459               	retlw	89	;'Y'
   355  0068  3420               	retlw	32	;' '
   356  0069  344C               	retlw	76	;'L'
   357  006A  344F               	retlw	79	;'O'
   358  006B  3457               	retlw	87	;'W'
   359  006C  3421               	retlw	33	;'!'
   360  006D  3421               	retlw	33	;'!'
   361  006E  3421               	retlw	33	;'!'
   362  006F  342D               	retlw	45	;'-'
   363  0070  3400               	retlw	0
   364  0071                     STR_7:
   365  0071  3446               	retlw	70	;'F'
   366  0072  344F               	retlw	79	;'O'
   367  0073  3452               	retlw	82	;'R'
   368  0074  3420               	retlw	32	;' '
   369  0075  3452               	retlw	82	;'R'
   370  0076  3445               	retlw	69	;'E'
   371  0077  3453               	retlw	83	;'S'
   372  0078  3454               	retlw	84	;'T'
   373  0079  3454               	retlw	84	;'T'
   374  007A  3449               	retlw	73	;'I'
   375  007B  344E               	retlw	78	;'N'
   376  007C  3447               	retlw	71	;'G'
   377  007D  3420               	retlw	32	;' '
   378  007E  3444               	retlw	68	;'D'
   379  007F  3445               	retlw	69	;'E'
   380  0080  3456               	retlw	86	;'V'
   381  0081  3449               	retlw	73	;'I'
   382  0082  3443               	retlw	67	;'C'
   383  0083  3445               	retlw	69	;'E'
   384  0084  3400               	retlw	0
   385  0085                     STR_6:
   386  0085  3450               	retlw	80	;'P'
   387  0086  3452               	retlw	82	;'R'
   388  0087  3445               	retlw	69	;'E'
   389  0088  3453               	retlw	83	;'S'
   390  0089  3453               	retlw	83	;'S'
   391  008A  3420               	retlw	32	;' '
   392  008B  3450               	retlw	80	;'P'
   393  008C  3455               	retlw	85	;'U'
   394  008D  3453               	retlw	83	;'S'
   395  008E  3448               	retlw	72	;'H'
   396  008F  3420               	retlw	32	;' '
   397  0090  3442               	retlw	66	;'B'
   398  0091  3455               	retlw	85	;'U'
   399  0092  3454               	retlw	84	;'T'
   400  0093  3454               	retlw	84	;'T'
   401  0094  344F               	retlw	79	;'O'
   402  0095  344E               	retlw	78	;'N'
   403  0096  3400               	retlw	0
   404  0097                     STR_2:
   405  0097  3443               	retlw	67	;'C'
   406  0098  346F               	retlw	111	;'o'
   407  0099  346E               	retlw	110	;'n'
   408  009A  346E               	retlw	110	;'n'
   409  009B  3465               	retlw	101	;'e'
   410  009C  3463               	retlw	99	;'c'
   411  009D  3474               	retlw	116	;'t'
   412  009E  3469               	retlw	105	;'i'
   413  009F  346E               	retlw	110	;'n'
   414  00A0  3467               	retlw	103	;'g'
   415  00A1  342E               	retlw	46	;'.'
   416  00A2  342E               	retlw	46	;'.'
   417  00A3  342E               	retlw	46	;'.'
   418  00A4  3400               	retlw	0
   419  00A5                     STR_15:
   420  00A5  3453               	retlw	83	;'S'
   421  00A6  3457               	retlw	87	;'W'
   422  00A7  3449               	retlw	73	;'I'
   423  00A8  3454               	retlw	84	;'T'
   424  00A9  3443               	retlw	67	;'C'
   425  00AA  3448               	retlw	72	;'H'
   426  00AB  3449               	retlw	73	;'I'
   427  00AC  344E               	retlw	78	;'N'
   428  00AD  3447               	retlw	71	;'G'
   429  00AE  3420               	retlw	32	;' '
   430  00AF  344F               	retlw	79	;'O'
   431  00B0  3446               	retlw	70	;'F'
   432  00B1  3446               	retlw	70	;'F'
   433  00B2  3400               	retlw	0
   434  00B3                     STR_3:
   435  00B3  3452               	retlw	82	;'R'
   436  00B4  3465               	retlw	101	;'e'
   437  00B5  3473               	retlw	115	;'s'
   438  00B6  3465               	retlw	101	;'e'
   439  00B7  3474               	retlw	116	;'t'
   440  00B8  3474               	retlw	116	;'t'
   441  00B9  3469               	retlw	105	;'i'
   442  00BA  346E               	retlw	110	;'n'
   443  00BB  3467               	retlw	103	;'g'
   444  00BC  342E               	retlw	46	;'.'
   445  00BD  342E               	retlw	46	;'.'
   446  00BE  342E               	retlw	46	;'.'
   447  00BF  3400               	retlw	0
   448  00C0                     STR_1:
   449  00C0  3457               	retlw	87	;'W'
   450  00C1  3445               	retlw	69	;'E'
   451  00C2  344C               	retlw	76	;'L'
   452  00C3  3443               	retlw	67	;'C'
   453  00C4  344F               	retlw	79	;'O'
   454  00C5  344D               	retlw	77	;'M'
   455  00C6  3445               	retlw	69	;'E'
   456  00C7  342E               	retlw	46	;'.'
   457  00C8  342E               	retlw	46	;'.'
   458  00C9  342E               	retlw	46	;'.'
   459  00CA  3400               	retlw	0
   460  00CB                     STR_4:
   461  00CB  344C               	retlw	76	;'L'
   462  00CC  344F               	retlw	79	;'O'
   463  00CD  344E               	retlw	78	;'N'
   464  00CE  343A               	retlw	58	;':'
   465  00CF  3400               	retlw	0
   466  00D0                     STR_5:
   467  00D0  344C               	retlw	76	;'L'
   468  00D1  3441               	retlw	65	;'A'
   469  00D2  3454               	retlw	84	;'T'
   470  00D3  343A               	retlw	58	;':'
   471  00D4  3400               	retlw	0
   472  00D5                     STR_10:
   473  00D5  3420               	retlw	32	;' '
   474  00D6  3400               	retlw	0
   475  005D                     
   476                           	psect	cinit
   477  07DE                     start_initialization:	
   478                           ; #config settings
   479                           
   480  07DE                     __initialization:
   481                           
   482                           ; Initialize objects allocated to BANK0
   483  07DE  1383               	bcf	3,7	;select IRP bank0
   484  07DF  303D               	movlw	low (__pdataBANK0+29)
   485  07E0  00FD               	movwf	btemp+-1
   486  07E1  3004               	movlw	high __pidataBANK0
   487  07E2  00FE               	movwf	btemp
   488  07E3  3017               	movlw	low __pidataBANK0
   489  07E4  00FF               	movwf	btemp+1
   490  07E5  3020               	movlw	low __pdataBANK0
   491  07E6  0084               	movwf	4
   492  07E7  120A  118A  23AC  120A  118A  	fcall	init_ram0
   493                           
   494                           ; Clear objects allocated to BANK3
   495  07EC  1783               	bsf	3,7	;select IRP bank2
   496  07ED  3090               	movlw	low __pbssBANK3
   497  07EE  0084               	movwf	4
   498  07EF  30EF               	movlw	low (__pbssBANK3+95)
   499  07F0  120A  118A  238E  120A  118A  	fcall	clear_ram0
   500                           
   501                           ; Clear objects allocated to BANK0
   502  07F5  01D7               	clrf	__pbssBANK0& (0+127)
   503  07F6  01D8               	clrf	(__pbssBANK0+1)& (0+127)
   504  07F7  01D9               	clrf	(__pbssBANK0+2)& (0+127)
   505  07F8  01DA               	clrf	(__pbssBANK0+3)& (0+127)
   506  07F9  01DB               	clrf	(__pbssBANK0+4)& (0+127)
   507  07FA  01DC               	clrf	(__pbssBANK0+5)& (0+127)
   508  07FB  01DD               	clrf	(__pbssBANK0+6)& (0+127)
   509  07FC                     end_of_initialization:	
   510                           ;End of C runtime variable initialization code
   511                           
   512  07FC                     __end_of__initialization:
   513  07FC  0183               	clrf	3
   514  07FD  120A  118A  2DFB   	ljmp	_main	;jump to C main() function
   515                           
   516                           	psect	bssBANK0
   517  0057                     __pbssBANK0:
   518  0057                     _r:
   519  0057                     	ds	3
   520  005A                     _reset_counter:
   521  005A                     	ds	2
   522  005C                     _random_case:
   523  005C                     	ds	2
   524                           
   525                           	psect	dataBANK0
   526  0020                     __pdataBANK0:
   527  0020                     main@F1148:
   528  0020                     	ds	22
   529  0036                     _randx:
   530  0036                     	ds	4
   531  003A                     _pv:
   532  003A                     	ds	3
   533                           
   534                           	psect	bssBANK3
   535  0190                     __pbssBANK3:
   536  0190                     _a:
   537  0190                     	ds	95
   538                           
   539                           	psect	inittext
   540  03A8                     init_fetch0:	
   541                           ;	Called with low address in FSR and high address in W
   542                           
   543  03A8  087E               	movf	btemp,w
   544  03A9  008A               	movwf	10
   545  03AA  087F               	movf	btemp+1,w
   546  03AB  0082               	movwf	2
   547  03AC                     init_ram0:	
   548                           ;Called with:
   549                           ;	high address of idata address in btemp 
   550                           ;	low address of idata address in btemp+1 
   551                           ;	low address of data in FSR
   552                           ;	high address + 1 of data in btemp-1
   553                           
   554  03AC  120A  118A  23A8  120A  118A  	fcall	init_fetch0
   555  03B1  0080               	movwf	0
   556  03B2  0A84               	incf	4,f
   557  03B3  0804               	movf	4,w
   558  03B4  067D               	xorwf	btemp+-1,w
   559  03B5  1903               	btfsc	3,2
   560  03B6  3400               	retlw	0
   561  03B7  0AFF               	incf	btemp+1,f
   562  03B8  1903               	btfsc	3,2
   563  03B9  0AFE               	incf	btemp,f
   564  03BA  2BAC               	goto	init_ram0
   565                           
   566                           	psect	clrtext
   567  038E                     clear_ram0:	
   568                           ;	Called with FSR containing the base address, and
   569                           ;	W with the last address+1
   570                           
   571  038E  0064               	clrwdt	;clear the watchdog before getting into this loop
   572  038F                     clrloop0:
   573  038F  0180               	clrf	0	;clear RAM location pointed to by FSR
   574  0390  0A84               	incf	4,f	;increment pointer
   575  0391  0604               	xorwf	4,w	;XOR with final address
   576  0392  1903               	btfsc	3,2	;have we reached the end yet?
   577  0393  3400               	retlw	0	;all done for this memory range, return
   578  0394  0604               	xorwf	4,w	;XOR again to restore value
   579  0395  2B8F               	goto	clrloop0	;do the next byte
   580                           
   581                           	psect	cstackCOMMON
   582  0070                     __pcstackCOMMON:
   583  0070                     ?_ser_int:
   584  0070                     ??_ser_int:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_LCD_init:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_read_data:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_show:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_LCD_command:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ??_LCD_command:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_low_battery:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_refresh_text:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_cloudy:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_main:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_LCD_data:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ??_LCD_data:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_rx:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ??_rx:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_print_data:	
   627                           ; 1 bytes @ 0x0
   628                           
   629                           
   630                           ; 1 bytes @ 0x0
   631  0070                     	ds	2
   632  0072                     LCD_command@cmd:
   633  0072                     LCD_data@data:	
   634                           ; 1 bytes @ 0x2
   635                           
   636                           
   637                           ; 1 bytes @ 0x2
   638  0072                     	ds	1
   639  0073                     ??_LCD_init:
   640  0073                     ??_read_data:	
   641                           ; 1 bytes @ 0x3
   642                           
   643  0073                     ??_show:	
   644                           ; 1 bytes @ 0x3
   645                           
   646                           
   647                           ; 1 bytes @ 0x3
   648  0073                     	ds	1
   649  0074                     show@s:
   650  0074                     read_data@flag:	
   651                           ; 1 bytes @ 0x4
   652                           
   653                           
   654                           ; 2 bytes @ 0x4
   655  0074                     	ds	1
   656  0075                     ??_low_battery:
   657  0075                     ??_refresh_text:	
   658                           ; 1 bytes @ 0x5
   659                           
   660  0075                     ??_cloudy:	
   661                           ; 1 bytes @ 0x5
   662                           
   663  0075                     ??_print_data:	
   664                           ; 1 bytes @ 0x5
   665                           
   666  0075                     print_data@h:	
   667                           ; 1 bytes @ 0x5
   668                           
   669                           
   670                           ; 2 bytes @ 0x5
   671  0075                     	ds	1
   672  0076                     read_data@gps:
   673                           
   674                           ; 1 bytes @ 0x6
   675  0076                     	ds	1
   676  0077                     read_data@j:
   677                           
   678                           ; 2 bytes @ 0x7
   679  0077                     	ds	1
   680  0078                     ?_corner_cases:
   681  0078                     corner_cases@number:	
   682                           ; 1 bytes @ 0x8
   683                           
   684                           
   685                           ; 2 bytes @ 0x8
   686  0078                     	ds	1
   687  0079                     read_data@i:
   688                           
   689                           ; 2 bytes @ 0x9
   690  0079                     	ds	1
   691  007A                     ??_corner_cases:
   692                           
   693                           ; 1 bytes @ 0xA
   694  007A                     	ds	1
   695  007B                     read_data@f:
   696                           
   697                           ; 2 bytes @ 0xB
   698  007B                     	ds	2
   699                           
   700                           	psect	cstackBANK0
   701  003D                     __pcstackBANK0:
   702  003D                     ??_main:
   703                           
   704                           ; 1 bytes @ 0x0
   705  003D                     	ds	4
   706  0041                     main@seven:
   707                           
   708                           ; 22 bytes @ 0x4
   709  0041                     	ds	22
   710                           
   711                           	psect	maintext
   712  05FB                     __pmaintext:	
   713 ;;
   714 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   715 ;;
   716 ;; *************** function _main *****************
   717 ;; Defined at:
   718 ;;		line 43 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  seven          22    4[BANK0 ] int [11]
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : B00/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0      22       0       0       0
   734 ;;      Temps:          0       4       0       0       0
   735 ;;      Totals:         0      26       0       0       0
   736 ;;Total ram usage:       26 bytes
   737 ;; Hardware stack levels required when called: 5
   738 ;; This function calls:
   739 ;;		_LCD_command
   740 ;;		_LCD_init
   741 ;;		_corner_cases
   742 ;;		_low_battery
   743 ;;		_read_data
   744 ;;		_ser_int
   745 ;;		_show
   746 ;; This function is called by:
   747 ;;		Startup code after reset
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           
   752                           ;psect for function _main
   753  05FB                     _main:
   754  05FB                     l1360:	
   755                           ;incstack = 0
   756                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   757                           
   758                           
   759                           ;main.c: 46: TRISD=0x00;
   760  05FB  1683               	bsf	3,5	;RP0=1, select bank1
   761  05FC  1303               	bcf	3,6	;RP1=0, select bank1
   762  05FD  0188               	clrf	8	;volatile
   763                           
   764                           ;main.c: 47: TRISB=0x00;
   765  05FE  0186               	clrf	6	;volatile
   766  05FF                     l1362:
   767                           
   768                           ;main.c: 48: TRISC3 = 1;
   769  05FF  1587               	bsf	7,3	;volatile
   770  0600                     l1364:
   771                           
   772                           ;main.c: 49: TRISC4 = TRISC5 = 0;
   773  0600  1287               	bcf	7,5	;volatile
   774  0601  1207               	bcf	7,4	;volatile
   775  0602                     l1366:
   776                           
   777                           ;main.c: 50: ser_int();
   778  0602  120A  118A  239F  120A  118A  	fcall	_ser_int
   779  0607                     l1368:
   780                           
   781                           ;main.c: 51: LCD_init();
   782  0607  120A  118A  2434  120A  118A  	fcall	_LCD_init
   783  060C                     l1370:
   784                           
   785                           ;main.c: 52: read_data();
   786  060C  120A  118A  2554  120A  118A  	fcall	_read_data
   787  0611                     l1372:
   788                           
   789                           ;main.c: 55:     show("WELCOME...");
   790  0611  30B8               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   791  0612  120A  118A  2453  120A  118A  	fcall	_show
   792  0617                     l1374:
   793                           
   794                           ;main.c: 56:     _delay((unsigned long)((200)*(20000000/4000.0)));
   795  0617  3006               	movlw	6
   796  0618  1283               	bcf	3,5	;RP0=0, select bank0
   797  0619  1303               	bcf	3,6	;RP1=0, select bank0
   798  061A  00BF               	movwf	??_main+2
   799  061B  3013               	movlw	19
   800  061C  00BE               	movwf	??_main+1
   801  061D  30AD               	movlw	173
   802  061E  00BD               	movwf	??_main
   803  061F                     u407:
   804  061F  0BBD               	decfsz	??_main,f
   805  0620  2E1F               	goto	u407
   806  0621  0BBE               	decfsz	??_main+1,f
   807  0622  2E1F               	goto	u407
   808  0623  0BBF               	decfsz	??_main+2,f
   809  0624  2E1F               	goto	u407
   810  0625                     l1376:
   811                           
   812                           ;main.c: 57:     LCD_command(0x01);
   813  0625  3001               	movlw	1
   814  0626  120A  118A  23BB  120A  118A  	fcall	_LCD_command
   815  062B                     l1378:
   816                           
   817                           ;main.c: 59:     LCD_command(0x80);
   818  062B  3080               	movlw	128
   819  062C  120A  118A  23BB  120A  118A  	fcall	_LCD_command
   820  0631                     l1380:
   821                           
   822                           ;main.c: 60:     show("Connecting...");
   823  0631  308F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   824  0632  120A  118A  2453  120A  118A  	fcall	_show
   825  0637                     l1382:
   826                           
   827                           ;main.c: 61:     _delay((unsigned long)((500)*(20000000/4000.0)));
   828  0637  300D               	movlw	13
   829  0638  1283               	bcf	3,5	;RP0=0, select bank0
   830  0639  1303               	bcf	3,6	;RP1=0, select bank0
   831  063A  00BF               	movwf	??_main+2
   832  063B  30AF               	movlw	175
   833  063C  00BE               	movwf	??_main+1
   834  063D  30B5               	movlw	181
   835  063E  00BD               	movwf	??_main
   836  063F                     u417:
   837  063F  0BBD               	decfsz	??_main,f
   838  0640  2E3F               	goto	u417
   839  0641  0BBE               	decfsz	??_main+1,f
   840  0642  2E3F               	goto	u417
   841  0643  0BBF               	decfsz	??_main+2,f
   842  0644  2E3F               	goto	u417
   843  0645  2E46               	nop2
   844  0646                     l1384:
   845                           
   846                           ;main.c: 67: corner_cases(1);
   847  0646  3001               	movlw	1
   848  0647  00F8               	movwf	corner_cases@number
   849  0648  3000               	movlw	0
   850  0649  00F9               	movwf	corner_cases@number+1
   851  064A  120A  118A  23FC  120A  118A  	fcall	_corner_cases
   852  064F                     l1386:
   853                           
   854                           ;main.c: 68: int seven[11] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90,0xC0};
   855  064F  3041               	movlw	main@seven& (0+255)
   856  0650  0084               	movwf	4
   857  0651  3020               	movlw	low main@F1148
   858  0652  1283               	bcf	3,5	;RP0=0, select bank0
   859  0653  1303               	bcf	3,6	;RP1=0, select bank0
   860  0654  00BD               	movwf	??_main
   861  0655  0804               	movf	4,w
   862  0656  00BE               	movwf	??_main+1
   863  0657  3016               	movlw	22
   864  0658  00BF               	movwf	??_main+2
   865  0659                     u370:
   866  0659  083D               	movf	??_main,w
   867  065A  0084               	movwf	4
   868  065B  1383               	bcf	3,7	;select IRP bank0
   869  065C  0800               	movf	0,w
   870  065D  00C0               	movwf	??_main+3
   871  065E  0ABD               	incf	??_main,f
   872  065F  083E               	movf	??_main+1,w
   873  0660  0084               	movwf	4
   874  0661  0840               	movf	??_main+3,w
   875  0662  0080               	movwf	0
   876  0663  0ABE               	incf	??_main+1,f
   877  0664  0BBF               	decfsz	??_main+2,f
   878  0665  2E59               	goto	u370
   879  0666                     l1388:
   880                           
   881                           ;main.c: 71:     {;main.c: 72:         if (RC3 == 1)
   882  0666  1283               	bcf	3,5	;RP0=0, select bank0
   883  0667  1303               	bcf	3,6	;RP1=0, select bank0
   884  0668  1D87               	btfss	7,3	;volatile
   885  0669  2E6B               	goto	u381
   886  066A  2E6C               	goto	u380
   887  066B                     u381:
   888  066B  2E66               	goto	l1388
   889  066C                     u380:
   890  066C                     l1390:
   891                           
   892                           ;main.c: 73:         {;main.c: 74:             reset_counter += 1;
   893  066C  3001               	movlw	1
   894  066D  07DA               	addwf	_reset_counter,f
   895  066E  1803               	skipnc
   896  066F  0ADB               	incf	_reset_counter+1,f
   897  0670  3000               	movlw	0
   898  0671  07DB               	addwf	_reset_counter+1,f
   899  0672                     l1392:
   900                           
   901                           ;main.c: 75:             PORTB = seven[reset_counter];
   902  0672  085A               	movf	_reset_counter,w
   903  0673  00BD               	movwf	??_main
   904  0674  073D               	addwf	??_main,w
   905  0675  3E41               	addlw	(low (main@seven| 0))& (0+255)
   906  0676  0084               	movwf	4
   907  0677  1383               	bcf	3,7	;select IRP bank0
   908  0678  0800               	movf	0,w
   909  0679  0086               	movwf	6	;volatile
   910                           
   911                           ;main.c: 76:             while(reset_counter <= 10)
   912  067A  2EA2               	goto	l1402
   913  067B                     l1394:
   914                           
   915                           ;main.c: 77:             {;main.c: 78:                 LCD_command(0x01);
   916  067B  3001               	movlw	1
   917  067C  120A  118A  23BB  120A  118A  	fcall	_LCD_command
   918                           
   919                           ;main.c: 79:                 LCD_command(0x80);
   920  0681  3080               	movlw	128
   921  0682  120A  118A  23BB  120A  118A  	fcall	_LCD_command
   922  0687                     l1396:
   923                           
   924                           ;main.c: 80:                 show("Resetting...");
   925  0687  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   926  0688  120A  118A  2453  120A  118A  	fcall	_show
   927  068D                     l1398:
   928                           
   929                           ;main.c: 81:                 _delay((unsigned long)((200)*(20000000/4000.0)));
   930  068D  3006               	movlw	6
   931  068E  1283               	bcf	3,5	;RP0=0, select bank0
   932  068F  1303               	bcf	3,6	;RP1=0, select bank0
   933  0690  00BF               	movwf	??_main+2
   934  0691  3013               	movlw	19
   935  0692  00BE               	movwf	??_main+1
   936  0693  30AD               	movlw	173
   937  0694  00BD               	movwf	??_main
   938  0695                     u427:
   939  0695  0BBD               	decfsz	??_main,f
   940  0696  2E95               	goto	u427
   941  0697  0BBE               	decfsz	??_main+1,f
   942  0698  2E95               	goto	u427
   943  0699  0BBF               	decfsz	??_main+2,f
   944  069A  2E95               	goto	u427
   945  069B                     l1400:
   946                           
   947                           ;main.c: 82:                 LCD_command(0x01);
   948  069B  3001               	movlw	1
   949  069C  120A  118A  23BB  120A  118A  	fcall	_LCD_command
   950                           
   951                           ;main.c: 83:                 goto A;
   952  06A1  2E2B               	goto	l1378
   953  06A2                     l1402:
   954                           
   955                           ;main.c: 76:             while(reset_counter <= 10)
   956  06A2  085B               	movf	_reset_counter+1,w
   957  06A3  3A80               	xorlw	128
   958  06A4  00FF               	movwf	btemp+1
   959  06A5  3080               	movlw	128
   960  06A6  027F               	subwf	btemp+1,w
   961  06A7  1D03               	skipz
   962  06A8  2EAB               	goto	u395
   963  06A9  300B               	movlw	11
   964  06AA  025A               	subwf	_reset_counter,w
   965  06AB                     u395:
   966  06AB  1C03               	skipc
   967  06AC  2EAE               	goto	u391
   968  06AD  2EAF               	goto	u390
   969  06AE                     u391:
   970  06AE  2E7B               	goto	l1394
   971  06AF                     u390:
   972  06AF                     l1404:
   973                           
   974                           ;main.c: 85:             low_battery();
   975  06AF  120A  118A  24B0  120A  118A  	fcall	_low_battery
   976  06B4  2E66               	goto	l1388
   977  06B5  120A  118A  2800   	ljmp	start
   978  06B8                     __end_of_main:
   979                           
   980                           	psect	text1
   981  039F                     __ptext1:	
   982 ;; *************** function _ser_int *****************
   983 ;; Defined at:
   984 ;;		line 121 in file "main.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0
  1001 ;;      Totals:         0       0       0       0       0
  1002 ;;Total ram usage:        0 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _ser_int
  1013  039F                     _ser_int:
  1014  039F                     l1248:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _ser_int: [wreg]
  1017                           
  1018                           
  1019                           ;main.c: 123:  RCSTA= 0b10010000;
  1020  039F  3090               	movlw	144
  1021  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1022  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1023  03A2  0098               	movwf	24	;volatile
  1024                           
  1025                           ;main.c: 124:  SPBRG=31;
  1026  03A3  301F               	movlw	31
  1027  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  1028  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  1029  03A6  0099               	movwf	25	;volatile
  1030  03A7                     l97:
  1031  03A7  0008               	return
  1032  03A8                     __end_of_ser_int:
  1033                           
  1034                           	psect	text2
  1035  0554                     __ptext2:	
  1036 ;; *************** function _read_data *****************
  1037 ;; Defined at:
  1038 ;;		line 133 in file "main.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  gps             1    6[COMMON] unsigned char 
  1043 ;;  j               2    7[COMMON] int 
  1044 ;;  f               2   11[COMMON] int 
  1045 ;;  i               2    9[COMMON] int 
  1046 ;;  flag            2    4[COMMON] int 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         9       0       0       0       0
  1058 ;;      Temps:          1       0       0       0       0
  1059 ;;      Totals:        10       0       0       0       0
  1060 ;;Total ram usage:       10 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 1
  1063 ;; This function calls:
  1064 ;;		_LCD_data
  1065 ;;		_rx
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _read_data
  1073  0554                     _read_data:
  1074  0554                     l1252:	
  1075                           ;incstack = 0
  1076                           ; Regs used in _read_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1077                           
  1078                           
  1079                           ;main.c: 135:     int i, f, flag=0;
  1080  0554  01F4               	clrf	read_data@flag
  1081  0555  01F5               	clrf	read_data@flag+1
  1082                           
  1083                           ;main.c: 136:     for (int j=0; j<95;j++)
  1084  0556  01F7               	clrf	read_data@j
  1085  0557  01F8               	clrf	read_data@j+1
  1086  0558                     l1258:
  1087                           
  1088                           ;main.c: 137: {;main.c: 138: char gps = rx();
  1089  0558  120A  118A  2396  120A  118A  	fcall	_rx
  1090  055D  00F3               	movwf	??_read_data
  1091  055E  0873               	movf	??_read_data,w
  1092  055F  00F6               	movwf	read_data@gps
  1093  0560                     l1260:
  1094                           
  1095                           ;main.c: 139: if (gps == '$')
  1096  0560  3024               	movlw	36
  1097  0561  0676               	xorwf	read_data@gps,w
  1098  0562  1D03               	btfss	3,2
  1099  0563  2D65               	goto	u291
  1100  0564  2D66               	goto	u290
  1101  0565                     u291:
  1102  0565  2DE7               	goto	l1304
  1103  0566                     u290:
  1104  0566                     l1262:
  1105                           
  1106                           ;main.c: 140: {;main.c: 142:     for(f=0;f<3;f++) {
  1107  0566  01FB               	clrf	read_data@f
  1108  0567  01FC               	clrf	read_data@f+1
  1109  0568                     l111:
  1110  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1112  056A  1E8C               	btfss	12,5	;volatile
  1113  056B  2D6D               	goto	u301
  1114  056C  2D6E               	goto	u300
  1115  056D                     u301:
  1116  056D  2D68               	goto	l111
  1117  056E                     u300:
  1118  056E                     l1268:
  1119                           
  1120                           ;main.c: 144:         r[f]=RCREG;
  1121  056E  081A               	movf	26,w	;volatile
  1122  056F  00F3               	movwf	??_read_data
  1123  0570  087B               	movf	read_data@f,w
  1124  0571  3E57               	addlw	(low (_r| 0))& (0+255)
  1125  0572  0084               	movwf	4
  1126  0573  0873               	movf	??_read_data,w
  1127  0574  1383               	bcf	3,7	;select IRP bank0
  1128  0575  0080               	movwf	0
  1129  0576                     l1270:
  1130                           
  1131                           ;main.c: 145:       }
  1132  0576  3001               	movlw	1
  1133  0577  07FB               	addwf	read_data@f,f
  1134  0578  1803               	skipnc
  1135  0579  0AFC               	incf	read_data@f+1,f
  1136  057A  3000               	movlw	0
  1137  057B  07FC               	addwf	read_data@f+1,f
  1138  057C                     l1272:
  1139  057C  087C               	movf	read_data@f+1,w
  1140  057D  3A80               	xorlw	128
  1141  057E  00FF               	movwf	btemp+1
  1142  057F  3080               	movlw	128
  1143  0580  027F               	subwf	btemp+1,w
  1144  0581  1D03               	skipz
  1145  0582  2D85               	goto	u315
  1146  0583  3003               	movlw	3
  1147  0584  027B               	subwf	read_data@f,w
  1148  0585                     u315:
  1149  0585  1C03               	skipc
  1150  0586  2D88               	goto	u311
  1151  0587  2D89               	goto	u310
  1152  0588                     u311:
  1153  0588  2D68               	goto	l111
  1154  0589                     u310:
  1155  0589                     l1274:
  1156                           
  1157                           ;main.c: 146:         r[f]='\0';
  1158  0589  087B               	movf	read_data@f,w
  1159  058A  3E57               	addlw	(low (_r| 0))& (0+255)
  1160  058B  0084               	movwf	4
  1161  058C  1383               	bcf	3,7	;select IRP bank0
  1162  058D  0180               	clrf	0
  1163  058E                     l1276:
  1164                           
  1165                           ;main.c: 150:         for (f=0;pv[f]!='\0';f++)
  1166  058E  01FB               	clrf	read_data@f
  1167  058F  01FC               	clrf	read_data@f+1
  1168  0590  2DB2               	goto	l1286
  1169  0591                     l1278:
  1170                           
  1171                           ;main.c: 151:         {;main.c: 152:             if(r[f]!=pv[f])
  1172  0591  087B               	movf	read_data@f,w
  1173  0592  3E3A               	addlw	(low (_pv| 0))& (0+255)
  1174  0593  0084               	movwf	4
  1175  0594  0800               	movf	0,w
  1176  0595  00F3               	movwf	??_read_data
  1177  0596  087B               	movf	read_data@f,w
  1178  0597  3E57               	addlw	(low (_r| 0))& (0+255)
  1179  0598  0084               	movwf	4
  1180  0599  0800               	movf	0,w
  1181  059A  0673               	xorwf	??_read_data,w
  1182  059B  1903               	skipnz
  1183  059C  2D9E               	goto	u321
  1184  059D  2D9F               	goto	u320
  1185  059E                     u321:
  1186  059E  2DAC               	goto	l1284
  1187  059F                     u320:
  1188  059F                     l1280:
  1189                           
  1190                           ;main.c: 153:             {;main.c: 154:                 flag += 1;
  1191  059F  3001               	movlw	1
  1192  05A0  07F4               	addwf	read_data@flag,f
  1193  05A1  1803               	skipnc
  1194  05A2  0AF5               	incf	read_data@flag+1,f
  1195  05A3  3000               	movlw	0
  1196  05A4  07F5               	addwf	read_data@flag+1,f
  1197  05A5                     l1282:
  1198                           
  1199                           ;main.c: 155:                 LCD_data('X');
  1200  05A5  3058               	movlw	88
  1201  05A6  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1202                           
  1203                           ;main.c: 156:                 break;
  1204  05AB  2DBA               	goto	l1288
  1205  05AC                     l1284:
  1206                           
  1207                           ;main.c: 158:         }
  1208  05AC  3001               	movlw	1
  1209  05AD  07FB               	addwf	read_data@f,f
  1210  05AE  1803               	skipnc
  1211  05AF  0AFC               	incf	read_data@f+1,f
  1212  05B0  3000               	movlw	0
  1213  05B1  07FC               	addwf	read_data@f+1,f
  1214  05B2                     l1286:
  1215  05B2  087B               	movf	read_data@f,w
  1216  05B3  3E3A               	addlw	(low (_pv| 0))& (0+255)
  1217  05B4  0084               	movwf	4
  1218  05B5  0800               	movf	0,w
  1219  05B6  1D03               	btfss	3,2
  1220  05B7  2DB9               	goto	u331
  1221  05B8  2DBA               	goto	u330
  1222  05B9                     u331:
  1223  05B9  2D91               	goto	l1278
  1224  05BA                     u330:
  1225  05BA                     l1288:
  1226                           
  1227                           ;main.c: 160:          if(flag==0) {
  1228  05BA  0874               	movf	read_data@flag,w
  1229  05BB  0475               	iorwf	read_data@flag+1,w
  1230  05BC  1D03               	btfss	3,2
  1231  05BD  2DBF               	goto	u341
  1232  05BE  2DC0               	goto	u340
  1233  05BF                     u341:
  1234  05BF  2DE7               	goto	l1304
  1235  05C0                     u340:
  1236  05C0                     l1290:
  1237                           
  1238                           ;main.c: 161:              for(i=0;i<68;i++)
  1239  05C0  01F9               	clrf	read_data@i
  1240  05C1  01FA               	clrf	read_data@i+1
  1241  05C2                     l1296:
  1242                           
  1243                           ;main.c: 162:             {;main.c: 163:                 a[i]=rx();
  1244  05C2  120A  118A  2396  120A  118A  	fcall	_rx
  1245  05C7  00F3               	movwf	??_read_data
  1246  05C8  0879               	movf	read_data@i,w
  1247  05C9  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1248  05CA  0084               	movwf	4
  1249  05CB  0873               	movf	??_read_data,w
  1250  05CC  1783               	bsf	3,7	;select IRP bank3
  1251  05CD  0080               	movwf	0
  1252  05CE                     l1298:
  1253                           
  1254                           ;main.c: 164:             }
  1255  05CE  3001               	movlw	1
  1256  05CF  07F9               	addwf	read_data@i,f
  1257  05D0  1803               	skipnc
  1258  05D1  0AFA               	incf	read_data@i+1,f
  1259  05D2  3000               	movlw	0
  1260  05D3  07FA               	addwf	read_data@i+1,f
  1261  05D4                     l1300:
  1262  05D4  087A               	movf	read_data@i+1,w
  1263  05D5  3A80               	xorlw	128
  1264  05D6  00FF               	movwf	btemp+1
  1265  05D7  3080               	movlw	128
  1266  05D8  027F               	subwf	btemp+1,w
  1267  05D9  1D03               	skipz
  1268  05DA  2DDD               	goto	u355
  1269  05DB  3044               	movlw	68
  1270  05DC  0279               	subwf	read_data@i,w
  1271  05DD                     u355:
  1272  05DD  1C03               	skipc
  1273  05DE  2DE0               	goto	u351
  1274  05DF  2DE1               	goto	u350
  1275  05E0                     u351:
  1276  05E0  2DC2               	goto	l1296
  1277  05E1                     u350:
  1278  05E1                     l1302:
  1279                           
  1280                           ;main.c: 165:          a[i]='\0';
  1281  05E1  0879               	movf	read_data@i,w
  1282  05E2  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1283  05E3  0084               	movwf	4
  1284  05E4  1783               	bsf	3,7	;select IRP bank3
  1285  05E5  0180               	clrf	0
  1286                           
  1287                           ;main.c: 166:          break;
  1288  05E6  2DFA               	goto	l121
  1289  05E7                     l1304:
  1290                           
  1291                           ;main.c: 169: }
  1292  05E7  3001               	movlw	1
  1293  05E8  07F7               	addwf	read_data@j,f
  1294  05E9  1803               	skipnc
  1295  05EA  0AF8               	incf	read_data@j+1,f
  1296  05EB  3000               	movlw	0
  1297  05EC  07F8               	addwf	read_data@j+1,f
  1298  05ED                     l1306:
  1299  05ED  0878               	movf	read_data@j+1,w
  1300  05EE  3A80               	xorlw	128
  1301  05EF  00FF               	movwf	btemp+1
  1302  05F0  3080               	movlw	128
  1303  05F1  027F               	subwf	btemp+1,w
  1304  05F2  1D03               	skipz
  1305  05F3  2DF6               	goto	u365
  1306  05F4  305F               	movlw	95
  1307  05F5  0277               	subwf	read_data@j,w
  1308  05F6                     u365:
  1309  05F6  1C03               	skipc
  1310  05F7  2DF9               	goto	u361
  1311  05F8  2DFA               	goto	u360
  1312  05F9                     u361:
  1313  05F9  2D58               	goto	l1258
  1314  05FA                     u360:
  1315  05FA                     l121:
  1316  05FA  0008               	return
  1317  05FB                     __end_of_read_data:
  1318                           
  1319                           	psect	text3
  1320  0396                     __ptext3:	
  1321 ;; *************** function _rx *****************
  1322 ;; Defined at:
  1323 ;;		line 115 in file "main.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      unsigned char 
  1330 ;; Registers used:
  1331 ;;		wreg
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_read_data
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _rx
  1352  0396                     _rx:
  1353  0396                     l1134:	
  1354                           ;incstack = 0
  1355                           ; Regs used in _rx: [wreg]
  1356                           
  1357  0396                     l91:	
  1358                           ;main.c: 117:  while(!RCIF);
  1359                           
  1360  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0398  1E8C               	btfss	12,5	;volatile
  1363  0399  2B9B               	goto	u221
  1364  039A  2B9C               	goto	u220
  1365  039B                     u221:
  1366  039B  2B96               	goto	l91
  1367  039C                     u220:
  1368  039C                     l93:
  1369                           
  1370                           ;main.c: 118:  RCIF=0;
  1371  039C  128C               	bcf	12,5	;volatile
  1372  039D                     l1136:
  1373                           
  1374                           ;main.c: 119:  return RCREG;
  1375  039D  081A               	movf	26,w	;volatile
  1376  039E                     l94:
  1377  039E  0008               	return
  1378  039F                     __end_of_rx:
  1379                           
  1380                           	psect	text4
  1381  04B0                     __ptext4:	
  1382 ;; *************** function _low_battery *****************
  1383 ;; Defined at:
  1384 ;;		line 245 in file "main.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          3       0       0       0       0
  1401 ;;      Totals:         3       0       0       0       0
  1402 ;;Total ram usage:        3 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 2
  1405 ;; This function calls:
  1406 ;;		_LCD_command
  1407 ;;		_show
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _low_battery
  1415  04B0                     _low_battery:
  1416  04B0                     l1322:	
  1417                           ;incstack = 0
  1418                           ; Regs used in _low_battery: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1419                           
  1420                           
  1421                           ;main.c: 247:     LCD_command(0x01);
  1422  04B0  3001               	movlw	1
  1423  04B1  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1424                           
  1425                           ;main.c: 248:     LCD_command(0x80);
  1426  04B6  3080               	movlw	128
  1427  04B7  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1428  04BC                     l1324:
  1429                           
  1430                           ;main.c: 249:     show("-!!!BATTERY LOW!!!-");
  1431  04BC  3055               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1432  04BD  120A  118A  2453  120A  118A  	fcall	_show
  1433  04C2                     l1326:
  1434                           
  1435                           ;main.c: 250:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1436  04C2  3003               	movlw	3
  1437  04C3  00F7               	movwf	??_low_battery+2
  1438  04C4  308A               	movlw	138
  1439  04C5  00F6               	movwf	??_low_battery+1
  1440  04C6  3055               	movlw	85
  1441  04C7  00F5               	movwf	??_low_battery
  1442  04C8                     u437:
  1443  04C8  0BF5               	decfsz	??_low_battery,f
  1444  04C9  2CC8               	goto	u437
  1445  04CA  0BF6               	decfsz	??_low_battery+1,f
  1446  04CB  2CC8               	goto	u437
  1447  04CC  0BF7               	decfsz	??_low_battery+2,f
  1448  04CD  2CC8               	goto	u437
  1449  04CE  2CCF               	nop2
  1450  04CF                     l1328:
  1451                           
  1452                           ;main.c: 251:     LCD_command(0xC0);
  1453  04CF  30C0               	movlw	192
  1454  04D0  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1455  04D5                     l1330:
  1456                           
  1457                           ;main.c: 252:     show("-!!!BATTERY LOW!!!-");
  1458  04D5  3055               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1459  04D6  120A  118A  2453  120A  118A  	fcall	_show
  1460  04DB                     l1332:
  1461                           
  1462                           ;main.c: 253:     LCD_command(0xD4);
  1463  04DB  30D4               	movlw	212
  1464  04DC  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1465  04E1                     l1334:
  1466                           
  1467                           ;main.c: 254:     show("RECHARGE IMMEDIATELY");
  1468  04E1  3040               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1469  04E2  120A  118A  2453  120A  118A  	fcall	_show
  1470  04E7                     l1336:
  1471                           
  1472                           ;main.c: 255:     _delay((unsigned long)((300)*(20000000/4000.0)));
  1473  04E7  3008               	movlw	8
  1474  04E8  00F7               	movwf	??_low_battery+2
  1475  04E9  309D               	movlw	157
  1476  04EA  00F6               	movwf	??_low_battery+1
  1477  04EB  3005               	movlw	5
  1478  04EC  00F5               	movwf	??_low_battery
  1479  04ED                     u447:
  1480  04ED  0BF5               	decfsz	??_low_battery,f
  1481  04EE  2CED               	goto	u447
  1482  04EF  0BF6               	decfsz	??_low_battery+1,f
  1483  04F0  2CED               	goto	u447
  1484  04F1  0BF7               	decfsz	??_low_battery+2,f
  1485  04F2  2CED               	goto	u447
  1486  04F3  2CF4               	nop2
  1487  04F4                     l1338:
  1488                           
  1489                           ;main.c: 256:     LCD_command(0x01);
  1490  04F4  3001               	movlw	1
  1491  04F5  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1492  04FA                     l1340:
  1493                           
  1494                           ;main.c: 257:     LCD_command(0xC0);
  1495  04FA  30C0               	movlw	192
  1496  04FB  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1497  0500                     l1342:
  1498                           
  1499                           ;main.c: 258:     show("SWITCHING OFF");
  1500  0500  309D               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1501  0501  120A  118A  2453  120A  118A  	fcall	_show
  1502  0506                     l1344:
  1503                           
  1504                           ;main.c: 259:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1505  0506  3003               	movlw	3
  1506  0507  00F7               	movwf	??_low_battery+2
  1507  0508  308A               	movlw	138
  1508  0509  00F6               	movwf	??_low_battery+1
  1509  050A  3055               	movlw	85
  1510  050B  00F5               	movwf	??_low_battery
  1511  050C                     u457:
  1512  050C  0BF5               	decfsz	??_low_battery,f
  1513  050D  2D0C               	goto	u457
  1514  050E  0BF6               	decfsz	??_low_battery+1,f
  1515  050F  2D0C               	goto	u457
  1516  0510  0BF7               	decfsz	??_low_battery+2,f
  1517  0511  2D0C               	goto	u457
  1518  0512  2D13               	nop2
  1519  0513                     l1346:
  1520                           
  1521                           ;main.c: 260:     show(".");
  1522  0513  30C1               	movlw	(low (((STR_1+9)-__stringbase)| (0+32768)))& (0+255)
  1523  0514  120A  118A  2453  120A  118A  	fcall	_show
  1524  0519                     l1348:
  1525                           
  1526                           ;main.c: 261:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1527  0519  3003               	movlw	3
  1528  051A  00F7               	movwf	??_low_battery+2
  1529  051B  308A               	movlw	138
  1530  051C  00F6               	movwf	??_low_battery+1
  1531  051D  3055               	movlw	85
  1532  051E  00F5               	movwf	??_low_battery
  1533  051F                     u467:
  1534  051F  0BF5               	decfsz	??_low_battery,f
  1535  0520  2D1F               	goto	u467
  1536  0521  0BF6               	decfsz	??_low_battery+1,f
  1537  0522  2D1F               	goto	u467
  1538  0523  0BF7               	decfsz	??_low_battery+2,f
  1539  0524  2D1F               	goto	u467
  1540  0525  2D26               	nop2
  1541  0526                     l1350:
  1542                           
  1543                           ;main.c: 262:     show(".");
  1544  0526  30C1               	movlw	(low (((STR_1+9)-__stringbase)| (0+32768)))& (0+255)
  1545  0527  120A  118A  2453  120A  118A  	fcall	_show
  1546  052C                     l1352:
  1547                           
  1548                           ;main.c: 263:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1549  052C  3003               	movlw	3
  1550  052D  00F7               	movwf	??_low_battery+2
  1551  052E  308A               	movlw	138
  1552  052F  00F6               	movwf	??_low_battery+1
  1553  0530  3055               	movlw	85
  1554  0531  00F5               	movwf	??_low_battery
  1555  0532                     u477:
  1556  0532  0BF5               	decfsz	??_low_battery,f
  1557  0533  2D32               	goto	u477
  1558  0534  0BF6               	decfsz	??_low_battery+1,f
  1559  0535  2D32               	goto	u477
  1560  0536  0BF7               	decfsz	??_low_battery+2,f
  1561  0537  2D32               	goto	u477
  1562  0538  2D39               	nop2
  1563  0539                     l1354:
  1564                           
  1565                           ;main.c: 264:     show(".");
  1566  0539  30C1               	movlw	(low (((STR_1+9)-__stringbase)| (0+32768)))& (0+255)
  1567  053A  120A  118A  2453  120A  118A  	fcall	_show
  1568  053F                     l1356:
  1569                           
  1570                           ;main.c: 265:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1571  053F  300D               	movlw	13
  1572  0540  00F7               	movwf	??_low_battery+2
  1573  0541  30AF               	movlw	175
  1574  0542  00F6               	movwf	??_low_battery+1
  1575  0543  30B6               	movlw	182
  1576  0544  00F5               	movwf	??_low_battery
  1577  0545                     u487:
  1578  0545  0BF5               	decfsz	??_low_battery,f
  1579  0546  2D45               	goto	u487
  1580  0547  0BF6               	decfsz	??_low_battery+1,f
  1581  0548  2D45               	goto	u487
  1582  0549  0BF7               	decfsz	??_low_battery+2,f
  1583  054A  2D45               	goto	u487
  1584  054B  0000               	nop
  1585  054C                     l1358:
  1586                           
  1587                           ;main.c: 266:     LCD_command(0x01);
  1588  054C  3001               	movlw	1
  1589  054D  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1590  0552                     l152:	
  1591                           ;main.c: 267:     while(1);
  1592                           
  1593  0552                     l153:
  1594  0552  2D52               	goto	l152
  1595  0553  0008               	return
  1596  0554                     __end_of_low_battery:
  1597                           
  1598                           	psect	text5
  1599  03FC                     __ptext5:	
  1600 ;; *************** function _corner_cases *****************
  1601 ;; Defined at:
  1602 ;;		line 221 in file "main.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  number          2    8[COMMON] int 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         2       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0
  1619 ;;      Totals:         2       0       0       0       0
  1620 ;;Total ram usage:        2 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 4
  1623 ;; This function calls:
  1624 ;;		_cloudy
  1625 ;;		_print_data
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           
  1632                           ;psect for function _corner_cases
  1633  03FC                     _corner_cases:
  1634  03FC                     l1308:	
  1635                           ;incstack = 0
  1636                           ; Regs used in _corner_cases: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1637                           
  1638                           
  1639                           ;main.c: 221: void corner_cases(int number);main.c: 222: {;main.c: 223:     switch(numbe
      +                          r)
  1640  03FC  2C09               	goto	l1316
  1641  03FD                     l1310:
  1642                           
  1643                           ;main.c: 226:             cloudy();
  1644  03FD  120A  118A  2472  120A  118A  	fcall	_cloudy
  1645                           
  1646                           ;main.c: 227:             break;
  1647  0402  2C16               	goto	l146
  1648  0403                     l1312:
  1649                           
  1650                           ;main.c: 229:             print_data();
  1651  0403  120A  118A  26B8  120A  118A  	fcall	_print_data
  1652                           
  1653                           ;main.c: 230:             break;
  1654  0408  2C16               	goto	l146
  1655  0409                     l1316:
  1656                           
  1657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1658                           ; Switch size 1, requested type "simple"
  1659                           ; Number of cases is 1, Range of values is 0 to 0
  1660                           ; switch strategies available:
  1661                           ; Name         Instructions Cycles
  1662                           ; simple_byte            4     3 (average)
  1663                           ; direct_byte           11     8 (fixed)
  1664                           ; jumptable            260     6 (fixed)
  1665                           ;	Chosen strategy is simple_byte
  1666  0409  0879               	movf	corner_cases@number+1,w
  1667  040A  3A00               	xorlw	0	; case 0
  1668  040B  1903               	skipnz
  1669  040C  2C0E               	goto	l1426
  1670  040D  2C16               	goto	l146
  1671  040E                     l1426:
  1672                           
  1673                           ; Switch size 1, requested type "simple"
  1674                           ; Number of cases is 2, Range of values is 0 to 1
  1675                           ; switch strategies available:
  1676                           ; Name         Instructions Cycles
  1677                           ; simple_byte            7     4 (average)
  1678                           ; direct_byte           14     8 (fixed)
  1679                           ; jumptable            260     6 (fixed)
  1680                           ;	Chosen strategy is simple_byte
  1681  040E  0878               	movf	corner_cases@number,w
  1682  040F  3A00               	xorlw	0	; case 0
  1683  0410  1903               	skipnz
  1684  0411  2BFD               	goto	l1310
  1685  0412  3A01               	xorlw	1	; case 1
  1686  0413  1903               	skipnz
  1687  0414  2C03               	goto	l1312
  1688  0415  2C16               	goto	l146
  1689  0416                     l146:
  1690  0416  0008               	return
  1691  0417                     __end_of_corner_cases:
  1692                           
  1693                           	psect	text6
  1694  06B8                     __ptext6:	
  1695 ;; *************** function _print_data *****************
  1696 ;; Defined at:
  1697 ;;		line 171 in file "main.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  h               2    5[COMMON] int 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         2       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         2       0       0       0       0
  1715 ;;Total ram usage:        2 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 3
  1718 ;; This function calls:
  1719 ;;		_LCD_command
  1720 ;;		_LCD_data
  1721 ;;		_refresh_text
  1722 ;;		_show
  1723 ;; This function is called by:
  1724 ;;		_corner_cases
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _print_data
  1730  06B8                     _print_data:
  1731  06B8                     l1140:	
  1732                           ;incstack = 0
  1733                           ; Regs used in _print_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1734                           
  1735                           
  1736                           ;main.c: 173:     int h;;main.c: 175:     LCD_command(0x01);
  1737  06B8  3001               	movlw	1
  1738  06B9  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1739                           
  1740                           ;main.c: 176:     LCD_command(0x80);
  1741  06BE  3080               	movlw	128
  1742  06BF  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1743  06C4                     l1142:
  1744                           
  1745                           ;main.c: 177:     show("LON:");
  1746  06C4  30C3               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1747  06C5  120A  118A  2453  120A  118A  	fcall	_show
  1748  06CA                     l1144:
  1749                           
  1750                           ;main.c: 179:         LCD_command(0x84);
  1751  06CA  3084               	movlw	132
  1752  06CB  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1753  06D0                     l1146:
  1754                           
  1755                           ;main.c: 180:         for(h=16;h<18;h++) {
  1756  06D0  3010               	movlw	16
  1757  06D1  00F5               	movwf	print_data@h
  1758  06D2  3000               	movlw	0
  1759  06D3  00F6               	movwf	print_data@h+1
  1760  06D4                     l1152:
  1761                           
  1762                           ;main.c: 181:           LCD_data(a[h]);
  1763  06D4  0875               	movf	print_data@h,w
  1764  06D5  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1765  06D6  0084               	movwf	4
  1766  06D7  1783               	bsf	3,7	;select IRP bank3
  1767  06D8  0800               	movf	0,w
  1768  06D9  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1769  06DE                     l1154:
  1770                           
  1771                           ;main.c: 182:         }
  1772  06DE  3001               	movlw	1
  1773  06DF  07F5               	addwf	print_data@h,f
  1774  06E0  1803               	skipnc
  1775  06E1  0AF6               	incf	print_data@h+1,f
  1776  06E2  3000               	movlw	0
  1777  06E3  07F6               	addwf	print_data@h+1,f
  1778  06E4                     l1156:
  1779  06E4  0876               	movf	print_data@h+1,w
  1780  06E5  3A80               	xorlw	128
  1781  06E6  00FF               	movwf	btemp+1
  1782  06E7  3080               	movlw	128
  1783  06E8  027F               	subwf	btemp+1,w
  1784  06E9  1D03               	skipz
  1785  06EA  2EED               	goto	u235
  1786  06EB  3012               	movlw	18
  1787  06EC  0275               	subwf	print_data@h,w
  1788  06ED                     u235:
  1789  06ED  1C03               	skipc
  1790  06EE  2EF0               	goto	u231
  1791  06EF  2EF1               	goto	u230
  1792  06F0                     u231:
  1793  06F0  2ED4               	goto	l1152
  1794  06F1                     u230:
  1795  06F1                     l1158:
  1796                           
  1797                           ;main.c: 183:         LCD_data('.');
  1798  06F1  302E               	movlw	46
  1799  06F2  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1800  06F7                     l1160:
  1801                           
  1802                           ;main.c: 184:         for(h=18;h<20;h++) {
  1803  06F7  3012               	movlw	18
  1804  06F8  00F5               	movwf	print_data@h
  1805  06F9  3000               	movlw	0
  1806  06FA  00F6               	movwf	print_data@h+1
  1807  06FB                     l1166:
  1808                           
  1809                           ;main.c: 185:           LCD_data(a[h]);
  1810  06FB  0875               	movf	print_data@h,w
  1811  06FC  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1812  06FD  0084               	movwf	4
  1813  06FE  1783               	bsf	3,7	;select IRP bank3
  1814  06FF  0800               	movf	0,w
  1815  0700  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1816  0705                     l1168:
  1817                           
  1818                           ;main.c: 186:         }
  1819  0705  3001               	movlw	1
  1820  0706  07F5               	addwf	print_data@h,f
  1821  0707  1803               	skipnc
  1822  0708  0AF6               	incf	print_data@h+1,f
  1823  0709  3000               	movlw	0
  1824  070A  07F6               	addwf	print_data@h+1,f
  1825  070B                     l1170:
  1826  070B  0876               	movf	print_data@h+1,w
  1827  070C  3A80               	xorlw	128
  1828  070D  00FF               	movwf	btemp+1
  1829  070E  3080               	movlw	128
  1830  070F  027F               	subwf	btemp+1,w
  1831  0710  1D03               	skipz
  1832  0711  2F14               	goto	u245
  1833  0712  3014               	movlw	20
  1834  0713  0275               	subwf	print_data@h,w
  1835  0714                     u245:
  1836  0714  1C03               	skipc
  1837  0715  2F17               	goto	u241
  1838  0716  2F18               	goto	u240
  1839  0717                     u241:
  1840  0717  2EFB               	goto	l1166
  1841  0718                     u240:
  1842  0718                     l1172:
  1843                           
  1844                           ;main.c: 187:         for(h=21;h<25;h++) {
  1845  0718  3015               	movlw	21
  1846  0719  00F5               	movwf	print_data@h
  1847  071A  3000               	movlw	0
  1848  071B  00F6               	movwf	print_data@h+1
  1849  071C                     l1178:
  1850                           
  1851                           ;main.c: 188:           LCD_data(a[h]);
  1852  071C  0875               	movf	print_data@h,w
  1853  071D  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1854  071E  0084               	movwf	4
  1855  071F  1783               	bsf	3,7	;select IRP bank3
  1856  0720  0800               	movf	0,w
  1857  0721  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1858  0726                     l1180:
  1859                           
  1860                           ;main.c: 189:         }
  1861  0726  3001               	movlw	1
  1862  0727  07F5               	addwf	print_data@h,f
  1863  0728  1803               	skipnc
  1864  0729  0AF6               	incf	print_data@h+1,f
  1865  072A  3000               	movlw	0
  1866  072B  07F6               	addwf	print_data@h+1,f
  1867  072C                     l1182:
  1868  072C  0876               	movf	print_data@h+1,w
  1869  072D  3A80               	xorlw	128
  1870  072E  00FF               	movwf	btemp+1
  1871  072F  3080               	movlw	128
  1872  0730  027F               	subwf	btemp+1,w
  1873  0731  1D03               	skipz
  1874  0732  2F35               	goto	u255
  1875  0733  3019               	movlw	25
  1876  0734  0275               	subwf	print_data@h,w
  1877  0735                     u255:
  1878  0735  1C03               	skipc
  1879  0736  2F38               	goto	u251
  1880  0737  2F39               	goto	u250
  1881  0738                     u251:
  1882  0738  2F1C               	goto	l1178
  1883  0739                     u250:
  1884  0739                     l1184:
  1885                           
  1886                           ;main.c: 190:         LCD_data(223);
  1887  0739  30DF               	movlw	223
  1888  073A  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1889                           
  1890                           ;main.c: 191:         LCD_data(' ');
  1891  073F  3020               	movlw	32
  1892  0740  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1893                           
  1894                           ;main.c: 192:         LCD_data('N');
  1895  0745  304E               	movlw	78
  1896  0746  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1897                           
  1898                           ;main.c: 194:     LCD_command(0xc0);
  1899  074B  30C0               	movlw	192
  1900  074C  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1901  0751                     l1186:
  1902                           
  1903                           ;main.c: 195:         show("LAT:");
  1904  0751  30C8               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1905  0752  120A  118A  2453  120A  118A  	fcall	_show
  1906  0757                     l1188:
  1907                           
  1908                           ;main.c: 197:         LCD_command(0xc4);
  1909  0757  30C4               	movlw	196
  1910  0758  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  1911  075D                     l1190:
  1912                           
  1913                           ;main.c: 198:         for(h=29;h<31;h++) {
  1914  075D  301D               	movlw	29
  1915  075E  00F5               	movwf	print_data@h
  1916  075F  3000               	movlw	0
  1917  0760  00F6               	movwf	print_data@h+1
  1918  0761                     l1196:
  1919                           
  1920                           ;main.c: 199:           LCD_data(a[h]);
  1921  0761  0875               	movf	print_data@h,w
  1922  0762  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1923  0763  0084               	movwf	4
  1924  0764  1783               	bsf	3,7	;select IRP bank3
  1925  0765  0800               	movf	0,w
  1926  0766  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1927  076B                     l1198:
  1928                           
  1929                           ;main.c: 200:         }
  1930  076B  3001               	movlw	1
  1931  076C  07F5               	addwf	print_data@h,f
  1932  076D  1803               	skipnc
  1933  076E  0AF6               	incf	print_data@h+1,f
  1934  076F  3000               	movlw	0
  1935  0770  07F6               	addwf	print_data@h+1,f
  1936  0771                     l1200:
  1937  0771  0876               	movf	print_data@h+1,w
  1938  0772  3A80               	xorlw	128
  1939  0773  00FF               	movwf	btemp+1
  1940  0774  3080               	movlw	128
  1941  0775  027F               	subwf	btemp+1,w
  1942  0776  1D03               	skipz
  1943  0777  2F7A               	goto	u265
  1944  0778  301F               	movlw	31
  1945  0779  0275               	subwf	print_data@h,w
  1946  077A                     u265:
  1947  077A  1C03               	skipc
  1948  077B  2F7D               	goto	u261
  1949  077C  2F7E               	goto	u260
  1950  077D                     u261:
  1951  077D  2F61               	goto	l1196
  1952  077E                     u260:
  1953  077E                     l1202:
  1954                           
  1955                           ;main.c: 201:         LCD_data('.');
  1956  077E  302E               	movlw	46
  1957  077F  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1958  0784                     l1204:
  1959                           
  1960                           ;main.c: 202:         for(h=31;h<33;h++) {
  1961  0784  301F               	movlw	31
  1962  0785  00F5               	movwf	print_data@h
  1963  0786  3000               	movlw	0
  1964  0787  00F6               	movwf	print_data@h+1
  1965  0788                     l1210:
  1966                           
  1967                           ;main.c: 203:           LCD_data(a[h]);
  1968  0788  0875               	movf	print_data@h,w
  1969  0789  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  1970  078A  0084               	movwf	4
  1971  078B  1783               	bsf	3,7	;select IRP bank3
  1972  078C  0800               	movf	0,w
  1973  078D  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  1974  0792                     l1212:
  1975                           
  1976                           ;main.c: 204:         }
  1977  0792  3001               	movlw	1
  1978  0793  07F5               	addwf	print_data@h,f
  1979  0794  1803               	skipnc
  1980  0795  0AF6               	incf	print_data@h+1,f
  1981  0796  3000               	movlw	0
  1982  0797  07F6               	addwf	print_data@h+1,f
  1983  0798                     l1214:
  1984  0798  0876               	movf	print_data@h+1,w
  1985  0799  3A80               	xorlw	128
  1986  079A  00FF               	movwf	btemp+1
  1987  079B  3080               	movlw	128
  1988  079C  027F               	subwf	btemp+1,w
  1989  079D  1D03               	skipz
  1990  079E  2FA1               	goto	u275
  1991  079F  3021               	movlw	33
  1992  07A0  0275               	subwf	print_data@h,w
  1993  07A1                     u275:
  1994  07A1  1C03               	skipc
  1995  07A2  2FA4               	goto	u271
  1996  07A3  2FA5               	goto	u270
  1997  07A4                     u271:
  1998  07A4  2F88               	goto	l1210
  1999  07A5                     u270:
  2000  07A5                     l1216:
  2001                           
  2002                           ;main.c: 205:         for(h=34;h<38;h++) {
  2003  07A5  3022               	movlw	34
  2004  07A6  00F5               	movwf	print_data@h
  2005  07A7  3000               	movlw	0
  2006  07A8  00F6               	movwf	print_data@h+1
  2007  07A9                     l1222:
  2008                           
  2009                           ;main.c: 206:           LCD_data(a[h]);
  2010  07A9  0875               	movf	print_data@h,w
  2011  07AA  3E90               	addlw	(low (_a| (0+256)))& (0+255)
  2012  07AB  0084               	movwf	4
  2013  07AC  1783               	bsf	3,7	;select IRP bank3
  2014  07AD  0800               	movf	0,w
  2015  07AE  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  2016  07B3                     l1224:
  2017                           
  2018                           ;main.c: 207:         }
  2019  07B3  3001               	movlw	1
  2020  07B4  07F5               	addwf	print_data@h,f
  2021  07B5  1803               	skipnc
  2022  07B6  0AF6               	incf	print_data@h+1,f
  2023  07B7  3000               	movlw	0
  2024  07B8  07F6               	addwf	print_data@h+1,f
  2025  07B9                     l1226:
  2026  07B9  0876               	movf	print_data@h+1,w
  2027  07BA  3A80               	xorlw	128
  2028  07BB  00FF               	movwf	btemp+1
  2029  07BC  3080               	movlw	128
  2030  07BD  027F               	subwf	btemp+1,w
  2031  07BE  1D03               	skipz
  2032  07BF  2FC2               	goto	u285
  2033  07C0  3026               	movlw	38
  2034  07C1  0275               	subwf	print_data@h,w
  2035  07C2                     u285:
  2036  07C2  1C03               	skipc
  2037  07C3  2FC5               	goto	u281
  2038  07C4  2FC6               	goto	u280
  2039  07C5                     u281:
  2040  07C5  2FA9               	goto	l1222
  2041  07C6                     u280:
  2042  07C6                     l1228:
  2043                           
  2044                           ;main.c: 208:         LCD_data(223);
  2045  07C6  30DF               	movlw	223
  2046  07C7  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  2047                           
  2048                           ;main.c: 209:         LCD_data(' ');
  2049  07CC  3020               	movlw	32
  2050  07CD  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  2051                           
  2052                           ;main.c: 210:         LCD_data('E');
  2053  07D2  3045               	movlw	69
  2054  07D3  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  2055  07D8                     l1230:
  2056                           
  2057                           ;main.c: 212:     refresh_text();
  2058  07D8  120A  118A  23E3  120A  118A  	fcall	_refresh_text
  2059  07DD                     l136:
  2060  07DD  0008               	return
  2061  07DE                     __end_of_print_data:
  2062                           
  2063                           	psect	text7
  2064  03E3                     __ptext7:	
  2065 ;; *************** function _refresh_text *****************
  2066 ;; Defined at:
  2067 ;;		line 214 in file "main.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0
  2084 ;;      Totals:         0       0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 2
  2088 ;; This function calls:
  2089 ;;		_LCD_command
  2090 ;;		_show
  2091 ;; This function is called by:
  2092 ;;		_print_data
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _refresh_text
  2098  03E3                     _refresh_text:
  2099  03E3                     l1128:	
  2100                           ;incstack = 0
  2101                           ; Regs used in _refresh_text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2102                           
  2103                           
  2104                           ;main.c: 216:     LCD_command(0x94);
  2105  03E3  3094               	movlw	148
  2106  03E4  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2107  03E9                     l1130:
  2108                           
  2109                           ;main.c: 217:     show("PRESS PUSH BUTTON");
  2110  03E9  307D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2111  03EA  120A  118A  2453  120A  118A  	fcall	_show
  2112  03EF                     l1132:
  2113                           
  2114                           ;main.c: 218:     LCD_command(0xD4);
  2115  03EF  30D4               	movlw	212
  2116  03F0  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2117                           
  2118                           ;main.c: 219:     show("FOR RESTTING DEVICE");
  2119  03F5  3069               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2120  03F6  120A  118A  2453  120A  118A  	fcall	_show
  2121  03FB                     l139:
  2122  03FB  0008               	return
  2123  03FC                     __end_of_refresh_text:
  2124                           
  2125                           	psect	text8
  2126  0472                     __ptext8:	
  2127 ;; *************** function _cloudy *****************
  2128 ;; Defined at:
  2129 ;;		line 233 in file "main.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0
  2145 ;;      Temps:          3       0       0       0       0
  2146 ;;      Totals:         3       0       0       0       0
  2147 ;;Total ram usage:        3 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 2
  2150 ;; This function calls:
  2151 ;;		_LCD_command
  2152 ;;		_show
  2153 ;; This function is called by:
  2154 ;;		_corner_cases
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _cloudy
  2160  0472                     _cloudy:
  2161  0472                     l1232:	
  2162                           ;incstack = 0
  2163                           ; Regs used in _cloudy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2164                           
  2165                           
  2166                           ;main.c: 235:     LCD_command(0x80);
  2167  0472  3080               	movlw	128
  2168  0473  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2169  0478                     l1234:
  2170                           
  2171                           ;main.c: 236:     show("!CLOUDY ENVIRONMENT!");
  2172  0478  3016               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2173  0479  120A  118A  2453  120A  118A  	fcall	_show
  2174  047E                     l1236:
  2175                           
  2176                           ;main.c: 237:     LCD_command(0xC0);
  2177  047E  30C0               	movlw	192
  2178  047F  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2179                           
  2180                           ;main.c: 238:     show("!!CAN'T FETCH DATA!!");
  2181  0484  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2182  0485  120A  118A  2453  120A  118A  	fcall	_show
  2183  048A                     l1238:
  2184                           
  2185                           ;main.c: 239:     _delay((unsigned long)((250)*(20000000/4000.0)));
  2186  048A  3007               	movlw	7
  2187  048B  00F7               	movwf	??_cloudy+2
  2188  048C  3058               	movlw	88
  2189  048D  00F6               	movwf	??_cloudy+1
  2190  048E  3059               	movlw	89
  2191  048F  00F5               	movwf	??_cloudy
  2192  0490                     u497:
  2193  0490  0BF5               	decfsz	??_cloudy,f
  2194  0491  2C90               	goto	u497
  2195  0492  0BF6               	decfsz	??_cloudy+1,f
  2196  0493  2C90               	goto	u497
  2197  0494  0BF7               	decfsz	??_cloudy+2,f
  2198  0495  2C90               	goto	u497
  2199  0496  2C97               	nop2
  2200  0497                     l1240:
  2201                           
  2202                           ;main.c: 240:     LCD_command(0x94);
  2203  0497  3094               	movlw	148
  2204  0498  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2205  049D                     l1242:
  2206                           
  2207                           ;main.c: 241:     show(" ");
  2208  049D  30CD               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2209  049E  120A  118A  2453  120A  118A  	fcall	_show
  2210  04A3                     l1244:
  2211                           
  2212                           ;main.c: 242:     LCD_command(0xD4);
  2213  04A3  30D4               	movlw	212
  2214  04A4  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2215  04A9                     l1246:
  2216                           
  2217                           ;main.c: 243:     show("---TRY  RESETTING---");
  2218  04A9  302B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2219  04AA  120A  118A  2453  120A  118A  	fcall	_show
  2220  04AF                     l149:
  2221  04AF  0008               	return
  2222  04B0                     __end_of_cloudy:
  2223                           
  2224                           	psect	text9
  2225  0453                     __ptext9:	
  2226 ;; *************** function _show *****************
  2227 ;; Defined at:
  2228 ;;		line 126 in file "main.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  s               1    wreg     PTR unsigned char 
  2231 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(14), 
  2232 ;;		 -> STR_14(21), STR_13(20), STR_12(20), STR_11(21), 
  2233 ;;		 -> STR_10(2), STR_9(21), STR_8(21), STR_7(20), 
  2234 ;;		 -> STR_6(18), STR_5(5), STR_4(5), STR_3(13), 
  2235 ;;		 -> STR_2(14), STR_1(11), 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  s               1    4[COMMON] PTR unsigned char 
  2238 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(14), 
  2239 ;;		 -> STR_14(21), STR_13(20), STR_12(20), STR_11(21), 
  2240 ;;		 -> STR_10(2), STR_9(21), STR_8(21), STR_7(20), 
  2241 ;;		 -> STR_6(18), STR_5(5), STR_4(5), STR_3(13), 
  2242 ;;		 -> STR_2(14), STR_1(11), 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         0       0       0       0       0
  2253 ;;      Locals:         1       0       0       0       0
  2254 ;;      Temps:          1       0       0       0       0
  2255 ;;      Totals:         2       0       0       0       0
  2256 ;;Total ram usage:        2 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 1
  2259 ;; This function calls:
  2260 ;;		_LCD_data
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;;		_print_data
  2264 ;;		_refresh_text
  2265 ;;		_cloudy
  2266 ;;		_low_battery
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _show
  2272  0453                     _show:
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2276                           ;show@s stored from wreg
  2277  0453  00F4               	movwf	show@s
  2278  0454                     l1112:
  2279                           
  2280                           ;main.c: 126: void show(unsigned char *s);main.c: 127: {;main.c: 128:   while(*s)
  2281  0454  2C65               	goto	l1118
  2282  0455                     l1114:
  2283                           
  2284                           ;main.c: 129:   {;main.c: 130:     LCD_data(*s++);
  2285  0455  0874               	movf	show@s,w
  2286  0456  0084               	movwf	4
  2287  0457  120A  118A  2003  120A  118A  	fcall	stringdir
  2288  045C  120A  118A  23CF  120A  118A  	fcall	_LCD_data
  2289  0461                     l1116:
  2290  0461  3001               	movlw	1
  2291  0462  00F3               	movwf	??_show
  2292  0463  0873               	movf	??_show,w
  2293  0464  07F4               	addwf	show@s,f
  2294  0465                     l1118:
  2295                           
  2296                           ;main.c: 128:   while(*s)
  2297  0465  0874               	movf	show@s,w
  2298  0466  0084               	movwf	4
  2299  0467  120A  118A  2003  120A  118A  	fcall	stringdir
  2300  046C  3A00               	xorlw	0
  2301  046D  1D03               	skipz
  2302  046E  2C70               	goto	u211
  2303  046F  2C71               	goto	u210
  2304  0470                     u211:
  2305  0470  2C55               	goto	l1114
  2306  0471                     u210:
  2307  0471                     l103:
  2308  0471  0008               	return
  2309  0472                     __end_of_show:
  2310                           
  2311                           	psect	text10
  2312  03CF                     __ptext10:	
  2313 ;; *************** function _LCD_data *****************
  2314 ;; Defined at:
  2315 ;;		line 99 in file "main.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  data            1    wreg     unsigned char 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  data            1    2[COMMON] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         0       0       0       0       0
  2330 ;;      Locals:         1       0       0       0       0
  2331 ;;      Temps:          2       0       0       0       0
  2332 ;;      Totals:         3       0       0       0       0
  2333 ;;Total ram usage:        3 bytes
  2334 ;; Hardware stack levels used: 1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_show
  2339 ;;		_read_data
  2340 ;;		_print_data
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _LCD_data
  2346  03CF                     _LCD_data:
  2347                           
  2348                           ;incstack = 0
  2349                           ; Regs used in _LCD_data: [wreg]
  2350                           ;LCD_data@data stored from wreg
  2351  03CF  00F2               	movwf	LCD_data@data
  2352  03D0                     l1104:
  2353                           
  2354                           ;main.c: 99: void LCD_data(unsigned char data);main.c: 100: {;main.c: 101:     PORTD = d
      +                          ata;
  2355  03D0  0872               	movf	LCD_data@data,w
  2356  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2357  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2358  03D3  0088               	movwf	8	;volatile
  2359  03D4                     l1106:
  2360                           
  2361                           ;main.c: 102:     RC4 = 1;
  2362  03D4  1607               	bsf	7,4	;volatile
  2363  03D5                     l1108:
  2364                           
  2365                           ;main.c: 103:     RC5 = 1;
  2366  03D5  1687               	bsf	7,5	;volatile
  2367                           
  2368                           ;main.c: 104:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2369  03D6  3041               	movlw	65
  2370  03D7  00F1               	movwf	??_LCD_data+1
  2371  03D8  30EE               	movlw	238
  2372  03D9  00F0               	movwf	??_LCD_data
  2373  03DA                     u507:
  2374  03DA  0BF0               	decfsz	??_LCD_data,f
  2375  03DB  2BDA               	goto	u507
  2376  03DC  0BF1               	decfsz	??_LCD_data+1,f
  2377  03DD  2BDA               	goto	u507
  2378  03DE  0000               	nop
  2379  03DF                     l1110:
  2380                           
  2381                           ;main.c: 105:     RC5 = 0;
  2382  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2383  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2384  03E1  1287               	bcf	7,5	;volatile
  2385  03E2                     l85:
  2386  03E2  0008               	return
  2387  03E3                     __end_of_LCD_data:
  2388                           
  2389                           	psect	text11
  2390  0434                     __ptext11:	
  2391 ;; *************** function _LCD_init *****************
  2392 ;; Defined at:
  2393 ;;		line 107 in file "main.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0, pclath, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2407 ;;      Params:         0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0
  2410 ;;      Totals:         0       0       0       0       0
  2411 ;;Total ram usage:        0 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 1
  2414 ;; This function calls:
  2415 ;;		_LCD_command
  2416 ;; This function is called by:
  2417 ;;		_main
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           
  2422                           ;psect for function _LCD_init
  2423  0434                     _LCD_init:
  2424  0434                     l1250:	
  2425                           ;incstack = 0
  2426                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2427                           
  2428                           
  2429                           ;main.c: 109:     LCD_command(0x38);
  2430  0434  3038               	movlw	56
  2431  0435  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2432                           
  2433                           ;main.c: 110:     LCD_command(0x0E);
  2434  043A  300E               	movlw	14
  2435  043B  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2436                           
  2437                           ;main.c: 111:     LCD_command(0x01);
  2438  0440  3001               	movlw	1
  2439  0441  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2440                           
  2441                           ;main.c: 112:     LCD_command(0x06);
  2442  0446  3006               	movlw	6
  2443  0447  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2444                           
  2445                           ;main.c: 113:     LCD_command(0x80);
  2446  044C  3080               	movlw	128
  2447  044D  120A  118A  23BB  120A  118A  	fcall	_LCD_command
  2448  0452                     l88:
  2449  0452  0008               	return
  2450  0453                     __end_of_LCD_init:
  2451                           
  2452                           	psect	text12
  2453  03BB                     __ptext12:	
  2454 ;; *************** function _LCD_command *****************
  2455 ;; Defined at:
  2456 ;;		line 91 in file "main.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  cmd             1    wreg     unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  cmd             1    2[COMMON] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         0       0       0       0       0
  2471 ;;      Locals:         1       0       0       0       0
  2472 ;;      Temps:          2       0       0       0       0
  2473 ;;      Totals:         3       0       0       0       0
  2474 ;;Total ram usage:        3 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;;		_LCD_init
  2481 ;;		_print_data
  2482 ;;		_refresh_text
  2483 ;;		_cloudy
  2484 ;;		_low_battery
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function _LCD_command
  2490  03BB                     _LCD_command:
  2491                           
  2492                           ;incstack = 0
  2493                           ; Regs used in _LCD_command: [wreg]
  2494                           ;LCD_command@cmd stored from wreg
  2495  03BB  00F2               	movwf	LCD_command@cmd
  2496  03BC                     l1120:
  2497                           
  2498                           ;main.c: 91: void LCD_command(unsigned char cmd);main.c: 92: {;main.c: 93:     PORTD = c
      +                          md;
  2499  03BC  0872               	movf	LCD_command@cmd,w
  2500  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2501  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2502  03BF  0088               	movwf	8	;volatile
  2503  03C0                     l1122:
  2504                           
  2505                           ;main.c: 94:     RC4 = 0;
  2506  03C0  1207               	bcf	7,4	;volatile
  2507  03C1                     l1124:
  2508                           
  2509                           ;main.c: 95:     RC5 = 1;
  2510  03C1  1687               	bsf	7,5	;volatile
  2511                           
  2512                           ;main.c: 96:     _delay((unsigned long)((10)*(20000000/4000.0)));
  2513  03C2  3041               	movlw	65
  2514  03C3  00F1               	movwf	??_LCD_command+1
  2515  03C4  30EE               	movlw	238
  2516  03C5  00F0               	movwf	??_LCD_command
  2517  03C6                     u517:
  2518  03C6  0BF0               	decfsz	??_LCD_command,f
  2519  03C7  2BC6               	goto	u517
  2520  03C8  0BF1               	decfsz	??_LCD_command+1,f
  2521  03C9  2BC6               	goto	u517
  2522  03CA  0000               	nop
  2523  03CB                     l1126:
  2524                           
  2525                           ;main.c: 97:     RC5 = 0;
  2526  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2527  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2528  03CD  1287               	bcf	7,5	;volatile
  2529  03CE                     l82:
  2530  03CE  0008               	return
  2531  03CF                     __end_of_LCD_command:
  2532  007E                     btemp	set	126	;btemp
  2533  007E                     wtemp0	set	126
  2534                           
  2535                           	psect	idloc
  2536                           
  2537                           ;Config register IDLOC0 @ 0x2000
  2538                           ;	unspecified, using default values
  2539  2000                     	org	8192
  2540  2000  3FFF               	dw	16383
  2541                           
  2542                           ;Config register IDLOC1 @ 0x2001
  2543                           ;	unspecified, using default values
  2544  2001                     	org	8193
  2545  2001  3FFF               	dw	16383
  2546                           
  2547                           ;Config register IDLOC2 @ 0x2002
  2548                           ;	unspecified, using default values
  2549  2002                     	org	8194
  2550  2002  3FFF               	dw	16383
  2551                           
  2552                           ;Config register IDLOC3 @ 0x2003
  2553                           ;	unspecified, using default values
  2554  2003                     	org	8195
  2555  2003  3FFF               	dw	16383
  2556                           
  2557                           	psect	config
  2558                           
  2559                           ;Config register CONFIG @ 0x2007
  2560                           ;	Oscillator Selection bits
  2561                           ;	FOSC = HS, HS oscillator
  2562                           ;	Watchdog Timer Enable bit
  2563                           ;	WDTE = OFF, WDT disabled
  2564                           ;	Power-up Timer Enable bit
  2565                           ;	PWRTE = OFF, PWRT disabled
  2566                           ;	Brown-out Reset Enable bit
  2567                           ;	BOREN = ON, BOR enabled
  2568                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2569                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2570                           ;	Data EEPROM Memory Code Protection bit
  2571                           ;	CPD = OFF, Data EEPROM code protection off
  2572                           ;	Flash Program Memory Write Enable bits
  2573                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2574                           ;	In-Circuit Debugger Mode bit
  2575                           ;	DEBUG = 0x1, unprogrammed default
  2576                           ;	Flash Program Memory Code Protection bit
  2577                           ;	CP = OFF, Code protection off
  2578  2007                     	org	8199
  2579  2007  3FFA               	dw	16378

Data Sizes:
    Strings     206
    Constant    0
    Data        29
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     26      62
    BANK1            80      0       0
    BANK3            96      0      95
    BANK2            96      0       0

Pointer List with Targets:

    time$0	PTR long  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    show@s	PTR unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[14]), 
		 -> STR_14(CODE[21]), STR_13(CODE[20]), STR_12(CODE[20]), STR_11(CODE[21]), 
		 -> STR_10(CODE[2]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[20]), 
		 -> STR_6(CODE[18]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[13]), 
		 -> STR_2(CODE[14]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_read_data
    _read_data->_LCD_data
    _low_battery->_show
    _corner_cases->_cloudy
    _print_data->_show
    _refresh_text->_show
    _cloudy->_show
    _show->_LCD_data
    _LCD_init->_LCD_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    4352
                                              0 BANK0     26    26      0
                        _LCD_command
                           _LCD_init
                       _corner_cases
                        _low_battery
                          _read_data
                            _ser_int
                               _show
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_data                                           10    10      0     363
                                              3 COMMON    10    10      0
                           _LCD_data
                                 _rx
 ---------------------------------------------------------------------------------
 (2) _rx                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _low_battery                                          3     3      0     683
                                              5 COMMON     3     3      0
                        _LCD_command
                               _show
 ---------------------------------------------------------------------------------
 (1) _corner_cases                                         2     0      2    2577
                                              8 COMMON     2     0      2
                             _cloudy
                         _print_data
 ---------------------------------------------------------------------------------
 (2) _print_data                                           2     2      0    1796
                                              5 COMMON     2     2      0
                        _LCD_command
                           _LCD_data
                       _refresh_text
                               _show
 ---------------------------------------------------------------------------------
 (3) _refresh_text                                         0     0      0     683
                        _LCD_command
                               _show
 ---------------------------------------------------------------------------------
 (2) _cloudy                                               3     3      0     683
                                              5 COMMON     3     3      0
                        _LCD_command
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     661
                                              3 COMMON     2     2      0
                           _LCD_data
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      22
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_command
   _LCD_init
     _LCD_command
   _corner_cases
     _cloudy
       _LCD_command
       _show
         _LCD_data
     _print_data
       _LCD_command
       _LCD_data
       _refresh_text
         _LCD_command
         _show
       _show
   _low_battery
     _LCD_command
     _show
   _read_data
     _LCD_data
     _rx
   _ser_int
   _show

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      5F       9       99.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AA      12        0.0%
ABS                  0      0      AA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 21 16:16:54 2022

                      _a 0190                        _r 0057                        pc 0002  
                     l82 03CE                       l91 0396                       l85 03E2  
                     l93 039C                       l94 039E                       l88 0452  
                     l97 03A7                       _pv 003A                       _rx 0396  
                     fsr 0004                      l103 0471                      l111 0568  
                    l121 05FA                      l136 07DD                      l152 0552  
                    l153 0552                      l146 0416                      l139 03FB  
                    l149 04AF                      ?_rx 0070                      _RC3 003B  
                    _RC4 003C                      _RC5 003D                      u210 0471  
                    u211 0470                      u220 039C                      u300 056E  
                    u221 039B                      u301 056D                      u230 06F1  
                    u310 0589                      u231 06F0                      u311 0588  
                    u240 0718                      u320 059F                      u241 0717  
                    u321 059E                      u250 0739                      u330 05BA  
                    u251 0738                      u235 06ED                      u331 05B9  
                    u315 0585                      u260 077E                      u340 05C0  
                    u261 077D                      u245 0714                      u341 05BF  
                    u270 07A5                      u350 05E1                      u271 07A4  
                    u255 0735                      u351 05E0                      u407 061F  
                    u280 07C6                      u360 05FA                      u281 07C5  
                    u265 077A                      u361 05F9                      u417 063F  
                    u290 0566                      u370 0659                      u507 03DA  
                    u275 07A1                      u355 05DD                      u291 0565  
                    u427 0695                      u380 066C                      u517 03C6  
                    u285 07C2                      u437 04C8                      u365 05F6  
                    u381 066B                      u390 06AF                      u447 04ED  
                    u391 06AE                      u457 050C                      u467 051F  
                    u395 06AB                      u477 0532                      u487 0545  
                    u497 0490                      fsr0 0004                      indf 0000  
                   ??_rx 0070                     l1110 03DF                     l1120 03BC  
                   l1104 03D0                     l1112 0454                     l1200 0771  
                   l1122 03C0                     l1106 03D4                     l1114 0455  
                   l1130 03E9                     l1210 0788                     l1202 077E  
                   l1124 03C1                     l1108 03D5                     l1116 0461  
                   l1132 03EF                     l1212 0792                     l1204 0784  
                   l1140 06B8                     l1300 05D4                     l1126 03CB  
                   l1118 0465                     l1230 07D8                     l1222 07A9  
                   l1214 0798                     l1142 06C4                     l1310 03FD  
                   l1134 0396                     l1302 05E1                     l1240 0497  
                   l1232 0472                     l1128 03E3                     l1224 07B3  
                   l1216 07A5                     l1160 06F7                     l1152 06D4  
                   l1144 06CA                     l1312 0403                     l1136 039D  
                   l1304 05E7                     l1400 069B                     l1250 0434  
                   l1242 049D                     l1234 0478                     l1226 07B9  
                   l1170 070B                     l1154 06DE                     l1146 06D0  
                   l1330 04D5                     l1322 04B0                     l1306 05ED  
                   l1402 06A2                     l1244 04A3                     l1236 047E  
                   l1228 07C6                     l1180 0726                     l1172 0718  
                   l1156 06E4                     l1316 0409                     l1308 03FC  
                   l1340 04FA                     l1332 04DB                     l1324 04BC  
                   l1260 0560                     l1252 0554                     l1404 06AF  
                   l1246 04A9                     l1238 048A                     l1190 075D  
                   l1182 072C                     l1166 06FB                     l1158 06F1  
                   l1350 0526                     l1342 0500                     l1334 04E1  
                   l1326 04C2                     l1270 0576                     l1262 0566  
                   l1184 0739                     l1168 0705                     l1352 052C  
                   l1344 0506                     l1336 04E7                     l1328 04CF  
                   l1280 059F                     l1272 057C                     l1248 039F  
                   l1360 05FB                     l1186 0751                     l1178 071C  
                   l1426 040E                     l1354 0539                     l1346 0513  
                   l1338 04F4                     l1290 05C0                     l1282 05A5  
                   l1274 0589                     l1258 0558                     l1370 060C  
                   l1362 05FF                     l1196 0761                     l1188 0757  
                   l1356 053F                     l1348 0519                     l1284 05AC  
                   l1276 058E                     l1268 056E                     l1380 0631  
                   l1372 0611                     l1364 0600                     l1198 076B  
                   l1358 054C                     l1278 0591                     l1286 05B2  
                   l1390 066C                     l1382 0637                     l1374 0617  
                   l1366 0602                     l1296 05C2                     l1288 05BA  
                   l1392 0672                     l1384 0646                     l1376 0625  
                   l1368 0607                     l1298 05CE                     l1394 067B  
                   l1386 064F                     l1378 062B                     l1396 0687  
                   l1388 0666                     l1398 068D                     STR_1 00C0  
                   STR_2 0097                     STR_3 00B3                     STR_4 00CB  
                   STR_5 00D0                     STR_6 0085                     STR_7 0071  
                   STR_8 001E                     STR_9 0009             ?_LCD_command 0070  
                   _RCIF 0065                     _main 05FB                     _show 0453  
                   btemp 007E                     start 0000            ?_corner_cases 0078  
       __end_of_LCD_data 03E3         __end_of_LCD_init 0453                    ?_main 0070  
                  STR_10 00D5                    STR_11 0033                    STR_12 005D  
                  STR_13 005D                    STR_14 0048                    STR_15 00A5  
                  STR_16 00C9                    STR_17 00C9                    STR_18 00C9  
                  ?_show 0070                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _randx 0036  
        __end_of_ser_int 03A8                    pclath 000A                    show@s 0074  
                  status 0003                    wtemp0 007E           ??_corner_cases 007A  
        __initialization 07DE             __end_of_main 06B8             __end_of_show 0472  
                 ??_main 003D                   ??_show 0073             ?_low_battery 0070  
                 _TRISC3 043B                   _TRISC4 043C                   _TRISC5 043D  
                 _cloudy 0472             LCD_data@data 0072                ??_ser_int 0070  
__end_of__initialization 07FC     __size_of_LCD_command 0014                ?_LCD_data 0070  
              ?_LCD_init 0070           __pcstackCOMMON 0070             __pidataBANK0 0417  
             __end_of_rx 039F     __end_of_corner_cases 0417               __pbssBANK0 0057  
             __pbssBANK3 0190               ??_LCD_data 0070               ??_LCD_init 0073  
          ?_refresh_text 0070       __size_of_read_data 00A7               __pmaintext 05FB  
                ?_cloudy 0070               __stringtab 0003     __size_of_low_battery 00A4  
         ??_refresh_text 0075          __size_of_cloudy 003E                  __ptext1 039F  
                __ptext2 0554                  __ptext3 0396                  __ptext4 04B0  
                __ptext5 03FC                  __ptext6 06B8                  __ptext7 03E3  
                __ptext8 0472                  __ptext9 0453        __end_of_read_data 05FB  
                _ser_int 039F                  clrloop0 038F     end_of_initialization 07FC  
           read_data@gps 0076    __size_of_corner_cases 001B               _print_data 06B8  
            print_data@h 0075        __size_of_LCD_data 0014             _corner_cases 03FC  
      __size_of_LCD_init 001F           __end_of_cloudy 04B0     __end_of_refresh_text 03FC  
    start_initialization 07DE            ??_LCD_command 0070               init_fetch0 03A8  
               ??_cloudy 0075              __pdataBANK0 0020               read_data@f 007B  
             read_data@i 0079               read_data@j 0077              ?_print_data 0070  
              ___latbits 0002            __pcstackBANK0 003D       corner_cases@number 0078  
    __end_of_LCD_command 03CF                __pstrings 0003                 ?_ser_int 0070  
          ??_low_battery 0075                _read_data 0554              __size_of_rx 0009  
          _reset_counter 005A                 _LCD_data 03CF                 _LCD_init 0434  
              clear_ram0 038E      __size_of_print_data 0126                main@F1148 0020  
  __size_of_refresh_text 0019              __stringbase 0008                main@seven 0041  
             ?_read_data 0070              _LCD_command 03BB      __end_of_low_battery 0554  
           _refresh_text 03E3       __end_of__stringtab 0009                 __ptext10 03CF  
               __ptext11 0434                 __ptext12 03BB         __size_of_ser_int 0009  
          __size_of_main 00BD            __size_of_show 001F              _random_case 005C  
           ??_print_data 0075                 init_ram0 03AC              _low_battery 04B0  
          read_data@flag 0074              ??_read_data 0073                stringcode 0003  
     __end_of_print_data 07DE                 stringdir 0003                 stringtab 0003  
         LCD_command@cmd 0072  
