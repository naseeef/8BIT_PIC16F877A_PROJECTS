

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu May 19 13:15:41 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184                           
   185                           	psect	idataBANK0
   186  022F                     __pidataBANK0:
   187                           
   188                           ;initializer for _name1gps
   189  022F  3450               	retlw	80
   190  0230  3453               	retlw	83
   191  0231  3400               	retlw	0
   192  0232  3400               	retlw	0
   193  0233  3400               	retlw	0
   194  0234  3400               	retlw	0
   195  0235  3400               	retlw	0
   196  000B                     _INTCON	set	11
   197  001A                     _RCREG	set	26
   198  0018                     _RCSTA	set	24
   199  0008                     _PORTD	set	8
   200  003B                     _RC3	set	59
   201  003A                     _RC2	set	58
   202  0065                     _RCIF	set	101
   203  0039                     _RC1	set	57
   204  0038                     _RC0	set	56
   205  008C                     _PIE1	set	140
   206  0099                     _SPBRG	set	153
   207  0088                     _TRISD	set	136
   208  043C                     _TRISC4	set	1084
   209  043B                     _TRISC3	set	1083
   210  043A                     _TRISC2	set	1082
   211  0465                     _RCIE	set	1125
   212  0439                     _TRISC1	set	1081
   213  0438                     _TRISC0	set	1080
   214                           
   215                           	psect	strings
   216  020B                     __pstrings:
   217  020B                     stringtab:
   218  020B                     __stringtab:
   219  020B                     stringcode:	
   220                           ;	String table - string pointers are 1 byte each
   221                           
   222  020B                     stringdir:
   223  020B  3002               	movlw	high stringdir
   224  020C  008A               	movwf	10
   225  020D  0804               	movf	4,w
   226  020E  0A84               	incf	4,f
   227  020F  0782               	addwf	2,f
   228  0210                     __stringbase:
   229  0210  3400               	retlw	0
   230  0211                     __end_of__stringtab:
   231  0211                     STR_1:
   232  0211  344C               	retlw	76	;'L'
   233  0212  344F               	retlw	79	;'O'
   234  0213  344E               	retlw	78	;'N'
   235  0214  343A               	retlw	58	;':'
   236  0215  3400               	retlw	0
   237  0216                     STR_2:
   238  0216  344C               	retlw	76	;'L'
   239  0217  3441               	retlw	65	;'A'
   240  0218  3454               	retlw	84	;'T'
   241  0219  343A               	retlw	58	;':'
   242  021A  3400               	retlw	0
   243                           
   244                           	psect	cinit
   245  0015                     start_initialization:	
   246                           ; #config settings
   247                           
   248  0015                     __initialization:
   249                           
   250                           ; Initialize objects allocated to BANK0
   251  0015  1383               	bcf	3,7	;select IRP bank0
   252  0016  3041               	movlw	low (__pdataBANK0+7)
   253  0017  00FD               	movwf	btemp+-1
   254  0018  3002               	movlw	high __pidataBANK0
   255  0019  00FE               	movwf	btemp
   256  001A  302F               	movlw	low __pidataBANK0
   257  001B  00FF               	movwf	btemp+1
   258  001C  303A               	movlw	low __pdataBANK0
   259  001D  0084               	movwf	4
   260  001E  120A  118A  21FC  120A  118A  	fcall	init_ram0
   261                           
   262                           ; Clear objects allocated to BANK0
   263  0023  3020               	movlw	low __pbssBANK0
   264  0024  0084               	movwf	4
   265  0025  3032               	movlw	low (__pbssBANK0+18)
   266  0026  120A  118A  2227  120A  118A  	fcall	clear_ram0
   267                           
   268                           ; Clear objects allocated to COMMON
   269  002B  01FD               	clrf	__pbssCOMMON& (0+127)
   270  002C                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273  002C                     __end_of__initialization:
   274  002C  0183               	clrf	3
   275  002D  120A  118A  28CA   	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	bssCOMMON
   278  007D                     __pbssCOMMON:
   279  007D                     _f:
   280  007D                     	ds	1
   281                           
   282                           	psect	bssBANK0
   283  0020                     __pbssBANK0:
   284  0020                     _gpsdat:
   285  0020                     	ds	7
   286  0027                     _h:
   287  0027                     	ds	2
   288  0029                     _checkgps:
   289  0029                     	ds	1
   290  002A                     _msggps:
   291  002A                     	ds	1
   292  002B                     _namegps:
   293  002B                     	ds	7
   294                           
   295                           	psect	dataBANK0
   296  003A                     __pdataBANK0:
   297  003A                     _name1gps:
   298  003A                     	ds	7
   299                           
   300                           	psect	inittext
   301  01F8                     init_fetch0:	
   302                           ;	Called with low address in FSR and high address in W
   303                           
   304  01F8  087E               	movf	btemp,w
   305  01F9  008A               	movwf	10
   306  01FA  087F               	movf	btemp+1,w
   307  01FB  0082               	movwf	2
   308  01FC                     init_ram0:	
   309                           ;Called with:
   310                           ;	high address of idata address in btemp 
   311                           ;	low address of idata address in btemp+1 
   312                           ;	low address of data in FSR
   313                           ;	high address + 1 of data in btemp-1
   314                           
   315  01FC  120A  118A  21F8  120A  118A  	fcall	init_fetch0
   316  0201  0080               	movwf	0
   317  0202  0A84               	incf	4,f
   318  0203  0804               	movf	4,w
   319  0204  067D               	xorwf	btemp+-1,w
   320  0205  1903               	btfsc	3,2
   321  0206  3400               	retlw	0
   322  0207  0AFF               	incf	btemp+1,f
   323  0208  1903               	btfsc	3,2
   324  0209  0AFE               	incf	btemp,f
   325  020A  29FC               	goto	init_ram0
   326                           
   327                           	psect	clrtext
   328  0227                     clear_ram0:	
   329                           ;	Called with FSR containing the base address, and
   330                           ;	W with the last address+1
   331                           
   332  0227  0064               	clrwdt	;clear the watchdog before getting into this loop
   333  0228                     clrloop0:
   334  0228  0180               	clrf	0	;clear RAM location pointed to by FSR
   335  0229  0A84               	incf	4,f	;increment pointer
   336  022A  0604               	xorwf	4,w	;XOR with final address
   337  022B  1903               	btfsc	3,2	;have we reached the end yet?
   338  022C  3400               	retlw	0	;all done for this memory range, return
   339  022D  0604               	xorwf	4,w	;XOR again to restore value
   340  022E  2A28               	goto	clrloop0	;do the next byte
   341                           
   342                           	psect	cstackCOMMON
   343  0070                     __pcstackCOMMON:
   344  0070                     ?_show:
   345  0070                     ?_serial_init:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_ser:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_main:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ??i1_LCD_command:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??i1_LCD_data:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_strcmp:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_LCD_command:	
   364                           ; 2 bytes @ 0x0
   365                           
   366  0070                     ?_LCD_data:	
   367                           ; 2 bytes @ 0x0
   368                           
   369  0070                     ?_LCD_init:	
   370                           ; 2 bytes @ 0x0
   371                           
   372  0070                     ?i1_LCD_command:	
   373                           ; 2 bytes @ 0x0
   374                           
   375  0070                     ?i1_LCD_data:	
   376                           ; 2 bytes @ 0x0
   377                           
   378  0070                     strcmp@s2:	
   379                           ; 2 bytes @ 0x0
   380                           
   381  0070                     i1LCD_command@cmd:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     i1LCD_data@data:	
   385                           ; 1 bytes @ 0x0
   386                           
   387                           
   388                           ; 1 bytes @ 0x0
   389  0070                     	ds	1
   390  0071                     i1LCD_command@i:
   391  0071                     i1LCD_data@i:	
   392                           ; 2 bytes @ 0x1
   393                           
   394                           
   395                           ; 2 bytes @ 0x1
   396  0071                     	ds	1
   397  0072                     ??_strcmp:
   398                           
   399                           ; 1 bytes @ 0x2
   400  0072                     	ds	3
   401  0075                     strcmp@r:
   402                           
   403                           ; 1 bytes @ 0x5
   404  0075                     	ds	1
   405  0076                     strcmp@s1:
   406                           
   407                           ; 1 bytes @ 0x6
   408  0076                     	ds	1
   409  0077                     ??_ser:
   410                           
   411                           ; 1 bytes @ 0x7
   412  0077                     	ds	6
   413                           
   414                           	psect	cstackBANK0
   415  0032                     __pcstackBANK0:
   416  0032                     ??_LCD_command:
   417  0032                     ??_LCD_data:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0032                     ??_serial_init:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0032                     LCD_command@cmd:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0032                     LCD_data@data:	
   427                           ; 1 bytes @ 0x0
   428                           
   429                           
   430                           ; 1 bytes @ 0x0
   431  0032                     	ds	1
   432  0033                     LCD_command@i:
   433  0033                     LCD_data@i:	
   434                           ; 2 bytes @ 0x1
   435                           
   436                           
   437                           ; 2 bytes @ 0x1
   438  0033                     	ds	2
   439  0035                     ??_LCD_init:
   440  0035                     ??_show:	
   441                           ; 1 bytes @ 0x3
   442                           
   443                           
   444                           ; 1 bytes @ 0x3
   445  0035                     	ds	1
   446  0036                     show@s:
   447                           
   448                           ; 1 bytes @ 0x4
   449  0036                     	ds	1
   450  0037                     ??_main:
   451                           
   452                           ; 1 bytes @ 0x5
   453  0037                     	ds	3
   454                           
   455                           	psect	maintext
   456  00CA                     __pmaintext:	
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 112 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : B00/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          0       3       0       0       0
   479 ;;      Totals:         0       3       0       0       0
   480 ;;Total ram usage:        3 bytes
   481 ;; Hardware stack levels required when called: 4
   482 ;; This function calls:
   483 ;;		_LCD_command
   484 ;;		_LCD_init
   485 ;;		_serial_init
   486 ;;		_show
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           
   493                           ;psect for function _main
   494  00CA                     _main:
   495  00CA                     l1038:	
   496                           ;incstack = 0
   497                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   498                           
   499                           
   500                           ;main.c: 115: TRISD=0;
   501  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   502  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   503  00CC  0188               	clrf	8	;volatile
   504  00CD                     l1040:
   505                           
   506                           ;main.c: 116: TRISC2 = 0, TRISC3=0, TRISC4=0;
   507  00CD  1107               	bcf	7,2	;volatile
   508  00CE                     l1042:
   509  00CE  1187               	bcf	7,3	;volatile
   510  00CF                     l1044:
   511  00CF  1207               	bcf	7,4	;volatile
   512  00D0                     l1046:
   513                           
   514                           ;main.c: 117: INTCON=0b11000000;
   515  00D0  30C0               	movlw	192
   516  00D1  008B               	movwf	11	;volatile
   517  00D2                     l1048:
   518                           
   519                           ;main.c: 118: PIE1=0b00100000;
   520  00D2  3020               	movlw	32
   521  00D3  008C               	movwf	12	;volatile
   522  00D4                     l1050:
   523                           
   524                           ;main.c: 119: LCD_init();
   525  00D4  120A  118A  21DA  120A  118A  	fcall	_LCD_init
   526  00D9                     l1052:
   527                           
   528                           ;main.c: 120: LCD_command(0x80);
   529  00D9  3080               	movlw	128
   530  00DA  120A  118A  2178  120A  118A  	fcall	_LCD_command
   531  00DF                     l1054:
   532                           
   533                           ;main.c: 121: show("LON:");
   534  00DF  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   535  00E0  120A  118A  2133  120A  118A  	fcall	_show
   536  00E5                     l1056:
   537                           
   538                           ;main.c: 122: LCD_command(0xc0);
   539  00E5  30C0               	movlw	192
   540  00E6  120A  118A  2178  120A  118A  	fcall	_LCD_command
   541  00EB                     l1058:
   542                           
   543                           ;main.c: 123: show("LAT:");
   544  00EB  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   545  00EC  120A  118A  2133  120A  118A  	fcall	_show
   546  00F1                     l1060:
   547                           
   548                           ;main.c: 126: serial_init();
   549  00F1  120A  118A  221B  120A  118A  	fcall	_serial_init
   550  00F6                     l1062:
   551                           
   552                           ;main.c: 127: _delay((unsigned long)((500)*(20000000/4000.0)));
   553  00F6  300D               	movlw	13
   554  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   555  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   556  00F9  00B9               	movwf	??_main+2
   557  00FA  30AF               	movlw	175
   558  00FB  00B8               	movwf	??_main+1
   559  00FC  30B5               	movlw	181
   560  00FD  00B7               	movwf	??_main
   561  00FE                     u317:
   562  00FE  0BB7               	decfsz	??_main,f
   563  00FF  28FE               	goto	u317
   564  0100  0BB8               	decfsz	??_main+1,f
   565  0101  28FE               	goto	u317
   566  0102  0BB9               	decfsz	??_main+2,f
   567  0103  28FE               	goto	u317
   568  0104  2905               	nop2
   569  0105  28F1               	goto	l1060
   570  0106  120A  118A  2812   	ljmp	start
   571  0109                     __end_of_main:
   572                           
   573                           	psect	text1
   574  0133                     __ptext1:	
   575 ;; *************** function _show *****************
   576 ;; Defined at:
   577 ;;		line 60 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  s               1    wreg     PTR unsigned char 
   580 ;;		 -> STR_2(5), STR_1(5), 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  s               1    4[BANK0 ] PTR unsigned char 
   583 ;;		 -> STR_2(5), STR_1(5), 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   593 ;;      Params:         0       0       0       0       0
   594 ;;      Locals:         0       1       0       0       0
   595 ;;      Temps:          0       1       0       0       0
   596 ;;      Totals:         0       2       0       0       0
   597 ;;Total ram usage:        2 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; Hardware stack levels required when called: 3
   600 ;; This function calls:
   601 ;;		_LCD_data
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _show
   609  0133                     _show:
   610                           
   611                           ;incstack = 0
   612                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   613                           ;show@s stored from wreg
   614  0133  1283               	bcf	3,5	;RP0=0, select bank0
   615  0134  1303               	bcf	3,6	;RP1=0, select bank0
   616  0135  00B6               	movwf	show@s
   617  0136                     l928:
   618                           
   619                           ;main.c: 62: while(*s)
   620  0136  2949               	goto	l934
   621  0137                     l930:
   622                           
   623                           ;main.c: 63: {;main.c: 64: LCD_data(*s++);
   624  0137  0836               	movf	show@s,w
   625  0138  0084               	movwf	4
   626  0139  120A  118A  220B  120A  118A  	fcall	stringdir
   627  013E  120A  118A  2156  120A  118A  	fcall	_LCD_data
   628  0143                     l932:
   629  0143  3001               	movlw	1
   630  0144  1283               	bcf	3,5	;RP0=0, select bank0
   631  0145  1303               	bcf	3,6	;RP1=0, select bank0
   632  0146  00B5               	movwf	??_show
   633  0147  0835               	movf	??_show,w
   634  0148  07B6               	addwf	show@s,f
   635  0149                     l934:
   636  0149  0836               	movf	show@s,w
   637  014A  0084               	movwf	4
   638  014B  120A  118A  220B  120A  118A  	fcall	stringdir
   639  0150  3A00               	xorlw	0
   640  0151  1D03               	skipz
   641  0152  2954               	goto	u181
   642  0153  2955               	goto	u180
   643  0154                     u181:
   644  0154  2937               	goto	l930
   645  0155                     u180:
   646  0155                     l73:
   647  0155  0008               	return
   648  0156                     __end_of_show:
   649                           
   650                           	psect	text2
   651  0156                     __ptext2:	
   652 ;; *************** function _LCD_data *****************
   653 ;; Defined at:
   654 ;;		line 41 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  data            1    wreg     unsigned char 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  data            1    0[BANK0 ] unsigned char 
   659 ;;  i               2    1[BANK0 ] int 
   660 ;; Return value:  Size  Location     Type
   661 ;;                  2   61[None  ] int 
   662 ;; Registers used:
   663 ;;		wreg, status,2, btemp+1
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       3       0       0       0
   671 ;;      Temps:          0       0       0       0       0
   672 ;;      Totals:         0       3       0       0       0
   673 ;;Total ram usage:        3 bytes
   674 ;; Hardware stack levels used: 1
   675 ;; Hardware stack levels required when called: 2
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_show
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           
   684                           ;psect for function _LCD_data
   685  0156                     _LCD_data:
   686                           
   687                           ;incstack = 0
   688                           ; Regs used in _LCD_data: [wreg+status,2+btemp+1]
   689                           ;LCD_data@data stored from wreg
   690  0156  1283               	bcf	3,5	;RP0=0, select bank0
   691  0157  1303               	bcf	3,6	;RP1=0, select bank0
   692  0158  00B2               	movwf	LCD_data@data
   693  0159                     l900:
   694                           
   695                           ;main.c: 43: PORTD = data;
   696  0159  0832               	movf	LCD_data@data,w
   697  015A  0088               	movwf	8	;volatile
   698  015B                     l902:
   699                           
   700                           ;main.c: 44: RC0 = 1;
   701  015B  1407               	bsf	7,0	;volatile
   702  015C                     l904:
   703                           
   704                           ;main.c: 46: RC1 = 1;
   705  015C  1487               	bsf	7,1	;volatile
   706  015D                     l906:
   707                           
   708                           ;main.c: 47: for(int i=0;i<1000;i++);
   709  015D  01B3               	clrf	LCD_data@i
   710  015E  01B4               	clrf	LCD_data@i+1
   711  015F                     l912:
   712  015F  3001               	movlw	1
   713  0160  1283               	bcf	3,5	;RP0=0, select bank0
   714  0161  1303               	bcf	3,6	;RP1=0, select bank0
   715  0162  07B3               	addwf	LCD_data@i,f
   716  0163  1803               	skipnc
   717  0164  0AB4               	incf	LCD_data@i+1,f
   718  0165  3000               	movlw	0
   719  0166  07B4               	addwf	LCD_data@i+1,f
   720  0167                     l914:
   721  0167  0834               	movf	LCD_data@i+1,w
   722  0168  3A80               	xorlw	128
   723  0169  00FF               	movwf	btemp+1
   724  016A  3083               	movlw	131
   725  016B  027F               	subwf	btemp+1,w
   726  016C  1D03               	skipz
   727  016D  2970               	goto	u175
   728  016E  30E8               	movlw	232
   729  016F  0233               	subwf	LCD_data@i,w
   730  0170                     u175:
   731  0170  1C03               	skipc
   732  0171  2973               	goto	u171
   733  0172  2974               	goto	u170
   734  0173                     u171:
   735  0173  295F               	goto	l912
   736  0174                     u170:
   737  0174                     l63:
   738                           
   739                           ;main.c: 48: RC1 = 0;
   740  0174  1283               	bcf	3,5	;RP0=0, select bank0
   741  0175  1303               	bcf	3,6	;RP1=0, select bank0
   742  0176  1087               	bcf	7,1	;volatile
   743  0177                     l64:
   744  0177  0008               	return
   745  0178                     __end_of_LCD_data:
   746                           
   747                           	psect	text3
   748  021B                     __ptext3:	
   749 ;; *************** function _serial_init *****************
   750 ;; Defined at:
   751 ;;		line 68 in file "main.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         0       0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 2
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _serial_init
   781  021B                     _serial_init:
   782  021B                     l936:	
   783                           ;incstack = 0
   784                           ; Regs used in _serial_init: [wreg]
   785                           
   786                           
   787                           ;main.c: 72: RCSTA=0b10010000;
   788  021B  3090               	movlw	144
   789  021C  1283               	bcf	3,5	;RP0=0, select bank0
   790  021D  1303               	bcf	3,6	;RP1=0, select bank0
   791  021E  0098               	movwf	24	;volatile
   792                           
   793                           ;main.c: 73: SPBRG=31;
   794  021F  301F               	movlw	31
   795  0220  1683               	bsf	3,5	;RP0=1, select bank1
   796  0221  1303               	bcf	3,6	;RP1=0, select bank1
   797  0222  0099               	movwf	25	;volatile
   798  0223                     l938:
   799                           
   800                           ;main.c: 75: RCIF=0;
   801  0223  1283               	bcf	3,5	;RP0=0, select bank0
   802  0224  1303               	bcf	3,6	;RP1=0, select bank0
   803  0225  128C               	bcf	12,5	;volatile
   804  0226                     l76:
   805  0226  0008               	return
   806  0227                     __end_of_serial_init:
   807                           
   808                           	psect	text4
   809  01DA                     __ptext4:	
   810 ;; *************** function _LCD_init *****************
   811 ;; Defined at:
   812 ;;		line 50 in file "main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  2   66[None  ] int 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         0       0       0       0       0
   830 ;;Total ram usage:        0 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 3
   833 ;; This function calls:
   834 ;;		_LCD_command
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _LCD_init
   842  01DA                     _LCD_init:
   843  01DA                     l916:	
   844                           ;incstack = 0
   845                           ; Regs used in _LCD_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   846                           
   847                           
   848                           ;main.c: 52: TRISC0=0;
   849  01DA  1683               	bsf	3,5	;RP0=1, select bank1
   850  01DB  1303               	bcf	3,6	;RP1=0, select bank1
   851  01DC  1007               	bcf	7,0	;volatile
   852                           
   853                           ;main.c: 53: TRISC1=0;
   854  01DD  1087               	bcf	7,1	;volatile
   855  01DE                     l918:
   856                           
   857                           ;main.c: 54: TRISD=0;
   858  01DE  0188               	clrf	8	;volatile
   859  01DF                     l920:
   860                           
   861                           ;main.c: 55: LCD_command(0x38);
   862  01DF  3038               	movlw	56
   863  01E0  120A  118A  2178  120A  118A  	fcall	_LCD_command
   864  01E5                     l922:
   865                           
   866                           ;main.c: 56: LCD_command(0x0e);
   867  01E5  300E               	movlw	14
   868  01E6  120A  118A  2178  120A  118A  	fcall	_LCD_command
   869  01EB                     l924:
   870                           
   871                           ;main.c: 57: LCD_command(0x06);
   872  01EB  3006               	movlw	6
   873  01EC  120A  118A  2178  120A  118A  	fcall	_LCD_command
   874  01F1                     l926:
   875                           
   876                           ;main.c: 58: LCD_command(0x80);
   877  01F1  3080               	movlw	128
   878  01F2  120A  118A  2178  120A  118A  	fcall	_LCD_command
   879  01F7                     l67:
   880  01F7  0008               	return
   881  01F8                     __end_of_LCD_init:
   882                           
   883                           	psect	text5
   884  0178                     __ptext5:	
   885 ;; *************** function _LCD_command *****************
   886 ;; Defined at:
   887 ;;		line 32 in file "main.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  cmd             1    wreg     unsigned char 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  cmd             1    0[BANK0 ] unsigned char 
   892 ;;  i               2    1[BANK0 ] int 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2   56[None  ] int 
   895 ;; Registers used:
   896 ;;		wreg, status,2, btemp+1
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         0       3       0       0       0
   904 ;;      Temps:          0       0       0       0       0
   905 ;;      Totals:         0       3       0       0       0
   906 ;;Total ram usage:        3 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; Hardware stack levels required when called: 2
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_LCD_init
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _LCD_command
   919  0178                     _LCD_command:
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _LCD_command: [wreg+status,2+btemp+1]
   923                           ;LCD_command@cmd stored from wreg
   924  0178  1283               	bcf	3,5	;RP0=0, select bank0
   925  0179  1303               	bcf	3,6	;RP1=0, select bank0
   926  017A  00B2               	movwf	LCD_command@cmd
   927  017B                     l884:
   928                           
   929                           ;main.c: 34: PORTD = cmd;
   930  017B  0832               	movf	LCD_command@cmd,w
   931  017C  0088               	movwf	8	;volatile
   932  017D                     l886:
   933                           
   934                           ;main.c: 35: RC0 = 0;
   935  017D  1007               	bcf	7,0	;volatile
   936  017E                     l888:
   937                           
   938                           ;main.c: 37: RC1 = 1;
   939  017E  1487               	bsf	7,1	;volatile
   940  017F                     l890:
   941                           
   942                           ;main.c: 38: for(int i=0;i<1000;i++);
   943  017F  01B3               	clrf	LCD_command@i
   944  0180  01B4               	clrf	LCD_command@i+1
   945  0181                     l896:
   946  0181  3001               	movlw	1
   947  0182  1283               	bcf	3,5	;RP0=0, select bank0
   948  0183  1303               	bcf	3,6	;RP1=0, select bank0
   949  0184  07B3               	addwf	LCD_command@i,f
   950  0185  1803               	skipnc
   951  0186  0AB4               	incf	LCD_command@i+1,f
   952  0187  3000               	movlw	0
   953  0188  07B4               	addwf	LCD_command@i+1,f
   954  0189                     l898:
   955  0189  0834               	movf	LCD_command@i+1,w
   956  018A  3A80               	xorlw	128
   957  018B  00FF               	movwf	btemp+1
   958  018C  3083               	movlw	131
   959  018D  027F               	subwf	btemp+1,w
   960  018E  1D03               	skipz
   961  018F  2992               	goto	u165
   962  0190  30E8               	movlw	232
   963  0191  0233               	subwf	LCD_command@i,w
   964  0192                     u165:
   965  0192  1C03               	skipc
   966  0193  2995               	goto	u161
   967  0194  2996               	goto	u160
   968  0195                     u161:
   969  0195  2981               	goto	l896
   970  0196                     u160:
   971  0196                     l58:
   972                           
   973                           ;main.c: 39: RC1 = 0;
   974  0196  1283               	bcf	3,5	;RP0=0, select bank0
   975  0197  1303               	bcf	3,6	;RP1=0, select bank0
   976  0198  1087               	bcf	7,1	;volatile
   977  0199                     l59:
   978  0199  0008               	return
   979  019A                     __end_of_LCD_command:
   980                           
   981                           	psect	text6
   982  0030                     __ptext6:	
   983 ;; *************** function _ser *****************
   984 ;; Defined at:
   985 ;;		line 78 in file "main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0
  1001 ;;      Temps:          6       0       0       0       0
  1002 ;;      Totals:         6       0       0       0       0
  1003 ;;Total ram usage:        6 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 1
  1006 ;; This function calls:
  1007 ;;		_strcmp
  1008 ;;		i1_LCD_command
  1009 ;;		i1_LCD_data
  1010 ;; This function is called by:
  1011 ;;		Interrupt level 1
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _ser
  1017  0030                     _ser:
  1018  0030                     i1l986:
  1019                           
  1020                           ;main.c: 80: if(RCIF)
  1021  0030  1E8C               	btfss	12,5	;volatile
  1022  0031  2833               	goto	u23_21
  1023  0032  2834               	goto	u23_20
  1024  0033                     u23_21:
  1025  0033  28BF               	goto	i1l96
  1026  0034                     u23_20:
  1027  0034                     i1l988:
  1028                           
  1029                           ;main.c: 81: {;main.c: 82: msggps=RCREG;
  1030  0034  081A               	movf	26,w	;volatile
  1031  0035  00F7               	movwf	??_ser
  1032  0036  0877               	movf	??_ser,w
  1033  0037  00AA               	movwf	_msggps
  1034  0038                     i1l990:
  1035                           
  1036                           ;main.c: 84: if(msggps=='G')
  1037  0038  3047               	movlw	71
  1038  0039  062A               	xorwf	_msggps,w
  1039  003A  1D03               	btfss	3,2
  1040  003B  283D               	goto	u24_21
  1041  003C  283E               	goto	u24_20
  1042  003D                     u24_21:
  1043  003D  28BF               	goto	i1l96
  1044  003E                     u24_20:
  1045  003E                     i1l992:
  1046                           
  1047                           ;main.c: 85: {;main.c: 86: RC2 = 1;
  1048  003E  1507               	bsf	7,2	;volatile
  1049                           
  1050                           ;main.c: 87: RCIE=0;
  1051  003F  1683               	bsf	3,5	;RP0=1, select bank1
  1052  0040  1303               	bcf	3,6	;RP1=0, select bank1
  1053  0041  128C               	bcf	12,5	;volatile
  1054                           
  1055                           ;main.c: 88: RCIF=0;
  1056  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0044  128C               	bcf	12,5	;volatile
  1059  0045                     i1l994:
  1060                           
  1061                           ;main.c: 90: for(f=0;f<=1;f++) {
  1062  0045  01FD               	clrf	_f
  1063  0046                     i1l996:
  1064  0046  3002               	movlw	2
  1065  0047  027D               	subwf	_f,w
  1066  0048  1C03               	skipc
  1067  0049  284B               	goto	u25_21
  1068  004A  284C               	goto	u25_20
  1069  004B                     u25_21:
  1070  004B  284D               	goto	i1l85
  1071  004C                     u25_20:
  1072  004C  285E               	goto	i1l1006
  1073  004D                     i1l85:
  1074  004D  1E8C               	btfss	12,5	;volatile
  1075  004E  2850               	goto	u26_21
  1076  004F  2851               	goto	u26_20
  1077  0050                     u26_21:
  1078  0050  284D               	goto	i1l85
  1079  0051                     u26_20:
  1080  0051                     i1l1000:
  1081                           
  1082                           ;main.c: 92: namegps[f]=RCREG;
  1083  0051  081A               	movf	26,w	;volatile
  1084  0052  00F7               	movwf	??_ser
  1085  0053  087D               	movf	_f,w
  1086  0054  3E2B               	addlw	(low (_namegps| 0))& (0+255)
  1087  0055  0084               	movwf	4
  1088  0056  0877               	movf	??_ser,w
  1089  0057  1383               	bcf	3,7	;select IRP bank0
  1090  0058  0080               	movwf	0
  1091  0059                     i1l1002:
  1092  0059  3001               	movlw	1
  1093  005A  00F7               	movwf	??_ser
  1094  005B  0877               	movf	??_ser,w
  1095  005C  07FD               	addwf	_f,f
  1096  005D  2846               	goto	i1l996
  1097  005E                     i1l1006:
  1098                           
  1099                           ;main.c: 93: };main.c: 94: checkgps=strcmp(namegps,name1gps);
  1100  005E  303A               	movlw	(low (_name1gps| 0))& (0+255)
  1101  005F  00F7               	movwf	??_ser
  1102  0060  0877               	movf	??_ser,w
  1103  0061  00F0               	movwf	strcmp@s2
  1104  0062  302B               	movlw	(low (_namegps| 0))& (0+255)
  1105  0063  120A  118A  2109  120A  118A  	fcall	_strcmp
  1106  0068  0870               	movf	?_strcmp,w
  1107  0069  00F8               	movwf	??_ser+1
  1108  006A  0878               	movf	??_ser+1,w
  1109  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1110  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1111  006D  00A9               	movwf	_checkgps
  1112  006E                     i1l1008:
  1113                           
  1114                           ;main.c: 95: if(checkgps==0) {
  1115  006E  0829               	movf	_checkgps,w
  1116  006F  1D03               	btfss	3,2
  1117  0070  2872               	goto	u27_21
  1118  0071  2873               	goto	u27_20
  1119  0072                     u27_21:
  1120  0072  28BC               	goto	i1l88
  1121  0073                     u27_20:
  1122  0073                     i1l1010:
  1123                           
  1124                           ;main.c: 96: RC3 = 1;
  1125  0073  1587               	bsf	7,3	;volatile
  1126  0074                     i1l1012:
  1127                           
  1128                           ;main.c: 97: for(f=0;f<=6;f++) {
  1129  0074  01FD               	clrf	_f
  1130  0075                     i1l1014:
  1131  0075  3007               	movlw	7
  1132  0076  027D               	subwf	_f,w
  1133  0077  1C03               	skipc
  1134  0078  287A               	goto	u28_21
  1135  0079  287B               	goto	u28_20
  1136  007A                     u28_21:
  1137  007A  287C               	goto	i1l91
  1138  007B                     u28_20:
  1139  007B  288D               	goto	i1l1024
  1140  007C                     i1l91:
  1141  007C  1E8C               	btfss	12,5	;volatile
  1142  007D  287F               	goto	u29_21
  1143  007E  2880               	goto	u29_20
  1144  007F                     u29_21:
  1145  007F  287C               	goto	i1l91
  1146  0080                     u29_20:
  1147  0080                     i1l1018:
  1148                           
  1149                           ;main.c: 99: gpsdat[f]=RCREG;
  1150  0080  081A               	movf	26,w	;volatile
  1151  0081  00F7               	movwf	??_ser
  1152  0082  087D               	movf	_f,w
  1153  0083  3E20               	addlw	(low (_gpsdat| 0))& (0+255)
  1154  0084  0084               	movwf	4
  1155  0085  0877               	movf	??_ser,w
  1156  0086  1383               	bcf	3,7	;select IRP bank0
  1157  0087  0080               	movwf	0
  1158  0088                     i1l1020:
  1159  0088  3001               	movlw	1
  1160  0089  00F7               	movwf	??_ser
  1161  008A  0877               	movf	??_ser,w
  1162  008B  07FD               	addwf	_f,f
  1163  008C  2875               	goto	i1l1014
  1164  008D                     i1l1024:
  1165                           
  1166                           ;main.c: 100: };main.c: 102: LCD_command(0xc4);
  1167  008D  30C4               	movlw	196
  1168  008E  120A  118A  21BA  120A  118A  	fcall	i1_LCD_command
  1169  0093                     i1l1026:
  1170                           
  1171                           ;main.c: 103: for(h=1;h<=6;h++) {
  1172  0093  3001               	movlw	1
  1173  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0096  00A7               	movwf	_h
  1176  0097  3000               	movlw	0
  1177  0098  00A8               	movwf	_h+1
  1178  0099                     i1l1028:
  1179  0099  0828               	movf	_h+1,w
  1180  009A  3A80               	xorlw	128
  1181  009B  00FF               	movwf	btemp+1
  1182  009C  3080               	movlw	128
  1183  009D  027F               	subwf	btemp+1,w
  1184  009E  1D03               	skipz
  1185  009F  28A2               	goto	u30_25
  1186  00A0  3007               	movlw	7
  1187  00A1  0227               	subwf	_h,w
  1188  00A2                     u30_25:
  1189  00A2  1C03               	skipc
  1190  00A3  28A5               	goto	u30_21
  1191  00A4  28A6               	goto	u30_20
  1192  00A5                     u30_21:
  1193  00A5  28A7               	goto	i1l1032
  1194  00A6                     u30_20:
  1195  00A6  28BC               	goto	i1l88
  1196  00A7                     i1l1032:
  1197                           
  1198                           ;main.c: 104: LCD_data(gpsdat[h]);
  1199  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1200  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1201  00A9  0827               	movf	_h,w
  1202  00AA  3E20               	addlw	(low (_gpsdat| 0))& (0+255)
  1203  00AB  0084               	movwf	4
  1204  00AC  1383               	bcf	3,7	;select IRP bank0
  1205  00AD  0800               	movf	0,w
  1206  00AE  120A  118A  219A  120A  118A  	fcall	i1_LCD_data
  1207  00B3                     i1l1034:
  1208  00B3  3001               	movlw	1
  1209  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1210  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1211  00B6  07A7               	addwf	_h,f
  1212  00B7  1803               	skipnc
  1213  00B8  0AA8               	incf	_h+1,f
  1214  00B9  3000               	movlw	0
  1215  00BA  07A8               	addwf	_h+1,f
  1216  00BB  2899               	goto	i1l1028
  1217  00BC                     i1l88:
  1218                           
  1219                           ;main.c: 105: };main.c: 106: };main.c: 107: RCIF=0;
  1220  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1221  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1222  00BE  128C               	bcf	12,5	;volatile
  1223  00BF                     i1l96:
  1224  00BF  087C               	movf	??_ser+5,w
  1225  00C0  00FF               	movwf	btemp+1
  1226  00C1  087B               	movf	??_ser+4,w
  1227  00C2  008A               	movwf	10
  1228  00C3  087A               	movf	??_ser+3,w
  1229  00C4  0084               	movwf	4
  1230  00C5  0E79               	swapf	??_ser+2,w
  1231  00C6  0083               	movwf	3
  1232  00C7  0EFE               	swapf	btemp,f
  1233  00C8  0E7E               	swapf	btemp,w
  1234  00C9  0009               	retfie
  1235  00CA                     __end_of_ser:
  1236                           
  1237                           	psect	intentry
  1238  0004                     __pintentry:	
  1239                           ;incstack = 0
  1240                           ; Regs used in _ser: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1241                           
  1242  0004                     interrupt_function:
  1243  007E                     saved_w	set	btemp
  1244  0004  00FE               	movwf	btemp
  1245  0005  0E03               	swapf	3,w
  1246  0006  00F9               	movwf	??_ser+2
  1247  0007  0804               	movf	4,w
  1248  0008  00FA               	movwf	??_ser+3
  1249  0009  080A               	movf	10,w
  1250  000A  00FB               	movwf	??_ser+4
  1251  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1252  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1253  000D  087F               	movf	btemp+1,w
  1254  000E  00FC               	movwf	??_ser+5
  1255  000F  120A  118A  2830   	ljmp	_ser
  1256                           
  1257                           	psect	text7
  1258  019A                     __ptext7:	
  1259 ;; *************** function i1_LCD_data *****************
  1260 ;; Defined at:
  1261 ;;		line 41 in file "main.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  data            1    wreg     unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  data            1    0[COMMON] unsigned char 
  1266 ;;  i               2    1[COMMON] int 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  2    0[None  ] int 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, btemp+1
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       0       0       0       0
  1277 ;;      Locals:         3       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0
  1279 ;;      Totals:         3       0       0       0       0
  1280 ;;Total ram usage:        3 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_ser
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function i1_LCD_data
  1291  019A                     i1_LCD_data:
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in i1_LCD_data: [wreg+status,2+btemp+1]
  1295                           ;i1LCD_data@data stored from wreg
  1296  019A  00F0               	movwf	i1LCD_data@data
  1297  019B                     i1l970:
  1298                           
  1299                           ;main.c: 43: PORTD = data;
  1300  019B  0870               	movf	i1LCD_data@data,w
  1301  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1302  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1303  019E  0088               	movwf	8	;volatile
  1304  019F                     i1l972:
  1305                           
  1306                           ;main.c: 44: RC0 = 1;
  1307  019F  1407               	bsf	7,0	;volatile
  1308  01A0                     i1l974:
  1309                           
  1310                           ;main.c: 46: RC1 = 1;
  1311  01A0  1487               	bsf	7,1	;volatile
  1312  01A1                     i1l976:
  1313                           
  1314                           ;main.c: 47: for(int i=0;i<1000;i++);
  1315  01A1  01F1               	clrf	i1LCD_data@i
  1316  01A2  01F2               	clrf	i1LCD_data@i+1
  1317  01A3                     i1l982:
  1318  01A3  3001               	movlw	1
  1319  01A4  07F1               	addwf	i1LCD_data@i,f
  1320  01A5  1803               	skipnc
  1321  01A6  0AF2               	incf	i1LCD_data@i+1,f
  1322  01A7  3000               	movlw	0
  1323  01A8  07F2               	addwf	i1LCD_data@i+1,f
  1324  01A9                     i1l984:
  1325  01A9  0872               	movf	i1LCD_data@i+1,w
  1326  01AA  3A80               	xorlw	128
  1327  01AB  00FF               	movwf	btemp+1
  1328  01AC  3083               	movlw	131
  1329  01AD  027F               	subwf	btemp+1,w
  1330  01AE  1D03               	skipz
  1331  01AF  29B2               	goto	u22_25
  1332  01B0  30E8               	movlw	232
  1333  01B1  0271               	subwf	i1LCD_data@i,w
  1334  01B2                     u22_25:
  1335  01B2  1C03               	skipc
  1336  01B3  29B5               	goto	u22_21
  1337  01B4  29B6               	goto	u22_20
  1338  01B5                     u22_21:
  1339  01B5  29A3               	goto	i1l982
  1340  01B6                     u22_20:
  1341  01B6                     i1l63:
  1342                           
  1343                           ;main.c: 48: RC1 = 0;
  1344  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1345  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1346  01B8  1087               	bcf	7,1	;volatile
  1347  01B9                     i1l64:
  1348  01B9  0008               	return
  1349  01BA                     __end_ofi1_LCD_data:
  1350                           
  1351                           	psect	text8
  1352  01BA                     __ptext8:	
  1353 ;; *************** function i1_LCD_command *****************
  1354 ;; Defined at:
  1355 ;;		line 32 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  cmd             1    wreg     unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  cmd             1    0[COMMON] unsigned char 
  1360 ;;  i               2    1[COMMON] int 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  2    0[None  ] int 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, btemp+1
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         0       0       0       0       0
  1371 ;;      Locals:         3       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0
  1373 ;;      Totals:         3       0       0       0       0
  1374 ;;Total ram usage:        3 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_ser
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function i1_LCD_command
  1385  01BA                     i1_LCD_command:
  1386                           
  1387                           ;incstack = 0
  1388                           ; Regs used in i1_LCD_command: [wreg+status,2+btemp+1]
  1389                           ;i1LCD_command@cmd stored from wreg
  1390  01BA  00F0               	movwf	i1LCD_command@cmd
  1391  01BB                     i1l954:
  1392                           
  1393                           ;main.c: 34: PORTD = cmd;
  1394  01BB  0870               	movf	i1LCD_command@cmd,w
  1395  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1396  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1397  01BE  0088               	movwf	8	;volatile
  1398  01BF                     i1l956:
  1399                           
  1400                           ;main.c: 35: RC0 = 0;
  1401  01BF  1007               	bcf	7,0	;volatile
  1402  01C0                     i1l958:
  1403                           
  1404                           ;main.c: 37: RC1 = 1;
  1405  01C0  1487               	bsf	7,1	;volatile
  1406  01C1                     i1l960:
  1407                           
  1408                           ;main.c: 38: for(int i=0;i<1000;i++);
  1409  01C1  01F1               	clrf	i1LCD_command@i
  1410  01C2  01F2               	clrf	i1LCD_command@i+1
  1411  01C3                     i1l966:
  1412  01C3  3001               	movlw	1
  1413  01C4  07F1               	addwf	i1LCD_command@i,f
  1414  01C5  1803               	skipnc
  1415  01C6  0AF2               	incf	i1LCD_command@i+1,f
  1416  01C7  3000               	movlw	0
  1417  01C8  07F2               	addwf	i1LCD_command@i+1,f
  1418  01C9                     i1l968:
  1419  01C9  0872               	movf	i1LCD_command@i+1,w
  1420  01CA  3A80               	xorlw	128
  1421  01CB  00FF               	movwf	btemp+1
  1422  01CC  3083               	movlw	131
  1423  01CD  027F               	subwf	btemp+1,w
  1424  01CE  1D03               	skipz
  1425  01CF  29D2               	goto	u21_25
  1426  01D0  30E8               	movlw	232
  1427  01D1  0271               	subwf	i1LCD_command@i,w
  1428  01D2                     u21_25:
  1429  01D2  1C03               	skipc
  1430  01D3  29D5               	goto	u21_21
  1431  01D4  29D6               	goto	u21_20
  1432  01D5                     u21_21:
  1433  01D5  29C3               	goto	i1l966
  1434  01D6                     u21_20:
  1435  01D6                     i1l58:
  1436                           
  1437                           ;main.c: 39: RC1 = 0;
  1438  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1439  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1440  01D8  1087               	bcf	7,1	;volatile
  1441  01D9                     i1l59:
  1442  01D9  0008               	return
  1443  01DA                     __end_ofi1_LCD_command:
  1444                           
  1445                           	psect	text9
  1446  0109                     __ptext9:	
  1447 ;; *************** function _strcmp *****************
  1448 ;; Defined at:
  1449 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcmp.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  s1              1    wreg     PTR const unsigned char 
  1452 ;;		 -> namegps(7), 
  1453 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1454 ;;		 -> name1gps(7), 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  s1              1    6[COMMON] PTR const unsigned char 
  1457 ;;		 -> namegps(7), 
  1458 ;;  r               1    5[COMMON] char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  2    0[COMMON] int 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         2       0       0       0       0
  1469 ;;      Locals:         2       0       0       0       0
  1470 ;;      Temps:          3       0       0       0       0
  1471 ;;      Totals:         7       0       0       0       0
  1472 ;;Total ram usage:        7 bytes
  1473 ;; Hardware stack levels used: 1
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_ser
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _strcmp
  1483  0109                     _strcmp:
  1484                           
  1485                           ;incstack = 0
  1486                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  1487                           ;strcmp@s1 stored from wreg
  1488  0109  00F6               	movwf	strcmp@s1
  1489  010A                     i1l940:
  1490  010A  2913               	goto	i1l946
  1491  010B                     i1l942:
  1492  010B  3001               	movlw	1
  1493  010C  00F2               	movwf	??_strcmp
  1494  010D  0872               	movf	??_strcmp,w
  1495  010E  07F6               	addwf	strcmp@s1,f
  1496  010F                     i1l944:
  1497  010F  3001               	movlw	1
  1498  0110  00F2               	movwf	??_strcmp
  1499  0111  0872               	movf	??_strcmp,w
  1500  0112  07F0               	addwf	strcmp@s2,f
  1501  0113                     i1l946:
  1502  0113  0870               	movf	strcmp@s2,w
  1503  0114  0084               	movwf	4
  1504  0115  1383               	bcf	3,7	;select IRP bank0
  1505  0116  0800               	movf	0,w
  1506  0117  00F2               	movwf	??_strcmp
  1507  0118  0876               	movf	strcmp@s1,w
  1508  0119  0084               	movwf	4
  1509  011A  0800               	movf	0,w
  1510  011B  00F3               	movwf	??_strcmp+1
  1511  011C  0872               	movf	??_strcmp,w
  1512  011D  0273               	subwf	??_strcmp+1,w
  1513  011E  00F4               	movwf	??_strcmp+2
  1514  011F  0874               	movf	??_strcmp+2,w
  1515  0120  00F5               	movwf	strcmp@r
  1516  0121  0875               	movf	strcmp@r,w
  1517  0122  1D03               	btfss	3,2
  1518  0123  2925               	goto	u19_21
  1519  0124  2926               	goto	u19_20
  1520  0125                     u19_21:
  1521  0125  292D               	goto	i1l950
  1522  0126                     u19_20:
  1523  0126                     i1l948:
  1524  0126  0876               	movf	strcmp@s1,w
  1525  0127  0084               	movwf	4
  1526  0128  0800               	movf	0,w
  1527  0129  1D03               	btfss	3,2
  1528  012A  292C               	goto	u20_21
  1529  012B  292D               	goto	u20_20
  1530  012C                     u20_21:
  1531  012C  290B               	goto	i1l942
  1532  012D                     u20_20:
  1533  012D                     i1l950:
  1534  012D  0875               	movf	strcmp@r,w
  1535  012E  00F0               	movwf	?_strcmp
  1536  012F  01F1               	clrf	?_strcmp+1
  1537  0130  1BF0               	btfsc	?_strcmp,7
  1538  0131  03F1               	decf	?_strcmp+1,f
  1539  0132                     i1l646:
  1540  0132  0008               	return
  1541  0133                     __end_of_strcmp:
  1542  007E                     btemp	set	126	;btemp
  1543  007E                     wtemp0	set	126
  1544                           
  1545                           	psect	idloc
  1546                           
  1547                           ;Config register IDLOC0 @ 0x2000
  1548                           ;	unspecified, using default values
  1549  2000                     	org	8192
  1550  2000  3FFF               	dw	16383
  1551                           
  1552                           ;Config register IDLOC1 @ 0x2001
  1553                           ;	unspecified, using default values
  1554  2001                     	org	8193
  1555  2001  3FFF               	dw	16383
  1556                           
  1557                           ;Config register IDLOC2 @ 0x2002
  1558                           ;	unspecified, using default values
  1559  2002                     	org	8194
  1560  2002  3FFF               	dw	16383
  1561                           
  1562                           ;Config register IDLOC3 @ 0x2003
  1563                           ;	unspecified, using default values
  1564  2003                     	org	8195
  1565  2003  3FFF               	dw	16383
  1566                           
  1567                           	psect	config
  1568                           
  1569                           ;Config register CONFIG @ 0x2007
  1570                           ;	Oscillator Selection bits
  1571                           ;	FOSC = HS, HS oscillator
  1572                           ;	Watchdog Timer Enable bit
  1573                           ;	WDTE = OFF, WDT disabled
  1574                           ;	Power-up Timer Enable bit
  1575                           ;	PWRTE = OFF, PWRT disabled
  1576                           ;	Brown-out Reset Enable bit
  1577                           ;	BOREN = ON, BOR enabled
  1578                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1579                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1580                           ;	Data EEPROM Memory Code Protection bit
  1581                           ;	CPD = OFF, Data EEPROM code protection off
  1582                           ;	Flash Program Memory Write Enable bits
  1583                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1584                           ;	In-Circuit Debugger Mode bit
  1585                           ;	DEBUG = 0x1, unprogrammed default
  1586                           ;	Flash Program Memory Code Protection bit
  1587                           ;	CP = OFF, Code protection off
  1588  2007                     	org	8199
  1589  2007  3FFA               	dw	16378

Data Sizes:
    Strings     10
    Constant    0
    Data        7
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      8      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 7
		 -> name1gps(BANK0[7]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 7
		 -> namegps(BANK0[7]), 

    show@s	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ser in COMMON

    _ser->_strcmp

Critical Paths under _main in BANK0

    _main->_show
    _show->_LCD_data
    _LCD_init->_LCD_command

Critical Paths under _ser in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ser in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ser in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ser in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     315
                                              5 BANK0      3     3      0
                        _LCD_command
                           _LCD_init
                        _serial_init
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     179
                                              3 BANK0      2     2      0
                           _LCD_data
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      68
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ser                                                  6     6      0     336
                                              7 COMMON     6     6      0
                             _strcmp
                      i1_LCD_command
                         i1_LCD_data
 ---------------------------------------------------------------------------------
 (4) i1_LCD_data                                           3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) i1_LCD_command                                        3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               7     5      2     200
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_command
   _LCD_init
     _LCD_command
   _serial_init
   _show
     _LCD_data

 _ser (ROOT)
   _strcmp
   i1_LCD_command
   i1_LCD_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      21       5       41.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu May 19 13:15:41 2022

                      _f 007D                        _h 0027                        pc 0002  
                     l63 0174                       l64 0177                       l73 0155  
                     l58 0196                       l59 0199                       l67 01F7  
                     l76 0226                       fsr 0004                      l900 0159  
                    l902 015B                      l920 01DF                      l912 015F  
                    l904 015C                      l922 01E5                      l914 0167  
                    l906 015D                      l930 0137                      l924 01EB  
                    l916 01DA                      l932 0143                      l926 01F1  
                    l918 01DE                      l934 0149                      l936 021B  
                    l928 0136                      l890 017F                      l938 0223  
                    l884 017B                      l886 017D                      l896 0181  
                    l888 017E                      l898 0189                      _RC0 0038  
                    _RC1 0039                      _RC2 003A                      _RC3 003B  
                    u160 0196                      u161 0195                      u170 0174  
                    u171 0173                      u180 0155                      u165 0192  
                    u181 0154                      u317 00FE                      u175 0170  
                    _ser 0030                      fsr0 0004                      indf 0000  
                   l1040 00CD                     l1050 00D4                     l1042 00CE  
                   l1060 00F1                     l1052 00D9                     l1044 00CF  
                   l1062 00F6                     l1054 00DF                     l1046 00D0  
                   l1038 00CA                     l1056 00E5                     l1048 00D2  
                   l1058 00EB                     ?_ser 0070                     STR_1 0211  
                   STR_2 0216             ?_LCD_command 0070                     _PIE1 008C  
                   _RCIE 0465                     _RCIF 0065                     i1l63 01B6  
                   i1l64 01B9                     i1l58 01D6                     i1l59 01D9  
                   i1l91 007C                     i1l85 004D                     i1l88 00BC  
                   i1l96 00BF              ?i1_LCD_data 0070                     _main 00CA  
                   _show 0133                     btemp 007E                     start 0012  
                  ??_ser 0077         __end_of_LCD_data 0178         __end_of_LCD_init 01F8  
                  ?_main 0070                    ?_show 0070                    i1l646 0132  
                  i1l940 010A                    i1l950 012D                    i1l942 010B  
                  i1l944 010F                    i1l960 01C1                    i1l946 0113  
                  i1l954 01BB                    i1l970 019B                    i1l948 0126  
                  i1l956 01BF                    i1l972 019F                    i1l966 01C3  
                  i1l958 01C0                    i1l982 01A3                    i1l974 01A0  
                  i1l990 0038                    i1l968 01C9                    i1l984 01A9  
                  i1l976 01A1                    i1l992 003E                    i1l994 0045  
                  i1l986 0030                    i1l996 0046                    i1l988 0034  
                  _RCREG 001A                    _RCSTA 0018                    u20_20 012D  
                  u20_21 012C                    u21_20 01D6                    u21_21 01D5  
                  u21_25 01D2                    u22_20 01B6                    u30_20 00A6  
                  u22_21 01B5                    u30_21 00A5                    u22_25 01B2  
                  u30_25 00A2                    u23_20 0034                    u23_21 0033  
                  u24_20 003E                    u24_21 003D                    u25_20 004C  
                  u25_21 004B                    u26_20 0051                    u26_21 0050  
                  _SPBRG 0099                    u19_20 0126                    u27_20 0073  
                  u19_21 0125                    u27_21 0072                    _PORTD 0008  
                  u28_20 007B                    u28_21 007A                    u29_20 0080  
                  u29_21 007F                    _TRISD 0088                    pclath 000A  
                  show@s 0036                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0109             __end_of_show 0156  
    __size_ofi1_LCD_data 0020                   ??_main 0037                   ??_show 0035  
                 i1l1000 0051                   i1l1010 0073                   i1l1002 0059  
                 i1l1020 0088                   i1l1012 0074                   i1l1014 0075  
                 i1l1006 005E                   i1l1032 00A7                   i1l1024 008D  
                 i1l1008 006E                   i1l1034 00B3                   i1l1026 0093  
                 i1l1018 0080                   i1l1028 0099                   _INTCON 000B  
                 _TRISC0 0438                   _TRISC1 0439                   _TRISC2 043A  
                 _TRISC3 043B                   _TRISC4 043C             ?_serial_init 0070  
                 _gpsdat 0020             LCD_data@data 0032                   _msggps 002A  
 __size_ofi1_LCD_command 0020                   _strcmp 0109                   saved_w 007E  
           LCD_command@i 0033  __end_of__initialization 002C     __size_of_LCD_command 0022  
              ?_LCD_data 0070                ?_LCD_init 0070           __pcstackCOMMON 0070  
           __pidataBANK0 022F                LCD_data@i 0033           i1LCD_data@data 0070  
       i1LCD_command@cmd 0070               __pbssBANK0 0020             ??i1_LCD_data 0070  
          i1_LCD_command 01BA               ??_LCD_data 0032           i1LCD_command@i 0071  
             ??_LCD_init 0035               __pmaintext 00CA               __pintentry 0004  
                ?_strcmp 0070       __end_ofi1_LCD_data 01BA               __stringtab 020B  
         ?i1_LCD_command 0070     __size_of_serial_init 000C                  __ptext1 0133  
                __ptext2 0156                  __ptext3 021B                  __ptext4 01DA  
                __ptext5 0178                  __ptext6 0030                  __ptext7 019A  
                __ptext8 01BA                  __ptext9 0109          __size_of_strcmp 002A  
                _namegps 002B             __size_of_ser 009A                  clrloop0 0228  
   end_of_initialization 002C                  strcmp@r 0075          ??i1_LCD_command 0070  
      __size_of_LCD_data 0022        __size_of_LCD_init 001E           __end_of_strcmp 0133  
    start_initialization 0015              __end_of_ser 00CA            ??_LCD_command 0032  
             init_fetch0 01F8              __pdataBANK0 003A                 ??_strcmp 0072  
            __pbssCOMMON 007D                ___latbits 0002            __pcstackBANK0 0032  
    __end_of_LCD_command 019A              i1LCD_data@i 0071                __pstrings 020B  
      interrupt_function 0004                 _LCD_data 0156                 _LCD_init 01DA  
              clear_ram0 0227            ??_serial_init 0032              __stringbase 0210  
            _LCD_command 0178      __end_of_serial_init 0227       __end_of__stringtab 0211  
               _checkgps 0029                 _name1gps 003A    __end_ofi1_LCD_command 01DA  
          __size_of_main 003F            __size_of_show 0023                 init_ram0 01FC  
               intlevel1 0000               i1_LCD_data 019A                stringcode 020B  
            _serial_init 021B                 strcmp@s1 0076                 strcmp@s2 0070  
               stringdir 020B                 stringtab 020B           LCD_command@cmd 0032  
